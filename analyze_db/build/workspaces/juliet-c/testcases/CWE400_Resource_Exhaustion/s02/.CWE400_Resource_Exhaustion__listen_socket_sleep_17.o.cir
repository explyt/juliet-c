!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc373)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc374)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc375)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc376)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc377)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc378)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc379)
  cir.func private @close(!s32i) -> !s32i loc(#loc380)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc381)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc382)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc384)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc385)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc386)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc30)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc34)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc389)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc390)
        cir.condition(%8) loc(#loc38)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc393)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc394)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc395)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc396)
            %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc397)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc47)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc395)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc49)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc396)
            cir.scope {
              cir.do {
                cir.scope {
                  %15 = cir.const #cir.int<2> : !s32i loc(#loc56)
                  %16 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %17 = cir.const #cir.int<6> : !s32i loc(#loc58)
                  %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
                  cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc400)
                  cir.scope {
                    %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc65)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc65)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc402)
                    cir.if %63 {
                      cir.break loc(#loc67)
                    } loc(#loc403)
                  } loc(#loc401)
                  %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc404)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc70)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc405)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc406)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc75)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc75)
                  %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc407)
                  %25 = cir.const #cir.int<0> : !s32i loc(#loc78)
                  %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc78)
                  %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
                  %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
                  cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc408)
                  %29 = cir.const #cir.int<27015> : !s32i loc(#loc82)
                  %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc82)
                  %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc83)
                  %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                  cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc409)
                  cir.scope {
                    %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                    %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc411)
                    %62 = cir.const #cir.int<16> : !u64i loc(#loc412)
                    %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc412)
                    %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc94)
                    %65 = cir.const #cir.int<1> : !s32i loc(#loc95)
                    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc95)
                    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc413)
                    cir.if %67 {
                      cir.break loc(#loc97)
                    } loc(#loc414)
                  } loc(#loc410)
                  cir.scope {
                    %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %61 = cir.const #cir.int<5> : !s32i loc(#loc101)
                    %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc102)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc103)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc103)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc416)
                    cir.if %65 {
                      cir.break loc(#loc105)
                    } loc(#loc417)
                  } loc(#loc415)
                  %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc107)
                  %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc108)
                  %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc109)
                  cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc418)
                  cir.scope {
                    %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc115)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc115)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc420)
                    cir.if %63 {
                      cir.break loc(#loc117)
                    } loc(#loc421)
                  } loc(#loc419)
                  %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                  %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
                  %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
                  %40 = cir.const #cir.int<3> : !s32i loc(#loc120)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc120)
                  %42 = cir.const #cir.int<4> : !u64i loc(#loc120)
                  %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc120)
                  %44 = cir.const #cir.int<2> : !s32i loc(#loc120)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc120)
                  %46 = cir.binop(add, %43, %45) : !u64i loc(#loc120)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc121)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc121)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc422)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc122)
                  %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc123)
                  %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc123)
                  cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc423)
                  cir.scope {
                    %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc129)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc129)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc425)
                    %64 = cir.ternary(%63, true {
                      %65 = cir.const #true loc(#loc130)
                      cir.yield %65 : !cir.bool loc(#loc130)
                    }, false {
                      %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                      %66 = cir.const #cir.int<0> : !s32i loc(#loc132)
                      %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc426)
                      %68 = cir.ternary(%67, true {
                        %69 = cir.const #true loc(#loc130)
                        cir.yield %69 : !cir.bool loc(#loc130)
                      }, false {
                        %69 = cir.const #false loc(#loc130)
                        cir.yield %69 : !cir.bool loc(#loc130)
                      }) : (!cir.bool) -> !cir.bool loc(#loc130)
                      cir.yield %68 : !cir.bool loc(#loc130)
                    }) : (!cir.bool) -> !cir.bool loc(#loc130)
                    cir.if %64 {
                      cir.break loc(#loc134)
                    } loc(#loc427)
                  } loc(#loc424)
                  %53 = cir.const #cir.int<0> : !s32i loc(#loc135)
                  %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc135)
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                  %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
                  %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc137)
                  cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc428)
                  %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
                  %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc139)
                  cir.store %59, %2 : !s32i, !cir.ptr<!s32i> loc(#loc429)
                } loc(#loc399)
                cir.yield loc(#loc53)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc142)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc142)
                cir.condition(%16) loc(#loc142)
              } loc(#loc398)
            } loc(#loc398)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc146)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc146)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc431)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc149)
              } loc(#loc432)
            } loc(#loc430)
            cir.scope {
              %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc153)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc153)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc434)
              cir.if %18 {
                %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc156)
              } loc(#loc435)
            } loc(#loc433)
          } loc(#loc392)
        } loc(#loc391)
        cir.yield loc(#loc33)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc158)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
        cir.yield loc(#loc388)
      } loc(#loc388)
    } loc(#loc388)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc161)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc438)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc164)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc439)
        cir.condition(%8) loc(#loc165)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc167)
          %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc168)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc21)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc169)
        } loc(#loc440)
        cir.yield loc(#loc160)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc170)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc171)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc441)
        cir.yield loc(#loc437)
      } loc(#loc437)
    } loc(#loc437)
    cir.return loc(#loc23)
  } loc(#loc383)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc443)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc174)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc444)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc176)
    cir.return loc(#loc173)
  } loc(#loc442)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc179)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc446)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc447)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc448)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc188)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc192)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc451)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc195)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc452)
        cir.condition(%8) loc(#loc196)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc455)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc456)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc457)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc458)
            %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc459)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc205)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc205)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc457)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc207)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc207)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc458)
            cir.scope {
              cir.do {
                cir.scope {
                  %15 = cir.const #cir.int<2> : !s32i loc(#loc214)
                  %16 = cir.const #cir.int<1> : !s32i loc(#loc215)
                  %17 = cir.const #cir.int<6> : !s32i loc(#loc216)
                  %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc217)
                  cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc462)
                  cir.scope {
                    %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc223)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc223)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc464)
                    cir.if %63 {
                      cir.break loc(#loc225)
                    } loc(#loc465)
                  } loc(#loc463)
                  %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc466)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc228)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc467)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc468)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc233)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc233)
                  %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc469)
                  %25 = cir.const #cir.int<0> : !s32i loc(#loc235)
                  %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc235)
                  %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
                  %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
                  cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc470)
                  %29 = cir.const #cir.int<27015> : !s32i loc(#loc237)
                  %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc237)
                  %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc238)
                  %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                  cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc471)
                  cir.scope {
                    %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                    %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc473)
                    %62 = cir.const #cir.int<16> : !u64i loc(#loc474)
                    %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc474)
                    %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc248)
                    %65 = cir.const #cir.int<1> : !s32i loc(#loc249)
                    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc249)
                    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc475)
                    cir.if %67 {
                      cir.break loc(#loc251)
                    } loc(#loc476)
                  } loc(#loc472)
                  cir.scope {
                    %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                    %61 = cir.const #cir.int<5> : !s32i loc(#loc255)
                    %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc256)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc257)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc257)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc478)
                    cir.if %65 {
                      cir.break loc(#loc259)
                    } loc(#loc479)
                  } loc(#loc477)
                  %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc260)
                  %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc261)
                  %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc262)
                  %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc263)
                  cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc480)
                  cir.scope {
                    %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc269)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc269)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc482)
                    cir.if %63 {
                      cir.break loc(#loc271)
                    } loc(#loc483)
                  } loc(#loc481)
                  %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                  %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc273)
                  %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc273)
                  %40 = cir.const #cir.int<3> : !s32i loc(#loc274)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc274)
                  %42 = cir.const #cir.int<4> : !u64i loc(#loc274)
                  %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc274)
                  %44 = cir.const #cir.int<2> : !s32i loc(#loc274)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc274)
                  %46 = cir.binop(add, %43, %45) : !u64i loc(#loc274)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc275)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc275)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc484)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc276)
                  %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc277)
                  %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc277)
                  cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc485)
                  cir.scope {
                    %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc282)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc283)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc283)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc487)
                    %64 = cir.ternary(%63, true {
                      %65 = cir.const #true loc(#loc284)
                      cir.yield %65 : !cir.bool loc(#loc284)
                    }, false {
                      %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                      %66 = cir.const #cir.int<0> : !s32i loc(#loc286)
                      %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc488)
                      %68 = cir.ternary(%67, true {
                        %69 = cir.const #true loc(#loc284)
                        cir.yield %69 : !cir.bool loc(#loc284)
                      }, false {
                        %69 = cir.const #false loc(#loc284)
                        cir.yield %69 : !cir.bool loc(#loc284)
                      }) : (!cir.bool) -> !cir.bool loc(#loc284)
                      cir.yield %68 : !cir.bool loc(#loc284)
                    }) : (!cir.bool) -> !cir.bool loc(#loc284)
                    cir.if %64 {
                      cir.break loc(#loc288)
                    } loc(#loc489)
                  } loc(#loc486)
                  %53 = cir.const #cir.int<0> : !s32i loc(#loc289)
                  %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc289)
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                  %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
                  %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc291)
                  cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc490)
                  %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc292)
                  %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc293)
                  cir.store %59, %2 : !s32i, !cir.ptr<!s32i> loc(#loc491)
                } loc(#loc461)
                cir.yield loc(#loc211)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc296)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc296)
                cir.condition(%16) loc(#loc296)
              } loc(#loc460)
            } loc(#loc460)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc300)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc300)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc493)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc303)
              } loc(#loc494)
            } loc(#loc492)
            cir.scope {
              %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc306)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc307)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc307)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc496)
              cir.if %18 {
                %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc309)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc310)
              } loc(#loc497)
            } loc(#loc495)
          } loc(#loc454)
        } loc(#loc453)
        cir.yield loc(#loc191)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc311)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc312)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc498)
        cir.yield loc(#loc450)
      } loc(#loc450)
    } loc(#loc450)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc315)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc500)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc317)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc318)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc501)
        cir.condition(%8) loc(#loc319)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc323)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc324)
            %8 = cir.cmp(gt, %6, %7) : !s32i, !cir.bool loc(#loc504)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc326)
              %11 = cir.const #cir.int<2000> : !s32i loc(#loc327)
              %12 = cir.cmp(le, %10, %11) : !s32i, !cir.bool loc(#loc505)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc325)
                cir.yield %14 : !cir.bool loc(#loc325)
              }, false {
                %14 = cir.const #false loc(#loc325)
                cir.yield %14 : !cir.bool loc(#loc325)
              }) : (!cir.bool) -> !cir.bool loc(#loc325)
              cir.yield %13 : !cir.bool loc(#loc325)
            }, false {
              %10 = cir.const #false loc(#loc325)
              cir.yield %10 : !cir.bool loc(#loc325)
            }) : (!cir.bool) -> !cir.bool loc(#loc325)
            cir.if %9 {
              %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc331)
              %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc331)
              %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc332)
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc178)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc178)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc333)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc179)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc179)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc334)
            } loc(#loc506)
          } loc(#loc503)
        } loc(#loc502)
        cir.yield loc(#loc314)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc335)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc336)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc507)
        cir.yield loc(#loc499)
      } loc(#loc499)
    } loc(#loc499)
    cir.return loc(#loc181)
  } loc(#loc445)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc509)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc510)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc511)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc344)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc345)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc512)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc349)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc514)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc352)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc515)
        cir.condition(%8) loc(#loc353)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<20> : !s32i loc(#loc355)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc517)
        } loc(#loc516)
        cir.yield loc(#loc348)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc357)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc358)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc518)
        cir.yield loc(#loc513)
      } loc(#loc513)
    } loc(#loc513)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc361)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc520)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc363)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc364)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc521)
        cir.condition(%8) loc(#loc365)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc367)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc367)
          %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc368)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc369)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc369)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc370)
        } loc(#loc522)
        cir.yield loc(#loc360)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc371)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc372)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc523)
        cir.yield loc(#loc519)
      } loc(#loc519)
    } loc(#loc519)
    cir.return loc(#loc338)
  } loc(#loc508)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/unistd.h":480:1)
#loc18 = loc("/usr/include/unistd.h":480:43)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":132:19)
#loc22 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":50:1)
#loc23 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":134:1)
#loc24 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":52:5)
#loc25 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":52:9)
#loc26 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":52:11)
#loc27 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":53:5)
#loc28 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":53:9)
#loc29 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":55:14)
#loc30 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":55:13)
#loc31 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":55:5)
#loc32 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:5)
#loc33 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":127:5)
#loc34 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:13)
#loc35 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:9)
#loc36 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:16)
#loc37 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:20)
#loc38 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:18)
#loc39 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":57:5)
#loc40 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":58:9)
#loc41 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":126:9)
#loc42 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":63:13)
#loc43 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":63:17)
#loc44 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":64:13)
#loc45 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":64:32)
#loc46 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":65:13)
#loc47 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":65:35)
#loc48 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":66:13)
#loc49 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":66:35)
#loc50 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":67:13)
#loc51 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":67:45)
#loc52 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":68:13)
#loc53 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":111:21)
#loc54 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":69:13)
#loc55 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":110:13)
#loc56 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":78:39)
#loc57 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":78:48)
#loc58 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":78:61)
#loc59 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":78:32)
#loc60 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":78:17)
#loc61 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":78:72)
#loc62 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":79:17)
#loc63 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":82:17)
#loc64 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":79:21)
#loc65 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":79:37)
#loc66 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":80:17)
#loc67 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":81:21)
#loc68 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":83:24)
#loc69 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":83:25)
#loc70 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":83:34)
#loc71 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":83:37)
#loc72 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":83:51)
#loc73 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":83:17)
#loc74 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":83:52)
#loc75 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":84:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":84:17)
#loc78 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":85:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":85:17)
#loc82 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":86:42)
#loc83 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":86:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":86:17)
#loc86 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":86:50)
#loc87 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:17)
#loc88 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":90:17)
#loc89 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:26)
#loc90 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:58)
#loc91 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:59)
#loc92 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:68)
#loc93 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:82)
#loc94 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:21)
#loc95 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":87:88)
#loc96 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":88:17)
#loc97 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":89:21)
#loc98 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":91:17)
#loc99 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":94:17)
#loc100 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":91:28)
#loc101 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":91:42)
#loc102 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":91:21)
#loc103 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":91:61)
#loc104 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":92:17)
#loc105 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":93:21)
#loc106 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":95:39)
#loc107 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":95:53)
#loc108 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":95:59)
#loc109 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":95:32)
#loc110 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":95:17)
#loc111 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":95:63)
#loc112 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":96:17)
#loc113 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":99:17)
#loc114 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":96:21)
#loc115 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":96:37)
#loc116 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":97:17)
#loc117 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":98:21)
#loc118 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:35)
#loc119 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:49)
#loc120 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:62)
#loc121 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:80)
#loc122 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:83)
#loc123 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:30)
#loc124 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:17)
#loc125 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":101:84)
#loc126 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":102:17)
#loc127 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":105:17)
#loc128 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":102:21)
#loc129 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":102:35)
#loc130 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":102:48)
#loc131 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":102:51)
#loc132 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":102:65)
#loc133 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":103:17)
#loc134 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":104:21)
#loc135 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":107:43)
#loc136 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":107:29)
#loc137 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":107:17)
#loc138 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":109:30)
#loc139 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":109:25)
#loc140 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":109:17)
#loc141 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":109:41)
#loc142 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":111:20)
#loc143 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":112:13)
#loc144 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":115:13)
#loc145 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":112:17)
#loc146 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":112:33)
#loc147 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":113:13)
#loc148 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":114:30)
#loc149 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":114:17)
#loc150 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":116:13)
#loc151 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":119:13)
#loc152 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":116:17)
#loc153 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":116:33)
#loc154 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":117:13)
#loc155 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":118:30)
#loc156 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":118:17)
#loc157 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:24)
#loc158 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":56:23)
#loc159 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:5)
#loc160 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":133:5)
#loc161 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:13)
#loc162 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:9)
#loc163 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:16)
#loc164 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:20)
#loc165 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:18)
#loc166 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":129:5)
#loc167 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":131:15)
#loc168 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":131:9)
#loc169 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":132:9)
#loc170 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:24)
#loc171 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":128:23)
#loc172 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":254:1)
#loc173 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":258:1)
#loc174 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":256:5)
#loc175 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":256:13)
#loc176 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":257:5)
#loc177 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":257:13)
#loc178 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":225:23)
#loc179 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":229:23)
#loc180 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":141:1)
#loc181 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":232:1)
#loc182 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":143:5)
#loc183 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":143:9)
#loc184 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":143:11)
#loc185 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":144:5)
#loc186 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":144:9)
#loc187 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":146:14)
#loc188 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":146:13)
#loc189 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":146:5)
#loc190 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:5)
#loc191 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":218:5)
#loc192 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:13)
#loc193 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:9)
#loc194 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:16)
#loc195 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:20)
#loc196 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:18)
#loc197 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":148:5)
#loc198 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":149:9)
#loc199 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":217:9)
#loc200 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":154:13)
#loc201 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":154:17)
#loc202 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":155:13)
#loc203 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":155:32)
#loc204 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":156:13)
#loc205 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":156:35)
#loc206 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":157:13)
#loc207 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":157:35)
#loc208 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":158:13)
#loc209 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":158:45)
#loc210 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":159:13)
#loc211 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":202:21)
#loc212 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":160:13)
#loc213 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":201:13)
#loc214 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":169:39)
#loc215 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":169:48)
#loc216 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":169:61)
#loc217 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":169:32)
#loc218 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":169:17)
#loc219 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":169:72)
#loc220 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":170:17)
#loc221 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":173:17)
#loc222 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":170:21)
#loc223 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":170:37)
#loc224 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":171:17)
#loc225 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":172:21)
#loc226 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":174:24)
#loc227 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":174:25)
#loc228 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":174:34)
#loc229 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":174:37)
#loc230 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":174:51)
#loc231 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":174:17)
#loc232 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":174:52)
#loc233 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":175:38)
#loc234 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":175:17)
#loc235 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":176:43)
#loc236 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":176:17)
#loc237 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":177:42)
#loc238 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":177:36)
#loc239 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":177:17)
#loc240 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":177:50)
#loc241 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:17)
#loc242 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":181:17)
#loc243 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:26)
#loc244 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:58)
#loc245 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:59)
#loc246 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:68)
#loc247 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:82)
#loc248 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:21)
#loc249 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":178:88)
#loc250 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":179:17)
#loc251 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":180:21)
#loc252 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":182:17)
#loc253 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":185:17)
#loc254 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":182:28)
#loc255 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":182:42)
#loc256 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":182:21)
#loc257 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":182:61)
#loc258 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":183:17)
#loc259 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":184:21)
#loc260 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":186:39)
#loc261 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":186:53)
#loc262 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":186:59)
#loc263 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":186:32)
#loc264 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":186:17)
#loc265 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":186:63)
#loc266 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":187:17)
#loc267 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":190:17)
#loc268 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":187:21)
#loc269 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":187:37)
#loc270 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":188:17)
#loc271 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":189:21)
#loc272 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:35)
#loc273 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:49)
#loc274 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:62)
#loc275 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:80)
#loc276 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:83)
#loc277 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:30)
#loc278 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:17)
#loc279 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":192:84)
#loc280 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":193:17)
#loc281 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":196:17)
#loc282 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":193:21)
#loc283 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":193:35)
#loc284 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":193:48)
#loc285 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":193:51)
#loc286 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":193:65)
#loc287 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":194:17)
#loc288 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":195:21)
#loc289 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":198:43)
#loc290 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":198:29)
#loc291 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":198:17)
#loc292 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":200:30)
#loc293 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":200:25)
#loc294 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":200:17)
#loc295 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":200:41)
#loc296 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":202:20)
#loc297 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":203:13)
#loc298 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":206:13)
#loc299 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":203:17)
#loc300 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":203:33)
#loc301 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":204:13)
#loc302 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":205:30)
#loc303 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":205:17)
#loc304 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":207:13)
#loc305 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":210:13)
#loc306 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":207:17)
#loc307 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":207:33)
#loc308 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":208:13)
#loc309 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":209:30)
#loc310 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":209:17)
#loc311 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:24)
#loc312 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":147:23)
#loc313 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:5)
#loc314 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":231:5)
#loc315 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:13)
#loc316 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:9)
#loc317 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:16)
#loc318 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:20)
#loc319 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:18)
#loc320 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":220:5)
#loc321 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":222:9)
#loc322 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":230:9)
#loc323 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":222:13)
#loc324 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":222:21)
#loc325 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":222:23)
#loc326 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":222:26)
#loc327 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":222:35)
#loc328 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":223:9)
#loc329 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":226:9)
#loc330 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":228:9)
#loc331 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":224:19)
#loc332 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":224:13)
#loc333 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":225:13)
#loc334 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":229:13)
#loc335 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:24)
#loc336 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":219:23)
#loc337 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":235:1)
#loc338 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":252:1)
#loc339 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":237:5)
#loc340 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":237:9)
#loc341 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":237:11)
#loc342 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":238:5)
#loc343 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":238:9)
#loc344 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":240:14)
#loc345 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":240:13)
#loc346 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":240:5)
#loc347 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:5)
#loc348 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":245:5)
#loc349 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:13)
#loc350 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:9)
#loc351 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:16)
#loc352 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:20)
#loc353 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:18)
#loc354 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":242:5)
#loc355 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":244:17)
#loc356 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":244:9)
#loc357 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:24)
#loc358 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":241:23)
#loc359 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:5)
#loc360 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":251:5)
#loc361 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:13)
#loc362 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:9)
#loc363 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:16)
#loc364 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:20)
#loc365 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:18)
#loc366 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":247:5)
#loc367 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":249:15)
#loc368 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":249:9)
#loc369 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":250:19)
#loc370 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":250:9)
#loc371 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:24)
#loc372 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_17.c":246:23)
#loc373 = loc(fused[#loc1, #loc2])
#loc374 = loc(fused[#loc3, #loc4])
#loc375 = loc(fused[#loc5, #loc6])
#loc376 = loc(fused[#loc7, #loc8])
#loc377 = loc(fused[#loc9, #loc10])
#loc378 = loc(fused[#loc11, #loc12])
#loc379 = loc(fused[#loc13, #loc14])
#loc380 = loc(fused[#loc15, #loc16])
#loc381 = loc(fused[#loc17, #loc18])
#loc382 = loc(fused[#loc19, #loc20])
#loc383 = loc(fused[#loc22, #loc23])
#loc384 = loc(fused[#loc24, #loc25])
#loc385 = loc(fused[#loc24, #loc26])
#loc386 = loc(fused[#loc27, #loc28])
#loc387 = loc(fused[#loc31, #loc29])
#loc388 = loc(fused[#loc32, #loc33])
#loc389 = loc(fused[#loc35, #loc34])
#loc390 = loc(fused[#loc36, #loc37])
#loc391 = loc(fused[#loc39, #loc33])
#loc392 = loc(fused[#loc40, #loc41])
#loc393 = loc(fused[#loc42, #loc43])
#loc394 = loc(fused[#loc44, #loc45])
#loc395 = loc(fused[#loc46, #loc47])
#loc396 = loc(fused[#loc48, #loc49])
#loc397 = loc(fused[#loc50, #loc51])
#loc398 = loc(fused[#loc52, #loc53])
#loc399 = loc(fused[#loc54, #loc55])
#loc400 = loc(fused[#loc60, #loc61])
#loc401 = loc(fused[#loc62, #loc63])
#loc402 = loc(fused[#loc64, #loc65])
#loc403 = loc(fused[#loc66, #loc63])
#loc404 = loc(fused[#loc68, #loc69])
#loc405 = loc(fused[#loc71, #loc72])
#loc406 = loc(fused[#loc73, #loc74])
#loc407 = loc(fused[#loc77, #loc75])
#loc408 = loc(fused[#loc81, #loc78])
#loc409 = loc(fused[#loc85, #loc86])
#loc410 = loc(fused[#loc87, #loc88])
#loc411 = loc(fused[#loc90, #loc91])
#loc412 = loc(fused[#loc92, #loc93])
#loc413 = loc(fused[#loc94, #loc95])
#loc414 = loc(fused[#loc96, #loc88])
#loc415 = loc(fused[#loc98, #loc99])
#loc416 = loc(fused[#loc102, #loc103])
#loc417 = loc(fused[#loc104, #loc99])
#loc418 = loc(fused[#loc110, #loc111])
#loc419 = loc(fused[#loc112, #loc113])
#loc420 = loc(fused[#loc114, #loc115])
#loc421 = loc(fused[#loc116, #loc113])
#loc422 = loc(fused[#loc120, #loc121])
#loc423 = loc(fused[#loc124, #loc125])
#loc424 = loc(fused[#loc126, #loc127])
#loc425 = loc(fused[#loc128, #loc129])
#loc426 = loc(fused[#loc131, #loc132])
#loc427 = loc(fused[#loc133, #loc127])
#loc428 = loc(fused[#loc137, #loc135])
#loc429 = loc(fused[#loc140, #loc141])
#loc430 = loc(fused[#loc143, #loc144])
#loc431 = loc(fused[#loc145, #loc146])
#loc432 = loc(fused[#loc147, #loc144])
#loc433 = loc(fused[#loc150, #loc151])
#loc434 = loc(fused[#loc152, #loc153])
#loc435 = loc(fused[#loc154, #loc151])
#loc436 = loc(fused[#loc158, #loc157])
#loc437 = loc(fused[#loc159, #loc160])
#loc438 = loc(fused[#loc162, #loc161])
#loc439 = loc(fused[#loc163, #loc164])
#loc440 = loc(fused[#loc166, #loc160])
#loc441 = loc(fused[#loc171, #loc170])
#loc442 = loc(fused[#loc172, #loc173])
#loc443 = loc(fused[#loc174, #loc175])
#loc444 = loc(fused[#loc176, #loc177])
#loc445 = loc(fused[#loc180, #loc181])
#loc446 = loc(fused[#loc182, #loc183])
#loc447 = loc(fused[#loc182, #loc184])
#loc448 = loc(fused[#loc185, #loc186])
#loc449 = loc(fused[#loc189, #loc187])
#loc450 = loc(fused[#loc190, #loc191])
#loc451 = loc(fused[#loc193, #loc192])
#loc452 = loc(fused[#loc194, #loc195])
#loc453 = loc(fused[#loc197, #loc191])
#loc454 = loc(fused[#loc198, #loc199])
#loc455 = loc(fused[#loc200, #loc201])
#loc456 = loc(fused[#loc202, #loc203])
#loc457 = loc(fused[#loc204, #loc205])
#loc458 = loc(fused[#loc206, #loc207])
#loc459 = loc(fused[#loc208, #loc209])
#loc460 = loc(fused[#loc210, #loc211])
#loc461 = loc(fused[#loc212, #loc213])
#loc462 = loc(fused[#loc218, #loc219])
#loc463 = loc(fused[#loc220, #loc221])
#loc464 = loc(fused[#loc222, #loc223])
#loc465 = loc(fused[#loc224, #loc221])
#loc466 = loc(fused[#loc226, #loc227])
#loc467 = loc(fused[#loc229, #loc230])
#loc468 = loc(fused[#loc231, #loc232])
#loc469 = loc(fused[#loc234, #loc233])
#loc470 = loc(fused[#loc236, #loc235])
#loc471 = loc(fused[#loc239, #loc240])
#loc472 = loc(fused[#loc241, #loc242])
#loc473 = loc(fused[#loc244, #loc245])
#loc474 = loc(fused[#loc246, #loc247])
#loc475 = loc(fused[#loc248, #loc249])
#loc476 = loc(fused[#loc250, #loc242])
#loc477 = loc(fused[#loc252, #loc253])
#loc478 = loc(fused[#loc256, #loc257])
#loc479 = loc(fused[#loc258, #loc253])
#loc480 = loc(fused[#loc264, #loc265])
#loc481 = loc(fused[#loc266, #loc267])
#loc482 = loc(fused[#loc268, #loc269])
#loc483 = loc(fused[#loc270, #loc267])
#loc484 = loc(fused[#loc274, #loc275])
#loc485 = loc(fused[#loc278, #loc279])
#loc486 = loc(fused[#loc280, #loc281])
#loc487 = loc(fused[#loc282, #loc283])
#loc488 = loc(fused[#loc285, #loc286])
#loc489 = loc(fused[#loc287, #loc281])
#loc490 = loc(fused[#loc291, #loc289])
#loc491 = loc(fused[#loc294, #loc295])
#loc492 = loc(fused[#loc297, #loc298])
#loc493 = loc(fused[#loc299, #loc300])
#loc494 = loc(fused[#loc301, #loc298])
#loc495 = loc(fused[#loc304, #loc305])
#loc496 = loc(fused[#loc306, #loc307])
#loc497 = loc(fused[#loc308, #loc305])
#loc498 = loc(fused[#loc312, #loc311])
#loc499 = loc(fused[#loc313, #loc314])
#loc500 = loc(fused[#loc316, #loc315])
#loc501 = loc(fused[#loc317, #loc318])
#loc502 = loc(fused[#loc320, #loc314])
#loc503 = loc(fused[#loc321, #loc322])
#loc504 = loc(fused[#loc323, #loc324])
#loc505 = loc(fused[#loc326, #loc327])
#loc506 = loc(fused[#loc328, #loc329, #loc330, #loc322])
#loc507 = loc(fused[#loc336, #loc335])
#loc508 = loc(fused[#loc337, #loc338])
#loc509 = loc(fused[#loc339, #loc340])
#loc510 = loc(fused[#loc339, #loc341])
#loc511 = loc(fused[#loc342, #loc343])
#loc512 = loc(fused[#loc346, #loc344])
#loc513 = loc(fused[#loc347, #loc348])
#loc514 = loc(fused[#loc350, #loc349])
#loc515 = loc(fused[#loc351, #loc352])
#loc516 = loc(fused[#loc354, #loc348])
#loc517 = loc(fused[#loc356, #loc355])
#loc518 = loc(fused[#loc358, #loc357])
#loc519 = loc(fused[#loc359, #loc360])
#loc520 = loc(fused[#loc362, #loc361])
#loc521 = loc(fused[#loc363, #loc364])
#loc522 = loc(fused[#loc366, #loc360])
#loc523 = loc(fused[#loc372, #loc371])
