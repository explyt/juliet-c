!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc84 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:40)
#loc125 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:40)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc136)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printFloatLine(!cir.float) loc(#loc139)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc141)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %3 ^bb2, ^bb10 loc(#loc144)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_float, %4 : !s32i), !cir.double loc(#loc17)
    cir.store %5, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc142)
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // pred: ^bb3
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc26)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc27)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc147)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc34)
    %15 = cir.call @atof(%14) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc35)
    cir.store %15, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc149)
    cir.br ^bb7 loc(#loc32)
  ^bb6:  // pred: ^bb4
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb7 loc(#loc25)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc39)
    %19 = cir.cast(floating, %18 : !cir.double), !cir.float loc(#loc39)
    cir.call @printFloatLine(%19) : (!cir.float) -> () loc(#loc40)
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc19)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc13)
  } loc(#loc140)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Value is too small or large to be represented as a float\00" : !cir.array<!s8i x 57>> : !cir.array<!s8i x 57> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc154)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb24 loc(#loc59)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %7 = cir.cast(int_to_float, %6 : !s32i), !cir.double loc(#loc54)
    cir.store %7, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc155)
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // pred: ^bb4
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc66)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc67)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc69)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc70)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc160)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc161)
  ^bb6:  // pred: ^bb5
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc74)
    %17 = cir.call @atof(%16) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc75)
    cir.store %17, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc162)
    cir.br ^bb8 loc(#loc72)
  ^bb7:  // pred: ^bb5
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc163)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc82)
    %21 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc83)
    %22 = cir.cast(floating, %21 : !cir.float), !cir.double loc(#loc83)
    %23 = cir.cmp(gt, %20, %22) : !cir.double, !cir.bool loc(#loc164)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc84)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #true loc(#loc84)
    cir.br ^bb17(%24 : !cir.bool) loc(#loc84)
  ^bb12:  // pred: ^bb10
    %25 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc85)
    %26 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc86)
    %27 = cir.cast(floating, %26 : !cir.float), !cir.double loc(#loc86)
    %28 = cir.cmp(lt, %25, %27) : !cir.double, !cir.bool loc(#loc165)
    cir.brcond %28 ^bb13, ^bb14 loc(#loc84)
  ^bb13:  // pred: ^bb12
    %29 = cir.const #true loc(#loc84)
    cir.br ^bb15(%29 : !cir.bool) loc(#loc84)
  ^bb14:  // pred: ^bb12
    %30 = cir.const #false loc(#loc84)
    cir.br ^bb15(%30 : !cir.bool) loc(#loc84)
  ^bb15(%31: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:40)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc84)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17(%31 : !cir.bool) loc(#loc84)
  ^bb17(%32: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:40)):  // 2 preds: ^bb11, ^bb16
    cir.br ^bb18 loc(#loc84)
  ^bb18:  // pred: ^bb17
    cir.brcond %32 ^bb19, ^bb20 loc(#loc166)
  ^bb19:  // pred: ^bb18
    %33 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc48)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb21 loc(#loc88)
  ^bb20:  // pred: ^bb18
    %35 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc91)
    %36 = cir.cast(floating, %35 : !cir.double), !cir.float loc(#loc91)
    cir.call @printFloatLine(%36) : (!cir.float) -> () loc(#loc92)
    cir.br ^bb21 loc(#loc81)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc81)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc63)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc56)
  ^bb24:  // 2 preds: ^bb2, ^bb23
    cir.br ^bb25 loc(#loc56)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc50)
  } loc(#loc153)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc168)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %3 ^bb2, ^bb23 loc(#loc171)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %5 = cir.cast(int_to_float, %4 : !s32i), !cir.double loc(#loc98)
    cir.store %5, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc169)
    cir.br ^bb4 loc(#loc173)
  ^bb4:  // pred: ^bb3
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc107)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc108)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc110)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc175)
  ^bb5:  // pred: ^bb4
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc115)
    %15 = cir.call @atof(%14) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc116)
    cir.store %15, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc176)
    cir.br ^bb7 loc(#loc113)
  ^bb6:  // pred: ^bb4
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc177)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc123)
    %19 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc124)
    %20 = cir.cast(floating, %19 : !cir.float), !cir.double loc(#loc124)
    %21 = cir.cmp(gt, %18, %20) : !cir.double, !cir.bool loc(#loc178)
    cir.brcond %21 ^bb10, ^bb11 loc(#loc125)
  ^bb10:  // pred: ^bb9
    %22 = cir.const #true loc(#loc125)
    cir.br ^bb16(%22 : !cir.bool) loc(#loc125)
  ^bb11:  // pred: ^bb9
    %23 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc126)
    %24 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc127)
    %25 = cir.cast(floating, %24 : !cir.float), !cir.double loc(#loc127)
    %26 = cir.cmp(lt, %23, %25) : !cir.double, !cir.bool loc(#loc179)
    cir.brcond %26 ^bb12, ^bb13 loc(#loc125)
  ^bb12:  // pred: ^bb11
    %27 = cir.const #true loc(#loc125)
    cir.br ^bb14(%27 : !cir.bool) loc(#loc125)
  ^bb13:  // pred: ^bb11
    %28 = cir.const #false loc(#loc125)
    cir.br ^bb14(%28 : !cir.bool) loc(#loc125)
  ^bb14(%29: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:40)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc125)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16(%29 : !cir.bool) loc(#loc125)
  ^bb16(%30: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:40)):  // 2 preds: ^bb10, ^bb15
    cir.br ^bb17 loc(#loc125)
  ^bb17:  // pred: ^bb16
    cir.brcond %30 ^bb18, ^bb19 loc(#loc180)
  ^bb18:  // pred: ^bb17
    %31 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc131)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.br ^bb20 loc(#loc129)
  ^bb19:  // pred: ^bb17
    %33 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc133)
    %34 = cir.cast(floating, %33 : !cir.double), !cir.float loc(#loc133)
    cir.call @printFloatLine(%34) : (!cir.float) -> () loc(#loc134)
    cir.br ^bb20 loc(#loc122)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc122)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc104)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc100)
  ^bb23:  // 2 preds: ^bb1, ^bb22
    cir.br ^bb24 loc(#loc100)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc94)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":42:27)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":22:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":22:39)
#loc12 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":23:1)
#loc13 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":48:1)
#loc14 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":28:13)
#loc15 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":28:45)
#loc16 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":29:13)
#loc17 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":29:35)
#loc18 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":25:5)
#loc19 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":47:5)
#loc20 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":25:8)
#loc21 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":26:5)
#loc22 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":27:9)
#loc23 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":46:9)
#loc24 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":35:13)
#loc25 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":43:13)
#loc26 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":35:23)
#loc27 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":35:36)
#loc28 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":35:53)
#loc29 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":35:17)
#loc30 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":35:63)
#loc31 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":36:13)
#loc32 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":39:13)
#loc33 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":41:13)
#loc34 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":38:37)
#loc35 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":38:32)
#loc36 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":38:17)
#loc37 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":38:48)
#loc38 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":42:17)
#loc39 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":45:35)
#loc40 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":45:13)
#loc41 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":129:1)
#loc42 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":133:1)
#loc43 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":131:5)
#loc44 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":131:11)
#loc45 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":132:5)
#loc46 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":132:11)
#loc47 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":60:19)
#loc48 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":84:27)
#loc49 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":55:1)
#loc50 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":92:1)
#loc51 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":65:13)
#loc52 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":65:45)
#loc53 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":66:13)
#loc54 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":66:35)
#loc55 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":57:5)
#loc56 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":91:5)
#loc57 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":57:8)
#loc58 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":58:5)
#loc59 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":61:5)
#loc60 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":63:5)
#loc61 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":60:9)
#loc62 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":64:9)
#loc63 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":90:9)
#loc64 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":72:13)
#loc65 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":80:13)
#loc66 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":72:23)
#loc67 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":72:36)
#loc68 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":72:53)
#loc69 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":72:17)
#loc70 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":72:63)
#loc71 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":73:13)
#loc72 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":76:13)
#loc73 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":78:13)
#loc74 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":75:37)
#loc75 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":75:32)
#loc76 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":75:17)
#loc77 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":75:48)
#loc78 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":79:27)
#loc79 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":79:17)
#loc80 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:13)
#loc81 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":89:13)
#loc82 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:17)
#loc83 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:32)
#loc85 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:43)
#loc86 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":82:58)
#loc87 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":83:13)
#loc88 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":85:13)
#loc89 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":87:13)
#loc90 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":84:17)
#loc91 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":88:39)
#loc92 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":88:17)
#loc93 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":95:1)
#loc94 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":127:1)
#loc95 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":100:13)
#loc96 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":100:45)
#loc97 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":101:13)
#loc98 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":101:35)
#loc99 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":97:5)
#loc100 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":126:5)
#loc101 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":97:8)
#loc102 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":98:5)
#loc103 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":99:9)
#loc104 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":125:9)
#loc105 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":107:13)
#loc106 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":115:13)
#loc107 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":107:23)
#loc108 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":107:36)
#loc109 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":107:53)
#loc110 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":107:17)
#loc111 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":107:63)
#loc112 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":108:13)
#loc113 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":111:13)
#loc114 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":113:13)
#loc115 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":110:37)
#loc116 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":110:32)
#loc117 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":110:17)
#loc118 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":110:48)
#loc119 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":114:27)
#loc120 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":114:17)
#loc121 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:13)
#loc122 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":124:13)
#loc123 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:17)
#loc124 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:32)
#loc126 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:43)
#loc127 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":117:58)
#loc128 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":118:13)
#loc129 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":120:13)
#loc130 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":122:13)
#loc131 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":119:27)
#loc132 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":119:17)
#loc133 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":123:39)
#loc134 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_02.c":123:17)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc16, #loc17])
#loc143 = loc(fused[#loc18, #loc19])
#loc144 = loc(fused[#loc21, #loc19])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc24, #loc25])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc149 = loc(fused[#loc36, #loc37])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc43, #loc44])
#loc152 = loc(fused[#loc45, #loc46])
#loc153 = loc(fused[#loc49, #loc50])
#loc154 = loc(fused[#loc51, #loc52])
#loc155 = loc(fused[#loc53, #loc54])
#loc156 = loc(fused[#loc55, #loc56])
#loc157 = loc(fused[#loc58, #loc59, #loc60, #loc56])
#loc158 = loc(fused[#loc62, #loc63])
#loc159 = loc(fused[#loc64, #loc65])
#loc160 = loc(fused[#loc69, #loc70])
#loc161 = loc(fused[#loc71, #loc72, #loc73, #loc65])
#loc162 = loc(fused[#loc76, #loc77])
#loc163 = loc(fused[#loc80, #loc81])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc85, #loc86])
#loc166 = loc(fused[#loc87, #loc88, #loc89, #loc81])
#loc167 = loc(fused[#loc93, #loc94])
#loc168 = loc(fused[#loc95, #loc96])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc102, #loc100])
#loc172 = loc(fused[#loc103, #loc104])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc110, #loc111])
#loc175 = loc(fused[#loc112, #loc113, #loc114, #loc106])
#loc176 = loc(fused[#loc117, #loc118])
#loc177 = loc(fused[#loc121, #loc122])
#loc178 = loc(fused[#loc123, #loc124])
#loc179 = loc(fused[#loc126, #loc127])
#loc180 = loc(fused[#loc128, #loc129, #loc130, #loc122])
