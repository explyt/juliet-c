!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc173 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":178:10)
#loc174 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":178:14)
#loc175 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":178:20)
#loc176 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":178:32)
#loc261 = loc(fused[#loc173, #loc174])
#loc262 = loc(fused[#loc175, #loc176])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.return %2 : !s32i loc(#loc190)
  } loc(#loc189)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc191)
  cir.func private @printLongLongLine(!s64i) loc(#loc192)
  cir.func @_ZN34CWE401_Memory_Leak__new_int64_t_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc195)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc197)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc199)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc22)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc199)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc200)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc24)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc201)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc28)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc29)
      } loc(#loc198)
    } loc(#loc196)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc32)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc203)
      cir.if %3 {
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc10)
  } loc(#loc193)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc37)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.return %2 : !s32i loc(#loc206)
  } loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc207)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc210)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc50)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc212)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc214)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc55)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc214)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc215)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc57)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc58)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc216)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc60)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc61)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc62)
      } loc(#loc213)
    } loc(#loc211)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc65)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc218)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc71)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc71)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc55)
      } loc(#loc219)
    } loc(#loc217)
    cir.return loc(#loc43)
  } loc(#loc208)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc222)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc80)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc224)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc226)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc85)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc226)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc227)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc87)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc88)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc228)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc90)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc91)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc92)
      } loc(#loc225)
    } loc(#loc223)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc95)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc230)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc98)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc98)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc85)
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc73)
  } loc(#loc220)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc234)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc107)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc236)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc112)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc112)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc113)
      } else {
        %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc238)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc239)
        %5 = cir.const #cir.int<5> : !s64i loc(#loc118)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc119)
        cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc240)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc121)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc122)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc123)
      } loc(#loc237)
    } loc(#loc235)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc126)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc242)
      cir.if %3 {
      } loc(#loc243)
    } loc(#loc241)
    cir.return loc(#loc100)
  } loc(#loc232)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc245)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc133)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc246)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc137)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc248)
      cir.if %3 {
        %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc250)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc251)
        %5 = cir.const #cir.int<5> : !s64i loc(#loc144)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc145)
        cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc252)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc147)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc148)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc149)
      } loc(#loc249)
    } loc(#loc247)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc152)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc254)
      cir.if %3 {
      } loc(#loc255)
    } loc(#loc253)
    cir.return loc(#loc130)
  } loc(#loc244)
  cir.func @_ZN34CWE401_Memory_Leak__new_int64_t_084goodEv() extra(#fn_attr) {
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodB2G1Ev() : () -> () loc(#loc157)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodB2G2Ev() : () -> () loc(#loc158)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodG2B1Ev() : () -> () loc(#loc159)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_08L8goodG2B2Ev() : () -> () loc(#loc160)
    cir.return loc(#loc156)
  } loc(#loc256)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc257)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc258)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc170)
  cir.func @main(%arg0: !s32i loc(fused[#loc173, #loc174]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc175, #loc176])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc262)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc178)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc179)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc179)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc180)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc167)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_084goodEv() : () -> () loc(#loc182)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc168)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc169)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_083badEv() : () -> () loc(#loc185)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc170)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc187)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %15 : !s32i loc(#loc263)
  } loc(#loc260)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_08.cpp":0:0)
#loc1 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":27:1)
#loc2 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":30:1)
#loc3 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":29:12)
#loc4 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":29:5)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":42:1)
#loc10 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":59:1)
#loc11 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":44:5)
#loc12 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":44:15)
#loc13 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":45:12)
#loc14 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":45:5)
#loc15 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":46:5)
#loc16 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":53:5)
#loc17 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":46:8)
#loc18 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":46:26)
#loc19 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":47:5)
#loc20 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":49:16)
#loc21 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":49:20)
#loc22 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":42:6)
#loc23 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":49:9)
#loc24 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":51:17)
#loc25 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":51:10)
#loc26 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":51:9)
#loc27 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":52:28)
#loc28 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":52:27)
#loc29 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":52:9)
#loc30 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":54:5)
#loc31 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":58:5)
#loc32 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":54:8)
#loc33 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":54:26)
#loc34 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":55:5)
#loc35 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":32:1)
#loc36 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":35:1)
#loc37 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":34:12)
#loc38 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":34:5)
#loc39 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":81:19)
#loc40 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc41 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc42 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":66:1)
#loc43 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":88:1)
#loc44 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":68:5)
#loc45 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":68:15)
#loc46 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":69:12)
#loc47 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":69:5)
#loc48 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":70:5)
#loc49 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":77:5)
#loc50 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":70:8)
#loc51 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":70:26)
#loc52 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":71:5)
#loc53 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":73:16)
#loc54 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":73:20)
#loc55 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":66:13)
#loc56 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":73:9)
#loc57 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":75:17)
#loc58 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":75:10)
#loc59 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":75:9)
#loc60 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":76:28)
#loc61 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":76:27)
#loc62 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":76:9)
#loc63 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":78:5)
#loc64 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":87:5)
#loc65 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":78:8)
#loc66 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":78:27)
#loc67 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":79:5)
#loc68 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":82:5)
#loc69 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":84:5)
#loc70 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":81:9)
#loc71 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":86:16)
#loc72 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":91:1)
#loc73 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":108:1)
#loc74 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":93:5)
#loc75 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":93:15)
#loc76 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":94:12)
#loc77 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":94:5)
#loc78 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":95:5)
#loc79 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":102:5)
#loc80 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":95:8)
#loc81 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":95:26)
#loc82 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":96:5)
#loc83 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":98:16)
#loc84 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":98:20)
#loc85 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":91:13)
#loc86 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":98:9)
#loc87 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":100:17)
#loc88 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":100:10)
#loc89 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":100:9)
#loc90 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":101:28)
#loc91 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":101:27)
#loc92 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":101:9)
#loc93 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":103:5)
#loc94 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":107:5)
#loc95 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":103:8)
#loc96 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":103:26)
#loc97 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":104:5)
#loc98 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":106:16)
#loc99 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":111:1)
#loc100 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":134:1)
#loc101 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":113:5)
#loc102 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":113:15)
#loc103 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":114:12)
#loc104 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":114:5)
#loc105 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":115:5)
#loc106 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":128:5)
#loc107 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":115:8)
#loc108 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":115:27)
#loc109 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":116:5)
#loc110 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":119:5)
#loc111 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":121:5)
#loc112 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":118:19)
#loc113 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":118:9)
#loc114 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":123:9)
#loc115 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":123:17)
#loc116 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":124:9)
#loc117 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":124:17)
#loc118 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":126:17)
#loc119 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":126:10)
#loc120 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":126:9)
#loc121 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":127:28)
#loc122 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":127:27)
#loc123 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":127:9)
#loc124 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":129:5)
#loc125 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":133:5)
#loc126 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":129:8)
#loc127 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":129:26)
#loc128 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":130:5)
#loc129 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":137:1)
#loc130 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":155:1)
#loc131 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":139:5)
#loc132 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":139:15)
#loc133 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":140:12)
#loc134 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":140:5)
#loc135 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":141:5)
#loc136 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":149:5)
#loc137 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":141:8)
#loc138 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":141:26)
#loc139 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":142:5)
#loc140 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":144:9)
#loc141 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":144:17)
#loc142 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":145:9)
#loc143 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":145:17)
#loc144 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":147:17)
#loc145 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":147:10)
#loc146 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":147:9)
#loc147 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":148:28)
#loc148 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":148:27)
#loc149 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":148:9)
#loc150 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":150:5)
#loc151 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":154:5)
#loc152 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":150:8)
#loc153 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":150:26)
#loc154 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":151:5)
#loc155 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":157:1)
#loc156 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":163:1)
#loc157 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":159:5)
#loc158 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":160:5)
#loc159 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":161:5)
#loc160 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":162:5)
#loc161 = loc("/usr/include/stdlib.h":575:1)
#loc162 = loc("/usr/include/stdlib.h":575:41)
#loc163 = loc("/usr/include/time.h":76:1)
#loc164 = loc("/usr/include/time.h":76:38)
#loc165 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc166 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc167 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":183:15)
#loc168 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":185:15)
#loc169 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":188:15)
#loc170 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":190:15)
#loc171 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":178:1)
#loc172 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":193:1)
#loc177 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":179:1)
#loc178 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":181:27)
#loc179 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":181:22)
#loc180 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":181:5)
#loc181 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":183:5)
#loc182 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":184:5)
#loc183 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":185:5)
#loc184 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":188:5)
#loc185 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":189:5)
#loc186 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":190:5)
#loc187 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":192:12)
#loc188 = loc("CWE401_Memory_Leak__new_int64_t_08.cpp":192:5)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc4, #loc3])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc7, #loc8])
#loc193 = loc(fused[#loc9, #loc10])
#loc194 = loc(fused[#loc11, #loc12])
#loc195 = loc(fused[#loc14, #loc13])
#loc196 = loc(fused[#loc15, #loc16])
#loc197 = loc(fused[#loc17, #loc18])
#loc198 = loc(fused[#loc19, #loc16])
#loc199 = loc(fused[#loc20, #loc21])
#loc200 = loc(fused[#loc23, #loc21])
#loc201 = loc(fused[#loc26, #loc24])
#loc202 = loc(fused[#loc30, #loc31])
#loc203 = loc(fused[#loc32, #loc33])
#loc204 = loc(fused[#loc34, #loc31])
#loc205 = loc(fused[#loc35, #loc36])
#loc206 = loc(fused[#loc38, #loc37])
#loc207 = loc(fused[#loc40, #loc41])
#loc208 = loc(fused[#loc42, #loc43])
#loc209 = loc(fused[#loc44, #loc45])
#loc210 = loc(fused[#loc47, #loc46])
#loc211 = loc(fused[#loc48, #loc49])
#loc212 = loc(fused[#loc50, #loc51])
#loc213 = loc(fused[#loc52, #loc49])
#loc214 = loc(fused[#loc53, #loc54])
#loc215 = loc(fused[#loc56, #loc54])
#loc216 = loc(fused[#loc59, #loc57])
#loc217 = loc(fused[#loc63, #loc64])
#loc218 = loc(fused[#loc65, #loc66])
#loc219 = loc(fused[#loc67, #loc68, #loc69, #loc64])
#loc220 = loc(fused[#loc72, #loc73])
#loc221 = loc(fused[#loc74, #loc75])
#loc222 = loc(fused[#loc77, #loc76])
#loc223 = loc(fused[#loc78, #loc79])
#loc224 = loc(fused[#loc80, #loc81])
#loc225 = loc(fused[#loc82, #loc79])
#loc226 = loc(fused[#loc83, #loc84])
#loc227 = loc(fused[#loc86, #loc84])
#loc228 = loc(fused[#loc89, #loc87])
#loc229 = loc(fused[#loc93, #loc94])
#loc230 = loc(fused[#loc95, #loc96])
#loc231 = loc(fused[#loc97, #loc94])
#loc232 = loc(fused[#loc99, #loc100])
#loc233 = loc(fused[#loc101, #loc102])
#loc234 = loc(fused[#loc104, #loc103])
#loc235 = loc(fused[#loc105, #loc106])
#loc236 = loc(fused[#loc107, #loc108])
#loc237 = loc(fused[#loc109, #loc110, #loc111, #loc106])
#loc238 = loc(fused[#loc114, #loc115])
#loc239 = loc(fused[#loc116, #loc117])
#loc240 = loc(fused[#loc120, #loc118])
#loc241 = loc(fused[#loc124, #loc125])
#loc242 = loc(fused[#loc126, #loc127])
#loc243 = loc(fused[#loc128, #loc125])
#loc244 = loc(fused[#loc129, #loc130])
#loc245 = loc(fused[#loc131, #loc132])
#loc246 = loc(fused[#loc134, #loc133])
#loc247 = loc(fused[#loc135, #loc136])
#loc248 = loc(fused[#loc137, #loc138])
#loc249 = loc(fused[#loc139, #loc136])
#loc250 = loc(fused[#loc140, #loc141])
#loc251 = loc(fused[#loc142, #loc143])
#loc252 = loc(fused[#loc146, #loc144])
#loc253 = loc(fused[#loc150, #loc151])
#loc254 = loc(fused[#loc152, #loc153])
#loc255 = loc(fused[#loc154, #loc151])
#loc256 = loc(fused[#loc155, #loc156])
#loc257 = loc(fused[#loc161, #loc162])
#loc258 = loc(fused[#loc163, #loc164])
#loc259 = loc(fused[#loc165, #loc166])
#loc260 = loc(fused[#loc171, #loc172])
#loc263 = loc(fused[#loc188, #loc187])
