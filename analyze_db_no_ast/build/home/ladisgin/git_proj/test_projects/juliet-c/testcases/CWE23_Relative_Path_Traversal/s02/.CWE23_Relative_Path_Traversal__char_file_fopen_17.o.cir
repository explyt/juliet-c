!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc130)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc131)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc134)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc14)
  cir.func  @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
    %3 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc138)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc138)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc142)
        cir.condition(%8) loc(#loc142)
      } body {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc144)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc145)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
          %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc144)
          cir.scope {
            %11 = cir.const #cir.int<4096> : !s32i loc(#loc41)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc41)
            %13 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc147)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc43)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc148)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc45)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc45)
              cir.store %23, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
              cir.scope {
                %24 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc51)
                %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc152)
                cir.if %26 {
                  cir.scope {
                    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
                    %30 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc57)
                    %32 = cir.const #cir.int<4096> : !s32i loc(#loc58)
                    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc58)
                    %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                    %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc155)
                    %36 = cir.cast(integral, %35 : !u64i), !s32i loc(#loc155)
                    %37 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
                    %38 = cir.call @fgets(%31, %36, %37) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc61)
                    %39 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
                    %40 = cir.cmp(eq, %38, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
                    cir.if %40 {
                      %41 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                      %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc64)
                      %43 = cir.const #cir.int<0> : !s8i loc(#loc65)
                      %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                      %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                      %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc68)
                      cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc158)
                    } loc(#loc157)
                  } loc(#loc154)
                  %27 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
                  %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc70)
                } loc(#loc153)
              } loc(#loc151)
            } loc(#loc149)
          } loc(#loc146)
        } loc(#loc143)
        cir.yield loc(#loc26)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc72)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
        cir.yield loc(#loc140)
      } loc(#loc140)
    } loc(#loc140)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc161)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc76)
      cir.store %6, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
      %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc77)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc14)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc14)
      %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc77)
      cir.store %11, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc162)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc84)
        %14 = cir.cmp(ne, %12, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc164)
        cir.if %14 {
          %15 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
          %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc87)
        } loc(#loc165)
      } loc(#loc163)
    } loc(#loc160)
    cir.return loc(#loc16)
  } loc(#loc135)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc90)
  cir.func internal private  @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc170)
    %3 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc170)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc170)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc99)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc103)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc174)
        cir.condition(%8) loc(#loc174)
      } body {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc107)
        %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
        %8 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc90)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc90)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
        cir.yield loc(#loc102)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc110)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        cir.yield loc(#loc172)
      } loc(#loc172)
    } loc(#loc172)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc177)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc114)
      cir.store %6, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
      %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc115)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc117)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc117)
      %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc115)
      cir.store %11, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc122)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc123)
        %14 = cir.cmp(ne, %12, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc180)
        cir.if %14 {
          %15 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
          %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc126)
        } loc(#loc181)
      } loc(#loc179)
    } loc(#loc176)
    cir.return loc(#loc92)
  } loc(#loc167)
  cir.func  @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_17L7goodG2BEv() : () -> () loc(#loc129)
    cir.return loc(#loc128)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":58:31)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":58:41)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":64:35)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":76:29)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":43:1)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":82:1)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":45:5)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":45:9)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":46:5)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":46:12)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":47:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":47:37)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":48:12)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":48:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":49:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":72:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":49:13)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":49:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":49:16)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":49:20)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":51:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":71:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":53:13)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":53:41)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":54:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":54:20)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":53:30)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":53:37)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":56:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":70:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":56:17)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":56:30)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":56:40)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":57:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":58:25)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":58:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":58:44)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":59:17)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":69:17)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":59:21)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":59:30)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":60:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:21)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":67:21)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:31)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:36)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:35)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:51)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:64)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:74)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:25)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":62:84)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":63:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":64:25)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":66:41)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":66:25)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":66:30)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":66:37)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":68:28)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":68:21)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":49:24)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":49:23)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":73:5)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":81:5)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":74:9)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":74:23)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":76:17)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":76:23)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":76:9)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":76:34)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":77:9)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":80:9)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":77:13)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":77:22)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":78:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":79:20)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":79:13)
#loc88 = loc("/usr/include/string.h":149:1)
#loc89 = loc("/usr/include/string.h":150:14)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":98:22)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":89:1)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":109:1)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":91:5)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":91:9)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":92:5)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":92:12)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":93:5)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":93:37)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":94:12)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":94:5)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":95:5)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":99:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":95:13)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":95:9)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":95:16)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":95:20)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":98:9)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":98:16)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":95:24)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":95:23)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":100:5)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":108:5)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":101:9)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":101:23)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":103:17)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":103:23)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":103:29)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":103:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":103:34)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":104:9)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":107:9)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":104:13)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":104:22)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":105:9)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":106:20)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":106:13)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":111:1)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":114:1)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_17.cpp":113:5)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc12, #loc13])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc24, #loc23])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc28, #loc27])
#loc142 = loc(fused[#loc29, #loc30])
#loc143 = loc(fused[#loc31, #loc32])
#loc144 = loc(fused[#loc33, #loc34])
#loc145 = loc(fused[#loc35, #loc36])
#loc146 = loc(fused[#loc39, #loc40])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc41, #loc43])
#loc149 = loc(fused[#loc44, #loc40])
#loc150 = loc(fused[#loc46, #loc47])
#loc151 = loc(fused[#loc48, #loc49])
#loc152 = loc(fused[#loc50, #loc51])
#loc153 = loc(fused[#loc52, #loc49])
#loc154 = loc(fused[#loc53, #loc54])
#loc155 = loc(fused[#loc58, #loc59])
#loc156 = loc(fused[#loc61, #loc62])
#loc157 = loc(fused[#loc63, #loc54])
#loc158 = loc(fused[#loc66, #loc65])
#loc159 = loc(fused[#loc72, #loc71])
#loc160 = loc(fused[#loc73, #loc74])
#loc161 = loc(fused[#loc75, #loc76])
#loc162 = loc(fused[#loc79, #loc80])
#loc163 = loc(fused[#loc81, #loc82])
#loc164 = loc(fused[#loc83, #loc84])
#loc165 = loc(fused[#loc85, #loc82])
#loc166 = loc(fused[#loc88, #loc89])
#loc167 = loc(fused[#loc91, #loc92])
#loc168 = loc(fused[#loc93, #loc94])
#loc169 = loc(fused[#loc95, #loc96])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc100, #loc99])
#loc172 = loc(fused[#loc101, #loc102])
#loc173 = loc(fused[#loc104, #loc103])
#loc174 = loc(fused[#loc105, #loc106])
#loc175 = loc(fused[#loc110, #loc109])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc118, #loc119])
#loc179 = loc(fused[#loc120, #loc121])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc124, #loc121])
#loc182 = loc(fused[#loc127, #loc128])
