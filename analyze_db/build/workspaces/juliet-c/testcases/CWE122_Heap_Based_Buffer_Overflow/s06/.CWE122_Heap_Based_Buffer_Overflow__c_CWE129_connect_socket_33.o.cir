!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:44)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:44)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:27)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc427)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc428)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc429)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc430)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc431)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc432)
  cir.func private @close(!s32i) -> !s32i loc(#loc433)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc434)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc435)
  cir.func private @printIntLine(!s32i) loc(#loc436)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc437)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc24)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc438)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc440)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc441)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc442)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc443)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc444)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc445)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc446)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc447)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc448)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc46)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc48)
    cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.br ^bb1 loc(#loc450)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc34)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    cir.br ^bb2 loc(#loc451)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc451)
  ^bb3:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %14 ^bb4, ^bb27 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc452)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %16 = cir.const #cir.int<1> : !u32i loc(#loc58)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc58)
    %18 = cir.const #cir.int<6> : !u32i loc(#loc59)
    %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc59)
    %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    cir.br ^bb6 loc(#loc454)
  ^bb6:  // pred: ^bb5
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc66)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc455)
    cir.brcond %24 ^bb7, ^bb8 loc(#loc456)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc68)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // pred: ^bb8
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc457)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc458)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc459)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc76)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc460)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc79)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc461)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc84)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc84)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc85)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc462)
    cir.br ^bb10 loc(#loc463)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc464)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc465)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc465)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc96)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc97)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc466)
    cir.brcond %47 ^bb11, ^bb12 loc(#loc467)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc99)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc90)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %49 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
    %51 = cir.const #cir.int<3> : !s32i loc(#loc102)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc102)
    %53 = cir.const #cir.int<4> : !u64i loc(#loc102)
    %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc102)
    %55 = cir.const #cir.int<2> : !s32i loc(#loc102)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc102)
    %57 = cir.binop(add, %54, %56) : !u64i loc(#loc102)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc103)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc468)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %62 = cir.call @recv(%48, %50, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
    %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc105)
    cir.store %63, %0 : !s32i, !cir.ptr<!s32i> loc(#loc469)
    cir.br ^bb14 loc(#loc470)
  ^bb14:  // pred: ^bb13
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc111)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc471)
    cir.brcond %67 ^bb15, ^bb16 loc(#loc112)
  ^bb15:  // pred: ^bb14
    %68 = cir.const #true loc(#loc112)
    cir.br ^bb21(%68 : !cir.bool) loc(#loc112)
  ^bb16:  // pred: ^bb14
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc472)
    cir.brcond %71 ^bb17, ^bb18 loc(#loc112)
  ^bb17:  // pred: ^bb16
    %72 = cir.const #true loc(#loc112)
    cir.br ^bb19(%72 : !cir.bool) loc(#loc112)
  ^bb18:  // pred: ^bb16
    %73 = cir.const #false loc(#loc112)
    cir.br ^bb19(%73 : !cir.bool) loc(#loc112)
  ^bb19(%74: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc112)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%74 : !cir.bool) loc(#loc112)
  ^bb21(%75: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc112)
  ^bb22:  // pred: ^bb21
    cir.brcond %75 ^bb23, ^bb24 loc(#loc473)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc116)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc109)
  ^bb25:  // pred: ^bb24
    %76 = cir.const #cir.int<0> : !s8i loc(#loc117)
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc119)
    cir.store %76, %79 : !s8i, !cir.ptr<!s8i> loc(#loc474)
    %80 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %81 = cir.call @atoi(%80) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc121)
    cir.store %81, %7 : !s32i, !cir.ptr<!s32i> loc(#loc475)
    cir.br ^bb26 loc(#loc56)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc53)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc53)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc476)
  ^bb29:  // pred: ^bb28
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc127)
    %85 = cir.cmp(ne, %82, %84) : !s32i, !cir.bool loc(#loc477)
    cir.brcond %85 ^bb30, ^bb31 loc(#loc478)
  ^bb30:  // pred: ^bb29
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %87 = cir.call @close(%86) : (!s32i) -> !s32i loc(#loc130)
    cir.br ^bb31 loc(#loc125)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc125)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc51)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc479)
  ^bb34:  // pred: ^bb33
    %88 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %89 = cir.load %88 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %89, %4 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    cir.br ^bb35 loc(#loc480)
  ^bb35:  // pred: ^bb34
    %90 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc135)
    %91 = cir.const #cir.int<10> : !s32i loc(#loc136)
    %92 = cir.cast(integral, %91 : !s32i), !u64i loc(#loc136)
    %93 = cir.const #cir.int<4> : !u64i loc(#loc481)
    %94 = cir.binop(mul, %92, %93) : !u64i loc(#loc482)
    %95 = cir.call @malloc(%94) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
    %96 = cir.cast(bitcast, %95 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc483)
    cir.store %96, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc446)
    cir.br ^bb36 loc(#loc484)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
    %98 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc142)
    %99 = cir.cmp(eq, %97, %98) : !cir.ptr<!s32i>, !cir.bool loc(#loc485)
    cir.brcond %99 ^bb37, ^bb38 loc(#loc486)
  ^bb37:  // pred: ^bb36
    %100 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc144)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc146)
    cir.call @exit(%102) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb38 loc(#loc140)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc140)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc487)
  ^bb40:  // pred: ^bb39
    %103 = cir.const #cir.int<0> : !s32i loc(#loc149)
    cir.store %103, %5 : !s32i, !cir.ptr<!s32i> loc(#loc488)
    cir.br ^bb41 loc(#loc487)
  ^bb41:  // 2 preds: ^bb40, ^bb45
    %104 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %105 = cir.const #cir.int<10> : !s32i loc(#loc152)
    %106 = cir.cmp(lt, %104, %105) : !s32i, !cir.bool loc(#loc489)
    cir.brcond %106 ^bb42, ^bb46 loc(#loc489)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc490)
  ^bb43:  // pred: ^bb42
    %107 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %108 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %110 = cir.ptr_stride(%108 : !cir.ptr<!s32i>, %109 : !s32i), !cir.ptr<!s32i> loc(#loc157)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc491)
    cir.br ^bb44 loc(#loc148)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc148)
  ^bb45:  // pred: ^bb44
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %112 = cir.unary(inc, %111) nsw : !s32i, !s32i loc(#loc159)
    cir.store %112, %5 : !s32i, !cir.ptr<!s32i> loc(#loc492)
    cir.br ^bb41 loc(#loc487)
  ^bb46:  // pred: ^bb41
    cir.br ^bb47 loc(#loc148)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc493)
  ^bb48:  // pred: ^bb47
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %115 = cir.cmp(ge, %113, %114) : !s32i, !cir.bool loc(#loc494)
    cir.brcond %115 ^bb49, ^bb58 loc(#loc495)
  ^bb49:  // pred: ^bb48
    %116 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %117 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
    %118 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %119 = cir.ptr_stride(%117 : !cir.ptr<!s32i>, %118 : !s32i), !cir.ptr<!s32i> loc(#loc170)
    cir.store %116, %119 : !s32i, !cir.ptr<!s32i> loc(#loc496)
    cir.br ^bb50 loc(#loc497)
  ^bb50:  // pred: ^bb49
    %120 = cir.const #cir.int<0> : !s32i loc(#loc173)
    cir.store %120, %5 : !s32i, !cir.ptr<!s32i> loc(#loc498)
    cir.br ^bb51 loc(#loc497)
  ^bb51:  // 2 preds: ^bb50, ^bb55
    %121 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %122 = cir.const #cir.int<10> : !s32i loc(#loc176)
    %123 = cir.cmp(lt, %121, %122) : !s32i, !cir.bool loc(#loc499)
    cir.brcond %123 ^bb52, ^bb56 loc(#loc499)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc500)
  ^bb53:  // pred: ^bb52
    %124 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
    %125 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %126 = cir.ptr_stride(%124 : !cir.ptr<!s32i>, %125 : !s32i), !cir.ptr<!s32i> loc(#loc180)
    %127 = cir.load %126 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.call @printIntLine(%127) : (!s32i) -> () loc(#loc181)
    cir.br ^bb54 loc(#loc172)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc172)
  ^bb55:  // pred: ^bb54
    %128 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %129 = cir.unary(inc, %128) nsw : !s32i, !s32i loc(#loc183)
    cir.store %129, %5 : !s32i, !cir.ptr<!s32i> loc(#loc501)
    cir.br ^bb51 loc(#loc497)
  ^bb56:  // pred: ^bb51
    cir.br ^bb57 loc(#loc172)
  ^bb57:  // pred: ^bb56
    cir.br ^bb59 loc(#loc165)
  ^bb58:  // pred: ^bb48
    %130 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc24)
    %131 = cir.cast(array_to_ptrdecay, %130 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%131) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.br ^bb59 loc(#loc161)
  ^bb59:  // 2 preds: ^bb57, ^bb58
    cir.br ^bb60 loc(#loc161)
  ^bb60:  // pred: ^bb59
    %132 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc185)
    %133 = cir.cast(bitcast, %132 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc185)
    cir.call @free(%133) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc186)
    cir.br ^bb61 loc(#loc134)
  ^bb61:  // pred: ^bb60
    cir.br ^bb62 loc(#loc132)
  ^bb62:  // pred: ^bb61
    cir.return loc(#loc28)
  } loc(#loc439)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc503)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc504)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc505)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc506)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc507)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc198)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc200)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc508)
    %7 = cir.const #cir.int<7> : !s32i loc(#loc202)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.br ^bb1 loc(#loc510)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc503)
    cir.br ^bb2 loc(#loc511)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc208)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc209)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc209)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc512)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc513)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc514)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc505)
    cir.br ^bb3 loc(#loc515)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc215)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc516)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc517)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc217)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc219)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc217)
    cir.br ^bb5 loc(#loc213)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc213)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc518)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc222)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.br ^bb8 loc(#loc518)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %25 = cir.const #cir.int<10> : !s32i loc(#loc225)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc520)
    cir.brcond %26 ^bb9, ^bb13 loc(#loc520)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc521)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc230)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc522)
    cir.br ^bb11 loc(#loc221)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc221)
  ^bb12:  // pred: ^bb11
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %32 = cir.unary(inc, %31) nsw : !s32i, !s32i loc(#loc232)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc523)
    cir.br ^bb8 loc(#loc518)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc221)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc524)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc236)
    %35 = cir.cmp(ge, %33, %34) : !s32i, !cir.bool loc(#loc525)
    cir.brcond %35 ^bb16, ^bb25 loc(#loc526)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<1> : !s32i loc(#loc240)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc241)
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc243)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    cir.br ^bb17 loc(#loc528)
  ^bb17:  // pred: ^bb16
    %40 = cir.const #cir.int<0> : !s32i loc(#loc246)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc529)
    cir.br ^bb18 loc(#loc528)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc249)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc530)
    cir.brcond %43 ^bb19, ^bb23 loc(#loc530)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc531)
  ^bb20:  // pred: ^bb19
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc251)
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc253)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    cir.call @printIntLine(%47) : (!s32i) -> () loc(#loc254)
    cir.br ^bb21 loc(#loc245)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc245)
  ^bb22:  // pred: ^bb21
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %49 = cir.unary(inc, %48) nsw : !s32i, !s32i loc(#loc256)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc532)
    cir.br ^bb18 loc(#loc528)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc245)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc238)
  ^bb25:  // pred: ^bb15
    %50 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc257)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc257)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc258)
    cir.br ^bb26 loc(#loc234)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc234)
  ^bb27:  // pred: ^bb26
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc259)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc259)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc260)
    cir.br ^bb28 loc(#loc207)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc205)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc188)
  } loc(#loc502)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc261)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc534)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc535)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc536)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc537)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc538)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc539)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc540)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc541)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc542)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc283)
    cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    cir.br ^bb1 loc(#loc544)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc269)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc269)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc536)
    cir.br ^bb2 loc(#loc545)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc545)
  ^bb3:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc289)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc289)
    cir.brcond %14 ^bb4, ^bb27 loc(#loc289)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc546)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<2> : !s32i loc(#loc292)
    %16 = cir.const #cir.int<1> : !u32i loc(#loc293)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc293)
    %18 = cir.const #cir.int<6> : !u32i loc(#loc294)
    %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc294)
    %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc295)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.br ^bb6 loc(#loc548)
  ^bb6:  // pred: ^bb5
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc301)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %24 ^bb7, ^bb8 loc(#loc550)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc303)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc299)
  ^bb9:  // pred: ^bb8
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc551)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc306)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc552)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc553)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc311)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc311)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc554)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc313)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc313)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc314)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc555)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc317)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc317)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc318)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc556)
    cir.br ^bb10 loc(#loc557)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc558)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc559)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc559)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc328)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc329)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc329)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc560)
    cir.brcond %47 ^bb11, ^bb12 loc(#loc561)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc331)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc322)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    %49 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc333)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc333)
    %51 = cir.const #cir.int<3> : !s32i loc(#loc334)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc334)
    %53 = cir.const #cir.int<4> : !u64i loc(#loc334)
    %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc334)
    %55 = cir.const #cir.int<2> : !s32i loc(#loc334)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc334)
    %57 = cir.binop(add, %54, %56) : !u64i loc(#loc334)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc335)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc562)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc336)
    %62 = cir.call @recv(%48, %50, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc337)
    %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc337)
    cir.store %63, %0 : !s32i, !cir.ptr<!s32i> loc(#loc563)
    cir.br ^bb14 loc(#loc564)
  ^bb14:  // pred: ^bb13
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc342)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc343)
    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc343)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc565)
    cir.brcond %67 ^bb15, ^bb16 loc(#loc344)
  ^bb15:  // pred: ^bb14
    %68 = cir.const #true loc(#loc344)
    cir.br ^bb21(%68 : !cir.bool) loc(#loc344)
  ^bb16:  // pred: ^bb14
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc345)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc346)
    %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc566)
    cir.brcond %71 ^bb17, ^bb18 loc(#loc344)
  ^bb17:  // pred: ^bb16
    %72 = cir.const #true loc(#loc344)
    cir.br ^bb19(%72 : !cir.bool) loc(#loc344)
  ^bb18:  // pred: ^bb16
    %73 = cir.const #false loc(#loc344)
    cir.br ^bb19(%73 : !cir.bool) loc(#loc344)
  ^bb19(%74: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc344)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%74 : !cir.bool) loc(#loc344)
  ^bb21(%75: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc344)
  ^bb22:  // pred: ^bb21
    cir.brcond %75 ^bb23, ^bb24 loc(#loc567)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc348)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc341)
  ^bb25:  // pred: ^bb24
    %76 = cir.const #cir.int<0> : !s8i loc(#loc349)
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc350)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc351)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc351)
    cir.store %76, %79 : !s8i, !cir.ptr<!s8i> loc(#loc568)
    %80 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc352)
    %81 = cir.call @atoi(%80) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc353)
    cir.store %81, %7 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    cir.br ^bb26 loc(#loc291)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc288)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc288)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc570)
  ^bb29:  // pred: ^bb28
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc358)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc359)
    %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc359)
    %85 = cir.cmp(ne, %82, %84) : !s32i, !cir.bool loc(#loc571)
    cir.brcond %85 ^bb30, ^bb31 loc(#loc572)
  ^bb30:  // pred: ^bb29
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc361)
    %87 = cir.call @close(%86) : (!s32i) -> !s32i loc(#loc362)
    cir.br ^bb31 loc(#loc357)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc357)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc286)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc573)
  ^bb34:  // pred: ^bb33
    %88 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc273)
    %89 = cir.load %88 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    cir.store %89, %4 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    cir.br ^bb35 loc(#loc574)
  ^bb35:  // pred: ^bb34
    %90 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc367)
    %91 = cir.const #cir.int<10> : !s32i loc(#loc368)
    %92 = cir.cast(integral, %91 : !s32i), !u64i loc(#loc368)
    %93 = cir.const #cir.int<4> : !u64i loc(#loc575)
    %94 = cir.binop(mul, %92, %93) : !u64i loc(#loc576)
    %95 = cir.call @malloc(%94) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc367)
    %96 = cir.cast(bitcast, %95 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc577)
    cir.store %96, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc540)
    cir.br ^bb36 loc(#loc578)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc373)
    %98 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc374)
    %99 = cir.cmp(eq, %97, %98) : !cir.ptr<!s32i>, !cir.bool loc(#loc579)
    cir.brcond %99 ^bb37, ^bb38 loc(#loc580)
  ^bb37:  // pred: ^bb36
    %100 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc376)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc377)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc378)
    cir.call @exit(%102) : (!s32i) -> () extra(#fn_attr) loc(#loc376)
    cir.br ^bb38 loc(#loc372)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc372)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc581)
  ^bb40:  // pred: ^bb39
    %103 = cir.const #cir.int<0> : !s32i loc(#loc381)
    cir.store %103, %5 : !s32i, !cir.ptr<!s32i> loc(#loc582)
    cir.br ^bb41 loc(#loc581)
  ^bb41:  // 2 preds: ^bb40, ^bb45
    %104 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc383)
    %105 = cir.const #cir.int<10> : !s32i loc(#loc384)
    %106 = cir.cmp(lt, %104, %105) : !s32i, !cir.bool loc(#loc583)
    cir.brcond %106 ^bb42, ^bb46 loc(#loc583)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc584)
  ^bb43:  // pred: ^bb42
    %107 = cir.const #cir.int<0> : !s32i loc(#loc386)
    %108 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc387)
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    %110 = cir.ptr_stride(%108 : !cir.ptr<!s32i>, %109 : !s32i), !cir.ptr<!s32i> loc(#loc389)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc585)
    cir.br ^bb44 loc(#loc380)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc380)
  ^bb45:  // pred: ^bb44
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    %112 = cir.unary(inc, %111) nsw : !s32i, !s32i loc(#loc391)
    cir.store %112, %5 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    cir.br ^bb41 loc(#loc581)
  ^bb46:  // pred: ^bb41
    cir.br ^bb47 loc(#loc380)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc587)
  ^bb48:  // pred: ^bb47
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc394)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc395)
    %115 = cir.cmp(ge, %113, %114) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %115 ^bb49, ^bb54 loc(#loc396)
  ^bb49:  // pred: ^bb48
    %116 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc397)
    %117 = cir.const #cir.int<10> : !s32i loc(#loc398)
    %118 = cir.cmp(lt, %116, %117) : !s32i, !cir.bool loc(#loc589)
    cir.brcond %118 ^bb50, ^bb51 loc(#loc396)
  ^bb50:  // pred: ^bb49
    %119 = cir.const #true loc(#loc396)
    cir.br ^bb52(%119 : !cir.bool) loc(#loc396)
  ^bb51:  // pred: ^bb49
    %120 = cir.const #false loc(#loc396)
    cir.br ^bb52(%120 : !cir.bool) loc(#loc396)
  ^bb52(%121: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:27)):  // 2 preds: ^bb50, ^bb51
    cir.br ^bb53 loc(#loc396)
  ^bb53:  // pred: ^bb52
    cir.br ^bb55(%121 : !cir.bool) loc(#loc396)
  ^bb54:  // pred: ^bb48
    %122 = cir.const #false loc(#loc396)
    cir.br ^bb55(%122 : !cir.bool) loc(#loc396)
  ^bb55(%123: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:27)):  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc396)
  ^bb56:  // pred: ^bb55
    cir.brcond %123 ^bb57, ^bb66 loc(#loc590)
  ^bb57:  // pred: ^bb56
    %124 = cir.const #cir.int<1> : !s32i loc(#loc403)
    %125 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc404)
    %126 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc405)
    %127 = cir.ptr_stride(%125 : !cir.ptr<!s32i>, %126 : !s32i), !cir.ptr<!s32i> loc(#loc406)
    cir.store %124, %127 : !s32i, !cir.ptr<!s32i> loc(#loc591)
    cir.br ^bb58 loc(#loc592)
  ^bb58:  // pred: ^bb57
    %128 = cir.const #cir.int<0> : !s32i loc(#loc409)
    cir.store %128, %5 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    cir.br ^bb59 loc(#loc592)
  ^bb59:  // 2 preds: ^bb58, ^bb63
    %129 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc411)
    %130 = cir.const #cir.int<10> : !s32i loc(#loc412)
    %131 = cir.cmp(lt, %129, %130) : !s32i, !cir.bool loc(#loc594)
    cir.brcond %131 ^bb60, ^bb64 loc(#loc594)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc595)
  ^bb61:  // pred: ^bb60
    %132 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc414)
    %133 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc415)
    %134 = cir.ptr_stride(%132 : !cir.ptr<!s32i>, %133 : !s32i), !cir.ptr<!s32i> loc(#loc416)
    %135 = cir.load %134 : !cir.ptr<!s32i>, !s32i loc(#loc414)
    cir.call @printIntLine(%135) : (!s32i) -> () loc(#loc417)
    cir.br ^bb62 loc(#loc408)
  ^bb62:  // pred: ^bb61
    cir.br ^bb63 loc(#loc408)
  ^bb63:  // pred: ^bb62
    %136 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc418)
    %137 = cir.unary(inc, %136) nsw : !s32i, !s32i loc(#loc419)
    cir.store %137, %5 : !s32i, !cir.ptr<!s32i> loc(#loc596)
    cir.br ^bb59 loc(#loc592)
  ^bb64:  // pred: ^bb59
    cir.br ^bb65 loc(#loc408)
  ^bb65:  // pred: ^bb64
    cir.br ^bb67 loc(#loc401)
  ^bb66:  // pred: ^bb56
    %138 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc261)
    %139 = cir.cast(array_to_ptrdecay, %138 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc261)
    cir.call @printLine(%139) : (!cir.ptr<!s8i>) -> () loc(#loc420)
    cir.br ^bb67 loc(#loc393)
  ^bb67:  // 2 preds: ^bb65, ^bb66
    cir.br ^bb68 loc(#loc393)
  ^bb68:  // pred: ^bb67
    %140 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc421)
    %141 = cir.cast(bitcast, %140 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc421)
    cir.call @free(%141) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc422)
    cir.br ^bb69 loc(#loc366)
  ^bb69:  // pred: ^bb68
    cir.br ^bb70 loc(#loc364)
  ^bb70:  // pred: ^bb69
    cir.return loc(#loc263)
  } loc(#loc533)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33L7goodG2BEv() : () -> () loc(#loc425)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33L7goodB2GEv() : () -> () loc(#loc426)
    cir.return loc(#loc424)
  } loc(#loc597)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":79:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":133:27)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":47:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":138:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":58:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":58:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":59:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":59:28)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":60:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":60:32)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":61:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":61:41)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":110:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":110:20)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":112:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":112:17)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":113:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":113:58)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":49:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":49:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":50:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":50:20)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":52:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":52:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":52:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":53:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":108:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":62:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":97:17)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":97:16)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":63:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":96:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":72:36)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":72:45)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":72:58)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":72:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":72:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":72:69)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":73:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":76:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":73:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":73:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":74:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":75:17)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":77:20)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":77:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":77:30)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":77:33)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":77:47)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":77:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":77:48)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":78:34)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":78:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":79:39)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":79:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":79:59)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":80:38)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":80:32)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":80:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":80:46)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":84:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:25)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:58)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:59)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:68)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:82)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":81:88)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":82:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":83:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:31)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:46)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:59)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:77)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:80)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:26)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":87:81)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":91:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:17)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:31)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:47)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":88:61)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":89:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":90:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":93:39)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":93:25)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":93:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":95:25)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":95:20)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":95:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":95:36)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":98:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":101:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":98:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":98:30)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":99:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":100:26)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":100:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":109:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":137:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":111:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":136:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":113:35)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":113:42)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":113:47)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":113:57)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:43)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:17)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:27)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:33)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:34)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:40)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":114:39)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":116:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":119:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":116:22)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":116:18)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":116:25)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":116:29)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":117:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":118:29)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":118:17)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":118:24)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":118:25)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":116:34)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":116:33)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":122:13)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":134:13)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":122:17)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":122:25)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":123:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":130:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":132:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":124:32)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":124:17)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":124:24)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":124:28)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":126:17)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":129:17)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":126:25)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":126:21)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":126:28)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":126:32)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":127:17)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":128:34)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":128:41)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":128:42)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":128:21)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":126:37)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":126:36)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":133:17)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":135:18)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":135:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":145:1)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":183:1)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":155:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":155:20)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":157:13)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":157:17)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":158:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":158:58)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":147:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":147:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":148:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":148:20)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":150:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":150:12)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":150:5)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":153:12)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":153:5)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":154:5)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":182:5)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":156:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":181:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":158:35)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":158:42)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":158:47)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":158:57)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:13)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:43)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:17)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:27)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:33)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:34)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:40)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":159:39)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":161:13)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":164:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":161:22)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":161:18)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":161:25)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":161:29)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":162:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":163:29)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":163:17)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":163:24)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":163:25)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":161:34)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":161:33)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":167:13)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":179:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":167:17)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":167:25)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":168:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":175:13)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":177:13)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":169:32)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":169:17)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":169:24)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":169:28)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":171:17)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":174:17)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":171:25)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":171:21)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":171:28)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":171:32)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":172:17)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":173:34)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":173:41)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":173:42)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":173:21)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":171:37)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":171:36)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":178:27)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":178:17)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":180:18)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":180:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":271:27)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":186:1)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":276:1)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":197:9)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":197:13)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":198:9)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":198:28)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":199:9)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":199:32)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":200:9)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":200:41)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":249:9)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":249:20)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":251:13)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":251:17)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":252:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":252:58)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":188:5)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":188:9)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":189:5)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":189:20)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":191:13)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":191:12)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":191:5)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":192:5)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":247:5)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":201:9)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":236:17)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":236:16)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":202:9)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":235:9)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":211:36)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":211:45)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":211:58)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":211:29)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":211:13)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":211:69)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":212:13)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":215:13)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":212:17)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":212:34)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":213:13)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":214:17)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":216:20)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":216:21)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":216:30)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":216:33)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":216:47)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":216:13)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":216:48)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":217:34)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":217:13)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":218:49)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":218:39)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":218:13)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":218:59)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":219:38)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":219:32)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":219:13)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":219:46)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:13)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":223:13)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:25)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:58)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:59)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:68)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:82)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:17)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":220:88)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":221:13)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":222:17)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:31)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:46)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:59)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:77)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:80)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:26)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:13)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":226:81)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:13)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":230:13)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:17)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:31)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:47)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":227:61)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":228:13)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":229:17)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":232:39)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":232:25)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":232:13)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":234:25)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":234:20)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":234:13)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":234:36)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":237:9)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":240:9)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":237:13)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":237:30)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":238:9)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":239:26)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":239:13)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":248:5)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":275:5)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":250:9)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":274:9)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":252:35)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":252:42)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":252:47)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":252:57)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:13)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:43)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:17)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:27)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:33)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:34)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:40)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":253:39)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":255:13)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":258:13)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":255:22)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":255:18)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":255:25)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":255:29)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":256:13)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":257:29)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":257:17)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":257:24)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":257:25)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":255:34)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":255:33)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:13)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":272:13)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:17)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:25)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:30)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:38)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":260:40)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":261:13)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":268:13)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":270:13)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":262:32)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":262:17)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":262:24)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":262:28)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":264:17)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":267:17)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":264:25)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":264:21)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":264:28)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":264:32)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":265:17)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":266:34)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":266:41)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":266:42)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":266:21)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":264:37)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":264:36)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":271:17)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":273:18)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":273:13)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":278:1)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":282:1)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":280:5)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_33.cpp":281:5)
#loc427 = loc(fused[#loc1, #loc2])
#loc428 = loc(fused[#loc3, #loc4])
#loc429 = loc(fused[#loc6, #loc7])
#loc430 = loc(fused[#loc8, #loc9])
#loc431 = loc(fused[#loc10, #loc11])
#loc432 = loc(fused[#loc12, #loc13])
#loc433 = loc(fused[#loc14, #loc15])
#loc434 = loc(fused[#loc16, #loc17])
#loc435 = loc(fused[#loc18, #loc19])
#loc436 = loc(fused[#loc20, #loc21])
#loc437 = loc(fused[#loc22, #loc23])
#loc438 = loc(fused[#loc25, #loc26])
#loc439 = loc(fused[#loc27, #loc28])
#loc440 = loc(fused[#loc29, #loc30])
#loc441 = loc(fused[#loc31, #loc32])
#loc442 = loc(fused[#loc33, #loc34])
#loc443 = loc(fused[#loc35, #loc36])
#loc444 = loc(fused[#loc37, #loc38])
#loc445 = loc(fused[#loc39, #loc40])
#loc446 = loc(fused[#loc41, #loc42])
#loc447 = loc(fused[#loc43, #loc44])
#loc448 = loc(fused[#loc45, #loc46])
#loc449 = loc(fused[#loc49, #loc47])
#loc450 = loc(fused[#loc50, #loc51])
#loc451 = loc(fused[#loc52, #loc53])
#loc452 = loc(fused[#loc55, #loc56])
#loc453 = loc(fused[#loc61, #loc62])
#loc454 = loc(fused[#loc63, #loc64])
#loc455 = loc(fused[#loc65, #loc66])
#loc456 = loc(fused[#loc67, #loc64])
#loc457 = loc(fused[#loc69, #loc70])
#loc458 = loc(fused[#loc72, #loc73])
#loc459 = loc(fused[#loc74, #loc75])
#loc460 = loc(fused[#loc78, #loc76])
#loc461 = loc(fused[#loc82, #loc83])
#loc462 = loc(fused[#loc87, #loc88])
#loc463 = loc(fused[#loc89, #loc90])
#loc464 = loc(fused[#loc92, #loc93])
#loc465 = loc(fused[#loc94, #loc95])
#loc466 = loc(fused[#loc96, #loc97])
#loc467 = loc(fused[#loc98, #loc90])
#loc468 = loc(fused[#loc102, #loc103])
#loc469 = loc(fused[#loc106, #loc107])
#loc470 = loc(fused[#loc108, #loc109])
#loc471 = loc(fused[#loc110, #loc111])
#loc472 = loc(fused[#loc113, #loc114])
#loc473 = loc(fused[#loc115, #loc109])
#loc474 = loc(fused[#loc119, #loc117])
#loc475 = loc(fused[#loc122, #loc123])
#loc476 = loc(fused[#loc124, #loc125])
#loc477 = loc(fused[#loc126, #loc127])
#loc478 = loc(fused[#loc128, #loc125])
#loc479 = loc(fused[#loc131, #loc132])
#loc480 = loc(fused[#loc133, #loc134])
#loc481 = loc(fused[#loc137, #loc138])
#loc482 = loc(fused[#loc136, #loc138])
#loc483 = loc(fused[#loc135, #loc42])
#loc484 = loc(fused[#loc139, #loc140])
#loc485 = loc(fused[#loc141, #loc142])
#loc486 = loc(fused[#loc143, #loc140])
#loc487 = loc(fused[#loc147, #loc148])
#loc488 = loc(fused[#loc150, #loc149])
#loc489 = loc(fused[#loc151, #loc152])
#loc490 = loc(fused[#loc153, #loc148])
#loc491 = loc(fused[#loc155, #loc154])
#loc492 = loc(fused[#loc159, #loc158])
#loc493 = loc(fused[#loc160, #loc161])
#loc494 = loc(fused[#loc162, #loc163])
#loc495 = loc(fused[#loc164, #loc165, #loc166, #loc161])
#loc496 = loc(fused[#loc168, #loc167])
#loc497 = loc(fused[#loc171, #loc172])
#loc498 = loc(fused[#loc174, #loc173])
#loc499 = loc(fused[#loc175, #loc176])
#loc500 = loc(fused[#loc177, #loc172])
#loc501 = loc(fused[#loc183, #loc182])
#loc502 = loc(fused[#loc187, #loc188])
#loc503 = loc(fused[#loc189, #loc190])
#loc504 = loc(fused[#loc191, #loc192])
#loc505 = loc(fused[#loc193, #loc194])
#loc506 = loc(fused[#loc195, #loc196])
#loc507 = loc(fused[#loc197, #loc198])
#loc508 = loc(fused[#loc201, #loc199])
#loc509 = loc(fused[#loc203, #loc202])
#loc510 = loc(fused[#loc204, #loc205])
#loc511 = loc(fused[#loc206, #loc207])
#loc512 = loc(fused[#loc210, #loc211])
#loc513 = loc(fused[#loc209, #loc211])
#loc514 = loc(fused[#loc208, #loc194])
#loc515 = loc(fused[#loc212, #loc213])
#loc516 = loc(fused[#loc214, #loc215])
#loc517 = loc(fused[#loc216, #loc213])
#loc518 = loc(fused[#loc220, #loc221])
#loc519 = loc(fused[#loc223, #loc222])
#loc520 = loc(fused[#loc224, #loc225])
#loc521 = loc(fused[#loc226, #loc221])
#loc522 = loc(fused[#loc228, #loc227])
#loc523 = loc(fused[#loc232, #loc231])
#loc524 = loc(fused[#loc233, #loc234])
#loc525 = loc(fused[#loc235, #loc236])
#loc526 = loc(fused[#loc237, #loc238, #loc239, #loc234])
#loc527 = loc(fused[#loc241, #loc240])
#loc528 = loc(fused[#loc244, #loc245])
#loc529 = loc(fused[#loc247, #loc246])
#loc530 = loc(fused[#loc248, #loc249])
#loc531 = loc(fused[#loc250, #loc245])
#loc532 = loc(fused[#loc256, #loc255])
#loc533 = loc(fused[#loc262, #loc263])
#loc534 = loc(fused[#loc264, #loc265])
#loc535 = loc(fused[#loc266, #loc267])
#loc536 = loc(fused[#loc268, #loc269])
#loc537 = loc(fused[#loc270, #loc271])
#loc538 = loc(fused[#loc272, #loc273])
#loc539 = loc(fused[#loc274, #loc275])
#loc540 = loc(fused[#loc276, #loc277])
#loc541 = loc(fused[#loc278, #loc279])
#loc542 = loc(fused[#loc280, #loc281])
#loc543 = loc(fused[#loc284, #loc282])
#loc544 = loc(fused[#loc285, #loc286])
#loc545 = loc(fused[#loc287, #loc288])
#loc546 = loc(fused[#loc290, #loc291])
#loc547 = loc(fused[#loc296, #loc297])
#loc548 = loc(fused[#loc298, #loc299])
#loc549 = loc(fused[#loc300, #loc301])
#loc550 = loc(fused[#loc302, #loc299])
#loc551 = loc(fused[#loc304, #loc305])
#loc552 = loc(fused[#loc307, #loc308])
#loc553 = loc(fused[#loc309, #loc310])
#loc554 = loc(fused[#loc312, #loc311])
#loc555 = loc(fused[#loc315, #loc316])
#loc556 = loc(fused[#loc319, #loc320])
#loc557 = loc(fused[#loc321, #loc322])
#loc558 = loc(fused[#loc324, #loc325])
#loc559 = loc(fused[#loc326, #loc327])
#loc560 = loc(fused[#loc328, #loc329])
#loc561 = loc(fused[#loc330, #loc322])
#loc562 = loc(fused[#loc334, #loc335])
#loc563 = loc(fused[#loc338, #loc339])
#loc564 = loc(fused[#loc340, #loc341])
#loc565 = loc(fused[#loc342, #loc343])
#loc566 = loc(fused[#loc345, #loc346])
#loc567 = loc(fused[#loc347, #loc341])
#loc568 = loc(fused[#loc351, #loc349])
#loc569 = loc(fused[#loc354, #loc355])
#loc570 = loc(fused[#loc356, #loc357])
#loc571 = loc(fused[#loc358, #loc359])
#loc572 = loc(fused[#loc360, #loc357])
#loc573 = loc(fused[#loc363, #loc364])
#loc574 = loc(fused[#loc365, #loc366])
#loc575 = loc(fused[#loc369, #loc370])
#loc576 = loc(fused[#loc368, #loc370])
#loc577 = loc(fused[#loc367, #loc277])
#loc578 = loc(fused[#loc371, #loc372])
#loc579 = loc(fused[#loc373, #loc374])
#loc580 = loc(fused[#loc375, #loc372])
#loc581 = loc(fused[#loc379, #loc380])
#loc582 = loc(fused[#loc382, #loc381])
#loc583 = loc(fused[#loc383, #loc384])
#loc584 = loc(fused[#loc385, #loc380])
#loc585 = loc(fused[#loc387, #loc386])
#loc586 = loc(fused[#loc391, #loc390])
#loc587 = loc(fused[#loc392, #loc393])
#loc588 = loc(fused[#loc394, #loc395])
#loc589 = loc(fused[#loc397, #loc399])
#loc590 = loc(fused[#loc400, #loc401, #loc402, #loc393])
#loc591 = loc(fused[#loc404, #loc403])
#loc592 = loc(fused[#loc407, #loc408])
#loc593 = loc(fused[#loc410, #loc409])
#loc594 = loc(fused[#loc411, #loc412])
#loc595 = loc(fused[#loc413, #loc408])
#loc596 = loc(fused[#loc419, #loc418])
#loc597 = loc(fused[#loc423, #loc424])
