!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:44)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:44)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:23)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc319)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc320)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc321)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc322)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc323)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @close(!s32i) -> !s32i loc(#loc325)
  cir.func private @printIntLine(!s32i) loc(#loc326)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc329)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc330)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc331)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc332)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc333)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc334)
    %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc335)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc38)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb1 loc(#loc337)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc30)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.br ^bb2 loc(#loc338)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc338)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc44)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc47)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb5 loc(#loc340)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc54)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc342)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc56)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc52)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc343)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc344)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc345)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc64)
    %26 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc346)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
    %30 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc347)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc72)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
    %35 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc348)
    cir.br ^bb9 loc(#loc349)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %37 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc350)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc351)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc351)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc85)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc353)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc87)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc78)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %45 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc90)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc90)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc90)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc90)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc90)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc90)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc90)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc91)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc354)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc93)
    cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb13 loc(#loc356)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc99)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc357)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc100)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc100)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc100)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc100)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc100)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc100)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc100)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc100)
  ^bb18(%70: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc100)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc100)
  ^bb20(%71: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc100)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc359)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc104)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc97)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc105)
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %75 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc360)
    %77 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb3 loc(#loc43)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc43)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc362)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc115)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc364)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc118)
    cir.br ^bb29 loc(#loc113)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc113)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc365)
  ^bb31:  // pred: ^bb30
    %85 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc335)
    cir.store %85, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc335)
    cir.br ^bb32 loc(#loc366)
  ^bb32:  // pred: ^bb31
    %86 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %87 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %88 = cir.cmp(ge, %86, %87) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %88 ^bb33, ^bb42 loc(#loc368)
  ^bb33:  // pred: ^bb32
    %89 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %91 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc130)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s32i>, %90 : !s32i), !cir.ptr<!s32i> loc(#loc130)
    cir.store %89, %92 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb34 loc(#loc370)
  ^bb34:  // pred: ^bb33
    %93 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb35 loc(#loc370)
  ^bb35:  // 2 preds: ^bb34, ^bb39
    %94 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %95 = cir.const #cir.int<10> : !s32i loc(#loc136)
    %96 = cir.cmp(lt, %94, %95) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %96 ^bb36, ^bb40 loc(#loc137)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc373)
  ^bb37:  // pred: ^bb36
    %97 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %98 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
    %99 = cir.ptr_stride(%98 : !cir.ptr<!s32i>, %97 : !s32i), !cir.ptr<!s32i> loc(#loc140)
    %100 = cir.load %99 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.call @printIntLine(%100) : (!s32i) -> () loc(#loc141)
    cir.br ^bb38 loc(#loc132)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc132)
  ^bb39:  // pred: ^bb38
    %101 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %102 = cir.unary(inc, %101) : !s32i, !s32i loc(#loc143)
    cir.store %102, %5 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb35 loc(#loc370)
  ^bb40:  // pred: ^bb35
    cir.br ^bb41 loc(#loc132)
  ^bb41:  // pred: ^bb40
    cir.br ^bb43 loc(#loc126)
  ^bb42:  // pred: ^bb32
    %103 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
    %104 = cir.cast(array_to_ptrdecay, %103 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%104) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb43 loc(#loc122)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc122)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc22)
  } loc(#loc328)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc376)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc147)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc377)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    cir.return loc(#loc146)
  } loc(#loc375)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc151)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc379)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc380)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc381)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc382)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc383)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc384)
    %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc385)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc169)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb1 loc(#loc387)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc161)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.br ^bb2 loc(#loc388)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc388)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc175)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc175)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc176)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc178)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc179)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.br ^bb5 loc(#loc390)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc185)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc391)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc392)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc187)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc183)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc393)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc190)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc394)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc395)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc195)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc195)
    %26 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc396)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc197)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc197)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc198)
    %30 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc397)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc201)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc201)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc202)
    %35 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc398)
    cir.br ^bb9 loc(#loc399)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %37 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc400)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc401)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc401)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc212)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc213)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc403)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc215)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc206)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    %45 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc217)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc217)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc218)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc218)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc218)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc218)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc218)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc218)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc218)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc219)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc404)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc221)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc221)
    cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb13 loc(#loc406)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc227)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc407)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc228)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc228)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc228)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc228)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc228)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc228)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc228)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc228)
  ^bb18(%70: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc228)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc228)
  ^bb20(%71: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc228)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc409)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc232)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc225)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc233)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc233)
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    %75 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc235)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc235)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc410)
    %77 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc236)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc237)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb3 loc(#loc174)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc174)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc412)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc243)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc414)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc246)
    cir.br ^bb29 loc(#loc241)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc241)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc415)
  ^bb31:  // pred: ^bb30
    %85 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc385)
    cir.store %85, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc385)
    cir.br ^bb32 loc(#loc416)
  ^bb32:  // pred: ^bb31
    %86 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    %87 = cir.const #cir.int<0> : !s32i loc(#loc252)
    %88 = cir.cmp(ge, %86, %87) : !s32i, !cir.bool loc(#loc417)
    cir.brcond %88 ^bb33, ^bb38 loc(#loc253)
  ^bb33:  // pred: ^bb32
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %90 = cir.const #cir.int<10> : !s32i loc(#loc255)
    %91 = cir.cmp(lt, %89, %90) : !s32i, !cir.bool loc(#loc418)
    cir.brcond %91 ^bb34, ^bb35 loc(#loc253)
  ^bb34:  // pred: ^bb33
    %92 = cir.const #true loc(#loc253)
    cir.br ^bb36(%92 : !cir.bool) loc(#loc253)
  ^bb35:  // pred: ^bb33
    %93 = cir.const #false loc(#loc253)
    cir.br ^bb36(%93 : !cir.bool) loc(#loc253)
  ^bb36(%94: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:23)):  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc253)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39(%94 : !cir.bool) loc(#loc253)
  ^bb38:  // pred: ^bb32
    %95 = cir.const #false loc(#loc253)
    cir.br ^bb39(%95 : !cir.bool) loc(#loc253)
  ^bb39(%96: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:23)):  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc253)
  ^bb40:  // pred: ^bb39
    cir.brcond %96 ^bb41, ^bb50 loc(#loc419)
  ^bb41:  // pred: ^bb40
    %97 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %98 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %99 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc262)
    %100 = cir.ptr_stride(%99 : !cir.ptr<!s32i>, %98 : !s32i), !cir.ptr<!s32i> loc(#loc262)
    cir.store %97, %100 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    cir.br ^bb42 loc(#loc421)
  ^bb42:  // pred: ^bb41
    %101 = cir.const #cir.int<0> : !s32i loc(#loc265)
    cir.store %101, %5 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.br ^bb43 loc(#loc421)
  ^bb43:  // 2 preds: ^bb42, ^bb47
    %102 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %103 = cir.const #cir.int<10> : !s32i loc(#loc268)
    %104 = cir.cmp(lt, %102, %103) : !s32i, !cir.bool loc(#loc423)
    cir.brcond %104 ^bb44, ^bb48 loc(#loc269)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc424)
  ^bb45:  // pred: ^bb44
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %106 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc272)
    %107 = cir.ptr_stride(%106 : !cir.ptr<!s32i>, %105 : !s32i), !cir.ptr<!s32i> loc(#loc272)
    %108 = cir.load %107 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    cir.call @printIntLine(%108) : (!s32i) -> () loc(#loc273)
    cir.br ^bb46 loc(#loc264)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc264)
  ^bb47:  // pred: ^bb46
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %110 = cir.unary(inc, %109) : !s32i, !s32i loc(#loc275)
    cir.store %110, %5 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.br ^bb43 loc(#loc421)
  ^bb48:  // pred: ^bb43
    cir.br ^bb49 loc(#loc264)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc258)
  ^bb50:  // pred: ^bb40
    %111 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc151)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc276)
    cir.br ^bb51 loc(#loc250)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc250)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc153)
  } loc(#loc378)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc427)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc428)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc429)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc286)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.br ^bb1 loc(#loc431)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<7> : !s32i loc(#loc290)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    cir.br ^bb2 loc(#loc433)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc429)
    cir.store %6, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc429)
    cir.br ^bb3 loc(#loc434)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc297)
    %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc435)
    cir.brcond %9 ^bb4, ^bb13 loc(#loc436)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc303)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc303)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc437)
    cir.br ^bb5 loc(#loc438)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<0> : !s32i loc(#loc306)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.br ^bb6 loc(#loc438)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc309)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc440)
    cir.brcond %17 ^bb7, ^bb11 loc(#loc310)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc441)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc313)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc313)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc314)
    cir.br ^bb9 loc(#loc305)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc305)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc316)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    cir.br ^bb6 loc(#loc438)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc305)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14 loc(#loc299)
  ^bb13:  // pred: ^bb3
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc317)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc317)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc318)
    cir.br ^bb14 loc(#loc295)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc295)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc278)
  } loc(#loc426)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":125:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":44:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":128:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":46:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":46:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":56:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":56:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":57:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":57:28)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":58:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":58:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":59:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":59:41)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":110:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":110:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":111:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":111:30)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":48:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":48:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":48:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":49:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":49:10)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":60:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":95:17)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":95:16)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":70:36)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":70:45)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":70:58)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":70:29)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":70:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":70:69)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":71:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":74:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":71:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":71:34)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":72:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":73:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":75:20)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":75:21)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":75:30)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":75:33)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":75:47)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":75:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":75:48)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":76:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":76:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":77:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":77:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":77:59)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":78:38)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":78:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":78:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":78:46)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":82:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:25)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:58)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:59)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:68)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:82)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":79:88)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":80:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":81:17)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:31)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:46)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:59)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:77)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:80)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:26)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":85:81)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":89:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:31)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:47)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":86:61)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":87:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":88:17)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":91:39)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":91:25)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":91:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":93:25)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":93:20)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":93:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":93:36)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":96:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":99:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":96:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":96:30)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":97:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":98:26)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":98:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":107:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":107:10)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":114:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":126:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":114:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":114:21)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":115:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":122:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":124:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":116:28)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":116:20)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":116:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":121:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:21)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:17)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:24)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:28)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:26)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":119:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":120:37)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":120:30)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":120:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:33)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":118:32)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":125:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":254:1)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":258:1)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":256:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":256:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":257:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":257:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":215:23)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":135:1)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":218:1)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":137:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":137:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":147:9)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":147:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":148:9)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":148:28)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":149:9)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":149:32)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":150:9)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":150:41)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":201:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":201:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":202:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":202:30)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":139:13)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":139:12)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":139:5)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":140:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":140:10)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":151:9)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":186:17)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":186:16)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":161:36)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":161:45)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":161:58)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":161:29)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":161:13)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":161:69)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":162:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":165:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":162:17)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":162:34)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":163:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":164:17)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":166:20)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":166:21)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":166:30)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":166:33)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":166:47)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":166:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":166:48)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":167:34)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":167:13)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":168:49)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":168:39)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":168:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":168:59)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":169:38)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":169:32)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":169:13)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":169:46)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:13)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":173:13)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:25)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:58)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:59)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:68)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:82)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:17)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":170:88)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":171:13)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":172:17)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:31)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:46)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:59)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:77)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:80)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:26)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:13)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":176:81)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":180:13)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:17)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:31)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:47)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":177:61)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":178:13)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":179:17)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":182:39)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":182:25)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":182:13)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":184:25)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":184:20)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":184:13)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":184:36)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":187:9)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":190:9)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":187:13)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":187:30)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":188:9)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":189:26)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":189:13)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":198:5)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":198:10)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:9)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":216:9)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:13)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:21)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:26)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:34)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":204:36)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":205:9)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":212:9)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":214:9)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":206:28)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":206:20)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":206:13)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:13)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":211:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:21)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:17)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:24)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:28)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:26)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":209:13)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":210:37)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":210:30)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":210:17)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:33)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":208:32)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":215:13)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":221:1)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":252:1)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":223:5)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":223:9)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":234:9)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":234:13)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":235:9)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":235:30)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":225:13)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":225:12)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":225:5)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":226:5)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":226:10)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":230:12)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":230:5)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":231:5)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":231:10)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":238:9)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":250:9)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":238:13)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":238:21)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":239:9)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":246:9)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":248:9)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":240:28)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":240:20)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":240:13)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:13)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":245:13)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:21)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:17)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:24)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:28)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:26)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":243:13)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":244:37)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":244:30)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":244:17)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:33)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":242:32)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":249:23)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_18.c":249:13)
#loc319 = loc(fused[#loc1, #loc2])
#loc320 = loc(fused[#loc3, #loc4])
#loc321 = loc(fused[#loc6, #loc7])
#loc322 = loc(fused[#loc8, #loc9])
#loc323 = loc(fused[#loc10, #loc11])
#loc324 = loc(fused[#loc12, #loc13])
#loc325 = loc(fused[#loc14, #loc15])
#loc326 = loc(fused[#loc16, #loc17])
#loc327 = loc(fused[#loc18, #loc19])
#loc328 = loc(fused[#loc21, #loc22])
#loc329 = loc(fused[#loc23, #loc24])
#loc330 = loc(fused[#loc25, #loc26])
#loc331 = loc(fused[#loc27, #loc28])
#loc332 = loc(fused[#loc29, #loc30])
#loc333 = loc(fused[#loc31, #loc32])
#loc334 = loc(fused[#loc33, #loc34])
#loc335 = loc(fused[#loc35, #loc36])
#loc336 = loc(fused[#loc39, #loc37])
#loc337 = loc(fused[#loc40, #loc41])
#loc338 = loc(fused[#loc42, #loc43])
#loc339 = loc(fused[#loc49, #loc50])
#loc340 = loc(fused[#loc51, #loc52])
#loc341 = loc(fused[#loc53, #loc54])
#loc342 = loc(fused[#loc55, #loc52])
#loc343 = loc(fused[#loc57, #loc58])
#loc344 = loc(fused[#loc60, #loc61])
#loc345 = loc(fused[#loc62, #loc63])
#loc346 = loc(fused[#loc66, #loc64])
#loc347 = loc(fused[#loc70, #loc71])
#loc348 = loc(fused[#loc75, #loc76])
#loc349 = loc(fused[#loc77, #loc78])
#loc350 = loc(fused[#loc80, #loc81])
#loc351 = loc(fused[#loc82, #loc83])
#loc352 = loc(fused[#loc84, #loc85])
#loc353 = loc(fused[#loc86, #loc78])
#loc354 = loc(fused[#loc90, #loc91])
#loc355 = loc(fused[#loc94, #loc95])
#loc356 = loc(fused[#loc96, #loc97])
#loc357 = loc(fused[#loc98, #loc99])
#loc358 = loc(fused[#loc101, #loc102])
#loc359 = loc(fused[#loc103, #loc97])
#loc360 = loc(fused[#loc107, #loc105])
#loc361 = loc(fused[#loc110, #loc111])
#loc362 = loc(fused[#loc112, #loc113])
#loc363 = loc(fused[#loc114, #loc115])
#loc364 = loc(fused[#loc116, #loc113])
#loc365 = loc(fused[#loc119, #loc120])
#loc366 = loc(fused[#loc121, #loc122])
#loc367 = loc(fused[#loc123, #loc124])
#loc368 = loc(fused[#loc125, #loc126, #loc127, #loc122])
#loc369 = loc(fused[#loc130, #loc128])
#loc370 = loc(fused[#loc131, #loc132])
#loc371 = loc(fused[#loc134, #loc133])
#loc372 = loc(fused[#loc135, #loc136])
#loc373 = loc(fused[#loc138, #loc132])
#loc374 = loc(fused[#loc143, #loc142])
#loc375 = loc(fused[#loc145, #loc146])
#loc376 = loc(fused[#loc147, #loc148])
#loc377 = loc(fused[#loc149, #loc150])
#loc378 = loc(fused[#loc152, #loc153])
#loc379 = loc(fused[#loc154, #loc155])
#loc380 = loc(fused[#loc156, #loc157])
#loc381 = loc(fused[#loc158, #loc159])
#loc382 = loc(fused[#loc160, #loc161])
#loc383 = loc(fused[#loc162, #loc163])
#loc384 = loc(fused[#loc164, #loc165])
#loc385 = loc(fused[#loc166, #loc167])
#loc386 = loc(fused[#loc170, #loc168])
#loc387 = loc(fused[#loc171, #loc172])
#loc388 = loc(fused[#loc173, #loc174])
#loc389 = loc(fused[#loc180, #loc181])
#loc390 = loc(fused[#loc182, #loc183])
#loc391 = loc(fused[#loc184, #loc185])
#loc392 = loc(fused[#loc186, #loc183])
#loc393 = loc(fused[#loc188, #loc189])
#loc394 = loc(fused[#loc191, #loc192])
#loc395 = loc(fused[#loc193, #loc194])
#loc396 = loc(fused[#loc196, #loc195])
#loc397 = loc(fused[#loc199, #loc200])
#loc398 = loc(fused[#loc203, #loc204])
#loc399 = loc(fused[#loc205, #loc206])
#loc400 = loc(fused[#loc208, #loc209])
#loc401 = loc(fused[#loc210, #loc211])
#loc402 = loc(fused[#loc212, #loc213])
#loc403 = loc(fused[#loc214, #loc206])
#loc404 = loc(fused[#loc218, #loc219])
#loc405 = loc(fused[#loc222, #loc223])
#loc406 = loc(fused[#loc224, #loc225])
#loc407 = loc(fused[#loc226, #loc227])
#loc408 = loc(fused[#loc229, #loc230])
#loc409 = loc(fused[#loc231, #loc225])
#loc410 = loc(fused[#loc235, #loc233])
#loc411 = loc(fused[#loc238, #loc239])
#loc412 = loc(fused[#loc240, #loc241])
#loc413 = loc(fused[#loc242, #loc243])
#loc414 = loc(fused[#loc244, #loc241])
#loc415 = loc(fused[#loc247, #loc248])
#loc416 = loc(fused[#loc249, #loc250])
#loc417 = loc(fused[#loc251, #loc252])
#loc418 = loc(fused[#loc254, #loc256])
#loc419 = loc(fused[#loc257, #loc258, #loc259, #loc250])
#loc420 = loc(fused[#loc262, #loc260])
#loc421 = loc(fused[#loc263, #loc264])
#loc422 = loc(fused[#loc266, #loc265])
#loc423 = loc(fused[#loc267, #loc268])
#loc424 = loc(fused[#loc270, #loc264])
#loc425 = loc(fused[#loc275, #loc274])
#loc426 = loc(fused[#loc277, #loc278])
#loc427 = loc(fused[#loc279, #loc280])
#loc428 = loc(fused[#loc281, #loc282])
#loc429 = loc(fused[#loc283, #loc284])
#loc430 = loc(fused[#loc287, #loc285])
#loc431 = loc(fused[#loc288, #loc289])
#loc432 = loc(fused[#loc291, #loc290])
#loc433 = loc(fused[#loc292, #loc293])
#loc434 = loc(fused[#loc294, #loc295])
#loc435 = loc(fused[#loc296, #loc297])
#loc436 = loc(fused[#loc298, #loc299, #loc300, #loc295])
#loc437 = loc(fused[#loc303, #loc301])
#loc438 = loc(fused[#loc304, #loc305])
#loc439 = loc(fused[#loc307, #loc306])
#loc440 = loc(fused[#loc308, #loc309])
#loc441 = loc(fused[#loc311, #loc305])
#loc442 = loc(fused[#loc316, #loc315])
