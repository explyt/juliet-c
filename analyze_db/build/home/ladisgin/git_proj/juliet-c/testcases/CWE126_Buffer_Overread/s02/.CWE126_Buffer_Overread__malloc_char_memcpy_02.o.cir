!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc217)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc220)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc24)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc227)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc228)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.br ^bb3 loc(#loc231)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc232)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc233)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc36)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb5 loc(#loc30)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc38)
    %22 = cir.const #cir.int<50> : !s32i loc(#loc39)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc39)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc39)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc234)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc43)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %29 = cir.const #cir.int<50> : !s32i loc(#loc45)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc45)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc235)
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
    %35 = cir.const #cir.int<67> : !s32i loc(#loc51)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc52)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc52)
    cir.libc.memset %39 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc237)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc56)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc57)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc238)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    %51 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc62)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    %53 = cir.call @strlen(%52) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc62)
    %54 = cir.const #cir.int<1> : !u64i loc(#loc239)
    %55 = cir.binop(mul, %53, %54) : !u64i loc(#loc240)
    cir.libc.memcpy %55 bytes from %50 to %48 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc241)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc68)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc69)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc242)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %64 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc74)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
    cir.call @free(%66) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
    cir.br ^bb10 loc(#loc49)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc12)
  } loc(#loc221)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    cir.return loc(#loc77)
  } loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc82)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc247)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc248)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc82)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb8 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc99)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc252)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc253)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc254)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.br ^bb4 loc(#loc256)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc257)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc258)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc111)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %23 = cir.const #cir.int<65> : !s32i loc(#loc113)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc114)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc114)
    cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc259)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc118)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc120)
    %34 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc260)
    cir.br ^bb8 loc(#loc92)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc261)
  ^bb10:  // pred: ^bb9
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    %37 = cir.const #cir.int<67> : !s32i loc(#loc126)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc127)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc127)
    cir.libc.memset %41 bytes from %36 set to %37 : !cir.ptr<!void>, !s32i, !u64i loc(#loc262)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc131)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc132)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc134)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc263)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
    %53 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc137)
    %54 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    %55 = cir.call @strlen(%54) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
    %56 = cir.const #cir.int<1> : !u64i loc(#loc264)
    %57 = cir.binop(mul, %55, %56) : !u64i loc(#loc265)
    cir.libc.memcpy %57 bytes from %52 to %50 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc266)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc143)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc144)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc267)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %66 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc149)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
    cir.call @free(%68) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    cir.br ^bb11 loc(#loc124)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc84)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc157)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc273)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc163)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc164)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc274)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc275)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc276)
    cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    cir.br ^bb3 loc(#loc278)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc279)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc280)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc176)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc178)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc179)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc179)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc179)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc281)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc183)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc185)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc185)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc187)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc282)
    cir.br ^bb7 loc(#loc160)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc160)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc283)
  ^bb9:  // pred: ^bb8
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc190)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
    %35 = cir.const #cir.int<67> : !s32i loc(#loc191)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc192)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc192)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc192)
    cir.libc.memset %39 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc196)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc197)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc197)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc199)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc199)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc285)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc200)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc201)
    %51 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc202)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
    %53 = cir.call @strlen(%52) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc202)
    %54 = cir.const #cir.int<1> : !u64i loc(#loc286)
    %55 = cir.binop(mul, %53, %54) : !u64i loc(#loc287)
    cir.libc.memcpy %55 bytes from %50 to %48 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc288)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc208)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc209)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc209)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc211)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    %64 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc214)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc215)
    cir.call @free(%66) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc214)
    cir.br ^bb10 loc(#loc189)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc152)
  } loc(#loc268)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":46:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":36:9)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":36:22)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":25:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":25:12)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":26:12)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":27:5)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":34:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":27:8)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":28:5)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":30:24)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":30:31)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":30:34)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":30:45)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":30:46)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":30:9)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:9)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:37)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:13)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:21)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:27)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:28)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:34)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":31:33)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":32:16)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":32:22)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":32:27)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":32:30)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":32:9)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":32:31)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":33:22)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":33:9)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":33:14)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":33:17)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":33:18)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":35:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":45:5)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":37:16)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":37:22)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":37:27)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":37:31)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":37:9)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":37:32)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":38:23)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":38:14)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":38:18)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":38:9)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:16)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:22)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:28)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:35)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:41)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:52)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:9)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":41:53)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":42:23)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":42:14)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":42:18)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":42:9)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":43:19)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":43:9)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":44:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":44:14)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":109:1)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":113:1)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":111:5)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":111:14)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":112:5)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":112:14)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":60:19)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":53:1)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":81:1)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":71:9)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":71:22)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":55:5)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":55:12)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":56:12)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":56:5)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":57:5)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":69:5)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":57:8)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":58:5)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":61:5)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":63:5)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":60:9)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":65:24)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":65:31)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":65:35)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":65:46)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":65:47)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":65:9)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:9)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:37)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:13)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:21)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:27)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:28)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:34)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":66:33)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":67:16)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":67:22)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":67:27)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":67:31)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":67:9)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":67:32)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":68:23)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":68:9)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":68:14)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":68:18)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":68:19)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":70:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":80:5)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":72:16)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":72:22)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":72:27)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":72:31)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":72:9)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":72:32)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":73:23)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":73:14)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":73:18)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":73:9)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:16)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:22)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:28)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:35)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:41)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:52)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:9)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":76:53)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":77:23)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":77:14)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":77:18)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":77:9)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":78:19)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":78:9)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":79:9)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":79:14)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":84:1)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":107:1)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":97:9)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":97:22)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":86:5)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":86:12)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":87:12)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":87:5)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":88:5)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":95:5)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":88:8)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":89:5)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":91:24)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":91:31)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":91:35)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":91:46)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":91:47)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":91:9)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:9)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:37)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:13)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:21)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:27)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:28)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:34)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":92:33)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":93:16)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":93:22)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":93:27)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":93:31)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":93:9)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":93:32)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":94:23)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":94:9)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":94:14)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":94:18)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":94:19)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":96:5)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":106:5)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":98:16)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":98:22)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":98:27)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":98:31)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":98:9)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":98:32)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":99:23)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":99:14)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":99:18)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":99:9)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:16)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:22)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:28)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:35)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:41)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:52)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:9)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":102:53)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":103:23)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":103:14)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":103:18)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":103:9)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":104:19)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":104:9)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":105:9)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_02.c":105:14)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc7, #loc8])
#loc220 = loc(fused[#loc9, #loc10])
#loc221 = loc(fused[#loc11, #loc12])
#loc222 = loc(fused[#loc13, #loc14])
#loc223 = loc(fused[#loc15, #loc16])
#loc224 = loc(fused[#loc18, #loc17])
#loc225 = loc(fused[#loc19, #loc20])
#loc226 = loc(fused[#loc22, #loc20])
#loc227 = loc(fused[#loc25, #loc26])
#loc228 = loc(fused[#loc24, #loc26])
#loc229 = loc(fused[#loc23, #loc27])
#loc230 = loc(fused[#loc28, #loc27])
#loc231 = loc(fused[#loc29, #loc30])
#loc232 = loc(fused[#loc31, #loc32])
#loc233 = loc(fused[#loc33, #loc30])
#loc234 = loc(fused[#loc41, #loc42])
#loc235 = loc(fused[#loc44, #loc43])
#loc236 = loc(fused[#loc48, #loc49])
#loc237 = loc(fused[#loc54, #loc55])
#loc238 = loc(fused[#loc59, #loc56])
#loc239 = loc(fused[#loc64, #loc65])
#loc240 = loc(fused[#loc62, #loc65])
#loc241 = loc(fused[#loc66, #loc67])
#loc242 = loc(fused[#loc71, #loc68])
#loc243 = loc(fused[#loc76, #loc77])
#loc244 = loc(fused[#loc78, #loc79])
#loc245 = loc(fused[#loc80, #loc81])
#loc246 = loc(fused[#loc83, #loc84])
#loc247 = loc(fused[#loc85, #loc86])
#loc248 = loc(fused[#loc87, #loc88])
#loc249 = loc(fused[#loc90, #loc89])
#loc250 = loc(fused[#loc91, #loc92])
#loc251 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc252 = loc(fused[#loc100, #loc101])
#loc253 = loc(fused[#loc99, #loc101])
#loc254 = loc(fused[#loc98, #loc102])
#loc255 = loc(fused[#loc103, #loc102])
#loc256 = loc(fused[#loc104, #loc105])
#loc257 = loc(fused[#loc106, #loc107])
#loc258 = loc(fused[#loc108, #loc105])
#loc259 = loc(fused[#loc116, #loc117])
#loc260 = loc(fused[#loc119, #loc118])
#loc261 = loc(fused[#loc123, #loc124])
#loc262 = loc(fused[#loc129, #loc130])
#loc263 = loc(fused[#loc134, #loc131])
#loc264 = loc(fused[#loc139, #loc140])
#loc265 = loc(fused[#loc137, #loc140])
#loc266 = loc(fused[#loc141, #loc142])
#loc267 = loc(fused[#loc146, #loc143])
#loc268 = loc(fused[#loc151, #loc152])
#loc269 = loc(fused[#loc153, #loc154])
#loc270 = loc(fused[#loc155, #loc156])
#loc271 = loc(fused[#loc158, #loc157])
#loc272 = loc(fused[#loc159, #loc160])
#loc273 = loc(fused[#loc162, #loc160])
#loc274 = loc(fused[#loc165, #loc166])
#loc275 = loc(fused[#loc164, #loc166])
#loc276 = loc(fused[#loc163, #loc167])
#loc277 = loc(fused[#loc168, #loc167])
#loc278 = loc(fused[#loc169, #loc170])
#loc279 = loc(fused[#loc171, #loc172])
#loc280 = loc(fused[#loc173, #loc170])
#loc281 = loc(fused[#loc181, #loc182])
#loc282 = loc(fused[#loc184, #loc183])
#loc283 = loc(fused[#loc188, #loc189])
#loc284 = loc(fused[#loc194, #loc195])
#loc285 = loc(fused[#loc199, #loc196])
#loc286 = loc(fused[#loc204, #loc205])
#loc287 = loc(fused[#loc202, #loc205])
#loc288 = loc(fused[#loc206, #loc207])
#loc289 = loc(fused[#loc211, #loc208])
