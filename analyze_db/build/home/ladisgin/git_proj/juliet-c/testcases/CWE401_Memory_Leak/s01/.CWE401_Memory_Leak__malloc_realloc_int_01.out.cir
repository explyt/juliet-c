!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":85:10)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":85:14)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":85:20)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":85:32)
#loc176 = loc(fused[#loc76, #loc77])
#loc177 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private @printIntLine(!s32i) loc(#loc149)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
      %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
      %2 = cir.const #cir.int<100> : !s32i loc(#loc18)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc18)
      %4 = cir.const #cir.int<4> : !u64i loc(#loc155)
      %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc156)
      %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc157)
      cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
      cir.scope {
        %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc24)
        %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s32i>, !cir.bool loc(#loc159)
        cir.if %28 {
          %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
          %30 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc28)
          cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
        } loc(#loc160)
      } loc(#loc158)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc29)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %11 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc32)
      cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc161)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc34)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc35)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc36)
      %16 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc37)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
      %19 = cir.const #cir.int<130000> : !s32i loc(#loc39)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc39)
      %21 = cir.const #cir.int<4> : !u64i loc(#loc162)
      %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc163)
      %23 = cir.call @realloc(%18, %22) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc37)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc164)
      cir.store %24, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
      cir.scope {
        %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc48)
        %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s32i>, !cir.bool loc(#loc167)
        cir.if %28 {
          %29 = cir.const #cir.int<10> : !s32i loc(#loc50)
          %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc52)
          %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc53)
          cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc169)
          %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
          %34 = cir.const #cir.int<0> : !s32i loc(#loc55)
          %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc56)
          %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc54)
          cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc57)
          %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc58)
          %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc59)
          cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc58)
        } loc(#loc168)
      } loc(#loc166)
    } loc(#loc153)
    cir.return loc(#loc12)
  } loc(#loc152)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_01_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_01_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %17 : !s32i loc(#loc180)
  } loc(#loc175)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
      %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc184)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
      %3 = cir.const #cir.int<100> : !s32i loc(#loc103)
      %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc103)
      %5 = cir.const #cir.int<4> : !u64i loc(#loc185)
      %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc186)
      %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc187)
      cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc183)
      cir.scope {
        %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
        %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
        %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s32i>, !cir.bool loc(#loc189)
        cir.if %32 {
          %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
          %34 = cir.const #cir.int<1> : !s32i loc(#loc112)
          %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc113)
          cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
        } loc(#loc190)
      } loc(#loc188)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc114)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc116)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc117)
      cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc191)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc119)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc120)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc121)
      %17 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc122)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc123)
      %20 = cir.const #cir.int<130000> : !s32i loc(#loc124)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc124)
      %22 = cir.const #cir.int<4> : !u64i loc(#loc192)
      %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc193)
      %24 = cir.call @realloc(%19, %23) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc194)
      cir.store %25, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
      cir.scope {
        %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
        %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc133)
        %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s32i>, !cir.bool loc(#loc197)
        cir.if %32 {
          %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
          cir.store %33, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
          %34 = cir.const #cir.int<10> : !s32i loc(#loc137)
          %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
          %36 = cir.const #cir.int<0> : !s32i loc(#loc139)
          %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc140)
          cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc200)
          %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
          %39 = cir.const #cir.int<0> : !s32i loc(#loc142)
          %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc143)
          %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc141)
          cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc144)
        } loc(#loc198)
      } loc(#loc196)
      %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc145)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc146)
      cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
    } loc(#loc182)
    cir.return loc(#loc95)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":683:1)
#loc8 = loc("/usr/include/stdlib.h":684:14)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":42:1)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":41:5)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":27:9)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":27:51)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":27:29)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":27:36)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":27:40)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":27:50)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:9)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:37)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:13)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:21)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:27)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:28)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:34)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":28:33)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":30:19)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":30:9)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":30:14)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":30:15)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":31:22)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":31:27)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":31:28)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":31:9)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:23)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:31)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:38)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:46)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:56)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:37)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:57)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":33:9)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":34:9)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":40:9)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":34:13)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":34:21)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":35:9)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":37:23)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":37:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":37:18)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":37:19)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":38:26)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":38:31)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":38:32)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":38:13)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":39:13)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":39:18)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":71:1)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":74:1)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":73:5)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":73:11)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":90:15)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":92:15)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":95:15)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":97:15)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":85:1)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":100:1)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":86:1)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":88:27)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":88:22)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":88:5)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":90:5)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":91:5)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":91:52)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":92:5)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":95:5)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":96:5)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":96:51)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":97:5)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":99:12)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":99:5)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":48:1)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":69:1)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":50:5)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":68:5)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":51:9)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":51:51)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":53:9)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":53:15)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":51:29)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":51:36)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":51:40)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":51:50)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:9)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:37)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:13)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:21)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:27)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:28)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:34)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":52:33)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":55:19)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":55:9)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":55:14)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":55:15)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":56:22)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":56:27)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":56:28)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":56:9)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:26)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:34)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:41)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:49)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:59)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:40)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:60)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":57:9)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":60:9)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":66:9)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":60:13)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":60:24)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":61:9)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":62:20)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":62:13)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":64:23)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":64:13)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":64:18)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":64:19)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":65:26)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":65:31)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":65:32)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":65:13)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":67:9)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int_01.c":67:14)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc15, #loc16])
#loc155 = loc(fused[#loc19, #loc20])
#loc156 = loc(fused[#loc18, #loc20])
#loc157 = loc(fused[#loc17, #loc16])
#loc158 = loc(fused[#loc21, #loc22])
#loc159 = loc(fused[#loc23, #loc24])
#loc160 = loc(fused[#loc25, #loc22])
#loc161 = loc(fused[#loc30, #loc29])
#loc162 = loc(fused[#loc40, #loc41])
#loc163 = loc(fused[#loc42, #loc41])
#loc164 = loc(fused[#loc37, #loc43])
#loc165 = loc(fused[#loc44, #loc43])
#loc166 = loc(fused[#loc45, #loc46])
#loc167 = loc(fused[#loc47, #loc48])
#loc168 = loc(fused[#loc49, #loc46])
#loc169 = loc(fused[#loc51, #loc50])
#loc170 = loc(fused[#loc60, #loc61])
#loc171 = loc(fused[#loc62, #loc63])
#loc172 = loc(fused[#loc64, #loc65])
#loc173 = loc(fused[#loc66, #loc67])
#loc174 = loc(fused[#loc68, #loc69])
#loc175 = loc(fused[#loc74, #loc75])
#loc178 = loc(fused[#loc85, #loc86])
#loc179 = loc(fused[#loc89, #loc90])
#loc180 = loc(fused[#loc93, #loc92])
#loc181 = loc(fused[#loc94, #loc95])
#loc182 = loc(fused[#loc96, #loc97])
#loc183 = loc(fused[#loc98, #loc99])
#loc184 = loc(fused[#loc100, #loc101])
#loc185 = loc(fused[#loc104, #loc105])
#loc186 = loc(fused[#loc103, #loc105])
#loc187 = loc(fused[#loc102, #loc99])
#loc188 = loc(fused[#loc106, #loc107])
#loc189 = loc(fused[#loc108, #loc109])
#loc190 = loc(fused[#loc110, #loc107])
#loc191 = loc(fused[#loc115, #loc114])
#loc192 = loc(fused[#loc125, #loc126])
#loc193 = loc(fused[#loc127, #loc126])
#loc194 = loc(fused[#loc122, #loc128])
#loc195 = loc(fused[#loc129, #loc128])
#loc196 = loc(fused[#loc130, #loc131])
#loc197 = loc(fused[#loc132, #loc133])
#loc198 = loc(fused[#loc134, #loc131])
#loc199 = loc(fused[#loc136, #loc135])
#loc200 = loc(fused[#loc138, #loc137])
