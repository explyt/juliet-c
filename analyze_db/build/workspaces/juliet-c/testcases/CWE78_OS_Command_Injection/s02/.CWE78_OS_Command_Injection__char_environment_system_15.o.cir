!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc131)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc132)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_system_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc133)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc134)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc16)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc19)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc133)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_system_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc30)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc145)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc146)
            %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
            cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc145)
            %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc11)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc11)
            %12 = cir.call @getenv(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
            cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
              %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
              cir.if %16 {
                %17 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc46)
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                %19 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc49)
                %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc51)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc51)
                %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc150)
                %26 = cir.const #cir.int<1> : !s32i loc(#loc53)
                %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc53)
                %28 = cir.binop(sub, %25, %27) : !u64i loc(#loc151)
                %29 = cir.call @strncat(%20, %21, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc46)
              } loc(#loc149)
            } loc(#loc147)
          } loc(#loc144)
          cir.break loc(#loc54)
        } loc(#loc31)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc16)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc16)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          cir.break loc(#loc57)
        } loc(#loc55)
        cir.yield loc(#loc28)
      } loc(#loc28)
    } loc(#loc143)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc61)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc153)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc19)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc19)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc64)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc65)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc66)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
      } loc(#loc154)
    } loc(#loc152)
    cir.return loc(#loc23)
  } loc(#loc140)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc155)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc132)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc84)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc87)
          cir.break loc(#loc88)
        } loc(#loc85)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc90)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc75)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc75)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
          cir.break loc(#loc92)
        } loc(#loc89)
        cir.yield loc(#loc82)
      } loc(#loc82)
    } loc(#loc162)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc96)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc97)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc164)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc99)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc100)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc101)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc102)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
      } loc(#loc165)
    } loc(#loc163)
    cir.return loc(#loc77)
  } loc(#loc159)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc111)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc113)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc115)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc115)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
          cir.break loc(#loc116)
        } loc(#loc112)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc118)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc118)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          cir.break loc(#loc120)
        } loc(#loc117)
        cir.yield loc(#loc109)
      } loc(#loc109)
    } loc(#loc169)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc124)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc171)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc127)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc128)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc129)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc130)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
      } loc(#loc172)
    } loc(#loc170)
    cir.return loc(#loc104)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":110:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":110:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":85:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":85:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":47:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":47:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdlib.h":773:1)
#loc10 = loc("/usr/include/stdlib.h":773:50)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:37)
#loc12 = loc("/usr/include/string.h":152:1)
#loc13 = loc("/usr/include/string.h":153:29)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":66:19)
#loc17 = loc("/usr/include/stdlib.h":923:1)
#loc18 = loc("/usr/include/stdlib.h":923:41)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":72:19)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":44:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":75:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":46:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":46:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":48:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":48:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":49:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":68:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":49:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":51:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":52:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":62:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:37)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:49)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:26)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:33)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:30)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":57:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":61:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":57:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":57:28)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":58:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:21)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:35)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:48)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:52)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:60)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":63:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":64:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":66:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":67:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":74:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:16)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:9)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:25)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":71:5)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":72:9)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":73:9)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":73:14)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":131:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":135:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":133:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":133:14)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":134:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":134:14)
#loc73 = loc("/usr/include/string.h":149:1)
#loc74 = loc("/usr/include/string.h":150:14)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":95:22)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":82:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":104:1)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":84:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":84:12)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":86:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":86:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":87:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":97:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":87:12)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":89:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":91:19)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":91:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":92:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":93:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":95:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":95:16)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":96:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":103:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:16)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:9)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:25)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":100:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":101:19)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":101:9)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":102:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":102:14)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":107:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":129:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":109:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":109:12)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":111:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":111:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":112:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":122:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":112:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":114:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":116:9)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":116:16)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":116:22)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":117:9)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":118:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":120:19)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":120:9)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":121:9)
#loc121 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":128:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:16)
#loc124 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:25)
#loc126 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":125:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":126:19)
#loc128 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":126:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":127:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":127:14)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc12, #loc13])
#loc137 = loc(fused[#loc14, #loc15])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc20, #loc21])
#loc140 = loc(fused[#loc22, #loc23])
#loc141 = loc(fused[#loc24, #loc25])
#loc142 = loc(fused[#loc27, #loc26])
#loc143 = loc(fused[#loc28, #loc29])
#loc144 = loc(fused[#loc32, #loc33])
#loc145 = loc(fused[#loc34, #loc35])
#loc146 = loc(fused[#loc36, #loc37])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc43, #loc44])
#loc149 = loc(fused[#loc45, #loc42])
#loc150 = loc(fused[#loc51, #loc52])
#loc151 = loc(fused[#loc51, #loc53])
#loc152 = loc(fused[#loc58, #loc59])
#loc153 = loc(fused[#loc61, #loc62])
#loc154 = loc(fused[#loc63, #loc59])
#loc155 = loc(fused[#loc67, #loc68])
#loc156 = loc(fused[#loc69, #loc70])
#loc157 = loc(fused[#loc71, #loc72])
#loc158 = loc(fused[#loc73, #loc74])
#loc159 = loc(fused[#loc76, #loc77])
#loc160 = loc(fused[#loc78, #loc79])
#loc161 = loc(fused[#loc81, #loc80])
#loc162 = loc(fused[#loc82, #loc83])
#loc163 = loc(fused[#loc93, #loc94])
#loc164 = loc(fused[#loc96, #loc97])
#loc165 = loc(fused[#loc98, #loc94])
#loc166 = loc(fused[#loc103, #loc104])
#loc167 = loc(fused[#loc105, #loc106])
#loc168 = loc(fused[#loc108, #loc107])
#loc169 = loc(fused[#loc109, #loc110])
#loc170 = loc(fused[#loc121, #loc122])
#loc171 = loc(fused[#loc124, #loc125])
#loc172 = loc(fused[#loc126, #loc122])
