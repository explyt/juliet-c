!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc71)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc72)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc73)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc74)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc75)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc72)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc78)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc79)
    cir.br ^bb1 loc(#loc80)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc80)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc21)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc24)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc82)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc83)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc72)
    cir.copy %12 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc72)
    %13 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc31)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc33)
    %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc36)
    %21 = cir.binop(add, %18, %20) : !u64i loc(#loc84)
    %22 = cir.call @strncpy(%14, %15, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc12)
  } loc(#loc76)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc86)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc85)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc71)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc88)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc89)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc90)
    cir.br ^bb1 loc(#loc91)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc91)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc53)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc53)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc56)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc93)
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc52)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc94)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc71)
    cir.copy %12 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc71)
    %13 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc63)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc65)
    %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc66)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
    %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc66)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc68)
    %21 = cir.binop(add, %18, %20) : !u64i loc(#loc95)
    %22 = cir.call @strncpy(%14, %15, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb7 loc(#loc62)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc44)
  } loc(#loc87)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":69:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":69:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":42:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":42:29)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":48:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":31:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":32:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":40:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":33:11)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":37:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":37:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":38:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":38:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":38:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":39:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":41:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":47:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":45:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":45:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":45:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":45:31)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":45:38)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":45:48)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":46:19)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":46:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":77:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":80:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":79:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":79:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":55:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":75:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":57:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":57:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":58:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":58:26)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":59:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":59:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":60:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":67:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":60:11)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":64:16)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":64:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":65:19)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":65:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":65:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":65:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":66:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":68:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":74:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":72:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":72:17)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":72:23)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":72:31)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":72:38)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":72:48)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":73:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_16.c":73:9)
#loc71 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc3, #loc4])
#loc73 = loc(fused[#loc5, #loc6])
#loc74 = loc(fused[#loc7, #loc8])
#loc75 = loc(fused[#loc9, #loc10])
#loc76 = loc(fused[#loc11, #loc12])
#loc77 = loc(fused[#loc13, #loc14])
#loc78 = loc(fused[#loc15, #loc16])
#loc79 = loc(fused[#loc17, #loc18])
#loc80 = loc(fused[#loc19, #loc20])
#loc81 = loc(fused[#loc23, #loc22])
#loc82 = loc(fused[#loc25, #loc24])
#loc83 = loc(fused[#loc29, #loc30])
#loc84 = loc(fused[#loc34, #loc36])
#loc85 = loc(fused[#loc39, #loc40])
#loc86 = loc(fused[#loc41, #loc42])
#loc87 = loc(fused[#loc43, #loc44])
#loc88 = loc(fused[#loc45, #loc46])
#loc89 = loc(fused[#loc47, #loc48])
#loc90 = loc(fused[#loc49, #loc50])
#loc91 = loc(fused[#loc51, #loc52])
#loc92 = loc(fused[#loc55, #loc54])
#loc93 = loc(fused[#loc57, #loc56])
#loc94 = loc(fused[#loc61, #loc62])
#loc95 = loc(fused[#loc66, #loc68])
