!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc355)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc356)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc357)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc358)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc359)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc360)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc361)
  cir.func private @close(!s32i) -> !s32i loc(#loc362)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc363)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc364)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc366)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc367)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc368)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc367)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc368)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc31)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc371)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc37)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc371)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc373)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc374)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc375)
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc376)
        %14 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc377)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc45)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc45)
        cir.store %16, %12 : !s32i, !cir.ptr<!s32i> loc(#loc375)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc47)
        cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc376)
        cir.scope {
          cir.do {
            cir.scope {
              %19 = cir.const #cir.int<2> : !s32i loc(#loc54)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc55)
              %21 = cir.const #cir.int<6> : !s32i loc(#loc56)
              %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
              cir.store %22, %12 : !s32i, !cir.ptr<!s32i> loc(#loc380)
              cir.scope {
                %64 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc63)
                %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc63)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc382)
                cir.if %67 {
                  cir.break loc(#loc65)
                } loc(#loc383)
              } loc(#loc381)
              %23 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc384)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc68)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc385)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc386)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc73)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc73)
              %28 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc387)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc76)
              %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc76)
              %31 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc388)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc80)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc80)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
              %36 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc389)
              cir.scope {
                %64 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %65 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc391)
                %66 = cir.const #cir.int<16> : !u64i loc(#loc392)
                %67 = cir.cast(integral, %66 : !u64i), !u32i loc(#loc392)
                %68 = cir.call @bind(%64, %65, %67) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc93)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc393)
                cir.if %71 {
                  cir.break loc(#loc95)
                } loc(#loc394)
              } loc(#loc390)
              cir.scope {
                %64 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %65 = cir.const #cir.int<5> : !s32i loc(#loc99)
                %66 = cir.call @listen(%64, %65) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
                %67 = cir.const #cir.int<1> : !s32i loc(#loc101)
                %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc101)
                %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc396)
                cir.if %69 {
                  cir.break loc(#loc103)
                } loc(#loc397)
              } loc(#loc395)
              %37 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
              %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
              %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
              cir.store %40, %13 : !s32i, !cir.ptr<!s32i> loc(#loc398)
              cir.scope {
                %64 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc113)
                %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc113)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc400)
                cir.if %67 {
                  cir.break loc(#loc115)
                } loc(#loc401)
              } loc(#loc399)
              %41 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %42 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
              %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
              %44 = cir.const #cir.int<3> : !s32i loc(#loc118)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc118)
              %46 = cir.const #cir.int<4> : !u64i loc(#loc118)
              %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc118)
              %48 = cir.const #cir.int<2> : !s32i loc(#loc118)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc118)
              %50 = cir.binop(add, %47, %49) : !u64i loc(#loc118)
              %51 = cir.const #cir.int<1> : !s32i loc(#loc119)
              %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc119)
              %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc402)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc120)
              %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc121)
              %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc121)
              cir.store %56, %10 : !s32i, !cir.ptr<!s32i> loc(#loc403)
              cir.scope {
                %64 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc127)
                %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc127)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc405)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc128)
                  cir.yield %69 : !cir.bool loc(#loc128)
                }, false {
                  %69 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                  %70 = cir.const #cir.int<0> : !s32i loc(#loc130)
                  %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc406)
                  %72 = cir.ternary(%71, true {
                    %73 = cir.const #true loc(#loc128)
                    cir.yield %73 : !cir.bool loc(#loc128)
                  }, false {
                    %73 = cir.const #false loc(#loc128)
                    cir.yield %73 : !cir.bool loc(#loc128)
                  }) : (!cir.bool) -> !cir.bool loc(#loc128)
                  cir.yield %72 : !cir.bool loc(#loc128)
                }) : (!cir.bool) -> !cir.bool loc(#loc128)
                cir.if %68 {
                  cir.break loc(#loc132)
                } loc(#loc407)
              } loc(#loc404)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc133)
              %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc133)
              %59 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %60 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
              %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc135)
              cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc408)
              %62 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
              %63 = cir.call @atoi(%62) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc137)
              cir.store %63, %5 : !s32i, !cir.ptr<!s32i> loc(#loc409)
            } loc(#loc379)
            cir.yield loc(#loc51)
          } while {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc140)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc140)
            cir.condition(%20) loc(#loc140)
          } loc(#loc378)
        } loc(#loc378)
        cir.scope {
          %19 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc144)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc144)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc411)
          cir.if %22 {
            %23 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc146)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc147)
          } loc(#loc412)
        } loc(#loc410)
        cir.scope {
          %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc150)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc151)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc151)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc414)
          cir.if %22 {
            %23 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc153)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc154)
          } loc(#loc415)
        } loc(#loc413)
      } loc(#loc372)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    } loc(#loc370)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc418)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc418)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc163)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc163)
      %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc164)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc21)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc21)
      cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    } loc(#loc417)
    cir.return loc(#loc23)
  } loc(#loc365)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc420)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc421)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc170)
    cir.return loc(#loc167)
  } loc(#loc419)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc423)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc424)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc425)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc424)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc425)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc181)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc428)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc187)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc428)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc188)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc429)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc190)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    } loc(#loc427)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc432)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc196)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc197)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc432)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc198)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc198)
      %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc199)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc200)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc200)
      cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    } loc(#loc431)
    cir.return loc(#loc173)
  } loc(#loc422)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc203)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc435)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc436)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc435)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc436)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc213)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc437)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc439)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc219)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc439)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc441)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc442)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc443)
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc444)
        %14 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc445)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc227)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc227)
        cir.store %16, %12 : !s32i, !cir.ptr<!s32i> loc(#loc443)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc229)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc229)
        cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc444)
        cir.scope {
          cir.do {
            cir.scope {
              %19 = cir.const #cir.int<2> : !s32i loc(#loc236)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc237)
              %21 = cir.const #cir.int<6> : !s32i loc(#loc238)
              %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc239)
              cir.store %22, %12 : !s32i, !cir.ptr<!s32i> loc(#loc448)
              cir.scope {
                %64 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc245)
                %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc245)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc450)
                cir.if %67 {
                  cir.break loc(#loc247)
                } loc(#loc451)
              } loc(#loc449)
              %23 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc452)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc250)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc453)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc454)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc255)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc255)
              %28 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc455)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc257)
              %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc257)
              %31 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc456)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc259)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc259)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc260)
              %36 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc457)
              cir.scope {
                %64 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc265)
                %65 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc459)
                %66 = cir.const #cir.int<16> : !u64i loc(#loc460)
                %67 = cir.cast(integral, %66 : !u64i), !u32i loc(#loc460)
                %68 = cir.call @bind(%64, %65, %67) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc270)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc271)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc271)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc461)
                cir.if %71 {
                  cir.break loc(#loc273)
                } loc(#loc462)
              } loc(#loc458)
              cir.scope {
                %64 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                %65 = cir.const #cir.int<5> : !s32i loc(#loc277)
                %66 = cir.call @listen(%64, %65) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc278)
                %67 = cir.const #cir.int<1> : !s32i loc(#loc279)
                %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc279)
                %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc464)
                cir.if %69 {
                  cir.break loc(#loc281)
                } loc(#loc465)
              } loc(#loc463)
              %37 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc282)
              %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc283)
              %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc284)
              %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc285)
              cir.store %40, %13 : !s32i, !cir.ptr<!s32i> loc(#loc466)
              cir.scope {
                %64 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc291)
                %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc291)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc468)
                cir.if %67 {
                  cir.break loc(#loc293)
                } loc(#loc469)
              } loc(#loc467)
              %41 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc294)
              %42 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
              %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc295)
              %44 = cir.const #cir.int<3> : !s32i loc(#loc296)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc296)
              %46 = cir.const #cir.int<4> : !u64i loc(#loc296)
              %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc296)
              %48 = cir.const #cir.int<2> : !s32i loc(#loc296)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc296)
              %50 = cir.binop(add, %47, %49) : !u64i loc(#loc296)
              %51 = cir.const #cir.int<1> : !s32i loc(#loc297)
              %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc297)
              %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc470)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc298)
              %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc299)
              %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc299)
              cir.store %56, %10 : !s32i, !cir.ptr<!s32i> loc(#loc471)
              cir.scope {
                %64 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc305)
                %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc305)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc473)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc306)
                  cir.yield %69 : !cir.bool loc(#loc306)
                }, false {
                  %69 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  %70 = cir.const #cir.int<0> : !s32i loc(#loc308)
                  %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc474)
                  %72 = cir.ternary(%71, true {
                    %73 = cir.const #true loc(#loc306)
                    cir.yield %73 : !cir.bool loc(#loc306)
                  }, false {
                    %73 = cir.const #false loc(#loc306)
                    cir.yield %73 : !cir.bool loc(#loc306)
                  }) : (!cir.bool) -> !cir.bool loc(#loc306)
                  cir.yield %72 : !cir.bool loc(#loc306)
                }) : (!cir.bool) -> !cir.bool loc(#loc306)
                cir.if %68 {
                  cir.break loc(#loc310)
                } loc(#loc475)
              } loc(#loc472)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc311)
              %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc311)
              %59 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc312)
              %60 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc313)
              %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc313)
              cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc476)
              %62 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc314)
              %63 = cir.call @atoi(%62) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc315)
              cir.store %63, %5 : !s32i, !cir.ptr<!s32i> loc(#loc477)
            } loc(#loc447)
            cir.yield loc(#loc233)
          } while {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc318)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc318)
            cir.condition(%20) loc(#loc318)
          } loc(#loc446)
        } loc(#loc446)
        cir.scope {
          %19 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc321)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc322)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc322)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc479)
          cir.if %22 {
            %23 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc324)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc325)
          } loc(#loc480)
        } loc(#loc478)
        cir.scope {
          %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc328)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc329)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc329)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc482)
          cir.if %22 {
            %23 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc331)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc332)
          } loc(#loc483)
        } loc(#loc481)
      } loc(#loc440)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc333)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc334)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    } loc(#loc438)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc486)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc339)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc340)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc486)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc343)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc344)
        %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc488)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc346)
          %13 = cir.const #cir.int<2000> : !s32i loc(#loc347)
          %14 = cir.cmp(le, %12, %13) : !s32i, !cir.bool loc(#loc489)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc345)
            cir.yield %16 : !cir.bool loc(#loc345)
          }, false {
            %16 = cir.const #false loc(#loc345)
            cir.yield %16 : !cir.bool loc(#loc345)
          }) : (!cir.bool) -> !cir.bool loc(#loc345)
          cir.yield %15 : !cir.bool loc(#loc345)
        }, false {
          %12 = cir.const #false loc(#loc345)
          cir.yield %12 : !cir.bool loc(#loc345)
        }) : (!cir.bool) -> !cir.bool loc(#loc345)
        cir.if %11 {
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc351)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc351)
          %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc352)
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc202)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc202)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc353)
        } else {
          %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc203)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc203)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc354)
        } loc(#loc490)
      } loc(#loc487)
    } loc(#loc485)
    cir.return loc(#loc205)
  } loc(#loc433)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/unistd.h":480:1)
#loc18 = loc("/usr/include/unistd.h":480:43)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":134:19)
#loc22 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":50:1)
#loc23 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":136:1)
#loc24 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":52:5)
#loc25 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":52:9)
#loc26 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":53:5)
#loc27 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":53:23)
#loc28 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":54:5)
#loc29 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":54:23)
#loc30 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":56:14)
#loc31 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":56:13)
#loc32 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":56:5)
#loc33 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":57:5)
#loc34 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":129:5)
#loc35 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":58:9)
#loc36 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":58:22)
#loc37 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":58:21)
#loc38 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":59:9)
#loc39 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":127:9)
#loc40 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":64:13)
#loc41 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":64:17)
#loc42 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":65:13)
#loc43 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":65:32)
#loc44 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":66:13)
#loc45 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":66:35)
#loc46 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":67:13)
#loc47 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":67:35)
#loc48 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":68:13)
#loc49 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":68:45)
#loc50 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":69:13)
#loc51 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":112:21)
#loc52 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":70:13)
#loc53 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":111:13)
#loc54 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":79:39)
#loc55 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":79:48)
#loc56 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":79:61)
#loc57 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":79:32)
#loc58 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":79:17)
#loc59 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":79:72)
#loc60 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":80:17)
#loc61 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":83:17)
#loc62 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":80:21)
#loc63 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":80:37)
#loc64 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":81:17)
#loc65 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":82:21)
#loc66 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":84:24)
#loc67 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":84:25)
#loc68 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":84:34)
#loc69 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":84:37)
#loc70 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":84:51)
#loc71 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":84:17)
#loc72 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":84:52)
#loc73 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":85:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":85:17)
#loc76 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":86:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":86:17)
#loc80 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":87:42)
#loc81 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":87:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":87:17)
#loc84 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":87:50)
#loc85 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:17)
#loc86 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":91:17)
#loc87 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:26)
#loc88 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:58)
#loc89 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:59)
#loc90 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:68)
#loc91 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:82)
#loc92 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:21)
#loc93 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":88:88)
#loc94 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":89:17)
#loc95 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":90:21)
#loc96 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":92:17)
#loc97 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":95:17)
#loc98 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":92:28)
#loc99 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":92:42)
#loc100 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":92:21)
#loc101 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":92:61)
#loc102 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":93:17)
#loc103 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":94:21)
#loc104 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":96:39)
#loc105 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":96:53)
#loc106 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":96:59)
#loc107 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":96:32)
#loc108 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":96:17)
#loc109 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":96:63)
#loc110 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":97:17)
#loc111 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":100:17)
#loc112 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":97:21)
#loc113 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":97:37)
#loc114 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":98:17)
#loc115 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":99:21)
#loc116 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:35)
#loc117 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:49)
#loc118 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:62)
#loc119 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:80)
#loc120 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:83)
#loc121 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:30)
#loc122 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:17)
#loc123 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":102:84)
#loc124 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":103:17)
#loc125 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":106:17)
#loc126 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":103:21)
#loc127 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":103:35)
#loc128 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":103:48)
#loc129 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":103:51)
#loc130 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":103:65)
#loc131 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":104:17)
#loc132 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":105:21)
#loc133 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":108:43)
#loc134 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":108:29)
#loc135 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":108:17)
#loc136 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":110:30)
#loc137 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":110:25)
#loc138 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":110:17)
#loc139 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":110:41)
#loc140 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":112:20)
#loc141 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":113:13)
#loc142 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":116:13)
#loc143 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":113:17)
#loc144 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":113:33)
#loc145 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":114:13)
#loc146 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":115:30)
#loc147 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":115:17)
#loc148 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":117:13)
#loc149 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":120:13)
#loc150 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":117:17)
#loc151 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":117:33)
#loc152 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":118:13)
#loc153 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":119:30)
#loc154 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":119:17)
#loc155 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":128:22)
#loc156 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":128:10)
#loc157 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":128:9)
#loc158 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":130:5)
#loc159 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":135:5)
#loc160 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":131:9)
#loc161 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":131:22)
#loc162 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":131:21)
#loc163 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":133:15)
#loc164 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":133:9)
#loc165 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":134:9)
#loc166 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":260:1)
#loc167 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":264:1)
#loc168 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":262:5)
#loc169 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":262:13)
#loc170 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":263:5)
#loc171 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":263:13)
#loc172 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":143:1)
#loc173 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":162:1)
#loc174 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":145:5)
#loc175 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":145:9)
#loc176 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":146:5)
#loc177 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":146:23)
#loc178 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":147:5)
#loc179 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":147:23)
#loc180 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":149:14)
#loc181 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":149:13)
#loc182 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":149:5)
#loc183 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":150:5)
#loc184 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":155:5)
#loc185 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":151:9)
#loc186 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":151:22)
#loc187 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":151:21)
#loc188 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":153:17)
#loc189 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":153:9)
#loc190 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":154:22)
#loc191 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":154:10)
#loc192 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":154:9)
#loc193 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":156:5)
#loc194 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":161:5)
#loc195 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":157:9)
#loc196 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":157:22)
#loc197 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":157:21)
#loc198 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":159:15)
#loc199 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":159:9)
#loc200 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":160:19)
#loc201 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":160:9)
#loc202 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":251:23)
#loc203 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":255:23)
#loc204 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":165:1)
#loc205 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":258:1)
#loc206 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":167:5)
#loc207 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":167:9)
#loc208 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":168:5)
#loc209 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":168:23)
#loc210 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":169:5)
#loc211 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":169:23)
#loc212 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":171:14)
#loc213 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":171:13)
#loc214 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":171:5)
#loc215 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":172:5)
#loc216 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":244:5)
#loc217 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":173:9)
#loc218 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":173:22)
#loc219 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":173:21)
#loc220 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":174:9)
#loc221 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":242:9)
#loc222 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":179:13)
#loc223 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":179:17)
#loc224 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":180:13)
#loc225 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":180:32)
#loc226 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":181:13)
#loc227 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":181:35)
#loc228 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":182:13)
#loc229 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":182:35)
#loc230 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":183:13)
#loc231 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":183:45)
#loc232 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":184:13)
#loc233 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":227:21)
#loc234 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":185:13)
#loc235 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":226:13)
#loc236 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":194:39)
#loc237 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":194:48)
#loc238 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":194:61)
#loc239 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":194:32)
#loc240 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":194:17)
#loc241 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":194:72)
#loc242 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":195:17)
#loc243 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":198:17)
#loc244 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":195:21)
#loc245 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":195:37)
#loc246 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":196:17)
#loc247 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":197:21)
#loc248 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":199:24)
#loc249 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":199:25)
#loc250 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":199:34)
#loc251 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":199:37)
#loc252 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":199:51)
#loc253 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":199:17)
#loc254 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":199:52)
#loc255 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":200:38)
#loc256 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":200:17)
#loc257 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":201:43)
#loc258 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":201:17)
#loc259 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":202:42)
#loc260 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":202:36)
#loc261 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":202:17)
#loc262 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":202:50)
#loc263 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:17)
#loc264 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":206:17)
#loc265 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:26)
#loc266 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:58)
#loc267 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:59)
#loc268 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:68)
#loc269 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:82)
#loc270 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:21)
#loc271 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":203:88)
#loc272 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":204:17)
#loc273 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":205:21)
#loc274 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":207:17)
#loc275 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":210:17)
#loc276 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":207:28)
#loc277 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":207:42)
#loc278 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":207:21)
#loc279 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":207:61)
#loc280 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":208:17)
#loc281 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":209:21)
#loc282 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":211:39)
#loc283 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":211:53)
#loc284 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":211:59)
#loc285 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":211:32)
#loc286 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":211:17)
#loc287 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":211:63)
#loc288 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":212:17)
#loc289 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":215:17)
#loc290 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":212:21)
#loc291 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":212:37)
#loc292 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":213:17)
#loc293 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":214:21)
#loc294 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:35)
#loc295 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:49)
#loc296 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:62)
#loc297 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:80)
#loc298 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:83)
#loc299 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:30)
#loc300 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:17)
#loc301 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":217:84)
#loc302 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":218:17)
#loc303 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":221:17)
#loc304 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":218:21)
#loc305 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":218:35)
#loc306 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":218:48)
#loc307 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":218:51)
#loc308 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":218:65)
#loc309 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":219:17)
#loc310 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":220:21)
#loc311 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":223:43)
#loc312 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":223:29)
#loc313 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":223:17)
#loc314 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":225:30)
#loc315 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":225:25)
#loc316 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":225:17)
#loc317 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":225:41)
#loc318 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":227:20)
#loc319 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":228:13)
#loc320 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":231:13)
#loc321 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":228:17)
#loc322 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":228:33)
#loc323 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":229:13)
#loc324 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":230:30)
#loc325 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":230:17)
#loc326 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":232:13)
#loc327 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":235:13)
#loc328 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":232:17)
#loc329 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":232:33)
#loc330 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":233:13)
#loc331 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":234:30)
#loc332 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":234:17)
#loc333 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":243:22)
#loc334 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":243:10)
#loc335 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":243:9)
#loc336 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":245:5)
#loc337 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":257:5)
#loc338 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":246:9)
#loc339 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":246:22)
#loc340 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":246:21)
#loc341 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":248:9)
#loc342 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":256:9)
#loc343 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":248:13)
#loc344 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":248:21)
#loc345 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":248:23)
#loc346 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":248:26)
#loc347 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":248:35)
#loc348 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":249:9)
#loc349 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":252:9)
#loc350 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":254:9)
#loc351 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":250:19)
#loc352 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":250:13)
#loc353 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":251:13)
#loc354 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_32.c":255:13)
#loc355 = loc(fused[#loc1, #loc2])
#loc356 = loc(fused[#loc3, #loc4])
#loc357 = loc(fused[#loc5, #loc6])
#loc358 = loc(fused[#loc7, #loc8])
#loc359 = loc(fused[#loc9, #loc10])
#loc360 = loc(fused[#loc11, #loc12])
#loc361 = loc(fused[#loc13, #loc14])
#loc362 = loc(fused[#loc15, #loc16])
#loc363 = loc(fused[#loc17, #loc18])
#loc364 = loc(fused[#loc19, #loc20])
#loc365 = loc(fused[#loc22, #loc23])
#loc366 = loc(fused[#loc24, #loc25])
#loc367 = loc(fused[#loc26, #loc27])
#loc368 = loc(fused[#loc28, #loc29])
#loc369 = loc(fused[#loc32, #loc30])
#loc370 = loc(fused[#loc33, #loc34])
#loc371 = loc(fused[#loc35, #loc36])
#loc372 = loc(fused[#loc38, #loc39])
#loc373 = loc(fused[#loc40, #loc41])
#loc374 = loc(fused[#loc42, #loc43])
#loc375 = loc(fused[#loc44, #loc45])
#loc376 = loc(fused[#loc46, #loc47])
#loc377 = loc(fused[#loc48, #loc49])
#loc378 = loc(fused[#loc50, #loc51])
#loc379 = loc(fused[#loc52, #loc53])
#loc380 = loc(fused[#loc58, #loc59])
#loc381 = loc(fused[#loc60, #loc61])
#loc382 = loc(fused[#loc62, #loc63])
#loc383 = loc(fused[#loc64, #loc61])
#loc384 = loc(fused[#loc66, #loc67])
#loc385 = loc(fused[#loc69, #loc70])
#loc386 = loc(fused[#loc71, #loc72])
#loc387 = loc(fused[#loc75, #loc73])
#loc388 = loc(fused[#loc79, #loc76])
#loc389 = loc(fused[#loc83, #loc84])
#loc390 = loc(fused[#loc85, #loc86])
#loc391 = loc(fused[#loc88, #loc89])
#loc392 = loc(fused[#loc90, #loc91])
#loc393 = loc(fused[#loc92, #loc93])
#loc394 = loc(fused[#loc94, #loc86])
#loc395 = loc(fused[#loc96, #loc97])
#loc396 = loc(fused[#loc100, #loc101])
#loc397 = loc(fused[#loc102, #loc97])
#loc398 = loc(fused[#loc108, #loc109])
#loc399 = loc(fused[#loc110, #loc111])
#loc400 = loc(fused[#loc112, #loc113])
#loc401 = loc(fused[#loc114, #loc111])
#loc402 = loc(fused[#loc118, #loc119])
#loc403 = loc(fused[#loc122, #loc123])
#loc404 = loc(fused[#loc124, #loc125])
#loc405 = loc(fused[#loc126, #loc127])
#loc406 = loc(fused[#loc129, #loc130])
#loc407 = loc(fused[#loc131, #loc125])
#loc408 = loc(fused[#loc135, #loc133])
#loc409 = loc(fused[#loc138, #loc139])
#loc410 = loc(fused[#loc141, #loc142])
#loc411 = loc(fused[#loc143, #loc144])
#loc412 = loc(fused[#loc145, #loc142])
#loc413 = loc(fused[#loc148, #loc149])
#loc414 = loc(fused[#loc150, #loc151])
#loc415 = loc(fused[#loc152, #loc149])
#loc416 = loc(fused[#loc157, #loc155])
#loc417 = loc(fused[#loc158, #loc159])
#loc418 = loc(fused[#loc160, #loc161])
#loc419 = loc(fused[#loc166, #loc167])
#loc420 = loc(fused[#loc168, #loc169])
#loc421 = loc(fused[#loc170, #loc171])
#loc422 = loc(fused[#loc172, #loc173])
#loc423 = loc(fused[#loc174, #loc175])
#loc424 = loc(fused[#loc176, #loc177])
#loc425 = loc(fused[#loc178, #loc179])
#loc426 = loc(fused[#loc182, #loc180])
#loc427 = loc(fused[#loc183, #loc184])
#loc428 = loc(fused[#loc185, #loc186])
#loc429 = loc(fused[#loc189, #loc188])
#loc430 = loc(fused[#loc192, #loc190])
#loc431 = loc(fused[#loc193, #loc194])
#loc432 = loc(fused[#loc195, #loc196])
#loc433 = loc(fused[#loc204, #loc205])
#loc434 = loc(fused[#loc206, #loc207])
#loc435 = loc(fused[#loc208, #loc209])
#loc436 = loc(fused[#loc210, #loc211])
#loc437 = loc(fused[#loc214, #loc212])
#loc438 = loc(fused[#loc215, #loc216])
#loc439 = loc(fused[#loc217, #loc218])
#loc440 = loc(fused[#loc220, #loc221])
#loc441 = loc(fused[#loc222, #loc223])
#loc442 = loc(fused[#loc224, #loc225])
#loc443 = loc(fused[#loc226, #loc227])
#loc444 = loc(fused[#loc228, #loc229])
#loc445 = loc(fused[#loc230, #loc231])
#loc446 = loc(fused[#loc232, #loc233])
#loc447 = loc(fused[#loc234, #loc235])
#loc448 = loc(fused[#loc240, #loc241])
#loc449 = loc(fused[#loc242, #loc243])
#loc450 = loc(fused[#loc244, #loc245])
#loc451 = loc(fused[#loc246, #loc243])
#loc452 = loc(fused[#loc248, #loc249])
#loc453 = loc(fused[#loc251, #loc252])
#loc454 = loc(fused[#loc253, #loc254])
#loc455 = loc(fused[#loc256, #loc255])
#loc456 = loc(fused[#loc258, #loc257])
#loc457 = loc(fused[#loc261, #loc262])
#loc458 = loc(fused[#loc263, #loc264])
#loc459 = loc(fused[#loc266, #loc267])
#loc460 = loc(fused[#loc268, #loc269])
#loc461 = loc(fused[#loc270, #loc271])
#loc462 = loc(fused[#loc272, #loc264])
#loc463 = loc(fused[#loc274, #loc275])
#loc464 = loc(fused[#loc278, #loc279])
#loc465 = loc(fused[#loc280, #loc275])
#loc466 = loc(fused[#loc286, #loc287])
#loc467 = loc(fused[#loc288, #loc289])
#loc468 = loc(fused[#loc290, #loc291])
#loc469 = loc(fused[#loc292, #loc289])
#loc470 = loc(fused[#loc296, #loc297])
#loc471 = loc(fused[#loc300, #loc301])
#loc472 = loc(fused[#loc302, #loc303])
#loc473 = loc(fused[#loc304, #loc305])
#loc474 = loc(fused[#loc307, #loc308])
#loc475 = loc(fused[#loc309, #loc303])
#loc476 = loc(fused[#loc313, #loc311])
#loc477 = loc(fused[#loc316, #loc317])
#loc478 = loc(fused[#loc319, #loc320])
#loc479 = loc(fused[#loc321, #loc322])
#loc480 = loc(fused[#loc323, #loc320])
#loc481 = loc(fused[#loc326, #loc327])
#loc482 = loc(fused[#loc328, #loc329])
#loc483 = loc(fused[#loc330, #loc327])
#loc484 = loc(fused[#loc335, #loc333])
#loc485 = loc(fused[#loc336, #loc337])
#loc486 = loc(fused[#loc338, #loc339])
#loc487 = loc(fused[#loc341, #loc342])
#loc488 = loc(fused[#loc343, #loc344])
#loc489 = loc(fused[#loc346, #loc347])
#loc490 = loc(fused[#loc348, #loc349, #loc350, #loc342])
