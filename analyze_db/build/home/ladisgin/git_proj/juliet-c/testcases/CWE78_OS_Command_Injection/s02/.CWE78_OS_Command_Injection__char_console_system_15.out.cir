!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:10)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:14)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:20)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:32)
#true = #cir.bool<true> : !cir.bool
#loc228 = loc(fused[#loc111, #loc112])
#loc229 = loc(fused[#loc113, #loc114])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc187)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc188)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc189)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc190)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc191)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc192)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc16)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc19)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc195)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc189)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc189)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc189)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc30)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc201)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc201)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc40)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc41)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc203)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc42)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc204)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc47)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc48)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc49)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc49)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc207)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc207)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc192)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc52)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc208)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc210)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc64)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc64)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc212)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc68)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc68)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc213)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc66)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc66)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc70)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc214)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc65)
                          cir.yield %49 : !cir.bool loc(#loc65)
                        }, false {
                          %49 = cir.const #false loc(#loc65)
                          cir.yield %49 : !cir.bool loc(#loc65)
                        }) : (!cir.bool) -> !cir.bool loc(#loc65)
                        cir.yield %48 : !cir.bool loc(#loc65)
                      }, false {
                        %38 = cir.const #false loc(#loc65)
                        cir.yield %38 : !cir.bool loc(#loc65)
                      }) : (!cir.bool) -> !cir.bool loc(#loc65)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc72)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc72)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc75)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc75)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc216)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc76)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc217)
                      } loc(#loc215)
                    } loc(#loc211)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc77)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc78)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc78)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc80)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc81)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc218)
                  } loc(#loc209)
                } loc(#loc206)
              } loc(#loc205)
            } loc(#loc202)
          } loc(#loc200)
          cir.break loc(#loc82)
        } loc(#loc31)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc16)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc16)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          cir.break loc(#loc85)
        } loc(#loc83)
        cir.yield loc(#loc28)
      } loc(#loc28)
    } loc(#loc199)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc89)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc90)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc220)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc19)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc19)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc94)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc23)
  } loc(#loc196)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc96)
  } loc(#loc222)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc225)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc108)
  cir.func @main(%arg0: !s32i loc(fused[#loc111, #loc112]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc113, #loc114])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc228)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc229)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc110)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc115)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc116)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc117)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc117)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc118)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc105)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call @CWE78_OS_Command_Injection__char_console_system_15_good() : () -> () loc(#loc120)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc106)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc107)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call @CWE78_OS_Command_Injection__char_console_system_15_bad() : () -> () loc(#loc124)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc108)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc127)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    cir.return %17 : !s32i loc(#loc232)
  } loc(#loc227)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc131)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc188)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc188)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc188)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc140)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc142)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc142)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          cir.break loc(#loc144)
        } loc(#loc141)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc146)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc131)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc131)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
          cir.break loc(#loc148)
        } loc(#loc145)
        cir.yield loc(#loc138)
      } loc(#loc138)
    } loc(#loc237)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc152)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc153)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc239)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc155)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc156)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc158)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
      } loc(#loc240)
    } loc(#loc238)
    cir.return loc(#loc133)
  } loc(#loc234)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc187)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc187)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc187)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc167)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc169)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc171)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc171)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
          cir.break loc(#loc172)
        } loc(#loc168)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc175)
          cir.break loc(#loc176)
        } loc(#loc173)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc244)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc180)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc181)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc246)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc183)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc183)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc184)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc185)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc186)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc185)
      } loc(#loc247)
    } loc(#loc245)
    cir.return loc(#loc160)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":116:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":116:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":91:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":91:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":39:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":39:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("/usr/include/stdio.h":149:1)
#loc12 = loc("/usr/include/stdio.h":149:14)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":63:27)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":72:19)
#loc17 = loc("/usr/include/stdlib.h":923:1)
#loc18 = loc("/usr/include/stdlib.h":923:41)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":78:19)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":36:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":81:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":38:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":38:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":40:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":40:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":41:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":74:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":41:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":43:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":44:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":68:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:37)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:26)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:33)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":67:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":49:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":66:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:23)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:28)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:27)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:43)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:47)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:57)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:67)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":52:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":60:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":62:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:27)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:34)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:38)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":59:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:31)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:33)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:36)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:41)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:49)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:50)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:55)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":57:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:39)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:26)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:34)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:35)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":63:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:33)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:17)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:22)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:29)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":69:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":70:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":72:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":73:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":80:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:16)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:9)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:25)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":77:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":78:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":79:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":79:14)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":137:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":141:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":139:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":139:14)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":140:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":140:14)
#loc101 = loc("/usr/include/stdlib.h":575:1)
#loc102 = loc("/usr/include/stdlib.h":575:41)
#loc103 = loc("/usr/include/time.h":76:1)
#loc104 = loc("/usr/include/time.h":76:38)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":158:15)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":160:15)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":163:15)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":165:15)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:1)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":168:1)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":154:1)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":156:27)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":156:22)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":156:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":158:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":159:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":159:61)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":160:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":163:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":164:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":164:60)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":165:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":167:12)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":167:5)
#loc129 = loc("/usr/include/string.h":149:1)
#loc130 = loc("/usr/include/string.h":150:14)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":101:22)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":88:1)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":110:1)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":90:5)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":90:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":92:12)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":92:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":93:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":103:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":93:12)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":95:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":97:19)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":97:9)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":98:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":99:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":101:9)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":101:16)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":102:9)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:5)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":109:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:16)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:9)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:25)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":106:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":107:19)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":107:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":108:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":108:14)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":113:1)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":135:1)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":115:5)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":115:12)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":117:12)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":117:5)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":118:5)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":128:5)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":118:12)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":120:5)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":122:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":122:16)
#loc171 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":122:22)
#loc172 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":123:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":124:5)
#loc174 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":126:19)
#loc175 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":126:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":127:9)
#loc177 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:5)
#loc178 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":134:5)
#loc179 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:16)
#loc180 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:9)
#loc181 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:25)
#loc182 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":131:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":132:19)
#loc184 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":132:9)
#loc185 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":133:9)
#loc186 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":133:14)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc17, #loc18])
#loc195 = loc(fused[#loc20, #loc21])
#loc196 = loc(fused[#loc22, #loc23])
#loc197 = loc(fused[#loc24, #loc25])
#loc198 = loc(fused[#loc27, #loc26])
#loc199 = loc(fused[#loc28, #loc29])
#loc200 = loc(fused[#loc32, #loc33])
#loc201 = loc(fused[#loc34, #loc35])
#loc202 = loc(fused[#loc38, #loc39])
#loc203 = loc(fused[#loc40, #loc41])
#loc204 = loc(fused[#loc40, #loc42])
#loc205 = loc(fused[#loc43, #loc39])
#loc206 = loc(fused[#loc44, #loc45])
#loc207 = loc(fused[#loc49, #loc50])
#loc208 = loc(fused[#loc52, #loc53])
#loc209 = loc(fused[#loc54, #loc55, #loc56, #loc45])
#loc210 = loc(fused[#loc59, #loc60])
#loc211 = loc(fused[#loc61, #loc62])
#loc212 = loc(fused[#loc63, #loc64])
#loc213 = loc(fused[#loc67, #loc68])
#loc214 = loc(fused[#loc66, #loc70])
#loc215 = loc(fused[#loc71, #loc62])
#loc216 = loc(fused[#loc74, #loc75])
#loc217 = loc(fused[#loc73, #loc72])
#loc218 = loc(fused[#loc79, #loc78])
#loc219 = loc(fused[#loc86, #loc87])
#loc220 = loc(fused[#loc89, #loc90])
#loc221 = loc(fused[#loc91, #loc87])
#loc222 = loc(fused[#loc95, #loc96])
#loc223 = loc(fused[#loc97, #loc98])
#loc224 = loc(fused[#loc99, #loc100])
#loc225 = loc(fused[#loc101, #loc102])
#loc226 = loc(fused[#loc103, #loc104])
#loc227 = loc(fused[#loc109, #loc110])
#loc230 = loc(fused[#loc120, #loc121])
#loc231 = loc(fused[#loc124, #loc125])
#loc232 = loc(fused[#loc128, #loc127])
#loc233 = loc(fused[#loc129, #loc130])
#loc234 = loc(fused[#loc132, #loc133])
#loc235 = loc(fused[#loc134, #loc135])
#loc236 = loc(fused[#loc137, #loc136])
#loc237 = loc(fused[#loc138, #loc139])
#loc238 = loc(fused[#loc149, #loc150])
#loc239 = loc(fused[#loc152, #loc153])
#loc240 = loc(fused[#loc154, #loc150])
#loc241 = loc(fused[#loc159, #loc160])
#loc242 = loc(fused[#loc161, #loc162])
#loc243 = loc(fused[#loc164, #loc163])
#loc244 = loc(fused[#loc165, #loc166])
#loc245 = loc(fused[#loc177, #loc178])
#loc246 = loc(fused[#loc180, #loc181])
#loc247 = loc(fused[#loc182, #loc178])
