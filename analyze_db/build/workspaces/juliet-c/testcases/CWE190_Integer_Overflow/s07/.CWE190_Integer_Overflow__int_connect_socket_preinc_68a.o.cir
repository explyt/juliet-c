!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc241)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc243)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc244)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc245)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc246)
  cir.func private @close(!s32i) -> !s32i loc(#loc247)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_connect_socket_preinc_68_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc248)
  cir.func no_proto private @CWE190_Integer_Overflow__int_connect_socket_preinc_68b_badSink(...) loc(#loc249)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_preinc_68_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc254)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc255)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc256)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc257)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc33)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc256)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc40)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc42)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc260)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc48)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc49)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc49)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc262)
              cir.if %57 {
                cir.break loc(#loc51)
              } loc(#loc263)
            } loc(#loc261)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc264)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc54)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc265)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc266)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc59)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc59)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc267)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc268)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc67)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc67)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc68)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc269)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc271)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc272)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc272)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc80)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc273)
              cir.if %61 {
                cir.break loc(#loc82)
              } loc(#loc274)
            } loc(#loc270)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc85)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc85)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc85)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc85)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc85)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc85)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc85)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc86)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc275)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc87)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc88)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc276)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc94)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc278)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc95)
                cir.yield %59 : !cir.bool loc(#loc95)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc97)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc279)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc95)
                  cir.yield %63 : !cir.bool loc(#loc95)
                }, false {
                  %63 = cir.const #false loc(#loc95)
                  cir.yield %63 : !cir.bool loc(#loc95)
                }) : (!cir.bool) -> !cir.bool loc(#loc95)
                cir.yield %62 : !cir.bool loc(#loc95)
              }) : (!cir.bool) -> !cir.bool loc(#loc95)
              cir.if %58 {
                cir.break loc(#loc99)
              } loc(#loc280)
            } loc(#loc277)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc100)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc100)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc102)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc281)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc104)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
          } loc(#loc259)
          cir.yield loc(#loc37)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc107)
          cir.condition(%13) loc(#loc107)
        } loc(#loc258)
      } loc(#loc258)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc111)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc284)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc114)
        } loc(#loc285)
      } loc(#loc283)
    } loc(#loc253)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_preinc_68_badData : !cir.ptr<!s32i> loc(#loc248)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_preinc_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc287)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc287)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc117)
    cir.return loc(#loc21)
  } loc(#loc250)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_preinc_68_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc289)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc121)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc290)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc123)
    cir.return loc(#loc120)
  } loc(#loc288)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc291)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc292)
  cir.func no_proto private @CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodG2BSink(...) loc(#loc293)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc295)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc135)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc137)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodG2BData : !cir.ptr<!s32i> loc(#loc291)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    %5 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc299)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc299)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc141)
    cir.return loc(#loc132)
  } loc(#loc294)
  cir.func no_proto private @CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodB2GSink(...) loc(#loc300)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc302)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc149)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc307)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc308)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc158)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc158)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc307)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc165)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc166)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc167)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc168)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc311)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc174)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc174)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc313)
              cir.if %57 {
                cir.break loc(#loc176)
              } loc(#loc314)
            } loc(#loc312)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc315)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc179)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc316)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc184)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc184)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc318)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc186)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc186)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc187)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc319)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc190)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc190)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc191)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc320)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc322)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc323)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc323)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc201)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc202)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc202)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc324)
              cir.if %61 {
                cir.break loc(#loc204)
              } loc(#loc325)
            } loc(#loc321)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc205)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc206)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc206)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc207)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc207)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc207)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc207)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc207)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc207)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc207)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc208)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc208)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc326)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc209)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc210)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc210)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc327)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc215)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc216)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc216)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc329)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc217)
                cir.yield %59 : !cir.bool loc(#loc217)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc219)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc330)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc217)
                  cir.yield %63 : !cir.bool loc(#loc217)
                }, false {
                  %63 = cir.const #false loc(#loc217)
                  cir.yield %63 : !cir.bool loc(#loc217)
                }) : (!cir.bool) -> !cir.bool loc(#loc217)
                cir.yield %62 : !cir.bool loc(#loc217)
              }) : (!cir.bool) -> !cir.bool loc(#loc217)
              cir.if %58 {
                cir.break loc(#loc221)
              } loc(#loc331)
            } loc(#loc328)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc222)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc222)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc224)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc224)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc332)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc225)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc226)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
          } loc(#loc310)
          cir.yield loc(#loc162)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc229)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc229)
          cir.condition(%13) loc(#loc229)
        } loc(#loc309)
      } loc(#loc309)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc232)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc233)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc233)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc335)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc235)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc236)
        } loc(#loc336)
      } loc(#loc334)
    } loc(#loc304)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_preinc_68_goodB2GData : !cir.ptr<!s32i> loc(#loc292)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_preinc_68b_goodB2GSink : !cir.ptr<!cir.func<(...)>> loc(#loc338)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc338)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc239)
    cir.return loc(#loc146)
  } loc(#loc301)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":82:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":42:1)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":42:5)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":49:1)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":49:69)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":51:1)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":114:1)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":53:5)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":53:9)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":55:12)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":55:5)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":56:5)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":111:5)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":61:9)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":61:13)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":62:9)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":62:28)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":63:9)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":63:32)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":64:9)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":64:41)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":65:9)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":100:17)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":66:9)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":99:9)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":75:36)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":75:45)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":75:58)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":75:29)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":75:13)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":75:69)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":76:13)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":79:13)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":76:17)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":76:34)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":77:13)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":78:17)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":80:20)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":80:21)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":80:30)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":80:33)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":80:47)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":80:13)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":80:48)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":81:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":81:13)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":82:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":82:13)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":82:59)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":83:38)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":83:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":83:13)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":83:46)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:13)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":87:13)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:25)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:58)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:59)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:68)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:82)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:17)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":84:88)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":85:13)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":86:17)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:31)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:46)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:59)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:77)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:80)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:26)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:13)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":90:81)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":91:13)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":94:13)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":91:17)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":91:31)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":91:44)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":91:47)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":91:61)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":92:13)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":93:17)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":96:39)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":96:25)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":96:13)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":98:25)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":98:20)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":98:13)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":98:36)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":100:16)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":101:9)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":104:9)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":101:13)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":101:30)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":102:9)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":103:26)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":103:13)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":112:69)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":112:5)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":113:5)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":113:68)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":202:1)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":206:1)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":204:5)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":204:13)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":205:5)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":205:13)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":43:1)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":43:5)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":44:1)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":44:5)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":121:1)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":121:73)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":125:1)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":134:1)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":127:5)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":127:9)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":129:12)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":129:5)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":131:12)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":131:5)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":132:73)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":132:5)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":133:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":133:72)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":122:1)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":122:73)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":137:1)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":200:1)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":139:5)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":139:9)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":141:12)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":141:5)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":142:5)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":197:5)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":147:9)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":147:13)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":148:9)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":148:28)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":149:9)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":149:32)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":150:9)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":150:41)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":151:9)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":186:17)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":152:9)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":185:9)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":161:36)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":161:45)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":161:58)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":161:29)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":161:13)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":161:69)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":162:13)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":165:13)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":162:17)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":162:34)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":163:13)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":164:17)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":166:20)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":166:21)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":166:30)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":166:33)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":166:47)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":166:13)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":166:48)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":167:34)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":167:13)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":168:49)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":168:39)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":168:13)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":168:59)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":169:38)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":169:32)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":169:13)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":169:46)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:13)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":173:13)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:25)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:58)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:59)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:68)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:82)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:17)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":170:88)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":171:13)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":172:17)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:31)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:46)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:59)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:77)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:80)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:26)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:13)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":176:81)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":177:13)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":180:13)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":177:17)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":177:31)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":177:44)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":177:47)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":177:61)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":178:13)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":179:17)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":182:39)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":182:25)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":182:13)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":184:25)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":184:20)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":184:13)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":184:36)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":186:16)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":187:9)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":190:9)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":187:13)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":187:30)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":188:9)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":189:26)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":189:13)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":198:73)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":198:5)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":199:5)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_preinc_68a.c":199:72)
#loc241 = loc(fused[#loc1, #loc2])
#loc242 = loc(fused[#loc3, #loc4])
#loc243 = loc(fused[#loc6, #loc7])
#loc244 = loc(fused[#loc8, #loc9])
#loc245 = loc(fused[#loc10, #loc11])
#loc246 = loc(fused[#loc12, #loc13])
#loc247 = loc(fused[#loc14, #loc15])
#loc248 = loc(fused[#loc16, #loc17])
#loc249 = loc(fused[#loc18, #loc19])
#loc250 = loc(fused[#loc20, #loc21])
#loc251 = loc(fused[#loc22, #loc23])
#loc252 = loc(fused[#loc25, #loc24])
#loc253 = loc(fused[#loc26, #loc27])
#loc254 = loc(fused[#loc28, #loc29])
#loc255 = loc(fused[#loc30, #loc31])
#loc256 = loc(fused[#loc32, #loc33])
#loc257 = loc(fused[#loc34, #loc35])
#loc258 = loc(fused[#loc36, #loc37])
#loc259 = loc(fused[#loc38, #loc39])
#loc260 = loc(fused[#loc44, #loc45])
#loc261 = loc(fused[#loc46, #loc47])
#loc262 = loc(fused[#loc48, #loc49])
#loc263 = loc(fused[#loc50, #loc47])
#loc264 = loc(fused[#loc52, #loc53])
#loc265 = loc(fused[#loc55, #loc56])
#loc266 = loc(fused[#loc57, #loc58])
#loc267 = loc(fused[#loc61, #loc59])
#loc268 = loc(fused[#loc65, #loc66])
#loc269 = loc(fused[#loc70, #loc71])
#loc270 = loc(fused[#loc72, #loc73])
#loc271 = loc(fused[#loc75, #loc76])
#loc272 = loc(fused[#loc77, #loc78])
#loc273 = loc(fused[#loc79, #loc80])
#loc274 = loc(fused[#loc81, #loc73])
#loc275 = loc(fused[#loc85, #loc86])
#loc276 = loc(fused[#loc89, #loc90])
#loc277 = loc(fused[#loc91, #loc92])
#loc278 = loc(fused[#loc93, #loc94])
#loc279 = loc(fused[#loc96, #loc97])
#loc280 = loc(fused[#loc98, #loc92])
#loc281 = loc(fused[#loc102, #loc100])
#loc282 = loc(fused[#loc105, #loc106])
#loc283 = loc(fused[#loc108, #loc109])
#loc284 = loc(fused[#loc110, #loc111])
#loc285 = loc(fused[#loc112, #loc109])
#loc286 = loc(fused[#loc116, #loc115])
#loc287 = loc(fused[#loc117, #loc118])
#loc288 = loc(fused[#loc119, #loc120])
#loc289 = loc(fused[#loc121, #loc122])
#loc290 = loc(fused[#loc123, #loc124])
#loc291 = loc(fused[#loc125, #loc126])
#loc292 = loc(fused[#loc127, #loc128])
#loc293 = loc(fused[#loc129, #loc130])
#loc294 = loc(fused[#loc131, #loc132])
#loc295 = loc(fused[#loc133, #loc134])
#loc296 = loc(fused[#loc136, #loc135])
#loc297 = loc(fused[#loc138, #loc137])
#loc298 = loc(fused[#loc140, #loc139])
#loc299 = loc(fused[#loc141, #loc142])
#loc300 = loc(fused[#loc143, #loc144])
#loc301 = loc(fused[#loc145, #loc146])
#loc302 = loc(fused[#loc147, #loc148])
#loc303 = loc(fused[#loc150, #loc149])
#loc304 = loc(fused[#loc151, #loc152])
#loc305 = loc(fused[#loc153, #loc154])
#loc306 = loc(fused[#loc155, #loc156])
#loc307 = loc(fused[#loc157, #loc158])
#loc308 = loc(fused[#loc159, #loc160])
#loc309 = loc(fused[#loc161, #loc162])
#loc310 = loc(fused[#loc163, #loc164])
#loc311 = loc(fused[#loc169, #loc170])
#loc312 = loc(fused[#loc171, #loc172])
#loc313 = loc(fused[#loc173, #loc174])
#loc314 = loc(fused[#loc175, #loc172])
#loc315 = loc(fused[#loc177, #loc178])
#loc316 = loc(fused[#loc180, #loc181])
#loc317 = loc(fused[#loc182, #loc183])
#loc318 = loc(fused[#loc185, #loc184])
#loc319 = loc(fused[#loc188, #loc189])
#loc320 = loc(fused[#loc192, #loc193])
#loc321 = loc(fused[#loc194, #loc195])
#loc322 = loc(fused[#loc197, #loc198])
#loc323 = loc(fused[#loc199, #loc200])
#loc324 = loc(fused[#loc201, #loc202])
#loc325 = loc(fused[#loc203, #loc195])
#loc326 = loc(fused[#loc207, #loc208])
#loc327 = loc(fused[#loc211, #loc212])
#loc328 = loc(fused[#loc213, #loc214])
#loc329 = loc(fused[#loc215, #loc216])
#loc330 = loc(fused[#loc218, #loc219])
#loc331 = loc(fused[#loc220, #loc214])
#loc332 = loc(fused[#loc224, #loc222])
#loc333 = loc(fused[#loc227, #loc228])
#loc334 = loc(fused[#loc230, #loc231])
#loc335 = loc(fused[#loc232, #loc233])
#loc336 = loc(fused[#loc234, #loc231])
#loc337 = loc(fused[#loc238, #loc237])
#loc338 = loc(fused[#loc239, #loc240])
