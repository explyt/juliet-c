!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc421)
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc422)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc423)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc424)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc425)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc426)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc428)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc431)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc27)
      cir.if %7 {
        %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %10 = cir.binop(and, %8, %9) : !s32i loc(#loc29)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc29)
        %12 = cir.ternary(%11, true {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc29)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc29)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc29)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc29)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc29)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc29)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc29)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc29)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc29)
          cir.yield %25 : !u32i loc(#loc29)
        }, false {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc29)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc29)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc29)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc29)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc29)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc29)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc29)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc29)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc29)
          %26 = cir.unary(minus, %25) : !u32i, !u32i loc(#loc29)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc29)
          %29 = cir.binop(sub, %26, %28) : !u32i loc(#loc29)
          cir.yield %29 : !u32i loc(#loc29)
        }) : (!cir.bool) -> !u32i loc(#loc29)
        %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc29)
        cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
      } loc(#loc432)
    } loc(#loc430)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc34)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc435)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc35)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc438)
          %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc439)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc440)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc40)
          cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc438)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc42)
          cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc439)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc5)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc5)
          cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc440)
          %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc44)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
          %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc44)
          cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc441)
          cir.scope {
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc51)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc443)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc52)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc55)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
            } loc(#loc444)
          } loc(#loc442)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc58)
            cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc446)
            cir.for : cond {
              %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc60)
              %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc61)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc447)
              %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc62)
              cir.condition(%27) loc(#loc62)
            } body {
              cir.scope {
                cir.scope {
                  %23 = cir.const #cir.int<50> : !u64i loc(#loc450)
                  %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc68)
                  %25 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                  %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
                  %28 = cir.const #cir.int<1> : !u64i loc(#loc451)
                  %29 = cir.const #cir.int<50> : !u64i loc(#loc452)
                  %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
                  %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc68)
                  %32 = cir.cmp(ne, %23, %31) : !u64i, !s32i loc(#loc453)
                  %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc75)
                  cir.if %33 {
                    %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc77)
                    %35 = cir.const #cir.int<1> : !s32i loc(#loc78)
                    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
                  } loc(#loc454)
                } loc(#loc449)
              } loc(#loc448)
              cir.yield loc(#loc57)
            } step {
              %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc79)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc80)
              cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc455)
              cir.yield loc(#loc445)
            } loc(#loc445)
          } loc(#loc445)
          cir.scope {
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
            %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc83)
            cir.if %22 {
              %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
              %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc86)
            } loc(#loc457)
          } loc(#loc456)
        } loc(#loc437)
      } loc(#loc436)
    } loc(#loc434)
    cir.return loc(#loc17)
  } loc(#loc427)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc459)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc460)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc461)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc462)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc88)
  } loc(#loc458)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc463)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc465)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc106)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc111)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc468)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc112)
      cir.if %7 {
        %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc114)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc114)
        %10 = cir.binop(and, %8, %9) : !s32i loc(#loc114)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc114)
        %12 = cir.ternary(%11, true {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc114)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc114)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc114)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc114)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc114)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc114)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc114)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc114)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc114)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc114)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc114)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc114)
          cir.yield %25 : !u32i loc(#loc114)
        }, false {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc114)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc114)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc114)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc114)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc114)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc114)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc114)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc114)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc114)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc114)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc114)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc114)
          %26 = cir.unary(minus, %25) : !u32i, !u32i loc(#loc114)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc114)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc114)
          %29 = cir.binop(sub, %26, %28) : !u32i loc(#loc114)
          cir.yield %29 : !u32i loc(#loc114)
        }) : (!cir.bool) -> !u32i loc(#loc114)
        %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc114)
        cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc470)
      } loc(#loc469)
    } loc(#loc467)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc119)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc472)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc120)
      cir.if %7 {
        %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      } else {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc475)
          %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc476)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc477)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc128)
          cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc475)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc130)
          cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc476)
          %14 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
          cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc477)
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc135)
            %18 = cir.cmp(gt, %16, %17) : !s32i, !s32i loc(#loc479)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc136)
            %20 = cir.ternary(%19, true {
              %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %22 = cir.const #cir.int<20> : !s32i loc(#loc139)
              %23 = cir.cmp(le, %21, %22) : !s32i, !s32i loc(#loc480)
              %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc140)
              %25 = cir.ternary(%24, true {
                %26 = cir.const #true loc(#loc137)
                cir.yield %26 : !cir.bool loc(#loc137)
              }, false {
                %26 = cir.const #false loc(#loc137)
                cir.yield %26 : !cir.bool loc(#loc137)
              }) : (!cir.bool) -> !cir.bool loc(#loc137)
              cir.yield %25 : !cir.bool loc(#loc137)
            }, false {
              %21 = cir.const #false loc(#loc137)
              cir.yield %21 : !cir.bool loc(#loc137)
            }) : (!cir.bool) -> !cir.bool loc(#loc137)
            cir.if %20 {
              %21 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc142)
              %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
              %23 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc144)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc144)
              %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc142)
              cir.store %25, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc482)
              cir.scope {
                %26 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc150)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc484)
                %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc151)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc154)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
                } loc(#loc485)
              } loc(#loc483)
              cir.scope {
                %26 = cir.const #cir.int<0> : !s32i loc(#loc157)
                %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc157)
                cir.store %27, %8 : !u64i, !cir.ptr<!u64i> loc(#loc487)
                cir.for : cond {
                  %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc159)
                  %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                  %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc160)
                  %31 = cir.cmp(lt, %28, %30) : !u64i, !s32i loc(#loc488)
                  %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc161)
                  cir.condition(%32) loc(#loc161)
                } body {
                  cir.scope {
                    cir.scope {
                      %28 = cir.const #cir.int<50> : !u64i loc(#loc491)
                      %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc167)
                      %30 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc168)
                      %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc168)
                      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
                      %33 = cir.const #cir.int<1> : !u64i loc(#loc492)
                      %34 = cir.const #cir.int<50> : !u64i loc(#loc493)
                      %35 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
                      %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc167)
                      %37 = cir.cmp(ne, %28, %36) : !u64i, !s32i loc(#loc494)
                      %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc175)
                      cir.if %38 {
                        %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc176)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc177)
                        cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc176)
                      } loc(#loc495)
                    } loc(#loc490)
                  } loc(#loc489)
                  cir.yield loc(#loc156)
                } step {
                  %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc178)
                  %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc179)
                  cir.store %29, %8 : !u64i, !cir.ptr<!u64i> loc(#loc496)
                  cir.yield loc(#loc486)
                } loc(#loc486)
              } loc(#loc486)
              cir.scope {
                %26 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc182)
                %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc182)
                cir.if %27 {
                  %28 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc184)
                  %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc185)
                } loc(#loc498)
              } loc(#loc497)
            } loc(#loc481)
          } loc(#loc478)
        } loc(#loc474)
      } loc(#loc473)
    } loc(#loc471)
    cir.return loc(#loc102)
  } loc(#loc464)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc500)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc191)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc501)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc195)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc196)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc503)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc197)
      cir.if %7 {
        %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc199)
        %10 = cir.binop(and, %8, %9) : !s32i loc(#loc199)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc199)
        %12 = cir.ternary(%11, true {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc199)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc199)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc199)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc199)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc199)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc199)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc199)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc199)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc199)
          cir.yield %25 : !u32i loc(#loc199)
        }, false {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc199)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc199)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc199)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc199)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc199)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc199)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc199)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc199)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc199)
          %26 = cir.unary(minus, %25) : !u32i, !u32i loc(#loc199)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc199)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc199)
          %29 = cir.binop(sub, %26, %28) : !u32i loc(#loc199)
          cir.yield %29 : !u32i loc(#loc199)
        }) : (!cir.bool) -> !u32i loc(#loc199)
        %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc199)
        cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc505)
      } loc(#loc504)
    } loc(#loc502)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc203)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc204)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc507)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc205)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc510)
          %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc511)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc512)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc210)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc210)
          cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc510)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc212)
          cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc511)
          %14 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc214)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc214)
          cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc512)
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc218)
            %18 = cir.cmp(gt, %16, %17) : !s32i, !s32i loc(#loc514)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc219)
            %20 = cir.ternary(%19, true {
              %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %22 = cir.const #cir.int<20> : !s32i loc(#loc222)
              %23 = cir.cmp(le, %21, %22) : !s32i, !s32i loc(#loc515)
              %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc223)
              %25 = cir.ternary(%24, true {
                %26 = cir.const #true loc(#loc220)
                cir.yield %26 : !cir.bool loc(#loc220)
              }, false {
                %26 = cir.const #false loc(#loc220)
                cir.yield %26 : !cir.bool loc(#loc220)
              }) : (!cir.bool) -> !cir.bool loc(#loc220)
              cir.yield %25 : !cir.bool loc(#loc220)
            }, false {
              %21 = cir.const #false loc(#loc220)
              cir.yield %21 : !cir.bool loc(#loc220)
            }) : (!cir.bool) -> !cir.bool loc(#loc220)
            cir.if %20 {
              %21 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc225)
              %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
              %23 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc227)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc227)
              %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc225)
              cir.store %25, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc517)
              cir.scope {
                %26 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc232)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc233)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc233)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc519)
                %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc234)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc236)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc237)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc236)
                } loc(#loc520)
              } loc(#loc518)
              cir.scope {
                %26 = cir.const #cir.int<0> : !s32i loc(#loc240)
                %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc240)
                cir.store %27, %8 : !u64i, !cir.ptr<!u64i> loc(#loc522)
                cir.for : cond {
                  %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc242)
                  %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                  %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc243)
                  %31 = cir.cmp(lt, %28, %30) : !u64i, !s32i loc(#loc523)
                  %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc244)
                  cir.condition(%32) loc(#loc244)
                } body {
                  cir.scope {
                    cir.scope {
                      %28 = cir.const #cir.int<50> : !u64i loc(#loc526)
                      %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc250)
                      %30 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc251)
                      %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc251)
                      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
                      %33 = cir.const #cir.int<1> : !u64i loc(#loc527)
                      %34 = cir.const #cir.int<50> : !u64i loc(#loc528)
                      %35 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc256)
                      %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc250)
                      %37 = cir.cmp(ne, %28, %36) : !u64i, !s32i loc(#loc529)
                      %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc258)
                      cir.if %38 {
                        %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc259)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc260)
                        cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
                      } loc(#loc530)
                    } loc(#loc525)
                  } loc(#loc524)
                  cir.yield loc(#loc239)
                } step {
                  %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc261)
                  %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc262)
                  cir.store %29, %8 : !u64i, !cir.ptr<!u64i> loc(#loc531)
                  cir.yield loc(#loc521)
                } loc(#loc521)
              } loc(#loc521)
              cir.scope {
                %26 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc265)
                %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc265)
                cir.if %27 {
                  %28 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc267)
                  %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc268)
                } loc(#loc533)
              } loc(#loc532)
            } loc(#loc516)
          } loc(#loc513)
        } loc(#loc509)
      } loc(#loc508)
    } loc(#loc506)
    cir.return loc(#loc187)
  } loc(#loc499)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc535)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc274)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc536)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc279)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc538)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc280)
      cir.if %7 {
        %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc284)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc284)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc285)
      } else {
        %8 = cir.const #cir.int<20> : !s32i loc(#loc286)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc540)
      } loc(#loc539)
    } loc(#loc537)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc290)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc291)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc542)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc292)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc545)
          %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc546)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc547)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc297)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc297)
          cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc545)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc299)
          cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc546)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc301)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc301)
          cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc547)
          %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc302)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc303)
          %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc304)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc304)
          %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc302)
          cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc548)
          cir.scope {
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc309)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc310)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc310)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc550)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc311)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc313)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc314)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc313)
            } loc(#loc551)
          } loc(#loc549)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc317)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc317)
            cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc553)
            cir.for : cond {
              %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc319)
              %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc320)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc320)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc554)
              %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc321)
              cir.condition(%27) loc(#loc321)
            } body {
              cir.scope {
                cir.scope {
                  %23 = cir.const #cir.int<50> : !u64i loc(#loc557)
                  %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc327)
                  %25 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc328)
                  %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc328)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc328)
                  %28 = cir.const #cir.int<1> : !u64i loc(#loc558)
                  %29 = cir.const #cir.int<50> : !u64i loc(#loc559)
                  %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc333)
                  %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc327)
                  %32 = cir.cmp(ne, %23, %31) : !u64i, !s32i loc(#loc560)
                  %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc335)
                  cir.if %33 {
                    %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc337)
                    %35 = cir.const #cir.int<1> : !s32i loc(#loc338)
                    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc337)
                  } loc(#loc561)
                } loc(#loc556)
              } loc(#loc555)
              cir.yield loc(#loc316)
            } step {
              %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc339)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc340)
              cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc562)
              cir.yield loc(#loc552)
            } loc(#loc552)
          } loc(#loc552)
          cir.scope {
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc343)
            %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc343)
            cir.if %22 {
              %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc345)
              %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc346)
            } loc(#loc564)
          } loc(#loc563)
        } loc(#loc544)
      } loc(#loc543)
    } loc(#loc541)
    cir.return loc(#loc270)
  } loc(#loc534)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc566)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc351)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc352)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc356)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc357)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc569)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc358)
      cir.if %7 {
        %8 = cir.const #cir.int<20> : !s32i loc(#loc360)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc571)
      } loc(#loc570)
    } loc(#loc568)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc421)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc364)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc365)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc573)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc366)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc576)
          %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc577)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc578)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc371)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc371)
          cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc576)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc373)
          cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc577)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc375)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc375)
          cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc578)
          %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc376)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc377)
          %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc378)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc378)
          %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc376)
          cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc579)
          cir.scope {
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc383)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc384)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc384)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc581)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc385)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc387)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc388)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc387)
            } loc(#loc582)
          } loc(#loc580)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc391)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc391)
            cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc584)
            cir.for : cond {
              %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc393)
              %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc394)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc394)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc585)
              %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc395)
              cir.condition(%27) loc(#loc395)
            } body {
              cir.scope {
                cir.scope {
                  %23 = cir.const #cir.int<50> : !u64i loc(#loc588)
                  %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc401)
                  %25 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc402)
                  %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc402)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc402)
                  %28 = cir.const #cir.int<1> : !u64i loc(#loc589)
                  %29 = cir.const #cir.int<50> : !u64i loc(#loc590)
                  %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc407)
                  %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc401)
                  %32 = cir.cmp(ne, %23, %31) : !u64i, !s32i loc(#loc591)
                  %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc409)
                  cir.if %33 {
                    %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc411)
                    %35 = cir.const #cir.int<1> : !s32i loc(#loc412)
                    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc411)
                  } loc(#loc592)
                } loc(#loc587)
              } loc(#loc586)
              cir.yield loc(#loc390)
            } step {
              %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc413)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc414)
              cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc593)
              cir.yield loc(#loc583)
            } loc(#loc583)
          } loc(#loc583)
          cir.scope {
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc417)
            %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc417)
            cir.if %22 {
              %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc419)
              %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc420)
            } loc(#loc595)
          } loc(#loc594)
        } loc(#loc575)
      } loc(#loc574)
    } loc(#loc572)
    cir.return loc(#loc348)
  } loc(#loc565)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_07.c":0:0)
#loc1 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":25:1)
#loc2 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":44:36)
#loc6 = loc("/usr/include/stdio.h":264:1)
#loc7 = loc("/usr/include/stdio.h":266:3)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":45:37)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/stdio.h":745:1)
#loc12 = loc("/usr/include/stdio.h":746:43)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:48)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":29:1)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":65:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":31:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":31:9)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":33:14)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":33:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":33:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":34:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":38:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":34:8)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":34:20)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":34:18)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":35:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":37:17)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":37:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":39:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":64:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":39:8)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":39:20)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":39:18)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":40:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":41:9)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":63:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":42:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":42:24)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":43:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":43:27)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":44:13)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":45:21)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":45:27)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":45:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":45:41)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":46:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":49:13)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":46:17)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":46:26)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":46:23)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":47:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":48:17)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":48:22)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:13)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":58:13)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:22)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:18)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:25)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:37)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:27)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":53:13)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:17)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":57:17)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:21)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:36)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:41)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:58)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:69)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:72)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:87)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:90)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:95)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":54:38)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":55:17)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":56:21)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":56:26)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:45)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":52:44)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":59:13)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":62:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":59:17)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":60:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":61:24)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":61:17)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":235:1)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":241:1)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":237:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":237:14)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":238:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":238:14)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":239:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":239:14)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":240:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":240:14)
#loc97 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":85:19)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":92:36)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":72:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":112:1)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":74:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":74:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":76:14)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":76:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":76:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":77:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":81:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":77:8)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":77:20)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":77:18)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":78:5)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":80:17)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":80:9)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":82:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":111:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":82:8)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":82:20)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":82:18)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":83:5)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":86:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":88:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":85:9)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":89:9)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":110:9)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":90:13)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":90:24)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":91:13)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":91:27)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":92:13)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:13)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":109:13)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:17)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:25)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:23)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:27)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:30)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:39)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":94:36)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":95:13)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":96:25)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":96:31)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":96:41)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":96:17)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":96:45)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":97:17)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":100:17)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":97:21)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":97:30)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":97:27)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":98:17)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":99:21)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":99:26)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:17)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":104:17)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:26)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:22)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:29)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:41)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:31)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":102:17)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:21)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:108)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:25)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:40)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:45)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:52)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:62)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:73)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:76)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:91)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:94)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:99)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:42)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:102)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":103:107)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:49)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":101:48)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":105:17)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":108:17)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":105:21)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":106:17)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":107:28)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":107:21)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":115:1)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":150:1)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":117:5)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":117:9)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":119:14)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":119:13)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":119:5)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":120:5)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":124:5)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":120:8)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":120:20)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":120:18)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":121:5)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":123:17)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":123:9)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":125:5)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":149:5)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":125:8)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":125:20)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":125:18)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":126:5)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":127:9)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":148:9)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":128:13)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":128:24)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":129:13)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":129:27)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":130:13)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":130:36)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:13)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":147:13)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:17)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:25)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:23)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:27)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:30)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:39)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":132:36)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":133:13)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":134:25)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":134:31)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":134:41)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":134:17)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":134:45)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":135:17)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":138:17)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":135:21)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":135:30)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":135:27)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":136:17)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":137:21)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":137:26)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:17)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":142:17)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:26)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:22)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:29)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:41)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:31)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":140:17)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:21)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:108)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:25)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:40)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:45)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:52)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:62)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:73)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:76)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:91)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:94)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:99)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:42)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:102)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":141:107)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:49)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":139:48)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":143:17)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":146:17)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":143:21)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":144:17)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":145:28)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":145:21)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":153:1)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":194:1)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":155:5)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":155:9)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":157:14)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":157:13)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":157:5)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":158:5)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":167:5)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":158:8)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":158:20)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":158:18)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":159:5)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":162:5)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":164:5)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":161:19)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":161:9)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":166:17)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":166:9)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":168:5)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":193:5)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":168:8)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":168:20)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":168:18)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":169:5)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":170:9)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":192:9)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":171:13)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":171:24)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":172:13)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":172:27)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":173:13)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":173:36)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":174:21)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":174:27)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":174:37)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":174:13)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":174:41)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":175:13)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":178:13)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":175:17)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":175:26)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":175:23)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":176:13)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":177:17)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":177:22)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:13)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":187:13)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:22)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:18)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:25)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:37)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:27)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":182:13)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:17)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":186:17)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:21)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:36)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:41)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:48)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:58)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:69)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:72)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:87)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:90)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:95)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":183:38)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":184:17)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":185:21)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":185:26)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:45)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":181:44)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":188:13)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":191:13)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":188:17)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":189:13)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":190:24)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":190:17)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":197:1)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":233:1)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":199:5)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":199:9)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":201:14)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":201:13)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":201:5)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":202:5)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":206:5)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":202:8)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":202:20)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":202:18)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":203:5)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":205:17)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":205:9)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":207:5)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":232:5)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":207:8)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":207:20)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":207:18)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":208:5)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":209:9)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":231:9)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":210:13)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":210:24)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":211:13)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":211:27)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":212:13)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":212:36)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":213:21)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":213:27)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":213:37)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":213:13)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":213:41)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":214:13)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":217:13)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":214:17)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":214:26)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":214:23)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":215:13)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":216:17)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":216:22)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:13)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":226:13)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:22)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:18)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:25)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:37)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:27)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":221:13)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:17)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":225:17)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:21)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:36)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:41)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:48)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:58)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:69)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:72)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:87)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:90)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:95)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":222:38)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":223:17)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":224:21)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":224:26)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:45)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":220:44)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":227:13)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":230:13)
#loc417 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":227:17)
#loc418 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":228:13)
#loc419 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":229:24)
#loc420 = loc("CWE400_Resource_Exhaustion__rand_fwrite_07.c":229:17)
#loc421 = loc(fused[#loc1, #loc2])
#loc422 = loc(fused[#loc3, #loc4])
#loc423 = loc(fused[#loc6, #loc7])
#loc424 = loc(fused[#loc9, #loc10])
#loc425 = loc(fused[#loc11, #loc12])
#loc426 = loc(fused[#loc14, #loc15])
#loc427 = loc(fused[#loc16, #loc17])
#loc428 = loc(fused[#loc18, #loc19])
#loc429 = loc(fused[#loc22, #loc20])
#loc430 = loc(fused[#loc23, #loc24])
#loc431 = loc(fused[#loc25, #loc26])
#loc432 = loc(fused[#loc28, #loc24])
#loc433 = loc(fused[#loc30, #loc29])
#loc434 = loc(fused[#loc31, #loc32])
#loc435 = loc(fused[#loc33, #loc34])
#loc436 = loc(fused[#loc36, #loc32])
#loc437 = loc(fused[#loc37, #loc38])
#loc438 = loc(fused[#loc39, #loc40])
#loc439 = loc(fused[#loc41, #loc42])
#loc440 = loc(fused[#loc43, #loc5])
#loc441 = loc(fused[#loc46, #loc47])
#loc442 = loc(fused[#loc48, #loc49])
#loc443 = loc(fused[#loc50, #loc51])
#loc444 = loc(fused[#loc53, #loc49])
#loc445 = loc(fused[#loc56, #loc57])
#loc446 = loc(fused[#loc59, #loc58])
#loc447 = loc(fused[#loc60, #loc61])
#loc448 = loc(fused[#loc63, #loc57])
#loc449 = loc(fused[#loc64, #loc65])
#loc450 = loc(fused[#loc66, #loc67])
#loc451 = loc(fused[#loc69, #loc70])
#loc452 = loc(fused[#loc71, #loc72])
#loc453 = loc(fused[#loc66, #loc74])
#loc454 = loc(fused[#loc76, #loc65])
#loc455 = loc(fused[#loc80, #loc79])
#loc456 = loc(fused[#loc81, #loc82])
#loc457 = loc(fused[#loc84, #loc82])
#loc458 = loc(fused[#loc87, #loc88])
#loc459 = loc(fused[#loc89, #loc90])
#loc460 = loc(fused[#loc91, #loc92])
#loc461 = loc(fused[#loc93, #loc94])
#loc462 = loc(fused[#loc95, #loc96])
#loc463 = loc(fused[#loc97, #loc98])
#loc464 = loc(fused[#loc101, #loc102])
#loc465 = loc(fused[#loc103, #loc104])
#loc466 = loc(fused[#loc107, #loc105])
#loc467 = loc(fused[#loc108, #loc109])
#loc468 = loc(fused[#loc110, #loc111])
#loc469 = loc(fused[#loc113, #loc109])
#loc470 = loc(fused[#loc115, #loc114])
#loc471 = loc(fused[#loc116, #loc117])
#loc472 = loc(fused[#loc118, #loc119])
#loc473 = loc(fused[#loc121, #loc122, #loc123, #loc117])
#loc474 = loc(fused[#loc125, #loc126])
#loc475 = loc(fused[#loc127, #loc128])
#loc476 = loc(fused[#loc129, #loc130])
#loc477 = loc(fused[#loc131, #loc100])
#loc478 = loc(fused[#loc132, #loc133])
#loc479 = loc(fused[#loc134, #loc135])
#loc480 = loc(fused[#loc138, #loc139])
#loc481 = loc(fused[#loc141, #loc133])
#loc482 = loc(fused[#loc145, #loc146])
#loc483 = loc(fused[#loc147, #loc148])
#loc484 = loc(fused[#loc149, #loc150])
#loc485 = loc(fused[#loc152, #loc148])
#loc486 = loc(fused[#loc155, #loc156])
#loc487 = loc(fused[#loc158, #loc157])
#loc488 = loc(fused[#loc159, #loc160])
#loc489 = loc(fused[#loc162, #loc156])
#loc490 = loc(fused[#loc163, #loc164])
#loc491 = loc(fused[#loc165, #loc166])
#loc492 = loc(fused[#loc169, #loc170])
#loc493 = loc(fused[#loc171, #loc172])
#loc494 = loc(fused[#loc165, #loc174])
#loc495 = loc(fused[#loc176, #loc164])
#loc496 = loc(fused[#loc179, #loc178])
#loc497 = loc(fused[#loc180, #loc181])
#loc498 = loc(fused[#loc183, #loc181])
#loc499 = loc(fused[#loc186, #loc187])
#loc500 = loc(fused[#loc188, #loc189])
#loc501 = loc(fused[#loc192, #loc190])
#loc502 = loc(fused[#loc193, #loc194])
#loc503 = loc(fused[#loc195, #loc196])
#loc504 = loc(fused[#loc198, #loc194])
#loc505 = loc(fused[#loc200, #loc199])
#loc506 = loc(fused[#loc201, #loc202])
#loc507 = loc(fused[#loc203, #loc204])
#loc508 = loc(fused[#loc206, #loc202])
#loc509 = loc(fused[#loc207, #loc208])
#loc510 = loc(fused[#loc209, #loc210])
#loc511 = loc(fused[#loc211, #loc212])
#loc512 = loc(fused[#loc213, #loc214])
#loc513 = loc(fused[#loc215, #loc216])
#loc514 = loc(fused[#loc217, #loc218])
#loc515 = loc(fused[#loc221, #loc222])
#loc516 = loc(fused[#loc224, #loc216])
#loc517 = loc(fused[#loc228, #loc229])
#loc518 = loc(fused[#loc230, #loc231])
#loc519 = loc(fused[#loc232, #loc233])
#loc520 = loc(fused[#loc235, #loc231])
#loc521 = loc(fused[#loc238, #loc239])
#loc522 = loc(fused[#loc241, #loc240])
#loc523 = loc(fused[#loc242, #loc243])
#loc524 = loc(fused[#loc245, #loc239])
#loc525 = loc(fused[#loc246, #loc247])
#loc526 = loc(fused[#loc248, #loc249])
#loc527 = loc(fused[#loc252, #loc253])
#loc528 = loc(fused[#loc254, #loc255])
#loc529 = loc(fused[#loc248, #loc257])
#loc530 = loc(fused[#loc259, #loc247])
#loc531 = loc(fused[#loc262, #loc261])
#loc532 = loc(fused[#loc263, #loc264])
#loc533 = loc(fused[#loc266, #loc264])
#loc534 = loc(fused[#loc269, #loc270])
#loc535 = loc(fused[#loc271, #loc272])
#loc536 = loc(fused[#loc275, #loc273])
#loc537 = loc(fused[#loc276, #loc277])
#loc538 = loc(fused[#loc278, #loc279])
#loc539 = loc(fused[#loc281, #loc282, #loc283, #loc277])
#loc540 = loc(fused[#loc287, #loc286])
#loc541 = loc(fused[#loc288, #loc289])
#loc542 = loc(fused[#loc290, #loc291])
#loc543 = loc(fused[#loc293, #loc289])
#loc544 = loc(fused[#loc294, #loc295])
#loc545 = loc(fused[#loc296, #loc297])
#loc546 = loc(fused[#loc298, #loc299])
#loc547 = loc(fused[#loc300, #loc301])
#loc548 = loc(fused[#loc305, #loc306])
#loc549 = loc(fused[#loc307, #loc308])
#loc550 = loc(fused[#loc309, #loc310])
#loc551 = loc(fused[#loc312, #loc308])
#loc552 = loc(fused[#loc315, #loc316])
#loc553 = loc(fused[#loc318, #loc317])
#loc554 = loc(fused[#loc319, #loc320])
#loc555 = loc(fused[#loc322, #loc316])
#loc556 = loc(fused[#loc323, #loc324])
#loc557 = loc(fused[#loc325, #loc326])
#loc558 = loc(fused[#loc329, #loc330])
#loc559 = loc(fused[#loc331, #loc332])
#loc560 = loc(fused[#loc325, #loc334])
#loc561 = loc(fused[#loc336, #loc324])
#loc562 = loc(fused[#loc340, #loc339])
#loc563 = loc(fused[#loc341, #loc342])
#loc564 = loc(fused[#loc344, #loc342])
#loc565 = loc(fused[#loc347, #loc348])
#loc566 = loc(fused[#loc349, #loc350])
#loc567 = loc(fused[#loc353, #loc351])
#loc568 = loc(fused[#loc354, #loc355])
#loc569 = loc(fused[#loc356, #loc357])
#loc570 = loc(fused[#loc359, #loc355])
#loc571 = loc(fused[#loc361, #loc360])
#loc572 = loc(fused[#loc362, #loc363])
#loc573 = loc(fused[#loc364, #loc365])
#loc574 = loc(fused[#loc367, #loc363])
#loc575 = loc(fused[#loc368, #loc369])
#loc576 = loc(fused[#loc370, #loc371])
#loc577 = loc(fused[#loc372, #loc373])
#loc578 = loc(fused[#loc374, #loc375])
#loc579 = loc(fused[#loc379, #loc380])
#loc580 = loc(fused[#loc381, #loc382])
#loc581 = loc(fused[#loc383, #loc384])
#loc582 = loc(fused[#loc386, #loc382])
#loc583 = loc(fused[#loc389, #loc390])
#loc584 = loc(fused[#loc392, #loc391])
#loc585 = loc(fused[#loc393, #loc394])
#loc586 = loc(fused[#loc396, #loc390])
#loc587 = loc(fused[#loc397, #loc398])
#loc588 = loc(fused[#loc399, #loc400])
#loc589 = loc(fused[#loc403, #loc404])
#loc590 = loc(fused[#loc405, #loc406])
#loc591 = loc(fused[#loc399, #loc408])
#loc592 = loc(fused[#loc410, #loc398])
#loc593 = loc(fused[#loc414, #loc413])
#loc594 = loc(fused[#loc415, #loc416])
#loc595 = loc(fused[#loc418, #loc416])
