!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc118)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc121)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc125)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc126)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc130)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc131)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc30)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc132)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %18 = cir.const #cir.int<65> : !s32i loc(#loc34)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc35)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc35)
    cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc133)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc39)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc41)
    %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    cir.br ^bb6 loc(#loc135)
  ^bb6:  // pred: ^bb5
    %30 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc123)
    cir.store %30, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc123)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc46)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    %35 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
    %38 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc137)
    cir.libc.memcpy %39 bytes from %34 to %32 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc138)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc54)
    %42 = cir.const #cir.int<50> : !s32i loc(#loc55)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc55)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc57)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %48 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc60)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb7 loc(#loc45)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc12)
  } loc(#loc122)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc72)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc73)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc146)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc81)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc150)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc83)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc85)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc83)
    cir.br ^bb3 loc(#loc79)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc79)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc152)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    %18 = cir.const #cir.int<65> : !s32i loc(#loc89)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc90)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc90)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc90)
    cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc94)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %26 = cir.const #cir.int<50> : !s32i loc(#loc96)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc96)
    %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc98)
    cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    cir.br ^bb6 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %30 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc143)
    cir.store %30, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc143)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc101)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %35 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc103)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc103)
    %38 = cir.const #cir.int<1> : !u64i loc(#loc156)
    %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc157)
    cir.libc.memcpy %39 bytes from %34 to %32 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc158)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc109)
    %42 = cir.const #cir.int<50> : !s32i loc(#loc110)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc110)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc112)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %48 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc115)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb7 loc(#loc100)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc67)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":23:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":41:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":34:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":34:25)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":25:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":25:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":26:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":26:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":26:31)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":26:42)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":26:43)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":26:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:30)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":27:29)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":28:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":28:10)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":31:12)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":31:18)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":31:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":31:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":31:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":31:28)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":32:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":32:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":32:10)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":32:14)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":32:15)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":33:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":40:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:16)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:22)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:28)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:35)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:41)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:52)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":36:53)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":37:22)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":37:14)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":37:17)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":37:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":38:19)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":38:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":39:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":39:14)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":68:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":71:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":70:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":70:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":48:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":66:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":59:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":59:25)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":50:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":50:12)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":51:20)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":51:27)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":51:31)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":51:42)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":51:43)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":51:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:33)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:23)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:24)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:30)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":52:29)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":53:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":53:10)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":56:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":56:18)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":56:23)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":56:26)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":56:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":56:27)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":57:18)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":57:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":57:10)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":57:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":57:14)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":58:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":65:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:16)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:22)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:28)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:35)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:41)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:52)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":61:53)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":62:22)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":62:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":62:17)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":62:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":63:19)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":63:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":64:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_18.c":64:14)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc15, #loc16])
#loc125 = loc(fused[#loc19, #loc20])
#loc126 = loc(fused[#loc18, #loc20])
#loc127 = loc(fused[#loc17, #loc21])
#loc128 = loc(fused[#loc22, #loc21])
#loc129 = loc(fused[#loc23, #loc24])
#loc130 = loc(fused[#loc25, #loc26])
#loc131 = loc(fused[#loc27, #loc24])
#loc132 = loc(fused[#loc31, #loc32])
#loc133 = loc(fused[#loc37, #loc38])
#loc134 = loc(fused[#loc40, #loc39])
#loc135 = loc(fused[#loc44, #loc45])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc48, #loc51])
#loc138 = loc(fused[#loc52, #loc53])
#loc139 = loc(fused[#loc57, #loc54])
#loc140 = loc(fused[#loc62, #loc63])
#loc141 = loc(fused[#loc64, #loc65])
#loc142 = loc(fused[#loc66, #loc67])
#loc143 = loc(fused[#loc68, #loc69])
#loc144 = loc(fused[#loc70, #loc71])
#loc145 = loc(fused[#loc74, #loc75])
#loc146 = loc(fused[#loc73, #loc75])
#loc147 = loc(fused[#loc72, #loc76])
#loc148 = loc(fused[#loc77, #loc76])
#loc149 = loc(fused[#loc78, #loc79])
#loc150 = loc(fused[#loc80, #loc81])
#loc151 = loc(fused[#loc82, #loc79])
#loc152 = loc(fused[#loc86, #loc87])
#loc153 = loc(fused[#loc92, #loc93])
#loc154 = loc(fused[#loc95, #loc94])
#loc155 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc105, #loc106])
#loc157 = loc(fused[#loc103, #loc106])
#loc158 = loc(fused[#loc107, #loc108])
#loc159 = loc(fused[#loc112, #loc109])
