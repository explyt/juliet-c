!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":175:10)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":175:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":175:20)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":175:32)
#true = #cir.bool<true> : !cir.bool
#loc257 = loc(fused[#loc58, #loc59])
#loc258 = loc(fused[#loc60, #loc61])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc235)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc236)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc239)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc241)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc244)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc244)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc244)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc26)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc26)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc26)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc26)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc26)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc26)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc26)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc26)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc236)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc246)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc247)
      } loc(#loc245)
    } loc(#loc243)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_badData : !cir.ptr<!s32i> loc(#loc239)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc240)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc251)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc254)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.return %17 : !s32i loc(#loc261)
  } loc(#loc256)
  cir.func private @printIntLine(!s32i) loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc264)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_badData : !cir.ptr<!s32i> loc(#loc239)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc266)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc267)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc267)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc267)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc269)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc96)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc98)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc98)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc271)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc101)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc273)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc104)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc274)
              cir.condition(%16) loc(#loc105)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc108)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc108)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc109)
              } loc(#loc275)
              cir.yield loc(#loc100)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc111)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc276)
              cir.yield loc(#loc272)
            } loc(#loc272)
          } loc(#loc272)
        } else {
          %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc78)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc78)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc112)
        } loc(#loc270)
      } loc(#loc268)
    } loc(#loc265)
    cir.return loc(#loc80)
  } loc(#loc263)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc277)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc120)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc122)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc277)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc283)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc126)
    cir.return loc(#loc116)
  } loc(#loc278)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc277)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc287)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc288)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc288)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc288)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc141)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc290)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc145)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc147)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc147)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc292)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc150)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc294)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc153)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc295)
              cir.condition(%16) loc(#loc154)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc156)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc157)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc157)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc158)
              } loc(#loc296)
              cir.yield loc(#loc149)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc159)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc160)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc297)
              cir.yield loc(#loc293)
            } loc(#loc293)
          } loc(#loc293)
        } else {
          %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc161)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc161)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc162)
        } loc(#loc291)
      } loc(#loc289)
    } loc(#loc286)
    cir.return loc(#loc129)
  } loc(#loc284)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc298)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc300)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc303)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc303)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc303)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc178)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc179)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc179)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc179)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc179)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc179)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc179)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc179)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc179)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc236)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc180)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc181)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc305)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc186)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc187)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc190)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc190)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc191)
        } loc(#loc306)
      } loc(#loc304)
    } loc(#loc302)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodB2GData : !cir.ptr<!s32i> loc(#loc298)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %5 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc309)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc194)
    cir.return loc(#loc166)
  } loc(#loc299)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc196)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodB2GData : !cir.ptr<!s32i> loc(#loc298)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc313)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc314)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc314)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc314)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc210)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc316)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc213)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc317)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc211)
            cir.yield %14 : !cir.bool loc(#loc211)
          }, false {
            %14 = cir.const #false loc(#loc211)
            cir.yield %14 : !cir.bool loc(#loc211)
          }) : (!cir.bool) -> !cir.bool loc(#loc211)
          cir.yield %13 : !cir.bool loc(#loc211)
        }, false {
          %10 = cir.const #false loc(#loc211)
          cir.yield %10 : !cir.bool loc(#loc211)
        }) : (!cir.bool) -> !cir.bool loc(#loc211)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc218)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc219)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc220)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc220)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc319)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc223)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc321)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc225)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc226)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc322)
              cir.condition(%17) loc(#loc227)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc229)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc230)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc230)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc231)
              } loc(#loc323)
              cir.yield loc(#loc222)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc232)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc233)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc324)
              cir.yield loc(#loc320)
            } loc(#loc320)
          } loc(#loc320)
        } else {
          %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc196)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc196)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc234)
        } loc(#loc318)
      } loc(#loc315)
    } loc(#loc312)
    cir.return loc(#loc198)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":67:23)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":22:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":22:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":52:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":72:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":54:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":54:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":56:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":56:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":56:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":57:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":69:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":58:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":58:45)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":68:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:49)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:59)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":61:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":64:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":66:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:36)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":67:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":70:67)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":70:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":71:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":71:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":161:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":165:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":163:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":163:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":164:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":164:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":180:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":182:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":185:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":187:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":175:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":190:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":176:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":178:27)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":178:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":178:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":180:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":181:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":181:62)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":182:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":185:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":186:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":186:61)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":187:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":189:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":189:5)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":47:23)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":28:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":50:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":30:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":30:16)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":31:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":49:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":32:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":32:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":33:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":33:30)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":36:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":48:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":36:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":36:21)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":37:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":44:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":46:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":38:28)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":38:20)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":38:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":43:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:21)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:24)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:28)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:26)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":41:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":42:37)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":42:30)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":42:17)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:33)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:32)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":47:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":23:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":23:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":103:1)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":113:1)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":105:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":105:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":107:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":107:12)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":107:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":110:12)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":110:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":111:71)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":111:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":112:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":112:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":79:1)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":101:1)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":81:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":81:16)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":82:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":100:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":83:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":83:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":84:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":84:30)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":87:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":99:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":87:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":87:21)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":88:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":95:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":97:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":89:28)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":89:20)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":89:13)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":94:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:21)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:17)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:24)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:28)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:26)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":92:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":93:37)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":93:30)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":93:17)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:33)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:32)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":98:23)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":98:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":24:1)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":24:12)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":139:1)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":159:1)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":141:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":141:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":143:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":143:12)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":143:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":144:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":156:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":145:9)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":145:45)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":155:9)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:19)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:32)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:49)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:13)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:59)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":148:9)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":151:9)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":153:9)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:25)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:20)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:13)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:36)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":154:23)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":154:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":157:71)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":157:5)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":158:5)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":158:17)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":134:23)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":116:1)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":137:1)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":118:5)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":118:16)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":119:5)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":136:5)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":120:9)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":120:13)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":121:9)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":121:30)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:9)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":135:9)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:13)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:21)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:23)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:26)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:34)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:36)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":124:9)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":131:9)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":133:9)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":125:28)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":125:20)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":125:13)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:13)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":130:13)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:21)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:17)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:24)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:28)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:26)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":128:13)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":129:37)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":129:30)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":129:17)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:33)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:32)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":134:13)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc5, #loc6])
#loc238 = loc(fused[#loc7, #loc8])
#loc239 = loc(fused[#loc10, #loc11])
#loc240 = loc(fused[#loc12, #loc13])
#loc241 = loc(fused[#loc14, #loc15])
#loc242 = loc(fused[#loc18, #loc16])
#loc243 = loc(fused[#loc19, #loc20])
#loc244 = loc(fused[#loc21, #loc22])
#loc245 = loc(fused[#loc23, #loc24])
#loc246 = loc(fused[#loc28, #loc29])
#loc247 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc248 = loc(fused[#loc35, #loc36])
#loc249 = loc(fused[#loc39, #loc38])
#loc250 = loc(fused[#loc40, #loc41])
#loc251 = loc(fused[#loc42, #loc43])
#loc252 = loc(fused[#loc44, #loc45])
#loc253 = loc(fused[#loc46, #loc47])
#loc254 = loc(fused[#loc48, #loc49])
#loc255 = loc(fused[#loc50, #loc51])
#loc256 = loc(fused[#loc56, #loc57])
#loc259 = loc(fused[#loc67, #loc68])
#loc260 = loc(fused[#loc71, #loc72])
#loc261 = loc(fused[#loc75, #loc74])
#loc262 = loc(fused[#loc76, #loc77])
#loc263 = loc(fused[#loc79, #loc80])
#loc264 = loc(fused[#loc81, #loc82])
#loc265 = loc(fused[#loc83, #loc84])
#loc266 = loc(fused[#loc85, #loc86])
#loc267 = loc(fused[#loc87, #loc88])
#loc268 = loc(fused[#loc89, #loc90])
#loc269 = loc(fused[#loc91, #loc92])
#loc270 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc271 = loc(fused[#loc98, #loc96])
#loc272 = loc(fused[#loc99, #loc100])
#loc273 = loc(fused[#loc102, #loc101])
#loc274 = loc(fused[#loc103, #loc104])
#loc275 = loc(fused[#loc106, #loc100])
#loc276 = loc(fused[#loc111, #loc110])
#loc277 = loc(fused[#loc113, #loc114])
#loc278 = loc(fused[#loc115, #loc116])
#loc279 = loc(fused[#loc117, #loc118])
#loc280 = loc(fused[#loc121, #loc119])
#loc281 = loc(fused[#loc123, #loc122])
#loc282 = loc(fused[#loc125, #loc124])
#loc283 = loc(fused[#loc126, #loc127])
#loc284 = loc(fused[#loc128, #loc129])
#loc285 = loc(fused[#loc130, #loc131])
#loc286 = loc(fused[#loc132, #loc133])
#loc287 = loc(fused[#loc134, #loc135])
#loc288 = loc(fused[#loc136, #loc137])
#loc289 = loc(fused[#loc138, #loc139])
#loc290 = loc(fused[#loc140, #loc141])
#loc291 = loc(fused[#loc142, #loc143, #loc144, #loc139])
#loc292 = loc(fused[#loc147, #loc145])
#loc293 = loc(fused[#loc148, #loc149])
#loc294 = loc(fused[#loc151, #loc150])
#loc295 = loc(fused[#loc152, #loc153])
#loc296 = loc(fused[#loc155, #loc149])
#loc297 = loc(fused[#loc160, #loc159])
#loc298 = loc(fused[#loc163, #loc164])
#loc299 = loc(fused[#loc165, #loc166])
#loc300 = loc(fused[#loc167, #loc168])
#loc301 = loc(fused[#loc171, #loc169])
#loc302 = loc(fused[#loc172, #loc173])
#loc303 = loc(fused[#loc174, #loc175])
#loc304 = loc(fused[#loc176, #loc177])
#loc305 = loc(fused[#loc181, #loc182])
#loc306 = loc(fused[#loc183, #loc184, #loc185, #loc177])
#loc307 = loc(fused[#loc188, #loc189])
#loc308 = loc(fused[#loc193, #loc192])
#loc309 = loc(fused[#loc194, #loc195])
#loc310 = loc(fused[#loc197, #loc198])
#loc311 = loc(fused[#loc199, #loc200])
#loc312 = loc(fused[#loc201, #loc202])
#loc313 = loc(fused[#loc203, #loc204])
#loc314 = loc(fused[#loc205, #loc206])
#loc315 = loc(fused[#loc207, #loc208])
#loc316 = loc(fused[#loc209, #loc210])
#loc317 = loc(fused[#loc212, #loc214])
#loc318 = loc(fused[#loc215, #loc216, #loc217, #loc208])
#loc319 = loc(fused[#loc220, #loc218])
#loc320 = loc(fused[#loc221, #loc222])
#loc321 = loc(fused[#loc224, #loc223])
#loc322 = loc(fused[#loc225, #loc226])
#loc323 = loc(fused[#loc228, #loc222])
#loc324 = loc(fused[#loc233, #loc232])
