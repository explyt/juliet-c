!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc105)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc108)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc109)
    cir.goto "source" loc(#loc110)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc13)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc113)
      cir.scope {
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc115)
        cir.scope {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc26)
          cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc117)
          cir.for : cond {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc28)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc29)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc29)
            %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc118)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc30)
            cir.condition(%23) loc(#loc30)
          } body {
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc32)
              %20 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc33)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc120)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc36)
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc37)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
              %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
              cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc121)
            } loc(#loc119)
            cir.yield loc(#loc25)
          } step {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc41)
            cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc122)
            cir.yield loc(#loc116)
          } loc(#loc116)
        } loc(#loc116)
      } loc(#loc114)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc42)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc43)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc44)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc44)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc123)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc124)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc125)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
      cir.call @printStructLine(%15) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc52)
    } loc(#loc112)
    cir.return loc(#loc4)
  } loc(#loc106)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc126)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc130)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc131)
    cir.goto "source" loc(#loc132)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc67)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc135)
      cir.scope {
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc137)
        cir.scope {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc80)
          cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc139)
          cir.for : cond {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc83)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc83)
            %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc140)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc84)
            cir.condition(%23) loc(#loc84)
          } body {
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc86)
              %20 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc87)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc142)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc89)
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc90)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
              %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
              cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc143)
            } loc(#loc141)
            cir.yield loc(#loc79)
          } step {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc92)
            %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc93)
            cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc144)
            cir.yield loc(#loc138)
          } loc(#loc138)
        } loc(#loc138)
      } loc(#loc136)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc94)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc95)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc96)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc96)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc145)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc146)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc147)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc102)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
      cir.call @printStructLine(%15) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc104)
    } loc(#loc134)
    cir.return loc(#loc58)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":46:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":23:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":24:35)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":25:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":26:10)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":27:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":30:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":45:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":32:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":32:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":33:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":41:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":34:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":34:20)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":40:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:22)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:18)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:25)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:27)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":37:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":38:36)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":38:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":38:17)
#loc35 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":39:36)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":39:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":39:17)
#loc39 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:35)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":36:34)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":43:16)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":43:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":43:30)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":43:34)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":43:54)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":43:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":43:55)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":44:26)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":44:31)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":44:32)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":44:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":79:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":82:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":81:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":81:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":53:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":77:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":55:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":55:21)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":56:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":56:35)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":57:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":57:37)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":58:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":58:10)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":59:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":61:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":61:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":62:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":76:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":63:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":63:33)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":64:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":72:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":65:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":65:20)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":71:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:25)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:29)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:27)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":68:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":69:36)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":69:24)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":69:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":70:36)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":70:24)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":70:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:35)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":67:34)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":74:16)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":74:22)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":74:30)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":74:34)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":74:54)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":74:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":74:55)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":75:26)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":75:31)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":75:32)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_18.c":75:9)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc15, #loc14])
#loc112 = loc(fused[#loc16, #loc17])
#loc113 = loc(fused[#loc18, #loc19])
#loc114 = loc(fused[#loc20, #loc21])
#loc115 = loc(fused[#loc22, #loc23])
#loc116 = loc(fused[#loc24, #loc25])
#loc117 = loc(fused[#loc27, #loc26])
#loc118 = loc(fused[#loc28, #loc29])
#loc119 = loc(fused[#loc31, #loc25])
#loc120 = loc(fused[#loc34, #loc32])
#loc121 = loc(fused[#loc38, #loc36])
#loc122 = loc(fused[#loc41, #loc40])
#loc123 = loc(fused[#loc45, #loc46])
#loc124 = loc(fused[#loc44, #loc46])
#loc125 = loc(fused[#loc47, #loc48])
#loc126 = loc(fused[#loc53, #loc54])
#loc127 = loc(fused[#loc55, #loc56])
#loc128 = loc(fused[#loc57, #loc58])
#loc129 = loc(fused[#loc59, #loc60])
#loc130 = loc(fused[#loc61, #loc62])
#loc131 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc65, #loc66])
#loc133 = loc(fused[#loc69, #loc68])
#loc134 = loc(fused[#loc70, #loc71])
#loc135 = loc(fused[#loc72, #loc73])
#loc136 = loc(fused[#loc74, #loc75])
#loc137 = loc(fused[#loc76, #loc77])
#loc138 = loc(fused[#loc78, #loc79])
#loc139 = loc(fused[#loc81, #loc80])
#loc140 = loc(fused[#loc82, #loc83])
#loc141 = loc(fused[#loc85, #loc79])
#loc142 = loc(fused[#loc88, #loc86])
#loc143 = loc(fused[#loc91, #loc89])
#loc144 = loc(fused[#loc93, #loc92])
#loc145 = loc(fused[#loc97, #loc98])
#loc146 = loc(fused[#loc96, #loc98])
#loc147 = loc(fused[#loc99, #loc100])
