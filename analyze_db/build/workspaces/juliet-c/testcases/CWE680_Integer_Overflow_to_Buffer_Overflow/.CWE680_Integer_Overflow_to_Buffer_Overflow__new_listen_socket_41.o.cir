!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":46:14)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":46:18)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:44)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":144:18)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":144:22)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc242 = loc(fused[#loc7, #loc8])
#loc314 = loc(fused[#loc188, #loc189])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc239)
  cir.func private @printIntLine(!s32i) loc(#loc240)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_417badSinkEi(%arg0: !s32i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc245)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc242)
    cir.store %arg0, %3 : !s32i, !cir.ptr<!s32i> loc(#loc14)
    cir.br ^bb1 loc(#loc246)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc17)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc247)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc248)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc21)
    %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc22)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc250)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc250)
    cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc251)
    cir.br ^bb2 loc(#loc252)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc253)
    cir.br ^bb3 loc(#loc252)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
    %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc254)
    cir.brcond %17 ^bb4, ^bb8 loc(#loc254)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc255)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc36)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc38)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc257)
    cir.br ^bb3 loc(#loc252)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc42)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    cir.delete.array %28 : <!s32i> loc(#loc43)
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc241)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc258)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc259)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc260)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc261)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc262)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc263)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc264)
  cir.func private @close(!s32i) -> !s32i loc(#loc265)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_413badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc268)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc269)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc270)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc271)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc272)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc75)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb1 loc(#loc274)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc67)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc69)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb2 loc(#loc275)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc275)
  ^bb3:  // pred: ^bb34
    %12 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc81)
    cir.brcond %13 ^bb4, ^bb35 loc(#loc81)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc276)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<2> : !s32i loc(#loc84)
    %15 = cir.const #cir.int<1> : !u32i loc(#loc85)
    %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc85)
    %17 = cir.const #cir.int<6> : !u32i loc(#loc86)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc86)
    %19 = cir.call @socket(%14, %16, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc87)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb6 loc(#loc278)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc93)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc279)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc280)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc95)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // pred: ^bb8
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc281)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc282)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc283)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc103)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc104)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc284)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc106)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc107)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc108)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc285)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc110)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc110)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc111)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc112)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc286)
    cir.br ^bb10 loc(#loc287)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc288)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc289)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc289)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc122)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc123)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc290)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc291)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc125)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc116)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc292)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc129)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc130)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc131)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %51 ^bb15, ^bb16 loc(#loc294)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc133)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc127)
  ^bb17:  // pred: ^bb16
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc135)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc136)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc137)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb18 loc(#loc296)
  ^bb18:  // pred: ^bb17
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc143)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %59 ^bb19, ^bb20 loc(#loc298)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc145)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc141)
  ^bb21:  // pred: ^bb20
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc147)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc148)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc148)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc148)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc148)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc148)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc148)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc148)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc149)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc299)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc151)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc151)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb22 loc(#loc301)
  ^bb22:  // pred: ^bb21
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc157)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc302)
    cir.brcond %79 ^bb23, ^bb24 loc(#loc158)
  ^bb23:  // pred: ^bb22
    %80 = cir.const #true loc(#loc158)
    cir.br ^bb29(%80 : !cir.bool) loc(#loc158)
  ^bb24:  // pred: ^bb22
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %83 ^bb25, ^bb26 loc(#loc158)
  ^bb25:  // pred: ^bb24
    %84 = cir.const #true loc(#loc158)
    cir.br ^bb27(%84 : !cir.bool) loc(#loc158)
  ^bb26:  // pred: ^bb24
    %85 = cir.const #false loc(#loc158)
    cir.br ^bb27(%85 : !cir.bool) loc(#loc158)
  ^bb27(%86: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc158)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%86 : !cir.bool) loc(#loc158)
  ^bb29(%87: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc158)
  ^bb30:  // pred: ^bb29
    cir.brcond %87 ^bb31, ^bb32 loc(#loc304)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc162)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc155)
  ^bb33:  // pred: ^bb32
    %88 = cir.const #cir.int<0> : !s8i loc(#loc163)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc165)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc165)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc305)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc166)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc167)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb34 loc(#loc83)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc80)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc80)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc307)
  ^bb37:  // pred: ^bb36
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %96 = cir.unary(minus, %95) nsw : !s32i, !s32i loc(#loc173)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %97 ^bb38, ^bb39 loc(#loc309)
  ^bb38:  // pred: ^bb37
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc176)
    cir.br ^bb39 loc(#loc171)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc171)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc310)
  ^bb41:  // pred: ^bb40
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc180)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc311)
    cir.brcond %103 ^bb42, ^bb43 loc(#loc312)
  ^bb42:  // pred: ^bb41
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc183)
    cir.br ^bb43 loc(#loc178)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc178)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc78)
  ^bb45:  // pred: ^bb44
    %106 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_417badSinkEi(%106) : (!s32i) -> () loc(#loc185)
    cir.return loc(#loc61)
  } loc(#loc266)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_4111goodG2BSinkEi(%arg0: !s32i loc(fused[#loc188, #loc189])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc315)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc316)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc317)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc314)
    cir.store %arg0, %3 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb1 loc(#loc318)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc198)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc319)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc320)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc321)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc202)
    %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc203)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc322)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc322)
    cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc323)
    cir.br ^bb2 loc(#loc324)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc209)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc325)
    cir.br ^bb3 loc(#loc324)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc211)
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc212)
    %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc326)
    cir.brcond %17 ^bb4, ^bb8 loc(#loc326)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc327)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc215)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc216)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc217)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb6 loc(#loc208)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc208)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc218)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc219)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc329)
    cir.br ^bb3 loc(#loc324)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc208)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc220)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc222)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc223)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc224)
    cir.delete.array %28 : <!s32i> loc(#loc224)
    cir.br ^bb10 loc(#loc197)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc187)
  } loc(#loc313)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc331)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc230)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc232)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_4111goodG2BSinkEi(%4) : (!s32i) -> () loc(#loc235)
    cir.return loc(#loc226)
  } loc(#loc330)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_414goodEv() extra(#fn_attr) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41L7goodG2BEv() : () -> () loc(#loc238)
    cir.return loc(#loc237)
  } loc(#loc334)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":46:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":61:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":49:9)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":49:16)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":49:26)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":50:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":50:14)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":47:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":48:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":60:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":52:21)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":52:28)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":52:38)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":52:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":53:37)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":46:6)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":53:28)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":53:46)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":53:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":54:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":57:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":54:18)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":54:14)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":54:21)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":54:33)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":55:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":56:29)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":56:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":56:24)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":56:25)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":54:40)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":54:39)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":58:22)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":58:33)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":58:34)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":58:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":59:19)
#loc44 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc45 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc46 = loc("/usr/include/netinet/in.h":402:1)
#loc47 = loc("/usr/include/netinet/in.h":403:40)
#loc48 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc49 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc50 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc51 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc52 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc53 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc54 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc55 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc56 = loc("/usr/include/stdlib.h":105:1)
#loc57 = loc("/usr/include/stdlib.h":106:33)
#loc58 = loc("/usr/include/unistd.h":358:1)
#loc59 = loc("/usr/include/unistd.h":358:27)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":63:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":138:1)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":73:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":73:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":74:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":74:28)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":75:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":75:31)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":76:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":76:31)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":77:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":77:41)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":65:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":65:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":67:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":67:12)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":67:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":68:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":136:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":78:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":121:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":121:16)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":79:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":120:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":88:35)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":88:44)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":88:57)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":88:28)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":88:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":88:68)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":89:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":92:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":89:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":89:33)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":90:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":91:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":93:20)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":93:21)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":93:30)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":93:33)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":93:47)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":93:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":93:48)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":94:34)
#loc104 = loc("/usr/include/netinet/in.h":249:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":94:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":95:39)
#loc107 = loc("/usr/include/netinet/in.h":251:20)
#loc108 = loc("/usr/include/netinet/in.h":33:15)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":95:13)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":96:38)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":96:32)
#loc112 = loc("/usr/include/netinet/in.h":250:15)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":96:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":96:46)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":100:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:22)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:54)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:55)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:64)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:78)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:17)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":97:84)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":98:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":99:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":101:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":104:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":101:24)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":101:38)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":101:17)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":101:57)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":102:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":103:17)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":105:35)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":105:49)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":105:55)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":105:28)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":105:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":105:59)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":106:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":109:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":106:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":106:33)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":107:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":108:17)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:31)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:45)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:58)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:76)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:79)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:26)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":111:80)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":115:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:17)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:31)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:47)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":112:61)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":113:13)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":114:17)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":117:39)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":117:25)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":117:13)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":119:25)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":119:20)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":119:13)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":119:36)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":122:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":125:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":122:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":122:29)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":123:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":124:26)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":124:13)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":126:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":129:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":126:13)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":126:29)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":127:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":128:26)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":128:13)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":137:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":137:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":144:1)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":159:1)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":147:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":147:16)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":147:26)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":148:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":148:14)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":145:1)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":146:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":158:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":150:21)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":150:28)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":150:38)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":150:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":151:37)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":144:6)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":151:28)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":151:46)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":151:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":152:9)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":155:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":152:18)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":152:14)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":152:21)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":152:33)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":153:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":154:29)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":154:13)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":154:24)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":154:25)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":152:40)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":152:39)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":156:22)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":156:33)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":156:34)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":156:9)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":157:19)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":162:1)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":170:1)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":164:5)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":164:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":166:13)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":166:12)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":166:5)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":168:12)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":168:5)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":169:17)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":169:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":172:1)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":175:1)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_41.cpp":174:5)
#loc239 = loc(fused[#loc1, #loc2])
#loc240 = loc(fused[#loc3, #loc4])
#loc241 = loc(fused[#loc5, #loc6])
#loc243 = loc(fused[#loc9, #loc10])
#loc244 = loc(fused[#loc9, #loc11])
#loc245 = loc(fused[#loc12, #loc13])
#loc246 = loc(fused[#loc15, #loc16])
#loc247 = loc(fused[#loc18, #loc19])
#loc248 = loc(fused[#loc17, #loc19])
#loc249 = loc(fused[#loc20, #loc19])
#loc250 = loc(fused[#loc23, #loc24])
#loc251 = loc(fused[#loc25, #loc24])
#loc252 = loc(fused[#loc26, #loc27])
#loc253 = loc(fused[#loc29, #loc28])
#loc254 = loc(fused[#loc30, #loc31])
#loc255 = loc(fused[#loc32, #loc27])
#loc256 = loc(fused[#loc34, #loc33])
#loc257 = loc(fused[#loc38, #loc37])
#loc258 = loc(fused[#loc44, #loc45])
#loc259 = loc(fused[#loc46, #loc47])
#loc260 = loc(fused[#loc48, #loc49])
#loc261 = loc(fused[#loc50, #loc51])
#loc262 = loc(fused[#loc52, #loc53])
#loc263 = loc(fused[#loc54, #loc55])
#loc264 = loc(fused[#loc56, #loc57])
#loc265 = loc(fused[#loc58, #loc59])
#loc266 = loc(fused[#loc60, #loc61])
#loc267 = loc(fused[#loc62, #loc63])
#loc268 = loc(fused[#loc64, #loc65])
#loc269 = loc(fused[#loc66, #loc67])
#loc270 = loc(fused[#loc68, #loc69])
#loc271 = loc(fused[#loc70, #loc71])
#loc272 = loc(fused[#loc72, #loc73])
#loc273 = loc(fused[#loc76, #loc74])
#loc274 = loc(fused[#loc77, #loc78])
#loc275 = loc(fused[#loc79, #loc80])
#loc276 = loc(fused[#loc82, #loc83])
#loc277 = loc(fused[#loc88, #loc89])
#loc278 = loc(fused[#loc90, #loc91])
#loc279 = loc(fused[#loc92, #loc93])
#loc280 = loc(fused[#loc94, #loc91])
#loc281 = loc(fused[#loc96, #loc97])
#loc282 = loc(fused[#loc99, #loc100])
#loc283 = loc(fused[#loc101, #loc102])
#loc284 = loc(fused[#loc105, #loc103])
#loc285 = loc(fused[#loc109, #loc106])
#loc286 = loc(fused[#loc113, #loc114])
#loc287 = loc(fused[#loc115, #loc116])
#loc288 = loc(fused[#loc118, #loc119])
#loc289 = loc(fused[#loc120, #loc121])
#loc290 = loc(fused[#loc122, #loc123])
#loc291 = loc(fused[#loc124, #loc116])
#loc292 = loc(fused[#loc126, #loc127])
#loc293 = loc(fused[#loc130, #loc131])
#loc294 = loc(fused[#loc132, #loc127])
#loc295 = loc(fused[#loc138, #loc139])
#loc296 = loc(fused[#loc140, #loc141])
#loc297 = loc(fused[#loc142, #loc143])
#loc298 = loc(fused[#loc144, #loc141])
#loc299 = loc(fused[#loc148, #loc149])
#loc300 = loc(fused[#loc152, #loc153])
#loc301 = loc(fused[#loc154, #loc155])
#loc302 = loc(fused[#loc156, #loc157])
#loc303 = loc(fused[#loc159, #loc160])
#loc304 = loc(fused[#loc161, #loc155])
#loc305 = loc(fused[#loc165, #loc163])
#loc306 = loc(fused[#loc168, #loc169])
#loc307 = loc(fused[#loc170, #loc171])
#loc308 = loc(fused[#loc172, #loc173])
#loc309 = loc(fused[#loc174, #loc171])
#loc310 = loc(fused[#loc177, #loc178])
#loc311 = loc(fused[#loc179, #loc180])
#loc312 = loc(fused[#loc181, #loc178])
#loc313 = loc(fused[#loc186, #loc187])
#loc315 = loc(fused[#loc190, #loc191])
#loc316 = loc(fused[#loc190, #loc192])
#loc317 = loc(fused[#loc193, #loc194])
#loc318 = loc(fused[#loc196, #loc197])
#loc319 = loc(fused[#loc199, #loc200])
#loc320 = loc(fused[#loc198, #loc200])
#loc321 = loc(fused[#loc201, #loc200])
#loc322 = loc(fused[#loc204, #loc205])
#loc323 = loc(fused[#loc206, #loc205])
#loc324 = loc(fused[#loc207, #loc208])
#loc325 = loc(fused[#loc210, #loc209])
#loc326 = loc(fused[#loc211, #loc212])
#loc327 = loc(fused[#loc213, #loc208])
#loc328 = loc(fused[#loc215, #loc214])
#loc329 = loc(fused[#loc219, #loc218])
#loc330 = loc(fused[#loc225, #loc226])
#loc331 = loc(fused[#loc227, #loc228])
#loc332 = loc(fused[#loc231, #loc229])
#loc333 = loc(fused[#loc233, #loc232])
#loc334 = loc(fused[#loc236, #loc237])
