!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc1)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc88)
  cir.func private @wcscpy(!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc89)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc93)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc16)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc95)
    cir.br ^bb1 loc(#loc96)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc1)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc1)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc1)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc97)
    cir.br ^bb2 loc(#loc98)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc23)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc24)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc23)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc93)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc15)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc15)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc15)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc15)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc15)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    cir.store %18, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc94)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc25)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc25)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc26)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc26)
    %23 = cir.call @wcscpy(%20, %22) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc27)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc28)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.return loc(#loc9)
  } loc(#loc91)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc100)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc101)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc99)
  cir.func private @wcslen(!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc102)
  cir.func private @printWLine(!cir.ptr<!s32i>) loc(#loc103)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc52)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc52)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc52)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc110)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @wcslen : !cir.ptr<!cir.func<(!cir.ptr<!s32i>) -> !u64i>> loc(#loc56)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc57)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc57)
    %10 = cir.call @wcslen(%9) : (!cir.ptr<!s32i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc56)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc106)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc47)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc47)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc47)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc47)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc47)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc47)
    cir.store %18, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc107)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc58)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc58)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc59)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc59)
    %23 = cir.call @wcscpy(%20, %22) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc60)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc61)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc61)
    cir.call @printWLine(%25) : (!cir.ptr<!s32i>) -> () loc(#loc62)
    cir.return loc(#loc41)
  } loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc63)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc116)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc63)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc63)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc119)
    cir.br ^bb2 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc81)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc82)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc81)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc115)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc73)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc73)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc73)
    %17 = cir.binop(mul, %14, %16) : !u64i loc(#loc73)
    %18 = cir.alloca !u8i, !cir.ptr<!u8i>, %17 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
    cir.store %19, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc116)
    %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc83)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc84)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc85)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc86)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.return loc(#loc67)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":34:20)
#loc2 = loc("/usr/include/string.h":407:1)
#loc3 = loc("/usr/include/string.h":408:33)
#loc4 = loc("/usr/include/wchar.h":98:1)
#loc5 = loc("/usr/include/wchar.h":100:14)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":27:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":44:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":29:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":29:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:45)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":40:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":40:31)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":30:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":31:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":35:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":35:10)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:26)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:41)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":41:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":41:28)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":41:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":42:27)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":42:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":90:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":94:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":92:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":92:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":93:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":93:13)
#loc36 = loc("/usr/include/wchar.h":247:1)
#loc37 = loc("/usr/include/wchar.h":247:51)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":16:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":16:37)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":51:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":68:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":53:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":53:12)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:48)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":64:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":64:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":54:12)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":54:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":55:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":55:10)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":58:20)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":58:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":59:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":59:10)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:26)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:44)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":65:22)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":65:28)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":65:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":66:31)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":66:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":78:20)
#loc64 = loc("/usr/include/string.h":141:1)
#loc65 = loc("/usr/include/string.h":142:14)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":71:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":88:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":73:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":73:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:45)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":84:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":84:31)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":74:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":74:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":75:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":75:10)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":78:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":79:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":79:10)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:41)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":85:15)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":85:22)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":85:28)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":86:27)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":86:9)
#loc88 = loc(fused[#loc2, #loc3])
#loc89 = loc(fused[#loc4, #loc5])
#loc90 = loc(fused[#loc6, #loc7])
#loc91 = loc(fused[#loc8, #loc9])
#loc92 = loc(fused[#loc10, #loc11])
#loc93 = loc(fused[#loc12, #loc13])
#loc94 = loc(fused[#loc14, #loc15])
#loc95 = loc(fused[#loc17, #loc16])
#loc96 = loc(fused[#loc18, #loc19])
#loc97 = loc(fused[#loc20, #loc1])
#loc98 = loc(fused[#loc21, #loc22])
#loc99 = loc(fused[#loc30, #loc31])
#loc100 = loc(fused[#loc32, #loc33])
#loc101 = loc(fused[#loc34, #loc35])
#loc102 = loc(fused[#loc36, #loc37])
#loc103 = loc(fused[#loc38, #loc39])
#loc104 = loc(fused[#loc40, #loc41])
#loc105 = loc(fused[#loc42, #loc43])
#loc106 = loc(fused[#loc44, #loc45])
#loc107 = loc(fused[#loc46, #loc47])
#loc108 = loc(fused[#loc49, #loc48])
#loc109 = loc(fused[#loc50, #loc51])
#loc110 = loc(fused[#loc53, #loc52])
#loc111 = loc(fused[#loc54, #loc55])
#loc112 = loc(fused[#loc64, #loc65])
#loc113 = loc(fused[#loc66, #loc67])
#loc114 = loc(fused[#loc68, #loc69])
#loc115 = loc(fused[#loc70, #loc71])
#loc116 = loc(fused[#loc72, #loc73])
#loc117 = loc(fused[#loc75, #loc74])
#loc118 = loc(fused[#loc76, #loc77])
#loc119 = loc(fused[#loc78, #loc63])
#loc120 = loc(fused[#loc79, #loc80])
