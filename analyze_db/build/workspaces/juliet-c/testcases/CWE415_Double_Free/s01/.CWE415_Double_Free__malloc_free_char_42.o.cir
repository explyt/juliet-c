!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE415_Double_Free__malloc_free_char_42.c":24:25)
#loc8 = loc("CWE415_Double_Free__malloc_free_char_42.c":24:32)
#loc50 = loc("CWE415_Double_Free__malloc_free_char_42.c":67:29)
#loc51 = loc("CWE415_Double_Free__malloc_free_char_42.c":67:36)
#loc83 = loc("CWE415_Double_Free__malloc_free_char_42.c":48:29)
#loc84 = loc("CWE415_Double_Free__malloc_free_char_42.c":48:36)
#loc117 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc50, #loc51])
#loc149 = loc(fused[#loc83, #loc84])
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc115)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc10)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc119)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc123)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc21)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc23)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc124)
    } loc(#loc122)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc24)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc125)
  } loc(#loc116)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc126)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc34)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc37)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc40)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    cir.return loc(#loc31)
  } loc(#loc127)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc132)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc133)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc131)
  cir.func internal private @goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc50, #loc51])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc49)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc53)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc54)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc137)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc53)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc62)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc141)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc64)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc65)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc66)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc64)
      } loc(#loc142)
    } loc(#loc140)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc67)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc143)
  } loc(#loc134)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc78)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.return loc(#loc72)
  } loc(#loc144)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc83, #loc84])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc82)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc87)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc150)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc151)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
      %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc155)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc99)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
      } loc(#loc156)
    } loc(#loc154)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.return %10 : !cir.ptr<!s8i> loc(#loc157)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc106)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc109)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc112)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.return loc(#loc103)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE415_Double_Free__malloc_free_char_42.c":24:1)
#loc6 = loc("CWE415_Double_Free__malloc_free_char_42.c":31:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_char_42.c":25:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_char_42.c":26:20)
#loc11 = loc("CWE415_Double_Free__malloc_free_char_42.c":26:27)
#loc12 = loc("CWE415_Double_Free__malloc_free_char_42.c":26:31)
#loc13 = loc("CWE415_Double_Free__malloc_free_char_42.c":26:42)
#loc14 = loc("CWE415_Double_Free__malloc_free_char_42.c":26:43)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_42.c":26:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:33)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:9)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:17)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:23)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:24)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:30)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_42.c":27:29)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_42.c":29:5)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_42.c":29:10)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_42.c":30:12)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_42.c":30:5)
#loc28 = loc("/usr/include/stdlib.h":687:1)
#loc29 = loc("/usr/include/stdlib.h":687:32)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_42.c":33:1)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_42.c":41:1)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_42.c":35:5)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_42.c":35:12)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_42.c":37:12)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_42.c":37:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_char_42.c":38:22)
#loc37 = loc("CWE415_Double_Free__malloc_free_char_42.c":38:12)
#loc38 = loc("CWE415_Double_Free__malloc_free_char_42.c":38:5)
#loc39 = loc("CWE415_Double_Free__malloc_free_char_42.c":38:26)
#loc40 = loc("CWE415_Double_Free__malloc_free_char_42.c":40:5)
#loc41 = loc("CWE415_Double_Free__malloc_free_char_42.c":40:10)
#loc42 = loc("CWE415_Double_Free__malloc_free_char_42.c":87:1)
#loc43 = loc("CWE415_Double_Free__malloc_free_char_42.c":91:1)
#loc44 = loc("CWE415_Double_Free__malloc_free_char_42.c":89:5)
#loc45 = loc("CWE415_Double_Free__malloc_free_char_42.c":89:13)
#loc46 = loc("CWE415_Double_Free__malloc_free_char_42.c":90:5)
#loc47 = loc("CWE415_Double_Free__malloc_free_char_42.c":90:13)
#loc48 = loc("CWE415_Double_Free__malloc_free_char_42.c":67:1)
#loc49 = loc("CWE415_Double_Free__malloc_free_char_42.c":74:1)
#loc52 = loc("CWE415_Double_Free__malloc_free_char_42.c":68:1)
#loc53 = loc("CWE415_Double_Free__malloc_free_char_42.c":69:20)
#loc54 = loc("CWE415_Double_Free__malloc_free_char_42.c":69:27)
#loc55 = loc("CWE415_Double_Free__malloc_free_char_42.c":69:31)
#loc56 = loc("CWE415_Double_Free__malloc_free_char_42.c":69:42)
#loc57 = loc("CWE415_Double_Free__malloc_free_char_42.c":69:43)
#loc58 = loc("CWE415_Double_Free__malloc_free_char_42.c":69:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:33)
#loc61 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:9)
#loc62 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:17)
#loc63 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:23)
#loc64 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:24)
#loc65 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:30)
#loc66 = loc("CWE415_Double_Free__malloc_free_char_42.c":70:29)
#loc67 = loc("CWE415_Double_Free__malloc_free_char_42.c":72:5)
#loc68 = loc("CWE415_Double_Free__malloc_free_char_42.c":72:10)
#loc69 = loc("CWE415_Double_Free__malloc_free_char_42.c":73:12)
#loc70 = loc("CWE415_Double_Free__malloc_free_char_42.c":73:5)
#loc71 = loc("CWE415_Double_Free__malloc_free_char_42.c":76:1)
#loc72 = loc("CWE415_Double_Free__malloc_free_char_42.c":85:1)
#loc73 = loc("CWE415_Double_Free__malloc_free_char_42.c":78:5)
#loc74 = loc("CWE415_Double_Free__malloc_free_char_42.c":78:12)
#loc75 = loc("CWE415_Double_Free__malloc_free_char_42.c":80:12)
#loc76 = loc("CWE415_Double_Free__malloc_free_char_42.c":80:5)
#loc77 = loc("CWE415_Double_Free__malloc_free_char_42.c":81:26)
#loc78 = loc("CWE415_Double_Free__malloc_free_char_42.c":81:12)
#loc79 = loc("CWE415_Double_Free__malloc_free_char_42.c":81:5)
#loc80 = loc("CWE415_Double_Free__malloc_free_char_42.c":81:30)
#loc81 = loc("CWE415_Double_Free__malloc_free_char_42.c":48:1)
#loc82 = loc("CWE415_Double_Free__malloc_free_char_42.c":54:1)
#loc85 = loc("CWE415_Double_Free__malloc_free_char_42.c":49:1)
#loc86 = loc("CWE415_Double_Free__malloc_free_char_42.c":50:20)
#loc87 = loc("CWE415_Double_Free__malloc_free_char_42.c":50:27)
#loc88 = loc("CWE415_Double_Free__malloc_free_char_42.c":50:31)
#loc89 = loc("CWE415_Double_Free__malloc_free_char_42.c":50:42)
#loc90 = loc("CWE415_Double_Free__malloc_free_char_42.c":50:43)
#loc91 = loc("CWE415_Double_Free__malloc_free_char_42.c":50:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:5)
#loc93 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:33)
#loc94 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:9)
#loc95 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:17)
#loc96 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:23)
#loc97 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:24)
#loc98 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:30)
#loc99 = loc("CWE415_Double_Free__malloc_free_char_42.c":51:29)
#loc100 = loc("CWE415_Double_Free__malloc_free_char_42.c":53:12)
#loc101 = loc("CWE415_Double_Free__malloc_free_char_42.c":53:5)
#loc102 = loc("CWE415_Double_Free__malloc_free_char_42.c":56:1)
#loc103 = loc("CWE415_Double_Free__malloc_free_char_42.c":64:1)
#loc104 = loc("CWE415_Double_Free__malloc_free_char_42.c":58:5)
#loc105 = loc("CWE415_Double_Free__malloc_free_char_42.c":58:12)
#loc106 = loc("CWE415_Double_Free__malloc_free_char_42.c":60:12)
#loc107 = loc("CWE415_Double_Free__malloc_free_char_42.c":60:5)
#loc108 = loc("CWE415_Double_Free__malloc_free_char_42.c":61:26)
#loc109 = loc("CWE415_Double_Free__malloc_free_char_42.c":61:12)
#loc110 = loc("CWE415_Double_Free__malloc_free_char_42.c":61:5)
#loc111 = loc("CWE415_Double_Free__malloc_free_char_42.c":61:30)
#loc112 = loc("CWE415_Double_Free__malloc_free_char_42.c":63:5)
#loc113 = loc("CWE415_Double_Free__malloc_free_char_42.c":63:10)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc12, #loc13])
#loc119 = loc(fused[#loc11, #loc13])
#loc120 = loc(fused[#loc10, #loc14])
#loc121 = loc(fused[#loc15, #loc14])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc18, #loc19])
#loc124 = loc(fused[#loc20, #loc17])
#loc125 = loc(fused[#loc27, #loc26])
#loc126 = loc(fused[#loc28, #loc29])
#loc127 = loc(fused[#loc30, #loc31])
#loc128 = loc(fused[#loc32, #loc33])
#loc129 = loc(fused[#loc35, #loc34])
#loc130 = loc(fused[#loc38, #loc39])
#loc131 = loc(fused[#loc42, #loc43])
#loc132 = loc(fused[#loc44, #loc45])
#loc133 = loc(fused[#loc46, #loc47])
#loc134 = loc(fused[#loc48, #loc49])
#loc136 = loc(fused[#loc55, #loc56])
#loc137 = loc(fused[#loc54, #loc56])
#loc138 = loc(fused[#loc53, #loc57])
#loc139 = loc(fused[#loc58, #loc57])
#loc140 = loc(fused[#loc59, #loc60])
#loc141 = loc(fused[#loc61, #loc62])
#loc142 = loc(fused[#loc63, #loc60])
#loc143 = loc(fused[#loc70, #loc69])
#loc144 = loc(fused[#loc71, #loc72])
#loc145 = loc(fused[#loc73, #loc74])
#loc146 = loc(fused[#loc76, #loc75])
#loc147 = loc(fused[#loc79, #loc80])
#loc148 = loc(fused[#loc81, #loc82])
#loc150 = loc(fused[#loc88, #loc89])
#loc151 = loc(fused[#loc87, #loc89])
#loc152 = loc(fused[#loc86, #loc90])
#loc153 = loc(fused[#loc91, #loc90])
#loc154 = loc(fused[#loc92, #loc93])
#loc155 = loc(fused[#loc94, #loc95])
#loc156 = loc(fused[#loc96, #loc93])
#loc157 = loc(fused[#loc101, #loc100])
#loc158 = loc(fused[#loc102, #loc103])
#loc159 = loc(fused[#loc104, #loc105])
#loc160 = loc(fused[#loc107, #loc106])
#loc161 = loc(fused[#loc110, #loc111])
