!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc583)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc584)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc585)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc586)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc587)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc588)
  cir.func private @close(!s32i) -> !s32i loc(#loc589)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc590)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @printIntLine(!s32i) loc(#loc591)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc593)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc31)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc597)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc598)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc599)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc600)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc40)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc599)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc47)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc49)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc603)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc56)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc56)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc605)
                    cir.if %55 {
                      cir.break loc(#loc58)
                    } loc(#loc606)
                  } loc(#loc604)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc607)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc61)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc608)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc609)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc66)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc66)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc610)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc611)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc74)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc74)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc612)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc614)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc615)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc615)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc87)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc87)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc616)
                    cir.if %59 {
                      cir.break loc(#loc89)
                    } loc(#loc617)
                  } loc(#loc613)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc92)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc92)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc92)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc92)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc92)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc92)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc92)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc93)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc618)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc94)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc95)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc619)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc101)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc101)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc621)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc102)
                      cir.yield %57 : !cir.bool loc(#loc102)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc104)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc622)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc102)
                        cir.yield %61 : !cir.bool loc(#loc102)
                      }, false {
                        %61 = cir.const #false loc(#loc102)
                        cir.yield %61 : !cir.bool loc(#loc102)
                      }) : (!cir.bool) -> !cir.bool loc(#loc102)
                      cir.yield %60 : !cir.bool loc(#loc102)
                    }) : (!cir.bool) -> !cir.bool loc(#loc102)
                    cir.if %56 {
                      cir.break loc(#loc106)
                    } loc(#loc623)
                  } loc(#loc620)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc107)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc107)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc109)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc624)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc111)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc625)
                } loc(#loc602)
                cir.yield loc(#loc44)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc114)
                cir.condition(%11) loc(#loc114)
              } loc(#loc601)
            } loc(#loc601)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc118)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc627)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc121)
              } loc(#loc628)
            } loc(#loc626)
          } loc(#loc596)
          cir.break loc(#loc122)
        } loc(#loc32)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc124)
          cir.break loc(#loc125)
        } loc(#loc123)
        cir.yield loc(#loc29)
      } loc(#loc29)
    } loc(#loc595)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc128)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc631)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc632)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc632)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc632)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %8 = cir.const #cir.int<10> : !s32i loc(#loc139)
              %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc634)
              cir.if %9 {
                %10 = cir.const #cir.int<1> : !s32i loc(#loc143)
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc145)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc145)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc636)
                cir.scope {
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc148)
                  cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc638)
                  cir.for : cond {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                    %16 = cir.const #cir.int<10> : !s32i loc(#loc151)
                    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc639)
                    cir.condition(%17) loc(#loc152)
                  } body {
                    cir.scope {
                      %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                      %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc155)
                      %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc155)
                      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc156)
                    } loc(#loc640)
                    cir.yield loc(#loc147)
                  } step {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc158)
                    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc641)
                    cir.yield loc(#loc637)
                  } loc(#loc637)
                } loc(#loc637)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc21)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc21)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc159)
              } loc(#loc635)
            } loc(#loc633)
          } loc(#loc630)
          cir.break loc(#loc160)
        } loc(#loc129)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc161)
        cir.yield loc(#loc126)
      } loc(#loc126)
    } loc(#loc629)
    cir.return loc(#loc23)
  } loc(#loc592)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc643)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc167)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc644)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc169)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc645)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc171)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc646)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc173)
    cir.return loc(#loc166)
  } loc(#loc642)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc648)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc649)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc185)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc652)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc653)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc654)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc655)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc194)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc194)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc654)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc201)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc202)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc203)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc204)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc658)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc210)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc210)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc660)
                    cir.if %55 {
                      cir.break loc(#loc212)
                    } loc(#loc661)
                  } loc(#loc659)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc662)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc215)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc663)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc664)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc220)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc220)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc665)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc222)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc222)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc223)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc666)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc226)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc226)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc227)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc667)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc669)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc670)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc670)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc237)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc238)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc238)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc671)
                    cir.if %59 {
                      cir.break loc(#loc240)
                    } loc(#loc672)
                  } loc(#loc668)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc242)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc243)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc243)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc243)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc243)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc243)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc243)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc243)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc244)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc244)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc673)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc245)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc246)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc246)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc674)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc251)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc252)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc252)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc676)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc253)
                      cir.yield %57 : !cir.bool loc(#loc253)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc255)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc677)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc253)
                        cir.yield %61 : !cir.bool loc(#loc253)
                      }, false {
                        %61 = cir.const #false loc(#loc253)
                        cir.yield %61 : !cir.bool loc(#loc253)
                      }) : (!cir.bool) -> !cir.bool loc(#loc253)
                      cir.yield %60 : !cir.bool loc(#loc253)
                    }) : (!cir.bool) -> !cir.bool loc(#loc253)
                    cir.if %56 {
                      cir.break loc(#loc257)
                    } loc(#loc678)
                  } loc(#loc675)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc258)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc258)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc260)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc260)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc679)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc261)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc262)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc680)
                } loc(#loc657)
                cir.yield loc(#loc198)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc265)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc265)
                cir.condition(%11) loc(#loc265)
              } loc(#loc656)
            } loc(#loc656)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc269)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc269)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc682)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc272)
              } loc(#loc683)
            } loc(#loc681)
          } loc(#loc651)
          cir.break loc(#loc273)
        } loc(#loc186)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc275)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc275)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc276)
          cir.break loc(#loc277)
        } loc(#loc274)
        cir.yield loc(#loc183)
      } loc(#loc183)
    } loc(#loc650)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc280)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc282)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc282)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc283)
          cir.break loc(#loc284)
        } loc(#loc281)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc686)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc687)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc687)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc687)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
              %8 = cir.const #cir.int<0> : !s32i loc(#loc295)
              %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc689)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %12 = cir.const #cir.int<10> : !s32i loc(#loc298)
                %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc690)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc296)
                  cir.yield %15 : !cir.bool loc(#loc296)
                }, false {
                  %15 = cir.const #false loc(#loc296)
                  cir.yield %15 : !cir.bool loc(#loc296)
                }) : (!cir.bool) -> !cir.bool loc(#loc296)
                cir.yield %14 : !cir.bool loc(#loc296)
              }, false {
                %11 = cir.const #false loc(#loc296)
                cir.yield %11 : !cir.bool loc(#loc296)
              }) : (!cir.bool) -> !cir.bool loc(#loc296)
              cir.if %10 {
                %11 = cir.const #cir.int<1> : !s32i loc(#loc303)
                %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc305)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc305)
                cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc692)
                cir.scope {
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc308)
                  cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc694)
                  cir.for : cond {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                    %17 = cir.const #cir.int<10> : !s32i loc(#loc311)
                    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc695)
                    cir.condition(%18) loc(#loc312)
                  } body {
                    cir.scope {
                      %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                      %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc315)
                      %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc315)
                      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc316)
                    } loc(#loc696)
                    cir.yield loc(#loc307)
                  } step {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc317)
                    %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc318)
                    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc697)
                    cir.yield loc(#loc693)
                  } loc(#loc693)
                } loc(#loc693)
              } else {
                %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc175)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc175)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc319)
              } loc(#loc691)
            } loc(#loc688)
          } loc(#loc685)
          cir.break loc(#loc320)
        } loc(#loc285)
        cir.yield loc(#loc278)
      } loc(#loc278)
    } loc(#loc684)
    cir.return loc(#loc177)
  } loc(#loc647)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc699)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc325)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc326)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc700)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc330)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc703)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc704)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc705)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc706)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc339)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc339)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc705)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc346)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc347)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc348)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc349)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc709)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc354)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc355)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc355)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc711)
                    cir.if %55 {
                      cir.break loc(#loc357)
                    } loc(#loc712)
                  } loc(#loc710)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc713)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc360)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc714)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc715)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc365)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc365)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc716)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc367)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc367)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc368)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc717)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc371)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc371)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc372)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc718)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc377)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc720)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc721)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc721)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc382)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc383)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc383)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc722)
                    cir.if %59 {
                      cir.break loc(#loc385)
                    } loc(#loc723)
                  } loc(#loc719)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc386)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc387)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc387)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc388)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc388)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc388)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc388)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc388)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc388)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc388)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc389)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc389)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc724)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc390)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc391)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc391)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc725)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc396)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc397)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc397)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc727)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc398)
                      cir.yield %57 : !cir.bool loc(#loc398)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc399)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc400)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc728)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc398)
                        cir.yield %61 : !cir.bool loc(#loc398)
                      }, false {
                        %61 = cir.const #false loc(#loc398)
                        cir.yield %61 : !cir.bool loc(#loc398)
                      }) : (!cir.bool) -> !cir.bool loc(#loc398)
                      cir.yield %60 : !cir.bool loc(#loc398)
                    }) : (!cir.bool) -> !cir.bool loc(#loc398)
                    cir.if %56 {
                      cir.break loc(#loc402)
                    } loc(#loc729)
                  } loc(#loc726)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc403)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc403)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc404)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc405)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc405)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc730)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc406)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc407)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc731)
                } loc(#loc708)
                cir.yield loc(#loc343)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc410)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc410)
                cir.condition(%11) loc(#loc410)
              } loc(#loc707)
            } loc(#loc707)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc413)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc414)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc414)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc733)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc416)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc417)
              } loc(#loc734)
            } loc(#loc732)
          } loc(#loc702)
          cir.break loc(#loc418)
        } loc(#loc331)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc420)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc420)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc421)
          cir.break loc(#loc422)
        } loc(#loc419)
        cir.yield loc(#loc328)
      } loc(#loc328)
    } loc(#loc701)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc425)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc737)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc738)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc738)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc738)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc435)
              %8 = cir.const #cir.int<0> : !s32i loc(#loc436)
              %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc740)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc438)
                %12 = cir.const #cir.int<10> : !s32i loc(#loc439)
                %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc741)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc437)
                  cir.yield %15 : !cir.bool loc(#loc437)
                }, false {
                  %15 = cir.const #false loc(#loc437)
                  cir.yield %15 : !cir.bool loc(#loc437)
                }) : (!cir.bool) -> !cir.bool loc(#loc437)
                cir.yield %14 : !cir.bool loc(#loc437)
              }, false {
                %11 = cir.const #false loc(#loc437)
                cir.yield %11 : !cir.bool loc(#loc437)
              }) : (!cir.bool) -> !cir.bool loc(#loc437)
              cir.if %10 {
                %11 = cir.const #cir.int<1> : !s32i loc(#loc444)
                %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc446)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc446)
                cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc743)
                cir.scope {
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc449)
                  cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc745)
                  cir.for : cond {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc451)
                    %17 = cir.const #cir.int<10> : !s32i loc(#loc452)
                    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc746)
                    cir.condition(%18) loc(#loc453)
                  } body {
                    cir.scope {
                      %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                      %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc456)
                      %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc456)
                      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc457)
                    } loc(#loc747)
                    cir.yield loc(#loc448)
                  } step {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc458)
                    %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc459)
                    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc748)
                    cir.yield loc(#loc744)
                  } loc(#loc744)
                } loc(#loc744)
              } else {
                %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc460)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc460)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc461)
              } loc(#loc742)
            } loc(#loc739)
          } loc(#loc736)
          cir.break loc(#loc462)
        } loc(#loc426)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc464)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc464)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc465)
          cir.break loc(#loc466)
        } loc(#loc463)
        cir.yield loc(#loc423)
      } loc(#loc423)
    } loc(#loc735)
    cir.return loc(#loc322)
  } loc(#loc698)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc750)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc471)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc472)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc751)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc476)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc478)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc478)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc479)
          cir.break loc(#loc480)
        } loc(#loc477)
        cir.case(default, []) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc482)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc753)
          cir.break loc(#loc484)
        } loc(#loc481)
        cir.yield loc(#loc474)
      } loc(#loc474)
    } loc(#loc752)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc487)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc756)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc757)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc757)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc757)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc497)
              %8 = cir.const #cir.int<10> : !s32i loc(#loc498)
              %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc759)
              cir.if %9 {
                %10 = cir.const #cir.int<1> : !s32i loc(#loc502)
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc503)
                %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc504)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc504)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc761)
                cir.scope {
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc507)
                  cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc763)
                  cir.for : cond {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc509)
                    %16 = cir.const #cir.int<10> : !s32i loc(#loc510)
                    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc764)
                    cir.condition(%17) loc(#loc511)
                  } body {
                    cir.scope {
                      %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc513)
                      %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc514)
                      %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc514)
                      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc514)
                      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc515)
                    } loc(#loc765)
                    cir.yield loc(#loc506)
                  } step {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc516)
                    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc517)
                    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc766)
                    cir.yield loc(#loc762)
                  } loc(#loc762)
                } loc(#loc762)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc518)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc518)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc519)
              } loc(#loc760)
            } loc(#loc758)
          } loc(#loc755)
          cir.break loc(#loc520)
        } loc(#loc488)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc522)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc522)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc523)
          cir.break loc(#loc524)
        } loc(#loc521)
        cir.yield loc(#loc485)
      } loc(#loc485)
    } loc(#loc754)
    cir.return loc(#loc468)
  } loc(#loc749)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc768)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc529)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc530)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc769)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc534)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc536)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc771)
          cir.break loc(#loc538)
        } loc(#loc535)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc540)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc540)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc541)
          cir.break loc(#loc542)
        } loc(#loc539)
        cir.yield loc(#loc532)
      } loc(#loc532)
    } loc(#loc770)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc545)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc774)
            %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc775)
            %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc775)
            cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc775)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc555)
              %8 = cir.const #cir.int<10> : !s32i loc(#loc556)
              %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc777)
              cir.if %9 {
                %10 = cir.const #cir.int<1> : !s32i loc(#loc560)
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc561)
                %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc562)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc562)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc779)
                cir.scope {
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc565)
                  cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc781)
                  cir.for : cond {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc567)
                    %16 = cir.const #cir.int<10> : !s32i loc(#loc568)
                    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc782)
                    cir.condition(%17) loc(#loc569)
                  } body {
                    cir.scope {
                      %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc571)
                      %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc572)
                      %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc572)
                      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc572)
                      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc573)
                    } loc(#loc783)
                    cir.yield loc(#loc564)
                  } step {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc574)
                    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc575)
                    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc784)
                    cir.yield loc(#loc780)
                  } loc(#loc780)
                } loc(#loc780)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc576)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc576)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc577)
              } loc(#loc778)
            } loc(#loc776)
          } loc(#loc773)
          cir.break loc(#loc578)
        } loc(#loc546)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc580)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc580)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc581)
          cir.break loc(#loc582)
        } loc(#loc579)
        cir.yield loc(#loc543)
      } loc(#loc543)
    } loc(#loc772)
    cir.return loc(#loc526)
  } loc(#loc767)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":111:19)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":133:23)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":44:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":142:1)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":46:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":46:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":48:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":48:12)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":48:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":49:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":113:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":49:12)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":51:5)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":52:5)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":107:5)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":57:9)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":57:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":58:9)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":58:28)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":59:9)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":59:32)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":60:9)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":60:41)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":61:9)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":96:17)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":62:9)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":95:9)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":71:36)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":71:45)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":71:58)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":71:29)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":71:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":71:69)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":72:13)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":75:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":72:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":72:34)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":73:13)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":74:17)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":76:20)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":76:21)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":76:30)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":76:33)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":76:47)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":76:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":76:48)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":77:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":77:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":78:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":78:13)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":78:59)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":79:38)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":79:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":79:13)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":79:46)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:13)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":83:13)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:25)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:58)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:59)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:68)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:82)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:17)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":80:88)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":81:13)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":82:17)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:31)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:46)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:59)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:77)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:80)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:26)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:13)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":86:81)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":87:13)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":90:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":87:17)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":87:31)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":87:44)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":87:47)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":87:61)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":88:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":89:17)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":92:39)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":92:25)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":92:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":94:25)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":94:20)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":94:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":94:36)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":96:16)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":97:9)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":100:9)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":97:13)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":97:30)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":98:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":99:26)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":99:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":108:5)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":109:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":111:9)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":112:9)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":114:5)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":141:5)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":114:12)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":116:5)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":117:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":135:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":118:9)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":118:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":119:9)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":119:30)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":122:9)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":134:9)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":122:13)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":122:20)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":123:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":130:9)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":132:9)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":124:28)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":124:20)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":124:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:13)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":129:13)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:21)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:17)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:24)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:28)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:26)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":127:13)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":128:37)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":128:30)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":128:17)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:33)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":126:32)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":133:13)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":136:5)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":137:5)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":139:19)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":139:9)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":140:9)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":444:1)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":450:1)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":446:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":446:14)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":447:5)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":447:14)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":448:5)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":448:14)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":449:5)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":449:14)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":241:23)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":149:1)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":246:1)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":151:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":151:9)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":153:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":153:12)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":153:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":154:5)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":218:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":154:12)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":156:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":157:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":212:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":162:9)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":162:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":163:9)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":163:28)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":164:9)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":164:32)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":165:9)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":165:41)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":166:9)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":201:17)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":167:9)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":200:9)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":176:36)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":176:45)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":176:58)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":176:29)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":176:13)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":176:69)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":177:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":180:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":177:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":177:34)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":178:13)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":179:17)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":181:20)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":181:21)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":181:30)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":181:33)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":181:47)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":181:13)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":181:48)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":182:34)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":182:13)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":183:49)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":183:39)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":183:13)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":183:59)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":184:38)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":184:32)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":184:13)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":184:46)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:13)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":188:13)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:25)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:58)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:59)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:68)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:82)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:17)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":185:88)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":186:13)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":187:17)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:31)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:46)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:59)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:77)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:80)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:26)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:13)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":191:81)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":192:13)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":195:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":192:17)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":192:31)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":192:44)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":192:47)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":192:61)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":193:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":194:17)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":197:39)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":197:25)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":197:13)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":199:25)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":199:20)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":199:13)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":199:36)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":201:16)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":202:9)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":205:9)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":202:13)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":202:30)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":203:9)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":204:26)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":204:13)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":213:5)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":214:5)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":216:19)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":216:9)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":217:9)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":219:5)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":245:5)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":219:12)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":221:5)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":223:19)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":223:9)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":224:9)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":225:5)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":226:5)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":243:5)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":227:9)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":227:13)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":228:9)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":228:30)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":230:9)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":242:9)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":230:13)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":230:21)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":230:23)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":230:26)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":230:34)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":230:36)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":231:9)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":238:9)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":240:9)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":232:28)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":232:20)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":232:13)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:13)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":237:13)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:21)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:17)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:24)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:28)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:26)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":235:13)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":236:37)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":236:30)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":236:17)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:33)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":234:32)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":241:13)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":244:5)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":249:1)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":346:1)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":251:5)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":251:9)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":253:13)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":253:12)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":253:5)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":254:5)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":318:5)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":254:12)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":256:5)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":257:5)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":312:5)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":262:9)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":262:13)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":263:9)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":263:28)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":264:9)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":264:32)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":265:9)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":265:41)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":266:9)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":301:17)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":267:9)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":300:9)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":276:36)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":276:45)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":276:58)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":276:29)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":276:13)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":276:69)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":277:13)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":280:13)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":277:17)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":277:34)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":278:13)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":279:17)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":281:20)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":281:21)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":281:30)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":281:33)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":281:47)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":281:13)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":281:48)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":282:34)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":282:13)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":283:49)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":283:39)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":283:13)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":283:59)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":284:38)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":284:32)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":284:13)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":284:46)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:13)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":288:13)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:25)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:58)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:59)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:68)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:82)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:17)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":285:88)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":286:13)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":287:17)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:31)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:46)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:59)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:77)
#loc390 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:80)
#loc391 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:26)
#loc392 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:13)
#loc393 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":291:81)
#loc394 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":292:13)
#loc395 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":295:13)
#loc396 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":292:17)
#loc397 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":292:31)
#loc398 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":292:44)
#loc399 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":292:47)
#loc400 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":292:61)
#loc401 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":293:13)
#loc402 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":294:17)
#loc403 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":297:39)
#loc404 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":297:25)
#loc405 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":297:13)
#loc406 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":299:25)
#loc407 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":299:20)
#loc408 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":299:13)
#loc409 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":299:36)
#loc410 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":301:16)
#loc411 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":302:9)
#loc412 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":305:9)
#loc413 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":302:13)
#loc414 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":302:30)
#loc415 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":303:9)
#loc416 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":304:26)
#loc417 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":304:13)
#loc418 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":313:5)
#loc419 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":314:5)
#loc420 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":316:19)
#loc421 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":316:9)
#loc422 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":317:9)
#loc423 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":319:5)
#loc424 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":345:5)
#loc425 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":319:12)
#loc426 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":321:5)
#loc427 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":322:5)
#loc428 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":339:5)
#loc429 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":323:9)
#loc430 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":323:13)
#loc431 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":324:9)
#loc432 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":324:30)
#loc433 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":326:9)
#loc434 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":338:9)
#loc435 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":326:13)
#loc436 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":326:21)
#loc437 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":326:23)
#loc438 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":326:26)
#loc439 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":326:34)
#loc440 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":326:36)
#loc441 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":327:9)
#loc442 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":334:9)
#loc443 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":336:9)
#loc444 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":328:28)
#loc445 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":328:20)
#loc446 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":328:13)
#loc447 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:13)
#loc448 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":333:13)
#loc449 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:21)
#loc450 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:17)
#loc451 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:24)
#loc452 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:28)
#loc453 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:26)
#loc454 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":331:13)
#loc455 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":332:37)
#loc456 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":332:30)
#loc457 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":332:17)
#loc458 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:33)
#loc459 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":330:32)
#loc460 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":337:23)
#loc461 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":337:13)
#loc462 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":340:5)
#loc463 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":341:5)
#loc464 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":343:19)
#loc465 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":343:9)
#loc466 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":344:9)
#loc467 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":349:1)
#loc468 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":394:1)
#loc469 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":351:5)
#loc470 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":351:9)
#loc471 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":353:13)
#loc472 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":353:12)
#loc473 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":353:5)
#loc474 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":354:5)
#loc475 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":365:5)
#loc476 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":354:12)
#loc477 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":356:5)
#loc478 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":358:19)
#loc479 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":358:9)
#loc480 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":359:9)
#loc481 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":360:5)
#loc482 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":363:16)
#loc483 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":363:9)
#loc484 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":364:9)
#loc485 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":366:5)
#loc486 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":393:5)
#loc487 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":366:12)
#loc488 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":368:5)
#loc489 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":369:5)
#loc490 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":387:5)
#loc491 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":370:9)
#loc492 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":370:13)
#loc493 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":371:9)
#loc494 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":371:30)
#loc495 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":374:9)
#loc496 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":386:9)
#loc497 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":374:13)
#loc498 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":374:20)
#loc499 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":375:9)
#loc500 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":382:9)
#loc501 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":384:9)
#loc502 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":376:28)
#loc503 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":376:20)
#loc504 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":376:13)
#loc505 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:13)
#loc506 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":381:13)
#loc507 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:21)
#loc508 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:17)
#loc509 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:24)
#loc510 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:28)
#loc511 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:26)
#loc512 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":379:13)
#loc513 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":380:37)
#loc514 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":380:30)
#loc515 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":380:17)
#loc516 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:33)
#loc517 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":378:32)
#loc518 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":385:23)
#loc519 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":385:13)
#loc520 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":388:5)
#loc521 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":389:5)
#loc522 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":391:19)
#loc523 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":391:9)
#loc524 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":392:9)
#loc525 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":397:1)
#loc526 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":442:1)
#loc527 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":399:5)
#loc528 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":399:9)
#loc529 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":401:13)
#loc530 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":401:12)
#loc531 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":401:5)
#loc532 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":402:5)
#loc533 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":413:5)
#loc534 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":402:12)
#loc535 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":404:5)
#loc536 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":407:16)
#loc537 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":407:9)
#loc538 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":408:9)
#loc539 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":409:5)
#loc540 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":411:19)
#loc541 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":411:9)
#loc542 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":412:9)
#loc543 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":414:5)
#loc544 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":441:5)
#loc545 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":414:12)
#loc546 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":416:5)
#loc547 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":417:5)
#loc548 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":435:5)
#loc549 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":418:9)
#loc550 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":418:13)
#loc551 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":419:9)
#loc552 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":419:30)
#loc553 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":422:9)
#loc554 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":434:9)
#loc555 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":422:13)
#loc556 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":422:20)
#loc557 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":423:9)
#loc558 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":430:9)
#loc559 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":432:9)
#loc560 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":424:28)
#loc561 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":424:20)
#loc562 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":424:13)
#loc563 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:13)
#loc564 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":429:13)
#loc565 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:21)
#loc566 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:17)
#loc567 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:24)
#loc568 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:28)
#loc569 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:26)
#loc570 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":427:13)
#loc571 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":428:37)
#loc572 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":428:30)
#loc573 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":428:17)
#loc574 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:33)
#loc575 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":426:32)
#loc576 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":433:23)
#loc577 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":433:13)
#loc578 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":436:5)
#loc579 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":437:5)
#loc580 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":439:19)
#loc581 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":439:9)
#loc582 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_15.c":440:9)
#loc583 = loc(fused[#loc1, #loc2])
#loc584 = loc(fused[#loc3, #loc4])
#loc585 = loc(fused[#loc6, #loc7])
#loc586 = loc(fused[#loc8, #loc9])
#loc587 = loc(fused[#loc10, #loc11])
#loc588 = loc(fused[#loc12, #loc13])
#loc589 = loc(fused[#loc14, #loc15])
#loc590 = loc(fused[#loc16, #loc17])
#loc591 = loc(fused[#loc19, #loc20])
#loc592 = loc(fused[#loc22, #loc23])
#loc593 = loc(fused[#loc24, #loc25])
#loc594 = loc(fused[#loc28, #loc26])
#loc595 = loc(fused[#loc29, #loc30])
#loc596 = loc(fused[#loc33, #loc34])
#loc597 = loc(fused[#loc35, #loc36])
#loc598 = loc(fused[#loc37, #loc38])
#loc599 = loc(fused[#loc39, #loc40])
#loc600 = loc(fused[#loc41, #loc42])
#loc601 = loc(fused[#loc43, #loc44])
#loc602 = loc(fused[#loc45, #loc46])
#loc603 = loc(fused[#loc51, #loc52])
#loc604 = loc(fused[#loc53, #loc54])
#loc605 = loc(fused[#loc55, #loc56])
#loc606 = loc(fused[#loc57, #loc54])
#loc607 = loc(fused[#loc59, #loc60])
#loc608 = loc(fused[#loc62, #loc63])
#loc609 = loc(fused[#loc64, #loc65])
#loc610 = loc(fused[#loc68, #loc66])
#loc611 = loc(fused[#loc72, #loc73])
#loc612 = loc(fused[#loc77, #loc78])
#loc613 = loc(fused[#loc79, #loc80])
#loc614 = loc(fused[#loc82, #loc83])
#loc615 = loc(fused[#loc84, #loc85])
#loc616 = loc(fused[#loc86, #loc87])
#loc617 = loc(fused[#loc88, #loc80])
#loc618 = loc(fused[#loc92, #loc93])
#loc619 = loc(fused[#loc96, #loc97])
#loc620 = loc(fused[#loc98, #loc99])
#loc621 = loc(fused[#loc100, #loc101])
#loc622 = loc(fused[#loc103, #loc104])
#loc623 = loc(fused[#loc105, #loc99])
#loc624 = loc(fused[#loc109, #loc107])
#loc625 = loc(fused[#loc112, #loc113])
#loc626 = loc(fused[#loc115, #loc116])
#loc627 = loc(fused[#loc117, #loc118])
#loc628 = loc(fused[#loc119, #loc116])
#loc629 = loc(fused[#loc126, #loc127])
#loc630 = loc(fused[#loc130, #loc131])
#loc631 = loc(fused[#loc132, #loc133])
#loc632 = loc(fused[#loc134, #loc135])
#loc633 = loc(fused[#loc136, #loc137])
#loc634 = loc(fused[#loc138, #loc139])
#loc635 = loc(fused[#loc140, #loc141, #loc142, #loc137])
#loc636 = loc(fused[#loc145, #loc143])
#loc637 = loc(fused[#loc146, #loc147])
#loc638 = loc(fused[#loc149, #loc148])
#loc639 = loc(fused[#loc150, #loc151])
#loc640 = loc(fused[#loc153, #loc147])
#loc641 = loc(fused[#loc158, #loc157])
#loc642 = loc(fused[#loc165, #loc166])
#loc643 = loc(fused[#loc167, #loc168])
#loc644 = loc(fused[#loc169, #loc170])
#loc645 = loc(fused[#loc171, #loc172])
#loc646 = loc(fused[#loc173, #loc174])
#loc647 = loc(fused[#loc176, #loc177])
#loc648 = loc(fused[#loc178, #loc179])
#loc649 = loc(fused[#loc182, #loc180])
#loc650 = loc(fused[#loc183, #loc184])
#loc651 = loc(fused[#loc187, #loc188])
#loc652 = loc(fused[#loc189, #loc190])
#loc653 = loc(fused[#loc191, #loc192])
#loc654 = loc(fused[#loc193, #loc194])
#loc655 = loc(fused[#loc195, #loc196])
#loc656 = loc(fused[#loc197, #loc198])
#loc657 = loc(fused[#loc199, #loc200])
#loc658 = loc(fused[#loc205, #loc206])
#loc659 = loc(fused[#loc207, #loc208])
#loc660 = loc(fused[#loc209, #loc210])
#loc661 = loc(fused[#loc211, #loc208])
#loc662 = loc(fused[#loc213, #loc214])
#loc663 = loc(fused[#loc216, #loc217])
#loc664 = loc(fused[#loc218, #loc219])
#loc665 = loc(fused[#loc221, #loc220])
#loc666 = loc(fused[#loc224, #loc225])
#loc667 = loc(fused[#loc228, #loc229])
#loc668 = loc(fused[#loc230, #loc231])
#loc669 = loc(fused[#loc233, #loc234])
#loc670 = loc(fused[#loc235, #loc236])
#loc671 = loc(fused[#loc237, #loc238])
#loc672 = loc(fused[#loc239, #loc231])
#loc673 = loc(fused[#loc243, #loc244])
#loc674 = loc(fused[#loc247, #loc248])
#loc675 = loc(fused[#loc249, #loc250])
#loc676 = loc(fused[#loc251, #loc252])
#loc677 = loc(fused[#loc254, #loc255])
#loc678 = loc(fused[#loc256, #loc250])
#loc679 = loc(fused[#loc260, #loc258])
#loc680 = loc(fused[#loc263, #loc264])
#loc681 = loc(fused[#loc266, #loc267])
#loc682 = loc(fused[#loc268, #loc269])
#loc683 = loc(fused[#loc270, #loc267])
#loc684 = loc(fused[#loc278, #loc279])
#loc685 = loc(fused[#loc286, #loc287])
#loc686 = loc(fused[#loc288, #loc289])
#loc687 = loc(fused[#loc290, #loc291])
#loc688 = loc(fused[#loc292, #loc293])
#loc689 = loc(fused[#loc294, #loc295])
#loc690 = loc(fused[#loc297, #loc299])
#loc691 = loc(fused[#loc300, #loc301, #loc302, #loc293])
#loc692 = loc(fused[#loc305, #loc303])
#loc693 = loc(fused[#loc306, #loc307])
#loc694 = loc(fused[#loc309, #loc308])
#loc695 = loc(fused[#loc310, #loc311])
#loc696 = loc(fused[#loc313, #loc307])
#loc697 = loc(fused[#loc318, #loc317])
#loc698 = loc(fused[#loc321, #loc322])
#loc699 = loc(fused[#loc323, #loc324])
#loc700 = loc(fused[#loc327, #loc325])
#loc701 = loc(fused[#loc328, #loc329])
#loc702 = loc(fused[#loc332, #loc333])
#loc703 = loc(fused[#loc334, #loc335])
#loc704 = loc(fused[#loc336, #loc337])
#loc705 = loc(fused[#loc338, #loc339])
#loc706 = loc(fused[#loc340, #loc341])
#loc707 = loc(fused[#loc342, #loc343])
#loc708 = loc(fused[#loc344, #loc345])
#loc709 = loc(fused[#loc350, #loc351])
#loc710 = loc(fused[#loc352, #loc353])
#loc711 = loc(fused[#loc354, #loc355])
#loc712 = loc(fused[#loc356, #loc353])
#loc713 = loc(fused[#loc358, #loc359])
#loc714 = loc(fused[#loc361, #loc362])
#loc715 = loc(fused[#loc363, #loc364])
#loc716 = loc(fused[#loc366, #loc365])
#loc717 = loc(fused[#loc369, #loc370])
#loc718 = loc(fused[#loc373, #loc374])
#loc719 = loc(fused[#loc375, #loc376])
#loc720 = loc(fused[#loc378, #loc379])
#loc721 = loc(fused[#loc380, #loc381])
#loc722 = loc(fused[#loc382, #loc383])
#loc723 = loc(fused[#loc384, #loc376])
#loc724 = loc(fused[#loc388, #loc389])
#loc725 = loc(fused[#loc392, #loc393])
#loc726 = loc(fused[#loc394, #loc395])
#loc727 = loc(fused[#loc396, #loc397])
#loc728 = loc(fused[#loc399, #loc400])
#loc729 = loc(fused[#loc401, #loc395])
#loc730 = loc(fused[#loc405, #loc403])
#loc731 = loc(fused[#loc408, #loc409])
#loc732 = loc(fused[#loc411, #loc412])
#loc733 = loc(fused[#loc413, #loc414])
#loc734 = loc(fused[#loc415, #loc412])
#loc735 = loc(fused[#loc423, #loc424])
#loc736 = loc(fused[#loc427, #loc428])
#loc737 = loc(fused[#loc429, #loc430])
#loc738 = loc(fused[#loc431, #loc432])
#loc739 = loc(fused[#loc433, #loc434])
#loc740 = loc(fused[#loc435, #loc436])
#loc741 = loc(fused[#loc438, #loc440])
#loc742 = loc(fused[#loc441, #loc442, #loc443, #loc434])
#loc743 = loc(fused[#loc446, #loc444])
#loc744 = loc(fused[#loc447, #loc448])
#loc745 = loc(fused[#loc450, #loc449])
#loc746 = loc(fused[#loc451, #loc452])
#loc747 = loc(fused[#loc454, #loc448])
#loc748 = loc(fused[#loc459, #loc458])
#loc749 = loc(fused[#loc467, #loc468])
#loc750 = loc(fused[#loc469, #loc470])
#loc751 = loc(fused[#loc473, #loc471])
#loc752 = loc(fused[#loc474, #loc475])
#loc753 = loc(fused[#loc483, #loc482])
#loc754 = loc(fused[#loc485, #loc486])
#loc755 = loc(fused[#loc489, #loc490])
#loc756 = loc(fused[#loc491, #loc492])
#loc757 = loc(fused[#loc493, #loc494])
#loc758 = loc(fused[#loc495, #loc496])
#loc759 = loc(fused[#loc497, #loc498])
#loc760 = loc(fused[#loc499, #loc500, #loc501, #loc496])
#loc761 = loc(fused[#loc504, #loc502])
#loc762 = loc(fused[#loc505, #loc506])
#loc763 = loc(fused[#loc508, #loc507])
#loc764 = loc(fused[#loc509, #loc510])
#loc765 = loc(fused[#loc512, #loc506])
#loc766 = loc(fused[#loc517, #loc516])
#loc767 = loc(fused[#loc525, #loc526])
#loc768 = loc(fused[#loc527, #loc528])
#loc769 = loc(fused[#loc531, #loc529])
#loc770 = loc(fused[#loc532, #loc533])
#loc771 = loc(fused[#loc537, #loc536])
#loc772 = loc(fused[#loc543, #loc544])
#loc773 = loc(fused[#loc547, #loc548])
#loc774 = loc(fused[#loc549, #loc550])
#loc775 = loc(fused[#loc551, #loc552])
#loc776 = loc(fused[#loc553, #loc554])
#loc777 = loc(fused[#loc555, #loc556])
#loc778 = loc(fused[#loc557, #loc558, #loc559, #loc554])
#loc779 = loc(fused[#loc562, #loc560])
#loc780 = loc(fused[#loc563, #loc564])
#loc781 = loc(fused[#loc566, #loc565])
#loc782 = loc(fused[#loc567, #loc568])
#loc783 = loc(fused[#loc570, #loc564])
#loc784 = loc(fused[#loc575, #loc574])
