!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":21:64)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":21:71)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":47:68)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":47:75)
#loc100 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc54, #loc55])
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc98)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_malloc_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc102)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc17)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc14)
    cir.store %4, %1 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc101)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc18)
    %6 = cir.load %5 : !cir.ptr<!s16i>, !s16i loc(#loc19)
    cir.store %6, %2 : !s16i, !cir.ptr<!s16i> loc(#loc102)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc22)
      %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc22)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc104)
      cir.if %10 {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc106)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc27)
        %13 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc28)
        %14 = cir.cast(integral, %13 : !s16i), !u64i loc(#loc28)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
        cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
        cir.scope {
          %37 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
          %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc109)
          cir.if %40 {
            %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc36)
            cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
          } loc(#loc110)
        } loc(#loc108)
        %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc38)
        %20 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc39)
        %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc39)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc39)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc39)
        cir.libc.memset %24 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc111)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc43)
        %27 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %28 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc45)
        %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc45)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc45)
        %32 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc47)
        cir.store %26, %32 : !s8i, !cir.ptr<!s8i> loc(#loc112)
        %33 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc49)
        %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc50)
        %35 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
        cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
      } loc(#loc105)
    } loc(#loc103)
    cir.return loc(#loc10)
  } loc(#loc99)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_malloc_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc54, #loc55])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc116)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc60)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc57)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc57)
    cir.store %4, %1 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc115)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc61)
    %6 = cir.load %5 : !cir.ptr<!s16i>, !s16i loc(#loc62)
    cir.store %6, %2 : !s16i, !cir.ptr<!s16i> loc(#loc116)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc65)
      %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc65)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc66)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc118)
      cir.if %10 {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc70)
        %13 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc71)
        %14 = cir.cast(integral, %13 : !s16i), !u64i loc(#loc71)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
        cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
        cir.scope {
          %37 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
          %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc123)
          cir.if %40 {
            %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc79)
            cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
          } loc(#loc124)
        } loc(#loc122)
        %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc81)
        %20 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc82)
        %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc82)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc82)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc82)
        cir.libc.memset %24 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc125)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc86)
        %27 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        %28 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc88)
        %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc88)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc88)
        %32 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc90)
        cir.store %26, %32 : !s8i, !cir.ptr<!s8i> loc(#loc126)
        %33 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc93)
        %35 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
        cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
      } loc(#loc119)
    } loc(#loc117)
    cir.return loc(#loc53)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":21:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":40:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":24:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":24:32)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":26:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":26:27)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":22:1)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":26:20)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":26:19)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":28:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":39:5)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":28:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":28:16)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":29:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":32:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":32:48)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":32:37)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":32:44)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:9)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:43)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:13)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:27)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:33)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:34)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:40)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":33:39)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":35:16)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":35:28)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":35:33)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":35:38)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":35:9)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":35:39)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":36:30)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":36:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":36:20)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":36:25)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":36:26)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":37:19)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":37:9)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":38:9)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":38:14)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":47:1)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":66:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":50:5)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":50:32)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":52:5)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":52:27)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":48:1)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":52:20)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":52:19)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":54:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":65:5)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":54:9)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":54:16)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":55:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":58:9)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":58:48)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":58:37)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":58:44)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:43)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:13)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:27)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:33)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:34)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:40)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":59:39)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":61:16)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":61:28)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":61:33)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":61:38)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":61:9)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":61:39)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":62:30)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":62:9)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":62:20)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":62:25)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":62:26)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":63:19)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":63:9)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":64:9)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_64b.c":64:14)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc101 = loc(fused[#loc13, #loc14])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc20, #loc21])
#loc104 = loc(fused[#loc22, #loc23])
#loc105 = loc(fused[#loc24, #loc21])
#loc106 = loc(fused[#loc25, #loc26])
#loc107 = loc(fused[#loc27, #loc26])
#loc108 = loc(fused[#loc29, #loc30])
#loc109 = loc(fused[#loc31, #loc32])
#loc110 = loc(fused[#loc33, #loc30])
#loc111 = loc(fused[#loc41, #loc42])
#loc112 = loc(fused[#loc44, #loc43])
#loc113 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc56, #loc57])
#loc116 = loc(fused[#loc58, #loc59])
#loc117 = loc(fused[#loc63, #loc64])
#loc118 = loc(fused[#loc65, #loc66])
#loc119 = loc(fused[#loc67, #loc64])
#loc120 = loc(fused[#loc68, #loc69])
#loc121 = loc(fused[#loc70, #loc69])
#loc122 = loc(fused[#loc72, #loc73])
#loc123 = loc(fused[#loc74, #loc75])
#loc124 = loc(fused[#loc76, #loc73])
#loc125 = loc(fused[#loc84, #loc85])
#loc126 = loc(fused[#loc87, #loc86])
