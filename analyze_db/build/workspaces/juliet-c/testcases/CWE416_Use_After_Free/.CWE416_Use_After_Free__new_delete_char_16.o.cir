!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_char_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc88)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc89)
  cir.func private @printHexCharLine(!s8i) loc(#loc90)
  cir.func @_ZN41CWE416_Use_After_Free__new_delete_char_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%3) loc(#loc15)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<1> : !u64i loc(#loc96)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc19)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
          %5 = cir.const #cir.int<65> : !s8i loc(#loc21)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
          cir.store %5, %6 : !s8i, !cir.ptr<!s8i> loc(#loc98)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
          cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc19)
          cir.break loc(#loc25)
        } loc(#loc95)
        cir.yield loc(#loc14)
      } loc(#loc94)
    } loc(#loc94)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
        cir.condition(%3) loc(#loc28)
      } do {
        cir.scope {
          %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc31)
          cir.call @printHexCharLine(%3) : (!s8i) -> () loc(#loc32)
          cir.break loc(#loc33)
        } loc(#loc100)
        cir.yield loc(#loc27)
      } loc(#loc99)
    } loc(#loc99)
    cir.return loc(#loc8)
  } loc(#loc91)
  cir.func internal private @_ZN41CWE416_Use_After_Free__new_delete_char_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc42)
        cir.condition(%3) loc(#loc42)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<1> : !u64i loc(#loc106)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc46)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
          %5 = cir.const #cir.int<65> : !s8i loc(#loc48)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          cir.store %5, %6 : !s8i, !cir.ptr<!s8i> loc(#loc108)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
          cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
          cir.break loc(#loc52)
        } loc(#loc105)
        cir.yield loc(#loc41)
      } loc(#loc104)
    } loc(#loc104)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
        cir.condition(%3) loc(#loc55)
      } do {
        cir.scope {
          cir.break loc(#loc57)
        } loc(#loc110)
        cir.yield loc(#loc54)
      } loc(#loc109)
    } loc(#loc109)
    cir.return loc(#loc35)
  } loc(#loc101)
  cir.func internal private @_ZN41CWE416_Use_After_Free__new_delete_char_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
        cir.condition(%3) loc(#loc66)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<1> : !u64i loc(#loc116)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc70)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
          %5 = cir.const #cir.int<65> : !s8i loc(#loc72)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
          cir.store %5, %6 : !s8i, !cir.ptr<!s8i> loc(#loc118)
          cir.break loc(#loc75)
        } loc(#loc115)
        cir.yield loc(#loc65)
      } loc(#loc114)
    } loc(#loc114)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc78)
        cir.condition(%3) loc(#loc78)
      } do {
        cir.scope {
          %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
          %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc81)
          cir.call @printHexCharLine(%3) : (!s8i) -> () loc(#loc82)
          cir.break loc(#loc83)
        } loc(#loc120)
        cir.yield loc(#loc77)
      } loc(#loc119)
    } loc(#loc119)
    cir.return loc(#loc59)
  } loc(#loc111)
  cir.func @_ZN41CWE416_Use_After_Free__new_delete_char_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE416_Use_After_Free__new_delete_char_16L7goodB2GEv() : () -> () loc(#loc86)
    cir.call @_ZN41CWE416_Use_After_Free__new_delete_char_16L7goodG2BEv() : () -> () loc(#loc87)
    cir.return loc(#loc85)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_char_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc7 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":26:1)
#loc8 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":46:1)
#loc9 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":28:5)
#loc10 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":28:12)
#loc11 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":30:12)
#loc12 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":30:5)
#loc13 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":31:5)
#loc14 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":38:5)
#loc15 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":31:11)
#loc16 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":32:5)
#loc17 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":33:16)
#loc18 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":33:20)
#loc19 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":26:6)
#loc20 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":33:9)
#loc21 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":34:17)
#loc22 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":34:10)
#loc23 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":34:9)
#loc24 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":36:16)
#loc25 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":37:9)
#loc26 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":39:5)
#loc27 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":45:5)
#loc28 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":39:11)
#loc29 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":40:5)
#loc30 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":42:27)
#loc31 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":42:26)
#loc32 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":42:9)
#loc33 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":44:9)
#loc34 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":53:1)
#loc35 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":74:1)
#loc36 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":55:5)
#loc37 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":55:12)
#loc38 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":57:12)
#loc39 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":57:5)
#loc40 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":58:5)
#loc41 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":65:5)
#loc42 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":58:11)
#loc43 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":59:5)
#loc44 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":60:16)
#loc45 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":60:20)
#loc46 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":53:13)
#loc47 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":60:9)
#loc48 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":61:17)
#loc49 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":61:10)
#loc50 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":61:9)
#loc51 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":63:16)
#loc52 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":64:9)
#loc53 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":66:5)
#loc54 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":73:5)
#loc55 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":66:11)
#loc56 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":67:5)
#loc57 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":72:9)
#loc58 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":77:1)
#loc59 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":96:1)
#loc60 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":79:5)
#loc61 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":79:12)
#loc62 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":81:12)
#loc63 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":81:5)
#loc64 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":82:5)
#loc65 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":88:5)
#loc66 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":82:11)
#loc67 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":83:5)
#loc68 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":84:16)
#loc69 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":84:20)
#loc70 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":77:13)
#loc71 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":84:9)
#loc72 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":85:17)
#loc73 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":85:10)
#loc74 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":85:9)
#loc75 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":87:9)
#loc76 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":89:5)
#loc77 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":95:5)
#loc78 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":89:11)
#loc79 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":90:5)
#loc80 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":92:27)
#loc81 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":92:26)
#loc82 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":92:9)
#loc83 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":94:9)
#loc84 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":98:1)
#loc85 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":102:1)
#loc86 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":100:5)
#loc87 = loc("CWE416_Use_After_Free__new_delete_char_16.cpp":101:5)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc7, #loc8])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc12, #loc11])
#loc94 = loc(fused[#loc13, #loc14])
#loc95 = loc(fused[#loc16, #loc14])
#loc96 = loc(fused[#loc17, #loc18])
#loc97 = loc(fused[#loc20, #loc18])
#loc98 = loc(fused[#loc23, #loc21])
#loc99 = loc(fused[#loc26, #loc27])
#loc100 = loc(fused[#loc29, #loc27])
#loc101 = loc(fused[#loc34, #loc35])
#loc102 = loc(fused[#loc36, #loc37])
#loc103 = loc(fused[#loc39, #loc38])
#loc104 = loc(fused[#loc40, #loc41])
#loc105 = loc(fused[#loc43, #loc41])
#loc106 = loc(fused[#loc44, #loc45])
#loc107 = loc(fused[#loc47, #loc45])
#loc108 = loc(fused[#loc50, #loc48])
#loc109 = loc(fused[#loc53, #loc54])
#loc110 = loc(fused[#loc56, #loc54])
#loc111 = loc(fused[#loc58, #loc59])
#loc112 = loc(fused[#loc60, #loc61])
#loc113 = loc(fused[#loc63, #loc62])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc67, #loc65])
#loc116 = loc(fused[#loc68, #loc69])
#loc117 = loc(fused[#loc71, #loc69])
#loc118 = loc(fused[#loc74, #loc72])
#loc119 = loc(fused[#loc76, #loc77])
#loc120 = loc(fused[#loc79, #loc77])
#loc121 = loc(fused[#loc84, #loc85])
