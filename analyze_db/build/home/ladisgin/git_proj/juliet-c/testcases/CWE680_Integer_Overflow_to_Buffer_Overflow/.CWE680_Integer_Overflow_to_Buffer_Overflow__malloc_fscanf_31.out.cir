!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":94:10)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":94:14)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":94:20)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":94:32)
#loc192 = loc(fused[#loc85, #loc86])
#loc193 = loc(fused[#loc87, #loc88])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc158)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc161)
  cir.func private @printIntLine(!s32i) loc(#loc162)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc166)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc168)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc169)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc27)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc159)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %4) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb2 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc35)
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc173)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc174)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc175)
    cir.store %21, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    cir.br ^bb3 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc44)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc178)
    cir.brcond %25 ^bb4, ^bb5 loc(#loc179)
  ^bb4:  // pred: ^bb3
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc48)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
    cir.br ^bb5 loc(#loc42)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc180)
  ^bb7:  // pred: ^bb6
    %29 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc51)
    cir.store %30, %2 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb8 loc(#loc180)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc54)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc182)
    cir.brcond %34 ^bb9, ^bb13 loc(#loc55)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc183)
  ^bb10:  // pred: ^bb9
    %35 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !u64i), !cir.ptr<!s32i> loc(#loc60)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb11 loc(#loc50)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc50)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc62)
    cir.store %40, %2 : !u64i, !cir.ptr<!u64i> loc(#loc185)
    cir.br ^bb8 loc(#loc180)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc50)
  ^bb14:  // pred: ^bb13
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc65)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc66)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    cir.br ^bb15 loc(#loc34)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc32)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc15)
  } loc(#loc164)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc70)
  } loc(#loc186)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc188)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc189)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc92)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.return %17 : !s32i loc(#loc196)
  } loc(#loc191)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc199)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc200)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc201)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc116)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %7 = cir.const #cir.int<20> : !s32i loc(#loc118)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb2 loc(#loc206)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc124)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc125)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc207)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc208)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc209)
    cir.store %16, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc210)
    cir.br ^bb3 loc(#loc211)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc133)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc212)
    cir.brcond %20 ^bb4, ^bb5 loc(#loc213)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc137)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb5 loc(#loc131)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc214)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc140)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc215)
    cir.br ^bb8 loc(#loc214)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc142)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc143)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc216)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc144)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc217)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc149)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.br ^bb11 loc(#loc139)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc139)
  ^bb12:  // pred: ^bb11
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc151)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    cir.br ^bb8 loc(#loc214)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc139)
  ^bb14:  // pred: ^bb13
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc154)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc155)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc156)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
    cir.br ^bb15 loc(#loc123)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc121)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc104)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":27:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":21:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":46:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":29:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":29:24)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":30:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":30:20)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":32:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":32:20)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":33:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":33:18)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":23:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":23:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":25:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":25:12)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":25:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":27:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":27:12)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":28:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":45:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":31:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":44:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":36:32)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":36:39)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":36:46)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":36:56)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":36:57)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":36:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:47)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:17)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:31)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:37)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:38)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:44)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":37:43)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":41:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:22)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:18)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:25)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:37)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:27)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":39:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":40:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":40:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":40:28)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":40:29)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:44)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":38:43)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":42:26)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":42:37)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":42:38)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":42:13)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":43:18)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":43:13)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":80:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":83:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":82:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":82:13)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc78 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":99:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":101:15)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":104:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":106:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":94:1)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":109:1)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":95:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":97:27)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":97:22)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":97:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":99:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":100:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":100:71)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":101:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":104:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":105:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":105:70)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":106:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":108:12)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":108:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":53:1)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":78:1)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":61:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":61:24)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":62:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":62:20)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":64:13)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":64:20)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":65:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":65:18)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":55:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":55:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":57:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":57:12)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":57:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":59:12)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":59:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":60:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":77:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":63:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":76:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":68:32)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":68:39)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":68:46)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":68:56)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":68:57)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":68:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:13)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:47)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:17)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:31)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:37)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:38)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:44)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":69:43)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":73:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:22)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:18)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:25)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:37)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:27)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":71:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":72:33)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":72:17)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":72:28)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":72:29)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:44)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":70:43)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":74:26)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":74:37)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":74:38)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":74:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":75:18)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_31.c":75:13)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc6, #loc7])
#loc161 = loc(fused[#loc8, #loc9])
#loc162 = loc(fused[#loc10, #loc11])
#loc163 = loc(fused[#loc12, #loc13])
#loc164 = loc(fused[#loc14, #loc15])
#loc165 = loc(fused[#loc16, #loc17])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc20, #loc21])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc28, #loc26])
#loc171 = loc(fused[#loc31, #loc32])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc37, #loc38])
#loc174 = loc(fused[#loc36, #loc38])
#loc175 = loc(fused[#loc35, #loc39])
#loc176 = loc(fused[#loc40, #loc39])
#loc177 = loc(fused[#loc41, #loc42])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc45, #loc42])
#loc180 = loc(fused[#loc49, #loc50])
#loc181 = loc(fused[#loc52, #loc51])
#loc182 = loc(fused[#loc53, #loc54])
#loc183 = loc(fused[#loc56, #loc50])
#loc184 = loc(fused[#loc58, #loc57])
#loc185 = loc(fused[#loc62, #loc61])
#loc186 = loc(fused[#loc69, #loc70])
#loc187 = loc(fused[#loc71, #loc72])
#loc188 = loc(fused[#loc73, #loc74])
#loc189 = loc(fused[#loc75, #loc76])
#loc190 = loc(fused[#loc77, #loc78])
#loc191 = loc(fused[#loc83, #loc84])
#loc194 = loc(fused[#loc94, #loc95])
#loc195 = loc(fused[#loc98, #loc99])
#loc196 = loc(fused[#loc102, #loc101])
#loc197 = loc(fused[#loc103, #loc104])
#loc198 = loc(fused[#loc105, #loc106])
#loc199 = loc(fused[#loc107, #loc108])
#loc200 = loc(fused[#loc109, #loc110])
#loc201 = loc(fused[#loc111, #loc112])
#loc202 = loc(fused[#loc113, #loc114])
#loc203 = loc(fused[#loc117, #loc115])
#loc204 = loc(fused[#loc119, #loc118])
#loc205 = loc(fused[#loc120, #loc121])
#loc206 = loc(fused[#loc122, #loc123])
#loc207 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc125, #loc127])
#loc209 = loc(fused[#loc124, #loc128])
#loc210 = loc(fused[#loc129, #loc128])
#loc211 = loc(fused[#loc130, #loc131])
#loc212 = loc(fused[#loc132, #loc133])
#loc213 = loc(fused[#loc134, #loc131])
#loc214 = loc(fused[#loc138, #loc139])
#loc215 = loc(fused[#loc141, #loc140])
#loc216 = loc(fused[#loc142, #loc143])
#loc217 = loc(fused[#loc145, #loc139])
#loc218 = loc(fused[#loc147, #loc146])
#loc219 = loc(fused[#loc151, #loc150])
