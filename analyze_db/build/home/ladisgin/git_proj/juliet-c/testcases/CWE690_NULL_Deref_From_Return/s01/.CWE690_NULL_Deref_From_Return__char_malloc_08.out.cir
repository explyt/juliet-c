!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":113:10)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":113:14)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":113:20)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":113:32)
#loc157 = loc(fused[#loc49, #loc50])
#loc158 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc140)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc145)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc149)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc27)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
    %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc11)
  } loc(#loc141)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc151)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc154)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc56)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_08_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_08_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.return %17 : !s32i loc(#loc161)
  } loc(#loc156)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.return %2 : !s32i loc(#loc163)
  } loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc76)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc78)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc79)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc79)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc167)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc168)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc78)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc172)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc86)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb8 loc(#loc89)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc175)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc176)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc97)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc99)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc99)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc102)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
    cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb6 loc(#loc93)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc93)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc85)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc73)
  } loc(#loc164)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.return %2 : !s32i loc(#loc178)
  } loc(#loc177)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc112)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc114)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc115)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc115)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc182)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc183)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc187)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc122)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %11 ^bb2, ^bb7 loc(#loc188)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc189)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc128)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc190)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc191)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc130)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc132)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc132)
    %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb5 loc(#loc126)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc126)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc121)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc109)
  } loc(#loc179)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":45:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":36:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":49:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":38:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":38:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":39:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":39:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:27)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:30)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:41)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:42)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":42:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":48:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":42:8)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":42:26)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":43:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":45:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":45:16)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":46:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":46:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":47:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":47:14)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":98:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":102:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":100:5)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":100:14)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":101:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":101:14)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":118:15)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":120:15)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":123:15)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":125:15)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":113:1)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":128:1)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":114:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":116:27)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":116:22)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":116:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":118:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":119:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":119:56)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":120:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":123:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":124:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":124:55)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":125:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":127:12)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":127:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":24:1)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":27:1)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":26:12)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":26:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":65:19)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":56:1)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":77:1)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":58:5)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":58:12)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":59:12)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":59:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:20)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:27)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:30)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:41)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:42)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:5)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":62:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":76:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":62:8)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":62:27)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":63:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":66:5)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":68:5)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":65:9)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":70:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":75:9)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":70:13)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":70:21)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":71:9)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":72:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":72:20)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":72:26)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":73:23)
#loc101 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":73:13)
#loc102 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":74:13)
#loc103 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":74:18)
#loc104 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":29:1)
#loc105 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":32:1)
#loc106 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":31:12)
#loc107 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":31:5)
#loc108 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":80:1)
#loc109 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":96:1)
#loc110 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":82:5)
#loc111 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":82:12)
#loc112 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":83:12)
#loc113 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":83:5)
#loc114 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:20)
#loc115 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:27)
#loc116 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:30)
#loc117 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:41)
#loc118 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:42)
#loc119 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:5)
#loc120 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":86:5)
#loc121 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":95:5)
#loc122 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":86:8)
#loc123 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":86:26)
#loc124 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":87:5)
#loc125 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":89:9)
#loc126 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":94:9)
#loc127 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":89:13)
#loc128 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":89:21)
#loc129 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":90:9)
#loc130 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":91:13)
#loc131 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":91:20)
#loc132 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":91:26)
#loc133 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":92:23)
#loc134 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":92:13)
#loc135 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":93:13)
#loc136 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":93:18)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc6, #loc7])
#loc140 = loc(fused[#loc8, #loc9])
#loc141 = loc(fused[#loc10, #loc11])
#loc142 = loc(fused[#loc12, #loc13])
#loc143 = loc(fused[#loc15, #loc14])
#loc144 = loc(fused[#loc18, #loc19])
#loc145 = loc(fused[#loc17, #loc19])
#loc146 = loc(fused[#loc16, #loc20])
#loc147 = loc(fused[#loc21, #loc20])
#loc148 = loc(fused[#loc22, #loc23])
#loc149 = loc(fused[#loc24, #loc25])
#loc150 = loc(fused[#loc26, #loc23])
#loc151 = loc(fused[#loc33, #loc34])
#loc152 = loc(fused[#loc35, #loc36])
#loc153 = loc(fused[#loc37, #loc38])
#loc154 = loc(fused[#loc39, #loc40])
#loc155 = loc(fused[#loc41, #loc42])
#loc156 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc58, #loc59])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc66, #loc65])
#loc162 = loc(fused[#loc67, #loc68])
#loc163 = loc(fused[#loc70, #loc69])
#loc164 = loc(fused[#loc72, #loc73])
#loc165 = loc(fused[#loc74, #loc75])
#loc166 = loc(fused[#loc77, #loc76])
#loc167 = loc(fused[#loc80, #loc81])
#loc168 = loc(fused[#loc79, #loc81])
#loc169 = loc(fused[#loc78, #loc82])
#loc170 = loc(fused[#loc83, #loc82])
#loc171 = loc(fused[#loc84, #loc85])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc174 = loc(fused[#loc92, #loc93])
#loc175 = loc(fused[#loc94, #loc95])
#loc176 = loc(fused[#loc96, #loc93])
#loc177 = loc(fused[#loc104, #loc105])
#loc178 = loc(fused[#loc107, #loc106])
#loc179 = loc(fused[#loc108, #loc109])
#loc180 = loc(fused[#loc110, #loc111])
#loc181 = loc(fused[#loc113, #loc112])
#loc182 = loc(fused[#loc116, #loc117])
#loc183 = loc(fused[#loc115, #loc117])
#loc184 = loc(fused[#loc114, #loc118])
#loc185 = loc(fused[#loc119, #loc118])
#loc186 = loc(fused[#loc120, #loc121])
#loc187 = loc(fused[#loc122, #loc123])
#loc188 = loc(fused[#loc124, #loc121])
#loc189 = loc(fused[#loc125, #loc126])
#loc190 = loc(fused[#loc127, #loc128])
#loc191 = loc(fused[#loc129, #loc126])
