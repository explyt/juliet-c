!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_puts_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @puts(!cir.ptr<!s8i>) -> !s32i loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_puts_02_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc53)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc8)
    cir.brcond %1 ^bb2, ^bb3 loc(#loc54)
  ^bb2:  // pred: ^bb1
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
    %4 = cir.call @puts(%3) : (!cir.ptr<!s8i>) -> !s32i loc(#loc10)
    cir.br ^bb3 loc(#loc7)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc7)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc5)
  } loc(#loc52)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_puts_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc56)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc13)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc57)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc15)
    cir.return loc(#loc12)
  } loc(#loc55)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"puts failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %1 ^bb2, ^bb3 loc(#loc61)
  ^bb2:  // pred: ^bb1
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb8 loc(#loc27)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc32)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc32)
    %6 = cir.call @puts(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc33)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc34)
    %9 = cir.cmp(eq, %6, %8) : !s32i, !cir.bool loc(#loc63)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc64)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc20)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc31)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc22)
  } loc(#loc59)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc66)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %1 ^bb2, ^bb7 loc(#loc67)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc68)
  ^bb3:  // pred: ^bb2
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc45)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc45)
    %4 = cir.call @puts(%3) : (!cir.ptr<!s8i>) -> !s32i loc(#loc46)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc47)
    %7 = cir.cmp(eq, %4, %6) : !s32i, !cir.bool loc(#loc69)
    cir.brcond %7 ^bb4, ^bb5 loc(#loc70)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc49)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb5 loc(#loc44)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc38)
  } loc(#loc65)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_puts_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":724:1)
#loc2 = loc("/usr/include/stdio.h":724:33)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":35:14)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":30:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":37:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":32:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":36:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":32:8)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":33:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":35:9)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":74:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":78:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":76:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":76:11)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":77:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":77:11)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":49:19)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":56:23)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":44:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":59:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":46:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":58:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":46:8)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":47:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":50:5)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":52:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":49:9)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":54:9)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":57:9)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":54:18)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":54:13)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":54:31)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":55:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":56:13)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":62:1)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":72:1)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":64:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":71:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":64:8)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":65:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":67:9)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":70:9)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":67:18)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":67:13)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":67:31)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":68:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":69:23)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_puts_02.c":69:13)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc4, #loc5])
#loc53 = loc(fused[#loc6, #loc7])
#loc54 = loc(fused[#loc9, #loc7])
#loc55 = loc(fused[#loc11, #loc12])
#loc56 = loc(fused[#loc13, #loc14])
#loc57 = loc(fused[#loc15, #loc16])
#loc58 = loc(fused[#loc17, #loc18])
#loc59 = loc(fused[#loc21, #loc22])
#loc60 = loc(fused[#loc23, #loc24])
#loc61 = loc(fused[#loc26, #loc27, #loc28, #loc24])
#loc62 = loc(fused[#loc30, #loc31])
#loc63 = loc(fused[#loc33, #loc34])
#loc64 = loc(fused[#loc35, #loc31])
#loc65 = loc(fused[#loc37, #loc38])
#loc66 = loc(fused[#loc39, #loc40])
#loc67 = loc(fused[#loc42, #loc40])
#loc68 = loc(fused[#loc43, #loc44])
#loc69 = loc(fused[#loc46, #loc47])
#loc70 = loc(fused[#loc48, #loc44])
