!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":44:65)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":44:69)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":72:69)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":72:73)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":96:69)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":96:73)
#true = #cir.bool<true> : !cir.bool
#loc120 = loc(fused[#loc8, #loc9])
#loc134 = loc(fused[#loc43, #loc44])
#loc148 = loc(fused[#loc80, #loc81])
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func @CWE124_Buffer_Underwrite__CWE839_listen_socket_51b_badSink(%arg0: !s32i loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc120)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc122)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc123)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc123)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc123)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc20)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc125)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc24)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc26)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc26)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc127)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc29)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc129)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc32)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc130)
              cir.condition(%14) loc(#loc33)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc36)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc36)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc36)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc37)
              } loc(#loc131)
              cir.yield loc(#loc28)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc39)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc132)
              cir.yield loc(#loc128)
            } loc(#loc128)
          } loc(#loc128)
        } else {
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc40)
        } loc(#loc126)
      } loc(#loc124)
    } loc(#loc121)
    cir.return loc(#loc7)
  } loc(#loc119)
  cir.func @CWE124_Buffer_Underwrite__CWE839_listen_socket_51b_goodG2BSink(%arg0: !s32i loc(fused[#loc43, #loc44])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc134)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc136)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc137)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc137)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc137)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc55)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc139)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc59)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc61)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc61)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc141)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc64)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc143)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc67)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc144)
              cir.condition(%14) loc(#loc68)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc71)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc71)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc72)
              } loc(#loc145)
              cir.yield loc(#loc63)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc74)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc146)
              cir.yield loc(#loc142)
            } loc(#loc142)
          } loc(#loc142)
        } else {
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc75)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc75)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc76)
        } loc(#loc140)
      } loc(#loc138)
    } loc(#loc135)
    cir.return loc(#loc42)
  } loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc77)
  cir.func @CWE124_Buffer_Underwrite__CWE839_listen_socket_51b_goodB2GSink(%arg0: !s32i loc(fused[#loc80, #loc81])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc148)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc150)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc151)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc151)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc151)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc153)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc95)
          %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc154)
          %11 = cir.ternary(%10, true {
            %12 = cir.const #true loc(#loc93)
            cir.yield %12 : !cir.bool loc(#loc93)
          }, false {
            %12 = cir.const #false loc(#loc93)
            cir.yield %12 : !cir.bool loc(#loc93)
          }) : (!cir.bool) -> !cir.bool loc(#loc93)
          cir.yield %11 : !cir.bool loc(#loc93)
        }, false {
          %8 = cir.const #false loc(#loc93)
          cir.yield %8 : !cir.bool loc(#loc93)
        }) : (!cir.bool) -> !cir.bool loc(#loc93)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc102)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc102)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc156)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc105)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc108)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc159)
              cir.condition(%15) loc(#loc109)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc112)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc112)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc113)
              } loc(#loc160)
              cir.yield loc(#loc104)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc115)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
              cir.yield loc(#loc157)
            } loc(#loc157)
          } loc(#loc157)
        } else {
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc77)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc77)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc116)
        } loc(#loc155)
      } loc(#loc152)
    } loc(#loc149)
    cir.return loc(#loc79)
  } loc(#loc147)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":62:23)
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":44:1)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":65:1)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":45:1)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":46:5)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":64:5)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":47:9)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":47:13)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":48:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":48:30)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":51:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":63:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":51:13)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":51:20)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":52:9)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":59:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":61:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":53:28)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":53:20)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":53:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":58:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:21)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:17)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:24)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:28)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:26)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":56:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":57:37)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":57:30)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":57:17)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:33)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":55:32)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":62:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":72:1)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":93:1)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":73:1)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":74:5)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":92:5)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":75:9)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":75:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":76:9)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":76:30)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":79:9)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":91:9)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":79:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":79:20)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":80:9)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":87:9)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":89:9)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":81:28)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":81:20)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":81:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":86:13)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:21)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:17)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:24)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:28)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:26)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":84:13)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":85:37)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":85:30)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":85:17)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:33)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":83:32)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":90:23)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":90:13)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":113:23)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":96:1)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":116:1)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":97:1)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":98:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":115:5)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":99:9)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":99:13)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":100:9)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":100:30)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":102:9)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":114:9)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":102:13)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":102:21)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":102:23)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":102:26)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":102:34)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":102:36)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":103:9)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":110:9)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":112:9)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":104:28)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":104:20)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":104:13)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:13)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":109:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:21)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:17)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:24)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:28)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:26)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":107:13)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":108:37)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":108:30)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":108:17)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:33)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":106:32)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_51b.c":113:13)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc6, #loc7])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc13, #loc14])
#loc123 = loc(fused[#loc15, #loc16])
#loc124 = loc(fused[#loc17, #loc18])
#loc125 = loc(fused[#loc19, #loc20])
#loc126 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc127 = loc(fused[#loc26, #loc24])
#loc128 = loc(fused[#loc27, #loc28])
#loc129 = loc(fused[#loc30, #loc29])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc34, #loc28])
#loc132 = loc(fused[#loc39, #loc38])
#loc133 = loc(fused[#loc41, #loc42])
#loc135 = loc(fused[#loc46, #loc47])
#loc136 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc50, #loc51])
#loc138 = loc(fused[#loc52, #loc53])
#loc139 = loc(fused[#loc54, #loc55])
#loc140 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc141 = loc(fused[#loc61, #loc59])
#loc142 = loc(fused[#loc62, #loc63])
#loc143 = loc(fused[#loc65, #loc64])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc69, #loc63])
#loc146 = loc(fused[#loc74, #loc73])
#loc147 = loc(fused[#loc78, #loc79])
#loc149 = loc(fused[#loc83, #loc84])
#loc150 = loc(fused[#loc85, #loc86])
#loc151 = loc(fused[#loc87, #loc88])
#loc152 = loc(fused[#loc89, #loc90])
#loc153 = loc(fused[#loc91, #loc92])
#loc154 = loc(fused[#loc94, #loc96])
#loc155 = loc(fused[#loc97, #loc98, #loc99, #loc90])
#loc156 = loc(fused[#loc102, #loc100])
#loc157 = loc(fused[#loc103, #loc104])
#loc158 = loc(fused[#loc106, #loc105])
#loc159 = loc(fused[#loc107, #loc108])
#loc160 = loc(fused[#loc110, #loc104])
#loc161 = loc(fused[#loc115, #loc114])
