!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc267)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc268)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc269)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc270)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc271)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc272)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc273)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc274)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc275)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc276)
  cir.func private @close(!s32i) -> !s32i loc(#loc277)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc25)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc279)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc283)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc268)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc282)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc283)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc268)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc268)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc286)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc288)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc289)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc290)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc291)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc292)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc293)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc52)
        cir.store %18, %14 : !s32i, !cir.ptr<!s32i> loc(#loc291)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc54)
        cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc292)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc57)
        %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc57)
        cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc293)
        cir.scope {
          cir.do {
            cir.scope {
              %24 = cir.const #cir.int<2> : !s32i loc(#loc63)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc64)
              %26 = cir.const #cir.int<6> : !s32i loc(#loc65)
              %27 = cir.call @socket(%24, %25, %26) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
              cir.store %27, %14 : !s32i, !cir.ptr<!s32i> loc(#loc296)
              cir.scope {
                %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc72)
                %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc72)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc298)
                cir.if %84 {
                  cir.break loc(#loc74)
                } loc(#loc299)
              } loc(#loc297)
              %28 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc300)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc77)
              %30 = cir.const #cir.int<16> : !u64i loc(#loc301)
              cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc302)
              %31 = cir.const #cir.int<2> : !s32i loc(#loc82)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc82)
              %33 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc303)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc85)
              %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc85)
              %36 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
              %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
              cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc304)
              %38 = cir.const #cir.int<27015> : !s32i loc(#loc89)
              %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc89)
              %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc90)
              %41 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
              cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc305)
              cir.scope {
                %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %82 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc307)
                %83 = cir.const #cir.int<16> : !u64i loc(#loc308)
                %84 = cir.cast(integral, %83 : !u64i), !u32i loc(#loc308)
                %85 = cir.call @bind(%81, %82, %84) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc101)
                %86 = cir.const #cir.int<1> : !s32i loc(#loc102)
                %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc102)
                %88 = cir.cmp(eq, %85, %87) : !s32i, !cir.bool loc(#loc309)
                cir.if %88 {
                  cir.break loc(#loc104)
                } loc(#loc310)
              } loc(#loc306)
              cir.scope {
                %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %82 = cir.const #cir.int<5> : !s32i loc(#loc108)
                %83 = cir.call @listen(%81, %82) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc109)
                %84 = cir.const #cir.int<1> : !s32i loc(#loc110)
                %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc110)
                %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc312)
                cir.if %86 {
                  cir.break loc(#loc112)
                } loc(#loc313)
              } loc(#loc311)
              %42 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %43 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc114)
              %44 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc115)
              %45 = cir.call @accept(%42, %43, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc116)
              cir.store %45, %15 : !s32i, !cir.ptr<!s32i> loc(#loc314)
              cir.scope {
                %81 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc122)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc316)
                cir.if %84 {
                  cir.break loc(#loc124)
                } loc(#loc317)
              } loc(#loc315)
              %46 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc125)
              %47 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
              %48 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc127)
              %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc128)
              %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc318)
              %51 = cir.const #cir.int<1> : !u64i loc(#loc319)
              %52 = cir.const #cir.int<100> : !s32i loc(#loc133)
              %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc133)
              %54 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc134)
              %55 = cir.binop(sub, %53, %54) : !u64i loc(#loc320)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc135)
              %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc321)
              %59 = cir.binop(mul, %51, %58) : !u64i loc(#loc322)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %61 = cir.call @recv(%46, %50, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
              %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc138)
              cir.store %62, %11 : !s32i, !cir.ptr<!s32i> loc(#loc323)
              cir.scope {
                %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc144)
                %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc144)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc325)
                %85 = cir.ternary(%84, true {
                  %86 = cir.const #true loc(#loc145)
                  cir.yield %86 : !cir.bool loc(#loc145)
                }, false {
                  %86 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                  %87 = cir.const #cir.int<0> : !s32i loc(#loc147)
                  %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc326)
                  %89 = cir.ternary(%88, true {
                    %90 = cir.const #true loc(#loc145)
                    cir.yield %90 : !cir.bool loc(#loc145)
                  }, false {
                    %90 = cir.const #false loc(#loc145)
                    cir.yield %90 : !cir.bool loc(#loc145)
                  }) : (!cir.bool) -> !cir.bool loc(#loc145)
                  cir.yield %89 : !cir.bool loc(#loc145)
                }) : (!cir.bool) -> !cir.bool loc(#loc145)
                cir.if %85 {
                  cir.break loc(#loc149)
                } loc(#loc327)
              } loc(#loc324)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc150)
              %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc150)
              %65 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
              %66 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc152)
              %67 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc153)
              %69 = cir.const #cir.int<1> : !u64i loc(#loc328)
              %70 = cir.binop(div, %68, %69) : !u64i loc(#loc329)
              %71 = cir.binop(add, %66, %70) : !u64i loc(#loc330)
              %72 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %71 : !u64i), !cir.ptr<!s8i> loc(#loc156)
              cir.store %64, %72 : !s8i, !cir.ptr<!s8i> loc(#loc331)
              %73 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc157)
              %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
              %75 = cir.const #cir.int<13> : !s32i loc(#loc159)
              %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc157)
              cir.store %76, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc332)
              cir.scope {
                %81 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
                cir.if %82 {
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc166)
                  %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc166)
                  %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                  cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc335)
                } loc(#loc334)
              } loc(#loc333)
              %77 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc169)
              %78 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
              %79 = cir.const #cir.int<10> : !s32i loc(#loc171)
              %80 = cir.call @strchr(%78, %79) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc169)
              cir.store %80, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
              cir.scope {
                %81 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
                %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
                cir.if %82 {
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc178)
                  %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc178)
                  %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
                  cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc339)
                } loc(#loc338)
              } loc(#loc337)
            } loc(#loc295)
            cir.yield loc(#loc60)
          } while {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc181)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc181)
            cir.condition(%25) loc(#loc181)
          } loc(#loc294)
        } loc(#loc294)
        cir.scope {
          %24 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc185)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc185)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc341)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc188)
          } loc(#loc342)
        } loc(#loc340)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc191)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc192)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc192)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc344)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc194)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc195)
          } loc(#loc345)
        } loc(#loc343)
      } loc(#loc287)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
    } loc(#loc285)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc348)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc350)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc25)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc25)
        %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc209)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc351)
        cir.scope {
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc214)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc215)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc215)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc353)
          cir.if %17 {
            %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc217)
            %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc218)
          } loc(#loc354)
        } loc(#loc352)
      } loc(#loc349)
    } loc(#loc347)
    cir.return loc(#loc29)
  } loc(#loc280)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc356)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc221)
    cir.return loc(#loc220)
  } loc(#loc355)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc357)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc225)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc359)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc360)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc361)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc267)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc360)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc361)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc267)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc267)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc234)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc364)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc364)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc241)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc225)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc225)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc241)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc365)
    } loc(#loc363)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc367)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc367)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc369)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc255)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc256)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc256)
        %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc257)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc370)
        cir.scope {
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc262)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc263)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc263)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc372)
          cir.if %17 {
            %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc265)
            %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc266)
          } loc(#loc373)
        } loc(#loc371)
      } loc(#loc368)
    } loc(#loc366)
    cir.return loc(#loc227)
  } loc(#loc358)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":173:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":173:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":64:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":64:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/stdio.h":903:1)
#loc24 = loc("/usr/include/stdio.h":904:3)
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":154:32)
#loc26 = loc("/usr/include/stdio.h":897:1)
#loc27 = loc("/usr/include/stdio.h":897:36)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":59:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":161:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":61:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":61:12)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":62:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":62:25)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":63:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":63:25)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":65:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":65:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":66:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":148:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":67:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":67:24)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":67:23)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":68:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":146:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":73:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":73:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":74:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":74:32)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":75:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":75:19)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":76:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":76:35)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":77:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":77:35)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":78:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":78:41)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":78:30)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":78:37)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":79:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":131:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":80:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":130:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":89:39)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":89:48)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":89:61)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":89:32)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":89:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":89:72)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":90:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":93:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":90:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":90:37)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":91:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":92:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":94:24)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":94:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":94:34)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":94:37)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":94:51)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":94:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":94:52)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":95:38)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":95:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":96:43)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":96:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":97:42)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":97:36)
#loc91 = loc("/usr/include/netinet/in.h":250:15)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":97:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":97:50)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":101:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:26)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:58)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:59)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:68)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:82)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:21)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":98:88)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":99:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":100:21)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":102:17)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":105:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":102:28)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":102:42)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":102:21)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":102:61)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":103:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":104:21)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":106:39)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":106:53)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":106:59)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":106:32)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":106:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":106:63)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":107:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":110:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":107:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":107:37)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":108:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":109:21)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:35)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:58)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:65)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:63)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:49)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:72)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:75)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:86)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:91)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:97)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:107)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:108)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:111)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:30)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":112:112)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":113:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":116:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":113:21)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":113:35)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":113:48)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":113:51)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":113:65)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":114:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":115:21)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":118:61)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":118:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":118:22)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":118:32)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":118:45)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":118:56)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":118:57)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":120:27)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":120:34)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":120:40)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":120:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":120:44)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":121:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":124:17)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":121:21)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":122:17)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":123:32)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":123:22)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":123:21)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":125:27)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":125:34)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":125:40)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":125:17)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":125:44)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":126:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":129:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":126:21)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":127:17)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":128:32)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":128:22)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":128:21)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":131:20)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":132:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":135:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":132:17)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":132:33)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":133:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":134:30)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":134:17)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":136:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":139:13)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":136:17)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":136:33)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":137:13)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":138:30)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":138:17)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":147:21)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":147:10)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":147:9)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":149:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":160:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":150:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":150:24)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":150:23)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":151:9)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":159:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":152:13)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":152:19)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":154:26)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":154:20)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":154:13)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":154:35)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":155:13)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":158:13)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":155:17)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":155:25)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":156:13)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":157:24)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":157:17)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":195:1)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":198:1)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":197:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":197:13)
#loc223 = loc("/usr/include/string.h":149:1)
#loc224 = loc("/usr/include/string.h":150:14)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":178:22)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":168:1)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":193:1)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":170:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":170:12)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":171:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":171:25)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":172:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":172:25)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":174:12)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":174:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":175:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":180:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":176:9)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":176:24)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":176:23)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":178:9)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":178:16)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":179:21)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":179:10)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":179:9)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":181:5)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":192:5)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":182:9)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":182:24)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":182:23)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":183:9)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":191:9)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":184:13)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":184:19)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":186:26)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":186:32)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":186:20)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":186:13)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":186:35)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":187:13)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":190:13)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":187:17)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":187:25)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":188:13)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":189:24)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_32.c":189:17)
#loc267 = loc(fused[#loc1, #loc2])
#loc268 = loc(fused[#loc3, #loc4])
#loc269 = loc(fused[#loc5, #loc6])
#loc270 = loc(fused[#loc7, #loc8])
#loc271 = loc(fused[#loc9, #loc10])
#loc272 = loc(fused[#loc11, #loc12])
#loc273 = loc(fused[#loc13, #loc14])
#loc274 = loc(fused[#loc15, #loc16])
#loc275 = loc(fused[#loc17, #loc18])
#loc276 = loc(fused[#loc19, #loc20])
#loc277 = loc(fused[#loc21, #loc22])
#loc278 = loc(fused[#loc23, #loc24])
#loc279 = loc(fused[#loc26, #loc27])
#loc280 = loc(fused[#loc28, #loc29])
#loc281 = loc(fused[#loc30, #loc31])
#loc282 = loc(fused[#loc32, #loc33])
#loc283 = loc(fused[#loc34, #loc35])
#loc284 = loc(fused[#loc37, #loc36])
#loc285 = loc(fused[#loc38, #loc39])
#loc286 = loc(fused[#loc40, #loc41])
#loc287 = loc(fused[#loc43, #loc44])
#loc288 = loc(fused[#loc45, #loc46])
#loc289 = loc(fused[#loc47, #loc48])
#loc290 = loc(fused[#loc49, #loc50])
#loc291 = loc(fused[#loc51, #loc52])
#loc292 = loc(fused[#loc53, #loc54])
#loc293 = loc(fused[#loc55, #loc56])
#loc294 = loc(fused[#loc59, #loc60])
#loc295 = loc(fused[#loc61, #loc62])
#loc296 = loc(fused[#loc67, #loc68])
#loc297 = loc(fused[#loc69, #loc70])
#loc298 = loc(fused[#loc71, #loc72])
#loc299 = loc(fused[#loc73, #loc70])
#loc300 = loc(fused[#loc75, #loc76])
#loc301 = loc(fused[#loc78, #loc79])
#loc302 = loc(fused[#loc80, #loc81])
#loc303 = loc(fused[#loc84, #loc82])
#loc304 = loc(fused[#loc88, #loc85])
#loc305 = loc(fused[#loc92, #loc93])
#loc306 = loc(fused[#loc94, #loc95])
#loc307 = loc(fused[#loc97, #loc98])
#loc308 = loc(fused[#loc99, #loc100])
#loc309 = loc(fused[#loc101, #loc102])
#loc310 = loc(fused[#loc103, #loc95])
#loc311 = loc(fused[#loc105, #loc106])
#loc312 = loc(fused[#loc109, #loc110])
#loc313 = loc(fused[#loc111, #loc106])
#loc314 = loc(fused[#loc117, #loc118])
#loc315 = loc(fused[#loc119, #loc120])
#loc316 = loc(fused[#loc121, #loc122])
#loc317 = loc(fused[#loc123, #loc120])
#loc318 = loc(fused[#loc129, #loc130])
#loc319 = loc(fused[#loc131, #loc132])
#loc320 = loc(fused[#loc133, #loc134])
#loc321 = loc(fused[#loc133, #loc135])
#loc322 = loc(fused[#loc131, #loc136])
#loc323 = loc(fused[#loc139, #loc140])
#loc324 = loc(fused[#loc141, #loc142])
#loc325 = loc(fused[#loc143, #loc144])
#loc326 = loc(fused[#loc146, #loc147])
#loc327 = loc(fused[#loc148, #loc142])
#loc328 = loc(fused[#loc154, #loc155])
#loc329 = loc(fused[#loc153, #loc155])
#loc330 = loc(fused[#loc152, #loc155])
#loc331 = loc(fused[#loc151, #loc150])
#loc332 = loc(fused[#loc160, #loc161])
#loc333 = loc(fused[#loc162, #loc163])
#loc334 = loc(fused[#loc165, #loc163])
#loc335 = loc(fused[#loc168, #loc166])
#loc336 = loc(fused[#loc172, #loc173])
#loc337 = loc(fused[#loc174, #loc175])
#loc338 = loc(fused[#loc177, #loc175])
#loc339 = loc(fused[#loc180, #loc178])
#loc340 = loc(fused[#loc182, #loc183])
#loc341 = loc(fused[#loc184, #loc185])
#loc342 = loc(fused[#loc186, #loc183])
#loc343 = loc(fused[#loc189, #loc190])
#loc344 = loc(fused[#loc191, #loc192])
#loc345 = loc(fused[#loc193, #loc190])
#loc346 = loc(fused[#loc198, #loc196])
#loc347 = loc(fused[#loc199, #loc200])
#loc348 = loc(fused[#loc201, #loc202])
#loc349 = loc(fused[#loc204, #loc205])
#loc350 = loc(fused[#loc206, #loc207])
#loc351 = loc(fused[#loc210, #loc211])
#loc352 = loc(fused[#loc212, #loc213])
#loc353 = loc(fused[#loc214, #loc215])
#loc354 = loc(fused[#loc216, #loc213])
#loc355 = loc(fused[#loc219, #loc220])
#loc356 = loc(fused[#loc221, #loc222])
#loc357 = loc(fused[#loc223, #loc224])
#loc358 = loc(fused[#loc226, #loc227])
#loc359 = loc(fused[#loc228, #loc229])
#loc360 = loc(fused[#loc230, #loc231])
#loc361 = loc(fused[#loc232, #loc233])
#loc362 = loc(fused[#loc235, #loc234])
#loc363 = loc(fused[#loc236, #loc237])
#loc364 = loc(fused[#loc238, #loc239])
#loc365 = loc(fused[#loc245, #loc243])
#loc366 = loc(fused[#loc246, #loc247])
#loc367 = loc(fused[#loc248, #loc249])
#loc368 = loc(fused[#loc251, #loc252])
#loc369 = loc(fused[#loc253, #loc254])
#loc370 = loc(fused[#loc258, #loc259])
#loc371 = loc(fused[#loc260, #loc261])
#loc372 = loc(fused[#loc262, #loc263])
#loc373 = loc(fused[#loc264, #loc261])
