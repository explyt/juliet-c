!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":25:74)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":25:81)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":40:78)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":40:85)
#loc36 = loc(fused[#loc7, #loc8])
#loc40 = loc(fused[#loc21, #loc22])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc34)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc36)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc38)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc38)
      cir.store %2, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc38)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc14)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc15)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc14)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    } loc(#loc37)
    cir.return loc(#loc6)
  } loc(#loc35)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc21, #loc22])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc42)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc42)
      cir.store %2, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc42)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc28)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc29)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc28)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    } loc(#loc41)
    cir.return loc(#loc20)
  } loc(#loc39)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":25:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":33:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":26:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":27:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":28:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":28:25)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":30:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":30:16)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":30:22)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":31:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":31:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":40:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":48:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":41:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":42:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":47:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":43:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":43:25)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":45:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":45:16)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":45:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":46:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_51b.c":46:9)
#loc33 = loc(fused[#loc1, #loc2])
#loc34 = loc(fused[#loc3, #loc4])
#loc35 = loc(fused[#loc5, #loc6])
#loc37 = loc(fused[#loc10, #loc11])
#loc38 = loc(fused[#loc12, #loc13])
#loc39 = loc(fused[#loc19, #loc20])
#loc41 = loc(fused[#loc24, #loc25])
#loc42 = loc(fused[#loc26, #loc27])
