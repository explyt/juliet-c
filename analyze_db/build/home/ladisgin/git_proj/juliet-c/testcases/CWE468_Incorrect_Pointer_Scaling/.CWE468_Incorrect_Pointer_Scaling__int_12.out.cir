!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":91:10)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":91:14)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":91:20)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":91:32)
#loc138 = loc(fused[#loc62, #loc63])
#loc139 = loc(fused[#loc64, #loc65])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc115)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__int_12_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc116)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc117)
  cir.func private @printIntLine(!s32i) loc(#loc118)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc121)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc122)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc123)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc124)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc126)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc126)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %9 ^bb2, ^bb5 loc(#loc127)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc128)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__int_12_bad.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc116)
    cir.copy %10 to %0 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc116)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc12)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc120)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc31)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc129)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc130)
    %17 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc34)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc37)
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc26)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__int_12_bad.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc116)
    cir.copy %20 to %3 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc122)
    %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc18)
    cir.store %21, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
    %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.store %25, %5 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc45)
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc10)
  } loc(#loc119)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc132)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc134)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc69)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__int_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE468_Incorrect_Pointer_Scaling__int_12_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__int_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call @CWE468_Incorrect_Pointer_Scaling__int_12_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.return %17 : !s32i loc(#loc142)
  } loc(#loc137)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc145)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc146)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc147)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc150)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc150)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc94)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc94)
    cir.brcond %9 ^bb2, ^bb5 loc(#loc151)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc115)
    cir.copy %10 to %0 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc115)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc83)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc102)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc103)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc106)
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc97)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc153)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc115)
    cir.copy %17 to %3 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc146)
    %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc89)
    cir.store %18, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
    %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc110)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc111)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %23 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc114)
    cir.br ^bb7 loc(#loc108)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc93)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc93)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc81)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_12.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":56:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":56:64)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":25:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":25:64)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":20:1)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":44:1)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":26:13)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":26:31)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:13)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:55)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":36:13)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":36:64)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":37:13)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":37:31)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":40:13)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":40:41)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":22:5)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":43:5)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":22:8)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":22:33)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":23:5)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":32:5)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":34:5)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":24:9)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":31:9)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:29)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:41)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:43)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:53)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:39)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":29:27)
#loc36 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":30:26)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":30:13)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":35:9)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":42:9)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":40:29)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":40:40)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":40:39)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":40:27)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":41:26)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":41:13)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":77:1)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":80:1)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":79:5)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":79:11)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":96:15)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":98:15)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":101:15)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":103:15)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":91:1)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":106:1)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":92:1)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":94:27)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":94:22)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":94:5)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":96:5)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":97:5)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":97:51)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":98:5)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":101:5)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":102:5)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":102:50)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":103:5)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":105:12)
#loc79 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":105:5)
#loc80 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":51:1)
#loc81 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":75:1)
#loc82 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":57:13)
#loc83 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":57:31)
#loc84 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":60:13)
#loc85 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":60:41)
#loc86 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":67:13)
#loc87 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":67:64)
#loc88 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":68:13)
#loc89 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":68:31)
#loc90 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":71:13)
#loc91 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":71:41)
#loc92 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":53:5)
#loc93 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":74:5)
#loc94 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":53:8)
#loc95 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":53:33)
#loc96 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":54:5)
#loc97 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":63:5)
#loc98 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":65:5)
#loc99 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":55:9)
#loc100 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":62:9)
#loc101 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":60:29)
#loc102 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":60:40)
#loc103 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":60:39)
#loc104 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":60:27)
#loc105 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":61:26)
#loc106 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":61:13)
#loc107 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":66:9)
#loc108 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":73:9)
#loc109 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":71:29)
#loc110 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":71:40)
#loc111 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":71:39)
#loc112 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":71:27)
#loc113 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":72:26)
#loc114 = loc("CWE468_Incorrect_Pointer_Scaling__int_12.c":72:13)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc15, #loc16])
#loc123 = loc(fused[#loc17, #loc18])
#loc124 = loc(fused[#loc19, #loc20])
#loc125 = loc(fused[#loc21, #loc22])
#loc126 = loc(fused[#loc23, #loc24])
#loc127 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc128 = loc(fused[#loc28, #loc29])
#loc129 = loc(fused[#loc32, #loc33])
#loc130 = loc(fused[#loc31, #loc33])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc46, #loc47])
#loc133 = loc(fused[#loc48, #loc49])
#loc134 = loc(fused[#loc50, #loc51])
#loc135 = loc(fused[#loc52, #loc53])
#loc136 = loc(fused[#loc54, #loc55])
#loc137 = loc(fused[#loc60, #loc61])
#loc140 = loc(fused[#loc71, #loc72])
#loc141 = loc(fused[#loc75, #loc76])
#loc142 = loc(fused[#loc79, #loc78])
#loc143 = loc(fused[#loc80, #loc81])
#loc144 = loc(fused[#loc82, #loc83])
#loc145 = loc(fused[#loc84, #loc85])
#loc146 = loc(fused[#loc86, #loc87])
#loc147 = loc(fused[#loc88, #loc89])
#loc148 = loc(fused[#loc90, #loc91])
#loc149 = loc(fused[#loc92, #loc93])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc152 = loc(fused[#loc99, #loc100])
#loc153 = loc(fused[#loc107, #loc108])
