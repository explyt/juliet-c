!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_connect_socket_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc180)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc181)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc183)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc184)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc185)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc186)
  cir.func private @close(!s32i) -> !s32i loc(#loc187)
  cir.func private @printHexCharLine(!s8i) loc(#loc188)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_connect_socket_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc190)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc25)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc25)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc191)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc180)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc29)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc195)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc196)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc197)
          %10 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc198)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc38)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc197)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc45)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc46)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc47)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc201)
                cir.scope {
                  %50 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                  %51 = cir.const #cir.int<1> : !s32i loc(#loc54)
                  %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc54)
                  %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc203)
                  cir.if %53 {
                    cir.break loc(#loc56)
                  } loc(#loc204)
                } loc(#loc202)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc205)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc59)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc206)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc207)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc64)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc64)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc208)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc209)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc72)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc72)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc210)
                cir.scope {
                  %50 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                  %51 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc212)
                  %52 = cir.const #cir.int<16> : !u64i loc(#loc213)
                  %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc213)
                  %54 = cir.call @connect(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc85)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc85)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc214)
                  cir.if %57 {
                    cir.break loc(#loc87)
                  } loc(#loc215)
                } loc(#loc211)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc89)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
                %35 = cir.const #cir.int<8> : !s32i loc(#loc90)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc91)
                %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc90)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc90)
                %39 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %40 = cir.call @recv(%32, %34, %38, %39) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
                %41 = cir.cast(integral, %40 : !s64i), !s32i loc(#loc93)
                cir.store %41, %7 : !s32i, !cir.ptr<!s32i> loc(#loc216)
                cir.scope {
                  %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %51 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc99)
                  %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc218)
                  %54 = cir.ternary(%53, true {
                    %55 = cir.const #true loc(#loc100)
                    cir.yield %55 : !cir.bool loc(#loc100)
                  }, false {
                    %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                    %56 = cir.const #cir.int<0> : !s32i loc(#loc102)
                    %57 = cir.cmp(eq, %55, %56) : !s32i, !cir.bool loc(#loc219)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc100)
                      cir.yield %59 : !cir.bool loc(#loc100)
                    }, false {
                      %59 = cir.const #false loc(#loc100)
                      cir.yield %59 : !cir.bool loc(#loc100)
                    }) : (!cir.bool) -> !cir.bool loc(#loc100)
                    cir.yield %58 : !cir.bool loc(#loc100)
                  }) : (!cir.bool) -> !cir.bool loc(#loc100)
                  cir.if %54 {
                    cir.break loc(#loc104)
                  } loc(#loc220)
                } loc(#loc217)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc105)
                %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc105)
                %44 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %45 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc107)
                %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc107)
                cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc221)
                %47 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc108)
                %48 = cir.call @atoi(%47) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc109)
                %49 = cir.cast(integral, %48 : !s32i), !s16i loc(#loc109)
                cir.store %49, %0 : !s16i, !cir.ptr<!s16i> loc(#loc222)
              } loc(#loc200)
              cir.yield loc(#loc42)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc112)
              cir.condition(%14) loc(#loc112)
            } loc(#loc199)
          } loc(#loc199)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc116)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc224)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc119)
            } loc(#loc225)
          } loc(#loc223)
        } loc(#loc194)
      } loc(#loc193)
    } loc(#loc192)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc227)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc123)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc123)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc227)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc124)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc125)
    } loc(#loc226)
    cir.return loc(#loc21)
  } loc(#loc189)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_connect_socket_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc128)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc230)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc130)
    cir.return loc(#loc127)
  } loc(#loc228)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc231)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc136)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc234)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc142)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc142)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc235)
    cir.scope {
      %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc231)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc146)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc136)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc136)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc150)
      } else {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc151)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc152)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc151)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc151)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc238)
      } loc(#loc237)
    } loc(#loc236)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc240)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc157)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc157)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc240)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc158)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc159)
    } loc(#loc239)
    cir.return loc(#loc138)
  } loc(#loc233)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc242)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc165)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc165)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc243)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc180)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc169)
      cir.if %6 {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc171)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc172)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc171)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc171)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc246)
      } loc(#loc245)
    } loc(#loc244)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc248)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc177)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc177)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc248)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc178)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc179)
    } loc(#loc247)
    cir.return loc(#loc161)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":0:0)
#loc1 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":46:1)
#loc2 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":46:25)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":83:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":51:1)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":120:1)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":53:5)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":53:11)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":55:13)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":55:12)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":55:5)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":56:5)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":114:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":56:8)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":57:5)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":58:9)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":113:9)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":63:13)
#loc34 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":63:17)
#loc35 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":64:13)
#loc36 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":64:32)
#loc37 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":65:13)
#loc38 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":65:36)
#loc39 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":66:13)
#loc40 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":66:45)
#loc41 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":67:13)
#loc42 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":102:21)
#loc43 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":68:13)
#loc44 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":101:13)
#loc45 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":76:40)
#loc46 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":76:49)
#loc47 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":76:62)
#loc48 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":76:33)
#loc49 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":76:17)
#loc50 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":76:73)
#loc51 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":77:17)
#loc52 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":80:17)
#loc53 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":77:21)
#loc54 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":77:38)
#loc55 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":78:17)
#loc56 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":79:21)
#loc57 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":81:24)
#loc58 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":81:25)
#loc59 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":81:34)
#loc60 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":81:37)
#loc61 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":81:51)
#loc62 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":81:17)
#loc63 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":81:52)
#loc64 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":82:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":82:17)
#loc67 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":83:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":83:17)
#loc71 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":83:63)
#loc72 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":84:42)
#loc73 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":84:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":84:17)
#loc76 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":84:50)
#loc77 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:17)
#loc78 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":88:17)
#loc79 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:29)
#loc80 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:62)
#loc81 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:63)
#loc82 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:72)
#loc83 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:86)
#loc84 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:21)
#loc85 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":85:92)
#loc86 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":86:17)
#loc87 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":87:21)
#loc88 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:35)
#loc89 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:50)
#loc90 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:63)
#loc91 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:81)
#loc92 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:84)
#loc93 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:30)
#loc94 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:17)
#loc95 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":92:85)
#loc96 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":93:17)
#loc97 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":96:17)
#loc98 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":93:21)
#loc99 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":93:35)
#loc100 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":93:48)
#loc101 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":93:51)
#loc102 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":93:65)
#loc103 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":94:17)
#loc104 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":95:21)
#loc105 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":98:43)
#loc106 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":98:29)
#loc107 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":98:17)
#loc108 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":100:36)
#loc109 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":100:31)
#loc110 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":100:17)
#loc111 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":100:47)
#loc112 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":102:20)
#loc113 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":103:13)
#loc114 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":106:13)
#loc115 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":103:17)
#loc116 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":103:34)
#loc117 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":104:13)
#loc118 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":105:30)
#loc119 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":105:17)
#loc120 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":115:5)
#loc121 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":119:5)
#loc122 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":117:9)
#loc123 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":117:31)
#loc124 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":118:26)
#loc125 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":118:9)
#loc126 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":167:1)
#loc127 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":171:1)
#loc128 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":169:5)
#loc129 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":169:14)
#loc130 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":170:5)
#loc131 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":170:14)
#loc132 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":47:1)
#loc133 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":47:26)
#loc134 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc135 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc136 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":135:19)
#loc137 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":127:1)
#loc138 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":147:1)
#loc139 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":129:5)
#loc140 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":129:11)
#loc141 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":131:13)
#loc142 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":131:12)
#loc143 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":131:5)
#loc144 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":132:5)
#loc145 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":141:5)
#loc146 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":132:8)
#loc147 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":133:5)
#loc148 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":136:5)
#loc149 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":138:5)
#loc150 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":135:9)
#loc151 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":140:16)
#loc152 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":140:25)
#loc153 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":140:9)
#loc154 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":142:5)
#loc155 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":146:5)
#loc156 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":144:9)
#loc157 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":144:31)
#loc158 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":145:26)
#loc159 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":145:9)
#loc160 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":150:1)
#loc161 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":165:1)
#loc162 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":152:5)
#loc163 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":152:11)
#loc164 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":154:13)
#loc165 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":154:12)
#loc166 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":154:5)
#loc167 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":155:5)
#loc168 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":159:5)
#loc169 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":155:8)
#loc170 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":156:5)
#loc171 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":158:16)
#loc172 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":158:25)
#loc173 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":158:9)
#loc174 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":160:5)
#loc175 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":164:5)
#loc176 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":162:9)
#loc177 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":162:31)
#loc178 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":163:26)
#loc179 = loc("CWE197_Numeric_Truncation_Error__short_connect_socket_05.c":163:9)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc5, #loc6])
#loc183 = loc(fused[#loc8, #loc9])
#loc184 = loc(fused[#loc10, #loc11])
#loc185 = loc(fused[#loc12, #loc13])
#loc186 = loc(fused[#loc14, #loc15])
#loc187 = loc(fused[#loc16, #loc17])
#loc188 = loc(fused[#loc18, #loc19])
#loc189 = loc(fused[#loc20, #loc21])
#loc190 = loc(fused[#loc22, #loc23])
#loc191 = loc(fused[#loc26, #loc24])
#loc192 = loc(fused[#loc27, #loc28])
#loc193 = loc(fused[#loc30, #loc28])
#loc194 = loc(fused[#loc31, #loc32])
#loc195 = loc(fused[#loc33, #loc34])
#loc196 = loc(fused[#loc35, #loc36])
#loc197 = loc(fused[#loc37, #loc38])
#loc198 = loc(fused[#loc39, #loc40])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc43, #loc44])
#loc201 = loc(fused[#loc49, #loc50])
#loc202 = loc(fused[#loc51, #loc52])
#loc203 = loc(fused[#loc53, #loc54])
#loc204 = loc(fused[#loc55, #loc52])
#loc205 = loc(fused[#loc57, #loc58])
#loc206 = loc(fused[#loc60, #loc61])
#loc207 = loc(fused[#loc62, #loc63])
#loc208 = loc(fused[#loc66, #loc64])
#loc209 = loc(fused[#loc70, #loc71])
#loc210 = loc(fused[#loc75, #loc76])
#loc211 = loc(fused[#loc77, #loc78])
#loc212 = loc(fused[#loc80, #loc81])
#loc213 = loc(fused[#loc82, #loc83])
#loc214 = loc(fused[#loc84, #loc85])
#loc215 = loc(fused[#loc86, #loc78])
#loc216 = loc(fused[#loc94, #loc95])
#loc217 = loc(fused[#loc96, #loc97])
#loc218 = loc(fused[#loc98, #loc99])
#loc219 = loc(fused[#loc101, #loc102])
#loc220 = loc(fused[#loc103, #loc97])
#loc221 = loc(fused[#loc107, #loc105])
#loc222 = loc(fused[#loc110, #loc111])
#loc223 = loc(fused[#loc113, #loc114])
#loc224 = loc(fused[#loc115, #loc116])
#loc225 = loc(fused[#loc117, #loc114])
#loc226 = loc(fused[#loc120, #loc121])
#loc227 = loc(fused[#loc122, #loc123])
#loc228 = loc(fused[#loc126, #loc127])
#loc229 = loc(fused[#loc128, #loc129])
#loc230 = loc(fused[#loc130, #loc131])
#loc231 = loc(fused[#loc132, #loc133])
#loc232 = loc(fused[#loc134, #loc135])
#loc233 = loc(fused[#loc137, #loc138])
#loc234 = loc(fused[#loc139, #loc140])
#loc235 = loc(fused[#loc143, #loc141])
#loc236 = loc(fused[#loc144, #loc145])
#loc237 = loc(fused[#loc147, #loc148, #loc149, #loc145])
#loc238 = loc(fused[#loc153, #loc152])
#loc239 = loc(fused[#loc154, #loc155])
#loc240 = loc(fused[#loc156, #loc157])
#loc241 = loc(fused[#loc160, #loc161])
#loc242 = loc(fused[#loc162, #loc163])
#loc243 = loc(fused[#loc166, #loc164])
#loc244 = loc(fused[#loc167, #loc168])
#loc245 = loc(fused[#loc170, #loc168])
#loc246 = loc(fused[#loc173, #loc172])
#loc247 = loc(fused[#loc174, #loc175])
#loc248 = loc(fused[#loc176, #loc177])
