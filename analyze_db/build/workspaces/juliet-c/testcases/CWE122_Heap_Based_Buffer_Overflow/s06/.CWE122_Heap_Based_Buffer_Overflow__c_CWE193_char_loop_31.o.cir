!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc133)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc134)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc136)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc139)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc134)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc143)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc144)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    cir.store %6, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc28)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc29)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc29)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc147)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc148)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %13, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
    cir.brcond %17 ^bb2, ^bb3 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc41)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb3 loc(#loc35)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc35)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb6 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %23 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc134)
    cir.copy %23 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc134)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
    %25 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
    cir.store %26, %4 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.br ^bb7 loc(#loc157)
  ^bb7:  // pred: ^bb6
    %27 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc52)
    cir.store %28, %3 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb8 loc(#loc157)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc56)
    %33 = cir.binop(add, %30, %32) : !u64i loc(#loc159)
    %34 = cir.cmp(lt, %29, %33) : !u64i, !cir.bool loc(#loc160)
    cir.brcond %34 ^bb9, ^bb13 loc(#loc57)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc161)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc60)
    %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc60)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %40 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb11 loc(#loc51)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc51)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc66)
    cir.store %43, %3 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.br ^bb8 loc(#loc157)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc51)
  ^bb14:  // pred: ^bb13
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb15 loc(#loc45)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc43)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc16)
  } loc(#loc140)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc133)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc169)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc170)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc86)
    cir.store %6, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc88)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc89)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc89)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc89)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc173)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc174)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
    cir.store %15, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc178)
    cir.brcond %19 ^bb2, ^bb3 loc(#loc179)
  ^bb2:  // pred: ^bb1
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc101)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc103)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb6 loc(#loc181)
  ^bb6:  // pred: ^bb5
    %25 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc133)
    cir.copy %25 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc133)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc108)
    %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc109)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc108)
    cir.store %28, %4 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb7 loc(#loc183)
  ^bb7:  // pred: ^bb6
    %29 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc114)
    cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb8 loc(#loc183)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %31 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc118)
    %35 = cir.binop(add, %32, %34) : !u64i loc(#loc185)
    %36 = cir.cmp(lt, %31, %35) : !u64i, !cir.bool loc(#loc186)
    cir.brcond %36 ^bb9, ^bb13 loc(#loc119)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc187)
  ^bb10:  // pred: ^bb9
    %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc122)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc122)
    %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc122)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %42 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc125)
    cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    cir.br ^bb11 loc(#loc113)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc113)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc128)
    cir.store %45, %3 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb8 loc(#loc183)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc113)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
    cir.br ^bb15 loc(#loc107)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc105)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc76)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":70:13)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":70:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":39:13)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":39:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":52:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":36:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":36:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":37:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":37:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":40:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":40:20)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":40:23)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":30:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":30:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":31:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":31:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":33:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":33:27)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":33:30)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":33:41)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":33:42)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":33:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:33)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:17)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:23)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:24)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:30)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":34:29)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":35:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":51:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":38:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":50:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":41:25)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":41:32)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":41:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":41:38)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":47:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:18)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:25)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:41)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":45:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":46:34)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":46:27)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":46:17)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":46:22)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":46:23)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":46:35)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:45)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":44:44)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":48:23)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":48:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":49:18)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":49:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":85:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":88:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":87:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":87:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":59:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":83:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":67:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":67:27)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":68:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":68:23)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":71:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":71:20)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":71:23)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":61:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":61:12)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":62:12)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":62:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:20)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:28)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:31)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:34)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:45)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:27)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:46)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":64:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:33)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:23)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:24)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:30)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":65:29)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":66:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":82:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":69:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":81:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":72:25)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":72:32)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":72:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":72:38)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":78:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:22)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:18)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:25)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:29)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:41)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:27)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":76:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":77:34)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":77:27)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":77:17)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":77:22)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":77:23)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":77:35)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:45)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":75:44)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":79:23)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":79:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":80:18)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_31.c":80:13)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc17, #loc18])
#loc142 = loc(fused[#loc19, #loc20])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc21, #loc23])
#loc145 = loc(fused[#loc24, #loc25])
#loc146 = loc(fused[#loc27, #loc26])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc29, #loc31])
#loc149 = loc(fused[#loc28, #loc32])
#loc150 = loc(fused[#loc33, #loc32])
#loc151 = loc(fused[#loc34, #loc35])
#loc152 = loc(fused[#loc36, #loc37])
#loc153 = loc(fused[#loc38, #loc35])
#loc154 = loc(fused[#loc42, #loc43])
#loc155 = loc(fused[#loc44, #loc45])
#loc156 = loc(fused[#loc48, #loc49])
#loc157 = loc(fused[#loc50, #loc51])
#loc158 = loc(fused[#loc53, #loc52])
#loc159 = loc(fused[#loc55, #loc56])
#loc160 = loc(fused[#loc54, #loc56])
#loc161 = loc(fused[#loc58, #loc51])
#loc162 = loc(fused[#loc61, #loc64])
#loc163 = loc(fused[#loc66, #loc65])
#loc164 = loc(fused[#loc71, #loc72])
#loc165 = loc(fused[#loc73, #loc74])
#loc166 = loc(fused[#loc75, #loc76])
#loc167 = loc(fused[#loc77, #loc78])
#loc168 = loc(fused[#loc79, #loc80])
#loc169 = loc(fused[#loc81, #loc82])
#loc170 = loc(fused[#loc81, #loc83])
#loc171 = loc(fused[#loc84, #loc85])
#loc172 = loc(fused[#loc87, #loc86])
#loc173 = loc(fused[#loc91, #loc92])
#loc174 = loc(fused[#loc93, #loc92])
#loc175 = loc(fused[#loc88, #loc94])
#loc176 = loc(fused[#loc95, #loc94])
#loc177 = loc(fused[#loc96, #loc97])
#loc178 = loc(fused[#loc98, #loc99])
#loc179 = loc(fused[#loc100, #loc97])
#loc180 = loc(fused[#loc104, #loc105])
#loc181 = loc(fused[#loc106, #loc107])
#loc182 = loc(fused[#loc110, #loc111])
#loc183 = loc(fused[#loc112, #loc113])
#loc184 = loc(fused[#loc115, #loc114])
#loc185 = loc(fused[#loc117, #loc118])
#loc186 = loc(fused[#loc116, #loc118])
#loc187 = loc(fused[#loc120, #loc113])
#loc188 = loc(fused[#loc123, #loc126])
#loc189 = loc(fused[#loc128, #loc127])
