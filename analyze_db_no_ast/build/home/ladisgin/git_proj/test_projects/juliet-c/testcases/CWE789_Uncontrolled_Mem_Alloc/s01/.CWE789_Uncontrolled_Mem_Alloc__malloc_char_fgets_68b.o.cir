!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68_badData : !u64i {alignment = 8 : i64} loc(#loc144)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc146)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc149)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b_badSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68_badData : !cir.ptr<!u64i> loc(#loc144)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc151)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc153)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc25)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc155)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc156)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc28)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc32)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc33)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc158)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc159)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc32)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc163)
            %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc42)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc46)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
            } loc(#loc164)
          } loc(#loc162)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc47)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc50)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc51)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
        } else {
          %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc53)
        } loc(#loc157)
      } loc(#loc154)
    } loc(#loc152)
    cir.return loc(#loc16)
  } loc(#loc150)
  cir.global "private"  external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68_goodG2BData : !u64i {alignment = 8 : i64} loc(#loc165)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b_goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68_goodG2BData : !cir.ptr<!u64i> loc(#loc165)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc169)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc66)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc171)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc172)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc69)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc73)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc174)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc175)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc179)
            %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc83)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc85)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc86)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc87)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
            } loc(#loc180)
          } loc(#loc178)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc88)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc90)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc90)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc88)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc92)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
        } else {
          %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc95)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc95)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc96)
        } loc(#loc173)
      } loc(#loc170)
    } loc(#loc168)
    cir.return loc(#loc57)
  } loc(#loc166)
  cir.global "private"  external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68_goodB2GData : !u64i {alignment = 8 : i64} loc(#loc181)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b_goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68_goodB2GData : !cir.ptr<!u64i> loc(#loc181)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc185)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc110)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc187)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc188)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc113)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc115)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc116)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc116)
          %12 = cir.cmp(lt, %9, %11) : !u64i, !s32i loc(#loc189)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc117)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc114)
            cir.yield %15 : !cir.bool loc(#loc114)
          }, false {
            %15 = cir.const #false loc(#loc114)
            cir.yield %15 : !cir.bool loc(#loc114)
          }) : (!cir.bool) -> !cir.bool loc(#loc114)
          cir.yield %14 : !cir.bool loc(#loc114)
        }, false {
          %9 = cir.const #false loc(#loc114)
          cir.yield %9 : !cir.bool loc(#loc114)
        }) : (!cir.bool) -> !cir.bool loc(#loc114)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc121)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc122)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc191)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc192)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
          cir.store %14, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
          cir.scope {
            %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc196)
            %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc131)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc135)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc133)
            } loc(#loc197)
          } loc(#loc195)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc136)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc138)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc138)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc141)
          %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
        } else {
          %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc99)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc99)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc143)
        } loc(#loc190)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc101)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":28:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":28:15)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":47:30)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":53:23)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":34:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":56:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":36:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":36:19)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":37:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":55:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":38:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":38:16)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":42:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":54:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":42:13)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":42:20)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":42:39)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":42:18)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":43:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":50:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":52:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":44:32)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":44:39)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":44:44)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":44:55)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":44:56)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":44:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:45)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:29)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:26)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:35)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:36)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:42)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":45:41)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":47:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":47:20)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":48:23)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":48:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":49:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":49:18)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":53:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":29:1)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":29:15)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":63:1)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":85:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":65:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":65:19)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":66:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":84:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":67:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":67:16)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":71:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":83:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":71:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":71:20)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":71:39)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":71:18)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":72:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":79:9)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":81:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":73:32)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":73:39)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":73:44)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":73:55)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":73:56)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":73:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:45)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:29)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:26)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:35)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:36)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:42)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":74:41)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":76:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":76:20)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":76:30)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":77:23)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":77:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":78:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":78:18)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":82:23)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":82:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":30:1)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":30:15)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":107:23)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":88:1)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":110:1)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":90:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":90:19)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":91:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":109:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":92:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":92:16)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":108:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:13)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:20)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:39)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:18)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:41)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:44)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:51)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":96:49)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":97:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":104:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":106:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":98:32)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":98:39)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":98:44)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":98:55)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":98:56)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":98:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:45)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:29)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:26)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:35)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:36)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:42)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":99:41)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":101:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":101:20)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":101:30)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":102:23)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":102:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":103:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":103:18)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_68b.c":107:13)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc10, #loc11])
#loc149 = loc(fused[#loc12, #loc13])
#loc150 = loc(fused[#loc15, #loc16])
#loc151 = loc(fused[#loc17, #loc18])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc21, #loc22])
#loc154 = loc(fused[#loc23, #loc24])
#loc155 = loc(fused[#loc26, #loc27])
#loc156 = loc(fused[#loc25, #loc27])
#loc157 = loc(fused[#loc29, #loc30, #loc31, #loc24])
#loc158 = loc(fused[#loc34, #loc35])
#loc159 = loc(fused[#loc33, #loc35])
#loc160 = loc(fused[#loc32, #loc36])
#loc161 = loc(fused[#loc37, #loc36])
#loc162 = loc(fused[#loc38, #loc39])
#loc163 = loc(fused[#loc40, #loc41])
#loc164 = loc(fused[#loc43, #loc39])
#loc165 = loc(fused[#loc54, #loc55])
#loc166 = loc(fused[#loc56, #loc57])
#loc167 = loc(fused[#loc58, #loc59])
#loc168 = loc(fused[#loc60, #loc61])
#loc169 = loc(fused[#loc62, #loc63])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc67, #loc68])
#loc172 = loc(fused[#loc66, #loc68])
#loc173 = loc(fused[#loc70, #loc71, #loc72, #loc65])
#loc174 = loc(fused[#loc75, #loc76])
#loc175 = loc(fused[#loc74, #loc76])
#loc176 = loc(fused[#loc73, #loc77])
#loc177 = loc(fused[#loc78, #loc77])
#loc178 = loc(fused[#loc79, #loc80])
#loc179 = loc(fused[#loc81, #loc82])
#loc180 = loc(fused[#loc84, #loc80])
#loc181 = loc(fused[#loc97, #loc98])
#loc182 = loc(fused[#loc100, #loc101])
#loc183 = loc(fused[#loc102, #loc103])
#loc184 = loc(fused[#loc104, #loc105])
#loc185 = loc(fused[#loc106, #loc107])
#loc186 = loc(fused[#loc108, #loc109])
#loc187 = loc(fused[#loc111, #loc112])
#loc188 = loc(fused[#loc110, #loc112])
#loc189 = loc(fused[#loc115, #loc116])
#loc190 = loc(fused[#loc118, #loc119, #loc120, #loc109])
#loc191 = loc(fused[#loc123, #loc124])
#loc192 = loc(fused[#loc122, #loc124])
#loc193 = loc(fused[#loc121, #loc125])
#loc194 = loc(fused[#loc126, #loc125])
#loc195 = loc(fused[#loc127, #loc128])
#loc196 = loc(fused[#loc129, #loc130])
#loc197 = loc(fused[#loc132, #loc128])
