!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fixed_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE617_Reachable_Assertion__fixed_68_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc41)
  cir.func no_proto private @CWE617_Reachable_Assertion__fixed_68b_badSink(...) loc(#loc42)
  cir.func no_proto @CWE617_Reachable_Assertion__fixed_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc44)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc10)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc12)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc12)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %7 = cir.get_global @CWE617_Reachable_Assertion__fixed_68_badData : !cir.ptr<!s32i> loc(#loc41)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    %8 = cir.get_global @CWE617_Reachable_Assertion__fixed_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc48)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc48)
    cir.call %9() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    cir.return loc(#loc6)
  } loc(#loc43)
  cir.func no_proto @CWE617_Reachable_Assertion__fixed_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc50)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc20)
  } loc(#loc49)
  cir.global external dsolocal @CWE617_Reachable_Assertion__fixed_68_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc51)
  cir.func no_proto private @CWE617_Reachable_Assertion__fixed_68b_goodG2BSink(...) loc(#loc52)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc54)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc34)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %7 = cir.get_global @CWE617_Reachable_Assertion__fixed_68_goodG2BData : !cir.ptr<!s32i> loc(#loc51)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    %8 = cir.get_global @CWE617_Reachable_Assertion__fixed_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc58)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc58)
    cir.call %9() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc28)
  } loc(#loc53)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fixed_68a.c":0:0)
#loc1 = loc("CWE617_Reachable_Assertion__fixed_68a.c":23:1)
#loc2 = loc("CWE617_Reachable_Assertion__fixed_68a.c":23:5)
#loc3 = loc("CWE617_Reachable_Assertion__fixed_68a.c":29:1)
#loc4 = loc("CWE617_Reachable_Assertion__fixed_68a.c":29:52)
#loc5 = loc("CWE617_Reachable_Assertion__fixed_68a.c":31:1)
#loc6 = loc("CWE617_Reachable_Assertion__fixed_68a.c":40:1)
#loc7 = loc("CWE617_Reachable_Assertion__fixed_68a.c":33:5)
#loc8 = loc("CWE617_Reachable_Assertion__fixed_68a.c":33:9)
#loc9 = loc("CWE617_Reachable_Assertion__fixed_68a.c":35:13)
#loc10 = loc("CWE617_Reachable_Assertion__fixed_68a.c":35:12)
#loc11 = loc("CWE617_Reachable_Assertion__fixed_68a.c":35:5)
#loc12 = loc("CWE617_Reachable_Assertion__fixed_68a.c":37:12)
#loc13 = loc("CWE617_Reachable_Assertion__fixed_68a.c":37:25)
#loc14 = loc("CWE617_Reachable_Assertion__fixed_68a.c":37:5)
#loc15 = loc("CWE617_Reachable_Assertion__fixed_68a.c":38:52)
#loc16 = loc("CWE617_Reachable_Assertion__fixed_68a.c":38:5)
#loc17 = loc("CWE617_Reachable_Assertion__fixed_68a.c":39:5)
#loc18 = loc("CWE617_Reachable_Assertion__fixed_68a.c":39:51)
#loc19 = loc("CWE617_Reachable_Assertion__fixed_68a.c":61:1)
#loc20 = loc("CWE617_Reachable_Assertion__fixed_68a.c":64:1)
#loc21 = loc("CWE617_Reachable_Assertion__fixed_68a.c":63:5)
#loc22 = loc("CWE617_Reachable_Assertion__fixed_68a.c":63:13)
#loc23 = loc("CWE617_Reachable_Assertion__fixed_68a.c":24:1)
#loc24 = loc("CWE617_Reachable_Assertion__fixed_68a.c":24:5)
#loc25 = loc("CWE617_Reachable_Assertion__fixed_68a.c":47:1)
#loc26 = loc("CWE617_Reachable_Assertion__fixed_68a.c":47:56)
#loc27 = loc("CWE617_Reachable_Assertion__fixed_68a.c":50:1)
#loc28 = loc("CWE617_Reachable_Assertion__fixed_68a.c":59:1)
#loc29 = loc("CWE617_Reachable_Assertion__fixed_68a.c":52:5)
#loc30 = loc("CWE617_Reachable_Assertion__fixed_68a.c":52:9)
#loc31 = loc("CWE617_Reachable_Assertion__fixed_68a.c":54:13)
#loc32 = loc("CWE617_Reachable_Assertion__fixed_68a.c":54:12)
#loc33 = loc("CWE617_Reachable_Assertion__fixed_68a.c":54:5)
#loc34 = loc("CWE617_Reachable_Assertion__fixed_68a.c":56:12)
#loc35 = loc("CWE617_Reachable_Assertion__fixed_68a.c":56:25)
#loc36 = loc("CWE617_Reachable_Assertion__fixed_68a.c":56:5)
#loc37 = loc("CWE617_Reachable_Assertion__fixed_68a.c":57:56)
#loc38 = loc("CWE617_Reachable_Assertion__fixed_68a.c":57:5)
#loc39 = loc("CWE617_Reachable_Assertion__fixed_68a.c":58:5)
#loc40 = loc("CWE617_Reachable_Assertion__fixed_68a.c":58:55)
#loc41 = loc(fused[#loc1, #loc2])
#loc42 = loc(fused[#loc3, #loc4])
#loc43 = loc(fused[#loc5, #loc6])
#loc44 = loc(fused[#loc7, #loc8])
#loc45 = loc(fused[#loc11, #loc9])
#loc46 = loc(fused[#loc14, #loc13])
#loc47 = loc(fused[#loc16, #loc15])
#loc48 = loc(fused[#loc17, #loc18])
#loc49 = loc(fused[#loc19, #loc20])
#loc50 = loc(fused[#loc21, #loc22])
#loc51 = loc(fused[#loc23, #loc24])
#loc52 = loc(fused[#loc25, #loc26])
#loc53 = loc(fused[#loc27, #loc28])
#loc54 = loc(fused[#loc29, #loc30])
#loc55 = loc(fused[#loc33, #loc31])
#loc56 = loc(fused[#loc36, #loc35])
#loc57 = loc(fused[#loc38, #loc37])
#loc58 = loc(fused[#loc39, #loc40])
