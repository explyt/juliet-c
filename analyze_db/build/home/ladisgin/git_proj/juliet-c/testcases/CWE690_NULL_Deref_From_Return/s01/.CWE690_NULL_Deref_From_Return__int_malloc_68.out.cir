!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE690_NULL_Deref_From_Return__int_malloc_68_badDataForBadSink : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc42)
  cir.func private @printIntLine(!s32i) loc(#loc43)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc44)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_68b_badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc46)
    %1 = cir.get_global @CWE690_NULL_Deref_From_Return__int_malloc_68_badDataForBadSink : !cir.ptr<!cir.ptr<!s32i>> loc(#loc42)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc46)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc11)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %6 = cir.ptr_stride(%4 : !cir.ptr<!s32i>, %5 : !s32i), !cir.ptr<!s32i> loc(#loc14)
    cir.store %3, %6 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc17)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc18)
    %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc19)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc20)
    cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc19)
    cir.return loc(#loc8)
  } loc(#loc45)
  cir.global "private" external @CWE690_NULL_Deref_From_Return__int_malloc_68_badDataForGoodSink : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc48)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_68b_goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc50)
    %1 = cir.get_global @CWE690_NULL_Deref_From_Return__int_malloc_68_badDataForGoodSink : !cir.ptr<!cir.ptr<!s32i>> loc(#loc48)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc50)
    cir.br ^bb1 loc(#loc51)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
    %6 = cir.cmp(ne, %3, %5) : !cir.ptr<!s32i>, !cir.bool loc(#loc52)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc53)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc32)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc35)
    cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc38)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc39)
    %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc40)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc24)
  } loc(#loc49)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_68b.c":0:0)
#loc1 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":21:1)
#loc2 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":21:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":27:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":34:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":29:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":29:18)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":31:15)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":31:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":31:10)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":31:11)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":32:18)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":32:23)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":32:24)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":32:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":33:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":33:10)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":23:1)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":23:14)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":40:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":50:1)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":42:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":42:18)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":44:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":49:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":44:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":44:17)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":45:5)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":46:19)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":46:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":46:14)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":46:15)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":47:22)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":47:27)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":47:28)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":47:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":48:9)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_malloc_68b.c":48:14)
#loc42 = loc(fused[#loc1, #loc2])
#loc43 = loc(fused[#loc3, #loc4])
#loc44 = loc(fused[#loc5, #loc6])
#loc45 = loc(fused[#loc7, #loc8])
#loc46 = loc(fused[#loc9, #loc10])
#loc47 = loc(fused[#loc12, #loc11])
#loc48 = loc(fused[#loc21, #loc22])
#loc49 = loc(fused[#loc23, #loc24])
#loc50 = loc(fused[#loc25, #loc26])
#loc51 = loc(fused[#loc27, #loc28])
#loc52 = loc(fused[#loc29, #loc30])
#loc53 = loc(fused[#loc31, #loc28])
#loc54 = loc(fused[#loc33, #loc32])
