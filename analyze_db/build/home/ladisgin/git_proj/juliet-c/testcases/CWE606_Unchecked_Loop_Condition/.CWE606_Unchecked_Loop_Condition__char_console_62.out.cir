!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":31:16)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":31:24)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":65:20)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":65:28)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":72:20)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":72:28)
#true = #cir.bool<true> : !cir.bool
#loc136 = loc(fused[#loc12, #loc13])
#loc158 = loc(fused[#loc70, #loc71])
#loc160 = loc(fused[#loc77, #loc78])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc133)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func @_ZN48CWE606_Unchecked_Loop_Condition__char_console_629badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc138)
      %2 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc19)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc19)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc138)
      cir.scope {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
        %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
        %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc140)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc25)
        %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc141)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
            %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc31)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc32)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc32)
            %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc144)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc144)
            %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %24 = cir.call @fgets(%16, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc36)
            %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc145)
            cir.if %26 {
              %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc40)
              cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc147)
              cir.scope {
                %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc47)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc47)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc149)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
                  %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                  %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc51)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc51)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc150)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc52)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc49)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc49)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc53)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc53)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc151)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc48)
                    cir.yield %49 : !cir.bool loc(#loc48)
                  }, false {
                    %49 = cir.const #false loc(#loc48)
                    cir.yield %49 : !cir.bool loc(#loc48)
                  }) : (!cir.bool) -> !cir.bool loc(#loc48)
                  cir.yield %48 : !cir.bool loc(#loc48)
                }, false {
                  %36 = cir.const #false loc(#loc48)
                  cir.yield %36 : !cir.bool loc(#loc48)
                }) : (!cir.bool) -> !cir.bool loc(#loc48)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc55)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
                  %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                  %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc58)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc153)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                  cir.store %36, %43 : !s8i, !cir.ptr<!s8i> loc(#loc154)
                } loc(#loc152)
              } loc(#loc148)
            } else {
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc60)
              %29 = cir.const #cir.int<0> : !s8i loc(#loc61)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc64)
              cir.store %29, %33 : !s8i, !cir.ptr<!s8i> loc(#loc155)
            } loc(#loc146)
          } loc(#loc143)
        } loc(#loc142)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc11)
  } loc(#loc135)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc67)
  cir.func @_ZN48CWE606_Unchecked_Loop_Condition__char_console_6213goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc158)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %1 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc73)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc67)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc67)
    %6 = cir.call @strcpy(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc73)
    cir.return loc(#loc69)
  } loc(#loc157)
  cir.func @_ZN48CWE606_Unchecked_Loop_Condition__char_console_6213goodB2GSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc160)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc162)
      %2 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc84)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc84)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc162)
      cir.scope {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc88)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc88)
        %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc89)
        %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc164)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc90)
        %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc165)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
            %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc95)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc96)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc97)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc97)
            %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
            %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc168)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc168)
            %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
            %24 = cir.call @fgets(%16, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc100)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc101)
            %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
            cir.if %26 {
              %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc105)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc105)
              cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc171)
              cir.scope {
                %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc111)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc112)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc112)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc173)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
                  %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
                  %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc115)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc116)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc174)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc117)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc114)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc114)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc118)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc118)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc175)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc113)
                    cir.yield %49 : !cir.bool loc(#loc113)
                  }, false {
                    %49 = cir.const #false loc(#loc113)
                    cir.yield %49 : !cir.bool loc(#loc113)
                  }) : (!cir.bool) -> !cir.bool loc(#loc113)
                  cir.yield %48 : !cir.bool loc(#loc113)
                }, false {
                  %36 = cir.const #false loc(#loc113)
                  cir.yield %36 : !cir.bool loc(#loc113)
                }) : (!cir.bool) -> !cir.bool loc(#loc113)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc120)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
                  %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
                  %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc122)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc123)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc123)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc177)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc124)
                  cir.store %36, %43 : !s8i, !cir.ptr<!s8i> loc(#loc178)
                } loc(#loc176)
              } loc(#loc172)
            } else {
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc125)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc125)
              cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc126)
              %29 = cir.const #cir.int<0> : !s8i loc(#loc127)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc130)
              cir.store %29, %33 : !s8i, !cir.ptr<!s8i> loc(#loc179)
            } loc(#loc170)
          } loc(#loc167)
        } loc(#loc166)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc76)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":52:27)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":31:1)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":58:1)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":32:1)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":33:5)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":57:5)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":35:9)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":35:37)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":35:26)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":35:33)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":37:9)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":56:9)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":37:13)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":37:17)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":37:27)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":38:9)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:13)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":55:13)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:23)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:28)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:27)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:43)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:47)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:57)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:17)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":40:67)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":41:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":49:13)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":51:13)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":44:27)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":44:34)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":44:17)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":44:38)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:17)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":48:17)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:21)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:31)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:33)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:36)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:41)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:49)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:50)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":45:55)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":46:17)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":47:39)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":47:21)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":47:26)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":47:34)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":47:35)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":52:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":54:33)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":54:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":54:22)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":54:29)
#loc65 = loc("/usr/include/string.h":141:1)
#loc66 = loc("/usr/include/string.h":142:14)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":68:18)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":65:1)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":69:1)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":66:1)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":68:5)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":68:12)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":72:1)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":99:1)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":73:1)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":74:5)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":98:5)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":76:9)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":76:37)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":76:26)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":76:33)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":78:9)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":97:9)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":78:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":78:17)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":78:27)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":79:9)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:13)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":96:13)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:23)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:28)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:27)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:43)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:47)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:57)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":81:67)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":82:13)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":90:13)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":92:13)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":85:27)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":85:34)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":85:17)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":85:38)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":89:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:21)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:31)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:33)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:36)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:41)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:49)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:50)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":86:55)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":87:17)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":88:39)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":88:21)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":88:26)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":88:34)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":88:35)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":93:27)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":93:17)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":95:33)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":95:17)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":95:22)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_62b.cpp":95:29)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc10, #loc11])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc21, #loc22])
#loc140 = loc(fused[#loc23, #loc24])
#loc141 = loc(fused[#loc23, #loc25])
#loc142 = loc(fused[#loc26, #loc22])
#loc143 = loc(fused[#loc27, #loc28])
#loc144 = loc(fused[#loc32, #loc33])
#loc145 = loc(fused[#loc35, #loc36])
#loc146 = loc(fused[#loc37, #loc38, #loc39, #loc28])
#loc147 = loc(fused[#loc42, #loc43])
#loc148 = loc(fused[#loc44, #loc45])
#loc149 = loc(fused[#loc46, #loc47])
#loc150 = loc(fused[#loc50, #loc51])
#loc151 = loc(fused[#loc49, #loc53])
#loc152 = loc(fused[#loc54, #loc45])
#loc153 = loc(fused[#loc57, #loc58])
#loc154 = loc(fused[#loc56, #loc55])
#loc155 = loc(fused[#loc62, #loc61])
#loc156 = loc(fused[#loc65, #loc66])
#loc157 = loc(fused[#loc68, #loc69])
#loc159 = loc(fused[#loc75, #loc76])
#loc161 = loc(fused[#loc80, #loc81])
#loc162 = loc(fused[#loc82, #loc83])
#loc163 = loc(fused[#loc86, #loc87])
#loc164 = loc(fused[#loc88, #loc89])
#loc165 = loc(fused[#loc88, #loc90])
#loc166 = loc(fused[#loc91, #loc87])
#loc167 = loc(fused[#loc92, #loc93])
#loc168 = loc(fused[#loc97, #loc98])
#loc169 = loc(fused[#loc100, #loc101])
#loc170 = loc(fused[#loc102, #loc103, #loc104, #loc93])
#loc171 = loc(fused[#loc107, #loc108])
#loc172 = loc(fused[#loc109, #loc110])
#loc173 = loc(fused[#loc111, #loc112])
#loc174 = loc(fused[#loc115, #loc116])
#loc175 = loc(fused[#loc114, #loc118])
#loc176 = loc(fused[#loc119, #loc110])
#loc177 = loc(fused[#loc122, #loc123])
#loc178 = loc(fused[#loc121, #loc120])
#loc179 = loc(fused[#loc128, #loc127])
