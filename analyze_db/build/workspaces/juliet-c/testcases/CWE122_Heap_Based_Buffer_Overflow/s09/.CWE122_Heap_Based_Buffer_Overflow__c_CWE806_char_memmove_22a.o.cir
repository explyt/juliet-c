!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc161)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc163)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc164)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc167)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc22)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc171)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc172)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc34)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_badGlobal : !cir.ptr<!s32i> loc(#loc161)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_badSource(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc38)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc169)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc169)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc45)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc181)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc182)
    cir.libc.memmove %29 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc183)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc51)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc52)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc52)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc54)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc57)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc16)
  } loc(#loc168)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc185)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc187)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc190)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc77)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc78)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc194)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc195)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc196)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc199)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc200)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc88)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc90)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
    cir.br ^bb3 loc(#loc84)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc84)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc185)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B1Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc94)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.br ^bb5 loc(#loc203)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc192)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc192)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc99)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc101)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc101)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc204)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc205)
    cir.libc.memmove %29 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc206)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc107)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc108)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc108)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc110)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc113)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc72)
  } loc(#loc191)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc208)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc123)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc124)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc212)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc213)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc217)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc134)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc136)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc186)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22_goodG2B2Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc140)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.br ^bb5 loc(#loc221)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc210)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc210)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc145)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc147)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc147)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc222)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc223)
    cir.libc.memmove %29 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc224)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc153)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc154)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc154)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc156)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc225)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %38 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc159)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
    cir.br ^bb6 loc(#loc144)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc118)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":24:77)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":26:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":26:89)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":43:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":36:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":36:25)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":30:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":30:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":31:20)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":31:27)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":31:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":31:42)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":31:43)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":31:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":32:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":33:77)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":33:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":34:82)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":34:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":34:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":34:86)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":35:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":42:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:23)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:29)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:36)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:42)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:53)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":38:54)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":39:22)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":39:14)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":39:17)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":39:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":40:19)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":40:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":41:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":41:14)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":50:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":50:82)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":51:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":51:82)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":93:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":97:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":95:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":95:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":96:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":96:14)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":54:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":54:94)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":56:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":71:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":64:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":64:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":58:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":58:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":59:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":59:27)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":59:31)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":59:42)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":59:43)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":59:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:33)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:23)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:24)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:30)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":60:29)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":61:82)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":61:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":62:87)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":62:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":62:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":62:91)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":63:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":70:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:23)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:29)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:36)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:42)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:53)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":66:54)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":67:22)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":67:14)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":67:17)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":67:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":68:19)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":68:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":69:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":69:14)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":74:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":74:94)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":76:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":91:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":84:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":84:25)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":78:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":78:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":79:20)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":79:27)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":79:31)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":79:42)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":79:43)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":79:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:33)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:17)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:23)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:24)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:30)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":80:29)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":81:82)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":81:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":82:87)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":82:12)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":82:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":82:91)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":83:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":90:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:17)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:23)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:29)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:36)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:42)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:53)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":86:54)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":87:22)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":87:14)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":87:17)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":87:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":88:19)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":88:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":89:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_22a.c":89:14)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc9, #loc10])
#loc166 = loc(fused[#loc11, #loc12])
#loc167 = loc(fused[#loc13, #loc14])
#loc168 = loc(fused[#loc15, #loc16])
#loc169 = loc(fused[#loc17, #loc18])
#loc170 = loc(fused[#loc19, #loc20])
#loc171 = loc(fused[#loc23, #loc24])
#loc172 = loc(fused[#loc22, #loc24])
#loc173 = loc(fused[#loc21, #loc25])
#loc174 = loc(fused[#loc26, #loc25])
#loc175 = loc(fused[#loc27, #loc28])
#loc176 = loc(fused[#loc29, #loc30])
#loc177 = loc(fused[#loc31, #loc28])
#loc178 = loc(fused[#loc36, #loc35])
#loc179 = loc(fused[#loc39, #loc40])
#loc180 = loc(fused[#loc41, #loc42])
#loc181 = loc(fused[#loc47, #loc48])
#loc182 = loc(fused[#loc45, #loc48])
#loc183 = loc(fused[#loc49, #loc50])
#loc184 = loc(fused[#loc54, #loc51])
#loc185 = loc(fused[#loc59, #loc60])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc65, #loc66])
#loc189 = loc(fused[#loc67, #loc68])
#loc190 = loc(fused[#loc69, #loc70])
#loc191 = loc(fused[#loc71, #loc72])
#loc192 = loc(fused[#loc73, #loc74])
#loc193 = loc(fused[#loc75, #loc76])
#loc194 = loc(fused[#loc79, #loc80])
#loc195 = loc(fused[#loc78, #loc80])
#loc196 = loc(fused[#loc77, #loc81])
#loc197 = loc(fused[#loc82, #loc81])
#loc198 = loc(fused[#loc83, #loc84])
#loc199 = loc(fused[#loc85, #loc86])
#loc200 = loc(fused[#loc87, #loc84])
#loc201 = loc(fused[#loc92, #loc91])
#loc202 = loc(fused[#loc95, #loc96])
#loc203 = loc(fused[#loc97, #loc98])
#loc204 = loc(fused[#loc103, #loc104])
#loc205 = loc(fused[#loc101, #loc104])
#loc206 = loc(fused[#loc105, #loc106])
#loc207 = loc(fused[#loc110, #loc107])
#loc208 = loc(fused[#loc115, #loc116])
#loc209 = loc(fused[#loc117, #loc118])
#loc210 = loc(fused[#loc119, #loc120])
#loc211 = loc(fused[#loc121, #loc122])
#loc212 = loc(fused[#loc125, #loc126])
#loc213 = loc(fused[#loc124, #loc126])
#loc214 = loc(fused[#loc123, #loc127])
#loc215 = loc(fused[#loc128, #loc127])
#loc216 = loc(fused[#loc129, #loc130])
#loc217 = loc(fused[#loc131, #loc132])
#loc218 = loc(fused[#loc133, #loc130])
#loc219 = loc(fused[#loc138, #loc137])
#loc220 = loc(fused[#loc141, #loc142])
#loc221 = loc(fused[#loc143, #loc144])
#loc222 = loc(fused[#loc149, #loc150])
#loc223 = loc(fused[#loc147, #loc150])
#loc224 = loc(fused[#loc151, #loc152])
#loc225 = loc(fused[#loc156, #loc153])
