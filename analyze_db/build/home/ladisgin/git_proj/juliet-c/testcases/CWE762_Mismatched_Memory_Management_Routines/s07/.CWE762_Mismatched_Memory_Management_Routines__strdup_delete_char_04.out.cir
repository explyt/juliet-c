!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":169:10)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":169:14)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":169:20)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":169:32)
#loc218 = loc(fused[#loc145, #loc146])
#loc219 = loc(fused[#loc147, #loc148])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G2Ev.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc161)
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G1Ev.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc162)
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_043badEv.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc163)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc164)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc165)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_043badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc170)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_043badEv.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc163)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc163)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc23)
    %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc173)
  ^bb7:  // pred: ^bb6
    %8 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %9 ^bb8, ^bb9 loc(#loc174)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc12)
  } loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc180)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc181)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G1Ev.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc162)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc162)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc48)
    %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.br ^bb4 loc(#loc47)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc43)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc183)
  ^bb7:  // pred: ^bb6
    %8 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %9 ^bb8, ^bb9 loc(#loc184)
  ^bb8:  // pred: ^bb7
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb10 loc(#loc56)
  ^bb9:  // pred: ^bb7
    %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc59)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb10 loc(#loc53)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc53)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc37)
  } loc(#loc176)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc65)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc189)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G2Ev.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc161)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc161)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc73)
    %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc74)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc192)
  ^bb7:  // pred: ^bb6
    %8 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %9 ^bb8, ^bb9 loc(#loc193)
  ^bb8:  // pred: ^bb7
    %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc81)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc78)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc62)
  } loc(#loc185)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc194)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb4 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !u64i loc(#loc200)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc101)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc203)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc86)
  } loc(#loc195)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc112)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc116)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc208)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !u64i loc(#loc209)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc120)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    cir.br ^bb3 loc(#loc115)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc211)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc212)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc109)
  } loc(#loc204)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_044goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G1Ev() : () -> () loc(#loc129)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodB2G2Ev() : () -> () loc(#loc130)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodG2B1Ev() : () -> () loc(#loc131)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04L8goodG2B2Ev() : () -> () loc(#loc132)
    cir.return loc(#loc128)
  } loc(#loc213)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc214)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc142)
  cir.func @main(%arg0: !s32i loc(fused[#loc145, #loc146]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc147, #loc148])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc149)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc150)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc151)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc151)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc152)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc139)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_044goodEv() : () -> () loc(#loc154)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc140)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc141)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_043badEv() : () -> () loc(#loc157)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc142)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.return %15 : !s32i loc(#loc220)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":93:13)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":93:31)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":67:13)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":67:31)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":41:13)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":41:31)
#loc7 = loc("/usr/include/string.h":187:1)
#loc8 = loc("/usr/include/string.h":188:35)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":33:1)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":52:1)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":35:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":35:12)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":37:12)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":37:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":38:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":45:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":38:8)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":39:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":40:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":44:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":43:27)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":43:20)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":43:13)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":43:35)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":46:5)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":51:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":46:8)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":47:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":50:16)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":33:6)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":75:19)
#loc34 = loc("/usr/include/stdlib.h":687:1)
#loc35 = loc("/usr/include/stdlib.h":687:32)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":59:1)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":82:1)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":61:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":61:12)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":63:12)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":63:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":64:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":71:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":64:8)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":65:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":66:9)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":70:9)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":69:27)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":69:20)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":69:13)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":69:35)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":72:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":81:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":72:8)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":73:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":76:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":78:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":75:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":80:9)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":80:14)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":85:1)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":103:1)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":87:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":87:12)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":89:12)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":89:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":90:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":97:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":90:8)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":91:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":92:9)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":96:9)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":95:27)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":95:20)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":95:13)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":95:35)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":98:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":102:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":98:8)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":99:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":101:9)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":101:14)
#loc83 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc84 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":106:1)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":127:1)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":108:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":108:12)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":110:12)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":110:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":111:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":120:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":111:8)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":112:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":115:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":117:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":114:19)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":114:9)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":119:16)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":119:20)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":106:13)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":119:9)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":121:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":126:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":121:8)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":122:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":125:16)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":130:1)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":146:1)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":132:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":132:12)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":134:12)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":134:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":135:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":139:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":135:8)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":136:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":138:16)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":138:20)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":130:13)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":138:9)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":140:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":145:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":140:8)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":141:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":144:16)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":148:1)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":154:1)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":150:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":151:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":152:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":153:5)
#loc133 = loc("/usr/include/stdlib.h":575:1)
#loc134 = loc("/usr/include/stdlib.h":575:41)
#loc135 = loc("/usr/include/time.h":76:1)
#loc136 = loc("/usr/include/time.h":76:38)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc138 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":174:15)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":176:15)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":179:15)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":181:15)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":169:1)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":184:1)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":170:1)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":172:27)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":172:22)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":172:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":174:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":175:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":176:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":179:5)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":180:5)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":181:5)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":183:12)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_04.cpp":183:5)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc9, #loc10])
#loc166 = loc(fused[#loc11, #loc12])
#loc167 = loc(fused[#loc13, #loc14])
#loc168 = loc(fused[#loc16, #loc15])
#loc169 = loc(fused[#loc17, #loc18])
#loc170 = loc(fused[#loc20, #loc18])
#loc171 = loc(fused[#loc21, #loc22])
#loc172 = loc(fused[#loc25, #loc26])
#loc173 = loc(fused[#loc27, #loc28])
#loc174 = loc(fused[#loc30, #loc28])
#loc175 = loc(fused[#loc34, #loc35])
#loc176 = loc(fused[#loc36, #loc37])
#loc177 = loc(fused[#loc38, #loc39])
#loc178 = loc(fused[#loc41, #loc40])
#loc179 = loc(fused[#loc42, #loc43])
#loc180 = loc(fused[#loc45, #loc43])
#loc181 = loc(fused[#loc46, #loc47])
#loc182 = loc(fused[#loc50, #loc51])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc55, #loc56, #loc57, #loc53])
#loc185 = loc(fused[#loc61, #loc62])
#loc186 = loc(fused[#loc63, #loc64])
#loc187 = loc(fused[#loc66, #loc65])
#loc188 = loc(fused[#loc67, #loc68])
#loc189 = loc(fused[#loc70, #loc68])
#loc190 = loc(fused[#loc71, #loc72])
#loc191 = loc(fused[#loc75, #loc76])
#loc192 = loc(fused[#loc77, #loc78])
#loc193 = loc(fused[#loc80, #loc78])
#loc194 = loc(fused[#loc83, #loc84])
#loc195 = loc(fused[#loc85, #loc86])
#loc196 = loc(fused[#loc87, #loc88])
#loc197 = loc(fused[#loc90, #loc89])
#loc198 = loc(fused[#loc91, #loc92])
#loc199 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc200 = loc(fused[#loc99, #loc100])
#loc201 = loc(fused[#loc102, #loc100])
#loc202 = loc(fused[#loc103, #loc104])
#loc203 = loc(fused[#loc106, #loc104])
#loc204 = loc(fused[#loc108, #loc109])
#loc205 = loc(fused[#loc110, #loc111])
#loc206 = loc(fused[#loc113, #loc112])
#loc207 = loc(fused[#loc114, #loc115])
#loc208 = loc(fused[#loc117, #loc115])
#loc209 = loc(fused[#loc118, #loc119])
#loc210 = loc(fused[#loc121, #loc119])
#loc211 = loc(fused[#loc122, #loc123])
#loc212 = loc(fused[#loc125, #loc123])
#loc213 = loc(fused[#loc127, #loc128])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc135, #loc136])
#loc216 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc143, #loc144])
#loc220 = loc(fused[#loc160, #loc159])
