!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":95:10)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":95:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":95:20)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":95:32)
#loc154 = loc(fused[#loc100, #loc101])
#loc155 = loc(fused[#loc102, #loc103])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc116)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc12)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc15)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc124)
      %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc125)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc126)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc124)
      cir.store %13, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc124)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc23)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc23)
      cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc127)
      cir.scope {
        %24 = cir.const #cir.int<0> : !s32i loc(#loc29)
        %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc29)
        cir.store %25, %11 : !u64i, !cir.ptr<!u64i> loc(#loc129)
        cir.for : cond {
          %26 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc31)
          %27 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc32)
          %28 = cir.cmp(lt, %26, %27) : !u64i, !cir.bool loc(#loc130)
          cir.condition(%28) loc(#loc130)
        } body {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc34)
          %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc35)
          %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc33)
          %30 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %31 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
          %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc37)
          cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc131)
          cir.yield loc(#loc28)
        } step {
          %26 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc39)
          cir.store %27, %11 : !u64i, !cir.ptr<!u64i> loc(#loc132)
          cir.yield loc(#loc128)
        } loc(#loc128)
      } loc(#loc128)
      %17 = cir.const #cir.int<0> : !s8i loc(#loc40)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc41)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc41)
      %21 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc43)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc133)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    } loc(#loc123)
    cir.return loc(#loc8)
  } loc(#loc119)
  cir.func private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc134)
  cir.func internal private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc53)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc53)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc53)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc53)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc53)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc56)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc140)
      %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc141)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc142)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc140)
      cir.store %13, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc140)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc64)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
      cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc143)
      cir.scope {
        %24 = cir.const #cir.int<0> : !s32i loc(#loc70)
        %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc70)
        cir.store %25, %11 : !u64i, !cir.ptr<!u64i> loc(#loc145)
        cir.for : cond {
          %26 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc72)
          %27 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %28 = cir.cmp(lt, %26, %27) : !u64i, !cir.bool loc(#loc146)
          cir.condition(%28) loc(#loc146)
        } body {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc75)
          %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc76)
          %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc74)
          %30 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc77)
          %31 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc78)
          %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc78)
          cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc147)
          cir.yield loc(#loc69)
        } step {
          %26 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc80)
          cir.store %27, %11 : !u64i, !cir.ptr<!u64i> loc(#loc148)
          cir.yield loc(#loc144)
        } loc(#loc144)
      } loc(#loc144)
      %17 = cir.const #cir.int<0> : !s8i loc(#loc81)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc82)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc82)
      %21 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc84)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc149)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    } loc(#loc139)
    cir.return loc(#loc49)
  } loc(#loc135)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc150)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc97)
  cir.func @main(%arg0: !s32i loc(fused[#loc100, #loc101]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc104)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc106)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc106)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc107)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_624goodEv() : () -> () loc(#loc109)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc95)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc96)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_623badEv() : () -> () loc(#loc112)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc97)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc114)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %15 : !s32i loc(#loc156)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":27:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":29:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":47:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":31:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":32:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":33:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":33:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":46:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":36:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":36:25)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":37:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":37:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":37:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:26)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:30)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":43:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:21)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:35)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:34)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":45:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":45:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":54:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":54:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":56:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":74:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":58:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":58:12)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":59:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":59:33)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":60:12)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":60:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":61:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":62:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":73:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":63:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":63:25)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":64:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":64:16)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":64:19)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:19)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:26)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:30)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":70:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:18)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:21)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:25)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:29)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:18)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:35)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:34)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:14)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":72:19)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":72:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":76:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":79:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":78:5)
#loc90 = loc("/usr/include/stdlib.h":575:1)
#loc91 = loc("/usr/include/stdlib.h":575:41)
#loc92 = loc("/usr/include/time.h":76:1)
#loc93 = loc("/usr/include/time.h":76:38)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":100:15)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":102:15)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":105:15)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":107:15)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":95:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":110:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":96:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":98:27)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":98:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":98:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":100:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":101:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":102:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":105:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":106:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":107:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":109:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":109:5)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc9, #loc10])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc14, #loc13])
#loc123 = loc(fused[#loc16, #loc17])
#loc124 = loc(fused[#loc18, #loc19])
#loc125 = loc(fused[#loc20, #loc21])
#loc126 = loc(fused[#loc20, #loc22])
#loc127 = loc(fused[#loc25, #loc26])
#loc128 = loc(fused[#loc27, #loc28])
#loc129 = loc(fused[#loc30, #loc29])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc37, #loc35])
#loc132 = loc(fused[#loc39, #loc38])
#loc133 = loc(fused[#loc43, #loc40])
#loc134 = loc(fused[#loc46, #loc47])
#loc135 = loc(fused[#loc48, #loc49])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc52, #loc53])
#loc138 = loc(fused[#loc55, #loc54])
#loc139 = loc(fused[#loc57, #loc58])
#loc140 = loc(fused[#loc59, #loc60])
#loc141 = loc(fused[#loc61, #loc62])
#loc142 = loc(fused[#loc61, #loc63])
#loc143 = loc(fused[#loc66, #loc67])
#loc144 = loc(fused[#loc68, #loc69])
#loc145 = loc(fused[#loc71, #loc70])
#loc146 = loc(fused[#loc72, #loc73])
#loc147 = loc(fused[#loc78, #loc76])
#loc148 = loc(fused[#loc80, #loc79])
#loc149 = loc(fused[#loc84, #loc81])
#loc150 = loc(fused[#loc87, #loc88])
#loc151 = loc(fused[#loc90, #loc91])
#loc152 = loc(fused[#loc92, #loc93])
#loc153 = loc(fused[#loc98, #loc99])
#loc156 = loc(fused[#loc115, #loc114])
