!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":21:65)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":21:71)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":48:69)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":48:75)
#loc91 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc46, #loc47])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc89)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc92)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc93)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    cir.br ^bb1 loc(#loc94)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc92)
    cir.store %3, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc92)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc96)
    cir.br ^bb3 loc(#loc95)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc97)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc23)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc23)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc26)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc29)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc100)
    cir.br ^bb3 loc(#loc95)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc33)
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc90)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc103)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc40)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc40)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc40)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc40)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc40)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc104)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_badSink(%7) : (!cir.ptr<!s32i>) -> () loc(#loc43)
    cir.return loc(#loc35)
  } loc(#loc101)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc46, #loc47])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc107)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc108)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc52)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc107)
    cir.store %3, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc107)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc57)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc111)
    cir.br ^bb3 loc(#loc110)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc60)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc112)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc61)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc113)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc64)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc67)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.br ^bb6 loc(#loc56)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc56)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc70)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc115)
    cir.br ^bb3 loc(#loc110)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc56)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc73)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc74)
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc45)
  } loc(#loc105)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc77)
    cir.return loc(#loc76)
  } loc(#loc116)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc120)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc85)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc85)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc85)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc85)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc85)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc121)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_goodG2BSink(%9) : (!cir.ptr<!s32i>) -> () loc(#loc88)
    cir.return loc(#loc80)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":33:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":24:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":24:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":25:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":25:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":22:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":23:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":30:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:18)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:14)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:21)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:25)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":28:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:30)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:18)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:30)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:27)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:28)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":35:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":42:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":37:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":37:11)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":38:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":38:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":40:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":40:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":41:64)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":41:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":48:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":60:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":51:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":51:28)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":52:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":52:16)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":49:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":50:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":59:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":57:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:21)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:25)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:23)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":55:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:18)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:31)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:30)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:29)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:22)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:27)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:28)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":72:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":75:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":74:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":74:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":63:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":70:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":65:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":65:11)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":66:12)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":66:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":68:19)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":68:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":69:68)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":69:5)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc12, #loc13])
#loc95 = loc(fused[#loc14, #loc15])
#loc96 = loc(fused[#loc17, #loc16])
#loc97 = loc(fused[#loc18, #loc19])
#loc98 = loc(fused[#loc21, #loc15])
#loc99 = loc(fused[#loc24, #loc27])
#loc100 = loc(fused[#loc29, #loc28])
#loc101 = loc(fused[#loc34, #loc35])
#loc102 = loc(fused[#loc36, #loc37])
#loc103 = loc(fused[#loc39, #loc38])
#loc104 = loc(fused[#loc41, #loc40])
#loc105 = loc(fused[#loc44, #loc45])
#loc107 = loc(fused[#loc48, #loc49])
#loc108 = loc(fused[#loc50, #loc51])
#loc109 = loc(fused[#loc53, #loc54])
#loc110 = loc(fused[#loc55, #loc56])
#loc111 = loc(fused[#loc58, #loc57])
#loc112 = loc(fused[#loc59, #loc60])
#loc113 = loc(fused[#loc62, #loc56])
#loc114 = loc(fused[#loc65, #loc68])
#loc115 = loc(fused[#loc70, #loc69])
#loc116 = loc(fused[#loc75, #loc76])
#loc117 = loc(fused[#loc77, #loc78])
#loc118 = loc(fused[#loc79, #loc80])
#loc119 = loc(fused[#loc81, #loc82])
#loc120 = loc(fused[#loc84, #loc83])
#loc121 = loc(fused[#loc86, #loc85])
