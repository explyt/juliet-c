!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc34)
  cir.func private  @CWE197_Numeric_Truncation_Error__short_rand_52b_badSink(!s16i) loc(#loc35)
  cir.func no_proto  @CWE197_Numeric_Truncation_Error__short_rand_52_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc37)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc10)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc38)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc12)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc12)
    %8 = cir.ternary(%7, true {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc12)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc12)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc12)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc12)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc12)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc12)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc12)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc12)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc12)
      cir.yield %23 : !u32i loc(#loc12)
    }, false {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc12)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc12)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc12)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc12)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc12)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc12)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc12)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc12)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc12)
      %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc12)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc12)
      %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc12)
      %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc12)
      cir.yield %27 : !u32i loc(#loc12)
    }) : (!cir.bool) -> !u32i loc(#loc12)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc12)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc12)
    cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc39)
    %11 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc14)
    cir.call @CWE197_Numeric_Truncation_Error__short_rand_52b_badSink(%11) : (!s16i) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc36)
  cir.func no_proto  @CWE197_Numeric_Truncation_Error__short_rand_52_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc41)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc17)
  } loc(#loc40)
  cir.func private  @CWE197_Numeric_Truncation_Error__short_rand_52b_goodG2BSink(!s16i) loc(#loc42)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc44)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc27)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc45)
    %4 = cir.const #cir.int<127> : !s32i loc(#loc29)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc29)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc29)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc46)
    %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc32)
    cir.call @CWE197_Numeric_Truncation_Error__short_rand_52b_goodG2BSink(%8) : (!s16i) -> () loc(#loc33)
    cir.return loc(#loc23)
  } loc(#loc43)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":22:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":22:72)
#loc5 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":24:1)
#loc6 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":32:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":26:5)
#loc8 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":26:11)
#loc9 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":28:13)
#loc10 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":28:12)
#loc11 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":28:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":30:19)
#loc13 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":30:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":31:61)
#loc15 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":31:5)
#loc16 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":52:1)
#loc17 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":55:1)
#loc18 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":54:5)
#loc19 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":54:13)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":39:1)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":39:76)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":42:1)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":50:1)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":44:5)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":44:11)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":46:13)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":46:12)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":46:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":48:12)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":48:21)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":48:5)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":49:65)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_rand_52a.c":49:5)
#loc34 = loc(fused[#loc1, #loc2])
#loc35 = loc(fused[#loc3, #loc4])
#loc36 = loc(fused[#loc5, #loc6])
#loc37 = loc(fused[#loc7, #loc8])
#loc38 = loc(fused[#loc11, #loc9])
#loc39 = loc(fused[#loc13, #loc12])
#loc40 = loc(fused[#loc16, #loc17])
#loc41 = loc(fused[#loc18, #loc19])
#loc42 = loc(fused[#loc20, #loc21])
#loc43 = loc(fused[#loc22, #loc23])
#loc44 = loc(fused[#loc24, #loc25])
#loc45 = loc(fused[#loc28, #loc26])
#loc46 = loc(fused[#loc31, #loc30])
