!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":91:10)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":91:14)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":91:20)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":91:32)
#loc202 = loc(fused[#loc89, #loc90])
#loc203 = loc(fused[#loc91, #loc92])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.goto "source" loc(#loc179)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc19)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc21)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc180)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc181)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc33)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
      } loc(#loc186)
    } loc(#loc184)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc35)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc36)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc36)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc36)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc40)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc42)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc42)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc190)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc50)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc51)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc51)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc51)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc191)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc55)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc56)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc58)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc192)
      %38 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
      %42 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc61)
      %43 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %44 = cir.call @strlen(%43) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc61)
      %45 = cir.const #cir.int<1> : !u64i loc(#loc193)
      %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc194)
      cir.libc.memmove %46 bytes from %41 to %39 : !cir.ptr<!void>, !u64i loc(#loc195)
      %47 = cir.const #cir.int<0> : !s32i loc(#loc67)
      %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc67)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc68)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc68)
      %52 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
      %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc70)
      cir.store %48, %53 : !s8i, !cir.ptr<!s8i> loc(#loc196)
      %54 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
      cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      %55 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
      %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      %57 = cir.cast(bitcast, %56 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
      cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    } loc(#loc189)
    cir.return loc(#loc12)
  } loc(#loc176)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc76)
  } loc(#loc197)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc199)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc86)
  cir.func @main(%arg0: !s32i loc(fused[#loc89, #loc90]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc91, #loc92])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc88)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc93)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc94)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc95)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc95)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc96)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc83)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_18_good() : () -> () loc(#loc98)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc84)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc85)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_18_bad() : () -> () loc(#loc102)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc86)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.return %17 : !s32i loc(#loc206)
  } loc(#loc201)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.goto "source" loc(#loc210)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc115)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc117)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc211)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc212)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc127)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc129)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
      } loc(#loc217)
    } loc(#loc215)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc131)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc132)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc132)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc218)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc136)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc138)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc219)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc221)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc146)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc147)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc148)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc147)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc147)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc151)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc151)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc152)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc152)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc154)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc223)
      %38 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
      %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
      %42 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc157)
      %43 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
      %44 = cir.call @strlen(%43) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc157)
      %45 = cir.const #cir.int<1> : !u64i loc(#loc224)
      %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc225)
      cir.libc.memmove %46 bytes from %41 to %39 : !cir.ptr<!void>, !u64i loc(#loc226)
      %47 = cir.const #cir.int<0> : !s32i loc(#loc163)
      %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc163)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc164)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc165)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc164)
      %52 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc166)
      cir.store %48, %53 : !s8i, !cir.ptr<!s8i> loc(#loc227)
      %54 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
      cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc168)
      %55 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc169)
      %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
      %57 = cir.cast(bitcast, %56 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
      cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc169)
    } loc(#loc220)
    cir.return loc(#loc108)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":45:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":27:10)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":28:1)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":30:20)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":30:27)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":30:30)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":30:41)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":30:42)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":30:5)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:5)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:33)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:9)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:17)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:23)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:24)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:30)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":31:29)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":32:12)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":32:18)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":32:23)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":32:26)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":32:5)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":32:27)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":33:18)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":33:5)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":33:10)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":33:13)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":33:14)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":34:5)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":44:5)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":35:9)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":35:22)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":36:16)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":36:22)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":36:27)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":36:31)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":36:9)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":36:32)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":37:23)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":37:14)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":37:18)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":37:9)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:17)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:23)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:29)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:36)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:42)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:53)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:9)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":40:54)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":41:23)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":41:14)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":41:18)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":41:9)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":42:19)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":42:9)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":43:9)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":43:14)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":76:1)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":79:1)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":78:5)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":78:13)
#loc79 = loc("/usr/include/stdlib.h":575:1)
#loc80 = loc("/usr/include/stdlib.h":575:41)
#loc81 = loc("/usr/include/time.h":76:1)
#loc82 = loc("/usr/include/time.h":76:38)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":96:15)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":98:15)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":101:15)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":103:15)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":91:1)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":106:1)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":92:1)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":94:27)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":94:22)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":94:5)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":96:5)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":97:5)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":97:57)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":98:5)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":101:5)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":102:5)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":102:56)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":103:5)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":105:12)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":105:5)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":52:1)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":74:1)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":54:5)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":54:12)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":55:12)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":55:5)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":56:5)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":56:10)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":57:1)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":59:20)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":59:27)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":59:31)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":59:42)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":59:43)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":59:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:33)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:9)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:17)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:23)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:24)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:30)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":60:29)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":61:12)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":61:18)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":61:23)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":61:27)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":61:5)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":61:28)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":62:19)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":62:5)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":62:10)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":62:14)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":62:15)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":63:5)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":73:5)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":64:9)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":64:22)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":65:16)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":65:22)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":65:27)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":65:31)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":65:9)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":65:32)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":66:23)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":66:14)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":66:18)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":66:9)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:17)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:23)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:29)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:36)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:42)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:53)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:9)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":69:54)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":70:23)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":70:14)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":70:18)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":70:9)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":71:19)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":71:9)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":72:9)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memmove_18.c":72:14)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc13, #loc14])
#loc178 = loc(fused[#loc16, #loc15])
#loc179 = loc(fused[#loc17, #loc18])
#loc180 = loc(fused[#loc22, #loc23])
#loc181 = loc(fused[#loc21, #loc23])
#loc182 = loc(fused[#loc20, #loc24])
#loc183 = loc(fused[#loc25, #loc24])
#loc184 = loc(fused[#loc26, #loc27])
#loc185 = loc(fused[#loc28, #loc29])
#loc186 = loc(fused[#loc30, #loc27])
#loc187 = loc(fused[#loc38, #loc39])
#loc188 = loc(fused[#loc41, #loc40])
#loc189 = loc(fused[#loc45, #loc46])
#loc190 = loc(fused[#loc47, #loc48])
#loc191 = loc(fused[#loc53, #loc54])
#loc192 = loc(fused[#loc58, #loc55])
#loc193 = loc(fused[#loc63, #loc64])
#loc194 = loc(fused[#loc61, #loc64])
#loc195 = loc(fused[#loc65, #loc66])
#loc196 = loc(fused[#loc70, #loc67])
#loc197 = loc(fused[#loc75, #loc76])
#loc198 = loc(fused[#loc77, #loc78])
#loc199 = loc(fused[#loc79, #loc80])
#loc200 = loc(fused[#loc81, #loc82])
#loc201 = loc(fused[#loc87, #loc88])
#loc204 = loc(fused[#loc98, #loc99])
#loc205 = loc(fused[#loc102, #loc103])
#loc206 = loc(fused[#loc106, #loc105])
#loc207 = loc(fused[#loc107, #loc108])
#loc208 = loc(fused[#loc109, #loc110])
#loc209 = loc(fused[#loc112, #loc111])
#loc210 = loc(fused[#loc113, #loc114])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc117, #loc119])
#loc213 = loc(fused[#loc116, #loc120])
#loc214 = loc(fused[#loc121, #loc120])
#loc215 = loc(fused[#loc122, #loc123])
#loc216 = loc(fused[#loc124, #loc125])
#loc217 = loc(fused[#loc126, #loc123])
#loc218 = loc(fused[#loc134, #loc135])
#loc219 = loc(fused[#loc137, #loc136])
#loc220 = loc(fused[#loc141, #loc142])
#loc221 = loc(fused[#loc143, #loc144])
#loc222 = loc(fused[#loc149, #loc150])
#loc223 = loc(fused[#loc154, #loc151])
#loc224 = loc(fused[#loc159, #loc160])
#loc225 = loc(fused[#loc157, #loc160])
#loc226 = loc(fused[#loc161, #loc162])
#loc227 = loc(fused[#loc166, #loc163])
