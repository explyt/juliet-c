!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":133:10)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":133:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":133:20)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":133:32)
#loc252 = loc(fused[#loc87, #loc88])
#loc253 = loc(fused[#loc89, #loc90])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc217)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc218)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc221)
  cir.func private @printIntLine(!s32i) loc(#loc222)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc223)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc217)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc25)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc27)
      } loc(#loc228)
    } loc(#loc227)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc230)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc231)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc35)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc36)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc232)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc233)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc35)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc234)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc235)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc44)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc237)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc48)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
        } loc(#loc238)
      } loc(#loc236)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc51)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc51)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc240)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc53)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc54)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc241)
          cir.condition(%24) loc(#loc55)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc57)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc59)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc60)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc243)
          } loc(#loc242)
          cir.yield loc(#loc50)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc62)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc244)
          cir.yield loc(#loc239)
        } loc(#loc239)
      } loc(#loc239)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc64)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc65)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc63)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc66)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc68)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    } loc(#loc229)
    cir.return loc(#loc17)
  } loc(#loc224)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc245)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc248)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc249)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc94)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.return %17 : !s32i loc(#loc256)
  } loc(#loc251)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc107)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc113)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc257)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc117)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc121)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc122)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      } loc(#loc262)
    } loc(#loc261)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc265)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc266)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc130)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc131)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc267)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc268)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc269)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc270)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc272)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc142)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc143)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
        } loc(#loc273)
      } loc(#loc271)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc146)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc275)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc148)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc149)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc276)
          cir.condition(%24) loc(#loc150)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc152)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc155)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc278)
          } loc(#loc277)
          cir.yield loc(#loc145)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc157)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc279)
          cir.yield loc(#loc274)
        } loc(#loc274)
      } loc(#loc274)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc159)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc160)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc161)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc162)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc162)
    } loc(#loc264)
    cir.return loc(#loc109)
  } loc(#loc258)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc281)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc169)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc217)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc173)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc175)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
      } loc(#loc284)
    } loc(#loc283)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc287)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc288)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc183)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc184)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc289)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc290)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc183)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc291)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc292)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc192)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc192)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc294)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc194)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc195)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc196)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc194)
        } loc(#loc295)
      } loc(#loc293)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc199)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc199)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc297)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc201)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc202)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc298)
          cir.condition(%24) loc(#loc203)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc205)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc207)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc208)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc300)
          } loc(#loc299)
          cir.yield loc(#loc198)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc209)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc210)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc301)
          cir.yield loc(#loc296)
        } loc(#loc296)
      } loc(#loc296)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc212)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc213)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc211)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc214)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc215)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc216)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc215)
    } loc(#loc286)
    cir.return loc(#loc165)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":23:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":23:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":36:23)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":28:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":52:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":30:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":30:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":32:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":32:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":32:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":33:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":37:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":33:8)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":34:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":36:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":36:16)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":38:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":51:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":39:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":39:16)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":40:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":40:14)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":43:28)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":43:35)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":43:42)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":43:52)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":43:53)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":43:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:43)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:27)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:33)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:34)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:40)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":44:39)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":48:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:18)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:14)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:21)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:23)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":46:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":47:29)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":47:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":47:24)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":47:25)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:40)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":45:39)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":49:22)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":49:33)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":49:34)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":49:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":50:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":50:14)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":117:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":121:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":119:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":119:14)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":120:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":120:14)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc80 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":138:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":140:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":143:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":145:15)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":133:1)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":148:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":134:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":136:27)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":136:22)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":136:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":138:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":139:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":139:71)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":140:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":143:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":144:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":144:70)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":145:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":147:12)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":147:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":24:1)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":24:26)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":67:19)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":59:1)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":88:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":61:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":61:9)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":63:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":63:12)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":63:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":64:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":73:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":64:8)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":65:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":68:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":70:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":67:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":72:16)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":72:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":74:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":87:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":75:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":75:16)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":76:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":76:14)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":79:28)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":79:35)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":79:42)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":79:52)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":79:53)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":79:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:43)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:27)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:34)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:40)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":80:39)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":84:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:18)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:14)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:21)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:33)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:23)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":82:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":83:29)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":83:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":83:24)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":83:25)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:40)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":81:39)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":85:22)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":85:33)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":85:34)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":85:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":86:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":86:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":91:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":115:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":93:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":93:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":95:13)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":95:12)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":95:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":96:5)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":100:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":96:8)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":97:5)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":99:16)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":99:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":101:5)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":114:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":102:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":102:16)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":103:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":103:14)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":106:28)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":106:35)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":106:42)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":106:52)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":106:53)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":106:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:43)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:13)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:27)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:33)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:34)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:40)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":107:39)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":111:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:18)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:14)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:21)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:33)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:23)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":109:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":110:29)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":110:13)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":110:24)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":110:25)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:40)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":108:39)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":112:22)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":112:33)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":112:34)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":112:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":113:9)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_05.c":113:14)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc8, #loc9])
#loc221 = loc(fused[#loc10, #loc11])
#loc222 = loc(fused[#loc12, #loc13])
#loc223 = loc(fused[#loc14, #loc15])
#loc224 = loc(fused[#loc16, #loc17])
#loc225 = loc(fused[#loc18, #loc19])
#loc226 = loc(fused[#loc22, #loc20])
#loc227 = loc(fused[#loc23, #loc24])
#loc228 = loc(fused[#loc26, #loc24])
#loc229 = loc(fused[#loc29, #loc30])
#loc230 = loc(fused[#loc31, #loc32])
#loc231 = loc(fused[#loc33, #loc34])
#loc232 = loc(fused[#loc37, #loc38])
#loc233 = loc(fused[#loc36, #loc38])
#loc234 = loc(fused[#loc35, #loc39])
#loc235 = loc(fused[#loc40, #loc39])
#loc236 = loc(fused[#loc41, #loc42])
#loc237 = loc(fused[#loc43, #loc44])
#loc238 = loc(fused[#loc45, #loc42])
#loc239 = loc(fused[#loc49, #loc50])
#loc240 = loc(fused[#loc52, #loc51])
#loc241 = loc(fused[#loc53, #loc54])
#loc242 = loc(fused[#loc56, #loc50])
#loc243 = loc(fused[#loc58, #loc57])
#loc244 = loc(fused[#loc62, #loc61])
#loc245 = loc(fused[#loc69, #loc70])
#loc246 = loc(fused[#loc71, #loc72])
#loc247 = loc(fused[#loc73, #loc74])
#loc248 = loc(fused[#loc75, #loc76])
#loc249 = loc(fused[#loc77, #loc78])
#loc250 = loc(fused[#loc79, #loc80])
#loc251 = loc(fused[#loc85, #loc86])
#loc254 = loc(fused[#loc96, #loc97])
#loc255 = loc(fused[#loc100, #loc101])
#loc256 = loc(fused[#loc104, #loc103])
#loc257 = loc(fused[#loc105, #loc106])
#loc258 = loc(fused[#loc108, #loc109])
#loc259 = loc(fused[#loc110, #loc111])
#loc260 = loc(fused[#loc114, #loc112])
#loc261 = loc(fused[#loc115, #loc116])
#loc262 = loc(fused[#loc118, #loc119, #loc120, #loc116])
#loc263 = loc(fused[#loc123, #loc122])
#loc264 = loc(fused[#loc124, #loc125])
#loc265 = loc(fused[#loc126, #loc127])
#loc266 = loc(fused[#loc128, #loc129])
#loc267 = loc(fused[#loc132, #loc133])
#loc268 = loc(fused[#loc131, #loc133])
#loc269 = loc(fused[#loc130, #loc134])
#loc270 = loc(fused[#loc135, #loc134])
#loc271 = loc(fused[#loc136, #loc137])
#loc272 = loc(fused[#loc138, #loc139])
#loc273 = loc(fused[#loc140, #loc137])
#loc274 = loc(fused[#loc144, #loc145])
#loc275 = loc(fused[#loc147, #loc146])
#loc276 = loc(fused[#loc148, #loc149])
#loc277 = loc(fused[#loc151, #loc145])
#loc278 = loc(fused[#loc153, #loc152])
#loc279 = loc(fused[#loc157, #loc156])
#loc280 = loc(fused[#loc164, #loc165])
#loc281 = loc(fused[#loc166, #loc167])
#loc282 = loc(fused[#loc170, #loc168])
#loc283 = loc(fused[#loc171, #loc172])
#loc284 = loc(fused[#loc174, #loc172])
#loc285 = loc(fused[#loc176, #loc175])
#loc286 = loc(fused[#loc177, #loc178])
#loc287 = loc(fused[#loc179, #loc180])
#loc288 = loc(fused[#loc181, #loc182])
#loc289 = loc(fused[#loc185, #loc186])
#loc290 = loc(fused[#loc184, #loc186])
#loc291 = loc(fused[#loc183, #loc187])
#loc292 = loc(fused[#loc188, #loc187])
#loc293 = loc(fused[#loc189, #loc190])
#loc294 = loc(fused[#loc191, #loc192])
#loc295 = loc(fused[#loc193, #loc190])
#loc296 = loc(fused[#loc197, #loc198])
#loc297 = loc(fused[#loc200, #loc199])
#loc298 = loc(fused[#loc201, #loc202])
#loc299 = loc(fused[#loc204, #loc198])
#loc300 = loc(fused[#loc206, #loc205])
#loc301 = loc(fused[#loc210, #loc209])
