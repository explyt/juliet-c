!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":25:23)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":25:28)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":46:27)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":46:32)
#loc47 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":63:27)
#loc48 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":63:32)
#loc83 = loc(fused[#loc8, #loc9])
#loc90 = loc(fused[#loc29, #loc30])
#loc97 = loc(fused[#loc47, #loc48])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc80)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc83)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc81)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc82)
  cir.func private @printIntLine(!s32i) loc(#loc84)
  cir.func @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc86)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.call @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc23)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc88)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc26)
    cir.return loc(#loc17)
  } loc(#loc85)
  cir.func internal private @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc29, #loc30])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc90)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc31)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc32)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.return loc(#loc28)
  } loc(#loc89)
  cir.func internal private @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc39)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.call @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc41)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc95)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc44)
    cir.return loc(#loc35)
  } loc(#loc92)
  cir.func internal private @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc47, #loc48])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc97)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc49)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc50)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc81)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc52)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc52)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc50)
    cir.return loc(#loc46)
  } loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc56)
  cir.func internal private @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc100)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc62)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.call @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc64)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc103)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc104)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc105)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc74)
    cir.br ^bb4 loc(#loc70)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc66)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc58)
  } loc(#loc99)
  cir.func @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_434goodEv() extra(#fn_attr) {
    cir.call @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L7goodG2BEv() : () -> () loc(#loc78)
    cir.call @_ZN43CWE369_Divide_by_Zero__int_fscanf_modulo_43L7goodB2GEv() : () -> () loc(#loc79)
    cir.return loc(#loc77)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":28:19)
#loc6 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":25:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":29:1)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":26:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":28:5)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":28:12)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":28:26)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":31:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":39:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":33:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":33:9)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":35:13)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":35:12)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":35:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":36:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":38:18)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":38:24)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":38:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":46:1)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":50:1)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":47:1)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":49:12)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":49:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":52:1)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":60:1)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":54:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":54:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":56:13)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":56:12)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":56:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":57:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":59:18)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":59:24)
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":59:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":63:1)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":67:1)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":64:1)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":66:5)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":66:12)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":66:19)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":66:26)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":82:19)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":69:1)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":84:1)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":71:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":71:9)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":73:13)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":73:12)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":73:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":74:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":76:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":83:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":76:9)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":76:17)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":77:5)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":79:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":81:5)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":78:22)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":78:28)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":78:9)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":82:9)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":86:1)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":90:1)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":88:5)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_43.cpp":89:5)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc6, #loc7])
#loc84 = loc(fused[#loc14, #loc15])
#loc85 = loc(fused[#loc16, #loc17])
#loc86 = loc(fused[#loc18, #loc19])
#loc87 = loc(fused[#loc22, #loc20])
#loc88 = loc(fused[#loc24, #loc25])
#loc89 = loc(fused[#loc27, #loc28])
#loc91 = loc(fused[#loc33, #loc32])
#loc92 = loc(fused[#loc34, #loc35])
#loc93 = loc(fused[#loc36, #loc37])
#loc94 = loc(fused[#loc40, #loc38])
#loc95 = loc(fused[#loc42, #loc43])
#loc96 = loc(fused[#loc45, #loc46])
#loc98 = loc(fused[#loc54, #loc55])
#loc99 = loc(fused[#loc57, #loc58])
#loc100 = loc(fused[#loc59, #loc60])
#loc101 = loc(fused[#loc63, #loc61])
#loc102 = loc(fused[#loc65, #loc66])
#loc103 = loc(fused[#loc67, #loc68])
#loc104 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc105 = loc(fused[#loc72, #loc73])
#loc106 = loc(fused[#loc76, #loc77])
