!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_fscanf_postinc_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc80)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc82)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_postinc_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc84)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc85)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc14)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc86)
    cir.br ^bb1 loc(#loc87)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc81)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc88)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc22)
    %11 = cir.unary(inc, %10) : !s16i, !s16i loc(#loc23)
    cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc89)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc13)
    cir.store %12, %1 : !s16i, !cir.ptr<!s16i> loc(#loc85)
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc24)
    %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc24)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc25)
    cir.return loc(#loc9)
  } loc(#loc83)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_postinc_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc90)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc95)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc96)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc41)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc97)
    cir.br ^bb1 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc45)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc81)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc47)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc47)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc45)
    cir.br ^bb2 loc(#loc99)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc100)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc52)
    %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc52)
    %12 = cir.const #cir.int<32767> : !s32i loc(#loc53)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc101)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc102)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc57)
    %15 = cir.unary(inc, %14) : !s16i, !s16i loc(#loc58)
    cir.store %15, %1 : !s16i, !cir.ptr<!s16i> loc(#loc103)
    %16 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc38)
    cir.store %16, %0 : !s16i, !cir.ptr<!s16i> loc(#loc95)
    %17 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc59)
    %18 = cir.cast(integral, %17 : !s16i), !s32i loc(#loc59)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc60)
    cir.br ^bb6 loc(#loc55)
  ^bb5:  // pred: ^bb3
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc34)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb6 loc(#loc51)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc51)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc36)
  } loc(#loc94)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc105)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc106)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc68)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc72)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc109)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc76)
    %7 = cir.unary(inc, %6) : !s16i, !s16i loc(#loc77)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc111)
    %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc67)
    cir.store %8, %1 : !s16i, !cir.ptr<!s16i> loc(#loc106)
    %9 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc78)
    %10 = cir.cast(integral, %9 : !s16i), !s32i loc(#loc78)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc79)
    cir.return loc(#loc63)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_fscanf_postinc_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":29:20)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":22:1)
#loc9 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":38:1)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":24:5)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":24:11)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":35:9)
#loc13 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":35:24)
#loc14 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":25:12)
#loc15 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":25:5)
#loc16 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":26:5)
#loc17 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":26:10)
#loc18 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":29:5)
#loc19 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":29:13)
#loc20 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":30:5)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":30:10)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":34:13)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":34:9)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":36:22)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":36:9)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":87:1)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":91:1)
#loc28 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":89:5)
#loc29 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":89:13)
#loc30 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":90:5)
#loc31 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":90:13)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":64:19)
#loc35 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":45:1)
#loc36 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":66:1)
#loc37 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":59:9)
#loc38 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":59:24)
#loc39 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":47:5)
#loc40 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":47:11)
#loc41 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":48:12)
#loc42 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":48:5)
#loc43 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":49:5)
#loc44 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":49:10)
#loc45 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":52:5)
#loc46 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":52:13)
#loc47 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":52:20)
#loc48 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":53:5)
#loc49 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":53:10)
#loc50 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":56:5)
#loc51 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":65:5)
#loc52 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":56:9)
#loc53 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":56:16)
#loc54 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":57:5)
#loc55 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":61:5)
#loc56 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":63:5)
#loc57 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":58:13)
#loc58 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":58:9)
#loc59 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":60:22)
#loc60 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":60:9)
#loc61 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":64:9)
#loc62 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":69:1)
#loc63 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":85:1)
#loc64 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":71:5)
#loc65 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":71:11)
#loc66 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":82:9)
#loc67 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":82:24)
#loc68 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":72:12)
#loc69 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":72:5)
#loc70 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":73:5)
#loc71 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":73:10)
#loc72 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":76:12)
#loc73 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":76:5)
#loc74 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":77:5)
#loc75 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":77:10)
#loc76 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":81:13)
#loc77 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":81:9)
#loc78 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":83:22)
#loc79 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_18.c":83:9)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc6, #loc7])
#loc83 = loc(fused[#loc8, #loc9])
#loc84 = loc(fused[#loc10, #loc11])
#loc85 = loc(fused[#loc12, #loc13])
#loc86 = loc(fused[#loc15, #loc14])
#loc87 = loc(fused[#loc16, #loc17])
#loc88 = loc(fused[#loc20, #loc21])
#loc89 = loc(fused[#loc23, #loc22])
#loc90 = loc(fused[#loc26, #loc27])
#loc91 = loc(fused[#loc28, #loc29])
#loc92 = loc(fused[#loc30, #loc31])
#loc93 = loc(fused[#loc32, #loc33])
#loc94 = loc(fused[#loc35, #loc36])
#loc95 = loc(fused[#loc37, #loc38])
#loc96 = loc(fused[#loc39, #loc40])
#loc97 = loc(fused[#loc42, #loc41])
#loc98 = loc(fused[#loc43, #loc44])
#loc99 = loc(fused[#loc48, #loc49])
#loc100 = loc(fused[#loc50, #loc51])
#loc101 = loc(fused[#loc52, #loc53])
#loc102 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc103 = loc(fused[#loc58, #loc57])
#loc104 = loc(fused[#loc62, #loc63])
#loc105 = loc(fused[#loc64, #loc65])
#loc106 = loc(fused[#loc66, #loc67])
#loc107 = loc(fused[#loc69, #loc68])
#loc108 = loc(fused[#loc70, #loc71])
#loc109 = loc(fused[#loc73, #loc72])
#loc110 = loc(fused[#loc74, #loc75])
#loc111 = loc(fused[#loc77, #loc76])
