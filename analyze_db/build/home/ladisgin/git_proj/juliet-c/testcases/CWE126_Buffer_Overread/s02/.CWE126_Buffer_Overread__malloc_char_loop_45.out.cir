!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":113:10)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":113:14)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":113:20)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":113:32)
#loc236 = loc(fused[#loc58, #loc59])
#loc237 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc213)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc214)
  cir.global "private" internal dsolocal @CWE126_Buffer_Overread__malloc_char_loop_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc215)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc219)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc220)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc24)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc26)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %18 = cir.const #cir.int<65> : !s32i loc(#loc28)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc29)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc29)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc226)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc33)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %26 = cir.const #cir.int<50> : !s32i loc(#loc35)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc35)
    %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc227)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %31 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.store %30, %31 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    %32 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %32() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc8)
  } loc(#loc216)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc43)
  } loc(#loc230)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc232)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc233)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_45_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_45_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %17 : !s32i loc(#loc240)
  } loc(#loc235)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc241)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc242)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc245)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc246)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc247)
    %4 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
    %8 = cir.const #cir.int<67> : !s32i loc(#loc92)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc93)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc93)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc249)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc97)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc98)
    %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc101)
    %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
    %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc101)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc251)
    cir.br ^bb2 loc(#loc252)
  ^bb2:  // pred: ^bb1
    %23 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc107)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc253)
    cir.br ^bb3 loc(#loc252)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %27 = cir.cmp(lt, %25, %26) : !u64i, !cir.bool loc(#loc254)
    cir.brcond %27 ^bb4, ^bb8 loc(#loc111)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc255)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc114)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc115)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc113)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc256)
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // pred: ^bb6
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc119)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc257)
    cir.br ^bb3 loc(#loc252)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    %37 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc120)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc121)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc258)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb10 loc(#loc90)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc81)
  } loc(#loc243)
  cir.global "private" internal dsolocal @CWE126_Buffer_Overread__malloc_char_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc259)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc134)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc137)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc263)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc264)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc265)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc268)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc269)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc149)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb3 loc(#loc143)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
    %18 = cir.const #cir.int<65> : !s32i loc(#loc151)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc152)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc152)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc152)
    cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc156)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc158)
    %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc160)
    cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc271)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %31 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.store %30, %31 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc272)
    %32 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call %32() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc163)
    cir.return loc(#loc131)
  } loc(#loc260)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc276)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc277)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc278)
    %4 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    cir.br ^bb1 loc(#loc279)
  ^bb1:  // pred: ^bb0
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc176)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
    %8 = cir.const #cir.int<67> : !s32i loc(#loc177)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc178)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc178)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc280)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc182)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc183)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc183)
    %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc185)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc185)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc281)
    %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc186)
    %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc187)
    %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc186)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc282)
    cir.br ^bb2 loc(#loc283)
  ^bb2:  // pred: ^bb1
    %23 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc192)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc284)
    cir.br ^bb3 loc(#loc283)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc194)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    %27 = cir.cmp(lt, %25, %26) : !u64i, !cir.bool loc(#loc285)
    cir.brcond %27 ^bb4, ^bb8 loc(#loc196)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc286)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc199)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc200)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc198)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc201)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc202)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc202)
    cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc287)
    cir.br ^bb6 loc(#loc191)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc191)
  ^bb7:  // pred: ^bb6
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc203)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc204)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    cir.br ^bb3 loc(#loc283)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc191)
  ^bb9:  // pred: ^bb8
    %37 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc205)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc206)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc206)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc208)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc208)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc210)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc212)
    cir.br ^bb10 loc(#loc175)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc166)
  } loc(#loc274)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":21:1)
#loc6 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":21:15)
#loc7 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":47:1)
#loc8 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":58:1)
#loc9 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":49:5)
#loc10 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":49:12)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":50:12)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":50:5)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":52:20)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":52:27)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":52:30)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":52:41)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":52:42)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":52:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:5)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:33)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:9)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:17)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:23)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:24)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:30)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":53:29)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":54:12)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":54:18)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":54:23)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":54:26)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":54:5)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":54:27)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":55:18)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":55:5)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":55:10)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":55:13)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":55:14)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":56:59)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":56:5)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":57:5)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":57:13)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":99:1)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":102:1)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":101:5)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":101:13)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":118:15)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":120:15)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":123:15)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":125:15)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":113:1)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":128:1)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":114:1)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":116:27)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":116:22)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":116:5)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":118:5)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":119:5)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":119:54)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":120:5)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":123:5)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":124:5)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":124:53)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":125:5)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":127:12)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":127:5)
#loc76 = loc("/usr/include/string.h":407:1)
#loc77 = loc("/usr/include/string.h":408:33)
#loc78 = loc("/usr/include/stdlib.h":687:1)
#loc79 = loc("/usr/include/stdlib.h":687:32)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":26:1)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":45:1)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":30:9)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":30:16)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":30:19)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":31:9)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":31:22)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":28:5)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":28:19)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":29:5)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":44:5)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":32:16)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":32:22)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":32:27)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":32:31)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":32:9)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":32:32)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":33:23)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":33:14)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":33:18)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":33:9)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":34:19)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":34:26)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":34:9)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":34:30)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:9)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":40:9)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:18)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:14)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:21)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:25)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:23)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":38:9)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":39:23)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":39:28)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":39:29)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":39:18)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":39:13)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:35)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":37:34)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":41:23)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":41:14)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":41:18)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":41:9)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":42:19)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":42:9)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":43:14)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":43:9)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":22:1)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":22:15)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":86:1)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":97:1)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":88:5)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":88:12)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":89:12)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":89:5)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":91:20)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":91:27)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":91:31)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":91:42)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":91:43)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":91:5)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:5)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:33)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:9)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:17)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:23)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:24)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:30)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":92:29)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":93:12)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":93:18)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":93:23)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":93:27)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":93:5)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":93:28)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":94:19)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":94:5)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":94:10)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":94:14)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":94:15)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":95:63)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":95:5)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":96:5)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":96:17)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":65:1)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":84:1)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":69:9)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":69:16)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":69:19)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":70:9)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":70:22)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":67:5)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":67:19)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":68:5)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":83:5)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":71:16)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":71:22)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":71:27)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":71:31)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":71:9)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":71:32)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":72:23)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":72:14)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":72:18)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":72:9)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":73:19)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":73:26)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":73:9)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":73:30)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:9)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":79:9)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:18)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:14)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:21)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:25)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:23)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":77:9)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":78:23)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":78:28)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":78:29)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":78:18)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":78:13)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:35)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":76:34)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":80:23)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":80:14)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":80:18)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":80:9)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":81:19)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":81:9)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":82:14)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_loop_45.c":82:9)
#loc213 = loc(fused[#loc1, #loc2])
#loc214 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc5, #loc6])
#loc216 = loc(fused[#loc7, #loc8])
#loc217 = loc(fused[#loc9, #loc10])
#loc218 = loc(fused[#loc12, #loc11])
#loc219 = loc(fused[#loc15, #loc16])
#loc220 = loc(fused[#loc14, #loc16])
#loc221 = loc(fused[#loc13, #loc17])
#loc222 = loc(fused[#loc18, #loc17])
#loc223 = loc(fused[#loc19, #loc20])
#loc224 = loc(fused[#loc21, #loc22])
#loc225 = loc(fused[#loc23, #loc20])
#loc226 = loc(fused[#loc31, #loc32])
#loc227 = loc(fused[#loc34, #loc33])
#loc228 = loc(fused[#loc39, #loc38])
#loc229 = loc(fused[#loc40, #loc41])
#loc230 = loc(fused[#loc42, #loc43])
#loc231 = loc(fused[#loc44, #loc45])
#loc232 = loc(fused[#loc46, #loc47])
#loc233 = loc(fused[#loc48, #loc49])
#loc234 = loc(fused[#loc50, #loc51])
#loc235 = loc(fused[#loc56, #loc57])
#loc238 = loc(fused[#loc67, #loc68])
#loc239 = loc(fused[#loc71, #loc72])
#loc240 = loc(fused[#loc75, #loc74])
#loc241 = loc(fused[#loc76, #loc77])
#loc242 = loc(fused[#loc78, #loc79])
#loc243 = loc(fused[#loc80, #loc81])
#loc244 = loc(fused[#loc82, #loc83])
#loc245 = loc(fused[#loc82, #loc84])
#loc246 = loc(fused[#loc85, #loc86])
#loc247 = loc(fused[#loc87, #loc88])
#loc248 = loc(fused[#loc89, #loc90])
#loc249 = loc(fused[#loc95, #loc96])
#loc250 = loc(fused[#loc100, #loc97])
#loc251 = loc(fused[#loc103, #loc104])
#loc252 = loc(fused[#loc105, #loc106])
#loc253 = loc(fused[#loc108, #loc107])
#loc254 = loc(fused[#loc109, #loc110])
#loc255 = loc(fused[#loc112, #loc106])
#loc256 = loc(fused[#loc117, #loc115])
#loc257 = loc(fused[#loc119, #loc118])
#loc258 = loc(fused[#loc123, #loc120])
#loc259 = loc(fused[#loc128, #loc129])
#loc260 = loc(fused[#loc130, #loc131])
#loc261 = loc(fused[#loc132, #loc133])
#loc262 = loc(fused[#loc135, #loc134])
#loc263 = loc(fused[#loc138, #loc139])
#loc264 = loc(fused[#loc137, #loc139])
#loc265 = loc(fused[#loc136, #loc140])
#loc266 = loc(fused[#loc141, #loc140])
#loc267 = loc(fused[#loc142, #loc143])
#loc268 = loc(fused[#loc144, #loc145])
#loc269 = loc(fused[#loc146, #loc143])
#loc270 = loc(fused[#loc154, #loc155])
#loc271 = loc(fused[#loc157, #loc156])
#loc272 = loc(fused[#loc162, #loc161])
#loc273 = loc(fused[#loc163, #loc164])
#loc274 = loc(fused[#loc165, #loc166])
#loc275 = loc(fused[#loc167, #loc168])
#loc276 = loc(fused[#loc167, #loc169])
#loc277 = loc(fused[#loc170, #loc171])
#loc278 = loc(fused[#loc172, #loc173])
#loc279 = loc(fused[#loc174, #loc175])
#loc280 = loc(fused[#loc180, #loc181])
#loc281 = loc(fused[#loc185, #loc182])
#loc282 = loc(fused[#loc188, #loc189])
#loc283 = loc(fused[#loc190, #loc191])
#loc284 = loc(fused[#loc193, #loc192])
#loc285 = loc(fused[#loc194, #loc195])
#loc286 = loc(fused[#loc197, #loc191])
#loc287 = loc(fused[#loc202, #loc200])
#loc288 = loc(fused[#loc204, #loc203])
#loc289 = loc(fused[#loc208, #loc205])
