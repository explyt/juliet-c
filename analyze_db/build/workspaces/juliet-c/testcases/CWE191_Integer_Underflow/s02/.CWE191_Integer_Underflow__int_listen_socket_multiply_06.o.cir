!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc540)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc541)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc542)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc543)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc544)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc545)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc546)
  cir.func private @close(!s32i) -> !s32i loc(#loc547)
  cir.func private @printIntLine(!s32i) loc(#loc548)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc550)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc551)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc553)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc556)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc557)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc558)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc559)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc560)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc37)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc558)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc39)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc559)
          cir.scope {
            cir.do {
              cir.scope {
                %14 = cir.const #cir.int<2> : !s32i loc(#loc46)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc47)
                %16 = cir.const #cir.int<6> : !s32i loc(#loc48)
                %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc563)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc55)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc55)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc565)
                  cir.if %62 {
                    cir.break loc(#loc57)
                  } loc(#loc566)
                } loc(#loc564)
                %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc567)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc60)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc568)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc569)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc65)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc65)
                %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc570)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc68)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc571)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc72)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc72)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc572)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                  %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc574)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc575)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc575)
                  %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc84)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc85)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc85)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc576)
                  cir.if %66 {
                    cir.break loc(#loc87)
                  } loc(#loc577)
                } loc(#loc573)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                  %60 = cir.const #cir.int<5> : !s32i loc(#loc91)
                  %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc92)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc93)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc579)
                  cir.if %64 {
                    cir.break loc(#loc95)
                  } loc(#loc580)
                } loc(#loc578)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc97)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc98)
                %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc99)
                cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc581)
                cir.scope {
                  %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc105)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc583)
                  cir.if %62 {
                    cir.break loc(#loc107)
                  } loc(#loc584)
                } loc(#loc582)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
                %39 = cir.const #cir.int<3> : !s32i loc(#loc110)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc110)
                %41 = cir.const #cir.int<4> : !u64i loc(#loc110)
                %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc110)
                %43 = cir.const #cir.int<2> : !s32i loc(#loc110)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc110)
                %45 = cir.binop(add, %42, %44) : !u64i loc(#loc110)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc111)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc111)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc585)
                %49 = cir.const #cir.int<0> : !s32i loc(#loc112)
                %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
                %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc113)
                cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc586)
                cir.scope {
                  %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc119)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc119)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc588)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc120)
                    cir.yield %64 : !cir.bool loc(#loc120)
                  }, false {
                    %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc122)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc589)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc120)
                      cir.yield %68 : !cir.bool loc(#loc120)
                    }, false {
                      %68 = cir.const #false loc(#loc120)
                      cir.yield %68 : !cir.bool loc(#loc120)
                    }) : (!cir.bool) -> !cir.bool loc(#loc120)
                    cir.yield %67 : !cir.bool loc(#loc120)
                  }) : (!cir.bool) -> !cir.bool loc(#loc120)
                  cir.if %63 {
                    cir.break loc(#loc124)
                  } loc(#loc590)
                } loc(#loc587)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc125)
                %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc125)
                %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
                %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc127)
                cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc591)
                %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
                %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc129)
                cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc592)
              } loc(#loc562)
              cir.yield loc(#loc43)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc132)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc132)
              cir.condition(%15) loc(#loc132)
            } loc(#loc561)
          } loc(#loc561)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc136)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc136)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc594)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc139)
            } loc(#loc595)
          } loc(#loc593)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc143)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc597)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc146)
            } loc(#loc598)
          } loc(#loc596)
        } loc(#loc555)
      } loc(#loc554)
    } loc(#loc552)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc149)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc150)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc600)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc155)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc603)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc605)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc158)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc159)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc605)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc160)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc161)
          } loc(#loc604)
        } loc(#loc602)
      } loc(#loc601)
    } loc(#loc599)
    cir.return loc(#loc20)
  } loc(#loc549)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc607)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc164)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc608)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc166)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc609)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc610)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc170)
    cir.return loc(#loc163)
  } loc(#loc606)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc611)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc613)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc180)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc614)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc184)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc185)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc616)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc619)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc620)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc621)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc622)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc623)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc194)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc194)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc621)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc196)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc196)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc622)
          cir.scope {
            cir.do {
              cir.scope {
                %14 = cir.const #cir.int<2> : !s32i loc(#loc203)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc204)
                %16 = cir.const #cir.int<6> : !s32i loc(#loc205)
                %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc206)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc626)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc211)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc212)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc212)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc628)
                  cir.if %62 {
                    cir.break loc(#loc214)
                  } loc(#loc629)
                } loc(#loc627)
                %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc630)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc217)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc631)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc632)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc222)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc222)
                %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc633)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc224)
                %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc224)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc634)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc226)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc226)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc227)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc635)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                  %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc637)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc638)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc638)
                  %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc237)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc238)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc238)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc639)
                  cir.if %66 {
                    cir.break loc(#loc240)
                  } loc(#loc640)
                } loc(#loc636)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                  %60 = cir.const #cir.int<5> : !s32i loc(#loc244)
                  %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc245)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc246)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc246)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc642)
                  cir.if %64 {
                    cir.break loc(#loc248)
                  } loc(#loc643)
                } loc(#loc641)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc250)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc251)
                %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc252)
                cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc644)
                cir.scope {
                  %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc258)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc258)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc646)
                  cir.if %62 {
                    cir.break loc(#loc260)
                  } loc(#loc647)
                } loc(#loc645)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc262)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc262)
                %39 = cir.const #cir.int<3> : !s32i loc(#loc263)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc263)
                %41 = cir.const #cir.int<4> : !u64i loc(#loc263)
                %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc263)
                %43 = cir.const #cir.int<2> : !s32i loc(#loc263)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc263)
                %45 = cir.binop(add, %42, %44) : !u64i loc(#loc263)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc264)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc264)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc648)
                %49 = cir.const #cir.int<0> : !s32i loc(#loc265)
                %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc266)
                %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc266)
                cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc649)
                cir.scope {
                  %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc272)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc272)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc651)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc273)
                    cir.yield %64 : !cir.bool loc(#loc273)
                  }, false {
                    %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc275)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc652)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc273)
                      cir.yield %68 : !cir.bool loc(#loc273)
                    }, false {
                      %68 = cir.const #false loc(#loc273)
                      cir.yield %68 : !cir.bool loc(#loc273)
                    }) : (!cir.bool) -> !cir.bool loc(#loc273)
                    cir.yield %67 : !cir.bool loc(#loc273)
                  }) : (!cir.bool) -> !cir.bool loc(#loc273)
                  cir.if %63 {
                    cir.break loc(#loc277)
                  } loc(#loc653)
                } loc(#loc650)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc278)
                %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc278)
                %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc280)
                %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc280)
                cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc654)
                %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc281)
                %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc282)
                cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc655)
              } loc(#loc625)
              cir.yield loc(#loc200)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc285)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc285)
              cir.condition(%15) loc(#loc285)
            } loc(#loc624)
          } loc(#loc624)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc288)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc289)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc289)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc657)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc291)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc292)
            } loc(#loc658)
          } loc(#loc656)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc295)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc296)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc296)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc660)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc298)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc299)
            } loc(#loc661)
          } loc(#loc659)
        } loc(#loc618)
      } loc(#loc617)
    } loc(#loc615)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc302)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc303)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc663)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc307)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc310)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc311)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc666)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc315)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc316)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc316)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc316)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc316)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc317)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc669)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc670)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc672)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc323)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc324)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc672)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc326)
              } else {
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc175)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc175)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc327)
              } loc(#loc671)
            } loc(#loc668)
          } loc(#loc667)
        } loc(#loc665)
      } loc(#loc664)
    } loc(#loc662)
    cir.return loc(#loc177)
  } loc(#loc612)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc674)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc332)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc675)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc336)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc337)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc677)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc680)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc681)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc682)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc683)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc684)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc346)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc346)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc682)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc348)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc348)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc683)
          cir.scope {
            cir.do {
              cir.scope {
                %14 = cir.const #cir.int<2> : !s32i loc(#loc355)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc356)
                %16 = cir.const #cir.int<6> : !s32i loc(#loc357)
                %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc358)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc687)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc364)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc364)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc689)
                  cir.if %62 {
                    cir.break loc(#loc366)
                  } loc(#loc690)
                } loc(#loc688)
                %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc691)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc369)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc692)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc693)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc374)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc374)
                %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc694)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc376)
                %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc376)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc695)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc378)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc378)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc379)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc696)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc384)
                  %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc698)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc699)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc699)
                  %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc389)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc390)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc390)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc700)
                  cir.if %66 {
                    cir.break loc(#loc392)
                  } loc(#loc701)
                } loc(#loc697)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc395)
                  %60 = cir.const #cir.int<5> : !s32i loc(#loc396)
                  %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc397)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc398)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc398)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc703)
                  cir.if %64 {
                    cir.break loc(#loc400)
                  } loc(#loc704)
                } loc(#loc702)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc401)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc402)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc403)
                %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc404)
                cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc705)
                cir.scope {
                  %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc409)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc410)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc410)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc707)
                  cir.if %62 {
                    cir.break loc(#loc412)
                  } loc(#loc708)
                } loc(#loc706)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc414)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc414)
                %39 = cir.const #cir.int<3> : !s32i loc(#loc415)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc415)
                %41 = cir.const #cir.int<4> : !u64i loc(#loc415)
                %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc415)
                %43 = cir.const #cir.int<2> : !s32i loc(#loc415)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc415)
                %45 = cir.binop(add, %42, %44) : !u64i loc(#loc415)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc416)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc416)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc709)
                %49 = cir.const #cir.int<0> : !s32i loc(#loc417)
                %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc418)
                %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc418)
                cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc710)
                cir.scope {
                  %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc423)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc424)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc424)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc712)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc425)
                    cir.yield %64 : !cir.bool loc(#loc425)
                  }, false {
                    %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc426)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc427)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc713)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc425)
                      cir.yield %68 : !cir.bool loc(#loc425)
                    }, false {
                      %68 = cir.const #false loc(#loc425)
                      cir.yield %68 : !cir.bool loc(#loc425)
                    }) : (!cir.bool) -> !cir.bool loc(#loc425)
                    cir.yield %67 : !cir.bool loc(#loc425)
                  }) : (!cir.bool) -> !cir.bool loc(#loc425)
                  cir.if %63 {
                    cir.break loc(#loc429)
                  } loc(#loc714)
                } loc(#loc711)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc430)
                %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc430)
                %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc431)
                %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc432)
                %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc432)
                cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc715)
                %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc433)
                %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc434)
                cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc716)
              } loc(#loc686)
              cir.yield loc(#loc352)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc437)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc437)
              cir.condition(%15) loc(#loc437)
            } loc(#loc685)
          } loc(#loc685)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc440)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc441)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc441)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc718)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc443)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc444)
            } loc(#loc719)
          } loc(#loc717)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc447)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc448)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc448)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc721)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc450)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc451)
            } loc(#loc722)
          } loc(#loc720)
        } loc(#loc679)
      } loc(#loc678)
    } loc(#loc676)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc454)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc455)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc724)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc459)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc460)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc727)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc464)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc465)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc465)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc465)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc465)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc466)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc730)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc731)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc733)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc473)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc472)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc473)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc733)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc474)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc475)
              } else {
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc476)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc476)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc477)
              } loc(#loc732)
            } loc(#loc729)
          } loc(#loc728)
        } loc(#loc726)
      } loc(#loc725)
    } loc(#loc723)
    cir.return loc(#loc329)
  } loc(#loc673)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc735)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc482)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc736)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc486)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc487)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc738)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc491)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc491)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc492)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc493)
        %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc494)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc740)
      } loc(#loc739)
    } loc(#loc737)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc498)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc499)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc742)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc503)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc504)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc745)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc747)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc508)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc507)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc508)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc747)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc509)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc510)
          } loc(#loc746)
        } loc(#loc744)
      } loc(#loc743)
    } loc(#loc741)
    cir.return loc(#loc479)
  } loc(#loc734)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc749)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc515)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc750)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc519)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc520)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc752)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc522)
        %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc523)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc754)
      } loc(#loc753)
    } loc(#loc751)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc527)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc528)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc756)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc532)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc533)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc759)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc761)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc537)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc536)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc537)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc761)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc538)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc539)
          } loc(#loc760)
        } loc(#loc758)
      } loc(#loc757)
    } loc(#loc755)
    cir.return loc(#loc512)
  } loc(#loc748)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":49:1)
#loc20 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":135:1)
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":51:5)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":51:9)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":53:12)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":53:5)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":54:5)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":125:5)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":54:8)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":54:27)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":55:5)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":56:9)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":124:9)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":61:13)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":61:17)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":62:13)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":62:32)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":63:13)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":63:35)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":64:13)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":64:35)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":65:13)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":65:45)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":66:13)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":109:21)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":67:13)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":108:13)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:39)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:48)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:61)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:32)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:17)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:72)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":77:17)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":80:17)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":77:21)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":77:37)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":78:17)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":79:21)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:24)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:25)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:34)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:37)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:51)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:17)
#loc64 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:52)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":82:38)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":82:17)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":83:43)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":83:17)
#loc72 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:42)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:17)
#loc76 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:50)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:17)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":88:17)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:26)
#loc80 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:58)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:59)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:68)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:82)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:21)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:88)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":86:17)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":87:21)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:17)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":92:17)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:28)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:42)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:21)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:61)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":90:17)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":91:21)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:39)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:53)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:59)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:32)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:17)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:63)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":94:17)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":97:17)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":94:21)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":94:37)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":95:17)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":96:21)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:35)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:49)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:62)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:80)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:83)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:30)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:17)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:84)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:17)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":103:17)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:21)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:35)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:48)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:51)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:65)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":101:17)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":102:21)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":105:43)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":105:29)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":105:17)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:29)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:24)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:17)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:40)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":109:20)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":110:13)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":113:13)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":110:17)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":110:33)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":111:13)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":112:30)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":112:17)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":114:13)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":117:13)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":114:17)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":114:33)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":115:13)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":116:30)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":116:17)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":126:5)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":134:5)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":126:8)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":126:27)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":127:5)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":128:9)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":133:9)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":128:12)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":128:19)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":129:9)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":131:13)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":131:33)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":131:26)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":132:26)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":132:13)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":387:1)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":393:1)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":389:5)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":389:14)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":390:5)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":390:14)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":391:5)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":391:14)
#loc170 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":392:5)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":392:14)
#loc172 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc173 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":222:19)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":236:27)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":142:1)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":240:1)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":144:5)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":144:9)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":146:12)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":146:5)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":147:5)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":218:5)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":147:8)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":147:27)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":148:5)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":149:9)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":217:9)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":154:13)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":154:17)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":155:13)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":155:32)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":156:13)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":156:35)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":157:13)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":157:35)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":158:13)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":158:45)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":159:13)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":202:21)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":160:13)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":201:13)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:39)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:48)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:61)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:32)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:17)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:72)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":170:17)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":173:17)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":170:21)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":170:37)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":171:17)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":172:21)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:24)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:25)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:34)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:37)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:51)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:17)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:52)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":175:38)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":175:17)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":176:43)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":176:17)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:42)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:36)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:17)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:50)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:17)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":181:17)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:26)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:58)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:59)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:68)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:82)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:21)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:88)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":179:17)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":180:21)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:17)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":185:17)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:28)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:42)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:21)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:61)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":183:17)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":184:21)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:39)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:53)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:59)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:32)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:17)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:63)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":187:17)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":190:17)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":187:21)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":187:37)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":188:17)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":189:21)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:35)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:49)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:62)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:80)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:83)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:30)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:17)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:84)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:17)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":196:17)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:21)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:35)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:48)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:51)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:65)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":194:17)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":195:21)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":198:43)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":198:29)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":198:17)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:29)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:24)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:17)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:40)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":202:20)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":203:13)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":206:13)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":203:17)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":203:33)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":204:13)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":205:30)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":205:17)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":207:13)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":210:13)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":207:17)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":207:33)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":208:13)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":209:30)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":209:17)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":219:5)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":239:5)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":219:8)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":219:27)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":220:5)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":223:5)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":225:5)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":222:9)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":226:9)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":238:9)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":226:12)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":226:19)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":227:9)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:13)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":237:13)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:17)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:25)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:33)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:34)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":230:13)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":233:13)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":235:13)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":231:17)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":231:37)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":231:30)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":232:30)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":232:17)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":236:17)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":243:1)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":336:1)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":245:5)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":245:9)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":247:12)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":247:5)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":248:5)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":319:5)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":248:8)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":248:27)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":249:5)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":250:9)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":318:9)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":255:13)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":255:17)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":256:13)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":256:32)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":257:13)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":257:35)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":258:13)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":258:35)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":259:13)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":259:45)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":260:13)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":303:21)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":261:13)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":302:13)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:39)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:48)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:61)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:32)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:17)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:72)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":271:17)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":274:17)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":271:21)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":271:37)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":272:17)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":273:21)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:24)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:25)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:34)
#loc370 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:37)
#loc371 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:51)
#loc372 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:17)
#loc373 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:52)
#loc374 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":276:38)
#loc375 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":276:17)
#loc376 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":277:43)
#loc377 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":277:17)
#loc378 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:42)
#loc379 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:36)
#loc380 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:17)
#loc381 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:50)
#loc382 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:17)
#loc383 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":282:17)
#loc384 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:26)
#loc385 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:58)
#loc386 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:59)
#loc387 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:68)
#loc388 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:82)
#loc389 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:21)
#loc390 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:88)
#loc391 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":280:17)
#loc392 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":281:21)
#loc393 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:17)
#loc394 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":286:17)
#loc395 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:28)
#loc396 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:42)
#loc397 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:21)
#loc398 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:61)
#loc399 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":284:17)
#loc400 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":285:21)
#loc401 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:39)
#loc402 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:53)
#loc403 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:59)
#loc404 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:32)
#loc405 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:17)
#loc406 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:63)
#loc407 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":288:17)
#loc408 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":291:17)
#loc409 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":288:21)
#loc410 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":288:37)
#loc411 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":289:17)
#loc412 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":290:21)
#loc413 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:35)
#loc414 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:49)
#loc415 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:62)
#loc416 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:80)
#loc417 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:83)
#loc418 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:30)
#loc419 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:17)
#loc420 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:84)
#loc421 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:17)
#loc422 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":297:17)
#loc423 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:21)
#loc424 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:35)
#loc425 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:48)
#loc426 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:51)
#loc427 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:65)
#loc428 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":295:17)
#loc429 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":296:21)
#loc430 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":299:43)
#loc431 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":299:29)
#loc432 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":299:17)
#loc433 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:29)
#loc434 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:24)
#loc435 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:17)
#loc436 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:40)
#loc437 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":303:20)
#loc438 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":304:13)
#loc439 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":307:13)
#loc440 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":304:17)
#loc441 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":304:33)
#loc442 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":305:13)
#loc443 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":306:30)
#loc444 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":306:17)
#loc445 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":308:13)
#loc446 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":311:13)
#loc447 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":308:17)
#loc448 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":308:33)
#loc449 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":309:13)
#loc450 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":310:30)
#loc451 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":310:17)
#loc452 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":320:5)
#loc453 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":335:5)
#loc454 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":320:8)
#loc455 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":320:27)
#loc456 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":321:5)
#loc457 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":322:9)
#loc458 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":334:9)
#loc459 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":322:12)
#loc460 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":322:19)
#loc461 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":323:9)
#loc462 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:13)
#loc463 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":333:13)
#loc464 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:17)
#loc465 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:25)
#loc466 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:33)
#loc467 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:34)
#loc468 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":326:13)
#loc469 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":329:13)
#loc470 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":331:13)
#loc471 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":327:17)
#loc472 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":327:37)
#loc473 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":327:30)
#loc474 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":328:30)
#loc475 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":328:17)
#loc476 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":332:27)
#loc477 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":332:17)
#loc478 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":339:1)
#loc479 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":363:1)
#loc480 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":341:5)
#loc481 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":341:9)
#loc482 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":343:12)
#loc483 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":343:5)
#loc484 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":344:5)
#loc485 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":353:5)
#loc486 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":344:8)
#loc487 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":344:27)
#loc488 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":345:5)
#loc489 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":348:5)
#loc490 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":350:5)
#loc491 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":347:19)
#loc492 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":347:9)
#loc493 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":352:17)
#loc494 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":352:16)
#loc495 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":352:9)
#loc496 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":354:5)
#loc497 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":362:5)
#loc498 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":354:8)
#loc499 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":354:27)
#loc500 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":355:5)
#loc501 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":356:9)
#loc502 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":361:9)
#loc503 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":356:12)
#loc504 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":356:19)
#loc505 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":357:9)
#loc506 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":359:13)
#loc507 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":359:33)
#loc508 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":359:26)
#loc509 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":360:26)
#loc510 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":360:13)
#loc511 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":366:1)
#loc512 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":385:1)
#loc513 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":368:5)
#loc514 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":368:9)
#loc515 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":370:12)
#loc516 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":370:5)
#loc517 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":371:5)
#loc518 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":375:5)
#loc519 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":371:8)
#loc520 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":371:27)
#loc521 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":372:5)
#loc522 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":374:17)
#loc523 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":374:16)
#loc524 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":374:9)
#loc525 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":376:5)
#loc526 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":384:5)
#loc527 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":376:8)
#loc528 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":376:27)
#loc529 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":377:5)
#loc530 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":378:9)
#loc531 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":383:9)
#loc532 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":378:12)
#loc533 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":378:19)
#loc534 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":379:9)
#loc535 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":381:13)
#loc536 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":381:33)
#loc537 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":381:26)
#loc538 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":382:26)
#loc539 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":382:13)
#loc540 = loc(fused[#loc1, #loc2])
#loc541 = loc(fused[#loc3, #loc4])
#loc542 = loc(fused[#loc5, #loc6])
#loc543 = loc(fused[#loc7, #loc8])
#loc544 = loc(fused[#loc9, #loc10])
#loc545 = loc(fused[#loc11, #loc12])
#loc546 = loc(fused[#loc13, #loc14])
#loc547 = loc(fused[#loc15, #loc16])
#loc548 = loc(fused[#loc17, #loc18])
#loc549 = loc(fused[#loc19, #loc20])
#loc550 = loc(fused[#loc21, #loc22])
#loc551 = loc(fused[#loc24, #loc23])
#loc552 = loc(fused[#loc25, #loc26])
#loc553 = loc(fused[#loc27, #loc28])
#loc554 = loc(fused[#loc29, #loc26])
#loc555 = loc(fused[#loc30, #loc31])
#loc556 = loc(fused[#loc32, #loc33])
#loc557 = loc(fused[#loc34, #loc35])
#loc558 = loc(fused[#loc36, #loc37])
#loc559 = loc(fused[#loc38, #loc39])
#loc560 = loc(fused[#loc40, #loc41])
#loc561 = loc(fused[#loc42, #loc43])
#loc562 = loc(fused[#loc44, #loc45])
#loc563 = loc(fused[#loc50, #loc51])
#loc564 = loc(fused[#loc52, #loc53])
#loc565 = loc(fused[#loc54, #loc55])
#loc566 = loc(fused[#loc56, #loc53])
#loc567 = loc(fused[#loc58, #loc59])
#loc568 = loc(fused[#loc61, #loc62])
#loc569 = loc(fused[#loc63, #loc64])
#loc570 = loc(fused[#loc67, #loc65])
#loc571 = loc(fused[#loc71, #loc68])
#loc572 = loc(fused[#loc75, #loc76])
#loc573 = loc(fused[#loc77, #loc78])
#loc574 = loc(fused[#loc80, #loc81])
#loc575 = loc(fused[#loc82, #loc83])
#loc576 = loc(fused[#loc84, #loc85])
#loc577 = loc(fused[#loc86, #loc78])
#loc578 = loc(fused[#loc88, #loc89])
#loc579 = loc(fused[#loc92, #loc93])
#loc580 = loc(fused[#loc94, #loc89])
#loc581 = loc(fused[#loc100, #loc101])
#loc582 = loc(fused[#loc102, #loc103])
#loc583 = loc(fused[#loc104, #loc105])
#loc584 = loc(fused[#loc106, #loc103])
#loc585 = loc(fused[#loc110, #loc111])
#loc586 = loc(fused[#loc114, #loc115])
#loc587 = loc(fused[#loc116, #loc117])
#loc588 = loc(fused[#loc118, #loc119])
#loc589 = loc(fused[#loc121, #loc122])
#loc590 = loc(fused[#loc123, #loc117])
#loc591 = loc(fused[#loc127, #loc125])
#loc592 = loc(fused[#loc130, #loc131])
#loc593 = loc(fused[#loc133, #loc134])
#loc594 = loc(fused[#loc135, #loc136])
#loc595 = loc(fused[#loc137, #loc134])
#loc596 = loc(fused[#loc140, #loc141])
#loc597 = loc(fused[#loc142, #loc143])
#loc598 = loc(fused[#loc144, #loc141])
#loc599 = loc(fused[#loc147, #loc148])
#loc600 = loc(fused[#loc149, #loc150])
#loc601 = loc(fused[#loc151, #loc148])
#loc602 = loc(fused[#loc152, #loc153])
#loc603 = loc(fused[#loc154, #loc155])
#loc604 = loc(fused[#loc156, #loc153])
#loc605 = loc(fused[#loc157, #loc158])
#loc606 = loc(fused[#loc162, #loc163])
#loc607 = loc(fused[#loc164, #loc165])
#loc608 = loc(fused[#loc166, #loc167])
#loc609 = loc(fused[#loc168, #loc169])
#loc610 = loc(fused[#loc170, #loc171])
#loc611 = loc(fused[#loc172, #loc173])
#loc612 = loc(fused[#loc176, #loc177])
#loc613 = loc(fused[#loc178, #loc179])
#loc614 = loc(fused[#loc181, #loc180])
#loc615 = loc(fused[#loc182, #loc183])
#loc616 = loc(fused[#loc184, #loc185])
#loc617 = loc(fused[#loc186, #loc183])
#loc618 = loc(fused[#loc187, #loc188])
#loc619 = loc(fused[#loc189, #loc190])
#loc620 = loc(fused[#loc191, #loc192])
#loc621 = loc(fused[#loc193, #loc194])
#loc622 = loc(fused[#loc195, #loc196])
#loc623 = loc(fused[#loc197, #loc198])
#loc624 = loc(fused[#loc199, #loc200])
#loc625 = loc(fused[#loc201, #loc202])
#loc626 = loc(fused[#loc207, #loc208])
#loc627 = loc(fused[#loc209, #loc210])
#loc628 = loc(fused[#loc211, #loc212])
#loc629 = loc(fused[#loc213, #loc210])
#loc630 = loc(fused[#loc215, #loc216])
#loc631 = loc(fused[#loc218, #loc219])
#loc632 = loc(fused[#loc220, #loc221])
#loc633 = loc(fused[#loc223, #loc222])
#loc634 = loc(fused[#loc225, #loc224])
#loc635 = loc(fused[#loc228, #loc229])
#loc636 = loc(fused[#loc230, #loc231])
#loc637 = loc(fused[#loc233, #loc234])
#loc638 = loc(fused[#loc235, #loc236])
#loc639 = loc(fused[#loc237, #loc238])
#loc640 = loc(fused[#loc239, #loc231])
#loc641 = loc(fused[#loc241, #loc242])
#loc642 = loc(fused[#loc245, #loc246])
#loc643 = loc(fused[#loc247, #loc242])
#loc644 = loc(fused[#loc253, #loc254])
#loc645 = loc(fused[#loc255, #loc256])
#loc646 = loc(fused[#loc257, #loc258])
#loc647 = loc(fused[#loc259, #loc256])
#loc648 = loc(fused[#loc263, #loc264])
#loc649 = loc(fused[#loc267, #loc268])
#loc650 = loc(fused[#loc269, #loc270])
#loc651 = loc(fused[#loc271, #loc272])
#loc652 = loc(fused[#loc274, #loc275])
#loc653 = loc(fused[#loc276, #loc270])
#loc654 = loc(fused[#loc280, #loc278])
#loc655 = loc(fused[#loc283, #loc284])
#loc656 = loc(fused[#loc286, #loc287])
#loc657 = loc(fused[#loc288, #loc289])
#loc658 = loc(fused[#loc290, #loc287])
#loc659 = loc(fused[#loc293, #loc294])
#loc660 = loc(fused[#loc295, #loc296])
#loc661 = loc(fused[#loc297, #loc294])
#loc662 = loc(fused[#loc300, #loc301])
#loc663 = loc(fused[#loc302, #loc303])
#loc664 = loc(fused[#loc304, #loc305, #loc306, #loc301])
#loc665 = loc(fused[#loc308, #loc309])
#loc666 = loc(fused[#loc310, #loc311])
#loc667 = loc(fused[#loc312, #loc309])
#loc668 = loc(fused[#loc313, #loc314])
#loc669 = loc(fused[#loc316, #loc317])
#loc670 = loc(fused[#loc315, #loc318])
#loc671 = loc(fused[#loc319, #loc320, #loc321, #loc314])
#loc672 = loc(fused[#loc322, #loc323])
#loc673 = loc(fused[#loc328, #loc329])
#loc674 = loc(fused[#loc330, #loc331])
#loc675 = loc(fused[#loc333, #loc332])
#loc676 = loc(fused[#loc334, #loc335])
#loc677 = loc(fused[#loc336, #loc337])
#loc678 = loc(fused[#loc338, #loc335])
#loc679 = loc(fused[#loc339, #loc340])
#loc680 = loc(fused[#loc341, #loc342])
#loc681 = loc(fused[#loc343, #loc344])
#loc682 = loc(fused[#loc345, #loc346])
#loc683 = loc(fused[#loc347, #loc348])
#loc684 = loc(fused[#loc349, #loc350])
#loc685 = loc(fused[#loc351, #loc352])
#loc686 = loc(fused[#loc353, #loc354])
#loc687 = loc(fused[#loc359, #loc360])
#loc688 = loc(fused[#loc361, #loc362])
#loc689 = loc(fused[#loc363, #loc364])
#loc690 = loc(fused[#loc365, #loc362])
#loc691 = loc(fused[#loc367, #loc368])
#loc692 = loc(fused[#loc370, #loc371])
#loc693 = loc(fused[#loc372, #loc373])
#loc694 = loc(fused[#loc375, #loc374])
#loc695 = loc(fused[#loc377, #loc376])
#loc696 = loc(fused[#loc380, #loc381])
#loc697 = loc(fused[#loc382, #loc383])
#loc698 = loc(fused[#loc385, #loc386])
#loc699 = loc(fused[#loc387, #loc388])
#loc700 = loc(fused[#loc389, #loc390])
#loc701 = loc(fused[#loc391, #loc383])
#loc702 = loc(fused[#loc393, #loc394])
#loc703 = loc(fused[#loc397, #loc398])
#loc704 = loc(fused[#loc399, #loc394])
#loc705 = loc(fused[#loc405, #loc406])
#loc706 = loc(fused[#loc407, #loc408])
#loc707 = loc(fused[#loc409, #loc410])
#loc708 = loc(fused[#loc411, #loc408])
#loc709 = loc(fused[#loc415, #loc416])
#loc710 = loc(fused[#loc419, #loc420])
#loc711 = loc(fused[#loc421, #loc422])
#loc712 = loc(fused[#loc423, #loc424])
#loc713 = loc(fused[#loc426, #loc427])
#loc714 = loc(fused[#loc428, #loc422])
#loc715 = loc(fused[#loc432, #loc430])
#loc716 = loc(fused[#loc435, #loc436])
#loc717 = loc(fused[#loc438, #loc439])
#loc718 = loc(fused[#loc440, #loc441])
#loc719 = loc(fused[#loc442, #loc439])
#loc720 = loc(fused[#loc445, #loc446])
#loc721 = loc(fused[#loc447, #loc448])
#loc722 = loc(fused[#loc449, #loc446])
#loc723 = loc(fused[#loc452, #loc453])
#loc724 = loc(fused[#loc454, #loc455])
#loc725 = loc(fused[#loc456, #loc453])
#loc726 = loc(fused[#loc457, #loc458])
#loc727 = loc(fused[#loc459, #loc460])
#loc728 = loc(fused[#loc461, #loc458])
#loc729 = loc(fused[#loc462, #loc463])
#loc730 = loc(fused[#loc465, #loc466])
#loc731 = loc(fused[#loc464, #loc467])
#loc732 = loc(fused[#loc468, #loc469, #loc470, #loc463])
#loc733 = loc(fused[#loc471, #loc472])
#loc734 = loc(fused[#loc478, #loc479])
#loc735 = loc(fused[#loc480, #loc481])
#loc736 = loc(fused[#loc483, #loc482])
#loc737 = loc(fused[#loc484, #loc485])
#loc738 = loc(fused[#loc486, #loc487])
#loc739 = loc(fused[#loc488, #loc489, #loc490, #loc485])
#loc740 = loc(fused[#loc495, #loc493])
#loc741 = loc(fused[#loc496, #loc497])
#loc742 = loc(fused[#loc498, #loc499])
#loc743 = loc(fused[#loc500, #loc497])
#loc744 = loc(fused[#loc501, #loc502])
#loc745 = loc(fused[#loc503, #loc504])
#loc746 = loc(fused[#loc505, #loc502])
#loc747 = loc(fused[#loc506, #loc507])
#loc748 = loc(fused[#loc511, #loc512])
#loc749 = loc(fused[#loc513, #loc514])
#loc750 = loc(fused[#loc516, #loc515])
#loc751 = loc(fused[#loc517, #loc518])
#loc752 = loc(fused[#loc519, #loc520])
#loc753 = loc(fused[#loc521, #loc518])
#loc754 = loc(fused[#loc524, #loc522])
#loc755 = loc(fused[#loc525, #loc526])
#loc756 = loc(fused[#loc527, #loc528])
#loc757 = loc(fused[#loc529, #loc526])
#loc758 = loc(fused[#loc530, #loc531])
#loc759 = loc(fused[#loc532, #loc533])
#loc760 = loc(fused[#loc534, #loc531])
#loc761 = loc(fused[#loc535, #loc536])
