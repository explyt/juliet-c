!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":99:10)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":99:14)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":99:20)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":99:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc163 = loc(fused[#loc106, #loc107])
#loc164 = loc(fused[#loc108, #loc109])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc122)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc123)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_323badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc127)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc126)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc127)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc128)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc19)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc130)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc132)
        %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc133)
        %11 = cir.const #cir.int<8> : !u64i loc(#loc134)
        %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc28)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc134)
        cir.call @_ZN12TwoIntsClassC2Ev(%14) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc26)
        cir.store %14, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc133)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %16 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc135)
        %18 = cir.const #cir.int<2> : !s32i loc(#loc32)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
        %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc136)
        %21 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
        cir.store %21, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc137)
      } loc(#loc131)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc38)
      cir.store %7, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc138)
    } loc(#loc129)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc43)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc140)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
      %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc47)
      %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc48)
      cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc49)
    } loc(#loc139)
    cir.return loc(#loc7)
  } loc(#loc124)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc141)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc144)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc145)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc146)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc65)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc148)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc150)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc151)
        %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc150)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc151)
        cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc70)
        cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc150)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc72)
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc152)
        %16 = cir.const #cir.int<2> : !s32i loc(#loc74)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc153)
        %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
        cir.store %19, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc154)
      } loc(#loc149)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc79)
      cir.store %7, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc155)
    } loc(#loc147)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc84)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc157)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
      %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc88)
      %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc89)
      cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc90)
    } loc(#loc156)
    cir.return loc(#loc53)
  } loc(#loc142)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_324goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32L7goodG2BEv() : () -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc158)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc103)
  cir.func @main(%arg0: !s32i loc(fused[#loc106, #loc107]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc108, #loc109])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc110)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc111)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc112)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc112)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc113)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc100)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_324goodEv() : () -> () loc(#loc115)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc101)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc102)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_323badEv() : () -> () loc(#loc118)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc103)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %15 : !s32i loc(#loc165)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":26:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":50:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":28:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":28:20)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":29:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":29:33)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":30:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":30:33)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":31:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":31:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":32:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":43:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":33:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":33:32)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":33:31)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":34:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":41:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":36:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":36:45)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:53)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:41)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":37:45)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":38:34)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":38:13)
#loc31 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":39:34)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":39:13)
#loc34 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":40:20)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":40:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":42:21)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":42:10)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":42:9)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":44:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":49:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":45:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":45:32)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":45:31)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":46:22)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":46:28)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":46:9)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":48:16)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":26:6)
#loc50 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc51 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":57:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":80:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":59:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":59:20)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":60:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":60:33)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":61:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":61:33)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":62:12)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":62:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":63:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":73:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":64:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":64:32)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":64:31)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":65:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":71:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":67:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":67:45)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":67:41)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":68:34)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":68:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":69:34)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":69:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":70:20)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":70:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":72:21)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":72:10)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":72:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":74:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":79:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":75:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":75:32)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":75:31)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":76:22)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":76:28)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":76:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":78:16)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":57:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":82:1)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":85:1)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":84:5)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc99 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":104:15)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":106:15)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":109:15)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":111:15)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":99:1)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":114:1)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":100:1)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":102:27)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":102:22)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":102:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":104:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":105:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":106:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":109:5)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":110:5)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":111:5)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":113:12)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_32.cpp":113:5)
#loc122 = loc(fused[#loc2, #loc3])
#loc123 = loc(fused[#loc4, #loc5])
#loc124 = loc(fused[#loc6, #loc7])
#loc125 = loc(fused[#loc8, #loc9])
#loc126 = loc(fused[#loc10, #loc11])
#loc127 = loc(fused[#loc12, #loc13])
#loc128 = loc(fused[#loc15, #loc14])
#loc129 = loc(fused[#loc16, #loc17])
#loc130 = loc(fused[#loc18, #loc19])
#loc131 = loc(fused[#loc21, #loc22])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc25, #loc26])
#loc134 = loc(fused[#loc27, #loc26])
#loc135 = loc(fused[#loc30, #loc29])
#loc136 = loc(fused[#loc33, #loc32])
#loc137 = loc(fused[#loc36, #loc35])
#loc138 = loc(fused[#loc39, #loc37])
#loc139 = loc(fused[#loc40, #loc41])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc50, #loc51])
#loc142 = loc(fused[#loc52, #loc53])
#loc143 = loc(fused[#loc54, #loc55])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc58, #loc59])
#loc146 = loc(fused[#loc61, #loc60])
#loc147 = loc(fused[#loc62, #loc63])
#loc148 = loc(fused[#loc64, #loc65])
#loc149 = loc(fused[#loc67, #loc68])
#loc150 = loc(fused[#loc69, #loc70])
#loc151 = loc(fused[#loc71, #loc70])
#loc152 = loc(fused[#loc73, #loc72])
#loc153 = loc(fused[#loc75, #loc74])
#loc154 = loc(fused[#loc77, #loc76])
#loc155 = loc(fused[#loc80, #loc78])
#loc156 = loc(fused[#loc81, #loc82])
#loc157 = loc(fused[#loc83, #loc84])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc94, #loc95])
#loc160 = loc(fused[#loc96, #loc97])
#loc161 = loc(fused[#loc98, #loc99])
#loc162 = loc(fused[#loc104, #loc105])
#loc165 = loc(fused[#loc121, #loc120])
