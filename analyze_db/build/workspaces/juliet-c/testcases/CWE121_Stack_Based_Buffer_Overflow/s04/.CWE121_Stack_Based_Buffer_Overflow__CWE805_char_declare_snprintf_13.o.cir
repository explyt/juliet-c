!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc137)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc142)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc143)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc137)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc19)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc145)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc21)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc23)
        %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc23)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc26)
        cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc148)
      } loc(#loc146)
    } loc(#loc144)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc150)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc32)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc33)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc33)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc37)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc37)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc38)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc38)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc40)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc152)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc41)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc43)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc43)
      %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc149)
    cir.return loc(#loc9)
  } loc(#loc140)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc155)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc158)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc159)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc137)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc65)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc161)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc72)
        %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc72)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc75)
        cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc164)
      } loc(#loc162)
    } loc(#loc160)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc166)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc81)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc82)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc82)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc82)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc86)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc86)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc87)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc87)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc89)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc168)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc90)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc92)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc92)
      %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc93)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc93)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc90)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    } loc(#loc165)
    cir.return loc(#loc55)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc171)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc172)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc137)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc108)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc174)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc112)
        %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc112)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc115)
        cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc177)
      } loc(#loc175)
    } loc(#loc173)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc179)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc121)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc122)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc122)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc122)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc180)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc126)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc126)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc127)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc128)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc127)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc129)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc181)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc130)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc132)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc132)
      %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc133)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc133)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    } loc(#loc178)
    cir.return loc(#loc98)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":46:29)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":29:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":49:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":31:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":31:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":32:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":32:26)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":33:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":33:28)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":40:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":34:8)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":34:27)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":38:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":38:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":39:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":39:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":39:14)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":39:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":41:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":48:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":42:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":42:24)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":43:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":43:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":43:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":43:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":43:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":43:34)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":44:25)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":44:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":44:20)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":44:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":46:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":46:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":46:24)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":46:35)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":47:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":47:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":104:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":108:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":106:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":106:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":107:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":107:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":64:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":56:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":80:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":58:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":58:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":59:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":59:26)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":60:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":60:28)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":61:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":71:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":61:8)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":61:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":62:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":65:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":67:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":64:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":69:16)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":69:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":70:19)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":70:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":70:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":70:15)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":72:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":79:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":73:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":73:24)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":74:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":74:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":74:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":74:33)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":74:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":74:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":75:25)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":75:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":75:20)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":75:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":77:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":77:18)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":77:24)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":77:29)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":77:35)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":78:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":78:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":83:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":102:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":85:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":85:12)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":86:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":86:26)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":87:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":87:28)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":88:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":93:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":88:8)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":88:27)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":89:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":91:16)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":91:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":92:19)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":92:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":92:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":92:15)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":94:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":101:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":95:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":95:24)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":96:16)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":96:24)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":96:29)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":96:33)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":96:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":96:34)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":97:25)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":97:16)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":97:20)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":97:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":99:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":99:18)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":99:24)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":99:29)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":99:35)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":100:19)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_13.c":100:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc6, #loc7])
#loc140 = loc(fused[#loc8, #loc9])
#loc141 = loc(fused[#loc10, #loc11])
#loc142 = loc(fused[#loc12, #loc13])
#loc143 = loc(fused[#loc14, #loc15])
#loc144 = loc(fused[#loc16, #loc17])
#loc145 = loc(fused[#loc18, #loc19])
#loc146 = loc(fused[#loc20, #loc17])
#loc147 = loc(fused[#loc22, #loc21])
#loc148 = loc(fused[#loc24, #loc23])
#loc149 = loc(fused[#loc27, #loc28])
#loc150 = loc(fused[#loc29, #loc30])
#loc151 = loc(fused[#loc35, #loc36])
#loc152 = loc(fused[#loc40, #loc37])
#loc153 = loc(fused[#loc47, #loc48])
#loc154 = loc(fused[#loc49, #loc50])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc64, #loc65])
#loc162 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc163 = loc(fused[#loc71, #loc70])
#loc164 = loc(fused[#loc73, #loc72])
#loc165 = loc(fused[#loc76, #loc77])
#loc166 = loc(fused[#loc78, #loc79])
#loc167 = loc(fused[#loc84, #loc85])
#loc168 = loc(fused[#loc89, #loc86])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc101, #loc102])
#loc172 = loc(fused[#loc103, #loc104])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc109, #loc106])
#loc176 = loc(fused[#loc111, #loc110])
#loc177 = loc(fused[#loc113, #loc112])
#loc178 = loc(fused[#loc116, #loc117])
#loc179 = loc(fused[#loc118, #loc119])
#loc180 = loc(fused[#loc124, #loc125])
#loc181 = loc(fused[#loc129, #loc126])
