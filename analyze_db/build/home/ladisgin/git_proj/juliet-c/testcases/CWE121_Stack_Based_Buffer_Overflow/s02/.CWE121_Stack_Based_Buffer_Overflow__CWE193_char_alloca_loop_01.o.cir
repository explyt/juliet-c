!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc97)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc98)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc98)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc103)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc105)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc17)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc106)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc19)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc19)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc19)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %22, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc22)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %28 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc98)
    cir.copy %28 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc98)
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc28)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc29)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc28)
    cir.store %31, %2 : !u64i, !cir.ptr<!u64i> loc(#loc110)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %32 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc34)
    cir.store %33, %1 : !u64i, !cir.ptr<!u64i> loc(#loc112)
    cir.br ^bb3 loc(#loc111)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc38)
    %38 = cir.binop(add, %35, %37) : !u64i loc(#loc113)
    %39 = cir.cmp(lt, %34, %38) : !u64i, !cir.bool loc(#loc114)
    cir.brcond %39 ^bb4, ^bb8 loc(#loc39)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc42)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc42)
    %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc42)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    %47 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %48 = cir.unary(inc, %47) : !u64i, !u64i loc(#loc48)
    cir.store %48, %1 : !u64i, !cir.ptr<!u64i> loc(#loc117)
    cir.br ^bb3 loc(#loc111)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // pred: ^bb8
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb10 loc(#loc27)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc101)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc118)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc97)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc122)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc124)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc63)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc63)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc63)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc63)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc63)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc125)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc63)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc65)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc65)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc65)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc65)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc65)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.store %22, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc68)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %28 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc97)
    cir.copy %28 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc97)
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc74)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc75)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc74)
    cir.store %31, %2 : !u64i, !cir.ptr<!u64i> loc(#loc129)
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %32 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc80)
    cir.store %33, %1 : !u64i, !cir.ptr<!u64i> loc(#loc131)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc84)
    %38 = cir.binop(add, %35, %37) : !u64i loc(#loc132)
    %39 = cir.cmp(lt, %34, %38) : !u64i, !cir.bool loc(#loc133)
    cir.brcond %39 ^bb4, ^bb8 loc(#loc85)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc134)
  ^bb5:  // pred: ^bb4
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc88)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc88)
    %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc88)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc91)
    cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    cir.br ^bb6 loc(#loc79)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc79)
  ^bb7:  // pred: ^bb6
    %47 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %48 = cir.unary(inc, %47) : !u64i, !u64i loc(#loc94)
    cir.store %48, %1 : !u64i, !cir.ptr<!u64i> loc(#loc136)
    cir.br ^bb3 loc(#loc130)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb10 loc(#loc73)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc56)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":66:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":66:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":38:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":38:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":49:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":39:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":39:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":39:19)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":30:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":31:36)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":32:37)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":35:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":35:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":36:15)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":36:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":36:10)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":36:11)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":37:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":48:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":40:21)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":40:28)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":40:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":40:34)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":46:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:18)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:14)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:21)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:25)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:37)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:23)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":44:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":45:30)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":45:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":45:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":45:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":45:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":45:31)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:41)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":43:40)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":47:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":47:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":79:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":82:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":81:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":81:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":56:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":77:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":67:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":67:16)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":67:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":58:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":58:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":59:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":59:36)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":60:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":60:37)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":63:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":63:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":64:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":64:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":64:10)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":64:11)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":65:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":76:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":68:21)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":68:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":68:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":68:34)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":74:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:18)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:14)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:21)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:25)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:37)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":72:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":73:30)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":73:23)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":73:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":73:18)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":73:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":73:31)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:41)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":71:40)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":75:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_01.c":75:9)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc11, #loc12])
#loc103 = loc(fused[#loc11, #loc13])
#loc104 = loc(fused[#loc14, #loc15])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc21, #loc20])
#loc108 = loc(fused[#loc23, #loc22])
#loc109 = loc(fused[#loc26, #loc27])
#loc110 = loc(fused[#loc30, #loc31])
#loc111 = loc(fused[#loc32, #loc33])
#loc112 = loc(fused[#loc35, #loc34])
#loc113 = loc(fused[#loc37, #loc38])
#loc114 = loc(fused[#loc36, #loc38])
#loc115 = loc(fused[#loc40, #loc33])
#loc116 = loc(fused[#loc43, #loc46])
#loc117 = loc(fused[#loc48, #loc47])
#loc118 = loc(fused[#loc51, #loc52])
#loc119 = loc(fused[#loc53, #loc54])
#loc120 = loc(fused[#loc55, #loc56])
#loc121 = loc(fused[#loc57, #loc58])
#loc122 = loc(fused[#loc57, #loc59])
#loc123 = loc(fused[#loc60, #loc61])
#loc124 = loc(fused[#loc62, #loc63])
#loc125 = loc(fused[#loc64, #loc65])
#loc126 = loc(fused[#loc67, #loc66])
#loc127 = loc(fused[#loc69, #loc68])
#loc128 = loc(fused[#loc72, #loc73])
#loc129 = loc(fused[#loc76, #loc77])
#loc130 = loc(fused[#loc78, #loc79])
#loc131 = loc(fused[#loc81, #loc80])
#loc132 = loc(fused[#loc83, #loc84])
#loc133 = loc(fused[#loc82, #loc84])
#loc134 = loc(fused[#loc86, #loc79])
#loc135 = loc(fused[#loc89, #loc92])
#loc136 = loc(fused[#loc94, #loc93])
