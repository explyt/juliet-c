!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":21:21)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":21:27)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":46:19)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":98:10)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":98:14)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":98:20)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":98:32)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":56:25)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":56:31)
#loc146 = loc(fused[#loc9, #loc10])
#loc169 = loc(fused[#loc74, #loc75])
#loc170 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc94, #loc95])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc143)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc144)
  cir.func internal private @badSink(%arg0: !s16i loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc146)
    cir.store %arg0, %1 : !s16i, !cir.ptr<!s16i> loc(#loc13)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc16)
    %3 = cir.cast(integral, %2 : !s16i), !s32i loc(#loc16)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %7 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc20)
    %8 = cir.cast(integral, %7 : !s16i), !u64i loc(#loc20)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc154)
  ^bb4:  // pred: ^bb3
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc28)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
    cir.br ^bb5 loc(#loc22)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc30)
    %21 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc31)
    %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc31)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc31)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc31)
    cir.libc.memset %25 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc35)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %29 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc37)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc37)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc37)
    %33 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %27, %33 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc145)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc157)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc51)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc160)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc52)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc161)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc54)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc54)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc54)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc54)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc54)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc54)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc54)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc54)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc54)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc54)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc54)
    cir.br ^bb3(%20 : !u32i) loc(#loc54)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc54)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc54)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc54)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc54)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc54)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc54)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc54)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc54)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc54)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc54)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc54)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc54)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc54)
    cir.br ^bb3(%36 : !u32i) loc(#loc54)
  ^bb3(%37: !u32i loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":46:19)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc54)
    %39 = cir.cast(integral, %38 : !s32i), !s16i loc(#loc54)
    cir.store %39, %0 : !s16i, !cir.ptr<!s16i> loc(#loc162)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc56)
    %41 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc57)
    cir.call %40(%41) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc56)
    cir.return loc(#loc47)
  } loc(#loc158)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc163)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc165)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_44_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_44_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %17 : !s32i loc(#loc173)
  } loc(#loc168)
  cir.func internal private @goodG2BSink(%arg0: !s16i loc(fused[#loc94, #loc95])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc175)
    cir.store %arg0, %1 : !s16i, !cir.ptr<!s16i> loc(#loc98)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc101)
    %3 = cir.cast(integral, %2 : !s16i), !s32i loc(#loc101)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc179)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc104)
    %7 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc105)
    %8 = cir.cast(integral, %7 : !s16i), !u64i loc(#loc105)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb3 loc(#loc181)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc182)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc183)
  ^bb4:  // pred: ^bb3
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc113)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
    cir.br ^bb5 loc(#loc107)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc107)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc115)
    %21 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc116)
    %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc116)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc116)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc116)
    cir.libc.memset %25 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc120)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %29 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc122)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc122)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc122)
    %33 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %27, %33 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc128)
    cir.br ^bb7 loc(#loc100)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc100)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc93)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc134)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc188)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc135)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc189)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc137)
    %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc137)
    cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc190)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc140)
    %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc141)
    cir.call %9(%10) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc140)
    cir.return loc(#loc130)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":21:1)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":36:1)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":28:9)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":28:48)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":22:1)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":24:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":35:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":24:9)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":24:16)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":25:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":28:37)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":28:44)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:9)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:43)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:13)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:27)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:33)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:34)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:40)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":29:39)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":31:16)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":31:28)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":31:33)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":31:38)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":31:9)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":31:39)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":32:30)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":32:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":32:20)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":32:25)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":32:26)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":33:19)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":33:9)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":34:14)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":34:9)
#loc44 = loc("/usr/include/stdlib.h":573:1)
#loc45 = loc("/usr/include/stdlib.h":573:24)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":38:1)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":49:1)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":40:5)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":40:11)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":42:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":42:31)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":44:12)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":44:5)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":46:5)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":48:5)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":48:13)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":84:1)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":87:1)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":86:5)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":86:13)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":103:15)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":105:15)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":108:15)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":110:15)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":98:1)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":113:1)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":99:1)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":101:27)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":101:22)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":101:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":103:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":104:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":104:59)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":105:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":108:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":109:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":109:58)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":110:5)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":112:12)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":112:5)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":56:1)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":71:1)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":63:9)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":63:48)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":57:1)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":59:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":70:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":59:9)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":59:16)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":60:5)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":63:37)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":63:44)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:9)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:43)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:13)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:27)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:33)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:34)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:40)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":64:39)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":66:16)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":66:28)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":66:33)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":66:38)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":66:9)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":66:39)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":67:30)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":67:9)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":67:20)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":67:25)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":67:26)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":68:19)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":68:9)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":69:14)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":69:9)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":73:1)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":82:1)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":75:5)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":75:11)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":76:5)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":76:31)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":78:12)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":78:5)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":80:12)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":80:16)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":80:5)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":81:5)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_44.c":81:13)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc14, #loc15])
#loc149 = loc(fused[#loc16, #loc17])
#loc150 = loc(fused[#loc18, #loc15])
#loc151 = loc(fused[#loc19, #loc12])
#loc152 = loc(fused[#loc21, #loc22])
#loc153 = loc(fused[#loc23, #loc24])
#loc154 = loc(fused[#loc25, #loc22])
#loc155 = loc(fused[#loc33, #loc34])
#loc156 = loc(fused[#loc36, #loc35])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc53, #loc52])
#loc162 = loc(fused[#loc55, #loc54])
#loc163 = loc(fused[#loc58, #loc59])
#loc164 = loc(fused[#loc60, #loc61])
#loc165 = loc(fused[#loc62, #loc63])
#loc166 = loc(fused[#loc64, #loc65])
#loc167 = loc(fused[#loc66, #loc67])
#loc168 = loc(fused[#loc72, #loc73])
#loc171 = loc(fused[#loc83, #loc84])
#loc172 = loc(fused[#loc87, #loc88])
#loc173 = loc(fused[#loc91, #loc90])
#loc174 = loc(fused[#loc92, #loc93])
#loc176 = loc(fused[#loc96, #loc97])
#loc177 = loc(fused[#loc99, #loc100])
#loc178 = loc(fused[#loc101, #loc102])
#loc179 = loc(fused[#loc103, #loc100])
#loc180 = loc(fused[#loc104, #loc97])
#loc181 = loc(fused[#loc106, #loc107])
#loc182 = loc(fused[#loc108, #loc109])
#loc183 = loc(fused[#loc110, #loc107])
#loc184 = loc(fused[#loc118, #loc119])
#loc185 = loc(fused[#loc121, #loc120])
#loc186 = loc(fused[#loc129, #loc130])
#loc187 = loc(fused[#loc131, #loc132])
#loc188 = loc(fused[#loc133, #loc134])
#loc189 = loc(fused[#loc136, #loc135])
#loc190 = loc(fused[#loc139, #loc138])
