!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
        cir.condition(%3) loc(#loc19)
      } do {
        cir.scope {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
          %3 = cir.const #cir.int<50> : !s32i loc(#loc22)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc22)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc157)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc158)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
          cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
          cir.scope {
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc33)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc34)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
            } loc(#loc163)
          } loc(#loc161)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
          %11 = cir.const #cir.int<65> : !s32i loc(#loc36)
          %12 = cir.const #cir.int<50> : !s32i loc(#loc37)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc37)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc37)
          cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc41)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc41)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %19 = cir.const #cir.int<50> : !s32i loc(#loc43)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc43)
          %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc45)
          cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc165)
          cir.break loc(#loc46)
        } loc(#loc156)
        cir.yield loc(#loc18)
      } loc(#loc155)
    } loc(#loc155)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc167)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc52)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc53)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc54)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc53)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc53)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc57)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc57)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc58)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc58)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc60)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc169)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc63)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc63)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc170)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc171)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc172)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc69)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc69)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc70)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc71)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc70)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc72)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc173)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc75)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    } loc(#loc166)
    cir.return loc(#loc12)
  } loc(#loc152)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc89)
        cir.condition(%3) loc(#loc89)
      } do {
        cir.scope {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc91)
          %3 = cir.const #cir.int<100> : !s32i loc(#loc92)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc92)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc181)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc182)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
          cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
          cir.scope {
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc102)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc104)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
            } loc(#loc187)
          } loc(#loc185)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
          %11 = cir.const #cir.int<65> : !s32i loc(#loc106)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc107)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc108)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc107)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc107)
          cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc188)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc111)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc113)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc114)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc113)
          %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc115)
          cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc189)
          cir.break loc(#loc116)
        } loc(#loc180)
        cir.yield loc(#loc88)
      } loc(#loc179)
    } loc(#loc179)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc191)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc122)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc123)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc124)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc123)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc123)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc127)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc128)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc128)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc130)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc193)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc133)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc133)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc194)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc195)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc196)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc139)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc139)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc141)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc140)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc142)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc197)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc144)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc145)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
    } loc(#loc190)
    cir.return loc(#loc82)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":47:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":35:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":27:11)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":28:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":30:24)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":30:31)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":30:34)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":30:45)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":30:46)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":30:9)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:37)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:13)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:21)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:27)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:28)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:34)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":31:33)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":32:16)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":32:22)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":32:27)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":32:30)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":32:9)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":32:31)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":33:22)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":33:9)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":33:14)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":33:17)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":33:18)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":34:9)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":36:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":46:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":37:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":37:22)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":38:16)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":38:22)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":38:27)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":38:31)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":38:9)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":38:32)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":39:23)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":39:14)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":39:18)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":39:9)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:17)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:23)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:29)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:36)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:42)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:53)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:9)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":42:54)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":43:23)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":43:14)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":43:18)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":43:9)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":44:19)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":44:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":45:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":45:14)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":80:1)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":83:1)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":82:5)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":82:13)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":54:1)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":78:1)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":56:5)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":56:12)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":57:12)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":57:5)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":58:5)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":66:5)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":58:11)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":59:5)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":61:24)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":61:31)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":61:35)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":61:46)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":61:47)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":61:9)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:9)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:37)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:13)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:21)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:27)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:28)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:34)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":62:33)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":63:16)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":63:22)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":63:27)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":63:31)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":63:9)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":63:32)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":64:23)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":64:9)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":64:14)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":64:18)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":64:19)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":65:9)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":67:5)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":77:5)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":68:9)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":68:22)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":69:16)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":69:22)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":69:27)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":69:31)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":69:9)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":69:32)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":70:23)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":70:14)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":70:18)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":70:9)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:17)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:23)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:29)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:36)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:42)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:53)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:9)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":73:54)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":74:23)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":74:14)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":74:18)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":74:9)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":75:19)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":75:9)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":76:9)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_16.c":76:14)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc16, #loc15])
#loc155 = loc(fused[#loc17, #loc18])
#loc156 = loc(fused[#loc20, #loc18])
#loc157 = loc(fused[#loc23, #loc24])
#loc158 = loc(fused[#loc22, #loc24])
#loc159 = loc(fused[#loc21, #loc25])
#loc160 = loc(fused[#loc26, #loc25])
#loc161 = loc(fused[#loc27, #loc28])
#loc162 = loc(fused[#loc29, #loc30])
#loc163 = loc(fused[#loc31, #loc28])
#loc164 = loc(fused[#loc39, #loc40])
#loc165 = loc(fused[#loc42, #loc41])
#loc166 = loc(fused[#loc47, #loc48])
#loc167 = loc(fused[#loc49, #loc50])
#loc168 = loc(fused[#loc55, #loc56])
#loc169 = loc(fused[#loc60, #loc57])
#loc170 = loc(fused[#loc65, #loc66])
#loc171 = loc(fused[#loc63, #loc66])
#loc172 = loc(fused[#loc67, #loc68])
#loc173 = loc(fused[#loc72, #loc69])
#loc174 = loc(fused[#loc77, #loc78])
#loc175 = loc(fused[#loc79, #loc80])
#loc176 = loc(fused[#loc81, #loc82])
#loc177 = loc(fused[#loc83, #loc84])
#loc178 = loc(fused[#loc86, #loc85])
#loc179 = loc(fused[#loc87, #loc88])
#loc180 = loc(fused[#loc90, #loc88])
#loc181 = loc(fused[#loc93, #loc94])
#loc182 = loc(fused[#loc92, #loc94])
#loc183 = loc(fused[#loc91, #loc95])
#loc184 = loc(fused[#loc96, #loc95])
#loc185 = loc(fused[#loc97, #loc98])
#loc186 = loc(fused[#loc99, #loc100])
#loc187 = loc(fused[#loc101, #loc98])
#loc188 = loc(fused[#loc109, #loc110])
#loc189 = loc(fused[#loc112, #loc111])
#loc190 = loc(fused[#loc117, #loc118])
#loc191 = loc(fused[#loc119, #loc120])
#loc192 = loc(fused[#loc125, #loc126])
#loc193 = loc(fused[#loc130, #loc127])
#loc194 = loc(fused[#loc135, #loc136])
#loc195 = loc(fused[#loc133, #loc136])
#loc196 = loc(fused[#loc137, #loc138])
#loc197 = loc(fused[#loc142, #loc139])
