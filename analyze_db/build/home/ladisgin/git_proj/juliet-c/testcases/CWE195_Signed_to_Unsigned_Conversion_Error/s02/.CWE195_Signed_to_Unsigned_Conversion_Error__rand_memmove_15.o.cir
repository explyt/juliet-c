!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":30:16)
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc15)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc19)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc17)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc21)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc21)
  ^bb5:  // pred: ^bb4
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc21)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc21)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc21)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc21)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc21)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc21)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc21)
    cir.br ^bb7(%21 : !u32i) loc(#loc21)
  ^bb6:  // pred: ^bb4
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc21)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc21)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc21)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc21)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc21)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc21)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc21)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc21)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc21)
    cir.br ^bb7(%37 : !u32i) loc(#loc21)
  ^bb7(%38: !u32i loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":30:16)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc21)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb10 loc(#loc23)
  ^bb9:  // pred: ^bb2
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc18)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc166)
  ^bb12:  // pred: ^bb11
    %42 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc161)
    cir.store %42, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %45 = cir.const #cir.int<65> : !s32i loc(#loc29)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc30)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %49 bytes from %44 set to %45 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc34)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc35)
    %55 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %51, %56 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    cir.br ^bb13 loc(#loc169)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %59 = cir.cmp(lt, %57, %58) : !s32i, !cir.bool loc(#loc170)
    cir.brcond %59 ^bb14, ^bb15 loc(#loc171)
  ^bb14:  // pred: ^bb13
    %60 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
    %62 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
    %64 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc45)
    cir.libc.memmove %65 bytes from %63 to %61 : !cir.ptr<!void>, !u64i loc(#loc172)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %67 = cir.cast(integral, %66 : !s32i), !s8i loc(#loc48)
    %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %69 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %70 = cir.ptr_stride(%69 : !cir.ptr<!s8i>, %68 : !s32i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %67, %70 : !s8i, !cir.ptr<!s8i> loc(#loc173)
    cir.br ^bb15 loc(#loc39)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc39)
  ^bb16:  // pred: ^bb15
    %71 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%71) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb17 loc(#loc27)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc7)
  } loc(#loc159)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc180)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc68)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc72)
    cir.br ^bb2 loc(#loc70)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc70)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb6 loc(#loc76)
  ^bb5:  // pred: ^bb2
    %8 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc77)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb6 loc(#loc80)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // pred: ^bb7
    %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc179)
    cir.store %11, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc179)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc84)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc85)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc85)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc89)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc90)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc92)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc186)
    cir.br ^bb9 loc(#loc187)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc188)
    cir.brcond %28 ^bb10, ^bb11 loc(#loc189)
  ^bb10:  // pred: ^bb9
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc100)
    cir.libc.memmove %34 bytes from %32 to %30 : !cir.ptr<!void>, !u64i loc(#loc190)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc103)
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %38 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc191)
    cir.br ^bb11 loc(#loc94)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc94)
  ^bb12:  // pred: ^bb11
    %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb13 loc(#loc82)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc60)
  } loc(#loc177)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc193)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc194)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc195)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc117)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc121)
    cir.br ^bb2 loc(#loc119)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc119)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %6 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc123)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb6 loc(#loc126)
  ^bb5:  // pred: ^bb2
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb6 loc(#loc129)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc120)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc194)
    cir.store %11, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc194)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc133)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc134)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc134)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc138)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc139)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc139)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc141)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb9 loc(#loc202)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %28 ^bb10, ^bb11 loc(#loc204)
  ^bb10:  // pred: ^bb9
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc148)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc149)
    cir.libc.memmove %34 bytes from %32 to %30 : !cir.ptr<!void>, !u64i loc(#loc205)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc152)
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %38 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc154)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    cir.br ^bb11 loc(#loc143)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc143)
  ^bb12:  // pred: ^bb11
    %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb13 loc(#loc131)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc109)
  } loc(#loc192)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":34:19)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":21:1)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":51:1)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":38:9)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":38:24)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":39:9)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":39:26)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":23:5)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":23:9)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":25:13)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":25:12)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":25:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":26:5)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":36:5)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":26:12)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":28:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":30:9)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":31:9)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":34:9)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":35:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":37:5)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":50:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":40:16)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":40:24)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":40:29)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":40:33)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":40:9)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":40:34)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":41:25)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":41:16)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":41:20)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":41:9)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":42:9)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":48:9)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":42:13)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":42:20)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":43:9)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":46:21)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":46:27)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":46:35)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":46:13)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":46:39)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":47:26)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":47:18)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":47:13)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":49:19)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":49:9)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":123:1)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":127:1)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":125:5)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":125:14)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":126:5)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":126:14)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":58:1)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":88:1)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":75:9)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":75:24)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":76:9)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":76:26)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":60:5)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":60:9)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":62:13)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":62:12)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":62:5)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":63:5)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":73:5)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":63:12)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":65:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":67:19)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":67:9)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":68:9)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":71:16)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":71:20)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":71:9)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":72:9)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":74:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":87:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":77:16)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":77:24)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":77:29)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":77:33)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":77:9)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":77:34)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":78:25)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":78:16)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":78:20)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":78:9)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":79:9)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":85:9)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":79:13)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":79:20)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":80:9)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":83:21)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":83:27)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":83:35)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":83:13)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":83:39)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":84:26)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":84:18)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":84:13)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":86:19)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":86:9)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":91:1)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":121:1)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":108:9)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":108:24)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":109:9)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":109:26)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":93:5)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":93:9)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":95:13)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":95:12)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":95:5)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":96:5)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":106:5)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":96:12)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":98:5)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":100:16)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":100:20)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":100:9)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":101:9)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":104:19)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":104:9)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":105:9)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":107:5)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":120:5)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":110:16)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":110:24)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":110:29)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":110:33)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":110:9)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":110:34)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":111:25)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":111:16)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":111:20)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":111:9)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":112:9)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":118:9)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":112:13)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":112:20)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":113:9)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":116:21)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":116:27)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":116:35)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":116:13)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":116:39)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":117:26)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":117:18)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":117:13)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":119:19)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memmove_15.c":119:9)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc6, #loc7])
#loc160 = loc(fused[#loc8, #loc9])
#loc161 = loc(fused[#loc10, #loc11])
#loc162 = loc(fused[#loc12, #loc13])
#loc163 = loc(fused[#loc16, #loc14])
#loc164 = loc(fused[#loc17, #loc18])
#loc165 = loc(fused[#loc22, #loc21])
#loc166 = loc(fused[#loc26, #loc27])
#loc167 = loc(fused[#loc32, #loc33])
#loc168 = loc(fused[#loc37, #loc34])
#loc169 = loc(fused[#loc38, #loc39])
#loc170 = loc(fused[#loc40, #loc41])
#loc171 = loc(fused[#loc42, #loc39])
#loc172 = loc(fused[#loc46, #loc47])
#loc173 = loc(fused[#loc50, #loc48])
#loc174 = loc(fused[#loc53, #loc54])
#loc175 = loc(fused[#loc55, #loc56])
#loc176 = loc(fused[#loc57, #loc58])
#loc177 = loc(fused[#loc59, #loc60])
#loc178 = loc(fused[#loc61, #loc62])
#loc179 = loc(fused[#loc63, #loc64])
#loc180 = loc(fused[#loc65, #loc66])
#loc181 = loc(fused[#loc69, #loc67])
#loc182 = loc(fused[#loc70, #loc71])
#loc183 = loc(fused[#loc79, #loc78])
#loc184 = loc(fused[#loc81, #loc82])
#loc185 = loc(fused[#loc87, #loc88])
#loc186 = loc(fused[#loc92, #loc89])
#loc187 = loc(fused[#loc93, #loc94])
#loc188 = loc(fused[#loc95, #loc96])
#loc189 = loc(fused[#loc97, #loc94])
#loc190 = loc(fused[#loc101, #loc102])
#loc191 = loc(fused[#loc105, #loc103])
#loc192 = loc(fused[#loc108, #loc109])
#loc193 = loc(fused[#loc110, #loc111])
#loc194 = loc(fused[#loc112, #loc113])
#loc195 = loc(fused[#loc114, #loc115])
#loc196 = loc(fused[#loc118, #loc116])
#loc197 = loc(fused[#loc119, #loc120])
#loc198 = loc(fused[#loc125, #loc124])
#loc199 = loc(fused[#loc130, #loc131])
#loc200 = loc(fused[#loc136, #loc137])
#loc201 = loc(fused[#loc141, #loc138])
#loc202 = loc(fused[#loc142, #loc143])
#loc203 = loc(fused[#loc144, #loc145])
#loc204 = loc(fused[#loc146, #loc143])
#loc205 = loc(fused[#loc150, #loc151])
#loc206 = loc(fused[#loc154, #loc152])
