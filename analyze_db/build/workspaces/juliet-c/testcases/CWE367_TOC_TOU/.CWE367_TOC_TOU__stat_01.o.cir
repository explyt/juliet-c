!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_timespec = !cir.record<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.record<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc166)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc169)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc170)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc171)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc172)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc174)
  cir.func no_proto @CWE367_TOC_TOU__stat_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc177)
      %1 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc178)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc179)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc177)
      cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc177)
      %4 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc31)
      cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
        %10 = cir.const #cir.int<100> : !s32i loc(#loc35)
        %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
        %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
        %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
        %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
        cir.if %16 {
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc40)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc41)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc41)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
          %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc43)
          cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc183)
        } loc(#loc182)
      } loc(#loc180)
      cir.scope {
        %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
        %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
        %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc48)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc48)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc185)
        cir.if %14 {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc50)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc51)
          %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc51)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc53)
          %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc187)
          %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
          %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc54)
          cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc188)
        } loc(#loc186)
      } loc(#loc184)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
        %10 = cir.call @stat(%9, %1) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc58)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc60)
        %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc190)
        cir.if %13 {
          %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc62)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc63)
          cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
        } loc(#loc191)
      } loc(#loc189)
      %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %7 = cir.const #cir.int<2> : !s32i loc(#loc65)
      %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc66)
      cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
      cir.scope {
        %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc73)
        %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc194)
        cir.if %12 {
          %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc76)
          cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
        } loc(#loc195)
      } loc(#loc193)
      cir.scope {
        %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
        %13 = cir.const #cir.int<11> : !u64i loc(#loc197)
        %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc82)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc84)
        %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc84)
        %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc198)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc86)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc87)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
        } loc(#loc199)
      } loc(#loc196)
      cir.scope {
        %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc92)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc201)
        cir.if %12 {
          %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc95)
        } loc(#loc202)
      } loc(#loc200)
    } loc(#loc176)
    cir.return loc(#loc22)
  } loc(#loc175)
  cir.func no_proto @CWE367_TOC_TOU__stat_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc204)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc98)
    cir.return loc(#loc97)
  } loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc207)
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc208)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc207)
      cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc207)
      %3 = cir.const #cir.int<1> : !s32i loc(#loc108)
      %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc109)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc208)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc113)
        %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
        %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
        %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc115)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
        %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc210)
        cir.if %15 {
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc118)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc118)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc120)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc120)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc121)
          %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
          %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc122)
          cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc212)
        } loc(#loc211)
      } loc(#loc209)
      cir.scope {
        %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc125)
        %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
        %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc125)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc127)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc127)
        %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc214)
        cir.if %13 {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc129)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc130)
          %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc130)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc132)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc132)
          %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc216)
          %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
          %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc133)
          cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc217)
        } loc(#loc215)
      } loc(#loc213)
      %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc135)
      %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc136)
      cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc218)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc143)
        %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc220)
        cir.if %11 {
          %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc145)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc146)
          cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc145)
        } loc(#loc221)
      } loc(#loc219)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc100)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc100)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
        %12 = cir.const #cir.int<12> : !u64i loc(#loc223)
        %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc152)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc153)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc154)
        %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc154)
        %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc224)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc156)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc157)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
        } loc(#loc225)
      } loc(#loc222)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc161)
        %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc162)
        %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc227)
        cir.if %11 {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc164)
          %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc165)
        } loc(#loc228)
      } loc(#loc226)
    } loc(#loc206)
    cir.return loc(#loc102)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_01.c":45:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":205:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_01.c":63:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_01.c":37:1)
#loc22 = loc("CWE367_TOC_TOU__stat_01.c":72:1)
#loc23 = loc("CWE367_TOC_TOU__stat_01.c":39:5)
#loc24 = loc("CWE367_TOC_TOU__stat_01.c":71:5)
#loc25 = loc("CWE367_TOC_TOU__stat_01.c":40:9)
#loc26 = loc("CWE367_TOC_TOU__stat_01.c":40:30)
#loc27 = loc("CWE367_TOC_TOU__stat_01.c":41:9)
#loc28 = loc("CWE367_TOC_TOU__stat_01.c":41:21)
#loc29 = loc("CWE367_TOC_TOU__stat_01.c":42:9)
#loc30 = loc("CWE367_TOC_TOU__stat_01.c":42:25)
#loc31 = loc("CWE367_TOC_TOU__stat_01.c":42:24)
#loc32 = loc("CWE367_TOC_TOU__stat_01.c":43:9)
#loc33 = loc("CWE367_TOC_TOU__stat_01.c":48:9)
#loc34 = loc("CWE367_TOC_TOU__stat_01.c":43:19)
#loc35 = loc("CWE367_TOC_TOU__stat_01.c":43:29)
#loc36 = loc("CWE367_TOC_TOU__stat_01.c":43:34)
#loc37 = loc("CWE367_TOC_TOU__stat_01.c":43:13)
#loc38 = loc("CWE367_TOC_TOU__stat_01.c":43:44)
#loc39 = loc("CWE367_TOC_TOU__stat_01.c":44:9)
#loc40 = loc("CWE367_TOC_TOU__stat_01.c":45:13)
#loc41 = loc("CWE367_TOC_TOU__stat_01.c":47:27)
#loc42 = loc("CWE367_TOC_TOU__stat_01.c":47:22)
#loc43 = loc("CWE367_TOC_TOU__stat_01.c":47:13)
#loc44 = loc("CWE367_TOC_TOU__stat_01.c":49:9)
#loc45 = loc("CWE367_TOC_TOU__stat_01.c":52:9)
#loc46 = loc("CWE367_TOC_TOU__stat_01.c":49:13)
#loc47 = loc("CWE367_TOC_TOU__stat_01.c":49:20)
#loc48 = loc("CWE367_TOC_TOU__stat_01.c":49:32)
#loc49 = loc("CWE367_TOC_TOU__stat_01.c":50:9)
#loc50 = loc("CWE367_TOC_TOU__stat_01.c":51:44)
#loc51 = loc("CWE367_TOC_TOU__stat_01.c":51:22)
#loc52 = loc("CWE367_TOC_TOU__stat_01.c":51:29)
#loc53 = loc("CWE367_TOC_TOU__stat_01.c":51:39)
#loc54 = loc("CWE367_TOC_TOU__stat_01.c":51:13)
#loc55 = loc("CWE367_TOC_TOU__stat_01.c":54:9)
#loc56 = loc("CWE367_TOC_TOU__stat_01.c":57:9)
#loc57 = loc("CWE367_TOC_TOU__stat_01.c":54:18)
#loc58 = loc("CWE367_TOC_TOU__stat_01.c":54:13)
#loc59 = loc("CWE367_TOC_TOU__stat_01.c":54:45)
#loc60 = loc("CWE367_TOC_TOU__stat_01.c":54:44)
#loc61 = loc("CWE367_TOC_TOU__stat_01.c":55:9)
#loc62 = loc("CWE367_TOC_TOU__stat_01.c":56:13)
#loc63 = loc("CWE367_TOC_TOU__stat_01.c":56:18)
#loc64 = loc("CWE367_TOC_TOU__stat_01.c":58:26)
#loc65 = loc("CWE367_TOC_TOU__stat_01.c":58:36)
#loc66 = loc("CWE367_TOC_TOU__stat_01.c":58:21)
#loc67 = loc("CWE367_TOC_TOU__stat_01.c":58:9)
#loc68 = loc("CWE367_TOC_TOU__stat_01.c":58:42)
#loc69 = loc("CWE367_TOC_TOU__stat_01.c":59:9)
#loc70 = loc("CWE367_TOC_TOU__stat_01.c":62:9)
#loc71 = loc("CWE367_TOC_TOU__stat_01.c":59:13)
#loc72 = loc("CWE367_TOC_TOU__stat_01.c":59:26)
#loc73 = loc("CWE367_TOC_TOU__stat_01.c":59:25)
#loc74 = loc("CWE367_TOC_TOU__stat_01.c":60:9)
#loc75 = loc("CWE367_TOC_TOU__stat_01.c":61:13)
#loc76 = loc("CWE367_TOC_TOU__stat_01.c":61:18)
#loc77 = loc("CWE367_TOC_TOU__stat_01.c":63:9)
#loc78 = loc("CWE367_TOC_TOU__stat_01.c":66:9)
#loc79 = loc("CWE367_TOC_TOU__stat_01.c":63:19)
#loc80 = loc("CWE367_TOC_TOU__stat_01.c":63:46)
#loc81 = loc("CWE367_TOC_TOU__stat_01.c":63:68)
#loc82 = loc("CWE367_TOC_TOU__stat_01.c":63:13)
#loc83 = loc("CWE367_TOC_TOU__stat_01.c":63:75)
#loc84 = loc("CWE367_TOC_TOU__stat_01.c":63:74)
#loc85 = loc("CWE367_TOC_TOU__stat_01.c":64:9)
#loc86 = loc("CWE367_TOC_TOU__stat_01.c":65:13)
#loc87 = loc("CWE367_TOC_TOU__stat_01.c":65:18)
#loc88 = loc("CWE367_TOC_TOU__stat_01.c":67:9)
#loc89 = loc("CWE367_TOC_TOU__stat_01.c":70:9)
#loc90 = loc("CWE367_TOC_TOU__stat_01.c":67:13)
#loc91 = loc("CWE367_TOC_TOU__stat_01.c":67:26)
#loc92 = loc("CWE367_TOC_TOU__stat_01.c":67:25)
#loc93 = loc("CWE367_TOC_TOU__stat_01.c":68:9)
#loc94 = loc("CWE367_TOC_TOU__stat_01.c":69:19)
#loc95 = loc("CWE367_TOC_TOU__stat_01.c":69:13)
#loc96 = loc("CWE367_TOC_TOU__stat_01.c":110:1)
#loc97 = loc("CWE367_TOC_TOU__stat_01.c":113:1)
#loc98 = loc("CWE367_TOC_TOU__stat_01.c":112:5)
#loc99 = loc("CWE367_TOC_TOU__stat_01.c":112:11)
#loc100 = loc("CWE367_TOC_TOU__stat_01.c":99:29)
#loc101 = loc("CWE367_TOC_TOU__stat_01.c":78:1)
#loc102 = loc("CWE367_TOC_TOU__stat_01.c":108:1)
#loc103 = loc("CWE367_TOC_TOU__stat_01.c":80:5)
#loc104 = loc("CWE367_TOC_TOU__stat_01.c":107:5)
#loc105 = loc("CWE367_TOC_TOU__stat_01.c":81:9)
#loc106 = loc("CWE367_TOC_TOU__stat_01.c":81:30)
#loc107 = loc("CWE367_TOC_TOU__stat_01.c":82:9)
#loc108 = loc("CWE367_TOC_TOU__stat_01.c":82:25)
#loc109 = loc("CWE367_TOC_TOU__stat_01.c":82:24)
#loc110 = loc("CWE367_TOC_TOU__stat_01.c":83:9)
#loc111 = loc("CWE367_TOC_TOU__stat_01.c":88:9)
#loc112 = loc("CWE367_TOC_TOU__stat_01.c":83:19)
#loc113 = loc("CWE367_TOC_TOU__stat_01.c":83:29)
#loc114 = loc("CWE367_TOC_TOU__stat_01.c":83:34)
#loc115 = loc("CWE367_TOC_TOU__stat_01.c":83:13)
#loc116 = loc("CWE367_TOC_TOU__stat_01.c":83:44)
#loc117 = loc("CWE367_TOC_TOU__stat_01.c":84:9)
#loc118 = loc("CWE367_TOC_TOU__stat_01.c":85:23)
#loc119 = loc("CWE367_TOC_TOU__stat_01.c":85:13)
#loc120 = loc("CWE367_TOC_TOU__stat_01.c":87:27)
#loc121 = loc("CWE367_TOC_TOU__stat_01.c":87:22)
#loc122 = loc("CWE367_TOC_TOU__stat_01.c":87:13)
#loc123 = loc("CWE367_TOC_TOU__stat_01.c":89:9)
#loc124 = loc("CWE367_TOC_TOU__stat_01.c":92:9)
#loc125 = loc("CWE367_TOC_TOU__stat_01.c":89:13)
#loc126 = loc("CWE367_TOC_TOU__stat_01.c":89:20)
#loc127 = loc("CWE367_TOC_TOU__stat_01.c":89:32)
#loc128 = loc("CWE367_TOC_TOU__stat_01.c":90:9)
#loc129 = loc("CWE367_TOC_TOU__stat_01.c":91:44)
#loc130 = loc("CWE367_TOC_TOU__stat_01.c":91:22)
#loc131 = loc("CWE367_TOC_TOU__stat_01.c":91:29)
#loc132 = loc("CWE367_TOC_TOU__stat_01.c":91:39)
#loc133 = loc("CWE367_TOC_TOU__stat_01.c":91:13)
#loc134 = loc("CWE367_TOC_TOU__stat_01.c":94:26)
#loc135 = loc("CWE367_TOC_TOU__stat_01.c":94:36)
#loc136 = loc("CWE367_TOC_TOU__stat_01.c":94:21)
#loc137 = loc("CWE367_TOC_TOU__stat_01.c":94:9)
#loc138 = loc("CWE367_TOC_TOU__stat_01.c":94:42)
#loc139 = loc("CWE367_TOC_TOU__stat_01.c":95:9)
#loc140 = loc("CWE367_TOC_TOU__stat_01.c":98:9)
#loc141 = loc("CWE367_TOC_TOU__stat_01.c":95:13)
#loc142 = loc("CWE367_TOC_TOU__stat_01.c":95:26)
#loc143 = loc("CWE367_TOC_TOU__stat_01.c":95:25)
#loc144 = loc("CWE367_TOC_TOU__stat_01.c":96:9)
#loc145 = loc("CWE367_TOC_TOU__stat_01.c":97:13)
#loc146 = loc("CWE367_TOC_TOU__stat_01.c":97:18)
#loc147 = loc("CWE367_TOC_TOU__stat_01.c":99:9)
#loc148 = loc("CWE367_TOC_TOU__stat_01.c":102:9)
#loc149 = loc("CWE367_TOC_TOU__stat_01.c":99:19)
#loc150 = loc("CWE367_TOC_TOU__stat_01.c":99:47)
#loc151 = loc("CWE367_TOC_TOU__stat_01.c":99:70)
#loc152 = loc("CWE367_TOC_TOU__stat_01.c":99:13)
#loc153 = loc("CWE367_TOC_TOU__stat_01.c":99:77)
#loc154 = loc("CWE367_TOC_TOU__stat_01.c":99:76)
#loc155 = loc("CWE367_TOC_TOU__stat_01.c":100:9)
#loc156 = loc("CWE367_TOC_TOU__stat_01.c":101:13)
#loc157 = loc("CWE367_TOC_TOU__stat_01.c":101:18)
#loc158 = loc("CWE367_TOC_TOU__stat_01.c":103:9)
#loc159 = loc("CWE367_TOC_TOU__stat_01.c":106:9)
#loc160 = loc("CWE367_TOC_TOU__stat_01.c":103:13)
#loc161 = loc("CWE367_TOC_TOU__stat_01.c":103:26)
#loc162 = loc("CWE367_TOC_TOU__stat_01.c":103:25)
#loc163 = loc("CWE367_TOC_TOU__stat_01.c":104:9)
#loc164 = loc("CWE367_TOC_TOU__stat_01.c":105:19)
#loc165 = loc("CWE367_TOC_TOU__stat_01.c":105:13)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc8, #loc9])
#loc170 = loc(fused[#loc10, #loc11])
#loc171 = loc(fused[#loc12, #loc13])
#loc172 = loc(fused[#loc14, #loc15])
#loc173 = loc(fused[#loc16, #loc17])
#loc174 = loc(fused[#loc19, #loc20])
#loc175 = loc(fused[#loc21, #loc22])
#loc176 = loc(fused[#loc23, #loc24])
#loc177 = loc(fused[#loc25, #loc26])
#loc178 = loc(fused[#loc27, #loc28])
#loc179 = loc(fused[#loc29, #loc30])
#loc180 = loc(fused[#loc32, #loc33])
#loc181 = loc(fused[#loc37, #loc38])
#loc182 = loc(fused[#loc39, #loc33])
#loc183 = loc(fused[#loc43, #loc41])
#loc184 = loc(fused[#loc44, #loc45])
#loc185 = loc(fused[#loc46, #loc48])
#loc186 = loc(fused[#loc49, #loc45])
#loc187 = loc(fused[#loc51, #loc53])
#loc188 = loc(fused[#loc54, #loc50])
#loc189 = loc(fused[#loc55, #loc56])
#loc190 = loc(fused[#loc58, #loc59])
#loc191 = loc(fused[#loc61, #loc56])
#loc192 = loc(fused[#loc67, #loc68])
#loc193 = loc(fused[#loc69, #loc70])
#loc194 = loc(fused[#loc71, #loc72])
#loc195 = loc(fused[#loc74, #loc70])
#loc196 = loc(fused[#loc77, #loc78])
#loc197 = loc(fused[#loc80, #loc81])
#loc198 = loc(fused[#loc82, #loc83])
#loc199 = loc(fused[#loc85, #loc78])
#loc200 = loc(fused[#loc88, #loc89])
#loc201 = loc(fused[#loc90, #loc91])
#loc202 = loc(fused[#loc93, #loc89])
#loc203 = loc(fused[#loc96, #loc97])
#loc204 = loc(fused[#loc98, #loc99])
#loc205 = loc(fused[#loc101, #loc102])
#loc206 = loc(fused[#loc103, #loc104])
#loc207 = loc(fused[#loc105, #loc106])
#loc208 = loc(fused[#loc107, #loc108])
#loc209 = loc(fused[#loc110, #loc111])
#loc210 = loc(fused[#loc115, #loc116])
#loc211 = loc(fused[#loc117, #loc111])
#loc212 = loc(fused[#loc122, #loc120])
#loc213 = loc(fused[#loc123, #loc124])
#loc214 = loc(fused[#loc125, #loc127])
#loc215 = loc(fused[#loc128, #loc124])
#loc216 = loc(fused[#loc130, #loc132])
#loc217 = loc(fused[#loc133, #loc129])
#loc218 = loc(fused[#loc137, #loc138])
#loc219 = loc(fused[#loc139, #loc140])
#loc220 = loc(fused[#loc141, #loc142])
#loc221 = loc(fused[#loc144, #loc140])
#loc222 = loc(fused[#loc147, #loc148])
#loc223 = loc(fused[#loc150, #loc151])
#loc224 = loc(fused[#loc152, #loc153])
#loc225 = loc(fused[#loc155, #loc148])
#loc226 = loc(fused[#loc158, #loc159])
#loc227 = loc(fused[#loc160, #loc161])
#loc228 = loc(fused[#loc163, #loc159])
