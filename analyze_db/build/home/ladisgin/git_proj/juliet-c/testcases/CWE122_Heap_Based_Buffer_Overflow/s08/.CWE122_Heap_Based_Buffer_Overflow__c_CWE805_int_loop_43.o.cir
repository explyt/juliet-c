!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":24:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":24:30)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":56:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":56:34)
#loc123 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc121)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43L9badSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc124)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc125)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc126)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc19)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc129)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc23)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc122)
  cir.func private @printIntLine(!s32i) loc(#loc131)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc132)
  cir.func @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc134)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc36)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43L9badSourceERPi(%2) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc38)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc134)
    cir.store %4, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc134)
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc45)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // 2 preds: ^bb3, ^bb6
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc48)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc142)
    cir.brcond %10 ^bb5, ^bb7 loc(#loc142)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc50)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !u64i), !cir.ptr<!s32i> loc(#loc50)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc53)
    cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc56)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc144)
    cir.br ^bb4 loc(#loc140)
  ^bb7:  // pred: ^bb4
    cir.br ^bb8 loc(#loc44)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc59)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc60)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc61)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
    cir.br ^bb9 loc(#loc42)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc29)
  } loc(#loc133)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43L13goodG2BSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc146)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc67)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc68)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc69)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc147)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc148)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc149)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc73)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc76)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc77)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc152)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc81)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb3 loc(#loc75)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc75)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc64)
  } loc(#loc145)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc155)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc90)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43L13goodG2BSourceERPi(%2) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc92)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc155)
    cir.store %4, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc155)
    cir.br ^bb2 loc(#loc160)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc161)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc99)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb4 loc(#loc161)
  ^bb4:  // 2 preds: ^bb3, ^bb6
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc102)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc163)
    cir.brcond %10 ^bb5, ^bb7 loc(#loc163)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc104)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !u64i), !cir.ptr<!s32i> loc(#loc104)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc107)
    cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc110)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    cir.br ^bb4 loc(#loc161)
  ^bb7:  // pred: ^bb4
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc113)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc114)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc115)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb9 loc(#loc96)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc94)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc83)
  } loc(#loc154)
  cir.func @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":24:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":29:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":25:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":27:19)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":27:26)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":27:29)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":27:39)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":27:40)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":28:29)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":31:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":49:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":37:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":37:29)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":39:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":39:20)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":33:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":33:11)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":34:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":34:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":35:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":36:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":48:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":38:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":47:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":41:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":44:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":41:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":41:18)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":41:25)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":41:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":43:34)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":43:27)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":43:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":43:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":43:23)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":43:35)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":41:35)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":41:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":45:26)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":45:31)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":45:32)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":45:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":46:18)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":46:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":56:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":61:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":57:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":59:19)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":59:26)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":59:30)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":59:40)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":59:41)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":59:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:33)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:24)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:30)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":60:29)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":63:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":81:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":69:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":69:29)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":71:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":71:20)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":65:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":65:11)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":66:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":66:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":67:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":68:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":80:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":70:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":79:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":73:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":76:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":73:22)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":73:18)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":73:25)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":73:29)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":75:34)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":75:27)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":75:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":75:22)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":75:23)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":75:35)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":73:35)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":73:34)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":77:26)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":77:31)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":77:32)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":77:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":78:18)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":78:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":83:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":86:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_43.cpp":85:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc12, #loc13])
#loc125 = loc(fused[#loc11, #loc13])
#loc126 = loc(fused[#loc10, #loc14])
#loc127 = loc(fused[#loc15, #loc14])
#loc128 = loc(fused[#loc16, #loc17])
#loc129 = loc(fused[#loc18, #loc19])
#loc130 = loc(fused[#loc20, #loc17])
#loc131 = loc(fused[#loc24, #loc25])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc28, #loc29])
#loc134 = loc(fused[#loc30, #loc31])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc37, #loc36])
#loc138 = loc(fused[#loc39, #loc40])
#loc139 = loc(fused[#loc41, #loc42])
#loc140 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc46, #loc45])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc51, #loc54])
#loc144 = loc(fused[#loc56, #loc55])
#loc145 = loc(fused[#loc63, #loc64])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc69, #loc71])
#loc149 = loc(fused[#loc68, #loc72])
#loc150 = loc(fused[#loc73, #loc72])
#loc151 = loc(fused[#loc74, #loc75])
#loc152 = loc(fused[#loc76, #loc77])
#loc153 = loc(fused[#loc78, #loc75])
#loc154 = loc(fused[#loc82, #loc83])
#loc155 = loc(fused[#loc84, #loc85])
#loc156 = loc(fused[#loc86, #loc87])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc91, #loc90])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc97, #loc98])
#loc162 = loc(fused[#loc100, #loc99])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc105, #loc108])
#loc165 = loc(fused[#loc110, #loc109])
#loc166 = loc(fused[#loc117, #loc118])
