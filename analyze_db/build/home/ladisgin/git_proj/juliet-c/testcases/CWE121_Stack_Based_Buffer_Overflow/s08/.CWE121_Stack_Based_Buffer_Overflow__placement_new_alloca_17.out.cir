!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc48 = loc("../../../testcasesupport/std_testcase.h":68:7)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":134:10)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":134:14)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":134:20)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":134:32)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc229 = loc(fused[#loc148, #loc149])
#loc230 = loc(fused[#loc150, #loc151])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc164)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc167)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc168)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc170)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc14)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc171)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %14 = cir.const #cir.int<0> : !s32i loc(#loc19)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb2 loc(#loc172)
  ^bb2:  // 2 preds: ^bb1, ^bb4
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc174)
    cir.brcond %17 ^bb3, ^bb5 loc(#loc174)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %18, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc26)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb2 loc(#loc172)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc177)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc29)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb8 loc(#loc177)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc179)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc179)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc180)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<8> : !u64i loc(#loc181)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc181)
    cir.call @_ZN12TwoIntsClassC2Ev(%28) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc7)
    cir.store %28, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc166)
    %29 = cir.const #cir.int<5> : !s32i loc(#loc37)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %29, %31 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %32 = cir.const #cir.int<10> : !s32i loc(#loc40)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
    %34 = cir.get_member %33[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %32, %34 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc45)
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %39 = cir.unary(inc, %38) : !s32i, !s32i loc(#loc47)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb8 loc(#loc177)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc28)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc5)
  } loc(#loc165)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc48)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc48)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc48)
    cir.return loc(#loc48)
  } loc(#loc48)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc187)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc188)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc189)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc190)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc59)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc191)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc61)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc61)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc61)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %14 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb2 loc(#loc192)
  ^bb2:  // 2 preds: ^bb1, ^bb4
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc194)
    cir.brcond %17 ^bb3, ^bb5 loc(#loc194)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %18, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc71)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb2 loc(#loc192)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc63)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc197)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb8 loc(#loc197)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc199)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc199)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc200)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<4> : !u64i loc(#loc201)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc201)
    cir.call @_ZN11OneIntClassC2Ev(%28) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc52)
    cir.store %28, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc186)
    %29 = cir.const #cir.int<5> : !s32i loc(#loc82)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc83)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc84)
    cir.store %29, %31 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc85)
    %33 = cir.get_member %32[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc84)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc87)
    cir.br ^bb11 loc(#loc79)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc73)
  ^bb12:  // pred: ^bb11
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %36 = cir.unary(inc, %35) : !s32i, !s32i loc(#loc89)
    cir.store %36, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb8 loc(#loc197)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc73)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc50)
  } loc(#loc185)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc206)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc207)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc209)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc100)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc100)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc210)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc100)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc102)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc102)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc102)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
    cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %14 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb2 loc(#loc211)
  ^bb2:  // 2 preds: ^bb1, ^bb4
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %17 ^bb3, ^bb5 loc(#loc213)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.store %18, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc112)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb2 loc(#loc211)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc216)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc115)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb8 loc(#loc216)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc218)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc219)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<8> : !u64i loc(#loc220)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc220)
    cir.call @_ZN12TwoIntsClassC2Ev(%28) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc93)
    cir.store %28, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc205)
    %29 = cir.const #cir.int<5> : !s32i loc(#loc123)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc124)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %29, %31 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %32 = cir.const #cir.int<10> : !s32i loc(#loc125)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc126)
    %34 = cir.get_member %33[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %32, %34 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc127)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc129)
    cir.br ^bb11 loc(#loc120)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc114)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %39 = cir.unary(inc, %38) : !s32i, !s32i loc(#loc131)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb8 loc(#loc216)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc114)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc91)
  } loc(#loc204)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17L7goodB2GEv() : () -> () loc(#loc134)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17L7goodG2BEv() : () -> () loc(#loc135)
    cir.return loc(#loc133)
  } loc(#loc224)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc225)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc226)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc145)
  cir.func @main(%arg0: !s32i loc(fused[#loc148, #loc149]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc150, #loc151])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc147)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc152)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc153)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc154)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc154)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc155)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc142)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_174goodEv() : () -> () loc(#loc157)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc143)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc144)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_173badEv() : () -> () loc(#loc160)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc145)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc162)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    cir.return %15 : !s32i loc(#loc231)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":24:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":51:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":43:13)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":43:49)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":26:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":26:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":26:11)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":27:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":28:36)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":29:37)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":34:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":30:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":30:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":30:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":30:20)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":33:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":30:24)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":30:23)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":35:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":50:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":35:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":35:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":35:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":35:20)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":37:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":49:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":43:39)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":43:43)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":45:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":45:13)
#loc39 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":46:32)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":46:13)
#loc42 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":47:26)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":47:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":47:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":35:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":35:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":58:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":83:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":77:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":77:48)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":60:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":60:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":60:11)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":61:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":61:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":62:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":62:36)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":63:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":63:37)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":64:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":68:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":64:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":64:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":64:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":64:20)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":67:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":67:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":64:24)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":64:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":69:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":82:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":69:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":69:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":69:16)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":69:20)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":71:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":81:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":77:38)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":77:42)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":79:32)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":79:13)
#loc84 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":80:26)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":80:36)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":80:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":69:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":69:23)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":86:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":113:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":105:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":105:49)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":88:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":88:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":88:11)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":89:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":89:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":90:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":90:36)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":91:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":91:37)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":92:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":96:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":92:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":92:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":92:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":92:20)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":95:16)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":95:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":92:24)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":92:23)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":97:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":112:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":97:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":97:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":97:16)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":97:20)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":99:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":111:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":105:39)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":105:43)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":107:32)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":107:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":108:32)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":108:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":109:26)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":109:36)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":109:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":97:24)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":97:23)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":115:1)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":119:1)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":117:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":118:5)
#loc136 = loc("/usr/include/stdlib.h":575:1)
#loc137 = loc("/usr/include/stdlib.h":575:41)
#loc138 = loc("/usr/include/time.h":76:1)
#loc139 = loc("/usr/include/time.h":76:38)
#loc140 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc141 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":139:15)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":141:15)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":144:15)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":146:15)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":134:1)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":149:1)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":135:1)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":137:27)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":137:22)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":137:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":139:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":140:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":141:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":144:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":145:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":146:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":148:12)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_17.cpp":148:5)
#loc164 = loc(fused[#loc2, #loc3])
#loc165 = loc(fused[#loc4, #loc5])
#loc166 = loc(fused[#loc6, #loc7])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc8, #loc10])
#loc169 = loc(fused[#loc11, #loc12])
#loc170 = loc(fused[#loc13, #loc14])
#loc171 = loc(fused[#loc15, #loc16])
#loc172 = loc(fused[#loc17, #loc18])
#loc173 = loc(fused[#loc20, #loc19])
#loc174 = loc(fused[#loc21, #loc22])
#loc175 = loc(fused[#loc24, #loc23])
#loc176 = loc(fused[#loc26, #loc25])
#loc177 = loc(fused[#loc27, #loc28])
#loc178 = loc(fused[#loc30, #loc29])
#loc179 = loc(fused[#loc31, #loc32])
#loc180 = loc(fused[#loc33, #loc34])
#loc181 = loc(fused[#loc35, #loc7])
#loc182 = loc(fused[#loc38, #loc37])
#loc183 = loc(fused[#loc41, #loc40])
#loc184 = loc(fused[#loc47, #loc46])
#loc185 = loc(fused[#loc49, #loc50])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc53, #loc54])
#loc188 = loc(fused[#loc53, #loc55])
#loc189 = loc(fused[#loc56, #loc57])
#loc190 = loc(fused[#loc58, #loc59])
#loc191 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc62, #loc63])
#loc193 = loc(fused[#loc65, #loc64])
#loc194 = loc(fused[#loc66, #loc67])
#loc195 = loc(fused[#loc69, #loc68])
#loc196 = loc(fused[#loc71, #loc70])
#loc197 = loc(fused[#loc72, #loc73])
#loc198 = loc(fused[#loc75, #loc74])
#loc199 = loc(fused[#loc76, #loc77])
#loc200 = loc(fused[#loc78, #loc79])
#loc201 = loc(fused[#loc80, #loc52])
#loc202 = loc(fused[#loc83, #loc82])
#loc203 = loc(fused[#loc89, #loc88])
#loc204 = loc(fused[#loc90, #loc91])
#loc205 = loc(fused[#loc92, #loc93])
#loc206 = loc(fused[#loc94, #loc95])
#loc207 = loc(fused[#loc94, #loc96])
#loc208 = loc(fused[#loc97, #loc98])
#loc209 = loc(fused[#loc99, #loc100])
#loc210 = loc(fused[#loc101, #loc102])
#loc211 = loc(fused[#loc103, #loc104])
#loc212 = loc(fused[#loc106, #loc105])
#loc213 = loc(fused[#loc107, #loc108])
#loc214 = loc(fused[#loc110, #loc109])
#loc215 = loc(fused[#loc112, #loc111])
#loc216 = loc(fused[#loc113, #loc114])
#loc217 = loc(fused[#loc116, #loc115])
#loc218 = loc(fused[#loc117, #loc118])
#loc219 = loc(fused[#loc119, #loc120])
#loc220 = loc(fused[#loc121, #loc93])
#loc221 = loc(fused[#loc124, #loc123])
#loc222 = loc(fused[#loc126, #loc125])
#loc223 = loc(fused[#loc131, #loc130])
#loc224 = loc(fused[#loc132, #loc133])
#loc225 = loc(fused[#loc136, #loc137])
#loc226 = loc(fused[#loc138, #loc139])
#loc227 = loc(fused[#loc140, #loc141])
#loc228 = loc(fused[#loc146, #loc147])
#loc231 = loc(fused[#loc163, #loc162])
