!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":32:22)
#loc11 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":32:26)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":85:26)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":85:30)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":66:26)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":66:30)
#true = #cir.bool<true> : !cir.bool
#loc145 = loc(fused[#loc10, #loc11])
#loc163 = loc(fused[#loc62, #loc63])
#loc180 = loc(fused[#loc119, #loc120])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc141)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc142)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc143)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private  @badSource(%arg0: !s32i loc(fused[#loc10, #loc11])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc9)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc147)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc147)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc147)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc19)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc20)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc20)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc20)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc20)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc20)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc20)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc20)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc20)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc23)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc149)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc24)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc29)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
        } else {
          %22 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc32)
        } loc(#loc150)
      } loc(#loc148)
    } loc(#loc146)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %3 : !s32i loc(#loc152)
  } loc(#loc144)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc153)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc39)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc45)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc48)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc51)
    %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc52)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc39)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.return loc(#loc41)
  } loc(#loc155)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc159)
  cir.func internal private  @goodB2GSource(%arg0: !s32i loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc165)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc165)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc165)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc71)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc72)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc72)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc72)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc72)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc72)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc72)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc72)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc72)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc74)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc167)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc76)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc80)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc81)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
        } else {
          %22 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc84)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc84)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc85)
        } loc(#loc168)
      } loc(#loc166)
    } loc(#loc164)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %3 : !s32i loc(#loc170)
  } loc(#loc162)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc88)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc89)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc95)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc98)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.scope {
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc104)
      %7 = cir.cmp(gt, %5, %6) : !s32i, !s32i loc(#loc176)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc105)
      %9 = cir.ternary(%8, true {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
        %11 = cir.const #cir.int<2000> : !s32i loc(#loc108)
        %12 = cir.cmp(le, %10, %11) : !s32i, !s32i loc(#loc177)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc109)
        %14 = cir.ternary(%13, true {
          %15 = cir.const #true loc(#loc106)
          cir.yield %15 : !cir.bool loc(#loc106)
        }, false {
          %15 = cir.const #false loc(#loc106)
          cir.yield %15 : !cir.bool loc(#loc106)
        }) : (!cir.bool) -> !cir.bool loc(#loc106)
        cir.yield %14 : !cir.bool loc(#loc106)
      }, false {
        %10 = cir.const #false loc(#loc106)
        cir.yield %10 : !cir.bool loc(#loc106)
      }) : (!cir.bool) -> !cir.bool loc(#loc106)
      cir.if %9 {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc113)
        %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc114)
        %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc88)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc115)
      } else {
        %10 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc89)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc89)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc116)
      } loc(#loc178)
    } loc(#loc175)
    cir.return loc(#loc91)
  } loc(#loc171)
  cir.func internal private  @goodG2BSource(%arg0: !s32i loc(fused[#loc119, #loc120])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc122)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %4 : !s32i loc(#loc182)
  } loc(#loc179)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc131)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc134)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc137)
    %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc138)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc139)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.return loc(#loc127)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":44:23)
#loc8 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":32:1)
#loc9 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":48:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":33:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":34:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":46:5)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":35:9)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":35:45)
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":37:9)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":45:9)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":37:19)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":37:32)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":37:49)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":37:13)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":37:59)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":37:56)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":38:9)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":41:9)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":43:9)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":40:26)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":40:21)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":40:13)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":40:37)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":44:13)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":47:12)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":47:5)
#loc35 = loc("/usr/include/unistd.h":480:1)
#loc36 = loc("/usr/include/unistd.h":480:43)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":58:15)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":50:1)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":59:1)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":52:5)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":52:9)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":54:14)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":54:13)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":54:5)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":55:23)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":55:13)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":55:5)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":55:28)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":57:11)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":57:5)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":58:5)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":121:1)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":125:1)
#loc56 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":123:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":123:13)
#loc58 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":124:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":124:13)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":85:1)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":101:1)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":86:1)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":87:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":99:5)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":88:9)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":88:45)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":90:9)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":98:9)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":90:19)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":90:32)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":90:49)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":90:13)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":90:59)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":90:56)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":91:9)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":94:9)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":96:9)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":93:26)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":93:21)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":93:13)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":93:37)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":97:23)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":97:13)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":100:12)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":100:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":113:19)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":117:19)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":103:1)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":119:1)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":105:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":105:9)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":107:14)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":107:13)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":107:5)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":108:27)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":108:13)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":108:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":108:32)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":118:5)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:9)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:17)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:15)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:19)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:22)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:31)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":110:28)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":111:5)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":114:5)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":116:5)
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":112:15)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":112:9)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":113:9)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":117:9)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":66:1)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":71:1)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":67:1)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":69:13)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":69:5)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":70:12)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":70:5)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":73:1)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":82:1)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":75:5)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":75:9)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":77:14)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":77:13)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":77:5)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":78:27)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":78:13)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":78:5)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":78:32)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":80:11)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":80:5)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":81:15)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_sleep_42.c":81:5)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc8, #loc9])
#loc146 = loc(fused[#loc13, #loc14])
#loc147 = loc(fused[#loc15, #loc16])
#loc148 = loc(fused[#loc17, #loc18])
#loc149 = loc(fused[#loc22, #loc23])
#loc150 = loc(fused[#loc25, #loc26, #loc27, #loc18])
#loc151 = loc(fused[#loc30, #loc31])
#loc152 = loc(fused[#loc34, #loc33])
#loc153 = loc(fused[#loc35, #loc36])
#loc154 = loc(fused[#loc37, #loc38])
#loc155 = loc(fused[#loc40, #loc41])
#loc156 = loc(fused[#loc42, #loc43])
#loc157 = loc(fused[#loc46, #loc44])
#loc158 = loc(fused[#loc49, #loc50])
#loc159 = loc(fused[#loc54, #loc55])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc60, #loc61])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc67, #loc68])
#loc166 = loc(fused[#loc69, #loc70])
#loc167 = loc(fused[#loc74, #loc75])
#loc168 = loc(fused[#loc77, #loc78, #loc79, #loc70])
#loc169 = loc(fused[#loc82, #loc83])
#loc170 = loc(fused[#loc87, #loc86])
#loc171 = loc(fused[#loc90, #loc91])
#loc172 = loc(fused[#loc92, #loc93])
#loc173 = loc(fused[#loc96, #loc94])
#loc174 = loc(fused[#loc99, #loc100])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc103, #loc104])
#loc177 = loc(fused[#loc107, #loc108])
#loc178 = loc(fused[#loc110, #loc111, #loc112, #loc102])
#loc179 = loc(fused[#loc117, #loc118])
#loc181 = loc(fused[#loc123, #loc122])
#loc182 = loc(fused[#loc125, #loc124])
#loc183 = loc(fused[#loc126, #loc127])
#loc184 = loc(fused[#loc128, #loc129])
#loc185 = loc(fused[#loc132, #loc130])
#loc186 = loc(fused[#loc135, #loc136])
