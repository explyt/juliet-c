!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":29:75)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":29:82)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":55:79)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":55:86)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":93:10)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":93:14)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":93:20)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":93:32)
#loc150 = loc(fused[#loc12, #loc13])
#loc167 = loc(fused[#loc65, #loc66])
#loc175 = loc(fused[#loc96, #loc97])
#loc176 = loc(fused[#loc98, #loc99])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc145)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc148)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc151)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc151)
    %3 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc19)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc20)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc21)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc21)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %11 = cir.call @snprintf(%4, %7, %9, %10) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc19)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc26)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc26)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc11)
  } loc(#loc149)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc154)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc36)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc37)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc158)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc47)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc49)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
    cir.br ^bb3 loc(#loc43)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc51)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc52)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc52)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc56)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc58)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_badSink(%29) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.return loc(#loc33)
  } loc(#loc155)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc168)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc168)
    %3 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc72)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc73)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc74)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc74)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc76)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc76)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %11 = cir.call @snprintf(%4, %7, %9, %10) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc72)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc80)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc64)
  } loc(#loc166)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc83)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc93)
  cir.func @main(%arg0: !s32i loc(fused[#loc96, #loc97]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc98, #loc99])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc102)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc102)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc103)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_good() : () -> () loc(#loc105)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc92)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_bad() : () -> () loc(#loc109)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.return %17 : !s32i loc(#loc179)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc118)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc119)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc182)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc183)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc187)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc131)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc125)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc133)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc134)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc134)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc134)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc138)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc140)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc140)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41_goodG2BSink(%29) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.return loc(#loc115)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":34:38)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":29:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":38:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":32:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":32:25)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":30:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":31:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":37:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":34:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":34:18)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":34:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":34:31)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":34:44)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":35:19)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":35:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":36:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":36:14)
#loc28 = loc("/usr/include/stdlib.h":672:1)
#loc29 = loc("/usr/include/stdlib.h":672:45)
#loc30 = loc("/usr/include/stdlib.h":756:1)
#loc31 = loc("/usr/include/stdlib.h":756:70)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":40:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":49:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":42:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":42:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":43:20)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":43:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":43:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":43:42)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":43:43)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":43:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:17)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:23)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:30)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":44:29)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":46:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":46:18)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":46:23)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":46:27)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":46:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":46:28)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":47:19)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":47:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":47:10)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":47:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":47:15)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":48:74)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":48:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":55:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":64:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":58:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":58:25)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":56:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":57:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":63:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":60:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":60:18)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":60:24)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":60:31)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":60:38)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":60:44)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":61:19)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":61:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":62:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":62:14)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":78:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":81:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":80:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":80:13)
#loc86 = loc("/usr/include/stdlib.h":575:1)
#loc87 = loc("/usr/include/stdlib.h":575:41)
#loc88 = loc("/usr/include/time.h":76:1)
#loc89 = loc("/usr/include/time.h":76:38)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":98:15)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":100:15)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":103:15)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":105:15)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":93:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":108:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":94:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":96:27)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":96:22)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":96:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":98:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":99:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":99:71)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":100:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":103:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":104:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":104:70)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":105:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":107:12)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":107:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":67:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":76:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":69:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":69:12)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":70:20)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":70:27)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":70:31)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":70:42)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":70:43)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":70:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:33)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:17)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:23)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:24)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:30)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":71:29)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":73:12)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":73:18)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":73:23)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":73:26)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":73:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":73:27)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":74:18)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":74:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":74:10)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":74:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":74:14)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":75:78)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_41.c":75:5)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc6, #loc7])
#loc148 = loc(fused[#loc8, #loc9])
#loc149 = loc(fused[#loc10, #loc11])
#loc151 = loc(fused[#loc14, #loc15])
#loc152 = loc(fused[#loc17, #loc18])
#loc153 = loc(fused[#loc28, #loc29])
#loc154 = loc(fused[#loc30, #loc31])
#loc155 = loc(fused[#loc32, #loc33])
#loc156 = loc(fused[#loc34, #loc35])
#loc157 = loc(fused[#loc38, #loc39])
#loc158 = loc(fused[#loc37, #loc39])
#loc159 = loc(fused[#loc36, #loc40])
#loc160 = loc(fused[#loc41, #loc40])
#loc161 = loc(fused[#loc42, #loc43])
#loc162 = loc(fused[#loc44, #loc45])
#loc163 = loc(fused[#loc46, #loc43])
#loc164 = loc(fused[#loc54, #loc55])
#loc165 = loc(fused[#loc57, #loc56])
#loc166 = loc(fused[#loc63, #loc64])
#loc168 = loc(fused[#loc67, #loc68])
#loc169 = loc(fused[#loc70, #loc71])
#loc170 = loc(fused[#loc82, #loc83])
#loc171 = loc(fused[#loc84, #loc85])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc88, #loc89])
#loc174 = loc(fused[#loc94, #loc95])
#loc177 = loc(fused[#loc105, #loc106])
#loc178 = loc(fused[#loc109, #loc110])
#loc179 = loc(fused[#loc113, #loc112])
#loc180 = loc(fused[#loc114, #loc115])
#loc181 = loc(fused[#loc116, #loc117])
#loc182 = loc(fused[#loc120, #loc121])
#loc183 = loc(fused[#loc119, #loc121])
#loc184 = loc(fused[#loc118, #loc122])
#loc185 = loc(fused[#loc123, #loc122])
#loc186 = loc(fused[#loc124, #loc125])
#loc187 = loc(fused[#loc126, #loc127])
#loc188 = loc(fused[#loc128, #loc125])
#loc189 = loc(fused[#loc136, #loc137])
#loc190 = loc(fused[#loc139, #loc138])
