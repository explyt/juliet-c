!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc268 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":229:10)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":229:14)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":229:20)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":229:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc390 = loc(fused[#loc268, #loc269])
#loc391 = loc(fused[#loc270, #loc271])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc284)
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc285)
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_083badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc286)
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc8)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    cir.return %2 : !s32i loc(#loc288)
  } loc(#loc287)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc289)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc290)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc17)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc292)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc293)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc294)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc295)
  cir.func private @close(!s32i) -> !s32i loc(#loc296)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc30)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc298)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc300)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc286)
    %2 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_083badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc286)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc286)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc41)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc303)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc306)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc307)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc308)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc309)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc310)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc53)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc309)
          %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
          %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc56)
          cir.store %15, %10 : !u64i, !cir.ptr<!u64i> loc(#loc310)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc60)
              %17 = cir.const #cir.int<1> : !u32i loc(#loc61)
              %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc61)
              %19 = cir.const #cir.int<6> : !u32i loc(#loc62)
              %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc62)
              %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc63)
              cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc312)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc69)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc69)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc314)
                cir.if %74 {
                  cir.break loc(#loc71)
                } loc(#loc315)
              } loc(#loc313)
              %22 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc316)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc317)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc318)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc79)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc79)
              %27 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc319)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc17)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc17)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc82)
              %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc320)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc87)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc87)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc88)
              %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc321)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %72 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc323)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc324)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc324)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc99)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc100)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc325)
                cir.if %78 {
                  cir.break loc(#loc102)
                } loc(#loc326)
              } loc(#loc322)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              %39 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc106)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc327)
              %42 = cir.const #cir.int<1> : !u64i loc(#loc328)
              %43 = cir.const #cir.int<4096> : !s32i loc(#loc111)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc111)
              %45 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc112)
              %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc329)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc113)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc330)
              %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc331)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc116)
              cir.store %53, %6 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              cir.scope {
                %71 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc122)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc334)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc123)
                  cir.yield %76 : !cir.bool loc(#loc123)
                }, false {
                  %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc125)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc335)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc123)
                    cir.yield %80 : !cir.bool loc(#loc123)
                  }, false {
                    %80 = cir.const #false loc(#loc123)
                    cir.yield %80 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.yield %79 : !cir.bool loc(#loc123)
                }) : (!cir.bool) -> !cir.bool loc(#loc123)
                cir.if %75 {
                  cir.break loc(#loc127)
                } loc(#loc336)
              } loc(#loc333)
              %54 = cir.const #cir.int<0> : !s8i loc(#loc128)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
              %56 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc131)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc337)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc338)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc339)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc134)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc340)
              %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
              %64 = cir.const #cir.int<13> : !s8i loc(#loc136)
              %65 = cir.cast(integral, %64 : !s8i), !s32i loc(#loc136)
              %66 = cir.call @strchr(%63, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc137)
              cir.store %66, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc341)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc142)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s8i loc(#loc144)
                  %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                  cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc344)
                } loc(#loc343)
              } loc(#loc342)
              %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %68 = cir.const #cir.int<10> : !s8i loc(#loc148)
              %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc148)
              %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc149)
              cir.store %70, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s8i loc(#loc156)
                  %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                  cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc348)
                } loc(#loc347)
              } loc(#loc346)
              cir.yield loc(#loc59)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc159)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc159)
              cir.condition(%17) loc(#loc159)
            } loc(#loc311)
          } loc(#loc311)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc163)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc163)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc350)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc166)
            } loc(#loc351)
          } loc(#loc349)
        } loc(#loc305)
      } loc(#loc304)
    } loc(#loc302)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc353)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc170)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc353)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc171)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc30)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc30)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc171)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc354)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc177)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc178)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc356)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc180)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc181)
        } loc(#loc357)
      } loc(#loc355)
    } loc(#loc352)
    cir.return loc(#loc34)
  } loc(#loc299)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc184)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    cir.return %2 : !s32i loc(#loc359)
  } loc(#loc358)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc186)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc360)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc189)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc362)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc285)
    %2 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc285)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc285)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc194)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc363)
    cir.scope {
      %4 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc198)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc365)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc203)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc204)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
        %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc189)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc189)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc204)
      } loc(#loc366)
    } loc(#loc364)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc368)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc209)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc368)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc210)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc212)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc212)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc210)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc369)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc217)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc218)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc371)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc220)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc221)
        } loc(#loc372)
      } loc(#loc370)
    } loc(#loc367)
    cir.return loc(#loc191)
  } loc(#loc361)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc374)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc284)
    %2 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc284)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc284)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc226)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc375)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc230)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc377)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc233)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
        %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc235)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc235)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc233)
      } loc(#loc378)
    } loc(#loc376)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc380)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc239)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc380)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc240)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc242)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc242)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc240)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc381)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc247)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc248)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc383)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc250)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc251)
        } loc(#loc384)
      } loc(#loc382)
    } loc(#loc379)
    cir.return loc(#loc223)
  } loc(#loc373)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_084goodEv() extra(#fn_attr) {
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B1Ev() : () -> () loc(#loc254)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08L8goodG2B2Ev() : () -> () loc(#loc255)
    cir.return loc(#loc253)
  } loc(#loc385)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc386)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc387)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc388)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc265)
  cir.func @main(%arg0: !s32i loc(fused[#loc268, #loc269]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc270, #loc271])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc390)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc391)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc267)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc272)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc273)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc274)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc274)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc275)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc262)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc276)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_084goodEv() : () -> () loc(#loc277)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc263)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc263)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc278)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc264)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc264)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_083badEv() : () -> () loc(#loc280)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc265)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc265)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc282)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc392)
    cir.return %15 : !s32i loc(#loc392)
  } loc(#loc389)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":192:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":192:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":165:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":165:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":74:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":74:37)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":56:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":59:1)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":58:12)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":58:5)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("/usr/include/sys/socket.h":102:1)
#loc14 = loc("/usr/include/sys/socket.h":102:62)
#loc15 = loc("/usr/include/arpa/inet.h":34:1)
#loc16 = loc("/usr/include/arpa/inet.h":34:47)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":105:53)
#loc18 = loc("/usr/include/netinet/in.h":404:1)
#loc19 = loc("/usr/include/netinet/in.h":405:40)
#loc20 = loc("/usr/include/sys/socket.h":126:1)
#loc21 = loc("/usr/include/sys/socket.h":126:75)
#loc22 = loc("/usr/include/sys/socket.h":145:1)
#loc23 = loc("/usr/include/sys/socket.h":145:68)
#loc24 = loc("/usr/include/string.h":226:1)
#loc25 = loc("/usr/include/string.h":227:50)
#loc26 = loc("/usr/include/unistd.h":358:1)
#loc27 = loc("/usr/include/unistd.h":358:27)
#loc28 = loc("/usr/include/stdio.h":264:1)
#loc29 = loc("/usr/include/stdio.h":266:3)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":149:29)
#loc31 = loc("/usr/include/stdio.h":184:1)
#loc32 = loc("/usr/include/stdio.h":184:36)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":71:1)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":155:1)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":73:5)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":73:12)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":75:12)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":75:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":76:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":145:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":76:8)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":76:26)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":77:5)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":78:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":144:9)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":83:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":83:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":84:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":84:32)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":85:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":85:19)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":86:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":86:36)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":87:13)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":87:41)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":87:30)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":87:37)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":88:13)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":133:21)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":98:40)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":98:49)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":98:62)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":98:33)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":98:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":98:73)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":99:17)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":102:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":99:21)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":99:38)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":100:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":101:21)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":103:24)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":103:25)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":103:34)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":103:37)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":103:51)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":103:17)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":103:52)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":104:38)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":104:17)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":105:43)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":105:17)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":105:63)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":106:42)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":106:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":106:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":106:50)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:17)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":110:17)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:29)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:62)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:63)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:72)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:86)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":107:92)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":108:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":109:21)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:35)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:59)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:66)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:64)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:50)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:73)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:76)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:87)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:92)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:107)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:117)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:118)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:121)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:30)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":114:122)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":115:17)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":118:17)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":115:21)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":115:35)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":115:48)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":115:51)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":115:65)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":116:17)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":117:21)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":120:61)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":120:17)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":120:22)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":120:32)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":120:45)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":120:56)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":120:57)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":122:34)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":122:40)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":122:27)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":122:17)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":122:44)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":123:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":126:17)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":123:21)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":124:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":125:32)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":125:22)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":125:21)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":127:34)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":127:40)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":127:27)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":127:17)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":127:44)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":128:17)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":131:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":128:21)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":129:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":130:32)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":130:22)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":130:21)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":133:20)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":134:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":137:13)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":134:17)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":134:34)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":135:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":136:30)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":136:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":146:5)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":154:5)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":147:9)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":147:23)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":149:17)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":149:23)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":149:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":149:34)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":150:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":153:9)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":150:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":150:22)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":151:9)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":152:20)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":152:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":61:1)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":64:1)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":63:12)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":63:5)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":170:19)
#loc187 = loc("/usr/include/string.h":149:1)
#loc188 = loc("/usr/include/string.h":150:14)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":175:22)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":162:1)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":186:1)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":164:5)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":164:12)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":166:12)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":166:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":167:5)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":176:5)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":167:8)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":167:27)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":168:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":171:5)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":173:5)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":170:9)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":175:9)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":175:16)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":177:5)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":185:5)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":178:9)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":178:23)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":180:17)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":180:23)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":180:29)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":180:9)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":180:34)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":181:9)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":184:9)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":181:13)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":181:22)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":182:9)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":183:20)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":183:13)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":189:1)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":208:1)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":191:5)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":191:12)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":193:12)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":193:5)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":194:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":198:5)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":194:8)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":194:26)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":195:5)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":197:9)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":197:16)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":197:22)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":199:5)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":207:5)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":200:9)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":200:23)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":202:17)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":202:23)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":202:29)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":202:9)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":202:34)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":203:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":206:9)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":203:13)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":203:22)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":204:9)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":205:20)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":205:13)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":210:1)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":214:1)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":212:5)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":213:5)
#loc256 = loc("/usr/include/stdlib.h":575:1)
#loc257 = loc("/usr/include/stdlib.h":575:41)
#loc258 = loc("/usr/include/time.h":76:1)
#loc259 = loc("/usr/include/time.h":76:38)
#loc260 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc261 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":234:15)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":236:15)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":239:15)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":241:15)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":229:1)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":244:1)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":230:1)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":232:27)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":232:22)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":232:5)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":234:5)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":235:5)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":236:5)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":239:5)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":240:5)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":241:5)
#loc282 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":243:12)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_08.cpp":243:5)
#loc284 = loc(fused[#loc1, #loc2])
#loc285 = loc(fused[#loc3, #loc4])
#loc286 = loc(fused[#loc5, #loc6])
#loc287 = loc(fused[#loc7, #loc8])
#loc288 = loc(fused[#loc10, #loc9])
#loc289 = loc(fused[#loc11, #loc12])
#loc290 = loc(fused[#loc13, #loc14])
#loc291 = loc(fused[#loc15, #loc16])
#loc292 = loc(fused[#loc18, #loc19])
#loc293 = loc(fused[#loc20, #loc21])
#loc294 = loc(fused[#loc22, #loc23])
#loc295 = loc(fused[#loc24, #loc25])
#loc296 = loc(fused[#loc26, #loc27])
#loc297 = loc(fused[#loc28, #loc29])
#loc298 = loc(fused[#loc31, #loc32])
#loc299 = loc(fused[#loc33, #loc34])
#loc300 = loc(fused[#loc35, #loc36])
#loc301 = loc(fused[#loc38, #loc37])
#loc302 = loc(fused[#loc39, #loc40])
#loc303 = loc(fused[#loc41, #loc42])
#loc304 = loc(fused[#loc43, #loc40])
#loc305 = loc(fused[#loc44, #loc45])
#loc306 = loc(fused[#loc46, #loc47])
#loc307 = loc(fused[#loc48, #loc49])
#loc308 = loc(fused[#loc50, #loc51])
#loc309 = loc(fused[#loc52, #loc53])
#loc310 = loc(fused[#loc54, #loc55])
#loc311 = loc(fused[#loc58, #loc59])
#loc312 = loc(fused[#loc64, #loc65])
#loc313 = loc(fused[#loc66, #loc67])
#loc314 = loc(fused[#loc68, #loc69])
#loc315 = loc(fused[#loc70, #loc67])
#loc316 = loc(fused[#loc72, #loc73])
#loc317 = loc(fused[#loc75, #loc76])
#loc318 = loc(fused[#loc77, #loc78])
#loc319 = loc(fused[#loc81, #loc79])
#loc320 = loc(fused[#loc85, #loc86])
#loc321 = loc(fused[#loc90, #loc91])
#loc322 = loc(fused[#loc92, #loc93])
#loc323 = loc(fused[#loc95, #loc96])
#loc324 = loc(fused[#loc97, #loc98])
#loc325 = loc(fused[#loc99, #loc100])
#loc326 = loc(fused[#loc101, #loc93])
#loc327 = loc(fused[#loc107, #loc108])
#loc328 = loc(fused[#loc109, #loc110])
#loc329 = loc(fused[#loc111, #loc112])
#loc330 = loc(fused[#loc111, #loc113])
#loc331 = loc(fused[#loc109, #loc114])
#loc332 = loc(fused[#loc117, #loc118])
#loc333 = loc(fused[#loc119, #loc120])
#loc334 = loc(fused[#loc121, #loc122])
#loc335 = loc(fused[#loc124, #loc125])
#loc336 = loc(fused[#loc126, #loc120])
#loc337 = loc(fused[#loc132, #loc133])
#loc338 = loc(fused[#loc131, #loc133])
#loc339 = loc(fused[#loc130, #loc133])
#loc340 = loc(fused[#loc129, #loc128])
#loc341 = loc(fused[#loc138, #loc139])
#loc342 = loc(fused[#loc140, #loc141])
#loc343 = loc(fused[#loc143, #loc141])
#loc344 = loc(fused[#loc146, #loc144])
#loc345 = loc(fused[#loc150, #loc151])
#loc346 = loc(fused[#loc152, #loc153])
#loc347 = loc(fused[#loc155, #loc153])
#loc348 = loc(fused[#loc158, #loc156])
#loc349 = loc(fused[#loc160, #loc161])
#loc350 = loc(fused[#loc162, #loc163])
#loc351 = loc(fused[#loc164, #loc161])
#loc352 = loc(fused[#loc167, #loc168])
#loc353 = loc(fused[#loc169, #loc170])
#loc354 = loc(fused[#loc173, #loc174])
#loc355 = loc(fused[#loc175, #loc176])
#loc356 = loc(fused[#loc177, #loc178])
#loc357 = loc(fused[#loc179, #loc176])
#loc358 = loc(fused[#loc182, #loc183])
#loc359 = loc(fused[#loc185, #loc184])
#loc360 = loc(fused[#loc187, #loc188])
#loc361 = loc(fused[#loc190, #loc191])
#loc362 = loc(fused[#loc192, #loc193])
#loc363 = loc(fused[#loc195, #loc194])
#loc364 = loc(fused[#loc196, #loc197])
#loc365 = loc(fused[#loc198, #loc199])
#loc366 = loc(fused[#loc200, #loc201, #loc202, #loc197])
#loc367 = loc(fused[#loc206, #loc207])
#loc368 = loc(fused[#loc208, #loc209])
#loc369 = loc(fused[#loc213, #loc214])
#loc370 = loc(fused[#loc215, #loc216])
#loc371 = loc(fused[#loc217, #loc218])
#loc372 = loc(fused[#loc219, #loc216])
#loc373 = loc(fused[#loc222, #loc223])
#loc374 = loc(fused[#loc224, #loc225])
#loc375 = loc(fused[#loc227, #loc226])
#loc376 = loc(fused[#loc228, #loc229])
#loc377 = loc(fused[#loc230, #loc231])
#loc378 = loc(fused[#loc232, #loc229])
#loc379 = loc(fused[#loc236, #loc237])
#loc380 = loc(fused[#loc238, #loc239])
#loc381 = loc(fused[#loc243, #loc244])
#loc382 = loc(fused[#loc245, #loc246])
#loc383 = loc(fused[#loc247, #loc248])
#loc384 = loc(fused[#loc249, #loc246])
#loc385 = loc(fused[#loc252, #loc253])
#loc386 = loc(fused[#loc256, #loc257])
#loc387 = loc(fused[#loc258, #loc259])
#loc388 = loc(fused[#loc260, #loc261])
#loc389 = loc(fused[#loc266, #loc267])
#loc392 = loc(fused[#loc283, #loc282])
