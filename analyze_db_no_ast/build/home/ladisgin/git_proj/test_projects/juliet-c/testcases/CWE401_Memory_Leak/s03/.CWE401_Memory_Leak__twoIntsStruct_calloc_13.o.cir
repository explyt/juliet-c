!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc236)
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc237)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc238)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc239)
  cir.func no_proto  @CWE401_Memory_Leak__twoIntsStruct_calloc_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc242)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc244)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
      cir.if %6 {
        %7 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc21)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc22)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc246)
        %11 = cir.call @calloc(%9, %10) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc247)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc248)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc250)
          %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc31)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc34)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc35)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
          } loc(#loc251)
        } loc(#loc249)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc252)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc41)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc253)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc49)
      } loc(#loc245)
    } loc(#loc243)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc53)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc255)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc54)
      cir.if %6 {
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc10)
  } loc(#loc240)
  cir.func no_proto  @CWE401_Memory_Leak__twoIntsStruct_calloc_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc258)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc57)
  } loc(#loc257)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc262)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc263)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc265)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc266)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc80)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc268)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc81)
      cir.if %6 {
        %7 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc83)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc84)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc270)
        %11 = cir.call @calloc(%9, %10) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc271)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc272)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc274)
          %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc93)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc97)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
          } loc(#loc275)
        } loc(#loc273)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc98)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc276)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc104)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc277)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc107)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc109)
      } loc(#loc269)
    } loc(#loc267)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc279)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc114)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc119)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc120)
        cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc119)
      } loc(#loc280)
    } loc(#loc278)
    cir.return loc(#loc72)
  } loc(#loc264)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc283)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc130)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc285)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc131)
      cir.if %6 {
        %7 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc133)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc134)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc134)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc287)
        %11 = cir.call @calloc(%9, %10) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc288)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc289)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc291)
          %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc143)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc145)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc147)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc145)
          } loc(#loc292)
        } loc(#loc290)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc148)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc150)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc293)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc152)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc294)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc157)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc159)
      } loc(#loc286)
    } loc(#loc284)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc163)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc296)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc164)
      cir.if %6 {
        %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc166)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc167)
        cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
      } loc(#loc297)
    } loc(#loc295)
    cir.return loc(#loc122)
  } loc(#loc281)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc300)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc177)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc302)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc178)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc182)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc182)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc183)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc184)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc184)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc184)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc184)
        %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc184)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc184)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
        cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc304)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc186)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc188)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
        %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc305)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc190)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc192)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
        %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
        cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc306)
        %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc195)
        %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
        cir.call @printStructLine(%26) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc197)
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc201)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc308)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc202)
      cir.if %6 {
      } loc(#loc309)
    } loc(#loc307)
    cir.return loc(#loc169)
  } loc(#loc298)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc208)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc312)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc213)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc314)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc214)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc216)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc216)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc216)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc216)
        %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc216)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc216)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc216)
        cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc316)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc218)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc219)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc220)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc221)
        %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc317)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc222)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc223)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc224)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc225)
        %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
        cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc318)
        %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc226)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc227)
        %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc228)
        cir.call @printStructLine(%26) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc229)
      } loc(#loc315)
    } loc(#loc313)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc236)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc233)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc320)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc234)
      cir.if %6 {
      } loc(#loc321)
    } loc(#loc319)
    cir.return loc(#loc205)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdlib.h":675:1)
#loc4 = loc("/usr/include/stdlib.h":676:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":24:1)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":43:1)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":26:5)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":26:21)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":27:12)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":27:5)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":37:5)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":28:8)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":28:27)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":28:25)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":29:5)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":31:33)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":31:40)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":31:45)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":31:65)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":31:66)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":31:9)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:9)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:37)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:13)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:21)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:18)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:27)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:28)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:34)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":32:33)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":34:26)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":34:9)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":34:14)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":34:15)
#loc40 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":35:26)
#loc42 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":35:9)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":35:14)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":35:15)
#loc45 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":36:26)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":36:31)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":36:32)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":36:9)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":38:5)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":42:5)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":38:8)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":38:27)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":38:25)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":39:5)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":145:1)
#loc57 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":151:1)
#loc58 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":147:5)
#loc59 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":147:14)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":148:5)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":148:14)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":149:5)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":149:14)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":150:5)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":150:14)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":67:19)
#loc69 = loc("/usr/include/stdlib.h":687:1)
#loc70 = loc("/usr/include/stdlib.h":687:32)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":50:1)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":74:1)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":52:5)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":52:21)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":53:12)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":53:5)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":54:5)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":63:5)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":54:8)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":54:27)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":54:25)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":55:5)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":57:33)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":57:40)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":57:45)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":57:65)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":57:66)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":57:9)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:9)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:37)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:13)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:21)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:18)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:27)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:28)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:34)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":58:33)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":60:26)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":60:9)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":60:14)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":60:15)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":61:26)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":61:9)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":61:14)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":61:15)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":62:26)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":62:31)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":62:32)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":62:9)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":64:5)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":73:5)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":64:8)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":64:27)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":64:25)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":65:5)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":68:5)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":70:5)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":67:9)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":72:9)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":72:14)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":77:1)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":96:1)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":79:5)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":79:21)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":80:12)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":80:5)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":81:5)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":90:5)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":81:8)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":81:27)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":81:25)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":82:5)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":84:33)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":84:40)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":84:45)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":84:65)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":84:66)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":84:9)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:9)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:37)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:13)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:21)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:18)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:27)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:28)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:34)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":85:33)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":87:26)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":87:9)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":87:14)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":87:15)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":88:26)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":88:9)
#loc154 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":88:14)
#loc155 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":88:15)
#loc156 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":89:26)
#loc157 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":89:31)
#loc158 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":89:32)
#loc159 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":89:9)
#loc160 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":91:5)
#loc161 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":95:5)
#loc162 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":91:8)
#loc163 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":91:27)
#loc164 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":91:25)
#loc165 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":92:5)
#loc166 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":94:9)
#loc167 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":94:14)
#loc168 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":99:1)
#loc169 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":122:1)
#loc170 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":101:5)
#loc171 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":101:21)
#loc172 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":102:12)
#loc173 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":102:5)
#loc174 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":103:5)
#loc175 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":116:5)
#loc176 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":103:8)
#loc177 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":103:27)
#loc178 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":103:25)
#loc179 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":104:5)
#loc180 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":107:5)
#loc181 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":109:5)
#loc182 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":106:19)
#loc183 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":106:9)
#loc184 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":111:33)
#loc185 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":111:9)
#loc186 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":113:26)
#loc187 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":113:9)
#loc188 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":113:14)
#loc189 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":113:15)
#loc190 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":114:26)
#loc191 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":114:9)
#loc192 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":114:14)
#loc193 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":114:15)
#loc194 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":115:26)
#loc195 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":115:31)
#loc196 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":115:32)
#loc197 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":115:9)
#loc198 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":117:5)
#loc199 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":121:5)
#loc200 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":117:8)
#loc201 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":117:27)
#loc202 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":117:25)
#loc203 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":118:5)
#loc204 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":125:1)
#loc205 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":143:1)
#loc206 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":127:5)
#loc207 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":127:21)
#loc208 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":128:12)
#loc209 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":128:5)
#loc210 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":129:5)
#loc211 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":137:5)
#loc212 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":129:8)
#loc213 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":129:27)
#loc214 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":129:25)
#loc215 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":130:5)
#loc216 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":132:33)
#loc217 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":132:9)
#loc218 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":134:26)
#loc219 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":134:9)
#loc220 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":134:14)
#loc221 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":134:15)
#loc222 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":135:26)
#loc223 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":135:9)
#loc224 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":135:14)
#loc225 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":135:15)
#loc226 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":136:26)
#loc227 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":136:31)
#loc228 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":136:32)
#loc229 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":136:9)
#loc230 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":138:5)
#loc231 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":142:5)
#loc232 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":138:8)
#loc233 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":138:27)
#loc234 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":138:25)
#loc235 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_13.c":139:5)
#loc236 = loc(fused[#loc1, #loc2])
#loc237 = loc(fused[#loc3, #loc4])
#loc238 = loc(fused[#loc5, #loc6])
#loc239 = loc(fused[#loc7, #loc8])
#loc240 = loc(fused[#loc9, #loc10])
#loc241 = loc(fused[#loc11, #loc12])
#loc242 = loc(fused[#loc14, #loc13])
#loc243 = loc(fused[#loc15, #loc16])
#loc244 = loc(fused[#loc17, #loc18])
#loc245 = loc(fused[#loc20, #loc16])
#loc246 = loc(fused[#loc23, #loc24])
#loc247 = loc(fused[#loc21, #loc25])
#loc248 = loc(fused[#loc26, #loc25])
#loc249 = loc(fused[#loc27, #loc28])
#loc250 = loc(fused[#loc29, #loc30])
#loc251 = loc(fused[#loc32, #loc28])
#loc252 = loc(fused[#loc37, #loc36])
#loc253 = loc(fused[#loc42, #loc41])
#loc254 = loc(fused[#loc50, #loc51])
#loc255 = loc(fused[#loc52, #loc53])
#loc256 = loc(fused[#loc55, #loc51])
#loc257 = loc(fused[#loc56, #loc57])
#loc258 = loc(fused[#loc58, #loc59])
#loc259 = loc(fused[#loc60, #loc61])
#loc260 = loc(fused[#loc62, #loc63])
#loc261 = loc(fused[#loc64, #loc65])
#loc262 = loc(fused[#loc66, #loc67])
#loc263 = loc(fused[#loc69, #loc70])
#loc264 = loc(fused[#loc71, #loc72])
#loc265 = loc(fused[#loc73, #loc74])
#loc266 = loc(fused[#loc76, #loc75])
#loc267 = loc(fused[#loc77, #loc78])
#loc268 = loc(fused[#loc79, #loc80])
#loc269 = loc(fused[#loc82, #loc78])
#loc270 = loc(fused[#loc85, #loc86])
#loc271 = loc(fused[#loc83, #loc87])
#loc272 = loc(fused[#loc88, #loc87])
#loc273 = loc(fused[#loc89, #loc90])
#loc274 = loc(fused[#loc91, #loc92])
#loc275 = loc(fused[#loc94, #loc90])
#loc276 = loc(fused[#loc99, #loc98])
#loc277 = loc(fused[#loc103, #loc102])
#loc278 = loc(fused[#loc110, #loc111])
#loc279 = loc(fused[#loc112, #loc113])
#loc280 = loc(fused[#loc115, #loc116, #loc117, #loc111])
#loc281 = loc(fused[#loc121, #loc122])
#loc282 = loc(fused[#loc123, #loc124])
#loc283 = loc(fused[#loc126, #loc125])
#loc284 = loc(fused[#loc127, #loc128])
#loc285 = loc(fused[#loc129, #loc130])
#loc286 = loc(fused[#loc132, #loc128])
#loc287 = loc(fused[#loc135, #loc136])
#loc288 = loc(fused[#loc133, #loc137])
#loc289 = loc(fused[#loc138, #loc137])
#loc290 = loc(fused[#loc139, #loc140])
#loc291 = loc(fused[#loc141, #loc142])
#loc292 = loc(fused[#loc144, #loc140])
#loc293 = loc(fused[#loc149, #loc148])
#loc294 = loc(fused[#loc153, #loc152])
#loc295 = loc(fused[#loc160, #loc161])
#loc296 = loc(fused[#loc162, #loc163])
#loc297 = loc(fused[#loc165, #loc161])
#loc298 = loc(fused[#loc168, #loc169])
#loc299 = loc(fused[#loc170, #loc171])
#loc300 = loc(fused[#loc173, #loc172])
#loc301 = loc(fused[#loc174, #loc175])
#loc302 = loc(fused[#loc176, #loc177])
#loc303 = loc(fused[#loc179, #loc180, #loc181, #loc175])
#loc304 = loc(fused[#loc185, #loc184])
#loc305 = loc(fused[#loc187, #loc186])
#loc306 = loc(fused[#loc191, #loc190])
#loc307 = loc(fused[#loc198, #loc199])
#loc308 = loc(fused[#loc200, #loc201])
#loc309 = loc(fused[#loc203, #loc199])
#loc310 = loc(fused[#loc204, #loc205])
#loc311 = loc(fused[#loc206, #loc207])
#loc312 = loc(fused[#loc209, #loc208])
#loc313 = loc(fused[#loc210, #loc211])
#loc314 = loc(fused[#loc212, #loc213])
#loc315 = loc(fused[#loc215, #loc211])
#loc316 = loc(fused[#loc217, #loc216])
#loc317 = loc(fused[#loc219, #loc218])
#loc318 = loc(fused[#loc223, #loc222])
#loc319 = loc(fused[#loc230, #loc231])
#loc320 = loc(fused[#loc232, #loc233])
#loc321 = loc(fused[#loc235, #loc231])
