!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc285)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc287)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc288)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @close(!s32i) -> !s32i loc(#loc290)
  cir.func private @printIntLine(!s32i) loc(#loc291)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc294)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc295)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc296)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc297)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc298)
    %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc299)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc36)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.goto "source" loc(#loc301)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc40)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc30)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.scope {
      cir.do {
        cir.scope {
          %11 = cir.const #cir.int<2> : !s32i loc(#loc45)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc47)
          %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
          cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc304)
          cir.scope {
            %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc54)
            %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc54)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc306)
            cir.if %56 {
              cir.break loc(#loc56)
            } loc(#loc307)
          } loc(#loc305)
          %15 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc308)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc309)
          cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc310)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc64)
          %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc64)
          %20 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
          cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc311)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc312)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc72)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc72)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc313)
          cir.scope {
            %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %54 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc315)
            %55 = cir.const #cir.int<16> : !u64i loc(#loc316)
            %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc316)
            %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc85)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc317)
            cir.if %60 {
              cir.break loc(#loc87)
            } loc(#loc318)
          } loc(#loc314)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
          %31 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
          %33 = cir.const #cir.int<3> : !s32i loc(#loc90)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc90)
          %35 = cir.const #cir.int<4> : !u64i loc(#loc90)
          %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc90)
          %37 = cir.const #cir.int<2> : !s32i loc(#loc90)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc90)
          %39 = cir.binop(add, %36, %38) : !u64i loc(#loc90)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc91)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc91)
          %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc319)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc92)
          %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc93)
          cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc320)
          cir.scope {
            %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc99)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc322)
            %57 = cir.ternary(%56, true {
              %58 = cir.const #true loc(#loc100)
              cir.yield %58 : !cir.bool loc(#loc100)
            }, false {
              %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %59 = cir.const #cir.int<0> : !s32i loc(#loc102)
              %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc323)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc100)
                cir.yield %62 : !cir.bool loc(#loc100)
              }, false {
                %62 = cir.const #false loc(#loc100)
                cir.yield %62 : !cir.bool loc(#loc100)
              }) : (!cir.bool) -> !cir.bool loc(#loc100)
              cir.yield %61 : !cir.bool loc(#loc100)
            }) : (!cir.bool) -> !cir.bool loc(#loc100)
            cir.if %57 {
              cir.break loc(#loc104)
            } loc(#loc324)
          } loc(#loc321)
          %46 = cir.const #cir.int<0> : !s32i loc(#loc105)
          %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc105)
          %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %49 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
          %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc107)
          cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc325)
          %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
          %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc109)
          cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc326)
        } loc(#loc303)
        cir.yield loc(#loc42)
      } while {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc112)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc112)
        cir.condition(%12) loc(#loc112)
      } loc(#loc302)
    } loc(#loc302)
    cir.scope {
      %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc116)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc328)
      cir.if %14 {
        %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc118)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc119)
      } loc(#loc329)
    } loc(#loc327)
    cir.goto "sink" loc(#loc330)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc122)
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc299)
    cir.store %10, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc299)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc126)
      %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc332)
      cir.if %13 {
        %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
        %15 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc131)
        %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc131)
        %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc131)
        cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc132)
      } else {
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc133)
      } loc(#loc333)
    } loc(#loc331)
    cir.return loc(#loc22)
  } loc(#loc293)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc335)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc136)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc336)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc138)
    cir.return loc(#loc135)
  } loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc140)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc339)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc340)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc341)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc342)
    %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc343)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc156)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.goto "source" loc(#loc345)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc160)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc150)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.scope {
      cir.do {
        cir.scope {
          %11 = cir.const #cir.int<2> : !s32i loc(#loc165)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc166)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc167)
          %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc168)
          cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc348)
          cir.scope {
            %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc174)
            %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc174)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc350)
            cir.if %56 {
              cir.break loc(#loc176)
            } loc(#loc351)
          } loc(#loc349)
          %15 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc352)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc179)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc353)
          cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc354)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc184)
          %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc184)
          %20 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
          cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc355)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc186)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc186)
          %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc187)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc356)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc190)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc190)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc191)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc357)
          cir.scope {
            %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc196)
            %54 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc359)
            %55 = cir.const #cir.int<16> : !u64i loc(#loc360)
            %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc360)
            %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc201)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc202)
            %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc202)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc361)
            cir.if %60 {
              cir.break loc(#loc204)
            } loc(#loc362)
          } loc(#loc358)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc205)
          %31 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc206)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc206)
          %33 = cir.const #cir.int<3> : !s32i loc(#loc207)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc207)
          %35 = cir.const #cir.int<4> : !u64i loc(#loc207)
          %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc207)
          %37 = cir.const #cir.int<2> : !s32i loc(#loc207)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc207)
          %39 = cir.binop(add, %36, %38) : !u64i loc(#loc207)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc208)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc208)
          %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc363)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc209)
          %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc210)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc210)
          cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc364)
          cir.scope {
            %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc215)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc216)
            %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc216)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc366)
            %57 = cir.ternary(%56, true {
              %58 = cir.const #true loc(#loc217)
              cir.yield %58 : !cir.bool loc(#loc217)
            }, false {
              %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %59 = cir.const #cir.int<0> : !s32i loc(#loc219)
              %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc367)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc217)
                cir.yield %62 : !cir.bool loc(#loc217)
              }, false {
                %62 = cir.const #false loc(#loc217)
                cir.yield %62 : !cir.bool loc(#loc217)
              }) : (!cir.bool) -> !cir.bool loc(#loc217)
              cir.yield %61 : !cir.bool loc(#loc217)
            }) : (!cir.bool) -> !cir.bool loc(#loc217)
            cir.if %57 {
              cir.break loc(#loc221)
            } loc(#loc368)
          } loc(#loc365)
          %46 = cir.const #cir.int<0> : !s32i loc(#loc222)
          %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc222)
          %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc223)
          %49 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc224)
          %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc224)
          cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc369)
          %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc225)
          %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc226)
          cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
        } loc(#loc347)
        cir.yield loc(#loc162)
      } while {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc229)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc229)
        cir.condition(%12) loc(#loc229)
      } loc(#loc346)
    } loc(#loc346)
    cir.scope {
      %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc232)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc233)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc233)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc372)
      cir.if %14 {
        %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc235)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc236)
      } loc(#loc373)
    } loc(#loc371)
    cir.goto "sink" loc(#loc374)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc239)
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc343)
    cir.store %10, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc343)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc243)
      %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc376)
      %14 = cir.ternary(%13, true {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
        %16 = cir.const #cir.int<10> : !s32i loc(#loc246)
        %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc377)
        %18 = cir.ternary(%17, true {
          %19 = cir.const #true loc(#loc244)
          cir.yield %19 : !cir.bool loc(#loc244)
        }, false {
          %19 = cir.const #false loc(#loc244)
          cir.yield %19 : !cir.bool loc(#loc244)
        }) : (!cir.bool) -> !cir.bool loc(#loc244)
        cir.yield %18 : !cir.bool loc(#loc244)
      }, false {
        %15 = cir.const #false loc(#loc244)
        cir.yield %15 : !cir.bool loc(#loc244)
      }) : (!cir.bool) -> !cir.bool loc(#loc244)
      cir.if %14 {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
        %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc252)
        %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc252)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc252)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc253)
      } else {
        %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc140)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc140)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc254)
      } loc(#loc378)
    } loc(#loc375)
    cir.return loc(#loc142)
  } loc(#loc337)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc381)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc262)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.goto "source" loc(#loc383)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc266)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc267)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    cir.goto "sink" loc(#loc385)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc271)
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc381)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc381)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc275)
      %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc387)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
        %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc280)
        %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc280)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc280)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc281)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc282)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc282)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc283)
      } loc(#loc388)
    } loc(#loc386)
    cir.return loc(#loc256)
  } loc(#loc379)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_18.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":119:23)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":44:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":122:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":46:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":46:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":56:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":56:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":57:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":57:28)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":58:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":58:32)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":59:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":59:41)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":110:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":110:30)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":48:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":48:12)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":48:5)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":49:5)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":49:10)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":50:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":60:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":95:17)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":61:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":94:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:36)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:45)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:58)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:29)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:69)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":71:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":74:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":71:17)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":71:34)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":72:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":73:17)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:20)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:21)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:30)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:33)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:47)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:48)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":76:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":76:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:13)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:59)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:38)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:46)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":82:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:25)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:58)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:59)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:68)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:82)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:17)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:88)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":80:13)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":81:17)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:31)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:46)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:59)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:77)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:80)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:26)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:81)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":89:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:17)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:31)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:44)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:47)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:61)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":87:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":88:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":91:39)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":91:25)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":91:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:25)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:20)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:36)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":95:16)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":96:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":99:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":96:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":96:30)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":97:9)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":98:26)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":98:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":107:5)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":107:10)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":108:1)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":113:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":120:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":113:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":113:21)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":114:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":116:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":118:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":115:33)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":115:26)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":115:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":119:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":236:1)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":240:1)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":238:5)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":238:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":239:5)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":239:13)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":203:23)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":129:1)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":206:1)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":131:5)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":131:9)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":141:9)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":141:13)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":142:9)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":142:28)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":143:9)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":143:32)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":144:9)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":144:41)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":195:9)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":195:30)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":133:13)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":133:12)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":133:5)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":134:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":134:10)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":135:1)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":145:9)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":180:17)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":146:9)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":179:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:36)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:45)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:58)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:29)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:13)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:69)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":156:13)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":159:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":156:17)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":156:34)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":157:13)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":158:17)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:20)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:21)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:30)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:33)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:47)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:13)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:48)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":161:34)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":161:13)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:49)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:39)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:13)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:59)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:38)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:32)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:13)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:46)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":167:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:25)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:58)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:59)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:68)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:82)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:17)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:88)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":165:13)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":166:17)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:31)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:46)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:59)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:77)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:80)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:26)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:13)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:81)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:13)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":174:13)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:17)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:31)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:44)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:47)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:61)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":172:13)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":173:17)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":176:39)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":176:25)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":176:13)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:25)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:20)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:13)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:36)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":180:16)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":181:9)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":184:9)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":181:13)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":181:30)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":182:9)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":183:26)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":183:13)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":192:5)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":192:10)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":193:1)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:9)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":204:9)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:13)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:21)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:23)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:26)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:34)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:36)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":198:9)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":200:9)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":202:9)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":199:33)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":199:26)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":199:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":203:13)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":209:1)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":234:1)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":211:5)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":211:9)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":222:9)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":222:30)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":213:13)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":213:12)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":213:5)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":214:5)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":214:10)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":215:1)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":218:12)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":218:5)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":219:5)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":219:10)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":220:1)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":225:9)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":232:9)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":225:13)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":225:21)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":226:9)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":228:9)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":230:9)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":227:33)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":227:26)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":227:13)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":231:23)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":231:13)
#loc284 = loc(fused[#loc1, #loc2])
#loc285 = loc(fused[#loc3, #loc4])
#loc286 = loc(fused[#loc6, #loc7])
#loc287 = loc(fused[#loc8, #loc9])
#loc288 = loc(fused[#loc10, #loc11])
#loc289 = loc(fused[#loc12, #loc13])
#loc290 = loc(fused[#loc14, #loc15])
#loc291 = loc(fused[#loc16, #loc17])
#loc292 = loc(fused[#loc18, #loc19])
#loc293 = loc(fused[#loc21, #loc22])
#loc294 = loc(fused[#loc23, #loc24])
#loc295 = loc(fused[#loc25, #loc26])
#loc296 = loc(fused[#loc27, #loc28])
#loc297 = loc(fused[#loc29, #loc30])
#loc298 = loc(fused[#loc31, #loc32])
#loc299 = loc(fused[#loc33, #loc34])
#loc300 = loc(fused[#loc37, #loc35])
#loc301 = loc(fused[#loc38, #loc39])
#loc302 = loc(fused[#loc41, #loc42])
#loc303 = loc(fused[#loc43, #loc44])
#loc304 = loc(fused[#loc49, #loc50])
#loc305 = loc(fused[#loc51, #loc52])
#loc306 = loc(fused[#loc53, #loc54])
#loc307 = loc(fused[#loc55, #loc52])
#loc308 = loc(fused[#loc57, #loc58])
#loc309 = loc(fused[#loc60, #loc61])
#loc310 = loc(fused[#loc62, #loc63])
#loc311 = loc(fused[#loc66, #loc64])
#loc312 = loc(fused[#loc70, #loc71])
#loc313 = loc(fused[#loc75, #loc76])
#loc314 = loc(fused[#loc77, #loc78])
#loc315 = loc(fused[#loc80, #loc81])
#loc316 = loc(fused[#loc82, #loc83])
#loc317 = loc(fused[#loc84, #loc85])
#loc318 = loc(fused[#loc86, #loc78])
#loc319 = loc(fused[#loc90, #loc91])
#loc320 = loc(fused[#loc94, #loc95])
#loc321 = loc(fused[#loc96, #loc97])
#loc322 = loc(fused[#loc98, #loc99])
#loc323 = loc(fused[#loc101, #loc102])
#loc324 = loc(fused[#loc103, #loc97])
#loc325 = loc(fused[#loc107, #loc105])
#loc326 = loc(fused[#loc110, #loc111])
#loc327 = loc(fused[#loc113, #loc114])
#loc328 = loc(fused[#loc115, #loc116])
#loc329 = loc(fused[#loc117, #loc114])
#loc330 = loc(fused[#loc120, #loc121])
#loc331 = loc(fused[#loc123, #loc124])
#loc332 = loc(fused[#loc125, #loc126])
#loc333 = loc(fused[#loc127, #loc128, #loc129, #loc124])
#loc334 = loc(fused[#loc134, #loc135])
#loc335 = loc(fused[#loc136, #loc137])
#loc336 = loc(fused[#loc138, #loc139])
#loc337 = loc(fused[#loc141, #loc142])
#loc338 = loc(fused[#loc143, #loc144])
#loc339 = loc(fused[#loc145, #loc146])
#loc340 = loc(fused[#loc147, #loc148])
#loc341 = loc(fused[#loc149, #loc150])
#loc342 = loc(fused[#loc151, #loc152])
#loc343 = loc(fused[#loc153, #loc154])
#loc344 = loc(fused[#loc157, #loc155])
#loc345 = loc(fused[#loc158, #loc159])
#loc346 = loc(fused[#loc161, #loc162])
#loc347 = loc(fused[#loc163, #loc164])
#loc348 = loc(fused[#loc169, #loc170])
#loc349 = loc(fused[#loc171, #loc172])
#loc350 = loc(fused[#loc173, #loc174])
#loc351 = loc(fused[#loc175, #loc172])
#loc352 = loc(fused[#loc177, #loc178])
#loc353 = loc(fused[#loc180, #loc181])
#loc354 = loc(fused[#loc182, #loc183])
#loc355 = loc(fused[#loc185, #loc184])
#loc356 = loc(fused[#loc188, #loc189])
#loc357 = loc(fused[#loc192, #loc193])
#loc358 = loc(fused[#loc194, #loc195])
#loc359 = loc(fused[#loc197, #loc198])
#loc360 = loc(fused[#loc199, #loc200])
#loc361 = loc(fused[#loc201, #loc202])
#loc362 = loc(fused[#loc203, #loc195])
#loc363 = loc(fused[#loc207, #loc208])
#loc364 = loc(fused[#loc211, #loc212])
#loc365 = loc(fused[#loc213, #loc214])
#loc366 = loc(fused[#loc215, #loc216])
#loc367 = loc(fused[#loc218, #loc219])
#loc368 = loc(fused[#loc220, #loc214])
#loc369 = loc(fused[#loc224, #loc222])
#loc370 = loc(fused[#loc227, #loc228])
#loc371 = loc(fused[#loc230, #loc231])
#loc372 = loc(fused[#loc232, #loc233])
#loc373 = loc(fused[#loc234, #loc231])
#loc374 = loc(fused[#loc237, #loc238])
#loc375 = loc(fused[#loc240, #loc241])
#loc376 = loc(fused[#loc242, #loc243])
#loc377 = loc(fused[#loc245, #loc247])
#loc378 = loc(fused[#loc248, #loc249, #loc250, #loc241])
#loc379 = loc(fused[#loc255, #loc256])
#loc380 = loc(fused[#loc257, #loc258])
#loc381 = loc(fused[#loc259, #loc260])
#loc382 = loc(fused[#loc263, #loc261])
#loc383 = loc(fused[#loc264, #loc265])
#loc384 = loc(fused[#loc268, #loc267])
#loc385 = loc(fused[#loc269, #loc270])
#loc386 = loc(fused[#loc272, #loc273])
#loc387 = loc(fused[#loc274, #loc275])
#loc388 = loc(fused[#loc276, #loc277, #loc278, #loc273])
