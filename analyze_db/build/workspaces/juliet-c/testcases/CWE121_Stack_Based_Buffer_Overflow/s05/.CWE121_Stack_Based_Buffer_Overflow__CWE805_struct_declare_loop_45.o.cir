!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc143)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc146)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc147)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    cir.store %4, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc149)
    %6 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc150)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc15)
    cir.return loc(#loc4)
  } loc(#loc144)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc18)
  } loc(#loc151)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc153)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc157)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc159)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc37)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc37)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc161)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc40)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc162)
            cir.condition(%10) loc(#loc41)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc43)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc44)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %8 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
              %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc46)
              cir.store %7, %11 : !s32i, !cir.ptr<!s32i> loc(#loc164)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc47)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc48)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
              %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
              cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc165)
            } loc(#loc163)
            cir.yield loc(#loc36)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc52)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc166)
            cir.yield loc(#loc160)
          } loc(#loc160)
        } loc(#loc160)
      } loc(#loc158)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc59)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc59)
          cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc170)
          cir.for : cond {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc62)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc62)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc171)
            cir.condition(%13) loc(#loc63)
          } body {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc66)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc68)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
              cir.copy %15 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
            } loc(#loc172)
            cir.yield loc(#loc58)
          } step {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc70)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc71)
            cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc173)
            cir.yield loc(#loc169)
          } loc(#loc169)
        } loc(#loc169)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc73)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!ty__twoIntsStruct>, %6 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
        cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc75)
      } loc(#loc167)
    } loc(#loc156)
    cir.return loc(#loc24)
  } loc(#loc154)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc177)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc178)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc174)
    cir.store %4, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc181)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc90)
    cir.return loc(#loc79)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc174)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc183)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc185)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc187)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc106)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc189)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc109)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc109)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc190)
            cir.condition(%10) loc(#loc110)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc113)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %8 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
              %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc46)
              cir.store %7, %11 : !s32i, !cir.ptr<!s32i> loc(#loc192)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc116)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
              %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
              cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc193)
            } loc(#loc191)
            cir.yield loc(#loc105)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc118)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc119)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc194)
            cir.yield loc(#loc188)
          } loc(#loc188)
        } loc(#loc188)
      } loc(#loc186)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc196)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc126)
          cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc198)
          cir.for : cond {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc128)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc129)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc129)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc199)
            cir.condition(%13) loc(#loc130)
          } body {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc133)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc135)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
              cir.copy %15 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
            } loc(#loc200)
            cir.yield loc(#loc125)
          } step {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc138)
            cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc201)
            cir.yield loc(#loc197)
          } loc(#loc197)
        } loc(#loc197)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc140)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!ty__twoIntsStruct>, %6 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
        cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc142)
      } loc(#loc195)
    } loc(#loc184)
    cir.return loc(#loc93)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":19:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":19:24)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":50:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":60:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":52:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":52:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":53:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":53:35)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":54:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":54:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":57:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":57:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":58:81)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":58:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":59:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":59:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":104:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":107:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":106:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":106:13)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":24:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":48:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":26:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":26:28)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":27:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":47:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":28:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":28:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":29:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":37:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":30:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":30:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":36:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:22)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:18)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:25)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:27)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":33:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":34:36)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":34:24)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":34:17)
#loc46 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":35:36)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":35:24)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":35:17)
#loc50 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":32:34)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":38:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":46:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":39:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":39:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":44:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:22)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:18)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:25)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:29)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:27)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":42:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":43:17)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":43:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":43:23)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":43:34)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":43:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:35)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":41:34)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":45:30)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":45:35)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":45:36)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":45:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":20:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":20:24)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":93:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":102:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":95:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":95:21)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":96:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":96:35)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":97:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":97:37)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":99:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":99:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":100:85)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":100:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":101:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":101:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":67:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":91:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":69:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":69:28)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":70:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":90:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":71:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":71:33)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":72:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":80:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":73:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":73:20)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":79:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:18)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:25)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:29)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":76:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":77:36)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":77:24)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":77:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":78:36)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":78:24)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":78:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:35)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":75:34)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":81:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":89:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":82:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":82:20)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":87:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:22)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:18)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:25)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:29)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:27)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":85:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":86:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":86:22)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":86:23)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":86:34)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":86:27)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:35)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":84:34)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":88:30)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":88:35)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":88:36)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_45.c":88:13)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc12, #loc11])
#loc149 = loc(fused[#loc14, #loc13])
#loc150 = loc(fused[#loc15, #loc16])
#loc151 = loc(fused[#loc17, #loc18])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc21, #loc22])
#loc154 = loc(fused[#loc23, #loc24])
#loc155 = loc(fused[#loc25, #loc26])
#loc156 = loc(fused[#loc27, #loc28])
#loc157 = loc(fused[#loc29, #loc30])
#loc158 = loc(fused[#loc31, #loc32])
#loc159 = loc(fused[#loc33, #loc34])
#loc160 = loc(fused[#loc35, #loc36])
#loc161 = loc(fused[#loc38, #loc37])
#loc162 = loc(fused[#loc39, #loc40])
#loc163 = loc(fused[#loc42, #loc36])
#loc164 = loc(fused[#loc45, #loc43])
#loc165 = loc(fused[#loc49, #loc47])
#loc166 = loc(fused[#loc52, #loc51])
#loc167 = loc(fused[#loc53, #loc54])
#loc168 = loc(fused[#loc55, #loc56])
#loc169 = loc(fused[#loc57, #loc58])
#loc170 = loc(fused[#loc60, #loc59])
#loc171 = loc(fused[#loc61, #loc62])
#loc172 = loc(fused[#loc64, #loc58])
#loc173 = loc(fused[#loc71, #loc70])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc78, #loc79])
#loc176 = loc(fused[#loc80, #loc81])
#loc177 = loc(fused[#loc82, #loc83])
#loc178 = loc(fused[#loc84, #loc85])
#loc179 = loc(fused[#loc87, #loc86])
#loc180 = loc(fused[#loc89, #loc88])
#loc181 = loc(fused[#loc90, #loc91])
#loc182 = loc(fused[#loc92, #loc93])
#loc183 = loc(fused[#loc94, #loc95])
#loc184 = loc(fused[#loc96, #loc97])
#loc185 = loc(fused[#loc98, #loc99])
#loc186 = loc(fused[#loc100, #loc101])
#loc187 = loc(fused[#loc102, #loc103])
#loc188 = loc(fused[#loc104, #loc105])
#loc189 = loc(fused[#loc107, #loc106])
#loc190 = loc(fused[#loc108, #loc109])
#loc191 = loc(fused[#loc111, #loc105])
#loc192 = loc(fused[#loc114, #loc112])
#loc193 = loc(fused[#loc117, #loc115])
#loc194 = loc(fused[#loc119, #loc118])
#loc195 = loc(fused[#loc120, #loc121])
#loc196 = loc(fused[#loc122, #loc123])
#loc197 = loc(fused[#loc124, #loc125])
#loc198 = loc(fused[#loc127, #loc126])
#loc199 = loc(fused[#loc128, #loc129])
#loc200 = loc(fused[#loc131, #loc125])
#loc201 = loc(fused[#loc138, #loc137])
