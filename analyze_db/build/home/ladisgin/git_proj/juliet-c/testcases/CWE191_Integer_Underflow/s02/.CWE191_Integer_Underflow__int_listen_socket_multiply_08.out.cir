!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":412:10)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":412:14)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":412:20)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":412:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc644 = loc(fused[#loc182, #loc183])
#loc645 = loc(fused[#loc184, #loc185])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc570)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc571)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc572)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc573)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc574)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc575)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc576)
  cir.func private @close(!s32i) -> !s32i loc(#loc577)
  cir.func private @printIntLine(!s32i) loc(#loc578)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc580)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc583)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc27)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc27)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc586)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc587)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc588)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc589)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc590)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc37)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc588)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc39)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc589)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc44)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc46)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc592)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc53)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc53)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc594)
                cir.if %62 {
                  cir.break loc(#loc55)
                } loc(#loc595)
              } loc(#loc593)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc596)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc597)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc598)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc63)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc63)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc599)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc66)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc66)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc600)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc70)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc70)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc71)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc601)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc603)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc604)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc604)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc82)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc83)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc83)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc605)
                cir.if %66 {
                  cir.break loc(#loc85)
                } loc(#loc606)
              } loc(#loc602)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc89)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc90)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc91)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc91)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc608)
                cir.if %64 {
                  cir.break loc(#loc93)
                } loc(#loc609)
              } loc(#loc607)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc95)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc96)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc97)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc610)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc103)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc612)
                cir.if %62 {
                  cir.break loc(#loc105)
                } loc(#loc613)
              } loc(#loc611)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc108)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc108)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc108)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc108)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc108)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc108)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc108)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc109)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc109)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc614)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc110)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc111)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc615)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc117)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc117)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc617)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc118)
                  cir.yield %64 : !cir.bool loc(#loc118)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc120)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc618)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc118)
                    cir.yield %68 : !cir.bool loc(#loc118)
                  }, false {
                    %68 = cir.const #false loc(#loc118)
                    cir.yield %68 : !cir.bool loc(#loc118)
                  }) : (!cir.bool) -> !cir.bool loc(#loc118)
                  cir.yield %67 : !cir.bool loc(#loc118)
                }) : (!cir.bool) -> !cir.bool loc(#loc118)
                cir.if %63 {
                  cir.break loc(#loc122)
                } loc(#loc619)
              } loc(#loc616)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc123)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc123)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc125)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc620)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc127)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc621)
              cir.yield loc(#loc43)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc130)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc130)
              cir.condition(%15) loc(#loc130)
            } loc(#loc591)
          } loc(#loc591)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc134)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc623)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc137)
            } loc(#loc624)
          } loc(#loc622)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc141)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc626)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc144)
            } loc(#loc627)
          } loc(#loc625)
        } loc(#loc585)
      } loc(#loc584)
    } loc(#loc582)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc629)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc147)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc147)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc632)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc634)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc156)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc157)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc634)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc159)
          } loc(#loc633)
        } loc(#loc631)
      } loc(#loc630)
    } loc(#loc628)
    cir.return loc(#loc20)
  } loc(#loc579)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc636)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc637)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc638)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc639)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc168)
    cir.return loc(#loc161)
  } loc(#loc635)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc640)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc641)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc642)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc179)
  cir.func @main(%arg0: !s32i loc(fused[#loc182, #loc183]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc184, #loc185])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc644)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc645)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc186)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc187)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc188)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc189)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc176)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_listen_socket_multiply_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc646)
    cir.call @CWE191_Integer_Underflow__int_listen_socket_multiply_08_good() : () -> () loc(#loc191)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc177)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc178)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_listen_socket_multiply_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc647)
    cir.call @CWE191_Integer_Underflow__int_listen_socket_multiply_08_bad() : () -> () loc(#loc195)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc179)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc648)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc648)
    cir.return %17 : !s32i loc(#loc648)
  } loc(#loc643)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc202)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc650)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc650)
    cir.return %2 : !s32i loc(#loc650)
  } loc(#loc649)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc205)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc652)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc210)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc653)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc655)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc214)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc214)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc658)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc659)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc660)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc661)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc662)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc224)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc224)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc660)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc226)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc226)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc661)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc231)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc232)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc233)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc234)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc664)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc240)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc240)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc666)
                cir.if %62 {
                  cir.break loc(#loc242)
                } loc(#loc667)
              } loc(#loc665)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc668)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc245)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc669)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc670)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc250)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc250)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc671)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc252)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc252)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc672)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc254)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc254)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc255)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc673)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc260)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc675)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc676)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc676)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc265)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc266)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc266)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc677)
                cir.if %66 {
                  cir.break loc(#loc268)
                } loc(#loc678)
              } loc(#loc674)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc272)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc273)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc274)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc274)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc680)
                cir.if %64 {
                  cir.break loc(#loc276)
                } loc(#loc681)
              } loc(#loc679)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc277)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc278)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc279)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc280)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc682)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc286)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc286)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc684)
                cir.if %62 {
                  cir.break loc(#loc288)
                } loc(#loc685)
              } loc(#loc683)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc289)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc290)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc290)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc291)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc291)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc291)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc291)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc291)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc291)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc291)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc292)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc292)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc686)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc293)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc294)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc294)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc687)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc300)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc300)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc689)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc301)
                  cir.yield %64 : !cir.bool loc(#loc301)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc303)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc690)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc301)
                    cir.yield %68 : !cir.bool loc(#loc301)
                  }, false {
                    %68 = cir.const #false loc(#loc301)
                    cir.yield %68 : !cir.bool loc(#loc301)
                  }) : (!cir.bool) -> !cir.bool loc(#loc301)
                  cir.yield %67 : !cir.bool loc(#loc301)
                }) : (!cir.bool) -> !cir.bool loc(#loc301)
                cir.if %63 {
                  cir.break loc(#loc305)
                } loc(#loc691)
              } loc(#loc688)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc306)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc306)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc307)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc308)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc308)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc692)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc309)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc310)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc693)
              cir.yield loc(#loc230)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc313)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc313)
              cir.condition(%15) loc(#loc313)
            } loc(#loc663)
          } loc(#loc663)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc316)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc317)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc317)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc695)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc319)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc320)
            } loc(#loc696)
          } loc(#loc694)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc323)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc324)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc324)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc698)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc326)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc327)
            } loc(#loc699)
          } loc(#loc697)
        } loc(#loc657)
      } loc(#loc656)
    } loc(#loc654)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc701)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc330)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc330)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc204)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc204)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc335)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc338)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc339)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc704)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc343)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc344)
              %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc344)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc344)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc344)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc345)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc707)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc708)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc710)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc352)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc351)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc352)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc710)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc353)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc354)
              } else {
                %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc205)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc205)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc355)
              } loc(#loc709)
            } loc(#loc706)
          } loc(#loc705)
        } loc(#loc703)
      } loc(#loc702)
    } loc(#loc700)
    cir.return loc(#loc207)
  } loc(#loc651)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc357)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc358)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc712)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc712)
    cir.return %2 : !s32i loc(#loc712)
  } loc(#loc711)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc714)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc364)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc715)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc717)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc368)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc368)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc720)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc721)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc722)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc723)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc724)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc378)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc378)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc722)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc380)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc380)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc723)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc385)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc386)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc387)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc388)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc726)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc393)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc394)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc394)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc728)
                cir.if %62 {
                  cir.break loc(#loc396)
                } loc(#loc729)
              } loc(#loc727)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc730)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc399)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc731)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc732)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc404)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc404)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc733)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc406)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc406)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc734)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc408)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc408)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc409)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc735)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc414)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc737)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc738)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc738)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc419)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc420)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc420)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc739)
                cir.if %66 {
                  cir.break loc(#loc422)
                } loc(#loc740)
              } loc(#loc736)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc425)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc426)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc427)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc428)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc428)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc742)
                cir.if %64 {
                  cir.break loc(#loc430)
                } loc(#loc743)
              } loc(#loc741)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc431)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc432)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc433)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc434)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc744)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc439)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc440)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc440)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc746)
                cir.if %62 {
                  cir.break loc(#loc442)
                } loc(#loc747)
              } loc(#loc745)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc443)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc444)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc444)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc445)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc445)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc445)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc445)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc445)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc445)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc445)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc446)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc446)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc748)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc447)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc448)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc448)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc749)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc453)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc454)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc454)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc751)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc455)
                  cir.yield %64 : !cir.bool loc(#loc455)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc457)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc752)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc455)
                    cir.yield %68 : !cir.bool loc(#loc455)
                  }, false {
                    %68 = cir.const #false loc(#loc455)
                    cir.yield %68 : !cir.bool loc(#loc455)
                  }) : (!cir.bool) -> !cir.bool loc(#loc455)
                  cir.yield %67 : !cir.bool loc(#loc455)
                }) : (!cir.bool) -> !cir.bool loc(#loc455)
                cir.if %63 {
                  cir.break loc(#loc459)
                } loc(#loc753)
              } loc(#loc750)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc460)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc460)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc461)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc462)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc462)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc754)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc463)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc464)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc755)
              cir.yield loc(#loc384)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc467)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc467)
              cir.condition(%15) loc(#loc467)
            } loc(#loc725)
          } loc(#loc725)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc470)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc471)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc471)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc757)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc473)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc474)
            } loc(#loc758)
          } loc(#loc756)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc477)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc478)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc478)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc760)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc480)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc481)
            } loc(#loc761)
          } loc(#loc759)
        } loc(#loc719)
      } loc(#loc718)
    } loc(#loc716)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc763)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc484)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc484)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc489)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc490)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc766)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc494)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc495)
              %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc495)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc495)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc495)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc496)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc769)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc770)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc772)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc503)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc502)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc503)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc772)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc504)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc505)
              } else {
                %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc506)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc506)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc507)
              } loc(#loc771)
            } loc(#loc768)
          } loc(#loc767)
        } loc(#loc765)
      } loc(#loc764)
    } loc(#loc762)
    cir.return loc(#loc361)
  } loc(#loc713)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc774)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc512)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc775)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc777)
      %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc516)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc516)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc521)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc521)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc522)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc523)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc524)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc779)
      } loc(#loc778)
    } loc(#loc776)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc781)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc528)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc528)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc533)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc534)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc784)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc786)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc538)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc537)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc538)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc786)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc539)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc540)
          } loc(#loc785)
        } loc(#loc783)
      } loc(#loc782)
    } loc(#loc780)
    cir.return loc(#loc509)
  } loc(#loc773)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc788)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc545)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc789)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc791)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc549)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc549)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc552)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc553)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc793)
      } loc(#loc792)
    } loc(#loc790)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc795)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc557)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc557)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc562)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc563)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc798)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc800)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc567)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc566)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc567)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc800)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc568)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc569)
          } loc(#loc799)
        } loc(#loc797)
      } loc(#loc796)
    } loc(#loc794)
    cir.return loc(#loc542)
  } loc(#loc787)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":57:1)
#loc20 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":143:1)
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":59:5)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":59:9)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":61:12)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":61:5)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":62:5)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":133:5)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":62:8)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":62:26)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":63:5)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":64:9)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":132:9)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":69:13)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":69:17)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":70:13)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":70:32)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":71:13)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":71:35)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":72:13)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":72:35)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":73:13)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":73:45)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":74:13)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":117:21)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":84:39)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":84:48)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":84:61)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":84:32)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":84:17)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":84:72)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":85:17)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":88:17)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":85:21)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":85:37)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":86:17)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":87:21)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":89:24)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":89:25)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":89:34)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":89:37)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":89:51)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":89:17)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":89:52)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":90:38)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":90:17)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":91:43)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":91:17)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":92:42)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":92:36)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":92:17)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":92:50)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:17)
#loc76 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":96:17)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:26)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:58)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:59)
#loc80 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:68)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:82)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:21)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":93:88)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":94:17)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":95:21)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":97:17)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":100:17)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":97:28)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":97:42)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":97:21)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":97:61)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":98:17)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":99:21)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":101:39)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":101:53)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":101:59)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":101:32)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":101:17)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":101:63)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":102:17)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":105:17)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":102:21)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":102:37)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":103:17)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":104:21)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:35)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:49)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:62)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:80)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:83)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:30)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:17)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":107:84)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":108:17)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":111:17)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":108:21)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":108:35)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":108:48)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":108:51)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":108:65)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":109:17)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":110:21)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":113:43)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":113:29)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":113:17)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":115:29)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":115:24)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":115:17)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":115:40)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":117:20)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":118:13)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":121:13)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":118:17)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":118:33)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":119:13)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":120:30)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":120:17)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":122:13)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":125:13)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":122:17)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":122:33)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":123:13)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":124:30)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":124:17)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":134:5)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":142:5)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":134:8)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":134:26)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":135:5)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":136:9)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":141:9)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":136:12)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":136:19)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":137:9)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":139:13)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":139:33)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":139:26)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":140:26)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":140:13)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":395:1)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":401:1)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":397:5)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":397:14)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":398:5)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":398:14)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":399:5)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":399:14)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":400:5)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":400:14)
#loc170 = loc("/usr/include/stdlib.h":575:1)
#loc171 = loc("/usr/include/stdlib.h":575:41)
#loc172 = loc("/usr/include/time.h":76:1)
#loc173 = loc("/usr/include/time.h":76:38)
#loc174 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc175 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":417:15)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":419:15)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":422:15)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":424:15)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":412:1)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":427:1)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":413:1)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":415:27)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":415:22)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":415:5)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":417:5)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":418:5)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":418:66)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":419:5)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":422:5)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":423:5)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":423:65)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":424:5)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":426:12)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":426:5)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":45:1)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":48:1)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":47:12)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":47:5)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":230:19)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":244:27)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":150:1)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":248:1)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":152:5)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":152:9)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":154:12)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":154:5)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":155:5)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":226:5)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":155:8)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":155:26)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":156:5)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":157:9)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":225:9)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":162:13)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":162:17)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":163:13)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":163:32)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":164:13)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":164:35)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":165:13)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":165:35)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":166:13)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":166:45)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":167:13)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":210:21)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":177:39)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":177:48)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":177:61)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":177:32)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":177:17)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":177:72)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":178:17)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":181:17)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":178:21)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":178:37)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":179:17)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":180:21)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":182:24)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":182:25)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":182:34)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":182:37)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":182:51)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":182:17)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":182:52)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":183:38)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":183:17)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":184:43)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":184:17)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":185:42)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":185:36)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":185:17)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":185:50)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:17)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":189:17)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:26)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:58)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:59)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:68)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:82)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:21)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":186:88)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":187:17)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":188:21)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":190:17)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":193:17)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":190:28)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":190:42)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":190:21)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":190:61)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":191:17)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":192:21)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":194:39)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":194:53)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":194:59)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":194:32)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":194:17)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":194:63)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":195:17)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":198:17)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":195:21)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":195:37)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":196:17)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":197:21)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:35)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:49)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:62)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:80)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:83)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:30)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:17)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":200:84)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":201:17)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":204:17)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":201:21)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":201:35)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":201:48)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":201:51)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":201:65)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":202:17)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":203:21)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":206:43)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":206:29)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":206:17)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":208:29)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":208:24)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":208:17)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":208:40)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":210:20)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":211:13)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":214:13)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":211:17)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":211:33)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":212:13)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":213:30)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":213:17)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":215:13)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":218:13)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":215:17)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":215:33)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":216:13)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":217:30)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":217:17)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":227:5)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":247:5)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":227:8)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":227:27)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":228:5)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":231:5)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":233:5)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":230:9)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":234:9)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":246:9)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":234:12)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":234:19)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":235:9)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":237:13)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":245:13)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":237:17)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":237:25)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":237:33)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":237:34)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":238:13)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":241:13)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":243:13)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":239:17)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":239:37)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":239:30)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":240:30)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":240:17)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":244:17)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":50:1)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":53:1)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":52:12)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":52:5)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":251:1)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":344:1)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":253:5)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":253:9)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":255:12)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":255:5)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":256:5)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":327:5)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":256:8)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":256:26)
#loc370 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":257:5)
#loc371 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":258:9)
#loc372 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":326:9)
#loc373 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":263:13)
#loc374 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":263:17)
#loc375 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":264:13)
#loc376 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":264:32)
#loc377 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":265:13)
#loc378 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":265:35)
#loc379 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":266:13)
#loc380 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":266:35)
#loc381 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":267:13)
#loc382 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":267:45)
#loc383 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":268:13)
#loc384 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":311:21)
#loc385 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":278:39)
#loc386 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":278:48)
#loc387 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":278:61)
#loc388 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":278:32)
#loc389 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":278:17)
#loc390 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":278:72)
#loc391 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":279:17)
#loc392 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":282:17)
#loc393 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":279:21)
#loc394 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":279:37)
#loc395 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":280:17)
#loc396 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":281:21)
#loc397 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":283:24)
#loc398 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":283:25)
#loc399 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":283:34)
#loc400 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":283:37)
#loc401 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":283:51)
#loc402 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":283:17)
#loc403 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":283:52)
#loc404 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":284:38)
#loc405 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":284:17)
#loc406 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":285:43)
#loc407 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":285:17)
#loc408 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":286:42)
#loc409 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":286:36)
#loc410 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":286:17)
#loc411 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":286:50)
#loc412 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:17)
#loc413 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":290:17)
#loc414 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:26)
#loc415 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:58)
#loc416 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:59)
#loc417 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:68)
#loc418 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:82)
#loc419 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:21)
#loc420 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":287:88)
#loc421 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":288:17)
#loc422 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":289:21)
#loc423 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":291:17)
#loc424 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":294:17)
#loc425 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":291:28)
#loc426 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":291:42)
#loc427 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":291:21)
#loc428 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":291:61)
#loc429 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":292:17)
#loc430 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":293:21)
#loc431 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":295:39)
#loc432 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":295:53)
#loc433 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":295:59)
#loc434 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":295:32)
#loc435 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":295:17)
#loc436 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":295:63)
#loc437 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":296:17)
#loc438 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":299:17)
#loc439 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":296:21)
#loc440 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":296:37)
#loc441 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":297:17)
#loc442 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":298:21)
#loc443 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:35)
#loc444 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:49)
#loc445 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:62)
#loc446 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:80)
#loc447 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:83)
#loc448 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:30)
#loc449 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:17)
#loc450 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":301:84)
#loc451 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":302:17)
#loc452 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":305:17)
#loc453 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":302:21)
#loc454 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":302:35)
#loc455 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":302:48)
#loc456 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":302:51)
#loc457 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":302:65)
#loc458 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":303:17)
#loc459 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":304:21)
#loc460 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":307:43)
#loc461 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":307:29)
#loc462 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":307:17)
#loc463 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":309:29)
#loc464 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":309:24)
#loc465 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":309:17)
#loc466 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":309:40)
#loc467 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":311:20)
#loc468 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":312:13)
#loc469 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":315:13)
#loc470 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":312:17)
#loc471 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":312:33)
#loc472 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":313:13)
#loc473 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":314:30)
#loc474 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":314:17)
#loc475 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":316:13)
#loc476 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":319:13)
#loc477 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":316:17)
#loc478 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":316:33)
#loc479 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":317:13)
#loc480 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":318:30)
#loc481 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":318:17)
#loc482 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":328:5)
#loc483 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":343:5)
#loc484 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":328:8)
#loc485 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":328:26)
#loc486 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":329:5)
#loc487 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":330:9)
#loc488 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":342:9)
#loc489 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":330:12)
#loc490 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":330:19)
#loc491 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":331:9)
#loc492 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":333:13)
#loc493 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":341:13)
#loc494 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":333:17)
#loc495 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":333:25)
#loc496 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":333:33)
#loc497 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":333:34)
#loc498 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":334:13)
#loc499 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":337:13)
#loc500 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":339:13)
#loc501 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":335:17)
#loc502 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":335:37)
#loc503 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":335:30)
#loc504 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":336:30)
#loc505 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":336:17)
#loc506 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":340:27)
#loc507 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":340:17)
#loc508 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":347:1)
#loc509 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":371:1)
#loc510 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":349:5)
#loc511 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":349:9)
#loc512 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":351:12)
#loc513 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":351:5)
#loc514 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":352:5)
#loc515 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":361:5)
#loc516 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":352:8)
#loc517 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":352:27)
#loc518 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":353:5)
#loc519 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":356:5)
#loc520 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":358:5)
#loc521 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":355:19)
#loc522 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":355:9)
#loc523 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":360:17)
#loc524 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":360:16)
#loc525 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":360:9)
#loc526 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":362:5)
#loc527 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":370:5)
#loc528 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":362:8)
#loc529 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":362:26)
#loc530 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":363:5)
#loc531 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":364:9)
#loc532 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":369:9)
#loc533 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":364:12)
#loc534 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":364:19)
#loc535 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":365:9)
#loc536 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":367:13)
#loc537 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":367:33)
#loc538 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":367:26)
#loc539 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":368:26)
#loc540 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":368:13)
#loc541 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":374:1)
#loc542 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":393:1)
#loc543 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":376:5)
#loc544 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":376:9)
#loc545 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":378:12)
#loc546 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":378:5)
#loc547 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":379:5)
#loc548 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":383:5)
#loc549 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":379:8)
#loc550 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":379:26)
#loc551 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":380:5)
#loc552 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":382:17)
#loc553 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":382:16)
#loc554 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":382:9)
#loc555 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":384:5)
#loc556 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":392:5)
#loc557 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":384:8)
#loc558 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":384:26)
#loc559 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":385:5)
#loc560 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":386:9)
#loc561 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":391:9)
#loc562 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":386:12)
#loc563 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":386:19)
#loc564 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":387:9)
#loc565 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":389:13)
#loc566 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":389:33)
#loc567 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":389:26)
#loc568 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":390:26)
#loc569 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_08.c":390:13)
#loc570 = loc(fused[#loc1, #loc2])
#loc571 = loc(fused[#loc3, #loc4])
#loc572 = loc(fused[#loc5, #loc6])
#loc573 = loc(fused[#loc7, #loc8])
#loc574 = loc(fused[#loc9, #loc10])
#loc575 = loc(fused[#loc11, #loc12])
#loc576 = loc(fused[#loc13, #loc14])
#loc577 = loc(fused[#loc15, #loc16])
#loc578 = loc(fused[#loc17, #loc18])
#loc579 = loc(fused[#loc19, #loc20])
#loc580 = loc(fused[#loc21, #loc22])
#loc581 = loc(fused[#loc24, #loc23])
#loc582 = loc(fused[#loc25, #loc26])
#loc583 = loc(fused[#loc27, #loc28])
#loc584 = loc(fused[#loc29, #loc26])
#loc585 = loc(fused[#loc30, #loc31])
#loc586 = loc(fused[#loc32, #loc33])
#loc587 = loc(fused[#loc34, #loc35])
#loc588 = loc(fused[#loc36, #loc37])
#loc589 = loc(fused[#loc38, #loc39])
#loc590 = loc(fused[#loc40, #loc41])
#loc591 = loc(fused[#loc42, #loc43])
#loc592 = loc(fused[#loc48, #loc49])
#loc593 = loc(fused[#loc50, #loc51])
#loc594 = loc(fused[#loc52, #loc53])
#loc595 = loc(fused[#loc54, #loc51])
#loc596 = loc(fused[#loc56, #loc57])
#loc597 = loc(fused[#loc59, #loc60])
#loc598 = loc(fused[#loc61, #loc62])
#loc599 = loc(fused[#loc65, #loc63])
#loc600 = loc(fused[#loc69, #loc66])
#loc601 = loc(fused[#loc73, #loc74])
#loc602 = loc(fused[#loc75, #loc76])
#loc603 = loc(fused[#loc78, #loc79])
#loc604 = loc(fused[#loc80, #loc81])
#loc605 = loc(fused[#loc82, #loc83])
#loc606 = loc(fused[#loc84, #loc76])
#loc607 = loc(fused[#loc86, #loc87])
#loc608 = loc(fused[#loc90, #loc91])
#loc609 = loc(fused[#loc92, #loc87])
#loc610 = loc(fused[#loc98, #loc99])
#loc611 = loc(fused[#loc100, #loc101])
#loc612 = loc(fused[#loc102, #loc103])
#loc613 = loc(fused[#loc104, #loc101])
#loc614 = loc(fused[#loc108, #loc109])
#loc615 = loc(fused[#loc112, #loc113])
#loc616 = loc(fused[#loc114, #loc115])
#loc617 = loc(fused[#loc116, #loc117])
#loc618 = loc(fused[#loc119, #loc120])
#loc619 = loc(fused[#loc121, #loc115])
#loc620 = loc(fused[#loc125, #loc123])
#loc621 = loc(fused[#loc128, #loc129])
#loc622 = loc(fused[#loc131, #loc132])
#loc623 = loc(fused[#loc133, #loc134])
#loc624 = loc(fused[#loc135, #loc132])
#loc625 = loc(fused[#loc138, #loc139])
#loc626 = loc(fused[#loc140, #loc141])
#loc627 = loc(fused[#loc142, #loc139])
#loc628 = loc(fused[#loc145, #loc146])
#loc629 = loc(fused[#loc147, #loc148])
#loc630 = loc(fused[#loc149, #loc146])
#loc631 = loc(fused[#loc150, #loc151])
#loc632 = loc(fused[#loc152, #loc153])
#loc633 = loc(fused[#loc154, #loc151])
#loc634 = loc(fused[#loc155, #loc156])
#loc635 = loc(fused[#loc160, #loc161])
#loc636 = loc(fused[#loc162, #loc163])
#loc637 = loc(fused[#loc164, #loc165])
#loc638 = loc(fused[#loc166, #loc167])
#loc639 = loc(fused[#loc168, #loc169])
#loc640 = loc(fused[#loc170, #loc171])
#loc641 = loc(fused[#loc172, #loc173])
#loc642 = loc(fused[#loc174, #loc175])
#loc643 = loc(fused[#loc180, #loc181])
#loc646 = loc(fused[#loc191, #loc192])
#loc647 = loc(fused[#loc195, #loc196])
#loc648 = loc(fused[#loc199, #loc198])
#loc649 = loc(fused[#loc200, #loc201])
#loc650 = loc(fused[#loc203, #loc202])
#loc651 = loc(fused[#loc206, #loc207])
#loc652 = loc(fused[#loc208, #loc209])
#loc653 = loc(fused[#loc211, #loc210])
#loc654 = loc(fused[#loc212, #loc213])
#loc655 = loc(fused[#loc214, #loc215])
#loc656 = loc(fused[#loc216, #loc213])
#loc657 = loc(fused[#loc217, #loc218])
#loc658 = loc(fused[#loc219, #loc220])
#loc659 = loc(fused[#loc221, #loc222])
#loc660 = loc(fused[#loc223, #loc224])
#loc661 = loc(fused[#loc225, #loc226])
#loc662 = loc(fused[#loc227, #loc228])
#loc663 = loc(fused[#loc229, #loc230])
#loc664 = loc(fused[#loc235, #loc236])
#loc665 = loc(fused[#loc237, #loc238])
#loc666 = loc(fused[#loc239, #loc240])
#loc667 = loc(fused[#loc241, #loc238])
#loc668 = loc(fused[#loc243, #loc244])
#loc669 = loc(fused[#loc246, #loc247])
#loc670 = loc(fused[#loc248, #loc249])
#loc671 = loc(fused[#loc251, #loc250])
#loc672 = loc(fused[#loc253, #loc252])
#loc673 = loc(fused[#loc256, #loc257])
#loc674 = loc(fused[#loc258, #loc259])
#loc675 = loc(fused[#loc261, #loc262])
#loc676 = loc(fused[#loc263, #loc264])
#loc677 = loc(fused[#loc265, #loc266])
#loc678 = loc(fused[#loc267, #loc259])
#loc679 = loc(fused[#loc269, #loc270])
#loc680 = loc(fused[#loc273, #loc274])
#loc681 = loc(fused[#loc275, #loc270])
#loc682 = loc(fused[#loc281, #loc282])
#loc683 = loc(fused[#loc283, #loc284])
#loc684 = loc(fused[#loc285, #loc286])
#loc685 = loc(fused[#loc287, #loc284])
#loc686 = loc(fused[#loc291, #loc292])
#loc687 = loc(fused[#loc295, #loc296])
#loc688 = loc(fused[#loc297, #loc298])
#loc689 = loc(fused[#loc299, #loc300])
#loc690 = loc(fused[#loc302, #loc303])
#loc691 = loc(fused[#loc304, #loc298])
#loc692 = loc(fused[#loc308, #loc306])
#loc693 = loc(fused[#loc311, #loc312])
#loc694 = loc(fused[#loc314, #loc315])
#loc695 = loc(fused[#loc316, #loc317])
#loc696 = loc(fused[#loc318, #loc315])
#loc697 = loc(fused[#loc321, #loc322])
#loc698 = loc(fused[#loc323, #loc324])
#loc699 = loc(fused[#loc325, #loc322])
#loc700 = loc(fused[#loc328, #loc329])
#loc701 = loc(fused[#loc330, #loc331])
#loc702 = loc(fused[#loc332, #loc333, #loc334, #loc329])
#loc703 = loc(fused[#loc336, #loc337])
#loc704 = loc(fused[#loc338, #loc339])
#loc705 = loc(fused[#loc340, #loc337])
#loc706 = loc(fused[#loc341, #loc342])
#loc707 = loc(fused[#loc344, #loc345])
#loc708 = loc(fused[#loc343, #loc346])
#loc709 = loc(fused[#loc347, #loc348, #loc349, #loc342])
#loc710 = loc(fused[#loc350, #loc351])
#loc711 = loc(fused[#loc356, #loc357])
#loc712 = loc(fused[#loc359, #loc358])
#loc713 = loc(fused[#loc360, #loc361])
#loc714 = loc(fused[#loc362, #loc363])
#loc715 = loc(fused[#loc365, #loc364])
#loc716 = loc(fused[#loc366, #loc367])
#loc717 = loc(fused[#loc368, #loc369])
#loc718 = loc(fused[#loc370, #loc367])
#loc719 = loc(fused[#loc371, #loc372])
#loc720 = loc(fused[#loc373, #loc374])
#loc721 = loc(fused[#loc375, #loc376])
#loc722 = loc(fused[#loc377, #loc378])
#loc723 = loc(fused[#loc379, #loc380])
#loc724 = loc(fused[#loc381, #loc382])
#loc725 = loc(fused[#loc383, #loc384])
#loc726 = loc(fused[#loc389, #loc390])
#loc727 = loc(fused[#loc391, #loc392])
#loc728 = loc(fused[#loc393, #loc394])
#loc729 = loc(fused[#loc395, #loc392])
#loc730 = loc(fused[#loc397, #loc398])
#loc731 = loc(fused[#loc400, #loc401])
#loc732 = loc(fused[#loc402, #loc403])
#loc733 = loc(fused[#loc405, #loc404])
#loc734 = loc(fused[#loc407, #loc406])
#loc735 = loc(fused[#loc410, #loc411])
#loc736 = loc(fused[#loc412, #loc413])
#loc737 = loc(fused[#loc415, #loc416])
#loc738 = loc(fused[#loc417, #loc418])
#loc739 = loc(fused[#loc419, #loc420])
#loc740 = loc(fused[#loc421, #loc413])
#loc741 = loc(fused[#loc423, #loc424])
#loc742 = loc(fused[#loc427, #loc428])
#loc743 = loc(fused[#loc429, #loc424])
#loc744 = loc(fused[#loc435, #loc436])
#loc745 = loc(fused[#loc437, #loc438])
#loc746 = loc(fused[#loc439, #loc440])
#loc747 = loc(fused[#loc441, #loc438])
#loc748 = loc(fused[#loc445, #loc446])
#loc749 = loc(fused[#loc449, #loc450])
#loc750 = loc(fused[#loc451, #loc452])
#loc751 = loc(fused[#loc453, #loc454])
#loc752 = loc(fused[#loc456, #loc457])
#loc753 = loc(fused[#loc458, #loc452])
#loc754 = loc(fused[#loc462, #loc460])
#loc755 = loc(fused[#loc465, #loc466])
#loc756 = loc(fused[#loc468, #loc469])
#loc757 = loc(fused[#loc470, #loc471])
#loc758 = loc(fused[#loc472, #loc469])
#loc759 = loc(fused[#loc475, #loc476])
#loc760 = loc(fused[#loc477, #loc478])
#loc761 = loc(fused[#loc479, #loc476])
#loc762 = loc(fused[#loc482, #loc483])
#loc763 = loc(fused[#loc484, #loc485])
#loc764 = loc(fused[#loc486, #loc483])
#loc765 = loc(fused[#loc487, #loc488])
#loc766 = loc(fused[#loc489, #loc490])
#loc767 = loc(fused[#loc491, #loc488])
#loc768 = loc(fused[#loc492, #loc493])
#loc769 = loc(fused[#loc495, #loc496])
#loc770 = loc(fused[#loc494, #loc497])
#loc771 = loc(fused[#loc498, #loc499, #loc500, #loc493])
#loc772 = loc(fused[#loc501, #loc502])
#loc773 = loc(fused[#loc508, #loc509])
#loc774 = loc(fused[#loc510, #loc511])
#loc775 = loc(fused[#loc513, #loc512])
#loc776 = loc(fused[#loc514, #loc515])
#loc777 = loc(fused[#loc516, #loc517])
#loc778 = loc(fused[#loc518, #loc519, #loc520, #loc515])
#loc779 = loc(fused[#loc525, #loc523])
#loc780 = loc(fused[#loc526, #loc527])
#loc781 = loc(fused[#loc528, #loc529])
#loc782 = loc(fused[#loc530, #loc527])
#loc783 = loc(fused[#loc531, #loc532])
#loc784 = loc(fused[#loc533, #loc534])
#loc785 = loc(fused[#loc535, #loc532])
#loc786 = loc(fused[#loc536, #loc537])
#loc787 = loc(fused[#loc541, #loc542])
#loc788 = loc(fused[#loc543, #loc544])
#loc789 = loc(fused[#loc546, #loc545])
#loc790 = loc(fused[#loc547, #loc548])
#loc791 = loc(fused[#loc549, #loc550])
#loc792 = loc(fused[#loc551, #loc548])
#loc793 = loc(fused[#loc554, #loc552])
#loc794 = loc(fused[#loc555, #loc556])
#loc795 = loc(fused[#loc557, #loc558])
#loc796 = loc(fused[#loc559, #loc556])
#loc797 = loc(fused[#loc560, #loc561])
#loc798 = loc(fused[#loc562, #loc563])
#loc799 = loc(fused[#loc564, #loc561])
#loc800 = loc(fused[#loc565, #loc566])
