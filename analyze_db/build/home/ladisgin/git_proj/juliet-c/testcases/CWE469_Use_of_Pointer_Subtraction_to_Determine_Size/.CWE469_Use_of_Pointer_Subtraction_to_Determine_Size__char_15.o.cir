!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good2.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc125)
  cir.global "private" constant cir_private @__const.good1.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc126)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string2 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc127)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc128)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc130)
  cir.func private @printUnsignedLine(!u32i) loc(#loc131)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc128)
    %1 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string2"] {alignment = 1 : i64} loc(#loc127)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc134)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc26)
    cir.br ^bb2 loc(#loc24)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc24)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc128)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc128)
    %6 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string2 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc127)
    cir.copy %6 to %1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc127)
    %7 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc30)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc31)
    %9 = cir.const #cir.int<47> : !s32i loc(#loc32)
    %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb6 loc(#loc139)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc141)
  ^bb7:  // pred: ^bb6
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc41)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc43)
    %19 = cir.ptr_diff(%17, %18) : !cir.ptr<!s8i> -> !s64i loc(#loc142)
    %20 = cir.cast(integral, %19 : !s64i), !u64i loc(#loc142)
    cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc143)
    %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %22 = cir.cast(integral, %21 : !u64i), !u32i loc(#loc46)
    cir.call @printUnsignedLine(%22) : (!u32i) -> () loc(#loc47)
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc48)
  ^bb11:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc17)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb12 loc(#loc50)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc25)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc19)
  } loc(#loc133)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc144)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc65)
    cir.br ^bb2 loc(#loc63)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc63)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb12 loc(#loc69)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc151)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @__const.good1.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc126)
    cir.copy %6 to %0 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc126)
    %7 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc72)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc73)
    %9 = cir.const #cir.int<47> : !s32i loc(#loc74)
    %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb7 loc(#loc153)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
    cir.brcond %14 ^bb8, ^bb9 loc(#loc155)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc82)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc83)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc78)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc85)
    %19 = cir.ptr_diff(%17, %18) : !cir.ptr<!s8i> -> !s64i loc(#loc156)
    %20 = cir.cast(integral, %19 : !s64i), !u64i loc(#loc156)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %22 = cir.cast(integral, %21 : !u64i), !u32i loc(#loc88)
    cir.call @printUnsignedLine(%22) : (!u32i) -> () loc(#loc89)
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc90)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc64)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc58)
  } loc(#loc147)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc99)
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc97)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @__const.good2.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc125)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc125)
    %5 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc103)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc104)
    %7 = cir.const #cir.int<47> : !s32i loc(#loc105)
    %8 = cir.call @strchr(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.br ^bb6 loc(#loc164)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc166)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc114)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc109)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc116)
    %17 = cir.ptr_diff(%15, %16) : !cir.ptr<!s8i> -> !s64i loc(#loc167)
    %18 = cir.cast(integral, %17 : !s64i), !u64i loc(#loc167)
    cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc119)
    %20 = cir.cast(integral, %19 : !u64i), !u32i loc(#loc119)
    cir.call @printUnsignedLine(%20) : (!u32i) -> () loc(#loc120)
    cir.br ^bb10 loc(#loc102)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc121)
  ^bb11:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb12 loc(#loc124)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc98)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc92)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":0:0)
#loc1 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":91:9)
#loc2 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":91:26)
#loc3 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":67:9)
#loc4 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":67:26)
#loc5 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":31:9)
#loc6 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":31:26)
#loc7 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":30:9)
#loc8 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":30:26)
#loc9 = loc("/usr/include/string.h":246:1)
#loc10 = loc("/usr/include/string.h":247:33)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":34:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":34:47)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":47:19)
#loc18 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":24:1)
#loc19 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":50:1)
#loc20 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":32:9)
#loc21 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":32:16)
#loc22 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":33:9)
#loc23 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":33:16)
#loc24 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":26:5)
#loc25 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":49:5)
#loc26 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":26:12)
#loc27 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":28:5)
#loc28 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":29:5)
#loc29 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":43:5)
#loc30 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:26)
#loc31 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:33)
#loc32 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:42)
#loc33 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:9)
#loc34 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:45)
#loc35 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:9)
#loc36 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":38:9)
#loc37 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:13)
#loc38 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:31)
#loc39 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":36:9)
#loc40 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":37:13)
#loc41 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":37:18)
#loc42 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:42)
#loc43 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:59)
#loc44 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:9)
#loc45 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:66)
#loc46 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":42:27)
#loc47 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":42:9)
#loc48 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":44:5)
#loc49 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":47:9)
#loc50 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":48:9)
#loc51 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":112:1)
#loc52 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":116:1)
#loc53 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":114:5)
#loc54 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":114:11)
#loc55 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":115:5)
#loc56 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":115:11)
#loc57 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":57:1)
#loc58 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":82:1)
#loc59 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":68:9)
#loc60 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":68:16)
#loc61 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":69:9)
#loc62 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":69:16)
#loc63 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":59:5)
#loc64 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":81:5)
#loc65 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":59:12)
#loc66 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":61:5)
#loc67 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":63:19)
#loc68 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":63:9)
#loc69 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":64:9)
#loc70 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":66:5)
#loc71 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":79:5)
#loc72 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:26)
#loc73 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:33)
#loc74 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:42)
#loc75 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:9)
#loc76 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:45)
#loc77 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:9)
#loc78 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":74:9)
#loc79 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:13)
#loc80 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:31)
#loc81 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":72:9)
#loc82 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":73:13)
#loc83 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":73:18)
#loc84 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:42)
#loc85 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:59)
#loc86 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:9)
#loc87 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:66)
#loc88 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":78:27)
#loc89 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":78:9)
#loc90 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":80:5)
#loc91 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":85:1)
#loc92 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":110:1)
#loc93 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":92:9)
#loc94 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":92:16)
#loc95 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":93:9)
#loc96 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":93:16)
#loc97 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":87:5)
#loc98 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":109:5)
#loc99 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":87:12)
#loc100 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":89:5)
#loc101 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":90:5)
#loc102 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":103:5)
#loc103 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:26)
#loc104 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:33)
#loc105 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:42)
#loc106 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:9)
#loc107 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:45)
#loc108 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:9)
#loc109 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":98:9)
#loc110 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:13)
#loc111 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:31)
#loc112 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":96:9)
#loc113 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":97:13)
#loc114 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":97:18)
#loc115 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:42)
#loc116 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:59)
#loc117 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:9)
#loc118 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:66)
#loc119 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":102:27)
#loc120 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":102:9)
#loc121 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":104:5)
#loc122 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":107:19)
#loc123 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":107:9)
#loc124 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":108:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc16])
#loc133 = loc(fused[#loc18, #loc19])
#loc134 = loc(fused[#loc20, #loc21])
#loc135 = loc(fused[#loc22, #loc23])
#loc136 = loc(fused[#loc24, #loc25])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc33, #loc34])
#loc139 = loc(fused[#loc35, #loc36])
#loc140 = loc(fused[#loc37, #loc38])
#loc141 = loc(fused[#loc39, #loc36])
#loc142 = loc(fused[#loc42, #loc43])
#loc143 = loc(fused[#loc44, #loc45])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc59, #loc60])
#loc149 = loc(fused[#loc61, #loc62])
#loc150 = loc(fused[#loc63, #loc64])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc75, #loc76])
#loc153 = loc(fused[#loc77, #loc78])
#loc154 = loc(fused[#loc79, #loc80])
#loc155 = loc(fused[#loc81, #loc78])
#loc156 = loc(fused[#loc84, #loc85])
#loc157 = loc(fused[#loc86, #loc87])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc97, #loc98])
#loc162 = loc(fused[#loc101, #loc102])
#loc163 = loc(fused[#loc106, #loc107])
#loc164 = loc(fused[#loc108, #loc109])
#loc165 = loc(fused[#loc110, #loc111])
#loc166 = loc(fused[#loc112, #loc109])
#loc167 = loc(fused[#loc115, #loc116])
#loc168 = loc(fused[#loc117, #loc118])
