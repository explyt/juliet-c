!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc380)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc381)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc382)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc383)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc384)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc385)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc386)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc387)
  cir.func private @close(!s32i) -> !s32i loc(#loc388)
  cir.global external dsolocal @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc389)
  cir.func no_proto private @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_badSink(...) loc(#loc390)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc392)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc393)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc393)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc393)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc394)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc396)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc397)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc398)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc399)
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc400)
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc401)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc40)
      cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc399)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc42)
      cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc400)
      %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc45)
      cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc401)
      cir.scope {
        cir.do {
          cir.scope {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc51)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc52)
            %23 = cir.const #cir.int<6> : !s32i loc(#loc53)
            %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
            cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc404)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc59)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc60)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc406)
              cir.if %81 {
                cir.break loc(#loc62)
              } loc(#loc407)
            } loc(#loc405)
            %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc408)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc65)
            %27 = cir.const #cir.int<16> : !u64i loc(#loc409)
            cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc410)
            %28 = cir.const #cir.int<2> : !s32i loc(#loc70)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc70)
            %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc411)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc73)
            %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc73)
            %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc412)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc77)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc77)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
            %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc413)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc84)
              %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc415)
              %80 = cir.const #cir.int<16> : !u64i loc(#loc416)
              %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc416)
              %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc89)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc90)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc417)
              cir.if %85 {
                cir.break loc(#loc92)
              } loc(#loc418)
            } loc(#loc414)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %79 = cir.const #cir.int<5> : !s32i loc(#loc96)
              %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc97)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc98)
              %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc98)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc420)
              cir.if %83 {
                cir.break loc(#loc100)
              } loc(#loc421)
            } loc(#loc419)
            %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc102)
            %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc103)
            %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc104)
            cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc422)
            cir.scope {
              %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc110)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc110)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc424)
              cir.if %81 {
                cir.break loc(#loc112)
              } loc(#loc425)
            } loc(#loc423)
            %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
            %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc115)
            %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc116)
            %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc426)
            %48 = cir.const #cir.int<1> : !u64i loc(#loc427)
            %49 = cir.const #cir.int<100> : !s32i loc(#loc121)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc121)
            %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc122)
            %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc428)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc123)
            %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc123)
            %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc429)
            %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc430)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc125)
            %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc126)
            %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc126)
            cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc431)
            cir.scope {
              %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc132)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc132)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc433)
              %82 = cir.ternary(%81, true {
                %83 = cir.const #true loc(#loc133)
                cir.yield %83 : !cir.bool loc(#loc133)
              }, false {
                %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                %84 = cir.const #cir.int<0> : !s32i loc(#loc135)
                %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc434)
                %86 = cir.ternary(%85, true {
                  %87 = cir.const #true loc(#loc133)
                  cir.yield %87 : !cir.bool loc(#loc133)
                }, false {
                  %87 = cir.const #false loc(#loc133)
                  cir.yield %87 : !cir.bool loc(#loc133)
                }) : (!cir.bool) -> !cir.bool loc(#loc133)
                cir.yield %86 : !cir.bool loc(#loc133)
              }) : (!cir.bool) -> !cir.bool loc(#loc133)
              cir.if %82 {
                cir.break loc(#loc137)
              } loc(#loc435)
            } loc(#loc432)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc138)
            %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc138)
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
            %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc140)
            %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc141)
            %66 = cir.const #cir.int<1> : !u64i loc(#loc436)
            %67 = cir.binop(div, %65, %66) : !u64i loc(#loc437)
            %68 = cir.binop(add, %63, %67) : !u64i loc(#loc438)
            %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc144)
            cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc439)
            %70 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc145)
            %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            %72 = cir.const #cir.int<13> : !s32i loc(#loc147)
            %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc145)
            cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc440)
            cir.scope {
              %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
              %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc152)
              cir.if %79 {
                %80 = cir.const #cir.int<0> : !s32i loc(#loc154)
                %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc154)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc443)
              } loc(#loc442)
            } loc(#loc441)
            %74 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc157)
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %76 = cir.const #cir.int<10> : !s32i loc(#loc159)
            %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc157)
            cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc444)
            cir.scope {
              %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
              %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
              cir.if %79 {
                %80 = cir.const #cir.int<0> : !s32i loc(#loc166)
                %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc166)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc447)
              } loc(#loc446)
            } loc(#loc445)
          } loc(#loc403)
          cir.yield loc(#loc48)
        } while {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc169)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc169)
          cir.condition(%22) loc(#loc169)
        } loc(#loc402)
      } loc(#loc402)
      cir.scope {
        %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc172)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc173)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc449)
        cir.if %24 {
          %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc450)
      } loc(#loc448)
      cir.scope {
        %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc180)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc180)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc452)
        cir.if %24 {
          %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc182)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc183)
        } loc(#loc453)
      } loc(#loc451)
    } loc(#loc395)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %5 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc389)
    cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc454)
    %6 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc455)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc455)
    cir.call %7() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc186)
    cir.return loc(#loc24)
  } loc(#loc391)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc457)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc190)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc458)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc192)
    cir.return loc(#loc189)
  } loc(#loc456)
  cir.global external dsolocal @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc459)
  cir.global external dsolocal @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodB2GData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc460)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc461)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc200)
  cir.func no_proto private @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_goodG2BSink(...) loc(#loc462)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc464)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc465)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc465)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc465)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc209)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc466)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc211)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc200)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc200)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc211)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %10 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc459)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc467)
    %11 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc468)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc468)
    cir.call %12() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc215)
    cir.return loc(#loc204)
  } loc(#loc463)
  cir.func no_proto private @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_goodB2GSink(...) loc(#loc469)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc471)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc472)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc472)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc472)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc225)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc473)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc475)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc476)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc477)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc478)
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc479)
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc480)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc236)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc236)
      cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc478)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc238)
      %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc238)
      cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc479)
      %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc241)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
      %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc241)
      cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc480)
      cir.scope {
        cir.do {
          cir.scope {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc247)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc248)
            %23 = cir.const #cir.int<6> : !s32i loc(#loc249)
            %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc250)
            cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc483)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc255)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc256)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc256)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc485)
              cir.if %81 {
                cir.break loc(#loc258)
              } loc(#loc486)
            } loc(#loc484)
            %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc487)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc261)
            %27 = cir.const #cir.int<16> : !u64i loc(#loc488)
            cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc489)
            %28 = cir.const #cir.int<2> : !s32i loc(#loc266)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc266)
            %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc490)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc268)
            %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc268)
            %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc491)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc270)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc270)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc271)
            %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc492)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc276)
              %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc494)
              %80 = cir.const #cir.int<16> : !u64i loc(#loc495)
              %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc495)
              %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc281)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc282)
              %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc282)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc496)
              cir.if %85 {
                cir.break loc(#loc284)
              } loc(#loc497)
            } loc(#loc493)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc287)
              %79 = cir.const #cir.int<5> : !s32i loc(#loc288)
              %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc289)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc290)
              %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc290)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc499)
              cir.if %83 {
                cir.break loc(#loc292)
              } loc(#loc500)
            } loc(#loc498)
            %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc293)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc294)
            %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc295)
            %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc296)
            cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc501)
            cir.scope {
              %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc301)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc302)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc302)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc503)
              cir.if %81 {
                cir.break loc(#loc304)
              } loc(#loc504)
            } loc(#loc502)
            %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc305)
            %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc306)
            %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc307)
            %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc308)
            %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc505)
            %48 = cir.const #cir.int<1> : !u64i loc(#loc506)
            %49 = cir.const #cir.int<100> : !s32i loc(#loc313)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc313)
            %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc314)
            %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc507)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc315)
            %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc315)
            %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc508)
            %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc509)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc317)
            %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc318)
            %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc318)
            cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc510)
            cir.scope {
              %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc323)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc324)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc324)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc512)
              %82 = cir.ternary(%81, true {
                %83 = cir.const #true loc(#loc325)
                cir.yield %83 : !cir.bool loc(#loc325)
              }, false {
                %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc326)
                %84 = cir.const #cir.int<0> : !s32i loc(#loc327)
                %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc513)
                %86 = cir.ternary(%85, true {
                  %87 = cir.const #true loc(#loc325)
                  cir.yield %87 : !cir.bool loc(#loc325)
                }, false {
                  %87 = cir.const #false loc(#loc325)
                  cir.yield %87 : !cir.bool loc(#loc325)
                }) : (!cir.bool) -> !cir.bool loc(#loc325)
                cir.yield %86 : !cir.bool loc(#loc325)
              }) : (!cir.bool) -> !cir.bool loc(#loc325)
              cir.if %82 {
                cir.break loc(#loc329)
              } loc(#loc514)
            } loc(#loc511)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc330)
            %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc330)
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc331)
            %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc332)
            %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc333)
            %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc333)
            %66 = cir.const #cir.int<1> : !u64i loc(#loc515)
            %67 = cir.binop(div, %65, %66) : !u64i loc(#loc516)
            %68 = cir.binop(add, %63, %67) : !u64i loc(#loc517)
            %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc336)
            cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc518)
            %70 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc337)
            %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc338)
            %72 = cir.const #cir.int<13> : !s32i loc(#loc339)
            %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc337)
            cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc519)
            cir.scope {
              %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc344)
              %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc344)
              cir.if %79 {
                %80 = cir.const #cir.int<0> : !s32i loc(#loc346)
                %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc346)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc347)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc522)
              } loc(#loc521)
            } loc(#loc520)
            %74 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc349)
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc350)
            %76 = cir.const #cir.int<10> : !s32i loc(#loc351)
            %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc349)
            cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc523)
            cir.scope {
              %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc356)
              %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc356)
              cir.if %79 {
                %80 = cir.const #cir.int<0> : !s32i loc(#loc358)
                %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc358)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc359)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc526)
              } loc(#loc525)
            } loc(#loc524)
          } loc(#loc482)
          cir.yield loc(#loc244)
        } while {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc361)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc361)
          cir.condition(%22) loc(#loc361)
        } loc(#loc481)
      } loc(#loc481)
      cir.scope {
        %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc364)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc365)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc365)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc528)
        cir.if %24 {
          %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc367)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc368)
        } loc(#loc529)
      } loc(#loc527)
      cir.scope {
        %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc371)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc372)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc372)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc531)
        cir.if %24 {
          %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc374)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc375)
        } loc(#loc532)
      } loc(#loc530)
    } loc(#loc474)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc376)
    %5 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodB2GData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc460)
    cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc533)
    %6 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_goodB2GSink : !cir.ptr<!cir.func<(...)>> loc(#loc534)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc534)
    cir.call %7() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc378)
    cir.return loc(#loc220)
  } loc(#loc470)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":246:1)
#loc16 = loc("/usr/include/string.h":247:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":47:1)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":47:8)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":54:1)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":54:70)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":56:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":142:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":58:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":58:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":59:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":59:28)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":60:12)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":60:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":61:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":139:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":66:9)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":66:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":67:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":67:28)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":68:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":68:15)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":69:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":69:31)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":70:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":70:31)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":71:9)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":71:37)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":71:26)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":71:33)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":72:9)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":124:17)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":73:9)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":123:9)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":82:35)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":82:44)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":82:57)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":82:28)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":82:13)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":82:68)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":83:13)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":86:13)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":83:17)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":83:33)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":84:13)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":85:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":87:20)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":87:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":87:30)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":87:33)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":87:47)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":87:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":87:48)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":88:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":88:13)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":89:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":89:13)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":90:38)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":90:32)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":90:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":90:46)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:13)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":94:13)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:22)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:54)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:55)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:64)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:78)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:17)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":91:84)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":92:13)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":93:17)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":95:13)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":98:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":95:24)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":95:38)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":95:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":95:57)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":96:13)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":97:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":99:35)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":99:49)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":99:55)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":99:28)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":99:13)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":99:59)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":100:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":103:13)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":100:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":100:33)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":101:13)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":102:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:31)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:54)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:61)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:59)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:45)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:68)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:71)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:82)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:87)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:93)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:103)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:104)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:107)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:26)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:13)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":105:108)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":106:13)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":109:13)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":106:17)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":106:31)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":106:44)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":106:47)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":106:61)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":107:13)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":108:17)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":111:57)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":111:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":111:18)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":111:28)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":111:41)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":111:52)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":111:53)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":113:23)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":113:30)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":113:36)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":113:13)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":113:40)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":114:13)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":117:13)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":114:17)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":115:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":116:28)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":116:18)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":116:17)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":118:23)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":118:30)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":118:36)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":118:13)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":118:40)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":119:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":122:13)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":119:17)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":120:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":121:28)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":121:18)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":121:17)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":124:16)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":125:9)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":128:9)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":125:13)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":125:29)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":126:9)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":127:26)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":127:13)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":129:9)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":132:9)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":129:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":129:29)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":130:9)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":131:26)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":131:13)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":140:70)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":140:5)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":141:5)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":141:69)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":253:1)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":257:1)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":255:5)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":255:13)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":256:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":256:13)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":48:1)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":48:8)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":49:1)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":49:8)
#loc198 = loc("/usr/include/string.h":141:1)
#loc199 = loc("/usr/include/string.h":142:14)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":159:18)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":149:1)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":149:74)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":153:1)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":162:1)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":155:5)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":155:12)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":156:5)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":156:28)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":157:12)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":157:5)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":159:5)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":159:12)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":160:74)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":160:5)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":161:5)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":161:73)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":150:1)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":150:74)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":165:1)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":251:1)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":167:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":167:12)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":168:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":168:28)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":169:12)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":169:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":170:5)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":248:5)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":175:9)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":175:13)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":176:9)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":176:28)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":177:9)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":177:15)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":178:9)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":178:31)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":179:9)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":179:31)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":180:9)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":180:37)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":180:26)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":180:33)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":181:9)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":233:17)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":182:9)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":232:9)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":191:35)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":191:44)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":191:57)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":191:28)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":191:13)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":191:68)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":192:13)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":195:13)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":192:17)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":192:33)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":193:13)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":194:17)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":196:20)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":196:21)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":196:30)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":196:33)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":196:47)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":196:13)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":196:48)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":197:34)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":197:13)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":198:39)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":198:13)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":199:38)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":199:32)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":199:13)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":199:46)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":203:13)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:22)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:54)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:55)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:64)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:78)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:17)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":200:84)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":201:13)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":202:17)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":204:13)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":207:13)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":204:24)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":204:38)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":204:17)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":204:57)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":205:13)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":206:17)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":208:35)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":208:49)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":208:55)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":208:28)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":208:13)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":208:59)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":209:13)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":212:13)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":209:17)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":209:33)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":210:13)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":211:17)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:31)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:54)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:61)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:59)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:45)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:68)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:71)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:82)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:87)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:93)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:103)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:104)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:107)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:26)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:13)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":214:108)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":215:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":218:13)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":215:17)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":215:31)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":215:44)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":215:47)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":215:61)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":216:13)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":217:17)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":220:57)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":220:13)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":220:18)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":220:28)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":220:41)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":220:52)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":220:53)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":222:23)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":222:30)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":222:36)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":222:13)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":222:40)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":223:13)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":226:13)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":223:17)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":224:13)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":225:28)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":225:18)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":225:17)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":227:23)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":227:30)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":227:36)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":227:13)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":227:40)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":228:13)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":231:13)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":228:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":229:13)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":230:28)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":230:18)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":230:17)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":233:16)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":234:9)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":237:9)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":234:13)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":234:29)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":235:9)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":236:26)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":236:13)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":238:9)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":241:9)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":238:13)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":238:29)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":239:9)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":240:26)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":240:13)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":249:74)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":249:5)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":250:5)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68a.c":250:73)
#loc380 = loc(fused[#loc1, #loc2])
#loc381 = loc(fused[#loc3, #loc4])
#loc382 = loc(fused[#loc5, #loc6])
#loc383 = loc(fused[#loc7, #loc8])
#loc384 = loc(fused[#loc9, #loc10])
#loc385 = loc(fused[#loc11, #loc12])
#loc386 = loc(fused[#loc13, #loc14])
#loc387 = loc(fused[#loc15, #loc16])
#loc388 = loc(fused[#loc17, #loc18])
#loc389 = loc(fused[#loc19, #loc20])
#loc390 = loc(fused[#loc21, #loc22])
#loc391 = loc(fused[#loc23, #loc24])
#loc392 = loc(fused[#loc25, #loc26])
#loc393 = loc(fused[#loc27, #loc28])
#loc394 = loc(fused[#loc30, #loc29])
#loc395 = loc(fused[#loc31, #loc32])
#loc396 = loc(fused[#loc33, #loc34])
#loc397 = loc(fused[#loc35, #loc36])
#loc398 = loc(fused[#loc37, #loc38])
#loc399 = loc(fused[#loc39, #loc40])
#loc400 = loc(fused[#loc41, #loc42])
#loc401 = loc(fused[#loc43, #loc44])
#loc402 = loc(fused[#loc47, #loc48])
#loc403 = loc(fused[#loc49, #loc50])
#loc404 = loc(fused[#loc55, #loc56])
#loc405 = loc(fused[#loc57, #loc58])
#loc406 = loc(fused[#loc59, #loc60])
#loc407 = loc(fused[#loc61, #loc58])
#loc408 = loc(fused[#loc63, #loc64])
#loc409 = loc(fused[#loc66, #loc67])
#loc410 = loc(fused[#loc68, #loc69])
#loc411 = loc(fused[#loc72, #loc70])
#loc412 = loc(fused[#loc76, #loc73])
#loc413 = loc(fused[#loc80, #loc81])
#loc414 = loc(fused[#loc82, #loc83])
#loc415 = loc(fused[#loc85, #loc86])
#loc416 = loc(fused[#loc87, #loc88])
#loc417 = loc(fused[#loc89, #loc90])
#loc418 = loc(fused[#loc91, #loc83])
#loc419 = loc(fused[#loc93, #loc94])
#loc420 = loc(fused[#loc97, #loc98])
#loc421 = loc(fused[#loc99, #loc94])
#loc422 = loc(fused[#loc105, #loc106])
#loc423 = loc(fused[#loc107, #loc108])
#loc424 = loc(fused[#loc109, #loc110])
#loc425 = loc(fused[#loc111, #loc108])
#loc426 = loc(fused[#loc117, #loc118])
#loc427 = loc(fused[#loc119, #loc120])
#loc428 = loc(fused[#loc121, #loc122])
#loc429 = loc(fused[#loc121, #loc123])
#loc430 = loc(fused[#loc119, #loc124])
#loc431 = loc(fused[#loc127, #loc128])
#loc432 = loc(fused[#loc129, #loc130])
#loc433 = loc(fused[#loc131, #loc132])
#loc434 = loc(fused[#loc134, #loc135])
#loc435 = loc(fused[#loc136, #loc130])
#loc436 = loc(fused[#loc142, #loc143])
#loc437 = loc(fused[#loc141, #loc143])
#loc438 = loc(fused[#loc140, #loc143])
#loc439 = loc(fused[#loc139, #loc138])
#loc440 = loc(fused[#loc148, #loc149])
#loc441 = loc(fused[#loc150, #loc151])
#loc442 = loc(fused[#loc153, #loc151])
#loc443 = loc(fused[#loc156, #loc154])
#loc444 = loc(fused[#loc160, #loc161])
#loc445 = loc(fused[#loc162, #loc163])
#loc446 = loc(fused[#loc165, #loc163])
#loc447 = loc(fused[#loc168, #loc166])
#loc448 = loc(fused[#loc170, #loc171])
#loc449 = loc(fused[#loc172, #loc173])
#loc450 = loc(fused[#loc174, #loc171])
#loc451 = loc(fused[#loc177, #loc178])
#loc452 = loc(fused[#loc179, #loc180])
#loc453 = loc(fused[#loc181, #loc178])
#loc454 = loc(fused[#loc185, #loc184])
#loc455 = loc(fused[#loc186, #loc187])
#loc456 = loc(fused[#loc188, #loc189])
#loc457 = loc(fused[#loc190, #loc191])
#loc458 = loc(fused[#loc192, #loc193])
#loc459 = loc(fused[#loc194, #loc195])
#loc460 = loc(fused[#loc196, #loc197])
#loc461 = loc(fused[#loc198, #loc199])
#loc462 = loc(fused[#loc201, #loc202])
#loc463 = loc(fused[#loc203, #loc204])
#loc464 = loc(fused[#loc205, #loc206])
#loc465 = loc(fused[#loc207, #loc208])
#loc466 = loc(fused[#loc210, #loc209])
#loc467 = loc(fused[#loc214, #loc213])
#loc468 = loc(fused[#loc215, #loc216])
#loc469 = loc(fused[#loc217, #loc218])
#loc470 = loc(fused[#loc219, #loc220])
#loc471 = loc(fused[#loc221, #loc222])
#loc472 = loc(fused[#loc223, #loc224])
#loc473 = loc(fused[#loc226, #loc225])
#loc474 = loc(fused[#loc227, #loc228])
#loc475 = loc(fused[#loc229, #loc230])
#loc476 = loc(fused[#loc231, #loc232])
#loc477 = loc(fused[#loc233, #loc234])
#loc478 = loc(fused[#loc235, #loc236])
#loc479 = loc(fused[#loc237, #loc238])
#loc480 = loc(fused[#loc239, #loc240])
#loc481 = loc(fused[#loc243, #loc244])
#loc482 = loc(fused[#loc245, #loc246])
#loc483 = loc(fused[#loc251, #loc252])
#loc484 = loc(fused[#loc253, #loc254])
#loc485 = loc(fused[#loc255, #loc256])
#loc486 = loc(fused[#loc257, #loc254])
#loc487 = loc(fused[#loc259, #loc260])
#loc488 = loc(fused[#loc262, #loc263])
#loc489 = loc(fused[#loc264, #loc265])
#loc490 = loc(fused[#loc267, #loc266])
#loc491 = loc(fused[#loc269, #loc268])
#loc492 = loc(fused[#loc272, #loc273])
#loc493 = loc(fused[#loc274, #loc275])
#loc494 = loc(fused[#loc277, #loc278])
#loc495 = loc(fused[#loc279, #loc280])
#loc496 = loc(fused[#loc281, #loc282])
#loc497 = loc(fused[#loc283, #loc275])
#loc498 = loc(fused[#loc285, #loc286])
#loc499 = loc(fused[#loc289, #loc290])
#loc500 = loc(fused[#loc291, #loc286])
#loc501 = loc(fused[#loc297, #loc298])
#loc502 = loc(fused[#loc299, #loc300])
#loc503 = loc(fused[#loc301, #loc302])
#loc504 = loc(fused[#loc303, #loc300])
#loc505 = loc(fused[#loc309, #loc310])
#loc506 = loc(fused[#loc311, #loc312])
#loc507 = loc(fused[#loc313, #loc314])
#loc508 = loc(fused[#loc313, #loc315])
#loc509 = loc(fused[#loc311, #loc316])
#loc510 = loc(fused[#loc319, #loc320])
#loc511 = loc(fused[#loc321, #loc322])
#loc512 = loc(fused[#loc323, #loc324])
#loc513 = loc(fused[#loc326, #loc327])
#loc514 = loc(fused[#loc328, #loc322])
#loc515 = loc(fused[#loc334, #loc335])
#loc516 = loc(fused[#loc333, #loc335])
#loc517 = loc(fused[#loc332, #loc335])
#loc518 = loc(fused[#loc331, #loc330])
#loc519 = loc(fused[#loc340, #loc341])
#loc520 = loc(fused[#loc342, #loc343])
#loc521 = loc(fused[#loc345, #loc343])
#loc522 = loc(fused[#loc348, #loc346])
#loc523 = loc(fused[#loc352, #loc353])
#loc524 = loc(fused[#loc354, #loc355])
#loc525 = loc(fused[#loc357, #loc355])
#loc526 = loc(fused[#loc360, #loc358])
#loc527 = loc(fused[#loc362, #loc363])
#loc528 = loc(fused[#loc364, #loc365])
#loc529 = loc(fused[#loc366, #loc363])
#loc530 = loc(fused[#loc369, #loc370])
#loc531 = loc(fused[#loc371, #loc372])
#loc532 = loc(fused[#loc373, #loc370])
#loc533 = loc(fused[#loc377, #loc376])
#loc534 = loc(fused[#loc378, #loc379])
