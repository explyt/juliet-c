!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":107:10)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":107:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":107:20)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":107:32)
#loc154 = loc(fused[#loc51, #loc52])
#loc155 = loc(fused[#loc53, #loc54])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc133)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc136)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc137)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc139)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc16)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc141)
      } loc(#loc140)
    } loc(#loc138)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc143)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc143)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc22)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc22)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc23)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc23)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc24)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc24)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc144)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc145)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc146)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc31)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc29)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc32)
    } loc(#loc142)
    cir.return loc(#loc4)
  } loc(#loc134)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc147)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc150)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc58)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %17 : !s32i loc(#loc158)
  } loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc69)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc162)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc80)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc81)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc164)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
      } else {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc86)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc166)
      } loc(#loc165)
    } loc(#loc163)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc168)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc168)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc92)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc92)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc93)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc93)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc94)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc169)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc170)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc171)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc99)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc100)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc101)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc99)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc102)
    } loc(#loc167)
    cir.return loc(#loc71)
  } loc(#loc159)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc174)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc175)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc114)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc177)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc116)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
      } loc(#loc178)
    } loc(#loc176)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc181)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc181)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc181)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc122)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc122)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc123)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc123)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc124)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc124)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc182)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc183)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc184)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc129)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc131)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc129)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc132)
    } loc(#loc180)
    cir.return loc(#loc104)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":25:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":42:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":27:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":27:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":28:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":28:29)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":29:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":29:31)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":35:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":30:8)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":30:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":34:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":34:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":41:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":37:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":37:33)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":39:17)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":39:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":39:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":39:35)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":39:49)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":39:50)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":40:27)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":40:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":40:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":40:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":91:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":95:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":93:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":93:14)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":94:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":94:14)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":112:15)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":114:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":117:15)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":119:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":107:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":122:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":108:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":110:27)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":110:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":110:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":112:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":113:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":113:80)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":114:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":117:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":118:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":118:79)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":119:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":121:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":121:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":57:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":49:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":70:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":51:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":51:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":52:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":52:29)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":53:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":53:31)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":54:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":63:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":54:8)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":54:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":55:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":58:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":60:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":57:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":62:16)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":62:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":64:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":69:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":65:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":65:33)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":67:17)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":67:23)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":67:31)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":67:35)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":67:49)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":67:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":67:50)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":68:27)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":68:32)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":68:33)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":68:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":73:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":89:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":75:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":75:15)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":76:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":76:29)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":77:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":77:31)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":78:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":82:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":78:8)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":78:27)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":79:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":81:16)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":81:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":83:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":88:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":84:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":84:33)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":86:17)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":86:23)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":86:31)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":86:35)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":86:49)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":86:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":86:50)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":87:27)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":87:32)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":87:33)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_06.c":87:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc15, #loc12])
#loc141 = loc(fused[#loc17, #loc16])
#loc142 = loc(fused[#loc18, #loc19])
#loc143 = loc(fused[#loc20, #loc21])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc24, #loc26])
#loc146 = loc(fused[#loc27, #loc28])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc35, #loc36])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc39, #loc40])
#loc151 = loc(fused[#loc41, #loc42])
#loc152 = loc(fused[#loc43, #loc44])
#loc153 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc60, #loc61])
#loc157 = loc(fused[#loc64, #loc65])
#loc158 = loc(fused[#loc68, #loc67])
#loc159 = loc(fused[#loc70, #loc71])
#loc160 = loc(fused[#loc72, #loc73])
#loc161 = loc(fused[#loc74, #loc75])
#loc162 = loc(fused[#loc76, #loc77])
#loc163 = loc(fused[#loc78, #loc79])
#loc164 = loc(fused[#loc80, #loc81])
#loc165 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc166 = loc(fused[#loc87, #loc86])
#loc167 = loc(fused[#loc88, #loc89])
#loc168 = loc(fused[#loc90, #loc91])
#loc169 = loc(fused[#loc95, #loc96])
#loc170 = loc(fused[#loc94, #loc96])
#loc171 = loc(fused[#loc97, #loc98])
#loc172 = loc(fused[#loc103, #loc104])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc115, #loc112])
#loc179 = loc(fused[#loc117, #loc116])
#loc180 = loc(fused[#loc118, #loc119])
#loc181 = loc(fused[#loc120, #loc121])
#loc182 = loc(fused[#loc125, #loc126])
#loc183 = loc(fused[#loc124, #loc126])
#loc184 = loc(fused[#loc127, #loc128])
