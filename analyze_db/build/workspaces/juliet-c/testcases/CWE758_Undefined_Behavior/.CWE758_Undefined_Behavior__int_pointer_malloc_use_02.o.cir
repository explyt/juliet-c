!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func private @printIntLine(!s32i) loc(#loc157)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_02_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc162)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc163)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc164)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
          cir.store %7, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc162)
          cir.scope {
            %15 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc26)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc27)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc167)
            cir.if %18 {
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc29)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc30)
              %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc31)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
            } loc(#loc168)
          } loc(#loc166)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
          cir.store %9, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
          %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc33)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc34)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc34)
          cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
          %13 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc36)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc37)
        } loc(#loc161)
      } loc(#loc160)
    } loc(#loc159)
    cir.return loc(#loc10)
  } loc(#loc158)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc171)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc169)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc51)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc51)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc55)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc178)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc62)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc179)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc62)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc180)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc178)
          cir.scope {
            %19 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc68)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc182)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc70)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc72)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
            } loc(#loc183)
          } loc(#loc181)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc73)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc184)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc185)
          cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
          cir.scope {
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc81)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc81)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc83)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc84)
              %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc85)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc83)
            } loc(#loc189)
          } loc(#loc187)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc86)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc190)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc90)
          cir.store %14, %15 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
          cir.scope {
            %19 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc193)
            %20 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc95)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
            cir.store %21, %19 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
            %22 = cir.load deref %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
            %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc99)
          } loc(#loc192)
          %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc100)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc101)
          cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc100)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc174)
    cir.return loc(#loc48)
  } loc(#loc173)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc106)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc106)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc199)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc114)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc200)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc201)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc199)
          cir.scope {
            %19 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc120)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc203)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc122)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc123)
              %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc124)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
            } loc(#loc204)
          } loc(#loc202)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc125)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc205)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc206)
          cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc207)
          cir.scope {
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc133)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc209)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc135)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc137)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
            } loc(#loc210)
          } loc(#loc208)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc138)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc211)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
          cir.store %14, %15 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
          cir.scope {
            %19 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc214)
            %20 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
            cir.store %21, %19 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
            %22 = cir.load deref %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
            %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc151)
          } loc(#loc213)
          %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc152)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc153)
          cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
        } loc(#loc197)
      } loc(#loc196)
    } loc(#loc195)
    cir.return loc(#loc103)
  } loc(#loc194)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":32:1)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":31:5)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":22:8)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":23:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":24:9)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":30:9)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":25:13)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":25:60)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":27:13)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":27:27)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":25:40)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":25:47)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":25:59)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:13)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:44)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:17)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:28)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:34)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:35)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:41)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":26:40)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":27:26)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":28:13)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":28:18)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":29:27)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":29:26)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":29:13)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":89:1)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":93:1)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":91:5)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":91:11)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":92:5)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":92:11)
#loc44 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":44:19)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":39:1)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":64:1)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":41:5)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":63:5)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":41:8)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":42:5)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":45:5)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":47:5)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":44:9)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":48:9)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":62:9)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":49:13)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":49:19)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":50:13)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":50:60)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":50:40)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":50:47)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":50:59)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:13)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:44)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:17)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:28)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:34)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:35)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:41)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":51:40)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":53:27)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":53:34)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":53:44)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":53:45)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":53:13)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:13)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:41)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:17)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:25)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:31)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:32)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:38)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":54:37)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":55:21)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":55:14)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":55:13)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":56:24)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":56:14)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":56:13)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":57:13)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":60:13)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":58:17)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":58:31)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":58:30)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":59:31)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":59:30)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":59:17)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":61:13)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":61:18)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":67:1)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":87:1)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":69:5)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":86:5)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":69:8)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":70:5)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":71:9)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":85:9)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":72:13)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":72:19)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":73:13)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":73:60)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":73:40)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":73:47)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":73:59)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:13)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:44)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:17)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:28)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:34)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:35)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:41)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":74:40)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":76:27)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":76:34)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":76:44)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":76:45)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":76:13)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:13)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:41)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:17)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:25)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:31)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:32)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:38)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":77:37)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":78:21)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":78:14)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":78:13)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":79:24)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":79:14)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":79:13)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":80:13)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":83:13)
#loc146 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":81:17)
#loc147 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":81:31)
#loc148 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":81:30)
#loc149 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":82:31)
#loc150 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":82:30)
#loc151 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":82:17)
#loc152 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":84:13)
#loc153 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_02.c":84:18)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc14, #loc12])
#loc161 = loc(fused[#loc15, #loc16])
#loc162 = loc(fused[#loc17, #loc18])
#loc163 = loc(fused[#loc19, #loc20])
#loc164 = loc(fused[#loc22, #loc23])
#loc165 = loc(fused[#loc21, #loc18])
#loc166 = loc(fused[#loc24, #loc25])
#loc167 = loc(fused[#loc26, #loc27])
#loc168 = loc(fused[#loc28, #loc25])
#loc169 = loc(fused[#loc38, #loc39])
#loc170 = loc(fused[#loc40, #loc41])
#loc171 = loc(fused[#loc42, #loc43])
#loc172 = loc(fused[#loc44, #loc45])
#loc173 = loc(fused[#loc47, #loc48])
#loc174 = loc(fused[#loc49, #loc50])
#loc175 = loc(fused[#loc52, #loc53, #loc54, #loc50])
#loc176 = loc(fused[#loc56, #loc57])
#loc177 = loc(fused[#loc58, #loc59])
#loc178 = loc(fused[#loc60, #loc61])
#loc179 = loc(fused[#loc63, #loc64])
#loc180 = loc(fused[#loc62, #loc61])
#loc181 = loc(fused[#loc65, #loc66])
#loc182 = loc(fused[#loc67, #loc68])
#loc183 = loc(fused[#loc69, #loc66])
#loc184 = loc(fused[#loc74, #loc75])
#loc185 = loc(fused[#loc73, #loc76])
#loc186 = loc(fused[#loc77, #loc76])
#loc187 = loc(fused[#loc78, #loc79])
#loc188 = loc(fused[#loc80, #loc81])
#loc189 = loc(fused[#loc82, #loc79])
#loc190 = loc(fused[#loc88, #loc86])
#loc191 = loc(fused[#loc91, #loc89])
#loc192 = loc(fused[#loc92, #loc93])
#loc193 = loc(fused[#loc94, #loc95])
#loc194 = loc(fused[#loc102, #loc103])
#loc195 = loc(fused[#loc104, #loc105])
#loc196 = loc(fused[#loc107, #loc105])
#loc197 = loc(fused[#loc108, #loc109])
#loc198 = loc(fused[#loc110, #loc111])
#loc199 = loc(fused[#loc112, #loc113])
#loc200 = loc(fused[#loc115, #loc116])
#loc201 = loc(fused[#loc114, #loc113])
#loc202 = loc(fused[#loc117, #loc118])
#loc203 = loc(fused[#loc119, #loc120])
#loc204 = loc(fused[#loc121, #loc118])
#loc205 = loc(fused[#loc126, #loc127])
#loc206 = loc(fused[#loc125, #loc128])
#loc207 = loc(fused[#loc129, #loc128])
#loc208 = loc(fused[#loc130, #loc131])
#loc209 = loc(fused[#loc132, #loc133])
#loc210 = loc(fused[#loc134, #loc131])
#loc211 = loc(fused[#loc140, #loc138])
#loc212 = loc(fused[#loc143, #loc141])
#loc213 = loc(fused[#loc144, #loc145])
#loc214 = loc(fused[#loc146, #loc147])
