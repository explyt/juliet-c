!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":119:10)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":119:14)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":119:20)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":119:32)
#loc171 = loc(fused[#loc63, #loc64])
#loc172 = loc(fused[#loc65, #loc66])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc147)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc148)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc151)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc156)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc156)
      cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc156)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc24)
        %5 = cir.const #cir.int<3> : !s32i loc(#loc25)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc25)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc25)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc25)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
        %11 = cir.binop(add, %8, %10) : !u64i loc(#loc25)
        %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc25)
        %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc148)
        %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc158)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc33)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        } loc(#loc159)
      } loc(#loc157)
    } loc(#loc155)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc162)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc164)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        %7 = cir.const #cir.int<2> : !s32i loc(#loc43)
        %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc44)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc164)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc46)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc13)
  } loc(#loc152)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc165)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc168)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_01_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_01_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %17 : !s32i loc(#loc175)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc88)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc181)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc183)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc96)
        %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc97)
        cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc183)
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc99)
      } loc(#loc182)
    } loc(#loc180)
    cir.return loc(#loc82)
  } loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc188)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc188)
      cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc188)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
        %5 = cir.const #cir.int<3> : !s32i loc(#loc114)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc114)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc114)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc114)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc114)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc114)
        %11 = cir.binop(add, %8, %10) : !u64i loc(#loc114)
        %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc114)
        %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc148)
        %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
        %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc116)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
        %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc190)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc125)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc125)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc126)
        } loc(#loc191)
      } loc(#loc189)
    } loc(#loc187)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc194)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc135)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc135)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc135)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc135)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc136)
          %11 = cir.binop(div, %9, %10) : !s32i loc(#loc197)
          %12 = cir.cmp(gt, %5, %11) : !s32i, !cir.bool loc(#loc198)
          cir.if %12 {
            %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc200)
            %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc142)
            %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc143)
            cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc200)
            %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc145)
          } else {
            %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc100)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc100)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc146)
          } loc(#loc199)
        } loc(#loc196)
      } loc(#loc195)
    } loc(#loc193)
    cir.return loc(#loc102)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":48:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":26:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":28:12)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":28:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":29:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":41:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":30:9)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":30:45)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":32:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":40:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":32:19)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":32:32)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":32:49)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":32:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":32:59)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":33:9)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":36:9)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":38:9)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":35:25)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":35:20)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":35:13)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":35:36)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":39:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":42:5)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":47:5)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":42:8)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":42:15)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":43:5)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":45:9)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":45:29)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":45:22)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":46:22)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":46:9)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":104:1)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":108:1)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":106:5)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":106:13)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":107:5)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":107:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":124:15)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":126:15)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":129:15)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":131:15)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":119:1)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":134:1)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":120:1)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":122:27)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":122:22)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":122:5)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":124:5)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":125:5)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":125:58)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":126:5)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":129:5)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":130:5)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":130:57)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":131:5)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":133:12)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":133:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":55:1)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":68:1)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":57:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":57:9)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":59:12)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":59:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":61:13)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":61:12)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":61:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":62:5)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":67:5)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":62:8)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":62:15)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":63:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":65:9)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":65:29)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":65:22)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":66:22)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":66:9)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":99:23)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":71:1)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":102:1)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":73:5)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":73:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":75:12)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":75:5)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":76:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":88:5)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":77:9)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":77:45)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":79:9)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":87:9)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":79:19)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":79:32)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":79:49)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":79:13)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":79:59)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":80:9)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":83:9)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":85:9)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":82:25)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":82:20)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":82:13)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":82:36)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":86:23)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":86:13)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":89:5)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":101:5)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":89:8)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":89:15)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":90:5)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":92:9)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":100:9)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":92:13)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":92:21)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":92:29)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":92:30)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":93:9)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":96:9)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":98:9)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":94:13)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":94:33)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":94:26)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":95:26)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":95:13)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_01.c":99:13)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc10, #loc11])
#loc152 = loc(fused[#loc12, #loc13])
#loc153 = loc(fused[#loc14, #loc15])
#loc154 = loc(fused[#loc17, #loc16])
#loc155 = loc(fused[#loc18, #loc19])
#loc156 = loc(fused[#loc20, #loc21])
#loc157 = loc(fused[#loc22, #loc23])
#loc158 = loc(fused[#loc27, #loc28])
#loc159 = loc(fused[#loc29, #loc30, #loc31, #loc23])
#loc160 = loc(fused[#loc34, #loc35])
#loc161 = loc(fused[#loc37, #loc38])
#loc162 = loc(fused[#loc39, #loc40])
#loc163 = loc(fused[#loc41, #loc38])
#loc164 = loc(fused[#loc42, #loc43])
#loc165 = loc(fused[#loc47, #loc48])
#loc166 = loc(fused[#loc49, #loc50])
#loc167 = loc(fused[#loc51, #loc52])
#loc168 = loc(fused[#loc53, #loc54])
#loc169 = loc(fused[#loc55, #loc56])
#loc170 = loc(fused[#loc61, #loc62])
#loc173 = loc(fused[#loc72, #loc73])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc80, #loc79])
#loc176 = loc(fused[#loc81, #loc82])
#loc177 = loc(fused[#loc83, #loc84])
#loc178 = loc(fused[#loc86, #loc85])
#loc179 = loc(fused[#loc89, #loc87])
#loc180 = loc(fused[#loc90, #loc91])
#loc181 = loc(fused[#loc92, #loc93])
#loc182 = loc(fused[#loc94, #loc91])
#loc183 = loc(fused[#loc95, #loc96])
#loc184 = loc(fused[#loc101, #loc102])
#loc185 = loc(fused[#loc103, #loc104])
#loc186 = loc(fused[#loc106, #loc105])
#loc187 = loc(fused[#loc107, #loc108])
#loc188 = loc(fused[#loc109, #loc110])
#loc189 = loc(fused[#loc111, #loc112])
#loc190 = loc(fused[#loc116, #loc117])
#loc191 = loc(fused[#loc118, #loc119, #loc120, #loc112])
#loc192 = loc(fused[#loc123, #loc124])
#loc193 = loc(fused[#loc127, #loc128])
#loc194 = loc(fused[#loc129, #loc130])
#loc195 = loc(fused[#loc131, #loc128])
#loc196 = loc(fused[#loc132, #loc133])
#loc197 = loc(fused[#loc135, #loc136])
#loc198 = loc(fused[#loc134, #loc137])
#loc199 = loc(fused[#loc138, #loc139, #loc140, #loc133])
#loc200 = loc(fused[#loc141, #loc142])
