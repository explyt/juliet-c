!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":36:16)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":75:16)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:27)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":114:16)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:27)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc277)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc278)
  cir.func private @printIntLine(!s32i) loc(#loc279)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc282)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc283)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc284)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc19)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb1 loc(#loc286)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc287)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc25)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc25)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc25)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc25)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc25)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc25)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc25)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc25)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc25)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc25)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc25)
    cir.br ^bb5(%23 : !u32i) loc(#loc25)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc25)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc25)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc25)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc25)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc25)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc25)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc25)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc25)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc25)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc25)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc25)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc25)
    cir.br ^bb5(%39 : !u32i) loc(#loc25)
  ^bb5(%40: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":36:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc25)
    cir.store %41, %2 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc289)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %44 = cir.cast(int_to_bool, %43 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %44 ^bb10, ^bb26 loc(#loc290)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc291)
  ^bb11:  // pred: ^bb10
    %45 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc283)
    cir.store %45, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc283)
    cir.br ^bb12 loc(#loc292)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %47 = cir.const #cir.int<10> : !s32i loc(#loc36)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %48 ^bb13, ^bb22 loc(#loc294)
  ^bb13:  // pred: ^bb12
    %49 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %51 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc42)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    cir.store %49, %52 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb14 loc(#loc296)
  ^bb14:  // pred: ^bb13
    %53 = cir.const #cir.int<0> : !s32i loc(#loc45)
    cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb15 loc(#loc296)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %55 = cir.const #cir.int<10> : !s32i loc(#loc48)
    %56 = cir.cmp(lt, %54, %55) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %56 ^bb16, ^bb20 loc(#loc49)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc299)
  ^bb17:  // pred: ^bb16
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %58 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc52)
    %59 = cir.ptr_stride(%58 : !cir.ptr<!s32i>, %57 : !s32i), !cir.ptr<!s32i> loc(#loc52)
    %60 = cir.load %59 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%60) : (!s32i) -> () loc(#loc53)
    cir.br ^bb18 loc(#loc44)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc44)
  ^bb19:  // pred: ^bb18
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %62 = cir.unary(inc, %61) nsw : !s32i, !s32i loc(#loc55)
    cir.store %62, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb15 loc(#loc296)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc44)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23 loc(#loc38)
  ^bb22:  // pred: ^bb12
    %63 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc9)
    %64 = cir.cast(array_to_ptrdecay, %63 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%64) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb23 loc(#loc34)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc34)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc32)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc28)
  ^bb26:  // 2 preds: ^bb9, ^bb25
    cir.br ^bb27 loc(#loc28)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc11)
  } loc(#loc281)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc302)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc303)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc304)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc305)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc58)
  } loc(#loc301)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc308)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc309)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc310)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc80)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb1 loc(#loc312)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc313)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc86)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc86)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc86)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc86)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc86)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc86)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc86)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc86)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc86)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc86)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc86)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc86)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc86)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc86)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc86)
    cir.br ^bb5(%23 : !u32i) loc(#loc86)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc86)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc86)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc86)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc86)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc86)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc86)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc86)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc86)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc86)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc86)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc86)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc86)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc86)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc86)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc86)
    cir.br ^bb5(%39 : !u32i) loc(#loc86)
  ^bb5(%40: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":75:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc86)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc86)
    cir.store %41, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc315)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc306)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %44 = cir.cast(int_to_bool, %43 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %44 ^bb10, ^bb11 loc(#loc316)
  ^bb10:  // pred: ^bb9
    %45 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb35 loc(#loc92)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc317)
  ^bb12:  // pred: ^bb11
    %47 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc309)
    cir.store %47, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc309)
    cir.br ^bb13 loc(#loc318)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %50 = cir.cmp(ge, %48, %49) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %50 ^bb14, ^bb19 loc(#loc101)
  ^bb14:  // pred: ^bb13
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %52 = cir.const #cir.int<10> : !s32i loc(#loc103)
    %53 = cir.cmp(lt, %51, %52) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %53 ^bb15, ^bb16 loc(#loc101)
  ^bb15:  // pred: ^bb14
    %54 = cir.const #true loc(#loc101)
    cir.br ^bb17(%54 : !cir.bool) loc(#loc101)
  ^bb16:  // pred: ^bb14
    %55 = cir.const #false loc(#loc101)
    cir.br ^bb17(%55 : !cir.bool) loc(#loc101)
  ^bb17(%56: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:27)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc101)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%56 : !cir.bool) loc(#loc101)
  ^bb19:  // pred: ^bb13
    %57 = cir.const #false loc(#loc101)
    cir.br ^bb20(%57 : !cir.bool) loc(#loc101)
  ^bb20(%58: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:27)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc101)
  ^bb21:  // pred: ^bb20
    cir.brcond %58 ^bb22, ^bb31 loc(#loc321)
  ^bb22:  // pred: ^bb21
    %59 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %61 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc110)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s32i>, %60 : !s32i), !cir.ptr<!s32i> loc(#loc110)
    cir.store %59, %62 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.br ^bb23 loc(#loc323)
  ^bb23:  // pred: ^bb22
    %63 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %63, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb24 loc(#loc323)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %65 = cir.const #cir.int<10> : !s32i loc(#loc116)
    %66 = cir.cmp(lt, %64, %65) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %66 ^bb25, ^bb29 loc(#loc117)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc326)
  ^bb26:  // pred: ^bb25
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %68 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc120)
    %69 = cir.ptr_stride(%68 : !cir.ptr<!s32i>, %67 : !s32i), !cir.ptr<!s32i> loc(#loc120)
    %70 = cir.load %69 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.call @printIntLine(%70) : (!s32i) -> () loc(#loc121)
    cir.br ^bb27 loc(#loc112)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc112)
  ^bb28:  // pred: ^bb27
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %72 = cir.unary(inc, %71) nsw : !s32i, !s32i loc(#loc123)
    cir.store %72, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb24 loc(#loc323)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc112)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc106)
  ^bb31:  // pred: ^bb21
    %73 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc70)
    %74 = cir.cast(array_to_ptrdecay, %73 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%74) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb32 loc(#loc98)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc98)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc96)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc89)
  ^bb35:  // 2 preds: ^bb10, ^bb34
    cir.br ^bb36 loc(#loc89)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc72)
  } loc(#loc307)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc329)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc330)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc331)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc134)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.br ^bb1 loc(#loc333)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc138)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc334)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc140)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc140)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc140)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc140)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc140)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc140)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc140)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc140)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc140)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc140)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc140)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc140)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc140)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc140)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc140)
    cir.br ^bb5(%23 : !u32i) loc(#loc140)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc140)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc140)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc140)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc140)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc140)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc140)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc140)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc140)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc140)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc140)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc140)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc140)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc140)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc140)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc140)
    cir.br ^bb5(%39 : !u32i) loc(#loc140)
  ^bb5(%40: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":114:16)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc140)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc140)
    cir.store %41, %2 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb7 loc(#loc137)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc336)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %44 = cir.cast(int_to_bool, %43 : !s32i), !cir.bool loc(#loc144)
    cir.brcond %44 ^bb10, ^bb34 loc(#loc337)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc338)
  ^bb11:  // pred: ^bb10
    %45 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc330)
    cir.store %45, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc330)
    cir.br ^bb12 loc(#loc339)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %48 = cir.cmp(ge, %46, %47) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %48 ^bb13, ^bb18 loc(#loc152)
  ^bb13:  // pred: ^bb12
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %50 = cir.const #cir.int<10> : !s32i loc(#loc154)
    %51 = cir.cmp(lt, %49, %50) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %51 ^bb14, ^bb15 loc(#loc152)
  ^bb14:  // pred: ^bb13
    %52 = cir.const #true loc(#loc152)
    cir.br ^bb16(%52 : !cir.bool) loc(#loc152)
  ^bb15:  // pred: ^bb13
    %53 = cir.const #false loc(#loc152)
    cir.br ^bb16(%53 : !cir.bool) loc(#loc152)
  ^bb16(%54: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc152)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%54 : !cir.bool) loc(#loc152)
  ^bb18:  // pred: ^bb12
    %55 = cir.const #false loc(#loc152)
    cir.br ^bb19(%55 : !cir.bool) loc(#loc152)
  ^bb19(%56: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc152)
  ^bb20:  // pred: ^bb19
    cir.brcond %56 ^bb21, ^bb30 loc(#loc342)
  ^bb21:  // pred: ^bb20
    %57 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %59 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc161)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s32i>, %58 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    cir.store %57, %60 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb22 loc(#loc344)
  ^bb22:  // pred: ^bb21
    %61 = cir.const #cir.int<0> : !s32i loc(#loc164)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb23 loc(#loc344)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %63 = cir.const #cir.int<10> : !s32i loc(#loc167)
    %64 = cir.cmp(lt, %62, %63) : !s32i, !cir.bool loc(#loc346)
    cir.brcond %64 ^bb24, ^bb28 loc(#loc168)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc347)
  ^bb25:  // pred: ^bb24
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %66 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
    %67 = cir.ptr_stride(%66 : !cir.ptr<!s32i>, %65 : !s32i), !cir.ptr<!s32i> loc(#loc171)
    %68 = cir.load %67 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.call @printIntLine(%68) : (!s32i) -> () loc(#loc172)
    cir.br ^bb26 loc(#loc163)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc163)
  ^bb27:  // pred: ^bb26
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %70 = cir.unary(inc, %69) nsw : !s32i, !s32i loc(#loc174)
    cir.store %70, %0 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb23 loc(#loc344)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc163)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc157)
  ^bb30:  // pred: ^bb20
    %71 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc175)
    %72 = cir.cast(array_to_ptrdecay, %71 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.br ^bb31 loc(#loc149)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc149)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc147)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc143)
  ^bb34:  // 2 preds: ^bb9, ^bb33
    cir.br ^bb35 loc(#loc143)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc126)
  } loc(#loc328)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc351)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc352)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc186)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb1 loc(#loc354)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc306)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc190)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc355)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc194)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    cir.br ^bb4 loc(#loc192)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<7> : !s32i loc(#loc196)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc357)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %13 ^bb7, ^bb23 loc(#loc358)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc359)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc351)
    cir.store %14, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc351)
    cir.br ^bb9 loc(#loc360)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc207)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %17 ^bb10, ^bb19 loc(#loc362)
  ^bb10:  // pred: ^bb9
    %18 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc213)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc213)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb11 loc(#loc364)
  ^bb11:  // pred: ^bb10
    %22 = cir.const #cir.int<0> : !s32i loc(#loc216)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb12 loc(#loc364)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc219)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc366)
    cir.brcond %25 ^bb13, ^bb17 loc(#loc220)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc367)
  ^bb14:  // pred: ^bb13
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc223)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc223)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc224)
    cir.br ^bb15 loc(#loc215)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc215)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    %31 = cir.unary(inc, %30) nsw : !s32i, !s32i loc(#loc226)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb12 loc(#loc364)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc215)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc209)
  ^bb19:  // pred: ^bb9
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc227)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    cir.br ^bb20 loc(#loc205)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc205)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc203)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc199)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc199)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc178)
  } loc(#loc349)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc370)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc371)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc372)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc238)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb1 loc(#loc374)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc242)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc375)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc244)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb3 loc(#loc241)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc241)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc377)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc277)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc248)
    cir.brcond %11 ^bb6, ^bb22 loc(#loc378)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc379)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc371)
    cir.store %12, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc371)
    cir.br ^bb8 loc(#loc380)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %14 = cir.const #cir.int<10> : !s32i loc(#loc255)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %15 ^bb9, ^bb18 loc(#loc382)
  ^bb9:  // pred: ^bb8
    %16 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc261)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc261)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb10 loc(#loc384)
  ^bb10:  // pred: ^bb9
    %20 = cir.const #cir.int<0> : !s32i loc(#loc264)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.br ^bb11 loc(#loc384)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc267)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc386)
    cir.brcond %23 ^bb12, ^bb16 loc(#loc268)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc387)
  ^bb13:  // pred: ^bb12
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc271)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc271)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc272)
    cir.br ^bb14 loc(#loc263)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc263)
  ^bb15:  // pred: ^bb14
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %29 = cir.unary(inc, %28) nsw : !s32i, !s32i loc(#loc274)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.br ^bb11 loc(#loc384)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc263)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc257)
  ^bb18:  // pred: ^bb8
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc275)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc275)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc276)
    cir.br ^bb19 loc(#loc253)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc253)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc251)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc247)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc247)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc230)
  } loc(#loc369)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_05.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":23:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":23:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":56:27)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":28:1)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":60:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":41:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":41:17)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":42:13)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":42:34)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":30:5)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":30:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":32:13)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":32:12)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":32:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":33:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":37:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":33:8)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":34:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":36:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":38:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":59:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":38:8)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":39:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":40:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":58:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":45:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":57:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":45:17)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":45:24)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":46:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":53:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":55:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":47:32)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":47:24)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":47:17)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":52:17)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:25)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:21)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:28)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:32)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:30)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":50:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":51:41)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":51:34)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":51:21)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:37)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":49:36)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":56:17)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":216:1)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":222:1)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":218:5)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":218:14)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":219:5)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":219:14)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":220:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":220:14)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":221:5)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":221:14)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":24:1)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":24:26)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":80:19)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":99:27)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":67:1)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":103:1)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":85:13)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":85:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":86:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":86:34)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":69:5)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":69:9)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":71:13)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":71:12)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":71:5)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":72:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":76:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":72:8)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":73:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":75:9)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":77:5)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":102:5)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":77:8)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":78:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":81:5)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":83:5)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":80:9)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":84:9)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":101:9)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:13)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":100:13)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:17)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:25)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:30)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:38)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":88:40)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":89:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":96:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":98:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":90:32)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":90:24)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":90:17)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:17)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":95:17)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:25)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:21)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:28)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:32)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:30)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":93:17)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":94:41)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":94:34)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":94:21)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:37)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":92:36)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":99:17)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":106:1)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":137:1)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":119:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":119:17)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":120:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":120:34)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":108:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":108:9)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":110:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":110:12)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":110:5)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":111:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":115:5)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":111:8)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":112:5)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":114:9)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":116:5)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":136:5)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":116:8)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":117:5)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":118:9)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":135:9)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:13)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":134:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:17)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:25)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:30)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:38)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":122:40)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":123:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":130:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":132:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":124:32)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":124:24)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":124:17)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:17)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":129:17)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:25)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:21)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:28)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:32)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:30)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":127:17)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":128:41)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":128:34)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":128:21)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:37)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":126:36)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":133:27)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":133:17)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":140:1)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":178:1)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":159:13)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":159:17)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":160:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":160:34)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":142:5)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":142:9)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":144:13)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":144:12)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":144:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":145:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":155:5)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":145:8)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":146:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":149:5)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":151:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":148:19)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":148:9)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":154:16)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":154:9)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":156:5)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":177:5)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":156:8)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":157:5)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":158:9)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":176:9)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":163:13)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":175:13)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":163:17)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":163:24)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":164:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":171:13)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":173:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":165:32)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":165:24)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":165:17)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:17)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":170:17)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:25)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:21)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:28)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:32)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:30)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":168:17)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":169:41)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":169:34)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":169:21)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:37)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":167:36)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":174:27)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":174:17)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":181:1)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":214:1)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":195:13)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":195:17)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":196:13)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":196:34)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":183:5)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":183:9)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":185:13)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":185:12)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":185:5)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":186:5)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":191:5)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":186:8)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":187:5)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":190:16)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":190:9)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":192:5)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":213:5)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":192:8)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":193:5)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":194:9)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":212:9)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":199:13)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":211:13)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":199:17)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":199:24)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":200:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":207:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":209:13)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":201:32)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":201:24)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":201:17)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:17)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":206:17)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:25)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:21)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:28)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:32)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:30)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":204:17)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":205:41)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":205:34)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":205:21)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:37)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":203:36)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":210:27)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_rand_05.c":210:17)
#loc277 = loc(fused[#loc1, #loc2])
#loc278 = loc(fused[#loc3, #loc4])
#loc279 = loc(fused[#loc5, #loc6])
#loc280 = loc(fused[#loc7, #loc8])
#loc281 = loc(fused[#loc10, #loc11])
#loc282 = loc(fused[#loc12, #loc13])
#loc283 = loc(fused[#loc14, #loc15])
#loc284 = loc(fused[#loc16, #loc17])
#loc285 = loc(fused[#loc20, #loc18])
#loc286 = loc(fused[#loc21, #loc22])
#loc287 = loc(fused[#loc24, #loc22])
#loc288 = loc(fused[#loc26, #loc25])
#loc289 = loc(fused[#loc27, #loc28])
#loc290 = loc(fused[#loc30, #loc28])
#loc291 = loc(fused[#loc31, #loc32])
#loc292 = loc(fused[#loc33, #loc34])
#loc293 = loc(fused[#loc35, #loc36])
#loc294 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc295 = loc(fused[#loc42, #loc40])
#loc296 = loc(fused[#loc43, #loc44])
#loc297 = loc(fused[#loc46, #loc45])
#loc298 = loc(fused[#loc47, #loc48])
#loc299 = loc(fused[#loc50, #loc44])
#loc300 = loc(fused[#loc55, #loc54])
#loc301 = loc(fused[#loc57, #loc58])
#loc302 = loc(fused[#loc59, #loc60])
#loc303 = loc(fused[#loc61, #loc62])
#loc304 = loc(fused[#loc63, #loc64])
#loc305 = loc(fused[#loc65, #loc66])
#loc306 = loc(fused[#loc67, #loc68])
#loc307 = loc(fused[#loc71, #loc72])
#loc308 = loc(fused[#loc73, #loc74])
#loc309 = loc(fused[#loc75, #loc76])
#loc310 = loc(fused[#loc77, #loc78])
#loc311 = loc(fused[#loc81, #loc79])
#loc312 = loc(fused[#loc82, #loc83])
#loc313 = loc(fused[#loc85, #loc83])
#loc314 = loc(fused[#loc87, #loc86])
#loc315 = loc(fused[#loc88, #loc89])
#loc316 = loc(fused[#loc91, #loc92, #loc93, #loc89])
#loc317 = loc(fused[#loc95, #loc96])
#loc318 = loc(fused[#loc97, #loc98])
#loc319 = loc(fused[#loc99, #loc100])
#loc320 = loc(fused[#loc102, #loc104])
#loc321 = loc(fused[#loc105, #loc106, #loc107, #loc98])
#loc322 = loc(fused[#loc110, #loc108])
#loc323 = loc(fused[#loc111, #loc112])
#loc324 = loc(fused[#loc114, #loc113])
#loc325 = loc(fused[#loc115, #loc116])
#loc326 = loc(fused[#loc118, #loc112])
#loc327 = loc(fused[#loc123, #loc122])
#loc328 = loc(fused[#loc125, #loc126])
#loc329 = loc(fused[#loc127, #loc128])
#loc330 = loc(fused[#loc129, #loc130])
#loc331 = loc(fused[#loc131, #loc132])
#loc332 = loc(fused[#loc135, #loc133])
#loc333 = loc(fused[#loc136, #loc137])
#loc334 = loc(fused[#loc139, #loc137])
#loc335 = loc(fused[#loc141, #loc140])
#loc336 = loc(fused[#loc142, #loc143])
#loc337 = loc(fused[#loc145, #loc143])
#loc338 = loc(fused[#loc146, #loc147])
#loc339 = loc(fused[#loc148, #loc149])
#loc340 = loc(fused[#loc150, #loc151])
#loc341 = loc(fused[#loc153, #loc155])
#loc342 = loc(fused[#loc156, #loc157, #loc158, #loc149])
#loc343 = loc(fused[#loc161, #loc159])
#loc344 = loc(fused[#loc162, #loc163])
#loc345 = loc(fused[#loc165, #loc164])
#loc346 = loc(fused[#loc166, #loc167])
#loc347 = loc(fused[#loc169, #loc163])
#loc348 = loc(fused[#loc174, #loc173])
#loc349 = loc(fused[#loc177, #loc178])
#loc350 = loc(fused[#loc179, #loc180])
#loc351 = loc(fused[#loc181, #loc182])
#loc352 = loc(fused[#loc183, #loc184])
#loc353 = loc(fused[#loc187, #loc185])
#loc354 = loc(fused[#loc188, #loc189])
#loc355 = loc(fused[#loc191, #loc192, #loc193, #loc189])
#loc356 = loc(fused[#loc197, #loc196])
#loc357 = loc(fused[#loc198, #loc199])
#loc358 = loc(fused[#loc201, #loc199])
#loc359 = loc(fused[#loc202, #loc203])
#loc360 = loc(fused[#loc204, #loc205])
#loc361 = loc(fused[#loc206, #loc207])
#loc362 = loc(fused[#loc208, #loc209, #loc210, #loc205])
#loc363 = loc(fused[#loc213, #loc211])
#loc364 = loc(fused[#loc214, #loc215])
#loc365 = loc(fused[#loc217, #loc216])
#loc366 = loc(fused[#loc218, #loc219])
#loc367 = loc(fused[#loc221, #loc215])
#loc368 = loc(fused[#loc226, #loc225])
#loc369 = loc(fused[#loc229, #loc230])
#loc370 = loc(fused[#loc231, #loc232])
#loc371 = loc(fused[#loc233, #loc234])
#loc372 = loc(fused[#loc235, #loc236])
#loc373 = loc(fused[#loc239, #loc237])
#loc374 = loc(fused[#loc240, #loc241])
#loc375 = loc(fused[#loc243, #loc241])
#loc376 = loc(fused[#loc245, #loc244])
#loc377 = loc(fused[#loc246, #loc247])
#loc378 = loc(fused[#loc249, #loc247])
#loc379 = loc(fused[#loc250, #loc251])
#loc380 = loc(fused[#loc252, #loc253])
#loc381 = loc(fused[#loc254, #loc255])
#loc382 = loc(fused[#loc256, #loc257, #loc258, #loc253])
#loc383 = loc(fused[#loc261, #loc259])
#loc384 = loc(fused[#loc262, #loc263])
#loc385 = loc(fused[#loc265, #loc264])
#loc386 = loc(fused[#loc266, #loc267])
#loc387 = loc(fused[#loc269, #loc263])
#loc388 = loc(fused[#loc274, #loc273])
