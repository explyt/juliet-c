!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":23:60)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":23:118)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":23:124)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":31:60)
#loc65 = loc(fused[#loc8, #loc9])
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83::CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B" {!cir.ptr<!s32i>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc62)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc63)
  cir.func  @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8357CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2BC2EPi(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":23:60), %arg1: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc65)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>> loc(#loc10)
    cir.store %arg1, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> loc(#loc7)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc11)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc66)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc14)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc15)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc15)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc67)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc68)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc14)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc69)
    %12 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.store %11, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc70)
    cir.scope {
      %13 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc23)
      %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc72)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc27)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc73)
    } loc(#loc71)
    cir.return loc(#loc6)
  } loc(#loc64)
  cir.func  @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8357CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2BC1EPi(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>, !cir.ptr<!s32i>) alias(@_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8357CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2BC2EPi) loc(#loc64)
  cir.func private  @printIntLine(!s32i) loc(#loc74)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc75)
  cir.func  @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8357CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2BD2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":31:60)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc34)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>> loc(#loc35)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> loc(#loc34)
    cir.scope {
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc78)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc79)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc78)
      cir.store %4, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc78)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc44)
        cir.store %15, %3 : !u64i, !cir.ptr<!u64i> loc(#loc81)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc47)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc47)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc82)
          cir.condition(%19) loc(#loc82)
        } body {
          %16 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc49)
          %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc49)
          %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc49)
          %20 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
          %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
          %22 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc51)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc52)
          cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc83)
          cir.yield loc(#loc43)
        } step {
          %16 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc55)
          cir.store %17, %3 : !u64i, !cir.ptr<!u64i> loc(#loc84)
          cir.yield loc(#loc80)
        } loc(#loc80)
      } loc(#loc80)
      %5 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc57)
      %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc58)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc56)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc59)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc60)
      %11 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc61)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
    } loc(#loc77)
    cir.return loc(#loc33)
  } loc(#loc76)
  cir.func  @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8357CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2BD1Ev(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B>) alias(@_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8357CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2BD2Ev) loc(#loc76)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":29:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":24:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":25:12)
#loc12 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83.h":45:11)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":25:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":27:19)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":27:26)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":27:29)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":27:39)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":27:40)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":27:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:17)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":28:29)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc30 = loc("/usr/include/stdlib.h":687:1)
#loc31 = loc("/usr/include/stdlib.h":687:32)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":31:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":44:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":32:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":33:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":43:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":34:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":34:28)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":35:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":35:16)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":37:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":40:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":37:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":37:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":37:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":37:25)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":39:30)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":39:23)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":39:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":39:18)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":39:19)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":39:31)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":37:30)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":37:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":41:22)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":41:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":41:28)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":41:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":42:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_83_goodG2B.cpp":42:14)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc3, #loc4])
#loc64 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc13, #loc11])
#loc67 = loc(fused[#loc16, #loc17])
#loc68 = loc(fused[#loc15, #loc17])
#loc69 = loc(fused[#loc14, #loc18])
#loc70 = loc(fused[#loc19, #loc18])
#loc71 = loc(fused[#loc20, #loc21])
#loc72 = loc(fused[#loc22, #loc23])
#loc73 = loc(fused[#loc24, #loc21])
#loc74 = loc(fused[#loc28, #loc29])
#loc75 = loc(fused[#loc30, #loc31])
#loc76 = loc(fused[#loc32, #loc33])
#loc77 = loc(fused[#loc36, #loc37])
#loc78 = loc(fused[#loc38, #loc39])
#loc79 = loc(fused[#loc40, #loc41])
#loc80 = loc(fused[#loc42, #loc43])
#loc81 = loc(fused[#loc45, #loc44])
#loc82 = loc(fused[#loc46, #loc47])
#loc83 = loc(fused[#loc50, #loc53])
#loc84 = loc(fused[#loc55, #loc54])
