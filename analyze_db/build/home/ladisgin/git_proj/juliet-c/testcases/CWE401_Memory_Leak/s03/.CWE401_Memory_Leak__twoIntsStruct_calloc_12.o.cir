!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc205)
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc207)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc208)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc209)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc214)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc214)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc24)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc216)
    %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc217)
    cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc218)
    cir.br ^bb3 loc(#loc219)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc220)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc221)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.call @printStructLine(%31) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
    cir.br ^bb8 loc(#loc22)
  ^bb7:  // pred: ^bb1
    %32 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc52)
    %34 = cir.const #cir.int<8> : !u64i loc(#loc52)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc52)
    %36 = cir.alloca !u8i, !cir.ptr<!u8i>, %35 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    cir.store %38, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc224)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!ty__twoIntsStruct>, %41 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %43 = cir.get_member %42[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %39, %43 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %45 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %46 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %46 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %48 = cir.get_member %47[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %44, %48 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %49 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    cir.call @printStructLine(%51) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc65)
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc18)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc227)
  ^bb10:  // pred: ^bb9
    %52 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc228)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc228)
    %54 = cir.call %53() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc68)
    %55 = cir.cast(int_to_bool, %54 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %55 ^bb11, ^bb12 loc(#loc229)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc71)
  ^bb12:  // pred: ^bb10
    %56 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
    %57 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc74)
    cir.call @free(%58) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    cir.br ^bb13 loc(#loc67)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc67)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc210)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc230)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc237)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc237)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc238)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc94)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc95)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc239)
    %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc240)
    cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc241)
    cir.br ^bb3 loc(#loc242)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc243)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc244)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc107)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    cir.call @printStructLine(%31) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc119)
    cir.br ^bb12 loc(#loc92)
  ^bb7:  // pred: ^bb1
    %32 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc120)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc121)
    %35 = cir.const #cir.int<8> : !u64i loc(#loc247)
    %36 = cir.call @calloc(%34, %35) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc248)
    cir.store %37, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc249)
    cir.br ^bb8 loc(#loc250)
  ^bb8:  // pred: ^bb7
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    %41 = cir.cmp(eq, %38, %40) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc251)
    cir.brcond %41 ^bb9, ^bb10 loc(#loc252)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc133)
    cir.call @exit(%44) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb10 loc(#loc127)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc127)
  ^bb11:  // pred: ^bb10
    %45 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!ty__twoIntsStruct>, %47 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    %49 = cir.get_member %48[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %45, %49 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %51 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!ty__twoIntsStruct>, %52 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    %54 = cir.get_member %53[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %50, %54 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %55 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!ty__twoIntsStruct>, %56 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
    cir.call @printStructLine(%57) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc145)
    cir.br ^bb12 loc(#loc88)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc88)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc255)
  ^bb14:  // pred: ^bb13
    %58 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc256)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc256)
    %60 = cir.call %59() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc148)
    %61 = cir.cast(int_to_bool, %60 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %61 ^bb15, ^bb16 loc(#loc257)
  ^bb15:  // pred: ^bb14
    %62 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
    %63 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc154)
    cir.call @free(%64) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
    cir.br ^bb17 loc(#loc151)
  ^bb16:  // pred: ^bb14
    %65 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc155)
    %66 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc156)
    cir.call @free(%67) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
    cir.br ^bb17 loc(#loc147)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc147)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc82)
  } loc(#loc233)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc260)
    cir.br ^bb1 loc(#loc261)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc262)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc262)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc165)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc165)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc263)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc170)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc170)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc170)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc170)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc170)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc170)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc170)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc264)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc173)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc175)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc177)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
    %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc180)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
    cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc183)
    cir.br ^bb4 loc(#loc168)
  ^bb3:  // pred: ^bb1
    %26 = cir.const #cir.int<100> : !s32i loc(#loc184)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc184)
    %28 = cir.const #cir.int<8> : !u64i loc(#loc184)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc184)
    %30 = cir.alloca !u8i, !cir.ptr<!u8i>, %29 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc184)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc184)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
    cir.store %32, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc267)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %35 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
    %37 = cir.get_member %36[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %33, %37 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc190)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %40 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
    %42 = cir.get_member %41[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
    cir.store %38, %42 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!ty__twoIntsStruct>, %44 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    cir.call @printStructLine(%45) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc197)
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc164)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc270)
  ^bb6:  // pred: ^bb5
    %46 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc271)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc271)
    %48 = cir.call %47() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc200)
    %49 = cir.cast(int_to_bool, %48 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %49 ^bb7, ^bb8 loc(#loc272)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9 loc(#loc203)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc199)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc199)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc158)
  } loc(#loc258)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":675:1)
#loc4 = loc("/usr/include/stdlib.h":676:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":57:1)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":26:21)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":27:12)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":27:5)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":28:5)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":46:5)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":28:8)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":28:33)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":29:5)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":37:5)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":39:5)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":31:33)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":31:40)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":31:45)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":31:65)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":31:66)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":31:9)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:9)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:37)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:13)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:21)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:27)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:28)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:34)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":32:33)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":34:26)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":34:9)
#loc40 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":34:14)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":34:15)
#loc42 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":35:26)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":35:9)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":35:14)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":35:15)
#loc47 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":36:26)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":36:31)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":36:32)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":36:9)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":41:33)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":41:9)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":43:26)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":43:9)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":43:14)
#loc57 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":43:15)
#loc58 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":44:26)
#loc59 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":44:9)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":44:14)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":44:15)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":45:26)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":45:31)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":45:32)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":45:9)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":47:5)
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":56:5)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":47:8)
#loc69 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":47:33)
#loc70 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":48:5)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":51:5)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":53:5)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":55:9)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":55:14)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":139:1)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":143:1)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":141:5)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":141:13)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":142:5)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":142:13)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":66:1)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":100:1)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":68:5)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":68:21)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":69:12)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":69:5)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":70:5)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":89:5)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":70:8)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":70:33)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":71:5)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":79:5)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":81:5)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":73:33)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":73:40)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":73:45)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":73:65)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":73:66)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":73:9)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:9)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:37)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:13)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:21)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:27)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:28)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:34)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":74:33)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":76:26)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":76:9)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":76:14)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":76:15)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":77:26)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":77:9)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":77:14)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":77:15)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":78:26)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":78:31)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":78:32)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":78:9)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":83:33)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":83:40)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":83:45)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":83:65)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":83:66)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":83:9)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:9)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:37)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:13)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:21)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:27)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:28)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:34)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":84:33)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":86:26)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":86:9)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":86:14)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":86:15)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":87:26)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":87:9)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":87:14)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":87:15)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":88:26)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":88:31)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":88:32)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":88:9)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":90:5)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":99:5)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":90:8)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":90:33)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":91:5)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":94:5)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":96:5)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":93:9)
#loc154 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":93:14)
#loc155 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":98:9)
#loc156 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":98:14)
#loc157 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":105:1)
#loc158 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":137:1)
#loc159 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":107:5)
#loc160 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":107:21)
#loc161 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":108:12)
#loc162 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":108:5)
#loc163 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":109:5)
#loc164 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":126:5)
#loc165 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":109:8)
#loc166 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":109:33)
#loc167 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":110:5)
#loc168 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":117:5)
#loc169 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":119:5)
#loc170 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":112:33)
#loc171 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":112:9)
#loc172 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":114:26)
#loc173 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":114:9)
#loc174 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":114:14)
#loc175 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":114:15)
#loc176 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":115:26)
#loc177 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":115:9)
#loc178 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":115:14)
#loc179 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":115:15)
#loc180 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":116:26)
#loc181 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":116:31)
#loc182 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":116:32)
#loc183 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":116:9)
#loc184 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":121:33)
#loc185 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":121:9)
#loc186 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":123:26)
#loc187 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":123:9)
#loc188 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":123:14)
#loc189 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":123:15)
#loc190 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":124:26)
#loc191 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":124:9)
#loc192 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":124:14)
#loc193 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":124:15)
#loc194 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":125:26)
#loc195 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":125:31)
#loc196 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":125:32)
#loc197 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":125:9)
#loc198 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":127:5)
#loc199 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":136:5)
#loc200 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":127:8)
#loc201 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":127:33)
#loc202 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":128:5)
#loc203 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":131:5)
#loc204 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_12.c":133:5)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc9, #loc10])
#loc210 = loc(fused[#loc11, #loc12])
#loc211 = loc(fused[#loc13, #loc14])
#loc212 = loc(fused[#loc16, #loc15])
#loc213 = loc(fused[#loc17, #loc18])
#loc214 = loc(fused[#loc19, #loc20])
#loc215 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc216 = loc(fused[#loc26, #loc27])
#loc217 = loc(fused[#loc24, #loc28])
#loc218 = loc(fused[#loc29, #loc28])
#loc219 = loc(fused[#loc30, #loc31])
#loc220 = loc(fused[#loc32, #loc33])
#loc221 = loc(fused[#loc34, #loc31])
#loc222 = loc(fused[#loc39, #loc38])
#loc223 = loc(fused[#loc44, #loc43])
#loc224 = loc(fused[#loc53, #loc52])
#loc225 = loc(fused[#loc55, #loc54])
#loc226 = loc(fused[#loc59, #loc58])
#loc227 = loc(fused[#loc66, #loc67])
#loc228 = loc(fused[#loc68, #loc69])
#loc229 = loc(fused[#loc70, #loc71, #loc72, #loc67])
#loc230 = loc(fused[#loc75, #loc76])
#loc231 = loc(fused[#loc77, #loc78])
#loc232 = loc(fused[#loc79, #loc80])
#loc233 = loc(fused[#loc81, #loc82])
#loc234 = loc(fused[#loc83, #loc84])
#loc235 = loc(fused[#loc86, #loc85])
#loc236 = loc(fused[#loc87, #loc88])
#loc237 = loc(fused[#loc89, #loc90])
#loc238 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc239 = loc(fused[#loc96, #loc97])
#loc240 = loc(fused[#loc94, #loc98])
#loc241 = loc(fused[#loc99, #loc98])
#loc242 = loc(fused[#loc100, #loc101])
#loc243 = loc(fused[#loc102, #loc103])
#loc244 = loc(fused[#loc104, #loc101])
#loc245 = loc(fused[#loc109, #loc108])
#loc246 = loc(fused[#loc113, #loc112])
#loc247 = loc(fused[#loc122, #loc123])
#loc248 = loc(fused[#loc120, #loc124])
#loc249 = loc(fused[#loc125, #loc124])
#loc250 = loc(fused[#loc126, #loc127])
#loc251 = loc(fused[#loc128, #loc129])
#loc252 = loc(fused[#loc130, #loc127])
#loc253 = loc(fused[#loc135, #loc134])
#loc254 = loc(fused[#loc139, #loc138])
#loc255 = loc(fused[#loc146, #loc147])
#loc256 = loc(fused[#loc148, #loc149])
#loc257 = loc(fused[#loc150, #loc151, #loc152, #loc147])
#loc258 = loc(fused[#loc157, #loc158])
#loc259 = loc(fused[#loc159, #loc160])
#loc260 = loc(fused[#loc162, #loc161])
#loc261 = loc(fused[#loc163, #loc164])
#loc262 = loc(fused[#loc165, #loc166])
#loc263 = loc(fused[#loc167, #loc168, #loc169, #loc164])
#loc264 = loc(fused[#loc171, #loc170])
#loc265 = loc(fused[#loc173, #loc172])
#loc266 = loc(fused[#loc177, #loc176])
#loc267 = loc(fused[#loc185, #loc184])
#loc268 = loc(fused[#loc187, #loc186])
#loc269 = loc(fused[#loc191, #loc190])
#loc270 = loc(fused[#loc198, #loc199])
#loc271 = loc(fused[#loc200, #loc201])
#loc272 = loc(fused[#loc202, #loc203, #loc204, #loc199])
