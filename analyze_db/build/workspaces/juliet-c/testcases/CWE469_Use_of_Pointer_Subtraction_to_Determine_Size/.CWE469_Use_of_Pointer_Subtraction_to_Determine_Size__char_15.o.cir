!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.good2.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc128)
  cir.global "private" constant cir_private @__const.good1.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc129)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string2 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc130)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc131)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc132)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc133)
  cir.func private @printUnsignedLine(!u32i) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc22)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc131)
            %2 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string2"] {alignment = 1 : i64} loc(#loc130)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc139)
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc140)
            %5 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc131)
            cir.copy %5 to %1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc131)
            %6 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_bad.string2 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc130)
            cir.copy %6 to %2 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc130)
            %7 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc30)
            %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc31)
            %9 = cir.const #cir.int<47> : !s32i loc(#loc32)
            %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc30)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
            cir.scope {
              %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
              cir.if %20 {
                %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc40)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc41)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
              } loc(#loc144)
            } loc(#loc142)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc43)
            %13 = cir.ptr_diff(%11, %12) : !cir.ptr<!s8i> -> !s64i loc(#loc145)
            %14 = cir.cast(integral, %13 : !s64i), !u64i loc(#loc145)
            cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc146)
            %15 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %16 = cir.cast(integral, %15 : !u64i), !u32i loc(#loc46)
            cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc47)
          } loc(#loc138)
          cir.break loc(#loc48)
        } loc(#loc23)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc17)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc17)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc50)
          cir.break loc(#loc51)
        } loc(#loc49)
        cir.yield loc(#loc20)
      } loc(#loc20)
    } loc(#loc137)
    cir.return loc(#loc19)
  } loc(#loc136)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc147)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc62)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc65)
          cir.break loc(#loc66)
        } loc(#loc63)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc129)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc153)
            %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc154)
            %4 = cir.get_global @__const.good1.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc129)
            cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc129)
            %5 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc74)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc75)
            %7 = cir.const #cir.int<47> : !s32i loc(#loc76)
            %8 = cir.call @strchr(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc74)
            cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
            cir.scope {
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc157)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc84)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc85)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
              } loc(#loc158)
            } loc(#loc156)
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
            %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc87)
            %11 = cir.ptr_diff(%9, %10) : !cir.ptr<!s8i> -> !s64i loc(#loc159)
            %12 = cir.cast(integral, %11 : !s64i), !u64i loc(#loc159)
            cir.store %12, %3 : !u64i, !cir.ptr<!u64i> loc(#loc160)
            %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc90)
            %14 = cir.cast(integral, %13 : !u64i), !u32i loc(#loc90)
            cir.call @printUnsignedLine(%14) : (!u32i) -> () loc(#loc91)
          } loc(#loc152)
          cir.break loc(#loc92)
        } loc(#loc67)
        cir.yield loc(#loc60)
      } loc(#loc60)
    } loc(#loc151)
    cir.return loc(#loc59)
  } loc(#loc150)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc97)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc128)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc164)
            %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc165)
            %4 = cir.get_global @__const.good2.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc128)
            cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc128)
            %5 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc105)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc106)
            %7 = cir.const #cir.int<47> : !s32i loc(#loc107)
            %8 = cir.call @strchr(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc105)
            cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
            cir.scope {
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc115)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc116)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
              } loc(#loc169)
            } loc(#loc167)
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
            %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc118)
            %11 = cir.ptr_diff(%9, %10) : !cir.ptr<!s8i> -> !s64i loc(#loc170)
            %12 = cir.cast(integral, %11 : !s64i), !u64i loc(#loc170)
            cir.store %12, %3 : !u64i, !cir.ptr<!u64i> loc(#loc171)
            %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc121)
            %14 = cir.cast(integral, %13 : !u64i), !u32i loc(#loc121)
            cir.call @printUnsignedLine(%14) : (!u32i) -> () loc(#loc122)
          } loc(#loc163)
          cir.break loc(#loc123)
        } loc(#loc98)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc126)
          cir.break loc(#loc127)
        } loc(#loc124)
        cir.yield loc(#loc95)
      } loc(#loc95)
    } loc(#loc162)
    cir.return loc(#loc94)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":0:0)
#loc1 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":91:9)
#loc2 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":91:26)
#loc3 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":67:9)
#loc4 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":67:26)
#loc5 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":31:9)
#loc6 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":31:26)
#loc7 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":30:9)
#loc8 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":30:26)
#loc9 = loc("/usr/include/string.h":246:1)
#loc10 = loc("/usr/include/string.h":247:33)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":34:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":34:47)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":47:19)
#loc18 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":24:1)
#loc19 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":50:1)
#loc20 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":26:5)
#loc21 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":49:5)
#loc22 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":26:12)
#loc23 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":28:5)
#loc24 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":29:5)
#loc25 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":43:5)
#loc26 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":32:9)
#loc27 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":32:16)
#loc28 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":33:9)
#loc29 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":33:16)
#loc30 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:26)
#loc31 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:33)
#loc32 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:42)
#loc33 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:9)
#loc34 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":34:45)
#loc35 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:9)
#loc36 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":38:9)
#loc37 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:13)
#loc38 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":35:31)
#loc39 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":36:9)
#loc40 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":37:13)
#loc41 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":37:18)
#loc42 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:42)
#loc43 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:59)
#loc44 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:9)
#loc45 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":40:66)
#loc46 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":42:27)
#loc47 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":42:9)
#loc48 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":44:5)
#loc49 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":45:5)
#loc50 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":47:9)
#loc51 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":48:9)
#loc52 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":112:1)
#loc53 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":116:1)
#loc54 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":114:5)
#loc55 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":114:11)
#loc56 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":115:5)
#loc57 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":115:11)
#loc58 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":57:1)
#loc59 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":82:1)
#loc60 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":59:5)
#loc61 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":81:5)
#loc62 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":59:12)
#loc63 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":61:5)
#loc64 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":63:19)
#loc65 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":63:9)
#loc66 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":64:9)
#loc67 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":65:5)
#loc68 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":66:5)
#loc69 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":79:5)
#loc70 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":68:9)
#loc71 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":68:16)
#loc72 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":69:9)
#loc73 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":69:16)
#loc74 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:26)
#loc75 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:33)
#loc76 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:42)
#loc77 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:9)
#loc78 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":70:45)
#loc79 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:9)
#loc80 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":74:9)
#loc81 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:13)
#loc82 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":71:31)
#loc83 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":72:9)
#loc84 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":73:13)
#loc85 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":73:18)
#loc86 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:42)
#loc87 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:59)
#loc88 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:9)
#loc89 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":76:66)
#loc90 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":78:27)
#loc91 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":78:9)
#loc92 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":80:5)
#loc93 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":85:1)
#loc94 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":110:1)
#loc95 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":87:5)
#loc96 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":109:5)
#loc97 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":87:12)
#loc98 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":89:5)
#loc99 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":90:5)
#loc100 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":103:5)
#loc101 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":92:9)
#loc102 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":92:16)
#loc103 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":93:9)
#loc104 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":93:16)
#loc105 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:26)
#loc106 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:33)
#loc107 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:42)
#loc108 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:9)
#loc109 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":94:45)
#loc110 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:9)
#loc111 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":98:9)
#loc112 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:13)
#loc113 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":95:31)
#loc114 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":96:9)
#loc115 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":97:13)
#loc116 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":97:18)
#loc117 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:42)
#loc118 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:59)
#loc119 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:9)
#loc120 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":100:66)
#loc121 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":102:27)
#loc122 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":102:9)
#loc123 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":104:5)
#loc124 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":105:5)
#loc125 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":107:19)
#loc126 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":107:9)
#loc127 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_15.c":108:9)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc13, #loc14])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc18, #loc19])
#loc137 = loc(fused[#loc20, #loc21])
#loc138 = loc(fused[#loc24, #loc25])
#loc139 = loc(fused[#loc26, #loc27])
#loc140 = loc(fused[#loc28, #loc29])
#loc141 = loc(fused[#loc33, #loc34])
#loc142 = loc(fused[#loc35, #loc36])
#loc143 = loc(fused[#loc37, #loc38])
#loc144 = loc(fused[#loc39, #loc36])
#loc145 = loc(fused[#loc42, #loc43])
#loc146 = loc(fused[#loc44, #loc45])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc68, #loc69])
#loc153 = loc(fused[#loc70, #loc71])
#loc154 = loc(fused[#loc72, #loc73])
#loc155 = loc(fused[#loc77, #loc78])
#loc156 = loc(fused[#loc79, #loc80])
#loc157 = loc(fused[#loc81, #loc82])
#loc158 = loc(fused[#loc83, #loc80])
#loc159 = loc(fused[#loc86, #loc87])
#loc160 = loc(fused[#loc88, #loc89])
#loc161 = loc(fused[#loc93, #loc94])
#loc162 = loc(fused[#loc95, #loc96])
#loc163 = loc(fused[#loc99, #loc100])
#loc164 = loc(fused[#loc101, #loc102])
#loc165 = loc(fused[#loc103, #loc104])
#loc166 = loc(fused[#loc108, #loc109])
#loc167 = loc(fused[#loc110, #loc111])
#loc168 = loc(fused[#loc112, #loc113])
#loc169 = loc(fused[#loc114, #loc111])
#loc170 = loc(fused[#loc117, #loc118])
#loc171 = loc(fused[#loc119, #loc120])
