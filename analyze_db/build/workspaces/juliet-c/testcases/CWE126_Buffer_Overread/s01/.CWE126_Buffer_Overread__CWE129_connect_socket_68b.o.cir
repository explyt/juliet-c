!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE126_Buffer_Overread__CWE129_connect_socket_68_badData : !s32i {alignment = 4 : i64} loc(#loc75)
  cir.func private @printIntLine(!s32i) loc(#loc76)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_68b_badSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc79)
    %1 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_68_badData : !cir.ptr<!s32i> loc(#loc75)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc81)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc81)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc81)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc19)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc83)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc24)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc24)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc24)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc25)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc7)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc26)
        } loc(#loc84)
      } loc(#loc82)
    } loc(#loc80)
    cir.return loc(#loc9)
  } loc(#loc78)
  cir.global "private" external @CWE126_Buffer_Overread__CWE129_connect_socket_68_goodG2BData : !s32i {alignment = 4 : i64} loc(#loc85)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_68b_goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc87)
    %1 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_68_goodG2BData : !cir.ptr<!s32i> loc(#loc85)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc89)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc89)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc89)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc91)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc45)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc46)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc47)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc47)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        } loc(#loc92)
      } loc(#loc90)
    } loc(#loc88)
    cir.return loc(#loc30)
  } loc(#loc86)
  cir.global "private" external @CWE126_Buffer_Overread__CWE129_connect_socket_68_goodB2GData : !s32i {alignment = 4 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_68b_goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc95)
    %1 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_68_goodB2GData : !cir.ptr<!s32i> loc(#loc93)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc97)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc97)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc97)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc63)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc99)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc66)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc100)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc64)
            cir.yield %13 : !cir.bool loc(#loc64)
          }, false {
            %13 = cir.const #false loc(#loc64)
            cir.yield %13 : !cir.bool loc(#loc64)
          }) : (!cir.bool) -> !cir.bool loc(#loc64)
          cir.yield %12 : !cir.bool loc(#loc64)
        }, false {
          %9 = cir.const #false loc(#loc64)
          cir.yield %9 : !cir.bool loc(#loc64)
        }) : (!cir.bool) -> !cir.bool loc(#loc64)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc72)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc72)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc73)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc51)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc51)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
        } loc(#loc101)
      } loc(#loc98)
    } loc(#loc96)
    cir.return loc(#loc53)
  } loc(#loc94)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":42:1)
#loc2 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":42:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":61:23)
#loc8 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":48:1)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":64:1)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":50:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":50:16)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":51:5)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":63:5)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":52:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":52:30)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":55:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":62:9)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":55:13)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":55:21)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":56:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":58:9)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":60:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":57:33)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":57:26)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":57:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":61:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":43:1)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":43:12)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":71:1)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":87:1)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":73:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":73:16)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":74:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":86:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":75:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":75:30)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":78:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":85:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":78:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":78:21)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":79:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":81:9)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":83:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":80:33)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":80:26)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":80:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":84:23)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":84:13)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":44:1)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":44:12)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":102:23)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":90:1)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":105:1)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":92:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":92:16)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":93:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":104:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":94:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":94:30)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":96:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":103:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":96:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":96:21)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":96:23)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":96:26)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":96:34)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":96:36)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":97:9)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":99:9)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":101:9)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":98:33)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":98:26)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":98:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_68b.c":102:13)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc8, #loc9])
#loc79 = loc(fused[#loc10, #loc11])
#loc80 = loc(fused[#loc12, #loc13])
#loc81 = loc(fused[#loc14, #loc15])
#loc82 = loc(fused[#loc16, #loc17])
#loc83 = loc(fused[#loc18, #loc19])
#loc84 = loc(fused[#loc20, #loc21, #loc22, #loc17])
#loc85 = loc(fused[#loc27, #loc28])
#loc86 = loc(fused[#loc29, #loc30])
#loc87 = loc(fused[#loc31, #loc32])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc35, #loc36])
#loc90 = loc(fused[#loc37, #loc38])
#loc91 = loc(fused[#loc39, #loc40])
#loc92 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc93 = loc(fused[#loc49, #loc50])
#loc94 = loc(fused[#loc52, #loc53])
#loc95 = loc(fused[#loc54, #loc55])
#loc96 = loc(fused[#loc56, #loc57])
#loc97 = loc(fused[#loc58, #loc59])
#loc98 = loc(fused[#loc60, #loc61])
#loc99 = loc(fused[#loc62, #loc63])
#loc100 = loc(fused[#loc65, #loc67])
#loc101 = loc(fused[#loc68, #loc69, #loc70, #loc61])
