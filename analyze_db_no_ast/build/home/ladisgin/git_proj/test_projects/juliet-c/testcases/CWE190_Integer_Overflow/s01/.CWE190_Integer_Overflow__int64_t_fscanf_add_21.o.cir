!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":26:21)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":26:29)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":58:26)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":58:34)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":91:26)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":91:34)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":119:25)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":119:33)
#loc169 = loc(fused[#loc13, #loc14])
#loc185 = loc(fused[#loc55, #loc56])
#loc199 = loc(fused[#loc97, #loc98])
#loc213 = loc(fused[#loc137, #loc138])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc163)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc164)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc165)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc166)
  cir.func private  @printLongLongLine(!s64i) loc(#loc167)
  cir.func internal private  @badSink(%arg0: !s64i loc(fused[#loc13, #loc14])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc169)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc15)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc166)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc18)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc173)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc24)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc23)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc23)
          %8 = cir.binop(add, %5, %7) nsw : !s64i loc(#loc24)
          cir.store %8, %4 : !s64i, !cir.ptr<!s64i> loc(#loc173)
          %9 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc25)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc26)
        } loc(#loc172)
      } loc(#loc171)
    } loc(#loc170)
    cir.return loc(#loc12)
  } loc(#loc168)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_add_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc31)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc176)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc33)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc165)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc165)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc33)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %9 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc166)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc37)
    cir.call @badSink(%10) : (!s64i) -> () loc(#loc38)
    cir.return loc(#loc28)
  } loc(#loc174)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_add_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc40)
  } loc(#loc178)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc182)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc183)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc52)
  cir.func internal private  @goodB2G1Sink(%arg0: !s64i loc(fused[#loc55, #loc56])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc185)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc57)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc182)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc60)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc67)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc68)
          %6 = cir.cmp(lt, %4, %5) : !s64i, !s32i loc(#loc189)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc69)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc191)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc75)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc74)
            %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc74)
            %12 = cir.binop(add, %9, %11) nsw : !s64i loc(#loc75)
            cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc191)
            %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc76)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc77)
          } else {
            %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc52)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc52)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc78)
          } loc(#loc190)
        } loc(#loc188)
      } loc(#loc187)
    } loc(#loc186)
    cir.return loc(#loc54)
  } loc(#loc184)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc83)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc194)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc85)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc195)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc195)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc85)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %9 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc182)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc91)
    cir.call @goodB2G1Sink(%10) : (!s64i) -> () loc(#loc92)
    cir.return loc(#loc80)
  } loc(#loc192)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc197)
  cir.func internal private  @goodB2G2Sink(%arg0: !s64i loc(fused[#loc97, #loc98])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc99)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc197)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc102)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc106)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc107)
          %6 = cir.cmp(lt, %4, %5) : !s64i, !s32i loc(#loc203)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc108)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc205)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc114)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc113)
            %12 = cir.binop(add, %9, %11) nsw : !s64i loc(#loc114)
            cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc205)
            %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc115)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc116)
          } else {
            %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc117)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc117)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          } loc(#loc204)
        } loc(#loc202)
      } loc(#loc201)
    } loc(#loc200)
    cir.return loc(#loc96)
  } loc(#loc198)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc123)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc208)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc125)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc126)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc209)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc209)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc125)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %9 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc197)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc131)
    cir.call @goodB2G2Sink(%10) : (!s64i) -> () loc(#loc132)
    cir.return loc(#loc120)
  } loc(#loc206)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.func internal private  @goodG2BSink(%arg0: !s64i loc(fused[#loc137, #loc138])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc139)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc211)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc142)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc217)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc148)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc147)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc147)
          %8 = cir.binop(add, %5, %7) nsw : !s64i loc(#loc148)
          cir.store %8, %4 : !s64i, !cir.ptr<!s64i> loc(#loc217)
          %9 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc149)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc150)
        } loc(#loc216)
      } loc(#loc215)
    } loc(#loc214)
    cir.return loc(#loc136)
  } loc(#loc212)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc155)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc220)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc157)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc157)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc221)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc211)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc161)
    cir.call @goodG2BSink(%6) : (!s64i) -> () loc(#loc162)
    cir.return loc(#loc152)
  } loc(#loc218)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":43:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":43:24)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":24:1)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":24:24)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":26:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":36:1)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":27:1)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":28:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":35:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":28:8)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":29:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":30:9)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":34:9)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":32:13)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":32:37)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":32:30)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":33:31)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":33:13)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":38:1)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":46:1)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":40:5)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":40:13)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":41:12)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":41:5)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":43:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":43:13)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":44:17)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":44:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":45:13)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":45:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":141:1)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":146:1)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":143:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":143:14)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":144:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":144:14)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":145:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":145:13)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":53:1)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":53:29)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":63:19)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":75:23)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":58:1)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":78:1)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":59:1)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":60:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":77:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":60:8)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":61:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":64:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":66:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":63:9)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":68:9)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":76:9)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":68:13)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":68:20)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":68:18)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":69:9)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":72:9)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":74:9)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":70:13)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":70:37)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":70:30)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":71:31)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":71:13)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":75:13)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":80:1)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":88:1)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":82:5)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":82:13)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":83:12)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":83:5)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":85:5)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":85:13)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":85:20)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":85:24)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":86:22)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":86:5)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":87:18)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":87:5)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":54:1)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":54:29)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":91:1)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":106:1)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":92:1)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":93:5)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":105:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":93:8)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":94:5)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":96:9)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":104:9)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":96:13)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":96:20)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":96:18)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":97:9)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":100:9)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":102:9)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":98:13)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":98:37)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":98:30)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":99:31)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":99:13)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":103:23)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":103:13)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":108:1)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":116:1)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":110:5)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":110:13)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":111:12)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":111:5)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":113:5)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":113:13)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":113:20)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":113:24)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":114:22)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":114:5)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":115:18)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":115:5)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":55:1)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":55:28)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":119:1)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":129:1)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":120:1)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":121:5)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":128:5)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":121:8)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":122:5)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":123:9)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":127:9)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":125:13)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":125:37)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":125:30)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":126:31)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":126:13)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":131:1)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":139:1)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":133:5)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":133:13)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":134:12)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":134:5)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":136:12)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":136:5)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":137:21)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":137:5)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":138:17)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_21.c":138:5)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc11, #loc12])
#loc170 = loc(fused[#loc16, #loc17])
#loc171 = loc(fused[#loc19, #loc17])
#loc172 = loc(fused[#loc20, #loc21])
#loc173 = loc(fused[#loc22, #loc23])
#loc174 = loc(fused[#loc27, #loc28])
#loc175 = loc(fused[#loc29, #loc30])
#loc176 = loc(fused[#loc32, #loc31])
#loc177 = loc(fused[#loc36, #loc35])
#loc178 = loc(fused[#loc39, #loc40])
#loc179 = loc(fused[#loc41, #loc42])
#loc180 = loc(fused[#loc43, #loc44])
#loc181 = loc(fused[#loc45, #loc46])
#loc182 = loc(fused[#loc47, #loc48])
#loc183 = loc(fused[#loc49, #loc50])
#loc184 = loc(fused[#loc53, #loc54])
#loc186 = loc(fused[#loc58, #loc59])
#loc187 = loc(fused[#loc61, #loc62, #loc63, #loc59])
#loc188 = loc(fused[#loc65, #loc66])
#loc189 = loc(fused[#loc67, #loc68])
#loc190 = loc(fused[#loc70, #loc71, #loc72, #loc66])
#loc191 = loc(fused[#loc73, #loc74])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc84, #loc83])
#loc195 = loc(fused[#loc87, #loc88])
#loc196 = loc(fused[#loc90, #loc89])
#loc197 = loc(fused[#loc93, #loc94])
#loc198 = loc(fused[#loc95, #loc96])
#loc200 = loc(fused[#loc100, #loc101])
#loc201 = loc(fused[#loc103, #loc101])
#loc202 = loc(fused[#loc104, #loc105])
#loc203 = loc(fused[#loc106, #loc107])
#loc204 = loc(fused[#loc109, #loc110, #loc111, #loc105])
#loc205 = loc(fused[#loc112, #loc113])
#loc206 = loc(fused[#loc119, #loc120])
#loc207 = loc(fused[#loc121, #loc122])
#loc208 = loc(fused[#loc124, #loc123])
#loc209 = loc(fused[#loc127, #loc128])
#loc210 = loc(fused[#loc130, #loc129])
#loc211 = loc(fused[#loc133, #loc134])
#loc212 = loc(fused[#loc135, #loc136])
#loc214 = loc(fused[#loc140, #loc141])
#loc215 = loc(fused[#loc143, #loc141])
#loc216 = loc(fused[#loc144, #loc145])
#loc217 = loc(fused[#loc146, #loc147])
#loc218 = loc(fused[#loc151, #loc152])
#loc219 = loc(fused[#loc153, #loc154])
#loc220 = loc(fused[#loc156, #loc155])
#loc221 = loc(fused[#loc158, #loc157])
#loc222 = loc(fused[#loc160, #loc159])
