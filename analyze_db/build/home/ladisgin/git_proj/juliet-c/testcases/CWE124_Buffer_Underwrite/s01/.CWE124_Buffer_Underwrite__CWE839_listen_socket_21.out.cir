!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":47:21)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":47:25)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":428:10)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":428:14)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":428:20)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":428:32)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":161:26)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":161:30)
#loc401 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":270:26)
#loc402 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":270:30)
#loc569 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":374:25)
#loc570 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":374:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc631 = loc(fused[#loc24, #loc25])
#loc701 = loc(fused[#loc207, #loc208])
#loc702 = loc(fused[#loc209, #loc210])
#loc708 = loc(fused[#loc231, #loc232])
#loc773 = loc(fused[#loc401, #loc402])
#loc838 = loc(fused[#loc569, #loc570])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc620)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc621)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc622)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc623)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc624)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc625)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc626)
  cir.func private @close(!s32i) -> !s32i loc(#loc627)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc628)
  cir.func private @printIntLine(!s32i) loc(#loc629)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc21)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc24, #loc25])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc631)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc26)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc628)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc29)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc635)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc636)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc636)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc636)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc40)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc638)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc46)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc46)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc640)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc49)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc642)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc51)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc52)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc643)
                  cir.condition(%17) loc(#loc53)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc56)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc56)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc57)
                  } loc(#loc644)
                  cir.yield loc(#loc48)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc59)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc645)
                  cir.yield loc(#loc641)
                } loc(#loc641)
              } loc(#loc641)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc21)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc21)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc60)
            } loc(#loc639)
          } loc(#loc637)
        } loc(#loc634)
      } loc(#loc633)
    } loc(#loc632)
    cir.return loc(#loc23)
  } loc(#loc630)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc647)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc66)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc648)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc650)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc651)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc652)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc653)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc654)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc75)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc75)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc652)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc77)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc653)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc82)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc84)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc85)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc656)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc91)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc658)
            cir.if %63 {
              cir.break loc(#loc93)
            } loc(#loc659)
          } loc(#loc657)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc660)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc661)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc662)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc101)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc101)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc663)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc104)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc105)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc106)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc664)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc108)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc108)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc109)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc110)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc665)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc667)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc668)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc668)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc120)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc121)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc669)
            cir.if %67 {
              cir.break loc(#loc123)
            } loc(#loc670)
          } loc(#loc666)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc127)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc128)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc129)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc129)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc672)
            cir.if %65 {
              cir.break loc(#loc131)
            } loc(#loc673)
          } loc(#loc671)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc133)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc134)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc135)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc674)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc141)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc676)
            cir.if %63 {
              cir.break loc(#loc143)
            } loc(#loc677)
          } loc(#loc675)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc146)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc146)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc146)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc146)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc146)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc146)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc146)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc147)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc147)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc678)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc149)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc149)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc679)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc155)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc155)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc681)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc156)
              cir.yield %65 : !cir.bool loc(#loc156)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc158)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc682)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc156)
                cir.yield %69 : !cir.bool loc(#loc156)
              }, false {
                %69 = cir.const #false loc(#loc156)
                cir.yield %69 : !cir.bool loc(#loc156)
              }) : (!cir.bool) -> !cir.bool loc(#loc156)
              cir.yield %68 : !cir.bool loc(#loc156)
            }) : (!cir.bool) -> !cir.bool loc(#loc156)
            cir.if %64 {
              cir.break loc(#loc160)
            } loc(#loc683)
          } loc(#loc680)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc161)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc161)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc163)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc163)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc684)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc164)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc165)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc685)
          cir.yield loc(#loc81)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc168)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc168)
          cir.condition(%16) loc(#loc168)
        } loc(#loc655)
      } loc(#loc655)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc172)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc687)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc175)
        } loc(#loc688)
      } loc(#loc686)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc178)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc179)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc179)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc690)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc181)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc182)
        } loc(#loc691)
      } loc(#loc689)
    } loc(#loc649)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc628)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc692)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc186)
    cir.return loc(#loc62)
  } loc(#loc646)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc694)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc189)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc695)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc191)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc696)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc193)
    cir.return loc(#loc188)
  } loc(#loc693)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc697)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc698)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc699)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc204)
  cir.func @main(%arg0: !s32i loc(fused[#loc207, #loc208]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc209, #loc210])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc701)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc702)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc206)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc211)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc212)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc213)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc213)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc214)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc201)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_listen_socket_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc703)
    cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_21_good() : () -> () loc(#loc216)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc202)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc218)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc203)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_listen_socket_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc704)
    cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_21_bad() : () -> () loc(#loc220)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc204)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc223)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc705)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc705)
    cir.return %17 : !s32i loc(#loc705)
  } loc(#loc700)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc706)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc228)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc231, #loc232])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc708)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc706)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc236)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc236)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc227)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc227)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc240)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc712)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc713)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc713)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc713)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc250)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc715)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc253)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc716)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc251)
                cir.yield %15 : !cir.bool loc(#loc251)
              }, false {
                %15 = cir.const #false loc(#loc251)
                cir.yield %15 : !cir.bool loc(#loc251)
              }) : (!cir.bool) -> !cir.bool loc(#loc251)
              cir.yield %14 : !cir.bool loc(#loc251)
            }, false {
              %11 = cir.const #false loc(#loc251)
              cir.yield %11 : !cir.bool loc(#loc251)
            }) : (!cir.bool) -> !cir.bool loc(#loc251)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc258)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc260)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc260)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc718)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc263)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc720)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc265)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc266)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc721)
                  cir.condition(%18) loc(#loc267)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc270)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc270)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc271)
                  } loc(#loc722)
                  cir.yield loc(#loc262)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc273)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc723)
                  cir.yield loc(#loc719)
                } loc(#loc719)
              } loc(#loc719)
            } else {
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc228)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc228)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc274)
            } loc(#loc717)
          } loc(#loc714)
        } loc(#loc711)
      } loc(#loc710)
    } loc(#loc709)
    cir.return loc(#loc230)
  } loc(#loc707)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc725)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc280)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc726)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc728)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc729)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc730)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc731)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc732)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc289)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc289)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc730)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc291)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc291)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc731)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc296)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc297)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc298)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc299)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc734)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc304)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc305)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc305)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc736)
            cir.if %63 {
              cir.break loc(#loc307)
            } loc(#loc737)
          } loc(#loc735)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc738)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc310)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc739)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc740)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc315)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc315)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc741)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc317)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc317)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc105)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc106)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc742)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc319)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc319)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc320)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc110)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc743)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc325)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc745)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc746)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc746)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc330)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc331)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc331)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc747)
            cir.if %67 {
              cir.break loc(#loc333)
            } loc(#loc748)
          } loc(#loc744)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc336)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc337)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc338)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc339)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc339)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc750)
            cir.if %65 {
              cir.break loc(#loc341)
            } loc(#loc751)
          } loc(#loc749)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc342)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc343)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc344)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc345)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc752)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc350)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc351)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc351)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc754)
            cir.if %63 {
              cir.break loc(#loc353)
            } loc(#loc755)
          } loc(#loc753)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc354)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc355)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc355)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc356)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc356)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc356)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc356)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc356)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc356)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc356)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc357)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc357)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc756)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc358)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc359)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc359)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc757)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc364)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc365)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc365)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc759)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc366)
              cir.yield %65 : !cir.bool loc(#loc366)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc368)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc760)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc366)
                cir.yield %69 : !cir.bool loc(#loc366)
              }, false {
                %69 = cir.const #false loc(#loc366)
                cir.yield %69 : !cir.bool loc(#loc366)
              }) : (!cir.bool) -> !cir.bool loc(#loc366)
              cir.yield %68 : !cir.bool loc(#loc366)
            }) : (!cir.bool) -> !cir.bool loc(#loc366)
            cir.if %64 {
              cir.break loc(#loc370)
            } loc(#loc761)
          } loc(#loc758)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc371)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc371)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc372)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc373)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc373)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc762)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc374)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc375)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc763)
          cir.yield loc(#loc295)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc378)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc378)
          cir.condition(%16) loc(#loc378)
        } loc(#loc733)
      } loc(#loc733)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc381)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc382)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc382)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc765)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc384)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc385)
        } loc(#loc766)
      } loc(#loc764)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc388)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc389)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc389)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc768)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc391)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc392)
        } loc(#loc769)
      } loc(#loc767)
    } loc(#loc727)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc393)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc706)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc770)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc396)
    cir.return loc(#loc276)
  } loc(#loc724)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc771)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc401, #loc402])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc773)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc771)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc406)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc406)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc777)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc778)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc778)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc778)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc416)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc417)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc780)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc419)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc420)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc781)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc418)
                cir.yield %15 : !cir.bool loc(#loc418)
              }, false {
                %15 = cir.const #false loc(#loc418)
                cir.yield %15 : !cir.bool loc(#loc418)
              }) : (!cir.bool) -> !cir.bool loc(#loc418)
              cir.yield %14 : !cir.bool loc(#loc418)
            }, false {
              %11 = cir.const #false loc(#loc418)
              cir.yield %11 : !cir.bool loc(#loc418)
            }) : (!cir.bool) -> !cir.bool loc(#loc418)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc425)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc426)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc427)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc427)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc783)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc430)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc785)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc433)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc786)
                  cir.condition(%18) loc(#loc434)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc436)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc437)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc437)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc437)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc438)
                  } loc(#loc787)
                  cir.yield loc(#loc429)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc439)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc440)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc788)
                  cir.yield loc(#loc784)
                } loc(#loc784)
              } loc(#loc784)
            } else {
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc441)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc441)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc442)
            } loc(#loc782)
          } loc(#loc779)
        } loc(#loc776)
      } loc(#loc775)
    } loc(#loc774)
    cir.return loc(#loc400)
  } loc(#loc772)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc790)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc447)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc448)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc791)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc793)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc794)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc795)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc796)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc797)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc457)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc457)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc795)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc459)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc459)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc796)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc464)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc465)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc466)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc467)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc799)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc472)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc473)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc473)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc801)
            cir.if %63 {
              cir.break loc(#loc475)
            } loc(#loc802)
          } loc(#loc800)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc803)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc478)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc804)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc805)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc483)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc483)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc806)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc485)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc485)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc105)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc106)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc807)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc487)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc487)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc488)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc110)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc808)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc493)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc810)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc811)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc811)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc498)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc499)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc499)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc812)
            cir.if %67 {
              cir.break loc(#loc501)
            } loc(#loc813)
          } loc(#loc809)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc504)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc505)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc506)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc507)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc507)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc815)
            cir.if %65 {
              cir.break loc(#loc509)
            } loc(#loc816)
          } loc(#loc814)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc510)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc511)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc512)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc513)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc817)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc518)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc519)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc519)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc819)
            cir.if %63 {
              cir.break loc(#loc521)
            } loc(#loc820)
          } loc(#loc818)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc522)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc523)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc523)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc524)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc524)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc524)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc524)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc524)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc524)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc524)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc525)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc525)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc821)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc526)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc527)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc527)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc822)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc532)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc533)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc533)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc824)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc534)
              cir.yield %65 : !cir.bool loc(#loc534)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc535)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc536)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc825)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc534)
                cir.yield %69 : !cir.bool loc(#loc534)
              }, false {
                %69 = cir.const #false loc(#loc534)
                cir.yield %69 : !cir.bool loc(#loc534)
              }) : (!cir.bool) -> !cir.bool loc(#loc534)
              cir.yield %68 : !cir.bool loc(#loc534)
            }) : (!cir.bool) -> !cir.bool loc(#loc534)
            cir.if %64 {
              cir.break loc(#loc538)
            } loc(#loc826)
          } loc(#loc823)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc539)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc539)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc540)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc541)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc541)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc827)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc542)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc543)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc828)
          cir.yield loc(#loc463)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc546)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc546)
          cir.condition(%16) loc(#loc546)
        } loc(#loc798)
      } loc(#loc798)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc549)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc550)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc550)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc830)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc552)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc553)
        } loc(#loc831)
      } loc(#loc829)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc556)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc557)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc557)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc833)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc559)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc560)
        } loc(#loc834)
      } loc(#loc832)
    } loc(#loc792)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc561)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc771)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc835)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc563)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc564)
    cir.return loc(#loc444)
  } loc(#loc789)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc836)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc569, #loc570])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc838)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc571)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc836)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc574)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc574)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc842)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc843)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc843)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc843)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc584)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc585)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc845)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc589)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc590)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc591)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc591)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc847)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc594)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc849)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc596)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc597)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc850)
                  cir.condition(%17) loc(#loc598)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc600)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc601)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc601)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc601)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc602)
                  } loc(#loc851)
                  cir.yield loc(#loc593)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc603)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc604)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc852)
                  cir.yield loc(#loc848)
                } loc(#loc848)
              } loc(#loc848)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc605)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc605)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc606)
            } loc(#loc846)
          } loc(#loc844)
        } loc(#loc841)
      } loc(#loc840)
    } loc(#loc839)
    cir.return loc(#loc568)
  } loc(#loc837)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc854)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc611)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc612)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc855)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc614)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc856)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc616)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc836)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc857)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc618)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc619)
    cir.return loc(#loc608)
  } loc(#loc853)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":45:1)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":45:24)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":67:27)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":47:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":71:1)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":48:1)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":49:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":70:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":49:8)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":50:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":51:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":69:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":52:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":52:17)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":53:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":53:34)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":56:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":68:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":56:17)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":56:24)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":57:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":64:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":66:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":58:32)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":58:24)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":58:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":63:17)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:25)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:21)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:28)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:32)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:30)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":61:17)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":62:41)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":62:34)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":62:21)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:37)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":60:36)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":67:17)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":73:1)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":149:1)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":75:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":75:9)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":77:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":77:12)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":77:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":78:5)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":146:5)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":83:9)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":83:13)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":84:9)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":84:28)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":85:9)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":85:31)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":86:9)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":86:31)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":87:9)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":87:41)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":88:9)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":131:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":98:35)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":98:44)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":98:57)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":98:28)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":98:13)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":98:68)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":99:13)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":102:13)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":99:17)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":99:33)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":100:13)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":101:17)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":103:20)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":103:21)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":103:30)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":103:33)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":103:47)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":103:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":103:48)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":104:34)
#loc102 = loc("/usr/include/netinet/in.h":249:5)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":104:13)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":105:39)
#loc105 = loc("/usr/include/netinet/in.h":251:20)
#loc106 = loc("/usr/include/netinet/in.h":33:15)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":105:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":106:38)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":106:32)
#loc110 = loc("/usr/include/netinet/in.h":250:15)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":106:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":106:46)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":110:13)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:22)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:54)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:55)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:64)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:78)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:17)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":107:84)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":108:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":109:17)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":111:13)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":114:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":111:24)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":111:38)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":111:17)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":111:57)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":112:13)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":113:17)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":115:35)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":115:49)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":115:55)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":115:28)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":115:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":115:59)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":116:13)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":119:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":116:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":116:33)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":117:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":118:17)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:31)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:45)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:58)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:76)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:79)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:26)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":121:80)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":122:13)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":125:13)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":122:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":122:31)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":122:44)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":122:47)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":122:61)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":123:13)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":124:17)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":127:39)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":127:25)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":127:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":129:25)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":129:20)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":129:13)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":129:36)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":131:16)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":132:9)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":135:9)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":132:13)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":132:29)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":133:9)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":134:26)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":134:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":136:9)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":139:9)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":136:13)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":136:29)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":137:9)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":138:26)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":138:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":147:17)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":147:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":148:13)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":148:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":412:1)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":417:1)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":414:5)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":414:14)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":415:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":415:14)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":416:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":416:13)
#loc195 = loc("/usr/include/stdlib.h":575:1)
#loc196 = loc("/usr/include/stdlib.h":575:41)
#loc197 = loc("/usr/include/time.h":76:1)
#loc198 = loc("/usr/include/time.h":76:38)
#loc199 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc200 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":433:15)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":435:15)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":438:15)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":440:15)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":428:1)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":443:1)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":429:1)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":431:27)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":431:22)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":431:5)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":433:5)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":434:5)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":434:60)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":435:5)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":438:5)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":439:5)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":439:59)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":440:5)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":442:12)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":442:5)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":156:1)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":156:29)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":166:19)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":185:27)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":161:1)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":189:1)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":162:1)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":163:5)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":188:5)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":163:8)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":164:5)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":167:5)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":169:5)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":166:9)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":170:9)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":187:9)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":171:13)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":171:17)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":172:13)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":172:34)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":174:13)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":186:13)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":174:17)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":174:25)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":174:27)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":174:30)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":174:38)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":174:40)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":175:13)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":182:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":184:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":176:32)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":176:24)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":176:17)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:17)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":181:17)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:25)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:21)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:28)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:32)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:30)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":179:17)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":180:41)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":180:34)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":180:21)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:37)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":178:36)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":185:17)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":191:1)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":267:1)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":193:5)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":193:9)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":195:13)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":195:12)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":195:5)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":196:5)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":264:5)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":201:9)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":201:13)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":202:9)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":202:28)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":203:9)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":203:31)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":204:9)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":204:31)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":205:9)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":205:41)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":206:9)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":249:17)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":216:35)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":216:44)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":216:57)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":216:28)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":216:13)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":216:68)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":217:13)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":220:13)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":217:17)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":217:33)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":218:13)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":219:17)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":221:20)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":221:21)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":221:30)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":221:33)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":221:47)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":221:13)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":221:48)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":222:34)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":222:13)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":223:39)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":223:13)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":224:38)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":224:32)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":224:13)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":224:46)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:13)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":228:13)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:22)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:54)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:55)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:64)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:78)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:17)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":225:84)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":226:13)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":227:17)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":229:13)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":232:13)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":229:24)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":229:38)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":229:17)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":229:57)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":230:13)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":231:17)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":233:35)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":233:49)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":233:55)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":233:28)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":233:13)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":233:59)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":234:13)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":237:13)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":234:17)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":234:33)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":235:13)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":236:17)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:31)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:45)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:58)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:76)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:79)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:26)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:13)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":239:80)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":240:13)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":243:13)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":240:17)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":240:31)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":240:44)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":240:47)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":240:61)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":241:13)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":242:17)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":245:39)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":245:25)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":245:13)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":247:25)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":247:20)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":247:13)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":247:36)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":249:16)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":250:9)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":253:9)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":250:13)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":250:29)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":251:9)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":252:26)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":252:13)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":254:9)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":257:9)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":254:13)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":254:29)
#loc390 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":255:9)
#loc391 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":256:26)
#loc392 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":256:13)
#loc393 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":265:22)
#loc394 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":265:5)
#loc395 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":266:18)
#loc396 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":266:5)
#loc397 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":157:1)
#loc398 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":157:29)
#loc399 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":270:1)
#loc400 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":293:1)
#loc403 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":271:1)
#loc404 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":272:5)
#loc405 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":292:5)
#loc406 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":272:8)
#loc407 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":273:5)
#loc408 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":274:9)
#loc409 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":291:9)
#loc410 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":275:13)
#loc411 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":275:17)
#loc412 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":276:13)
#loc413 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":276:34)
#loc414 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":278:13)
#loc415 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":290:13)
#loc416 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":278:17)
#loc417 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":278:25)
#loc418 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":278:27)
#loc419 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":278:30)
#loc420 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":278:38)
#loc421 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":278:40)
#loc422 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":279:13)
#loc423 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":286:13)
#loc424 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":288:13)
#loc425 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":280:32)
#loc426 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":280:24)
#loc427 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":280:17)
#loc428 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:17)
#loc429 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":285:17)
#loc430 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:25)
#loc431 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:21)
#loc432 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:28)
#loc433 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:32)
#loc434 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:30)
#loc435 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":283:17)
#loc436 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":284:41)
#loc437 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":284:34)
#loc438 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":284:21)
#loc439 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:37)
#loc440 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":282:36)
#loc441 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":289:27)
#loc442 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":289:17)
#loc443 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":295:1)
#loc444 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":371:1)
#loc445 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":297:5)
#loc446 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":297:9)
#loc447 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":299:13)
#loc448 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":299:12)
#loc449 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":299:5)
#loc450 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":300:5)
#loc451 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":368:5)
#loc452 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":305:9)
#loc453 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":305:13)
#loc454 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":306:9)
#loc455 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":306:28)
#loc456 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":307:9)
#loc457 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":307:31)
#loc458 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":308:9)
#loc459 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":308:31)
#loc460 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":309:9)
#loc461 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":309:41)
#loc462 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":310:9)
#loc463 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":353:17)
#loc464 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":320:35)
#loc465 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":320:44)
#loc466 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":320:57)
#loc467 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":320:28)
#loc468 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":320:13)
#loc469 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":320:68)
#loc470 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":321:13)
#loc471 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":324:13)
#loc472 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":321:17)
#loc473 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":321:33)
#loc474 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":322:13)
#loc475 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":323:17)
#loc476 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":325:20)
#loc477 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":325:21)
#loc478 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":325:30)
#loc479 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":325:33)
#loc480 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":325:47)
#loc481 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":325:13)
#loc482 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":325:48)
#loc483 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":326:34)
#loc484 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":326:13)
#loc485 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":327:39)
#loc486 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":327:13)
#loc487 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":328:38)
#loc488 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":328:32)
#loc489 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":328:13)
#loc490 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":328:46)
#loc491 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:13)
#loc492 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":332:13)
#loc493 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:22)
#loc494 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:54)
#loc495 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:55)
#loc496 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:64)
#loc497 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:78)
#loc498 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:17)
#loc499 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":329:84)
#loc500 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":330:13)
#loc501 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":331:17)
#loc502 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":333:13)
#loc503 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":336:13)
#loc504 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":333:24)
#loc505 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":333:38)
#loc506 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":333:17)
#loc507 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":333:57)
#loc508 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":334:13)
#loc509 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":335:17)
#loc510 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":337:35)
#loc511 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":337:49)
#loc512 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":337:55)
#loc513 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":337:28)
#loc514 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":337:13)
#loc515 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":337:59)
#loc516 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":338:13)
#loc517 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":341:13)
#loc518 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":338:17)
#loc519 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":338:33)
#loc520 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":339:13)
#loc521 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":340:17)
#loc522 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:31)
#loc523 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:45)
#loc524 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:58)
#loc525 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:76)
#loc526 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:79)
#loc527 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:26)
#loc528 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:13)
#loc529 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":343:80)
#loc530 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":344:13)
#loc531 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":347:13)
#loc532 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":344:17)
#loc533 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":344:31)
#loc534 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":344:44)
#loc535 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":344:47)
#loc536 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":344:61)
#loc537 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":345:13)
#loc538 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":346:17)
#loc539 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":349:39)
#loc540 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":349:25)
#loc541 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":349:13)
#loc542 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":351:25)
#loc543 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":351:20)
#loc544 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":351:13)
#loc545 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":351:36)
#loc546 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":353:16)
#loc547 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":354:9)
#loc548 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":357:9)
#loc549 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":354:13)
#loc550 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":354:29)
#loc551 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":355:9)
#loc552 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":356:26)
#loc553 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":356:13)
#loc554 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":358:9)
#loc555 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":361:9)
#loc556 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":358:13)
#loc557 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":358:29)
#loc558 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":359:9)
#loc559 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":360:26)
#loc560 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":360:13)
#loc561 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":369:22)
#loc562 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":369:5)
#loc563 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":370:18)
#loc564 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":370:5)
#loc565 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":158:1)
#loc566 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":158:28)
#loc567 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":374:1)
#loc568 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":398:1)
#loc571 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":375:1)
#loc572 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":376:5)
#loc573 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":397:5)
#loc574 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":376:8)
#loc575 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":377:5)
#loc576 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":378:9)
#loc577 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":396:9)
#loc578 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":379:13)
#loc579 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":379:17)
#loc580 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":380:13)
#loc581 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":380:34)
#loc582 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":383:13)
#loc583 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":395:13)
#loc584 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":383:17)
#loc585 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":383:24)
#loc586 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":384:13)
#loc587 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":391:13)
#loc588 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":393:13)
#loc589 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":385:32)
#loc590 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":385:24)
#loc591 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":385:17)
#loc592 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:17)
#loc593 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":390:17)
#loc594 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:25)
#loc595 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:21)
#loc596 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:28)
#loc597 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:32)
#loc598 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:30)
#loc599 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":388:17)
#loc600 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":389:41)
#loc601 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":389:34)
#loc602 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":389:21)
#loc603 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:37)
#loc604 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":387:36)
#loc605 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":394:27)
#loc606 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":394:17)
#loc607 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":400:1)
#loc608 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":410:1)
#loc609 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":402:5)
#loc610 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":402:9)
#loc611 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":404:13)
#loc612 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":404:12)
#loc613 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":404:5)
#loc614 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":407:12)
#loc615 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":407:5)
#loc616 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":408:21)
#loc617 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":408:5)
#loc618 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":409:17)
#loc619 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_21.c":409:5)
#loc620 = loc(fused[#loc1, #loc2])
#loc621 = loc(fused[#loc3, #loc4])
#loc622 = loc(fused[#loc5, #loc6])
#loc623 = loc(fused[#loc7, #loc8])
#loc624 = loc(fused[#loc9, #loc10])
#loc625 = loc(fused[#loc11, #loc12])
#loc626 = loc(fused[#loc13, #loc14])
#loc627 = loc(fused[#loc15, #loc16])
#loc628 = loc(fused[#loc17, #loc18])
#loc629 = loc(fused[#loc19, #loc20])
#loc630 = loc(fused[#loc22, #loc23])
#loc632 = loc(fused[#loc27, #loc28])
#loc633 = loc(fused[#loc30, #loc28])
#loc634 = loc(fused[#loc31, #loc32])
#loc635 = loc(fused[#loc33, #loc34])
#loc636 = loc(fused[#loc35, #loc36])
#loc637 = loc(fused[#loc37, #loc38])
#loc638 = loc(fused[#loc39, #loc40])
#loc639 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc640 = loc(fused[#loc46, #loc44])
#loc641 = loc(fused[#loc47, #loc48])
#loc642 = loc(fused[#loc50, #loc49])
#loc643 = loc(fused[#loc51, #loc52])
#loc644 = loc(fused[#loc54, #loc48])
#loc645 = loc(fused[#loc59, #loc58])
#loc646 = loc(fused[#loc61, #loc62])
#loc647 = loc(fused[#loc63, #loc64])
#loc648 = loc(fused[#loc67, #loc65])
#loc649 = loc(fused[#loc68, #loc69])
#loc650 = loc(fused[#loc70, #loc71])
#loc651 = loc(fused[#loc72, #loc73])
#loc652 = loc(fused[#loc74, #loc75])
#loc653 = loc(fused[#loc76, #loc77])
#loc654 = loc(fused[#loc78, #loc79])
#loc655 = loc(fused[#loc80, #loc81])
#loc656 = loc(fused[#loc86, #loc87])
#loc657 = loc(fused[#loc88, #loc89])
#loc658 = loc(fused[#loc90, #loc91])
#loc659 = loc(fused[#loc92, #loc89])
#loc660 = loc(fused[#loc94, #loc95])
#loc661 = loc(fused[#loc97, #loc98])
#loc662 = loc(fused[#loc99, #loc100])
#loc663 = loc(fused[#loc103, #loc101])
#loc664 = loc(fused[#loc107, #loc104])
#loc665 = loc(fused[#loc111, #loc112])
#loc666 = loc(fused[#loc113, #loc114])
#loc667 = loc(fused[#loc116, #loc117])
#loc668 = loc(fused[#loc118, #loc119])
#loc669 = loc(fused[#loc120, #loc121])
#loc670 = loc(fused[#loc122, #loc114])
#loc671 = loc(fused[#loc124, #loc125])
#loc672 = loc(fused[#loc128, #loc129])
#loc673 = loc(fused[#loc130, #loc125])
#loc674 = loc(fused[#loc136, #loc137])
#loc675 = loc(fused[#loc138, #loc139])
#loc676 = loc(fused[#loc140, #loc141])
#loc677 = loc(fused[#loc142, #loc139])
#loc678 = loc(fused[#loc146, #loc147])
#loc679 = loc(fused[#loc150, #loc151])
#loc680 = loc(fused[#loc152, #loc153])
#loc681 = loc(fused[#loc154, #loc155])
#loc682 = loc(fused[#loc157, #loc158])
#loc683 = loc(fused[#loc159, #loc153])
#loc684 = loc(fused[#loc163, #loc161])
#loc685 = loc(fused[#loc166, #loc167])
#loc686 = loc(fused[#loc169, #loc170])
#loc687 = loc(fused[#loc171, #loc172])
#loc688 = loc(fused[#loc173, #loc170])
#loc689 = loc(fused[#loc176, #loc177])
#loc690 = loc(fused[#loc178, #loc179])
#loc691 = loc(fused[#loc180, #loc177])
#loc692 = loc(fused[#loc184, #loc183])
#loc693 = loc(fused[#loc187, #loc188])
#loc694 = loc(fused[#loc189, #loc190])
#loc695 = loc(fused[#loc191, #loc192])
#loc696 = loc(fused[#loc193, #loc194])
#loc697 = loc(fused[#loc195, #loc196])
#loc698 = loc(fused[#loc197, #loc198])
#loc699 = loc(fused[#loc199, #loc200])
#loc700 = loc(fused[#loc205, #loc206])
#loc703 = loc(fused[#loc216, #loc217])
#loc704 = loc(fused[#loc220, #loc221])
#loc705 = loc(fused[#loc224, #loc223])
#loc706 = loc(fused[#loc225, #loc226])
#loc707 = loc(fused[#loc229, #loc230])
#loc709 = loc(fused[#loc234, #loc235])
#loc710 = loc(fused[#loc237, #loc238, #loc239, #loc235])
#loc711 = loc(fused[#loc241, #loc242])
#loc712 = loc(fused[#loc243, #loc244])
#loc713 = loc(fused[#loc245, #loc246])
#loc714 = loc(fused[#loc247, #loc248])
#loc715 = loc(fused[#loc249, #loc250])
#loc716 = loc(fused[#loc252, #loc254])
#loc717 = loc(fused[#loc255, #loc256, #loc257, #loc248])
#loc718 = loc(fused[#loc260, #loc258])
#loc719 = loc(fused[#loc261, #loc262])
#loc720 = loc(fused[#loc264, #loc263])
#loc721 = loc(fused[#loc265, #loc266])
#loc722 = loc(fused[#loc268, #loc262])
#loc723 = loc(fused[#loc273, #loc272])
#loc724 = loc(fused[#loc275, #loc276])
#loc725 = loc(fused[#loc277, #loc278])
#loc726 = loc(fused[#loc281, #loc279])
#loc727 = loc(fused[#loc282, #loc283])
#loc728 = loc(fused[#loc284, #loc285])
#loc729 = loc(fused[#loc286, #loc287])
#loc730 = loc(fused[#loc288, #loc289])
#loc731 = loc(fused[#loc290, #loc291])
#loc732 = loc(fused[#loc292, #loc293])
#loc733 = loc(fused[#loc294, #loc295])
#loc734 = loc(fused[#loc300, #loc301])
#loc735 = loc(fused[#loc302, #loc303])
#loc736 = loc(fused[#loc304, #loc305])
#loc737 = loc(fused[#loc306, #loc303])
#loc738 = loc(fused[#loc308, #loc309])
#loc739 = loc(fused[#loc311, #loc312])
#loc740 = loc(fused[#loc313, #loc314])
#loc741 = loc(fused[#loc316, #loc315])
#loc742 = loc(fused[#loc318, #loc317])
#loc743 = loc(fused[#loc321, #loc322])
#loc744 = loc(fused[#loc323, #loc324])
#loc745 = loc(fused[#loc326, #loc327])
#loc746 = loc(fused[#loc328, #loc329])
#loc747 = loc(fused[#loc330, #loc331])
#loc748 = loc(fused[#loc332, #loc324])
#loc749 = loc(fused[#loc334, #loc335])
#loc750 = loc(fused[#loc338, #loc339])
#loc751 = loc(fused[#loc340, #loc335])
#loc752 = loc(fused[#loc346, #loc347])
#loc753 = loc(fused[#loc348, #loc349])
#loc754 = loc(fused[#loc350, #loc351])
#loc755 = loc(fused[#loc352, #loc349])
#loc756 = loc(fused[#loc356, #loc357])
#loc757 = loc(fused[#loc360, #loc361])
#loc758 = loc(fused[#loc362, #loc363])
#loc759 = loc(fused[#loc364, #loc365])
#loc760 = loc(fused[#loc367, #loc368])
#loc761 = loc(fused[#loc369, #loc363])
#loc762 = loc(fused[#loc373, #loc371])
#loc763 = loc(fused[#loc376, #loc377])
#loc764 = loc(fused[#loc379, #loc380])
#loc765 = loc(fused[#loc381, #loc382])
#loc766 = loc(fused[#loc383, #loc380])
#loc767 = loc(fused[#loc386, #loc387])
#loc768 = loc(fused[#loc388, #loc389])
#loc769 = loc(fused[#loc390, #loc387])
#loc770 = loc(fused[#loc394, #loc393])
#loc771 = loc(fused[#loc397, #loc398])
#loc772 = loc(fused[#loc399, #loc400])
#loc774 = loc(fused[#loc404, #loc405])
#loc775 = loc(fused[#loc407, #loc405])
#loc776 = loc(fused[#loc408, #loc409])
#loc777 = loc(fused[#loc410, #loc411])
#loc778 = loc(fused[#loc412, #loc413])
#loc779 = loc(fused[#loc414, #loc415])
#loc780 = loc(fused[#loc416, #loc417])
#loc781 = loc(fused[#loc419, #loc421])
#loc782 = loc(fused[#loc422, #loc423, #loc424, #loc415])
#loc783 = loc(fused[#loc427, #loc425])
#loc784 = loc(fused[#loc428, #loc429])
#loc785 = loc(fused[#loc431, #loc430])
#loc786 = loc(fused[#loc432, #loc433])
#loc787 = loc(fused[#loc435, #loc429])
#loc788 = loc(fused[#loc440, #loc439])
#loc789 = loc(fused[#loc443, #loc444])
#loc790 = loc(fused[#loc445, #loc446])
#loc791 = loc(fused[#loc449, #loc447])
#loc792 = loc(fused[#loc450, #loc451])
#loc793 = loc(fused[#loc452, #loc453])
#loc794 = loc(fused[#loc454, #loc455])
#loc795 = loc(fused[#loc456, #loc457])
#loc796 = loc(fused[#loc458, #loc459])
#loc797 = loc(fused[#loc460, #loc461])
#loc798 = loc(fused[#loc462, #loc463])
#loc799 = loc(fused[#loc468, #loc469])
#loc800 = loc(fused[#loc470, #loc471])
#loc801 = loc(fused[#loc472, #loc473])
#loc802 = loc(fused[#loc474, #loc471])
#loc803 = loc(fused[#loc476, #loc477])
#loc804 = loc(fused[#loc479, #loc480])
#loc805 = loc(fused[#loc481, #loc482])
#loc806 = loc(fused[#loc484, #loc483])
#loc807 = loc(fused[#loc486, #loc485])
#loc808 = loc(fused[#loc489, #loc490])
#loc809 = loc(fused[#loc491, #loc492])
#loc810 = loc(fused[#loc494, #loc495])
#loc811 = loc(fused[#loc496, #loc497])
#loc812 = loc(fused[#loc498, #loc499])
#loc813 = loc(fused[#loc500, #loc492])
#loc814 = loc(fused[#loc502, #loc503])
#loc815 = loc(fused[#loc506, #loc507])
#loc816 = loc(fused[#loc508, #loc503])
#loc817 = loc(fused[#loc514, #loc515])
#loc818 = loc(fused[#loc516, #loc517])
#loc819 = loc(fused[#loc518, #loc519])
#loc820 = loc(fused[#loc520, #loc517])
#loc821 = loc(fused[#loc524, #loc525])
#loc822 = loc(fused[#loc528, #loc529])
#loc823 = loc(fused[#loc530, #loc531])
#loc824 = loc(fused[#loc532, #loc533])
#loc825 = loc(fused[#loc535, #loc536])
#loc826 = loc(fused[#loc537, #loc531])
#loc827 = loc(fused[#loc541, #loc539])
#loc828 = loc(fused[#loc544, #loc545])
#loc829 = loc(fused[#loc547, #loc548])
#loc830 = loc(fused[#loc549, #loc550])
#loc831 = loc(fused[#loc551, #loc548])
#loc832 = loc(fused[#loc554, #loc555])
#loc833 = loc(fused[#loc556, #loc557])
#loc834 = loc(fused[#loc558, #loc555])
#loc835 = loc(fused[#loc562, #loc561])
#loc836 = loc(fused[#loc565, #loc566])
#loc837 = loc(fused[#loc567, #loc568])
#loc839 = loc(fused[#loc572, #loc573])
#loc840 = loc(fused[#loc575, #loc573])
#loc841 = loc(fused[#loc576, #loc577])
#loc842 = loc(fused[#loc578, #loc579])
#loc843 = loc(fused[#loc580, #loc581])
#loc844 = loc(fused[#loc582, #loc583])
#loc845 = loc(fused[#loc584, #loc585])
#loc846 = loc(fused[#loc586, #loc587, #loc588, #loc583])
#loc847 = loc(fused[#loc591, #loc589])
#loc848 = loc(fused[#loc592, #loc593])
#loc849 = loc(fused[#loc595, #loc594])
#loc850 = loc(fused[#loc596, #loc597])
#loc851 = loc(fused[#loc599, #loc593])
#loc852 = loc(fused[#loc604, #loc603])
#loc853 = loc(fused[#loc607, #loc608])
#loc854 = loc(fused[#loc609, #loc610])
#loc855 = loc(fused[#loc613, #loc611])
#loc856 = loc(fused[#loc615, #loc614])
#loc857 = loc(fused[#loc617, #loc616])
