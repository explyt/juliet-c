!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":28:64)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":28:71)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":55:68)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":55:75)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":78:68)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":78:75)
#loc133 = loc(fused[#loc8, #loc9])
#loc151 = loc(fused[#loc47, #loc48])
#loc169 = loc(fused[#loc87, #loc88])
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc131)
  cir.func @CWE606_Unchecked_Loop_Condition__char_console_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc11)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc134)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc137)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc138)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc139)
      cir.scope {
        %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc25)
        %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
        %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc25)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc141)
        cir.if %16 {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc29)
          cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc143)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
            cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc145)
            cir.for : cond {
              %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc35)
              %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc36)
              %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc146)
              cir.condition(%22) loc(#loc37)
            } body {
              cir.scope {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc39)
                %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc40)
                cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc148)
              } loc(#loc147)
              cir.yield loc(#loc32)
            } step {
              %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc41)
              %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc42)
              cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc149)
              cir.yield loc(#loc144)
            } loc(#loc144)
          } loc(#loc144)
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc44)
        } loc(#loc142)
      } loc(#loc140)
    } loc(#loc136)
    cir.return loc(#loc7)
  } loc(#loc132)
  cir.func @CWE606_Unchecked_Loop_Condition__char_console_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc53)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc50)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc152)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc155)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc156)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc157)
      cir.scope {
        %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc64)
        %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc66)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc66)
        %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc64)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc67)
        %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc159)
        cir.if %16 {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc69)
          cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc161)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc73)
            cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc163)
            cir.for : cond {
              %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc164)
              cir.condition(%22) loc(#loc77)
            } body {
              cir.scope {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc80)
                cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc166)
              } loc(#loc165)
              cir.yield loc(#loc72)
            } step {
              %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc82)
              cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc167)
              cir.yield loc(#loc162)
            } loc(#loc162)
          } loc(#loc162)
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc83)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc84)
        } loc(#loc160)
      } loc(#loc158)
    } loc(#loc154)
    cir.return loc(#loc46)
  } loc(#loc150)
  cir.func @CWE606_Unchecked_Loop_Condition__char_console_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc87, #loc88])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc93)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc90)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc170)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc173)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc174)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc175)
      cir.scope {
        %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc104)
        %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc106)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc106)
        %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc104)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc107)
        %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc177)
        cir.if %16 {
          cir.scope {
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %18 = cir.const #cir.int<10000> : !s32i loc(#loc112)
            %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc180)
            cir.if %19 {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc114)
              cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc182)
              cir.scope {
                %22 = cir.const #cir.int<0> : !s32i loc(#loc118)
                cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc184)
                cir.for : cond {
                  %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                  %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc185)
                  cir.condition(%25) loc(#loc122)
                } body {
                  cir.scope {
                    %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                    %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc125)
                    cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc187)
                  } loc(#loc186)
                  cir.yield loc(#loc117)
                } step {
                  %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                  %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc127)
                  cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc188)
                  cir.yield loc(#loc183)
                } loc(#loc183)
              } loc(#loc183)
              %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc129)
            } loc(#loc181)
          } loc(#loc179)
        } loc(#loc178)
      } loc(#loc176)
    } loc(#loc172)
    cir.return loc(#loc86)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_64b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":36:26)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":28:1)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":48:1)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":31:5)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":31:34)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":33:5)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":33:28)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":29:1)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":33:21)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":33:20)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":34:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":47:5)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":35:9)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":35:13)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":35:16)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":35:19)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":36:9)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":46:9)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":36:13)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":36:20)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":36:39)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":37:9)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":39:27)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":39:13)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:13)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":44:13)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:22)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:18)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:25)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:29)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:27)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":41:13)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":43:28)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":43:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:33)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":40:32)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":45:26)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":45:13)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":55:1)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":75:1)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":58:5)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":58:34)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":60:5)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":60:28)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":56:1)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":60:21)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":60:20)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":61:5)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":74:5)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":62:9)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":62:13)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":62:16)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":62:19)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":63:9)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":73:9)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":63:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":63:20)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":63:26)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":63:39)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":64:9)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":66:27)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":66:13)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:13)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":71:13)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:22)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:18)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:25)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:29)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:27)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":68:13)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":70:28)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":70:17)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:33)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":67:32)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":72:26)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":72:13)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":78:1)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":101:1)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":81:5)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":81:34)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":83:5)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":83:28)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":79:1)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":83:21)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":83:20)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":84:5)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":100:5)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":85:9)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":85:13)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":85:16)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":85:19)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":86:9)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":99:9)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":86:13)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":86:20)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":86:26)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":86:39)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":87:9)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":89:13)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":98:13)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":89:17)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":89:21)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":90:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":91:31)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":91:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:17)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":96:17)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:26)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:22)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:29)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:33)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:31)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":93:17)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":95:32)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":95:21)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:37)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":92:36)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":97:30)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_64b.c":97:17)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc4, #loc5])
#loc132 = loc(fused[#loc6, #loc7])
#loc134 = loc(fused[#loc10, #loc11])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc19, #loc21])
#loc139 = loc(fused[#loc19, #loc22])
#loc140 = loc(fused[#loc23, #loc24])
#loc141 = loc(fused[#loc25, #loc27])
#loc142 = loc(fused[#loc28, #loc24])
#loc143 = loc(fused[#loc30, #loc29])
#loc144 = loc(fused[#loc31, #loc32])
#loc145 = loc(fused[#loc34, #loc33])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc38, #loc32])
#loc148 = loc(fused[#loc40, #loc39])
#loc149 = loc(fused[#loc42, #loc41])
#loc150 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc49, #loc50])
#loc153 = loc(fused[#loc51, #loc52])
#loc154 = loc(fused[#loc56, #loc57])
#loc155 = loc(fused[#loc58, #loc59])
#loc156 = loc(fused[#loc58, #loc60])
#loc157 = loc(fused[#loc58, #loc61])
#loc158 = loc(fused[#loc62, #loc63])
#loc159 = loc(fused[#loc64, #loc67])
#loc160 = loc(fused[#loc68, #loc63])
#loc161 = loc(fused[#loc70, #loc69])
#loc162 = loc(fused[#loc71, #loc72])
#loc163 = loc(fused[#loc74, #loc73])
#loc164 = loc(fused[#loc75, #loc76])
#loc165 = loc(fused[#loc78, #loc72])
#loc166 = loc(fused[#loc80, #loc79])
#loc167 = loc(fused[#loc82, #loc81])
#loc168 = loc(fused[#loc85, #loc86])
#loc170 = loc(fused[#loc89, #loc90])
#loc171 = loc(fused[#loc91, #loc92])
#loc172 = loc(fused[#loc96, #loc97])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc98, #loc100])
#loc175 = loc(fused[#loc98, #loc101])
#loc176 = loc(fused[#loc102, #loc103])
#loc177 = loc(fused[#loc104, #loc107])
#loc178 = loc(fused[#loc108, #loc103])
#loc179 = loc(fused[#loc109, #loc110])
#loc180 = loc(fused[#loc111, #loc112])
#loc181 = loc(fused[#loc113, #loc110])
#loc182 = loc(fused[#loc115, #loc114])
#loc183 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc119, #loc118])
#loc185 = loc(fused[#loc120, #loc121])
#loc186 = loc(fused[#loc123, #loc117])
#loc187 = loc(fused[#loc125, #loc124])
#loc188 = loc(fused[#loc127, #loc126])
