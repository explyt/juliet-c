!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc139)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc140)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc142)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc143)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc144)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc17)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc147)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc149)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc151)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc28)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc151)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc152)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc30)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc31)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc31)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc153)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc154)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc155)
        cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc156)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc39)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc158)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc41)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc43)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
          } loc(#loc159)
        } loc(#loc157)
      } loc(#loc150)
    } loc(#loc148)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc46)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc161)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc51)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc52)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc53)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc53)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc162)
    } loc(#loc160)
    cir.return loc(#loc14)
  } loc(#loc145)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc165)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc62)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc167)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc169)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc169)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc170)
      } else {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc171)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc171)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc172)
      } loc(#loc168)
    } loc(#loc166)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc76)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc174)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc81)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc82)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc82)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
      } loc(#loc175)
    } loc(#loc173)
    cir.return loc(#loc55)
  } loc(#loc163)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc178)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc91)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc180)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc96)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc97)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc97)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc182)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc183)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc184)
        cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc185)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc104)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc187)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc107)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc109)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc188)
        } loc(#loc186)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc110)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc111)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc111)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc189)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc190)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc191)
        cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc192)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc118)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc119)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc194)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc121)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc123)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
          } loc(#loc195)
        } loc(#loc193)
      } loc(#loc181)
    } loc(#loc179)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc126)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc197)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc131)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc132)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc132)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
      } else {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc133)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc134)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc134)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc84)
  } loc(#loc176)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12L7goodB2GEv() : () -> () loc(#loc137)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12L7goodG2BEv() : () -> () loc(#loc138)
    cir.return loc(#loc136)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":24:1)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":51:1)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":26:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":26:15)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":28:12)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":28:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":29:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":39:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":29:8)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":29:33)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":30:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":33:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":35:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":32:16)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":32:20)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":24:6)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":32:9)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":37:27)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":37:34)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":37:38)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":37:52)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":37:53)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":37:9)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:9)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:37)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:13)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:21)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:27)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:28)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:34)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":38:33)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":40:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":50:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":40:8)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":40:33)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":41:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":45:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":47:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":44:9)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":44:14)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":49:16)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":60:1)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":85:1)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":62:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":62:15)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":64:12)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":64:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":65:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":74:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":65:8)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":65:33)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":66:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":69:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":71:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":68:16)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":68:20)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":60:13)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":68:9)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":73:16)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":73:20)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":73:9)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":75:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":84:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":75:8)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":75:33)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":76:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":79:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":81:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":78:16)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":83:16)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":90:1)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":119:1)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":92:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":92:15)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":94:12)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":94:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":95:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":106:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":95:8)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":95:33)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":96:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":100:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":102:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":98:27)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":98:34)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":98:38)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":98:52)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":98:53)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":98:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:9)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:37)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:13)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:21)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:27)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:28)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:34)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":99:33)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":104:27)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":104:34)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":104:38)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":104:52)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":104:53)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":104:9)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:9)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:37)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:13)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:21)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:27)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:28)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:34)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":105:33)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":107:5)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":118:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":107:8)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":107:33)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":108:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":112:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":114:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":111:9)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":111:14)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":117:9)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":117:14)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":121:1)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":125:1)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":123:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_12.cpp":124:5)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc15, #loc16])
#loc147 = loc(fused[#loc18, #loc17])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc151 = loc(fused[#loc26, #loc27])
#loc152 = loc(fused[#loc29, #loc27])
#loc153 = loc(fused[#loc32, #loc33])
#loc154 = loc(fused[#loc31, #loc33])
#loc155 = loc(fused[#loc30, #loc34])
#loc156 = loc(fused[#loc35, #loc34])
#loc157 = loc(fused[#loc36, #loc37])
#loc158 = loc(fused[#loc38, #loc39])
#loc159 = loc(fused[#loc40, #loc37])
#loc160 = loc(fused[#loc44, #loc45])
#loc161 = loc(fused[#loc46, #loc47])
#loc162 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc163 = loc(fused[#loc54, #loc55])
#loc164 = loc(fused[#loc56, #loc57])
#loc165 = loc(fused[#loc59, #loc58])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc169 = loc(fused[#loc67, #loc68])
#loc170 = loc(fused[#loc70, #loc68])
#loc171 = loc(fused[#loc71, #loc72])
#loc172 = loc(fused[#loc73, #loc72])
#loc173 = loc(fused[#loc74, #loc75])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc176 = loc(fused[#loc83, #loc84])
#loc177 = loc(fused[#loc85, #loc86])
#loc178 = loc(fused[#loc88, #loc87])
#loc179 = loc(fused[#loc89, #loc90])
#loc180 = loc(fused[#loc91, #loc92])
#loc181 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc182 = loc(fused[#loc98, #loc99])
#loc183 = loc(fused[#loc97, #loc99])
#loc184 = loc(fused[#loc96, #loc100])
#loc185 = loc(fused[#loc101, #loc100])
#loc186 = loc(fused[#loc102, #loc103])
#loc187 = loc(fused[#loc104, #loc105])
#loc188 = loc(fused[#loc106, #loc103])
#loc189 = loc(fused[#loc112, #loc113])
#loc190 = loc(fused[#loc111, #loc113])
#loc191 = loc(fused[#loc110, #loc114])
#loc192 = loc(fused[#loc115, #loc114])
#loc193 = loc(fused[#loc116, #loc117])
#loc194 = loc(fused[#loc118, #loc119])
#loc195 = loc(fused[#loc120, #loc117])
#loc196 = loc(fused[#loc124, #loc125])
#loc197 = loc(fused[#loc126, #loc127])
#loc198 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc199 = loc(fused[#loc135, #loc136])
