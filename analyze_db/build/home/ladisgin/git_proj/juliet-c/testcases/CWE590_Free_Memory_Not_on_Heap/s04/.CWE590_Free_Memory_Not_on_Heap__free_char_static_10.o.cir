!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_10_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc142)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc140)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc147)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_10_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %8 = cir.const #cir.int<65> : !s32i loc(#loc21)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc22)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc26)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc27)
    %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    %20 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc15)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    cir.return loc(#loc9)
  } loc(#loc143)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc152)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc157)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc155)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb10 loc(#loc62)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc68)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc165)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc166)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc77)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc78)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb7 loc(#loc72)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %25 = cir.const #cir.int<65> : !s32i loc(#loc80)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc81)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc81)
    cir.libc.memset %29 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc85)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc87)
    %36 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    cir.store %37, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc59)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.return loc(#loc51)
  } loc(#loc158)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc102)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc140)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc106)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc179)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc111)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc181)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc182)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc186)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc122)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
    cir.br ^bb6 loc(#loc115)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc115)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
    %23 = cir.const #cir.int<65> : !s32i loc(#loc124)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc125)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc125)
    cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc129)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc131)
    %34 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    cir.store %35, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc105)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc105)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc139)
    cir.return loc(#loc97)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":31:25)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc3 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":23:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":40:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":25:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":25:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":26:12)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":26:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":27:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":36:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":27:8)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":28:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":29:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":35:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":32:20)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":32:32)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":32:37)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":32:41)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":32:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":32:42)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":33:33)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":33:24)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":33:28)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":33:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":34:20)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":34:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":37:15)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":37:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":39:10)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":39:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":101:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":105:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":103:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":103:14)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":104:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":104:14)
#loc42 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc43 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":54:19)
#loc45 = loc("/usr/include/stdlib.h":672:1)
#loc46 = loc("/usr/include/stdlib.h":672:45)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":63:27)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":47:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":74:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":60:13)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":60:64)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":49:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":49:12)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":50:12)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":50:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":51:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":70:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":51:8)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":52:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":55:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":57:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":54:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":58:9)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":69:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":60:41)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":60:48)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":60:52)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":60:63)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":61:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":65:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":61:17)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":61:31)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":62:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":63:17)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":64:17)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":64:22)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":66:20)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":66:32)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":66:37)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":66:41)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":66:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":66:42)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":67:33)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":67:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":67:24)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":67:28)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":67:29)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":68:20)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":68:13)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":71:15)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":71:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":73:10)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":73:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":77:1)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":99:1)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":85:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":85:64)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":79:5)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":79:12)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":80:12)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":80:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":81:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":95:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":81:8)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":82:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":83:9)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":94:9)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":85:41)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":85:48)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":85:52)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":85:63)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":86:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":90:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":86:17)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":86:31)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":87:13)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":88:27)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":88:17)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":89:17)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":89:22)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":91:20)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":91:32)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":91:37)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":91:41)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":91:13)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":91:42)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":92:33)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":92:13)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":92:24)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":92:28)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":92:29)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":93:20)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":93:13)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":96:15)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":96:5)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":98:10)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_10.c":98:5)
#loc140 = loc(fused[#loc2, #loc3])
#loc141 = loc(fused[#loc4, #loc5])
#loc142 = loc(fused[#loc6, #loc7])
#loc143 = loc(fused[#loc8, #loc9])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc13, #loc12])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc17, #loc15])
#loc148 = loc(fused[#loc18, #loc19])
#loc149 = loc(fused[#loc24, #loc25])
#loc150 = loc(fused[#loc29, #loc26])
#loc151 = loc(fused[#loc31, #loc30])
#loc152 = loc(fused[#loc36, #loc37])
#loc153 = loc(fused[#loc38, #loc39])
#loc154 = loc(fused[#loc40, #loc41])
#loc155 = loc(fused[#loc42, #loc43])
#loc156 = loc(fused[#loc45, #loc46])
#loc157 = loc(fused[#loc48, #loc49])
#loc158 = loc(fused[#loc50, #loc51])
#loc159 = loc(fused[#loc52, #loc53])
#loc160 = loc(fused[#loc54, #loc55])
#loc161 = loc(fused[#loc57, #loc56])
#loc162 = loc(fused[#loc58, #loc59])
#loc163 = loc(fused[#loc61, #loc62, #loc63, #loc59])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc69, #loc70])
#loc166 = loc(fused[#loc68, #loc70])
#loc167 = loc(fused[#loc67, #loc53])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc75, #loc72])
#loc171 = loc(fused[#loc83, #loc84])
#loc172 = loc(fused[#loc86, #loc85])
#loc173 = loc(fused[#loc91, #loc90])
#loc174 = loc(fused[#loc96, #loc97])
#loc175 = loc(fused[#loc98, #loc99])
#loc176 = loc(fused[#loc100, #loc101])
#loc177 = loc(fused[#loc103, #loc102])
#loc178 = loc(fused[#loc104, #loc105])
#loc179 = loc(fused[#loc107, #loc105])
#loc180 = loc(fused[#loc108, #loc109])
#loc181 = loc(fused[#loc112, #loc113])
#loc182 = loc(fused[#loc111, #loc113])
#loc183 = loc(fused[#loc110, #loc99])
#loc184 = loc(fused[#loc114, #loc115])
#loc185 = loc(fused[#loc116, #loc117])
#loc186 = loc(fused[#loc118, #loc115])
#loc187 = loc(fused[#loc127, #loc128])
#loc188 = loc(fused[#loc130, #loc129])
#loc189 = loc(fused[#loc135, #loc134])
