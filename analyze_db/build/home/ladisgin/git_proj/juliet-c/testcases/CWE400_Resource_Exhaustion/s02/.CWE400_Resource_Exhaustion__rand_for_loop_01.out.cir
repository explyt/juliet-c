!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":28:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":97:10)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":97:14)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":97:20)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":97:32)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":68:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:23)
#true = #cir.bool<true> : !cir.bool
#loc141 = loc(fused[#loc46, #loc47])
#loc142 = loc(fused[#loc48, #loc49])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc126)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc13)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc15)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %7 ^bb1, ^bb2 loc(#loc15)
  ^bb1:  // pred: ^bb0
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc15)
    %10 = cir.const #cir.int<30> : !s32i loc(#loc15)
    %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc15)
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc15)
    %14 = cir.const #cir.int<15> : !s32i loc(#loc15)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc15)
    %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc15)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc15)
    %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc15)
    cir.br ^bb3(%19 : !u32i) loc(#loc15)
  ^bb2:  // pred: ^bb0
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc15)
    %22 = cir.const #cir.int<30> : !s32i loc(#loc15)
    %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc15)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc15)
    %26 = cir.const #cir.int<15> : !s32i loc(#loc15)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc15)
    %28 = cir.binop(xor, %23, %27) : !u32i loc(#loc15)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc15)
    %31 = cir.binop(xor, %28, %30) : !u32i loc(#loc15)
    %32 = cir.unary(minus, %31) : !u32i, !u32i loc(#loc15)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc15)
    %35 = cir.binop(sub, %32, %34) : !u32i loc(#loc15)
    cir.br ^bb3(%35 : !u32i) loc(#loc15)
  ^bb3(%36: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":28:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    %37 = cir.cast(integral, %36 : !u32i), !s32i loc(#loc15)
    cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    %38 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc9)
    cir.store %39, %0 : !u64i, !cir.ptr<!u64i> loc(#loc125)
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    %40 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc21)
    cir.store %41, %0 : !u64i, !cir.ptr<!u64i> loc(#loc131)
    cir.br ^bb7 loc(#loc130)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %42 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc23)
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc24)
    %45 = cir.cmp(lt, %42, %44) : !u64i, !cir.bool loc(#loc132)
    cir.brcond %45 ^bb8, ^bb12 loc(#loc25)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc133)
  ^bb9:  // pred: ^bb8
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc20)
  ^bb11:  // pred: ^bb10
    %48 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %49 = cir.unary(inc, %48) : !u64i, !u64i loc(#loc29)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc134)
    cir.br ^bb7 loc(#loc130)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc20)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc18)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc7)
  } loc(#loc124)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc43)
  cir.func @main(%arg0: !s32i loc(fused[#loc46, #loc47]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc51)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc52)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc52)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc53)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc40)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_01_good() : () -> () loc(#loc55)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_01_bad() : () -> () loc(#loc59)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.return %17 : !s32i loc(#loc145)
  } loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc148)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc71)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc73)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc67)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc147)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc79)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc82)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc154)
    cir.brcond %12 ^bb4, ^bb8 loc(#loc83)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc85)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb6 loc(#loc78)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc78)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc88)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.br ^bb3 loc(#loc152)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc76)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc65)
  } loc(#loc146)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc159)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc96)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc98)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %7 ^bb1, ^bb2 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc98)
    %10 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc98)
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc98)
    %14 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc98)
    %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc98)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc98)
    %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc98)
    cir.br ^bb3(%19 : !u32i) loc(#loc98)
  ^bb2:  // pred: ^bb0
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc98)
    %22 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc98)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc98)
    %26 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc98)
    %28 = cir.binop(xor, %23, %27) : !u32i loc(#loc98)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc98)
    %31 = cir.binop(xor, %28, %30) : !u32i loc(#loc98)
    %32 = cir.unary(minus, %31) : !u32i, !u32i loc(#loc98)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc98)
    %35 = cir.binop(sub, %32, %34) : !u32i loc(#loc98)
    cir.br ^bb3(%35 : !u32i) loc(#loc98)
  ^bb3(%36: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":68:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // pred: ^bb3
    %37 = cir.cast(integral, %36 : !u32i), !s32i loc(#loc98)
    cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // pred: ^bb4
    %38 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc92)
    cir.store %39, %0 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb6 loc(#loc163)
  ^bb6:  // pred: ^bb5
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %42 = cir.cmp(gt, %40, %41) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %42 ^bb7, ^bb12 loc(#loc106)
  ^bb7:  // pred: ^bb6
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %44 = cir.const #cir.int<20> : !s32i loc(#loc108)
    %45 = cir.cmp(le, %43, %44) : !s32i, !cir.bool loc(#loc165)
    cir.brcond %45 ^bb8, ^bb9 loc(#loc106)
  ^bb8:  // pred: ^bb7
    %46 = cir.const #true loc(#loc106)
    cir.br ^bb10(%46 : !cir.bool) loc(#loc106)
  ^bb9:  // pred: ^bb7
    %47 = cir.const #false loc(#loc106)
    cir.br ^bb10(%47 : !cir.bool) loc(#loc106)
  ^bb10(%48: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc106)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%48 : !cir.bool) loc(#loc106)
  ^bb12:  // pred: ^bb6
    %49 = cir.const #false loc(#loc106)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc106)
  ^bb13(%50: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:23)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc106)
  ^bb14:  // pred: ^bb13
    cir.brcond %50 ^bb15, ^bb24 loc(#loc166)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc167)
  ^bb16:  // pred: ^bb15
    %51 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc112)
    cir.store %52, %0 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    cir.br ^bb17 loc(#loc167)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %53 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc114)
    %54 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc115)
    %56 = cir.cmp(lt, %53, %55) : !u64i, !cir.bool loc(#loc169)
    cir.brcond %56 ^bb18, ^bb22 loc(#loc116)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc170)
  ^bb19:  // pred: ^bb18
    %57 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc118)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb20 loc(#loc111)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc111)
  ^bb21:  // pred: ^bb20
    %59 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %60 = cir.unary(inc, %59) : !u64i, !u64i loc(#loc121)
    cir.store %60, %0 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.br ^bb17 loc(#loc167)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc111)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc103)
  ^bb24:  // 2 preds: ^bb14, ^bb23
    cir.br ^bb25 loc(#loc103)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc101)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc90)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":34:23)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":22:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":37:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":30:9)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":30:20)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":24:5)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":24:9)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":26:14)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":26:13)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":26:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":28:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":29:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":36:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:9)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":35:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:18)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:14)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:21)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:33)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:23)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":33:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":34:13)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:41)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":32:40)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":82:1)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":86:1)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":84:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":84:13)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":85:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":85:13)
#loc36 = loc("/usr/include/stdlib.h":575:1)
#loc37 = loc("/usr/include/stdlib.h":575:41)
#loc38 = loc("/usr/include/time.h":76:1)
#loc39 = loc("/usr/include/time.h":76:38)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":102:15)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":104:15)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":107:15)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":109:15)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":97:1)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":112:1)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":98:1)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":100:27)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":100:22)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":100:5)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":102:5)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":103:5)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":103:55)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":104:5)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":107:5)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":108:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":108:54)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":109:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":111:12)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":111:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":44:1)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":59:1)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":52:9)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":52:20)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":46:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":46:9)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":48:14)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":48:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":48:5)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":50:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":50:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":51:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":58:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:9)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":57:9)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:18)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:14)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:21)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:33)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:23)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":55:9)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":56:23)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":56:13)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:41)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":54:40)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":62:1)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":80:1)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":70:9)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":70:20)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":64:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":64:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":66:14)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":66:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":66:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":68:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":69:5)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":79:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:9)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":78:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:21)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:26)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":72:35)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":73:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:13)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":77:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:22)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:18)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:25)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:37)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:27)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":75:13)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":76:27)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":76:17)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:45)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_01.c":74:44)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc6, #loc7])
#loc125 = loc(fused[#loc8, #loc9])
#loc126 = loc(fused[#loc10, #loc11])
#loc127 = loc(fused[#loc14, #loc12])
#loc128 = loc(fused[#loc16, #loc15])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc19, #loc20])
#loc131 = loc(fused[#loc22, #loc21])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc26, #loc20])
#loc134 = loc(fused[#loc29, #loc28])
#loc135 = loc(fused[#loc30, #loc31])
#loc136 = loc(fused[#loc32, #loc33])
#loc137 = loc(fused[#loc34, #loc35])
#loc138 = loc(fused[#loc36, #loc37])
#loc139 = loc(fused[#loc38, #loc39])
#loc140 = loc(fused[#loc44, #loc45])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc59, #loc60])
#loc145 = loc(fused[#loc63, #loc62])
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc66, #loc67])
#loc148 = loc(fused[#loc68, #loc69])
#loc149 = loc(fused[#loc72, #loc70])
#loc150 = loc(fused[#loc74, #loc73])
#loc151 = loc(fused[#loc75, #loc76])
#loc152 = loc(fused[#loc77, #loc78])
#loc153 = loc(fused[#loc80, #loc79])
#loc154 = loc(fused[#loc81, #loc82])
#loc155 = loc(fused[#loc84, #loc78])
#loc156 = loc(fused[#loc88, #loc87])
#loc157 = loc(fused[#loc89, #loc90])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc97, #loc95])
#loc161 = loc(fused[#loc99, #loc98])
#loc162 = loc(fused[#loc100, #loc101])
#loc163 = loc(fused[#loc102, #loc103])
#loc164 = loc(fused[#loc104, #loc105])
#loc165 = loc(fused[#loc107, #loc108])
#loc166 = loc(fused[#loc109, #loc103])
#loc167 = loc(fused[#loc110, #loc111])
#loc168 = loc(fused[#loc113, #loc112])
#loc169 = loc(fused[#loc114, #loc115])
#loc170 = loc(fused[#loc117, #loc111])
#loc171 = loc(fused[#loc121, #loc120])
