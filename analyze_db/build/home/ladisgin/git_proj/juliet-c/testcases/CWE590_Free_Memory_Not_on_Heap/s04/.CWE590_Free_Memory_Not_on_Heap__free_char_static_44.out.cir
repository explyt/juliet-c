!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":23:21)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":23:28)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":93:10)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":93:14)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":93:20)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":93:32)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":52:25)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":52:32)
#loc126 = loc(fused[#loc6, #loc7])
#loc141 = loc(fused[#loc53, #loc54])
#loc142 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc124)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc6, #loc7])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc10)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc11)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc11)
    cir.return loc(#loc5)
  } loc(#loc125)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc18)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc129)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc24)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc25)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc25)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc132)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc29)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc30)
    %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc133)
    %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.br ^bb2 loc(#loc22)
  ^bb2:  // pred: ^bb1
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc35)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call %20(%21) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc35)
    cir.return loc(#loc14)
  } loc(#loc127)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc137)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_44_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.return %17 : !s32i loc(#loc145)
  } loc(#loc140)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc73, #loc74])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc78)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc78)
    cir.return loc(#loc72)
  } loc(#loc146)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc149)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc153)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc92)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc153)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc93)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc98)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc156)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc157)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb2 loc(#loc159)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc160)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc161)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc108)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc110)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc111)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc111)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc115)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc117)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc119)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    cir.store %34, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb6 loc(#loc96)
  ^bb6:  // pred: ^bb5
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc122)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call %35(%36) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc122)
    cir.return loc(#loc86)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":38:21)
#loc2 = loc("/usr/include/stdlib.h":687:1)
#loc3 = loc("/usr/include/stdlib.h":687:32)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":23:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":28:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":24:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":25:15)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":25:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":27:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":27:10)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":30:1)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":45:1)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":32:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":32:12)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":34:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":34:32)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":35:12)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":35:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":36:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":42:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":39:16)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":39:28)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":39:33)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":39:37)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":39:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":39:38)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":40:29)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":40:20)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":40:24)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":40:9)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":41:16)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":41:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":44:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":44:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":79:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":82:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":81:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":81:13)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":98:15)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":100:15)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":103:15)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":105:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":93:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":108:1)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":94:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":96:27)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":96:22)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":96:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":98:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":99:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":99:62)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":100:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":103:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":104:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":104:61)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":105:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":107:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":107:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":52:1)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":57:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":53:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":54:15)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":54:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":56:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":56:10)
#loc80 = loc("/usr/include/stdlib.h":672:1)
#loc81 = loc("/usr/include/stdlib.h":672:45)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":69:23)
#loc83 = loc("/usr/include/stdlib.h":756:1)
#loc84 = loc("/usr/include/stdlib.h":756:70)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":59:1)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":77:1)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":66:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":66:60)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":61:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":61:12)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":62:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":62:32)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":63:12)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":63:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":64:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":75:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":66:37)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":66:44)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":66:48)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":66:59)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":67:9)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":71:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":67:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":67:27)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":68:9)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":69:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":70:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":70:18)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":72:16)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":72:28)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":72:33)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":72:37)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":72:9)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":72:38)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":73:29)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":73:9)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":73:20)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":73:24)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":73:25)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":74:16)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":74:9)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":76:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_44.c":76:13)
#loc124 = loc(fused[#loc2, #loc3])
#loc125 = loc(fused[#loc4, #loc5])
#loc127 = loc(fused[#loc13, #loc14])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc20, #loc19])
#loc131 = loc(fused[#loc21, #loc22])
#loc132 = loc(fused[#loc27, #loc28])
#loc133 = loc(fused[#loc32, #loc29])
#loc134 = loc(fused[#loc34, #loc33])
#loc135 = loc(fused[#loc37, #loc38])
#loc136 = loc(fused[#loc39, #loc40])
#loc137 = loc(fused[#loc41, #loc42])
#loc138 = loc(fused[#loc43, #loc44])
#loc139 = loc(fused[#loc45, #loc46])
#loc140 = loc(fused[#loc51, #loc52])
#loc143 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc70, #loc69])
#loc146 = loc(fused[#loc71, #loc72])
#loc148 = loc(fused[#loc80, #loc81])
#loc149 = loc(fused[#loc83, #loc84])
#loc150 = loc(fused[#loc85, #loc86])
#loc151 = loc(fused[#loc87, #loc88])
#loc152 = loc(fused[#loc89, #loc90])
#loc153 = loc(fused[#loc91, #loc92])
#loc154 = loc(fused[#loc94, #loc93])
#loc155 = loc(fused[#loc95, #loc96])
#loc156 = loc(fused[#loc99, #loc100])
#loc157 = loc(fused[#loc98, #loc100])
#loc158 = loc(fused[#loc97, #loc88])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc105, #loc102])
#loc162 = loc(fused[#loc113, #loc114])
#loc163 = loc(fused[#loc116, #loc115])
#loc164 = loc(fused[#loc121, #loc120])
