!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc227)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc228)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc230)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc231)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc232)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc233)
  cir.func private @close(!s32i) -> !s32i loc(#loc234)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc238)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc26)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc239)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc241)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc241)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc30)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc30)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc244)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["tempInt"] {alignment = 4 : i64} loc(#loc245)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc246)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc247)
          %11 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc248)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc44)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc247)
          cir.scope {
            cir.do {
              cir.scope {
                %14 = cir.const #cir.int<2> : !s32i loc(#loc51)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc52)
                %16 = cir.const #cir.int<6> : !s32i loc(#loc53)
                %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
                cir.store %17, %10 : !s32i, !cir.ptr<!s32i> loc(#loc251)
                cir.scope {
                  %50 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                  %51 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc60)
                  %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc253)
                  cir.if %53 {
                    cir.break loc(#loc62)
                  } loc(#loc254)
                } loc(#loc252)
                %18 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc255)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc256)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc257)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc70)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc70)
                %23 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc258)
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
                %27 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc259)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc78)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc78)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
                %32 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc260)
                cir.scope {
                  %50 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                  %51 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc262)
                  %52 = cir.const #cir.int<16> : !u64i loc(#loc263)
                  %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc263)
                  %54 = cir.call @connect(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc91)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc264)
                  cir.if %57 {
                    cir.break loc(#loc93)
                  } loc(#loc265)
                } loc(#loc261)
                %33 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %34 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc95)
                %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
                %36 = cir.const #cir.int<8> : !s32i loc(#loc96)
                %37 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc96)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc96)
                %40 = cir.const #cir.int<0> : !s32i loc(#loc98)
                %41 = cir.call @recv(%33, %35, %39, %40) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
                %42 = cir.cast(integral, %41 : !s64i), !s32i loc(#loc99)
                cir.store %42, %7 : !s32i, !cir.ptr<!s32i> loc(#loc266)
                cir.scope {
                  %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %51 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc105)
                  %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc268)
                  %54 = cir.ternary(%53, true {
                    %55 = cir.const #true loc(#loc106)
                    cir.yield %55 : !cir.bool loc(#loc106)
                  }, false {
                    %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                    %56 = cir.const #cir.int<0> : !s32i loc(#loc108)
                    %57 = cir.cmp(eq, %55, %56) : !s32i, !cir.bool loc(#loc269)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc106)
                      cir.yield %59 : !cir.bool loc(#loc106)
                    }, false {
                      %59 = cir.const #false loc(#loc106)
                      cir.yield %59 : !cir.bool loc(#loc106)
                    }) : (!cir.bool) -> !cir.bool loc(#loc106)
                    cir.yield %58 : !cir.bool loc(#loc106)
                  }) : (!cir.bool) -> !cir.bool loc(#loc106)
                  cir.if %54 {
                    cir.break loc(#loc110)
                  } loc(#loc270)
                } loc(#loc267)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc111)
                %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc111)
                %45 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %46 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc113)
                %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc113)
                cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc271)
                %48 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc114)
                %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc115)
                cir.store %49, %8 : !s32i, !cir.ptr<!s32i> loc(#loc272)
                cir.scope {
                  %50 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                  %51 = cir.const #cir.int<32767> : !s32i loc(#loc121)
                  %52 = cir.cmp(gt, %50, %51) : !s32i, !cir.bool loc(#loc274)
                  %53 = cir.ternary(%52, true {
                    %54 = cir.const #true loc(#loc122)
                    cir.yield %54 : !cir.bool loc(#loc122)
                  }, false {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                    %55 = cir.const #cir.int<32767> : !s32i loc(#loc124)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc124)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc124)
                    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc124)
                    %59 = cir.cmp(lt, %54, %58) : !s32i, !cir.bool loc(#loc275)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc122)
                      cir.yield %61 : !cir.bool loc(#loc122)
                    }, false {
                      %61 = cir.const #false loc(#loc122)
                      cir.yield %61 : !cir.bool loc(#loc122)
                    }) : (!cir.bool) -> !cir.bool loc(#loc122)
                    cir.yield %60 : !cir.bool loc(#loc122)
                  }) : (!cir.bool) -> !cir.bool loc(#loc122)
                  cir.if %53 {
                    %54 = cir.const #cir.int<1> : !s32i loc(#loc128)
                    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc129)
                    %56 = cir.cast(integral, %55 : !s32i), !s16i loc(#loc129)
                    cir.store %56, %0 : !s16i, !cir.ptr<!s16i> loc(#loc277)
                  } else {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                    %55 = cir.cast(integral, %54 : !s32i), !s16i loc(#loc131)
                    cir.store %55, %0 : !s16i, !cir.ptr<!s16i> loc(#loc278)
                  } loc(#loc276)
                } loc(#loc273)
              } loc(#loc250)
              cir.yield loc(#loc48)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc133)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc133)
              cir.condition(%15) loc(#loc133)
            } loc(#loc249)
          } loc(#loc249)
          cir.scope {
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc136)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc137)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc137)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc280)
            cir.if %17 {
              %18 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc140)
            } loc(#loc281)
          } loc(#loc279)
        } loc(#loc243)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc141)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc141)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc141)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc282)
      } loc(#loc242)
    } loc(#loc240)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc284)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc285)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc285)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc285)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc151)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc152)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc152)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc152)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc156)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc156)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc157)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc158)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc157)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc159)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc287)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc162)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc162)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc163)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc289)
        cir.if %24 {
          %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc165)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
          %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc168)
          %29 = cir.cast(integral, %28 : !s16i), !u64i loc(#loc168)
          %30 = cir.call @strncpy(%26, %27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc169)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc169)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc170)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc171)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc291)
        } loc(#loc290)
      } loc(#loc288)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    } loc(#loc283)
    cir.return loc(#loc23)
  } loc(#loc237)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc293)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc176)
    cir.return loc(#loc175)
  } loc(#loc292)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc295)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc182)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc296)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc298)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc298)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc186)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc186)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc191)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc192)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc191)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc191)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc300)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc194)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc195)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc194)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc194)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc301)
      } loc(#loc299)
    } loc(#loc297)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc303)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc304)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc304)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc304)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc203)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc204)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc205)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc206)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc205)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc205)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc305)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc209)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc209)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc210)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc211)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc210)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc212)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc306)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc215)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc215)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc216)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc308)
        cir.if %24 {
          %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc218)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
          %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc221)
          %29 = cir.cast(integral, %28 : !s16i), !u64i loc(#loc221)
          %30 = cir.call @strncpy(%26, %27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc222)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc222)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc223)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc224)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc224)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc310)
        } loc(#loc309)
      } loc(#loc307)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc225)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    } loc(#loc302)
    cir.return loc(#loc179)
  } loc(#loc294)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/string.h":144:1)
#loc19 = loc("/usr/include/string.h":146:14)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":44:1)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":137:1)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":46:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":46:11)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":48:12)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":48:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":49:5)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":122:5)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":49:8)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":49:33)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":50:5)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":117:5)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":119:5)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":51:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":116:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":56:13)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":56:17)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":57:13)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":57:17)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":58:13)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":58:32)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":59:13)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":59:36)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":60:13)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":60:45)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":61:13)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":105:21)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":62:13)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":104:13)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":70:40)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":70:49)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":70:62)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":70:33)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":70:17)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":70:73)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":71:17)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":74:17)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":71:21)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":71:38)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":72:17)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":73:21)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":75:24)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":75:25)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":75:34)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":75:37)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":75:51)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":75:17)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":75:52)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":76:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":76:17)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":77:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":77:17)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":77:63)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":78:42)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":78:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":78:17)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":78:50)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:17)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":82:17)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:29)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:62)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:63)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:72)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:86)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:21)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":79:92)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":80:17)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":81:21)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:35)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:50)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:63)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:81)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:84)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:30)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:17)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":86:85)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":87:17)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":90:17)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":87:21)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":87:35)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":87:48)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":87:51)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":87:65)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":88:17)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":89:21)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":92:43)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":92:29)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":92:17)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":95:32)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":95:27)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":95:17)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":95:43)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":96:17)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":103:17)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":96:21)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":96:31)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":96:40)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":96:43)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":96:53)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":97:17)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":99:17)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":101:17)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":98:29)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":98:28)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":98:21)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":102:28)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":102:21)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":105:20)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":106:13)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":109:13)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":106:17)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":106:34)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":107:13)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":108:30)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":108:17)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":121:16)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":121:20)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":121:9)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":123:5)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":136:5)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":124:9)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":124:24)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":125:9)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":125:26)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":126:16)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":126:24)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":126:29)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":126:33)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":126:9)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":126:34)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":127:25)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":127:16)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":127:20)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":127:9)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":128:9)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":134:9)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":128:13)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":128:20)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":129:9)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":132:13)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":132:21)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":132:27)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":132:35)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":133:26)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":133:18)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":133:13)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":135:19)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":135:9)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":176:1)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":179:1)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":178:5)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":178:13)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":145:1)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":174:1)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":147:5)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":147:11)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":149:12)
#loc183 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":149:5)
#loc184 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":150:5)
#loc185 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":159:5)
#loc186 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":150:8)
#loc187 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":150:33)
#loc188 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":151:5)
#loc189 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":154:5)
#loc190 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":156:5)
#loc191 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":153:16)
#loc192 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":153:20)
#loc193 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":153:9)
#loc194 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":158:16)
#loc195 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":158:20)
#loc196 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":158:9)
#loc197 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":160:5)
#loc198 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":173:5)
#loc199 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":161:9)
#loc200 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":161:24)
#loc201 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":162:9)
#loc202 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":162:26)
#loc203 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":163:16)
#loc204 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":163:24)
#loc205 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":163:29)
#loc206 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":163:33)
#loc207 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":163:9)
#loc208 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":163:34)
#loc209 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":164:25)
#loc210 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":164:16)
#loc211 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":164:20)
#loc212 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":164:9)
#loc213 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":165:9)
#loc214 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":171:9)
#loc215 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":165:13)
#loc216 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":165:20)
#loc217 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":166:9)
#loc218 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":169:13)
#loc219 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":169:21)
#loc220 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":169:27)
#loc221 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":169:35)
#loc222 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":170:26)
#loc223 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":170:18)
#loc224 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":170:13)
#loc225 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":172:19)
#loc226 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_strncpy_12.c":172:9)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc8, #loc9])
#loc231 = loc(fused[#loc10, #loc11])
#loc232 = loc(fused[#loc12, #loc13])
#loc233 = loc(fused[#loc14, #loc15])
#loc234 = loc(fused[#loc16, #loc17])
#loc235 = loc(fused[#loc18, #loc19])
#loc236 = loc(fused[#loc20, #loc21])
#loc237 = loc(fused[#loc22, #loc23])
#loc238 = loc(fused[#loc24, #loc25])
#loc239 = loc(fused[#loc27, #loc26])
#loc240 = loc(fused[#loc28, #loc29])
#loc241 = loc(fused[#loc30, #loc31])
#loc242 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc243 = loc(fused[#loc35, #loc36])
#loc244 = loc(fused[#loc37, #loc38])
#loc245 = loc(fused[#loc39, #loc40])
#loc246 = loc(fused[#loc41, #loc42])
#loc247 = loc(fused[#loc43, #loc44])
#loc248 = loc(fused[#loc45, #loc46])
#loc249 = loc(fused[#loc47, #loc48])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc55, #loc56])
#loc252 = loc(fused[#loc57, #loc58])
#loc253 = loc(fused[#loc59, #loc60])
#loc254 = loc(fused[#loc61, #loc58])
#loc255 = loc(fused[#loc63, #loc64])
#loc256 = loc(fused[#loc66, #loc67])
#loc257 = loc(fused[#loc68, #loc69])
#loc258 = loc(fused[#loc72, #loc70])
#loc259 = loc(fused[#loc76, #loc77])
#loc260 = loc(fused[#loc81, #loc82])
#loc261 = loc(fused[#loc83, #loc84])
#loc262 = loc(fused[#loc86, #loc87])
#loc263 = loc(fused[#loc88, #loc89])
#loc264 = loc(fused[#loc90, #loc91])
#loc265 = loc(fused[#loc92, #loc84])
#loc266 = loc(fused[#loc100, #loc101])
#loc267 = loc(fused[#loc102, #loc103])
#loc268 = loc(fused[#loc104, #loc105])
#loc269 = loc(fused[#loc107, #loc108])
#loc270 = loc(fused[#loc109, #loc103])
#loc271 = loc(fused[#loc113, #loc111])
#loc272 = loc(fused[#loc116, #loc117])
#loc273 = loc(fused[#loc118, #loc119])
#loc274 = loc(fused[#loc120, #loc121])
#loc275 = loc(fused[#loc123, #loc124])
#loc276 = loc(fused[#loc125, #loc126, #loc127, #loc119])
#loc277 = loc(fused[#loc130, #loc128])
#loc278 = loc(fused[#loc132, #loc131])
#loc279 = loc(fused[#loc134, #loc135])
#loc280 = loc(fused[#loc136, #loc137])
#loc281 = loc(fused[#loc138, #loc135])
#loc282 = loc(fused[#loc143, #loc142])
#loc283 = loc(fused[#loc144, #loc145])
#loc284 = loc(fused[#loc146, #loc147])
#loc285 = loc(fused[#loc148, #loc149])
#loc286 = loc(fused[#loc154, #loc155])
#loc287 = loc(fused[#loc159, #loc156])
#loc288 = loc(fused[#loc160, #loc161])
#loc289 = loc(fused[#loc162, #loc163])
#loc290 = loc(fused[#loc164, #loc161])
#loc291 = loc(fused[#loc171, #loc169])
#loc292 = loc(fused[#loc174, #loc175])
#loc293 = loc(fused[#loc176, #loc177])
#loc294 = loc(fused[#loc178, #loc179])
#loc295 = loc(fused[#loc180, #loc181])
#loc296 = loc(fused[#loc183, #loc182])
#loc297 = loc(fused[#loc184, #loc185])
#loc298 = loc(fused[#loc186, #loc187])
#loc299 = loc(fused[#loc188, #loc189, #loc190, #loc185])
#loc300 = loc(fused[#loc193, #loc192])
#loc301 = loc(fused[#loc196, #loc195])
#loc302 = loc(fused[#loc197, #loc198])
#loc303 = loc(fused[#loc199, #loc200])
#loc304 = loc(fused[#loc201, #loc202])
#loc305 = loc(fused[#loc207, #loc208])
#loc306 = loc(fused[#loc212, #loc209])
#loc307 = loc(fused[#loc213, #loc214])
#loc308 = loc(fused[#loc215, #loc216])
#loc309 = loc(fused[#loc217, #loc214])
#loc310 = loc(fused[#loc224, #loc222])
