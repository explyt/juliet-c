!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc143)
  cir.func private  @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc144)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @CWE369_Divide_by_Zero__float_fgets_45_badData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc146)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc16)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc149)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc151)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc24)
        %7 = cir.const #cir.int<20> : !s32i loc(#loc25)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
        %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc153)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc29)
        cir.if %14 {
          %15 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc33)
          %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc34)
          %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc34)
          cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc155)
        } else {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc154)
      } loc(#loc152)
    } loc(#loc150)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc38)
    %3 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_badData : !cir.ptr<!cir.float> loc(#loc146)
    cir.store %2, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc156)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc147)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc158)
  cir.func private  @printIntLine(!s32i) loc(#loc161)
  cir.func no_proto internal private  @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_badData : !cir.ptr<!cir.float> loc(#loc146)
    %2 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc53)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc163)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc165)
      %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc58)
      %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc59)
      %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc59)
      %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc166)
      %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc166)
      cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc165)
      %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc61)
    } loc(#loc164)
    cir.return loc(#loc51)
  } loc(#loc162)
  cir.global "private"  internal dsolocal @CWE369_Divide_by_Zero__float_fgets_45_goodG2BData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc167)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc68)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc170)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc70)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc171)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc72)
    %4 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodG2BData : !cir.ptr<!cir.float> loc(#loc167)
    cir.store %3, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc172)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc65)
  } loc(#loc168)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodG2BData : !cir.ptr<!cir.float> loc(#loc167)
    %2 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc79)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc175)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc177)
      %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc84)
      %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc85)
      %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc85)
      %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc178)
      %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc178)
      cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc177)
      %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc87)
    } loc(#loc176)
    cir.return loc(#loc77)
  } loc(#loc174)
  cir.global "private"  internal dsolocal @CWE369_Divide_by_Zero__float_fgets_45_goodB2GData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc179)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc94)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc182)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc184)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc102)
        %7 = cir.const #cir.int<20> : !s32i loc(#loc103)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
        %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc105)
        %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
        %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc186)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc107)
        cir.if %14 {
          %15 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc111)
          %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc112)
          %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc112)
          cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc188)
        } else {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc115)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc115)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc116)
        } loc(#loc187)
      } loc(#loc185)
    } loc(#loc183)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc117)
    %3 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodB2GData : !cir.ptr<!cir.float> loc(#loc179)
    cir.store %2, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc189)
    %4 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc119)
    cir.return loc(#loc91)
  } loc(#loc180)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc121)
  cir.func no_proto internal private  @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodB2GData : !cir.ptr<!cir.float> loc(#loc179)
    %2 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc125)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc192)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc128)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc128)
      %5 = cir.fabs %4 : !cir.double loc(#loc128)
      %6 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc129)
      %7 = cir.cmp(gt, %5, %6) : !cir.double, !s32i loc(#loc194)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc131)
      cir.if %8 {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc196)
        %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc137)
        %11 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc138)
        %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc138)
        %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc197)
        %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc197)
        cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc196)
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc139)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc140)
      } else {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc121)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc121)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc141)
      } loc(#loc195)
    } loc(#loc193)
    cir.return loc(#loc123)
  } loc(#loc191)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":55:23)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":24:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":24:14)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":40:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":60:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":42:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":42:11)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":44:12)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":44:5)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":45:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":57:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":46:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":46:41)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":56:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:19)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:32)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:49)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:59)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:56)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":49:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":52:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":54:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:32)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:27)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:13)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:43)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":55:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":58:53)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":58:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":59:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":59:13)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":126:1)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":130:1)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":128:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":128:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":129:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":129:13)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":30:1)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":38:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":32:5)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":32:18)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":33:5)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":37:5)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:9)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:40)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:28)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:36)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":36:22)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":36:9)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":25:1)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":25:14)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":77:1)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":86:1)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":79:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":79:11)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":81:12)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":81:5)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":83:12)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":83:5)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":84:57)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":84:5)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":85:5)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":85:17)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":67:1)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":75:1)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":69:5)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":69:18)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":70:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":74:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:9)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:40)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:28)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:36)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":73:22)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":73:9)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":26:1)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":26:14)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":104:1)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":124:1)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":106:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":106:11)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":108:12)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":108:5)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":109:5)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":121:5)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":110:9)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":110:41)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:9)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":120:9)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:19)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:32)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:49)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:13)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:59)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:56)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":113:9)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":116:9)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":118:9)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:32)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:27)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:13)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:43)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":119:23)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":119:13)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":122:57)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":122:5)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":123:5)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":123:17)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":100:19)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":89:1)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":102:1)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":91:5)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":91:18)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:5)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":101:5)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:13)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:21)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:8)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:19)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":94:5)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":97:5)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":99:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:9)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:40)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:28)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:36)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":96:22)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":96:9)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":100:9)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc10, #loc11])
#loc147 = loc(fused[#loc12, #loc13])
#loc148 = loc(fused[#loc14, #loc15])
#loc149 = loc(fused[#loc17, #loc16])
#loc150 = loc(fused[#loc18, #loc19])
#loc151 = loc(fused[#loc20, #loc21])
#loc152 = loc(fused[#loc22, #loc23])
#loc153 = loc(fused[#loc27, #loc28])
#loc154 = loc(fused[#loc30, #loc31, #loc32, #loc23])
#loc155 = loc(fused[#loc35, #loc36])
#loc156 = loc(fused[#loc39, #loc38])
#loc157 = loc(fused[#loc40, #loc41])
#loc158 = loc(fused[#loc42, #loc43])
#loc159 = loc(fused[#loc44, #loc45])
#loc160 = loc(fused[#loc46, #loc47])
#loc161 = loc(fused[#loc48, #loc49])
#loc162 = loc(fused[#loc50, #loc51])
#loc163 = loc(fused[#loc52, #loc53])
#loc164 = loc(fused[#loc54, #loc55])
#loc165 = loc(fused[#loc56, #loc57])
#loc166 = loc(fused[#loc58, #loc59])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc69, #loc68])
#loc171 = loc(fused[#loc71, #loc70])
#loc172 = loc(fused[#loc73, #loc72])
#loc173 = loc(fused[#loc74, #loc75])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc78, #loc79])
#loc176 = loc(fused[#loc80, #loc81])
#loc177 = loc(fused[#loc82, #loc83])
#loc178 = loc(fused[#loc84, #loc85])
#loc179 = loc(fused[#loc88, #loc89])
#loc180 = loc(fused[#loc90, #loc91])
#loc181 = loc(fused[#loc92, #loc93])
#loc182 = loc(fused[#loc95, #loc94])
#loc183 = loc(fused[#loc96, #loc97])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc105, #loc106])
#loc187 = loc(fused[#loc108, #loc109, #loc110, #loc101])
#loc188 = loc(fused[#loc113, #loc114])
#loc189 = loc(fused[#loc118, #loc117])
#loc190 = loc(fused[#loc119, #loc120])
#loc191 = loc(fused[#loc122, #loc123])
#loc192 = loc(fused[#loc124, #loc125])
#loc193 = loc(fused[#loc126, #loc127])
#loc194 = loc(fused[#loc130, #loc129])
#loc195 = loc(fused[#loc132, #loc133, #loc134, #loc127])
#loc196 = loc(fused[#loc135, #loc136])
#loc197 = loc(fused[#loc137, #loc138])
