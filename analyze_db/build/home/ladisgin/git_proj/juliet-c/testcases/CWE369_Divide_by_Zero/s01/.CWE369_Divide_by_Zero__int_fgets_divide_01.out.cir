!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":107:10)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":107:14)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":107:20)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":107:32)
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc59, #loc60])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc126)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc127)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc130)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc132)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc133)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc19)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc132)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc132)
    cir.br ^bb2 loc(#loc136)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc26)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc26)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc26)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc26)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc26)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc26)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc26)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc137)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc138)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb5 loc(#loc31)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %26 = cir.binop(div, %24, %25) : !s32i loc(#loc140)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc131)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc141)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc144)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc64)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_divide_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE369_Divide_by_Zero__int_fgets_divide_01_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_divide_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call @CWE369_Divide_by_Zero__int_fgets_divide_01_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.return %17 : !s32i loc(#loc151)
  } loc(#loc146)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc80)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc82)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %6 = cir.binop(div, %4, %5) : !s32i loc(#loc156)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc86)
    cir.return loc(#loc76)
  } loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc87)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc158)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc95)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc158)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc158)
    cir.br ^bb2 loc(#loc162)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc102)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc102)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc102)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc102)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc102)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc102)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc102)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc102)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc104)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc163)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc164)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc110)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb5 loc(#loc107)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc100)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc166)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %26 = cir.cmp(ne, %24, %25) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %26 ^bb9, ^bb10 loc(#loc168)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %29 = cir.binop(div, %27, %28) : !s32i loc(#loc169)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc124)
    cir.br ^bb11 loc(#loc120)
  ^bb10:  // pred: ^bb8
    %30 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc87)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb11 loc(#loc116)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc116)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc89)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":24:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":44:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":30:9)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":30:45)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":26:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":26:9)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":28:13)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":28:12)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":28:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":29:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":41:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":32:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":40:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":32:19)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":32:32)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":32:49)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":32:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":32:59)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":33:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":36:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":38:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":35:25)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":35:20)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":35:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":35:36)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":39:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":43:18)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":43:24)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":43:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":92:1)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":96:1)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":94:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":94:13)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":95:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":95:13)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":112:15)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":114:15)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":117:15)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":119:15)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":107:1)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":122:1)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":108:1)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":110:27)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":110:22)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":110:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":112:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":113:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":113:53)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":114:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":117:5)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":118:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":118:52)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":119:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":121:12)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":121:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":51:1)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":60:1)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":53:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":53:9)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":55:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":55:12)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":55:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":57:12)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":57:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":59:18)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":59:24)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":59:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":88:19)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":63:1)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":90:1)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":69:9)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":69:45)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":65:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":65:9)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":67:13)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":67:12)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":67:5)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":68:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":80:5)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":71:9)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":79:9)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":71:19)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":71:32)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":71:49)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":71:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":71:59)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":72:9)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":75:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":77:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":74:25)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":74:20)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":74:13)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":74:36)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":78:23)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":78:13)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":82:5)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":89:5)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":82:9)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":82:17)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":83:5)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":85:5)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":87:5)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":84:22)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":84:28)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":84:9)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_divide_01.c":88:9)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc7, #loc8])
#loc130 = loc(fused[#loc10, #loc11])
#loc131 = loc(fused[#loc12, #loc13])
#loc132 = loc(fused[#loc14, #loc15])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc20, #loc18])
#loc135 = loc(fused[#loc21, #loc22])
#loc136 = loc(fused[#loc23, #loc24])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc139 = loc(fused[#loc35, #loc36])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc41, #loc42])
#loc142 = loc(fused[#loc43, #loc44])
#loc143 = loc(fused[#loc45, #loc46])
#loc144 = loc(fused[#loc47, #loc48])
#loc145 = loc(fused[#loc49, #loc50])
#loc146 = loc(fused[#loc55, #loc56])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc70, #loc71])
#loc151 = loc(fused[#loc74, #loc73])
#loc152 = loc(fused[#loc75, #loc76])
#loc153 = loc(fused[#loc77, #loc78])
#loc154 = loc(fused[#loc81, #loc79])
#loc155 = loc(fused[#loc83, #loc82])
#loc156 = loc(fused[#loc84, #loc85])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc92, #loc93])
#loc160 = loc(fused[#loc96, #loc94])
#loc161 = loc(fused[#loc97, #loc98])
#loc162 = loc(fused[#loc99, #loc100])
#loc163 = loc(fused[#loc104, #loc105])
#loc164 = loc(fused[#loc106, #loc107, #loc108, #loc100])
#loc165 = loc(fused[#loc111, #loc112])
#loc166 = loc(fused[#loc115, #loc116])
#loc167 = loc(fused[#loc117, #loc118])
#loc168 = loc(fused[#loc119, #loc120, #loc121, #loc116])
#loc169 = loc(fused[#loc122, #loc123])
