!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:10)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:14)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:20)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:32)
#loc162 = loc(fused[#loc67, #loc68])
#loc163 = loc(fused[#loc69, #loc70])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc136)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc137)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc143)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc146)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc146)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %7 ^bb2, ^bb5 loc(#loc147)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc141)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %10 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc29)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc149)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc150)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc34)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc34)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
    %20 = cir.call @fread(%12, %13, %17, %19) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc29)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    cir.br ^bb12 loc(#loc25)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc151)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc143)
    cir.store %21, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc143)
    %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %22, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // pred: ^bb6
    %23 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc41)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    %26 = cir.const #cir.int<1> : !u64i loc(#loc154)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc46)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc46)
    %31 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
    %33 = cir.call @fread(%25, %26, %30, %32) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc41)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc49)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc49)
    %38 = cir.cmp(ne, %33, %37) : !u64i, !cir.bool loc(#loc155)
    cir.brcond %38 ^bb8, ^bb9 loc(#loc156)
  ^bb8:  // pred: ^bb7
    %39 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb9 loc(#loc40)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc38)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc21)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc21)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc11)
  } loc(#loc140)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc64)
  cir.func @main(%arg0: !s32i loc(fused[#loc67, #loc68]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc69, #loc70])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc73)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc73)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc74)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_12_good() : () -> () loc(#loc76)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_12_bad() : () -> () loc(#loc80)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc170)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc173)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc173)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc97)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc174)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc175)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc168)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc168)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc106)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc178)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc111)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc111)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %20 = cir.call @fread(%12, %13, %17, %19) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc106)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc114)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc114)
    %25 = cir.cmp(ne, %20, %24) : !u64i, !cir.bool loc(#loc179)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc117)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc103)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc100)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc181)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc170)
    cir.store %28, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc170)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %29, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb11 loc(#loc182)
  ^bb11:  // pred: ^bb10
    %30 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc123)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc184)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc128)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc128)
    %38 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
    %40 = cir.call @fread(%32, %33, %37, %39) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc123)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc131)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc131)
    %45 = cir.cmp(ne, %40, %44) : !u64i, !cir.bool loc(#loc185)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc186)
  ^bb12:  // pred: ^bb11
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc134)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.br ^bb13 loc(#loc122)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc122)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc120)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc96)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc96)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc86)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":728:1)
#loc4 = loc("/usr/include/stdio.h":730:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":47:27)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":24:1)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":51:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":31:13)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":31:36)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":32:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":32:27)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":42:13)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":42:36)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":43:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":43:27)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:5)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":50:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:8)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:33)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":27:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":36:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":38:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":28:9)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":35:9)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:13)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:27)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:19)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:33)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:44)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:56)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:60)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:64)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":39:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":49:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:13)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":48:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:17)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:31)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:23)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:37)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:48)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:60)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:64)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:68)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:78)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:82)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":46:13)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":47:17)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":90:1)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":93:1)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":92:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":92:11)
#loc57 = loc("/usr/include/stdlib.h":575:1)
#loc58 = loc("/usr/include/stdlib.h":575:41)
#loc59 = loc("/usr/include/time.h":76:1)
#loc60 = loc("/usr/include/time.h":76:38)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":109:15)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":111:15)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":114:15)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":116:15)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:1)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":119:1)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":105:1)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":107:27)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":107:22)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":107:5)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":109:5)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":110:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":110:55)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":111:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":114:5)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":115:5)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":115:54)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":116:5)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":118:12)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":118:5)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":58:1)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":88:1)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":65:13)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":65:36)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":66:13)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":66:27)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":79:13)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":79:36)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":80:13)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":80:27)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:5)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":87:5)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:8)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:33)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":61:5)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":73:5)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":75:5)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":62:9)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":72:9)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:13)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":71:13)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:17)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:31)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:23)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:37)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:48)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:60)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:64)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:68)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:78)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:82)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":69:13)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":70:27)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":70:17)
#loc119 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":76:9)
#loc120 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":86:9)
#loc121 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:13)
#loc122 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":85:13)
#loc123 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:17)
#loc124 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:31)
#loc125 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:23)
#loc126 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:37)
#loc127 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:48)
#loc128 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:60)
#loc129 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:64)
#loc130 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:68)
#loc131 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:78)
#loc132 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:82)
#loc133 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":83:13)
#loc134 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":84:27)
#loc135 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":84:17)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc10, #loc11])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc16, #loc17])
#loc144 = loc(fused[#loc18, #loc19])
#loc145 = loc(fused[#loc20, #loc21])
#loc146 = loc(fused[#loc22, #loc23])
#loc147 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc148 = loc(fused[#loc27, #loc28])
#loc149 = loc(fused[#loc31, #loc30])
#loc150 = loc(fused[#loc32, #loc33])
#loc151 = loc(fused[#loc37, #loc38])
#loc152 = loc(fused[#loc39, #loc40])
#loc153 = loc(fused[#loc43, #loc42])
#loc154 = loc(fused[#loc44, #loc45])
#loc155 = loc(fused[#loc41, #loc50])
#loc156 = loc(fused[#loc51, #loc40])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56])
#loc159 = loc(fused[#loc57, #loc58])
#loc160 = loc(fused[#loc59, #loc60])
#loc161 = loc(fused[#loc65, #loc66])
#loc164 = loc(fused[#loc76, #loc77])
#loc165 = loc(fused[#loc80, #loc81])
#loc166 = loc(fused[#loc84, #loc83])
#loc167 = loc(fused[#loc85, #loc86])
#loc168 = loc(fused[#loc87, #loc88])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc91, #loc92])
#loc171 = loc(fused[#loc93, #loc94])
#loc172 = loc(fused[#loc95, #loc96])
#loc173 = loc(fused[#loc97, #loc98])
#loc174 = loc(fused[#loc99, #loc100, #loc101, #loc96])
#loc175 = loc(fused[#loc102, #loc103])
#loc176 = loc(fused[#loc104, #loc105])
#loc177 = loc(fused[#loc108, #loc107])
#loc178 = loc(fused[#loc109, #loc110])
#loc179 = loc(fused[#loc106, #loc115])
#loc180 = loc(fused[#loc116, #loc105])
#loc181 = loc(fused[#loc119, #loc120])
#loc182 = loc(fused[#loc121, #loc122])
#loc183 = loc(fused[#loc125, #loc124])
#loc184 = loc(fused[#loc126, #loc127])
#loc185 = loc(fused[#loc123, #loc132])
#loc186 = loc(fused[#loc133, #loc122])
