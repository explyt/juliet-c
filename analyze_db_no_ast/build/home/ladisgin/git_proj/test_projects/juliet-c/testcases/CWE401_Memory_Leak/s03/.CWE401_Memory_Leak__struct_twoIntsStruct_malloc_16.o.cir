!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc130)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc131)
  cir.func no_proto  @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%3) loc(#loc15)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc17)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc136)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc137)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc139)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc141)
          %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc26)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc29)
            %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc30)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
          } loc(#loc142)
        } loc(#loc140)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc143)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc144)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc44)
        cir.break loc(#loc45)
      } loc(#loc135)
    } loc(#loc135)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc48)
        cir.condition(%3) loc(#loc48)
      } do {
        cir.break loc(#loc49)
      } loc(#loc145)
    } loc(#loc145)
    cir.return loc(#loc8)
  } loc(#loc132)
  cir.func no_proto  @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc146)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc149)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
        cir.condition(%3) loc(#loc66)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc68)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc68)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc154)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc155)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc159)
          %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc77)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc81)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
          } loc(#loc160)
        } loc(#loc158)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc84)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc161)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc162)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc91)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc93)
        cir.break loc(#loc94)
      } loc(#loc153)
    } loc(#loc153)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc97)
        cir.condition(%3) loc(#loc97)
      } do {
        %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc98)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc99)
        cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc98)
        cir.break loc(#loc100)
      } loc(#loc163)
    } loc(#loc163)
    cir.return loc(#loc59)
  } loc(#loc150)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc166)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc109)
        cir.condition(%3) loc(#loc109)
      } do {
        %2 = cir.const #cir.int<100> : !s32i loc(#loc110)
        %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc110)
        %4 = cir.const #cir.int<8> : !u64i loc(#loc110)
        %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc110)
        %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc110)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc110)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc168)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc112)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc169)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc121)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc123)
        cir.break loc(#loc124)
      } loc(#loc167)
    } loc(#loc167)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc127)
        cir.condition(%3) loc(#loc127)
      } do {
        cir.break loc(#loc128)
      } loc(#loc171)
    } loc(#loc171)
    cir.return loc(#loc102)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":45:1)
#loc9 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":26:29)
#loc11 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":27:12)
#loc12 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":28:5)
#loc14 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":38:5)
#loc15 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":28:11)
#loc16 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":31:41)
#loc17 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":31:48)
#loc18 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":31:52)
#loc19 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":31:80)
#loc20 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":31:81)
#loc21 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":31:9)
#loc22 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:9)
#loc23 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:37)
#loc24 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:13)
#loc25 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:21)
#loc26 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:18)
#loc27 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:27)
#loc28 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:28)
#loc29 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:34)
#loc30 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":32:33)
#loc31 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":34:26)
#loc32 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":34:9)
#loc33 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":34:14)
#loc34 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":34:15)
#loc35 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc36 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":35:26)
#loc37 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":35:9)
#loc38 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":35:14)
#loc39 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":35:15)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":36:43)
#loc42 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":36:48)
#loc43 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":36:49)
#loc44 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":36:9)
#loc45 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":37:9)
#loc46 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":39:5)
#loc47 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":44:5)
#loc48 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":39:11)
#loc49 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":43:9)
#loc50 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":98:1)
#loc51 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":102:1)
#loc52 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":100:5)
#loc53 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":100:13)
#loc54 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":101:5)
#loc55 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":101:13)
#loc56 = loc("/usr/include/stdlib.h":687:1)
#loc57 = loc("/usr/include/stdlib.h":687:32)
#loc58 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":52:1)
#loc59 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":73:1)
#loc60 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":54:5)
#loc61 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":54:29)
#loc62 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":55:12)
#loc63 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":55:5)
#loc64 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":56:5)
#loc65 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":66:5)
#loc66 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":56:11)
#loc67 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":59:41)
#loc68 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":59:48)
#loc69 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":59:52)
#loc70 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":59:80)
#loc71 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":59:81)
#loc72 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":59:9)
#loc73 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:9)
#loc74 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:37)
#loc75 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:13)
#loc76 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:21)
#loc77 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:18)
#loc78 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:27)
#loc79 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:28)
#loc80 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:34)
#loc81 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":60:33)
#loc82 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":62:26)
#loc83 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":62:9)
#loc84 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":62:14)
#loc85 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":62:15)
#loc86 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":63:26)
#loc87 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":63:9)
#loc88 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":63:14)
#loc89 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":63:15)
#loc90 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":64:43)
#loc91 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":64:48)
#loc92 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":64:49)
#loc93 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":64:9)
#loc94 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":65:9)
#loc95 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":67:5)
#loc96 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":72:5)
#loc97 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":67:11)
#loc98 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":70:9)
#loc99 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":70:14)
#loc100 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":71:9)
#loc101 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":76:1)
#loc102 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":96:1)
#loc103 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":78:5)
#loc104 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":78:29)
#loc105 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":79:12)
#loc106 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":79:5)
#loc107 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":80:5)
#loc108 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":89:5)
#loc109 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":80:11)
#loc110 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":83:41)
#loc111 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":83:9)
#loc112 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":85:26)
#loc113 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":85:9)
#loc114 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":85:14)
#loc115 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":85:15)
#loc116 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":86:26)
#loc117 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":86:9)
#loc118 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":86:14)
#loc119 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":86:15)
#loc120 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":87:43)
#loc121 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":87:48)
#loc122 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":87:49)
#loc123 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":87:9)
#loc124 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":88:9)
#loc125 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":90:5)
#loc126 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":95:5)
#loc127 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":90:11)
#loc128 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c":94:9)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc12, #loc11])
#loc135 = loc(fused[#loc13, #loc14])
#loc136 = loc(fused[#loc18, #loc19])
#loc137 = loc(fused[#loc17, #loc19])
#loc138 = loc(fused[#loc16, #loc20])
#loc139 = loc(fused[#loc21, #loc20])
#loc140 = loc(fused[#loc22, #loc23])
#loc141 = loc(fused[#loc24, #loc25])
#loc142 = loc(fused[#loc27, #loc23])
#loc143 = loc(fused[#loc32, #loc31])
#loc144 = loc(fused[#loc37, #loc36])
#loc145 = loc(fused[#loc46, #loc47])
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc63, #loc62])
#loc153 = loc(fused[#loc64, #loc65])
#loc154 = loc(fused[#loc69, #loc70])
#loc155 = loc(fused[#loc68, #loc70])
#loc156 = loc(fused[#loc67, #loc71])
#loc157 = loc(fused[#loc72, #loc71])
#loc158 = loc(fused[#loc73, #loc74])
#loc159 = loc(fused[#loc75, #loc76])
#loc160 = loc(fused[#loc78, #loc74])
#loc161 = loc(fused[#loc83, #loc82])
#loc162 = loc(fused[#loc87, #loc86])
#loc163 = loc(fused[#loc95, #loc96])
#loc164 = loc(fused[#loc101, #loc102])
#loc165 = loc(fused[#loc103, #loc104])
#loc166 = loc(fused[#loc106, #loc105])
#loc167 = loc(fused[#loc107, #loc108])
#loc168 = loc(fused[#loc111, #loc110])
#loc169 = loc(fused[#loc113, #loc112])
#loc170 = loc(fused[#loc117, #loc116])
#loc171 = loc(fused[#loc125, #loc126])
