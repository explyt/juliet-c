!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":248:10)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":248:14)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":248:20)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":248:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc380 = loc(fused[#loc151, #loc152])
#loc381 = loc(fused[#loc153, #loc154])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc323)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc324)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc325)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc326)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc327)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc328)
  cir.func private @close(!s32i) -> !s32i loc(#loc329)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc330)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc333)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc334)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc335)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc334)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc335)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc30)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc338)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc338)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc340)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc341)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc342)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc343)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc44)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc342)
        cir.scope {
          cir.do {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc49)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc51)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
            cir.store %19, %12 : !s32i, !cir.ptr<!s32i> loc(#loc345)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc57)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc58)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc347)
              cir.if %61 {
                cir.break loc(#loc60)
              } loc(#loc348)
            } loc(#loc346)
            %20 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc349)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc63)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc350)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc351)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc68)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc68)
            %25 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc352)
            %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
            %29 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc353)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc76)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc76)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
            %34 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc354)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              %59 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc356)
              %60 = cir.const #cir.int<16> : !u64i loc(#loc357)
              %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc357)
              %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc89)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc358)
              cir.if %65 {
                cir.break loc(#loc91)
              } loc(#loc359)
            } loc(#loc355)
            %35 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc92)
            %36 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
            %38 = cir.const #cir.int<3> : !s32i loc(#loc94)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc94)
            %40 = cir.const #cir.int<4> : !u64i loc(#loc94)
            %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc94)
            %42 = cir.const #cir.int<2> : !s32i loc(#loc94)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc94)
            %44 = cir.binop(add, %41, %43) : !u64i loc(#loc94)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc95)
            %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc360)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc96)
            %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
            %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc97)
            cir.store %50, %10 : !s32i, !cir.ptr<!s32i> loc(#loc361)
            cir.scope {
              %58 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc103)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc363)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc104)
                cir.yield %63 : !cir.bool loc(#loc104)
              }, false {
                %63 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc106)
                %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc364)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc104)
                  cir.yield %67 : !cir.bool loc(#loc104)
                }, false {
                  %67 = cir.const #false loc(#loc104)
                  cir.yield %67 : !cir.bool loc(#loc104)
                }) : (!cir.bool) -> !cir.bool loc(#loc104)
                cir.yield %66 : !cir.bool loc(#loc104)
              }) : (!cir.bool) -> !cir.bool loc(#loc104)
              cir.if %62 {
                cir.break loc(#loc108)
              } loc(#loc365)
            } loc(#loc362)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc109)
            %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc109)
            %53 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %54 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc111)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc366)
            %56 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
            %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc113)
            cir.store %57, %5 : !s32i, !cir.ptr<!s32i> loc(#loc367)
            cir.yield loc(#loc48)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc116)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc116)
            cir.condition(%17) loc(#loc116)
          } loc(#loc344)
        } loc(#loc344)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc120)
          %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc120)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc369)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc122)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc123)
          } loc(#loc370)
        } loc(#loc368)
      } loc(#loc339)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    } loc(#loc337)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc373)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc373)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc132)
      %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc133)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc20)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc20)
      cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    } loc(#loc372)
    cir.return loc(#loc22)
  } loc(#loc332)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc137)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc376)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc139)
    cir.return loc(#loc136)
  } loc(#loc374)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc377)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc148)
  cir.func @main(%arg0: !s32i loc(fused[#loc151, #loc152]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc153, #loc154])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc381)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc150)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc155)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc156)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc157)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc157)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc158)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc145)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc382)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_32_good() : () -> () loc(#loc160)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc146)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc147)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc383)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_32_bad() : () -> () loc(#loc164)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc148)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc167)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    cir.return %17 : !s32i loc(#loc384)
  } loc(#loc379)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc386)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc387)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc388)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc387)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc388)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc178)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc391)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc184)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc391)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc185)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc392)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc187)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    } loc(#loc390)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc395)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc395)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc195)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc195)
      %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc196)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc197)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc197)
      cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    } loc(#loc394)
    cir.return loc(#loc170)
  } loc(#loc385)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc200)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc397)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc398)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc399)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc398)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc399)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc210)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc402)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc215)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc216)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc402)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc404)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc405)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc406)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc407)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc224)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc224)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc406)
        cir.scope {
          cir.do {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc229)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc230)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc231)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc232)
            cir.store %19, %12 : !s32i, !cir.ptr<!s32i> loc(#loc409)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc237)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc238)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc238)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc411)
              cir.if %61 {
                cir.break loc(#loc240)
              } loc(#loc412)
            } loc(#loc410)
            %20 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc413)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc243)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc414)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc415)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc248)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc248)
            %25 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc416)
            %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc250)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc250)
            %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc251)
            %29 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc417)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc254)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc254)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc255)
            %34 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc418)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc260)
              %59 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc420)
              %60 = cir.const #cir.int<16> : !u64i loc(#loc421)
              %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc421)
              %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc265)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc266)
              %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc266)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc422)
              cir.if %65 {
                cir.break loc(#loc268)
              } loc(#loc423)
            } loc(#loc419)
            %35 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc269)
            %36 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc270)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc270)
            %38 = cir.const #cir.int<3> : !s32i loc(#loc271)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc271)
            %40 = cir.const #cir.int<4> : !u64i loc(#loc271)
            %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc271)
            %42 = cir.const #cir.int<2> : !s32i loc(#loc271)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc271)
            %44 = cir.binop(add, %41, %43) : !u64i loc(#loc271)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc272)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc272)
            %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc424)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc273)
            %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc274)
            %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc274)
            cir.store %50, %10 : !s32i, !cir.ptr<!s32i> loc(#loc425)
            cir.scope {
              %58 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc279)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc280)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc280)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc427)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc281)
                cir.yield %63 : !cir.bool loc(#loc281)
              }, false {
                %63 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc282)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc283)
                %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc428)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc281)
                  cir.yield %67 : !cir.bool loc(#loc281)
                }, false {
                  %67 = cir.const #false loc(#loc281)
                  cir.yield %67 : !cir.bool loc(#loc281)
                }) : (!cir.bool) -> !cir.bool loc(#loc281)
                cir.yield %66 : !cir.bool loc(#loc281)
              }) : (!cir.bool) -> !cir.bool loc(#loc281)
              cir.if %62 {
                cir.break loc(#loc285)
              } loc(#loc429)
            } loc(#loc426)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc286)
            %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc286)
            %53 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc287)
            %54 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc288)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc288)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc430)
            %56 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc289)
            %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc290)
            cir.store %57, %5 : !s32i, !cir.ptr<!s32i> loc(#loc431)
            cir.yield loc(#loc228)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc293)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc293)
            cir.condition(%17) loc(#loc293)
          } loc(#loc408)
        } loc(#loc408)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc296)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc297)
          %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc297)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc433)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc299)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc300)
          } loc(#loc434)
        } loc(#loc432)
      } loc(#loc403)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc301)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc302)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    } loc(#loc401)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc437)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc307)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc308)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc437)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc311)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc312)
        %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc439)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc314)
          %13 = cir.const #cir.int<2000> : !s32i loc(#loc315)
          %14 = cir.cmp(le, %12, %13) : !s32i, !cir.bool loc(#loc440)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc313)
            cir.yield %16 : !cir.bool loc(#loc313)
          }, false {
            %16 = cir.const #false loc(#loc313)
            cir.yield %16 : !cir.bool loc(#loc313)
          }) : (!cir.bool) -> !cir.bool loc(#loc313)
          cir.yield %15 : !cir.bool loc(#loc313)
        }, false {
          %12 = cir.const #false loc(#loc313)
          cir.yield %12 : !cir.bool loc(#loc313)
        }) : (!cir.bool) -> !cir.bool loc(#loc313)
        cir.if %11 {
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc319)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc319)
          %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc320)
          %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc199)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc321)
        } else {
          %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc200)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc200)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc322)
        } loc(#loc441)
      } loc(#loc438)
    } loc(#loc436)
    cir.return loc(#loc202)
  } loc(#loc396)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":85:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/unistd.h":480:1)
#loc17 = loc("/usr/include/unistd.h":480:43)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":121:19)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":50:1)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":123:1)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":52:5)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":52:9)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":53:5)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":53:23)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":54:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":54:23)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":56:14)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":56:13)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":56:5)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":57:5)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":116:5)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":58:9)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":58:22)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":58:21)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":59:9)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":114:9)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":64:13)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":64:17)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":65:13)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":65:32)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":66:13)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":66:36)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":67:13)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":67:45)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":68:13)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":103:21)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":78:40)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":78:49)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":78:62)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":78:33)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":78:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":78:73)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":79:17)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":82:17)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":79:21)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":79:38)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":80:17)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":81:21)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":83:24)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":83:25)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":83:34)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":83:37)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":83:51)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":83:17)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":83:52)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":84:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":84:17)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":85:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":85:17)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":85:63)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":86:42)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":86:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":86:17)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":86:50)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:17)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":90:17)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:29)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:62)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:63)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:72)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:86)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:21)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":87:92)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":88:17)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":89:21)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:35)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:50)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:63)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:81)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:84)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:30)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":93:85)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":94:17)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":97:17)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":94:21)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":94:35)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":94:48)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":94:51)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":94:65)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":95:17)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":96:21)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":99:43)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":99:29)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":99:17)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":101:30)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":101:25)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":101:17)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":101:41)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":103:20)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":104:13)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":107:13)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":104:17)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":104:34)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":105:13)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":106:30)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":106:17)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":115:22)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":115:10)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":115:9)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":117:5)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":122:5)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":118:9)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":118:22)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":118:21)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":120:15)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":120:9)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":121:9)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":234:1)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":238:1)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":236:5)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":236:13)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":237:5)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":237:13)
#loc141 = loc("/usr/include/stdlib.h":575:1)
#loc142 = loc("/usr/include/stdlib.h":575:41)
#loc143 = loc("/usr/include/time.h":76:1)
#loc144 = loc("/usr/include/time.h":76:38)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":253:15)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":255:15)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":258:15)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":260:15)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":248:1)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":263:1)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":249:1)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":251:27)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":251:22)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":251:5)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":253:5)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":254:5)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":254:62)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":255:5)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":258:5)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":259:5)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":259:61)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":260:5)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":262:12)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":262:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":130:1)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":149:1)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":132:5)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":132:9)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":133:5)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":133:23)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":134:5)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":134:23)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":136:14)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":136:13)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":136:5)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":137:5)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":142:5)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":138:9)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":138:22)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":138:21)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":140:17)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":140:9)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":141:22)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":141:10)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":141:9)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":143:5)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":148:5)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":144:9)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":144:22)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":144:21)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":146:15)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":146:9)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":147:19)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":147:9)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":225:23)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":229:23)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":152:1)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":232:1)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":154:5)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":154:9)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":155:5)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":155:23)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":156:5)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":156:23)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":158:14)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":158:13)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":158:5)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":159:5)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":218:5)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":160:9)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":160:22)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":160:21)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":161:9)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":216:9)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":166:13)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":166:17)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":167:13)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":167:32)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":168:13)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":168:36)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":169:13)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":169:45)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":170:13)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":205:21)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":180:40)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":180:49)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":180:62)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":180:33)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":180:17)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":180:73)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":181:17)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":184:17)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":181:21)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":181:38)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":182:17)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":183:21)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":185:24)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":185:25)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":185:34)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":185:37)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":185:51)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":185:17)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":185:52)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":186:38)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":186:17)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":187:53)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":187:43)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":187:17)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":187:63)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":188:42)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":188:36)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":188:17)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":188:50)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:17)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":192:17)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:29)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:62)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:63)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:72)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:86)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:21)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":189:92)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":190:17)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":191:21)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:35)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:50)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:63)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:81)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:84)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:30)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:17)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":195:85)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":196:17)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":199:17)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":196:21)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":196:35)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":196:48)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":196:51)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":196:65)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":197:17)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":198:21)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":201:43)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":201:29)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":201:17)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":203:30)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":203:25)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":203:17)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":203:41)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":205:20)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":206:13)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":209:13)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":206:17)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":206:34)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":207:13)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":208:30)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":208:17)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":217:22)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":217:10)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":217:9)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":219:5)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":231:5)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":220:9)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":220:22)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":220:21)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":222:9)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":230:9)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":222:13)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":222:21)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":222:23)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":222:26)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":222:35)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":223:9)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":226:9)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":228:9)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":224:19)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":224:13)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":225:13)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_32.c":229:13)
#loc323 = loc(fused[#loc1, #loc2])
#loc324 = loc(fused[#loc3, #loc4])
#loc325 = loc(fused[#loc6, #loc7])
#loc326 = loc(fused[#loc8, #loc9])
#loc327 = loc(fused[#loc10, #loc11])
#loc328 = loc(fused[#loc12, #loc13])
#loc329 = loc(fused[#loc14, #loc15])
#loc330 = loc(fused[#loc16, #loc17])
#loc331 = loc(fused[#loc18, #loc19])
#loc332 = loc(fused[#loc21, #loc22])
#loc333 = loc(fused[#loc23, #loc24])
#loc334 = loc(fused[#loc25, #loc26])
#loc335 = loc(fused[#loc27, #loc28])
#loc336 = loc(fused[#loc31, #loc29])
#loc337 = loc(fused[#loc32, #loc33])
#loc338 = loc(fused[#loc34, #loc35])
#loc339 = loc(fused[#loc37, #loc38])
#loc340 = loc(fused[#loc39, #loc40])
#loc341 = loc(fused[#loc41, #loc42])
#loc342 = loc(fused[#loc43, #loc44])
#loc343 = loc(fused[#loc45, #loc46])
#loc344 = loc(fused[#loc47, #loc48])
#loc345 = loc(fused[#loc53, #loc54])
#loc346 = loc(fused[#loc55, #loc56])
#loc347 = loc(fused[#loc57, #loc58])
#loc348 = loc(fused[#loc59, #loc56])
#loc349 = loc(fused[#loc61, #loc62])
#loc350 = loc(fused[#loc64, #loc65])
#loc351 = loc(fused[#loc66, #loc67])
#loc352 = loc(fused[#loc70, #loc68])
#loc353 = loc(fused[#loc74, #loc75])
#loc354 = loc(fused[#loc79, #loc80])
#loc355 = loc(fused[#loc81, #loc82])
#loc356 = loc(fused[#loc84, #loc85])
#loc357 = loc(fused[#loc86, #loc87])
#loc358 = loc(fused[#loc88, #loc89])
#loc359 = loc(fused[#loc90, #loc82])
#loc360 = loc(fused[#loc94, #loc95])
#loc361 = loc(fused[#loc98, #loc99])
#loc362 = loc(fused[#loc100, #loc101])
#loc363 = loc(fused[#loc102, #loc103])
#loc364 = loc(fused[#loc105, #loc106])
#loc365 = loc(fused[#loc107, #loc101])
#loc366 = loc(fused[#loc111, #loc109])
#loc367 = loc(fused[#loc114, #loc115])
#loc368 = loc(fused[#loc117, #loc118])
#loc369 = loc(fused[#loc119, #loc120])
#loc370 = loc(fused[#loc121, #loc118])
#loc371 = loc(fused[#loc126, #loc124])
#loc372 = loc(fused[#loc127, #loc128])
#loc373 = loc(fused[#loc129, #loc130])
#loc374 = loc(fused[#loc135, #loc136])
#loc375 = loc(fused[#loc137, #loc138])
#loc376 = loc(fused[#loc139, #loc140])
#loc377 = loc(fused[#loc141, #loc142])
#loc378 = loc(fused[#loc143, #loc144])
#loc379 = loc(fused[#loc149, #loc150])
#loc382 = loc(fused[#loc160, #loc161])
#loc383 = loc(fused[#loc164, #loc165])
#loc384 = loc(fused[#loc168, #loc167])
#loc385 = loc(fused[#loc169, #loc170])
#loc386 = loc(fused[#loc171, #loc172])
#loc387 = loc(fused[#loc173, #loc174])
#loc388 = loc(fused[#loc175, #loc176])
#loc389 = loc(fused[#loc179, #loc177])
#loc390 = loc(fused[#loc180, #loc181])
#loc391 = loc(fused[#loc182, #loc183])
#loc392 = loc(fused[#loc186, #loc185])
#loc393 = loc(fused[#loc189, #loc187])
#loc394 = loc(fused[#loc190, #loc191])
#loc395 = loc(fused[#loc192, #loc193])
#loc396 = loc(fused[#loc201, #loc202])
#loc397 = loc(fused[#loc203, #loc204])
#loc398 = loc(fused[#loc205, #loc206])
#loc399 = loc(fused[#loc207, #loc208])
#loc400 = loc(fused[#loc211, #loc209])
#loc401 = loc(fused[#loc212, #loc213])
#loc402 = loc(fused[#loc214, #loc215])
#loc403 = loc(fused[#loc217, #loc218])
#loc404 = loc(fused[#loc219, #loc220])
#loc405 = loc(fused[#loc221, #loc222])
#loc406 = loc(fused[#loc223, #loc224])
#loc407 = loc(fused[#loc225, #loc226])
#loc408 = loc(fused[#loc227, #loc228])
#loc409 = loc(fused[#loc233, #loc234])
#loc410 = loc(fused[#loc235, #loc236])
#loc411 = loc(fused[#loc237, #loc238])
#loc412 = loc(fused[#loc239, #loc236])
#loc413 = loc(fused[#loc241, #loc242])
#loc414 = loc(fused[#loc244, #loc245])
#loc415 = loc(fused[#loc246, #loc247])
#loc416 = loc(fused[#loc249, #loc248])
#loc417 = loc(fused[#loc252, #loc253])
#loc418 = loc(fused[#loc256, #loc257])
#loc419 = loc(fused[#loc258, #loc259])
#loc420 = loc(fused[#loc261, #loc262])
#loc421 = loc(fused[#loc263, #loc264])
#loc422 = loc(fused[#loc265, #loc266])
#loc423 = loc(fused[#loc267, #loc259])
#loc424 = loc(fused[#loc271, #loc272])
#loc425 = loc(fused[#loc275, #loc276])
#loc426 = loc(fused[#loc277, #loc278])
#loc427 = loc(fused[#loc279, #loc280])
#loc428 = loc(fused[#loc282, #loc283])
#loc429 = loc(fused[#loc284, #loc278])
#loc430 = loc(fused[#loc288, #loc286])
#loc431 = loc(fused[#loc291, #loc292])
#loc432 = loc(fused[#loc294, #loc295])
#loc433 = loc(fused[#loc296, #loc297])
#loc434 = loc(fused[#loc298, #loc295])
#loc435 = loc(fused[#loc303, #loc301])
#loc436 = loc(fused[#loc304, #loc305])
#loc437 = loc(fused[#loc306, #loc307])
#loc438 = loc(fused[#loc309, #loc310])
#loc439 = loc(fused[#loc311, #loc312])
#loc440 = loc(fused[#loc314, #loc315])
#loc441 = loc(fused[#loc316, #loc317, #loc318, #loc310])
