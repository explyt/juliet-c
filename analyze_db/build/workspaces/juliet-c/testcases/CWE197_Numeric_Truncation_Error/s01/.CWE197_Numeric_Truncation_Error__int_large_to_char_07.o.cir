!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_large_to_char_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc80)
  cir.func private @printHexCharLine(!s8i) loc(#loc81)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_large_to_char_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc83)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc84)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc12)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.br ^bb1 loc(#loc86)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc80)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc87)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc88)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<32767> : !s32i loc(#loc19)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc19)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.br ^bb3 loc(#loc15)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc8)
    cir.store %12, %0 : !s8i, !cir.ptr<!s8i> loc(#loc83)
    %13 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc24)
    cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc25)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc82)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_large_to_char_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc93)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc91)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc96)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc97)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc42)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc80)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc100)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb4 loc(#loc49)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<127> : !s32i loc(#loc52)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc53)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc52)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.br ^bb4 loc(#loc45)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc45)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc38)
    cir.store %14, %0 : !s8i, !cir.ptr<!s8i> loc(#loc96)
    %15 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc57)
    cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc58)
    cir.br ^bb7 loc(#loc56)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc36)
  } loc(#loc95)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc105)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc66)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc80)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc71)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc109)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc110)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<127> : !s32i loc(#loc73)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc73)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.br ^bb3 loc(#loc69)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc62)
    cir.store %12, %0 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    %13 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc78)
    cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc79)
    cir.br ^bb6 loc(#loc77)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc60)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":0:0)
#loc1 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":23:1)
#loc2 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":27:1)
#loc6 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":42:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":39:9)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":39:31)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":29:5)
#loc10 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":29:9)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":31:13)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":31:12)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":31:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":32:5)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":36:5)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":32:8)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":32:20)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":33:5)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":35:16)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":35:27)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":35:9)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":37:5)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":41:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":40:26)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":40:9)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":89:1)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":93:1)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":91:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":91:14)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":92:5)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":92:14)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":57:19)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":49:1)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":69:1)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":66:9)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":66:31)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":51:5)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":51:9)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":53:13)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":53:12)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":53:5)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":54:5)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":63:5)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":54:8)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":54:20)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":55:5)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":58:5)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":60:5)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":57:9)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":62:16)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":62:25)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":62:9)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":64:5)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":68:5)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":67:26)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":67:9)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":72:1)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":87:1)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":84:9)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":84:31)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":74:5)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":74:9)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":76:13)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":76:12)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":76:5)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":77:5)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":81:5)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":77:8)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":77:20)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":78:5)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":80:16)
#loc74 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":80:25)
#loc75 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":80:9)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":82:5)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":86:5)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":85:26)
#loc79 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_07.c":85:9)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc13, #loc11])
#loc86 = loc(fused[#loc14, #loc15])
#loc87 = loc(fused[#loc16, #loc17])
#loc88 = loc(fused[#loc18, #loc15])
#loc89 = loc(fused[#loc21, #loc20])
#loc90 = loc(fused[#loc22, #loc23])
#loc91 = loc(fused[#loc26, #loc27])
#loc92 = loc(fused[#loc28, #loc29])
#loc93 = loc(fused[#loc30, #loc31])
#loc94 = loc(fused[#loc32, #loc33])
#loc95 = loc(fused[#loc35, #loc36])
#loc96 = loc(fused[#loc37, #loc38])
#loc97 = loc(fused[#loc39, #loc40])
#loc98 = loc(fused[#loc43, #loc41])
#loc99 = loc(fused[#loc44, #loc45])
#loc100 = loc(fused[#loc46, #loc47])
#loc101 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc102 = loc(fused[#loc54, #loc53])
#loc103 = loc(fused[#loc55, #loc56])
#loc104 = loc(fused[#loc59, #loc60])
#loc105 = loc(fused[#loc61, #loc62])
#loc106 = loc(fused[#loc63, #loc64])
#loc107 = loc(fused[#loc67, #loc65])
#loc108 = loc(fused[#loc68, #loc69])
#loc109 = loc(fused[#loc70, #loc71])
#loc110 = loc(fused[#loc72, #loc69])
#loc111 = loc(fused[#loc75, #loc74])
#loc112 = loc(fused[#loc76, #loc77])
