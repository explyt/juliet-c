!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc135 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":219:10)
#loc136 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":219:14)
#loc137 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":219:20)
#loc138 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":219:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc319 = loc(fused[#loc135, #loc136])
#loc320 = loc(fused[#loc137, #loc138])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc267)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc268)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc269)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc270)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc271)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc272)
  cir.func private @close(!s32i) -> !s32i loc(#loc273)
  cir.global external dsolocal @CWE369_Divide_by_Zero__float_connect_socket_68_badData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc274)
  cir.func no_proto private @CWE369_Divide_by_Zero__float_connect_socket_68b_badSink(...) loc(#loc275)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_68_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc24)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc278)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc280)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc281)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc282)
      %9 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc283)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc33)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc282)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc38)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc40)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc285)
          cir.scope {
            %49 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc46)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc47)
            %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc287)
            cir.if %52 {
              cir.break loc(#loc49)
            } loc(#loc288)
          } loc(#loc286)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc289)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc52)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc290)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc57)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc57)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc292)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc60)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc293)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc65)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc65)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc66)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc294)
          cir.scope {
            %49 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc72)
            %50 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc296)
            %51 = cir.const #cir.int<16> : !u64i loc(#loc297)
            %52 = cir.cast(integral, %51 : !u64i), !u32i loc(#loc297)
            %53 = cir.call @connect(%49, %50, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc77)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc78)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc298)
            cir.if %56 {
              cir.break loc(#loc80)
            } loc(#loc299)
          } loc(#loc295)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc82)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
          %34 = cir.const #cir.int<20> : !s32i loc(#loc83)
          %35 = cir.const #cir.int<1> : !s32i loc(#loc84)
          %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc83)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc83)
          %38 = cir.const #cir.int<0> : !s32i loc(#loc85)
          %39 = cir.call @recv(%31, %33, %37, %38) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc86)
          %40 = cir.cast(integral, %39 : !s64i), !s32i loc(#loc86)
          cir.store %40, %6 : !s32i, !cir.ptr<!s32i> loc(#loc300)
          cir.scope {
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc91)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc92)
            %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc92)
            %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc302)
            %53 = cir.ternary(%52, true {
              %54 = cir.const #true loc(#loc93)
              cir.yield %54 : !cir.bool loc(#loc93)
            }, false {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %55 = cir.const #cir.int<0> : !s32i loc(#loc95)
              %56 = cir.cmp(eq, %54, %55) : !s32i, !cir.bool loc(#loc303)
              %57 = cir.ternary(%56, true {
                %58 = cir.const #true loc(#loc93)
                cir.yield %58 : !cir.bool loc(#loc93)
              }, false {
                %58 = cir.const #false loc(#loc93)
                cir.yield %58 : !cir.bool loc(#loc93)
              }) : (!cir.bool) -> !cir.bool loc(#loc93)
              cir.yield %57 : !cir.bool loc(#loc93)
            }) : (!cir.bool) -> !cir.bool loc(#loc93)
            cir.if %53 {
              cir.break loc(#loc97)
            } loc(#loc304)
          } loc(#loc301)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc98)
          %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc98)
          %43 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc99)
          %44 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc100)
          %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc100)
          cir.store %42, %45 : !s8i, !cir.ptr<!s8i> loc(#loc305)
          %46 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc101)
          %47 = cir.call @atof(%46) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc102)
          %48 = cir.cast(floating, %47 : !cir.double), !cir.float loc(#loc102)
          cir.store %48, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc306)
          cir.yield loc(#loc37)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc105)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc105)
          cir.condition(%13) loc(#loc105)
        } loc(#loc284)
      } loc(#loc284)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc109)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc308)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc112)
        } loc(#loc309)
      } loc(#loc307)
    } loc(#loc279)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc113)
    %3 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68_badData : !cir.ptr<!cir.float> loc(#loc274)
    cir.store %2, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc310)
    %4 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc311)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc115)
    cir.return loc(#loc21)
  } loc(#loc276)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_68_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc313)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc119)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc314)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc121)
    cir.return loc(#loc118)
  } loc(#loc312)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc315)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc316)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc132)
  cir.func @main(%arg0: !s32i loc(fused[#loc135, #loc136]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc137, #loc138])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc319)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc320)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc134)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc139)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc140)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc141)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc141)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc142)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc129)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68_good : !cir.ptr<!cir.func<!void ()>> loc(#loc321)
    cir.call @CWE369_Divide_by_Zero__float_connect_socket_68_good() : () -> () loc(#loc144)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc130)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc131)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc322)
    cir.call @CWE369_Divide_by_Zero__float_connect_socket_68_bad() : () -> () loc(#loc148)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc132)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    cir.return %17 : !s32i loc(#loc323)
  } loc(#loc318)
  cir.global external dsolocal @CWE369_Divide_by_Zero__float_connect_socket_68_goodG2BData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc324)
  cir.global external dsolocal @CWE369_Divide_by_Zero__float_connect_socket_68_goodB2GData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc325)
  cir.func no_proto private @CWE369_Divide_by_Zero__float_connect_socket_68b_goodG2BSink(...) loc(#loc326)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc328)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc163)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc329)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc165)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc330)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc167)
    %4 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68_goodG2BData : !cir.ptr<!cir.float> loc(#loc324)
    cir.store %3, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc331)
    %5 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc332)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    cir.return loc(#loc160)
  } loc(#loc327)
  cir.func no_proto private @CWE369_Divide_by_Zero__float_connect_socket_68b_goodB2GSink(...) loc(#loc333)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc177)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc336)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc338)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc339)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc340)
      %9 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc341)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc186)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc186)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc340)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc191)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc192)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc193)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc194)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc343)
          cir.scope {
            %49 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc199)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc200)
            %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc200)
            %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc345)
            cir.if %52 {
              cir.break loc(#loc202)
            } loc(#loc346)
          } loc(#loc344)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc347)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc205)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc348)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc349)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc210)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc210)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc350)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc212)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc212)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc213)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc351)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc216)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc216)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc217)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc352)
          cir.scope {
            %49 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc222)
            %50 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc354)
            %51 = cir.const #cir.int<16> : !u64i loc(#loc355)
            %52 = cir.cast(integral, %51 : !u64i), !u32i loc(#loc355)
            %53 = cir.call @connect(%49, %50, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc227)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc228)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc228)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc356)
            cir.if %56 {
              cir.break loc(#loc230)
            } loc(#loc357)
          } loc(#loc353)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc231)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc232)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc232)
          %34 = cir.const #cir.int<20> : !s32i loc(#loc233)
          %35 = cir.const #cir.int<1> : !s32i loc(#loc234)
          %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc233)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc233)
          %38 = cir.const #cir.int<0> : !s32i loc(#loc235)
          %39 = cir.call @recv(%31, %33, %37, %38) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc236)
          %40 = cir.cast(integral, %39 : !s64i), !s32i loc(#loc236)
          cir.store %40, %6 : !s32i, !cir.ptr<!s32i> loc(#loc358)
          cir.scope {
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc241)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc242)
            %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc242)
            %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc360)
            %53 = cir.ternary(%52, true {
              %54 = cir.const #true loc(#loc243)
              cir.yield %54 : !cir.bool loc(#loc243)
            }, false {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              %55 = cir.const #cir.int<0> : !s32i loc(#loc245)
              %56 = cir.cmp(eq, %54, %55) : !s32i, !cir.bool loc(#loc361)
              %57 = cir.ternary(%56, true {
                %58 = cir.const #true loc(#loc243)
                cir.yield %58 : !cir.bool loc(#loc243)
              }, false {
                %58 = cir.const #false loc(#loc243)
                cir.yield %58 : !cir.bool loc(#loc243)
              }) : (!cir.bool) -> !cir.bool loc(#loc243)
              cir.yield %57 : !cir.bool loc(#loc243)
            }) : (!cir.bool) -> !cir.bool loc(#loc243)
            cir.if %53 {
              cir.break loc(#loc247)
            } loc(#loc362)
          } loc(#loc359)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc248)
          %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc248)
          %43 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc249)
          %44 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc250)
          %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc250)
          cir.store %42, %45 : !s8i, !cir.ptr<!s8i> loc(#loc363)
          %46 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc251)
          %47 = cir.call @atof(%46) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc252)
          %48 = cir.cast(floating, %47 : !cir.double), !cir.float loc(#loc252)
          cir.store %48, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc364)
          cir.yield loc(#loc190)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc255)
          cir.condition(%13) loc(#loc255)
        } loc(#loc342)
      } loc(#loc342)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc258)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc259)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc259)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc366)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc261)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc262)
        } loc(#loc367)
      } loc(#loc365)
    } loc(#loc337)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc263)
    %3 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68_goodB2GData : !cir.ptr<!cir.float> loc(#loc325)
    cir.store %2, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc368)
    %4 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_68b_goodB2GSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc369)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc369)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc265)
    cir.return loc(#loc174)
  } loc(#loc334)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_68a.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":83:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":102:1)
#loc13 = loc("/usr/include/stdlib.h":103:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":44:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":44:7)
#loc18 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":51:1)
#loc19 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":51:62)
#loc20 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":53:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":116:1)
#loc22 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":55:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":55:11)
#loc24 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":57:12)
#loc25 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":57:5)
#loc26 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":58:5)
#loc27 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":113:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":63:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":63:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":64:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":64:28)
#loc32 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":65:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":65:32)
#loc34 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":66:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":66:41)
#loc36 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":67:9)
#loc37 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":102:17)
#loc38 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":76:36)
#loc39 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":76:45)
#loc40 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":76:58)
#loc41 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":76:29)
#loc42 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":76:13)
#loc43 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":76:69)
#loc44 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":77:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":80:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":77:17)
#loc47 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":77:34)
#loc48 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":78:13)
#loc49 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":79:17)
#loc50 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":81:20)
#loc51 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":81:21)
#loc52 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":81:30)
#loc53 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":81:33)
#loc54 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":81:47)
#loc55 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":81:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":81:48)
#loc57 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":82:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":82:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":83:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":83:13)
#loc64 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":83:59)
#loc65 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":84:38)
#loc66 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":84:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":84:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":84:46)
#loc70 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:13)
#loc71 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":88:13)
#loc72 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:25)
#loc73 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:58)
#loc74 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:59)
#loc75 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:68)
#loc76 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:82)
#loc77 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:17)
#loc78 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":85:88)
#loc79 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":86:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":87:17)
#loc81 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:31)
#loc82 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:46)
#loc83 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:59)
#loc84 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:77)
#loc85 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:80)
#loc86 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:26)
#loc87 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:13)
#loc88 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":92:81)
#loc89 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":93:13)
#loc90 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":96:13)
#loc91 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":93:17)
#loc92 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":93:31)
#loc93 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":93:44)
#loc94 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":93:47)
#loc95 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":93:61)
#loc96 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":94:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":95:17)
#loc98 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":98:39)
#loc99 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":98:25)
#loc100 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":98:13)
#loc101 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":100:32)
#loc102 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":100:27)
#loc103 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":100:13)
#loc104 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":100:43)
#loc105 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":102:16)
#loc106 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":103:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":106:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":103:13)
#loc109 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":103:30)
#loc110 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":104:9)
#loc111 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":105:26)
#loc112 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":105:13)
#loc113 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":114:62)
#loc114 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":114:5)
#loc115 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":115:5)
#loc116 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":115:61)
#loc117 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":204:1)
#loc118 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":208:1)
#loc119 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":206:5)
#loc120 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":206:13)
#loc121 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":207:5)
#loc122 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":207:13)
#loc123 = loc("/usr/include/stdlib.h":575:1)
#loc124 = loc("/usr/include/stdlib.h":575:41)
#loc125 = loc("/usr/include/time.h":76:1)
#loc126 = loc("/usr/include/time.h":76:38)
#loc127 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc128 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc129 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":224:15)
#loc130 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":226:15)
#loc131 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":229:15)
#loc132 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":231:15)
#loc133 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":219:1)
#loc134 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":234:1)
#loc139 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":220:1)
#loc140 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":222:27)
#loc141 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":222:22)
#loc142 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":222:5)
#loc143 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":224:5)
#loc144 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":225:5)
#loc145 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":225:57)
#loc146 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":226:5)
#loc147 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":229:5)
#loc148 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":230:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":230:56)
#loc150 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":231:5)
#loc151 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":233:12)
#loc152 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":233:5)
#loc153 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":45:1)
#loc154 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":45:7)
#loc155 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":46:1)
#loc156 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":46:7)
#loc157 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":123:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":123:66)
#loc159 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":127:1)
#loc160 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":136:1)
#loc161 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":129:5)
#loc162 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":129:11)
#loc163 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":131:12)
#loc164 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":131:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":133:12)
#loc166 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":133:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":134:66)
#loc168 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":134:5)
#loc169 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":135:5)
#loc170 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":135:65)
#loc171 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":124:1)
#loc172 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":124:66)
#loc173 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":139:1)
#loc174 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":202:1)
#loc175 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":141:5)
#loc176 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":141:11)
#loc177 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":143:12)
#loc178 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":143:5)
#loc179 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":144:5)
#loc180 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":199:5)
#loc181 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":149:9)
#loc182 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":149:13)
#loc183 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":150:9)
#loc184 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":150:28)
#loc185 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":151:9)
#loc186 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":151:32)
#loc187 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":152:9)
#loc188 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":152:41)
#loc189 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":153:9)
#loc190 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":188:17)
#loc191 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":162:36)
#loc192 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":162:45)
#loc193 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":162:58)
#loc194 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":162:29)
#loc195 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":162:13)
#loc196 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":162:69)
#loc197 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":163:13)
#loc198 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":166:13)
#loc199 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":163:17)
#loc200 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":163:34)
#loc201 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":164:13)
#loc202 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":165:17)
#loc203 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":167:20)
#loc204 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":167:21)
#loc205 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":167:30)
#loc206 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":167:33)
#loc207 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":167:47)
#loc208 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":167:13)
#loc209 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":167:48)
#loc210 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":168:34)
#loc211 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":168:13)
#loc212 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":169:49)
#loc213 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":169:39)
#loc214 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":169:13)
#loc215 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":169:59)
#loc216 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":170:38)
#loc217 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":170:32)
#loc218 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":170:13)
#loc219 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":170:46)
#loc220 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:13)
#loc221 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":174:13)
#loc222 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:25)
#loc223 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:58)
#loc224 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:59)
#loc225 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:68)
#loc226 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:82)
#loc227 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:17)
#loc228 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":171:88)
#loc229 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":172:13)
#loc230 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":173:17)
#loc231 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:31)
#loc232 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:46)
#loc233 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:59)
#loc234 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:77)
#loc235 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:80)
#loc236 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:26)
#loc237 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:13)
#loc238 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":178:81)
#loc239 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":179:13)
#loc240 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":182:13)
#loc241 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":179:17)
#loc242 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":179:31)
#loc243 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":179:44)
#loc244 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":179:47)
#loc245 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":179:61)
#loc246 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":180:13)
#loc247 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":181:17)
#loc248 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":184:39)
#loc249 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":184:25)
#loc250 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":184:13)
#loc251 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":186:32)
#loc252 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":186:27)
#loc253 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":186:13)
#loc254 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":186:43)
#loc255 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":188:16)
#loc256 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":189:9)
#loc257 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":192:9)
#loc258 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":189:13)
#loc259 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":189:30)
#loc260 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":190:9)
#loc261 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":191:26)
#loc262 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":191:13)
#loc263 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":200:66)
#loc264 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":200:5)
#loc265 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":201:5)
#loc266 = loc("CWE369_Divide_by_Zero__float_connect_socket_68a.c":201:65)
#loc267 = loc(fused[#loc1, #loc2])
#loc268 = loc(fused[#loc3, #loc4])
#loc269 = loc(fused[#loc6, #loc7])
#loc270 = loc(fused[#loc8, #loc9])
#loc271 = loc(fused[#loc10, #loc11])
#loc272 = loc(fused[#loc12, #loc13])
#loc273 = loc(fused[#loc14, #loc15])
#loc274 = loc(fused[#loc16, #loc17])
#loc275 = loc(fused[#loc18, #loc19])
#loc276 = loc(fused[#loc20, #loc21])
#loc277 = loc(fused[#loc22, #loc23])
#loc278 = loc(fused[#loc25, #loc24])
#loc279 = loc(fused[#loc26, #loc27])
#loc280 = loc(fused[#loc28, #loc29])
#loc281 = loc(fused[#loc30, #loc31])
#loc282 = loc(fused[#loc32, #loc33])
#loc283 = loc(fused[#loc34, #loc35])
#loc284 = loc(fused[#loc36, #loc37])
#loc285 = loc(fused[#loc42, #loc43])
#loc286 = loc(fused[#loc44, #loc45])
#loc287 = loc(fused[#loc46, #loc47])
#loc288 = loc(fused[#loc48, #loc45])
#loc289 = loc(fused[#loc50, #loc51])
#loc290 = loc(fused[#loc53, #loc54])
#loc291 = loc(fused[#loc55, #loc56])
#loc292 = loc(fused[#loc59, #loc57])
#loc293 = loc(fused[#loc63, #loc64])
#loc294 = loc(fused[#loc68, #loc69])
#loc295 = loc(fused[#loc70, #loc71])
#loc296 = loc(fused[#loc73, #loc74])
#loc297 = loc(fused[#loc75, #loc76])
#loc298 = loc(fused[#loc77, #loc78])
#loc299 = loc(fused[#loc79, #loc71])
#loc300 = loc(fused[#loc87, #loc88])
#loc301 = loc(fused[#loc89, #loc90])
#loc302 = loc(fused[#loc91, #loc92])
#loc303 = loc(fused[#loc94, #loc95])
#loc304 = loc(fused[#loc96, #loc90])
#loc305 = loc(fused[#loc100, #loc98])
#loc306 = loc(fused[#loc103, #loc104])
#loc307 = loc(fused[#loc106, #loc107])
#loc308 = loc(fused[#loc108, #loc109])
#loc309 = loc(fused[#loc110, #loc107])
#loc310 = loc(fused[#loc114, #loc113])
#loc311 = loc(fused[#loc115, #loc116])
#loc312 = loc(fused[#loc117, #loc118])
#loc313 = loc(fused[#loc119, #loc120])
#loc314 = loc(fused[#loc121, #loc122])
#loc315 = loc(fused[#loc123, #loc124])
#loc316 = loc(fused[#loc125, #loc126])
#loc317 = loc(fused[#loc127, #loc128])
#loc318 = loc(fused[#loc133, #loc134])
#loc321 = loc(fused[#loc144, #loc145])
#loc322 = loc(fused[#loc148, #loc149])
#loc323 = loc(fused[#loc152, #loc151])
#loc324 = loc(fused[#loc153, #loc154])
#loc325 = loc(fused[#loc155, #loc156])
#loc326 = loc(fused[#loc157, #loc158])
#loc327 = loc(fused[#loc159, #loc160])
#loc328 = loc(fused[#loc161, #loc162])
#loc329 = loc(fused[#loc164, #loc163])
#loc330 = loc(fused[#loc166, #loc165])
#loc331 = loc(fused[#loc168, #loc167])
#loc332 = loc(fused[#loc169, #loc170])
#loc333 = loc(fused[#loc171, #loc172])
#loc334 = loc(fused[#loc173, #loc174])
#loc335 = loc(fused[#loc175, #loc176])
#loc336 = loc(fused[#loc178, #loc177])
#loc337 = loc(fused[#loc179, #loc180])
#loc338 = loc(fused[#loc181, #loc182])
#loc339 = loc(fused[#loc183, #loc184])
#loc340 = loc(fused[#loc185, #loc186])
#loc341 = loc(fused[#loc187, #loc188])
#loc342 = loc(fused[#loc189, #loc190])
#loc343 = loc(fused[#loc195, #loc196])
#loc344 = loc(fused[#loc197, #loc198])
#loc345 = loc(fused[#loc199, #loc200])
#loc346 = loc(fused[#loc201, #loc198])
#loc347 = loc(fused[#loc203, #loc204])
#loc348 = loc(fused[#loc206, #loc207])
#loc349 = loc(fused[#loc208, #loc209])
#loc350 = loc(fused[#loc211, #loc210])
#loc351 = loc(fused[#loc214, #loc215])
#loc352 = loc(fused[#loc218, #loc219])
#loc353 = loc(fused[#loc220, #loc221])
#loc354 = loc(fused[#loc223, #loc224])
#loc355 = loc(fused[#loc225, #loc226])
#loc356 = loc(fused[#loc227, #loc228])
#loc357 = loc(fused[#loc229, #loc221])
#loc358 = loc(fused[#loc237, #loc238])
#loc359 = loc(fused[#loc239, #loc240])
#loc360 = loc(fused[#loc241, #loc242])
#loc361 = loc(fused[#loc244, #loc245])
#loc362 = loc(fused[#loc246, #loc240])
#loc363 = loc(fused[#loc250, #loc248])
#loc364 = loc(fused[#loc253, #loc254])
#loc365 = loc(fused[#loc256, #loc257])
#loc366 = loc(fused[#loc258, #loc259])
#loc367 = loc(fused[#loc260, #loc257])
#loc368 = loc(fused[#loc264, #loc263])
#loc369 = loc(fused[#loc265, #loc266])
