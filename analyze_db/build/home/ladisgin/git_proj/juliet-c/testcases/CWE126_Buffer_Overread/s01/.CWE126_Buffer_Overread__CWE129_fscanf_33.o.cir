!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:27)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc112)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc114)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc118)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc120)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc22)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %6 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc113)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.call @__isoc23_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc24)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc118)
    cir.store %14, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc118)
    cir.br ^bb3 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc125)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc38)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc38)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc39)
    cir.br ^bb6 loc(#loc35)
  ^bb5:  // pred: ^bb3
    %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc31)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc12)
  } loc(#loc116)
  cir.func internal private @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc128)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc129)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc130)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc131)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc50)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc52)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %6 = cir.const #cir.int<7> : !s32i loc(#loc54)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc129)
    cir.store %9, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc129)
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc137)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc138)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc68)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc68)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc69)
    cir.br ^bb6 loc(#loc65)
  ^bb5:  // pred: ^bb3
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc70)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc61)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc59)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc42)
  } loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc72)
  cir.func internal private @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc142)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc143)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc82)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc84)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %6 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc86)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc113)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc88)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc88)
    %11 = cir.call @__isoc23_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc86)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb2 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc141)
    cir.store %14, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc141)
    cir.br ^bb3 loc(#loc147)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc148)
    cir.brcond %17 ^bb4, ^bb9 loc(#loc97)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc99)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %20 ^bb5, ^bb6 loc(#loc97)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #true loc(#loc97)
    cir.br ^bb7(%21 : !cir.bool) loc(#loc97)
  ^bb6:  // pred: ^bb4
    %22 = cir.const #false loc(#loc97)
    cir.br ^bb7(%22 : !cir.bool) loc(#loc97)
  ^bb7(%23: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:27)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%23 : !cir.bool) loc(#loc97)
  ^bb9:  // pred: ^bb3
    %24 = cir.const #false loc(#loc97)
    cir.br ^bb10(%24 : !cir.bool) loc(#loc97)
  ^bb10(%25: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:27)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc97)
  ^bb11:  // pred: ^bb10
    cir.brcond %25 ^bb12, ^bb13 loc(#loc150)
  ^bb12:  // pred: ^bb11
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc105)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc105)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc106)
    cir.br ^bb14 loc(#loc102)
  ^bb13:  // pred: ^bb11
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc72)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb14 loc(#loc94)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc94)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc92)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc90)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc74)
  } loc(#loc139)
  cir.func @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_334goodEv() extra(#fn_attr) {
    cir.call @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_33L7goodG2BEv() : () -> () loc(#loc110)
    cir.call @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_33L7goodB2GEv() : () -> () loc(#loc111)
    cir.return loc(#loc109)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":32:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":45:27)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":25:1)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":49:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":34:9)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":34:20)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":36:13)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":36:34)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":27:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":27:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":28:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":28:20)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":30:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":30:12)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":30:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":32:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":32:12)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":33:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":48:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":35:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":47:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":39:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":46:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":39:17)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":39:25)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":40:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":42:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":44:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":41:37)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":41:30)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":41:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":45:17)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":56:1)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":81:1)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":66:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":66:20)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":68:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":68:34)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":58:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":58:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":59:5)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":59:20)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":61:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":61:12)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":61:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":64:12)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":64:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":65:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":80:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":67:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":79:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":71:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":78:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":71:17)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":71:25)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":72:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":74:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":76:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":73:37)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":73:30)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":73:17)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":77:27)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":77:17)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":103:27)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":84:1)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":107:1)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":93:9)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":93:20)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":95:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":95:34)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":86:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":86:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":87:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":87:20)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":89:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":89:12)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":89:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":91:5)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":91:12)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":91:19)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":92:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":106:5)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":94:9)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":105:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":104:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:17)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:25)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:30)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:38)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":97:40)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":98:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":100:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":102:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":99:37)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":99:30)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":99:17)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":103:17)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":109:1)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":113:1)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":111:5)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_33.cpp":112:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc6, #loc7])
#loc115 = loc(fused[#loc8, #loc9])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc23, #loc21])
#loc122 = loc(fused[#loc26, #loc27])
#loc123 = loc(fused[#loc28, #loc29])
#loc124 = loc(fused[#loc30, #loc31])
#loc125 = loc(fused[#loc32, #loc33])
#loc126 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc127 = loc(fused[#loc41, #loc42])
#loc128 = loc(fused[#loc43, #loc44])
#loc129 = loc(fused[#loc45, #loc46])
#loc130 = loc(fused[#loc47, #loc48])
#loc131 = loc(fused[#loc49, #loc50])
#loc132 = loc(fused[#loc53, #loc51])
#loc133 = loc(fused[#loc55, #loc54])
#loc134 = loc(fused[#loc56, #loc57])
#loc135 = loc(fused[#loc58, #loc59])
#loc136 = loc(fused[#loc60, #loc61])
#loc137 = loc(fused[#loc62, #loc63])
#loc138 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc139 = loc(fused[#loc73, #loc74])
#loc140 = loc(fused[#loc75, #loc76])
#loc141 = loc(fused[#loc77, #loc78])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc85, #loc83])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc94])
#loc148 = loc(fused[#loc95, #loc96])
#loc149 = loc(fused[#loc98, #loc100])
#loc150 = loc(fused[#loc101, #loc102, #loc103, #loc94])
#loc151 = loc(fused[#loc108, #loc109])
