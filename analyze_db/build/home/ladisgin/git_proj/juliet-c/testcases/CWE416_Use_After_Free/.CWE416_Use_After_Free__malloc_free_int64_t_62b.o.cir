!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc9 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":27:16)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":27:27)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":47:20)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":47:31)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":62:20)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":62:31)
#loc120 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc46, #loc47])
#loc152 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc117)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func @_ZN45CWE416_Use_After_Free__malloc_free_int64_t_629badSourceERPl(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc13)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc14)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc15)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc122)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc123)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc124)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc19)
    cir.store %8, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc22)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc22)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc23)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc127)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc27)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc32)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc131)
    cir.br ^bb7 loc(#loc130)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc35)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc132)
    cir.brcond %22 ^bb8, ^bb10 loc(#loc132)
  ^bb8:  // pred: ^bb7
    %23 = cir.const #cir.int<5> : !s64i loc(#loc36)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc37)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s64i>, %26 : !u64i), !cir.ptr<!s64i> loc(#loc39)
    cir.store %23, %27 : !s64i, !cir.ptr<!s64i> loc(#loc133)
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc41)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc134)
    cir.br ^bb7 loc(#loc130)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc42)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc42)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    cir.return loc(#loc8)
  } loc(#loc119)
  cir.func @_ZN45CWE416_Use_After_Free__malloc_free_int64_t_6213goodG2BSourceERPl(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc46, #loc47])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc50)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc51)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc52)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc138)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc139)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc140)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc56)
    cir.store %8, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc59)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc59)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc143)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc62)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc64)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
    cir.br ^bb3 loc(#loc58)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc145)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc146)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc69)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc147)
    cir.br ^bb7 loc(#loc146)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc72)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc148)
    cir.brcond %22 ^bb8, ^bb10 loc(#loc148)
  ^bb8:  // pred: ^bb7
    %23 = cir.const #cir.int<5> : !s64i loc(#loc73)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc74)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s64i>, %26 : !u64i), !cir.ptr<!s64i> loc(#loc76)
    cir.store %23, %27 : !s64i, !cir.ptr<!s64i> loc(#loc149)
    cir.br ^bb9 loc(#loc68)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc78)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc150)
    cir.br ^bb7 loc(#loc146)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc68)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc66)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc45)
  } loc(#loc135)
  cir.func @_ZN45CWE416_Use_After_Free__malloc_free_int64_t_6213goodB2GSourceERPl(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc81, #loc82])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc152)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc85)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc87)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc154)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc155)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc156)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc91)
    cir.store %8, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc94)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc94)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc159)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc97)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc99)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
    cir.br ^bb3 loc(#loc93)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc104)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.br ^bb7 loc(#loc162)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc107)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc164)
    cir.brcond %22 ^bb8, ^bb10 loc(#loc164)
  ^bb8:  // pred: ^bb7
    %23 = cir.const #cir.int<5> : !s64i loc(#loc108)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc109)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s64i>, %26 : !u64i), !cir.ptr<!s64i> loc(#loc111)
    cir.store %23, %27 : !s64i, !cir.ptr<!s64i> loc(#loc165)
    cir.br ^bb9 loc(#loc103)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc113)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc166)
    cir.br ^bb7 loc(#loc162)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc103)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc101)
  ^bb12:  // pred: ^bb11
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc114)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc114)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.return loc(#loc80)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":27:1)
#loc8 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":40:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":32:9)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":32:16)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":28:1)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":29:23)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":29:30)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":29:34)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":29:48)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":29:49)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":29:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:5)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:33)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:9)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:17)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:23)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:24)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:30)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":30:29)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":31:5)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":37:5)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":33:9)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":36:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":33:17)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":33:13)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":33:20)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":33:24)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":35:23)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":35:13)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":35:18)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":35:19)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":33:30)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":33:29)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":39:10)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":39:5)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":47:1)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":59:1)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":52:9)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":52:16)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":48:1)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":49:23)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":49:30)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":49:34)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":49:48)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":49:49)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":49:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:5)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:33)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:9)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:17)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:23)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:24)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:30)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":50:29)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":51:5)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":57:5)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":53:9)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":56:9)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":53:17)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":53:13)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":53:20)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":53:24)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":55:23)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":55:13)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":55:18)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":55:19)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":53:30)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":53:29)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":62:1)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":75:1)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":67:9)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":67:16)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":63:1)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":64:23)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":64:30)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":64:34)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":64:48)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":64:49)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":64:5)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:5)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:33)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:9)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:17)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:23)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:24)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:30)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":65:29)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":66:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":72:5)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":68:9)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":71:9)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":68:17)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":68:13)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":68:20)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":68:24)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":70:23)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":70:13)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":70:18)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":70:19)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":68:30)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":68:29)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":74:10)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int64_t_62b.cpp":74:5)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc15, #loc17])
#loc124 = loc(fused[#loc14, #loc18])
#loc125 = loc(fused[#loc19, #loc18])
#loc126 = loc(fused[#loc20, #loc21])
#loc127 = loc(fused[#loc22, #loc23])
#loc128 = loc(fused[#loc24, #loc21])
#loc129 = loc(fused[#loc28, #loc29])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc33, #loc32])
#loc132 = loc(fused[#loc34, #loc35])
#loc133 = loc(fused[#loc37, #loc36])
#loc134 = loc(fused[#loc41, #loc40])
#loc135 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc48, #loc49])
#loc138 = loc(fused[#loc53, #loc54])
#loc139 = loc(fused[#loc52, #loc54])
#loc140 = loc(fused[#loc51, #loc55])
#loc141 = loc(fused[#loc56, #loc55])
#loc142 = loc(fused[#loc57, #loc58])
#loc143 = loc(fused[#loc59, #loc60])
#loc144 = loc(fused[#loc61, #loc58])
#loc145 = loc(fused[#loc65, #loc66])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc70, #loc69])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc74, #loc73])
#loc150 = loc(fused[#loc78, #loc77])
#loc151 = loc(fused[#loc79, #loc80])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc88, #loc89])
#loc155 = loc(fused[#loc87, #loc89])
#loc156 = loc(fused[#loc86, #loc90])
#loc157 = loc(fused[#loc91, #loc90])
#loc158 = loc(fused[#loc92, #loc93])
#loc159 = loc(fused[#loc94, #loc95])
#loc160 = loc(fused[#loc96, #loc93])
#loc161 = loc(fused[#loc100, #loc101])
#loc162 = loc(fused[#loc102, #loc103])
#loc163 = loc(fused[#loc105, #loc104])
#loc164 = loc(fused[#loc106, #loc107])
#loc165 = loc(fused[#loc109, #loc108])
#loc166 = loc(fused[#loc113, #loc112])
