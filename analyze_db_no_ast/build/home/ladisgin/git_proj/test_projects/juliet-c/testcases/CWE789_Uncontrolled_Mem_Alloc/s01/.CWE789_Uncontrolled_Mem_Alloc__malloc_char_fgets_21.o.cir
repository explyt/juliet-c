!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":33:21)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":33:28)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":91:26)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":91:33)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":145:26)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":145:33)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":194:25)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":194:32)
#true = #cir.bool<true> : !cir.bool
#loc350 = loc(fused[#loc24, #loc25])
#loc382 = loc(fused[#loc112, #loc113])
#loc411 = loc(fused[#loc199, #loc200])
#loc440 = loc(fused[#loc284, #loc285])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc340)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc341)
  cir.func private  @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc342)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc343)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc344)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc345)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc346)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc347)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc18)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc348)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc21)
  cir.func internal private  @badSink(%arg0: !u64i loc(fused[#loc24, #loc25])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc350)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc26)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc344)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc29)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc354)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc356)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc357)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc40)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc44)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc359)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc360)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc361)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc364)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc54)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc56)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc58)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc56)
                } loc(#loc365)
              } loc(#loc363)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc59)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
              %17 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc18)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc18)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc62)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
            } else {
              %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc21)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc21)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
            } loc(#loc358)
          } loc(#loc355)
        } loc(#loc353)
      } loc(#loc352)
    } loc(#loc351)
    cir.return loc(#loc23)
  } loc(#loc349)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc367)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc70)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc368)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc370)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc370)
      cir.store %7, %6 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc370)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc78)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc79)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc79)
        %11 = cir.const #cir.int<8> : !u64i loc(#loc79)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc79)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc79)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc79)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc79)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc79)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc81)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc372)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc83)
        cir.if %23 {
          %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc87)
          %25 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc88)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc90)
          %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc87)
          cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc374)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc93)
        } loc(#loc373)
      } loc(#loc371)
    } loc(#loc369)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc344)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    cir.call @badSink(%5) : (!u64i) -> () loc(#loc97)
    cir.return loc(#loc67)
  } loc(#loc366)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc377)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc100)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc378)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc379)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    cir.return loc(#loc99)
  } loc(#loc376)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc380)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc108)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc109)
  cir.func internal private  @goodB2G1Sink(%arg0: !u64i loc(fused[#loc112, #loc113])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc382)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc114)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc380)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc117)
      cir.if %3 {
        %4 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc121)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc386)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc128)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc388)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc389)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc131)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc133)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc134)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc134)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc390)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc135)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc132)
                cir.yield %16 : !cir.bool loc(#loc132)
              }, false {
                %16 = cir.const #false loc(#loc132)
                cir.yield %16 : !cir.bool loc(#loc132)
              }) : (!cir.bool) -> !cir.bool loc(#loc132)
              cir.yield %15 : !cir.bool loc(#loc132)
            }, false {
              %10 = cir.const #false loc(#loc132)
              cir.yield %10 : !cir.bool loc(#loc132)
            }) : (!cir.bool) -> !cir.bool loc(#loc132)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc139)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc392)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc393)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc394)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc395)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc397)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc149)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc151)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc152)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc153)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
                } loc(#loc398)
              } loc(#loc396)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc154)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
              %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc156)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc156)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc158)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc159)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
            } else {
              %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc109)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc109)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc161)
            } loc(#loc391)
          } loc(#loc387)
        } loc(#loc385)
      } loc(#loc384)
    } loc(#loc383)
    cir.return loc(#loc111)
  } loc(#loc381)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc400)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc166)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc401)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc403)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc403)
      cir.store %7, %6 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc403)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc174)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc175)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc175)
        %11 = cir.const #cir.int<8> : !u64i loc(#loc175)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc175)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc175)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc175)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc175)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc175)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc177)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc178)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc405)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc179)
        cir.if %23 {
          %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc183)
          %25 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc184)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc186)
          %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc183)
          cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc407)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc189)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc189)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc190)
        } loc(#loc406)
      } loc(#loc404)
    } loc(#loc402)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc380)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc193)
    cir.call @goodB2G1Sink(%5) : (!u64i) -> () loc(#loc194)
    cir.return loc(#loc163)
  } loc(#loc399)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc409)
  cir.func internal private  @goodB2G2Sink(%arg0: !u64i loc(fused[#loc199, #loc200])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc411)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc201)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc409)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc204)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc204)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc415)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc212)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc417)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc418)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc215)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc217)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc218)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc218)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc419)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc219)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc216)
                cir.yield %16 : !cir.bool loc(#loc216)
              }, false {
                %16 = cir.const #false loc(#loc216)
                cir.yield %16 : !cir.bool loc(#loc216)
              }) : (!cir.bool) -> !cir.bool loc(#loc216)
              cir.yield %15 : !cir.bool loc(#loc216)
            }, false {
              %10 = cir.const #false loc(#loc216)
              cir.yield %10 : !cir.bool loc(#loc216)
            }) : (!cir.bool) -> !cir.bool loc(#loc216)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc223)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc224)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc421)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc422)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc223)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc423)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc424)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc426)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc233)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc235)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc236)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc237)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc235)
                } loc(#loc427)
              } loc(#loc425)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc238)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
              %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc240)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc240)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc238)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc242)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc243)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc244)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc243)
            } else {
              %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc245)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc245)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc246)
            } loc(#loc420)
          } loc(#loc416)
        } loc(#loc414)
      } loc(#loc413)
    } loc(#loc412)
    cir.return loc(#loc198)
  } loc(#loc410)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc429)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc251)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc251)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc430)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc432)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc432)
      cir.store %7, %6 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc432)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc259)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc260)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc260)
        %11 = cir.const #cir.int<8> : !u64i loc(#loc260)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc260)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc260)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc260)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc260)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc260)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc261)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc262)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc263)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc263)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc434)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc264)
        cir.if %23 {
          %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc268)
          %25 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc269)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc271)
          %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc268)
          cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc436)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc274)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc274)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc275)
        } loc(#loc435)
      } loc(#loc433)
    } loc(#loc431)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc409)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc437)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc278)
    cir.call @goodB2G2Sink(%5) : (!u64i) -> () loc(#loc279)
    cir.return loc(#loc248)
  } loc(#loc428)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc438)
  cir.func internal private  @goodG2BSink(%arg0: !u64i loc(fused[#loc284, #loc285])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc440)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc286)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc438)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc289)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc289)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc444)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc297)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc446)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc447)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc300)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc304)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc305)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc449)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc450)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc304)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc451)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc452)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc312)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc313)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc313)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc454)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc314)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc316)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc317)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc318)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc316)
                } loc(#loc455)
              } loc(#loc453)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc319)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc320)
              %17 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc321)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc321)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc319)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc322)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc323)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc324)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc325)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc325)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc324)
            } else {
              %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc326)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc326)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc327)
            } loc(#loc448)
          } loc(#loc445)
        } loc(#loc443)
      } loc(#loc442)
    } loc(#loc441)
    cir.return loc(#loc283)
  } loc(#loc439)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc457)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc332)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc332)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc458)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc334)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc334)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc459)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc336)
    %6 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc438)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc460)
    %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc338)
    cir.call @goodG2BSink(%7) : (!u64i) -> () loc(#loc339)
    cir.return loc(#loc329)
  } loc(#loc456)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":74:23)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":31:1)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":31:24)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/string.h":141:1)
#loc17 = loc("/usr/include/string.h":142:14)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":47:34)
#loc19 = loc("/usr/include/stdlib.h":687:1)
#loc20 = loc("/usr/include/stdlib.h":687:32)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":53:27)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":33:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":57:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":34:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":35:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":56:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":35:8)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":36:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":37:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":55:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":38:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":38:20)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":42:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":54:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":42:17)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":42:24)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":42:43)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":42:22)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":43:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":50:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":52:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":44:36)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":44:43)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":44:48)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":44:59)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":44:60)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":44:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:49)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:21)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:33)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:30)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:39)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:40)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:46)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":45:45)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":47:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":47:24)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":48:27)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":48:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":49:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":49:22)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":53:17)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":59:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":79:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":61:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":61:12)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":63:12)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":63:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":64:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":76:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":65:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":65:45)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":67:9)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":75:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":67:19)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":67:32)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":67:49)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":67:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":67:59)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":67:56)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":68:9)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":71:9)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":73:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":70:20)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":70:28)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":70:41)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":70:47)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":70:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":70:48)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":74:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":77:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":77:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":78:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":78:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":231:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":236:1)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":233:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":233:14)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":234:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":234:14)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":235:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":235:13)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":86:1)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":86:29)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":96:19)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":116:27)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":91:1)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":120:1)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":92:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":93:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":119:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":93:8)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":94:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":97:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":99:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":96:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":100:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":118:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":101:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":101:20)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":117:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:17)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:24)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:43)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:22)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:45)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:48)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:55)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":105:53)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":106:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":113:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":115:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":107:36)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":107:43)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":107:48)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":107:59)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":107:60)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":107:17)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:49)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:21)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:33)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:30)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:39)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:40)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:46)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":108:45)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":110:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":110:24)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":110:34)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":111:27)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":111:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":112:17)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":112:22)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":116:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":122:1)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":142:1)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":124:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":124:12)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":126:12)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":126:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":127:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":139:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":128:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":128:45)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":130:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":138:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":130:19)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":130:32)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":130:49)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":130:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":130:59)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":130:56)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":131:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":134:9)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":136:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":133:20)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":133:28)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":133:41)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":133:47)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":133:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":133:48)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":137:23)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":137:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":140:22)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":140:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":141:18)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":141:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":87:1)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":87:29)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":145:1)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":169:1)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":146:1)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":147:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":168:5)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":147:8)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":148:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":149:9)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":167:9)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":150:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":150:20)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":166:13)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:24)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:43)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:22)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:45)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:48)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:55)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":154:53)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":155:13)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":162:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":164:13)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":156:36)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":156:43)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":156:48)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":156:59)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":156:60)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":156:17)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:49)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:21)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:33)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:30)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:39)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:40)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:46)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":157:45)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":159:17)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":159:24)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":159:34)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":160:27)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":160:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":161:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":161:22)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":165:27)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":165:17)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":171:1)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":191:1)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":173:5)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":173:12)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":175:12)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":175:5)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":176:5)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":188:5)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":177:9)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":177:45)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":179:9)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":187:9)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":179:19)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":179:32)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":179:49)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":179:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":179:59)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":179:56)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":180:9)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":183:9)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":185:9)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":182:20)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":182:28)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":182:41)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":182:47)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":182:13)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":182:48)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":186:23)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":186:13)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":189:22)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":189:5)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":190:18)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":190:5)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":88:1)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":88:28)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":194:1)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":218:1)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":195:1)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":196:5)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":217:5)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":196:8)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":197:5)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":198:9)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":216:9)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":199:13)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":199:20)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":203:13)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":215:13)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":203:17)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":203:24)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":203:43)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":203:22)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":204:13)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":211:13)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":213:13)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":205:36)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":205:43)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":205:48)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":205:59)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":205:60)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":205:17)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:17)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:49)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:21)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:33)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:30)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:39)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:40)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:46)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":206:45)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":208:17)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":208:24)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":208:34)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":209:27)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":209:17)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":210:17)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":210:22)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":214:27)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":214:17)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":220:1)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":229:1)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":222:5)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":222:12)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":224:12)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":224:5)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":226:12)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":226:5)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":227:21)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":227:5)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":228:17)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_21.c":228:5)
#loc340 = loc(fused[#loc1, #loc2])
#loc341 = loc(fused[#loc3, #loc4])
#loc342 = loc(fused[#loc5, #loc6])
#loc343 = loc(fused[#loc7, #loc8])
#loc344 = loc(fused[#loc10, #loc11])
#loc345 = loc(fused[#loc12, #loc13])
#loc346 = loc(fused[#loc14, #loc15])
#loc347 = loc(fused[#loc16, #loc17])
#loc348 = loc(fused[#loc19, #loc20])
#loc349 = loc(fused[#loc22, #loc23])
#loc351 = loc(fused[#loc27, #loc28])
#loc352 = loc(fused[#loc30, #loc28])
#loc353 = loc(fused[#loc31, #loc32])
#loc354 = loc(fused[#loc33, #loc34])
#loc355 = loc(fused[#loc35, #loc36])
#loc356 = loc(fused[#loc38, #loc39])
#loc357 = loc(fused[#loc37, #loc39])
#loc358 = loc(fused[#loc41, #loc42, #loc43, #loc36])
#loc359 = loc(fused[#loc46, #loc47])
#loc360 = loc(fused[#loc45, #loc47])
#loc361 = loc(fused[#loc44, #loc48])
#loc362 = loc(fused[#loc49, #loc48])
#loc363 = loc(fused[#loc50, #loc51])
#loc364 = loc(fused[#loc52, #loc53])
#loc365 = loc(fused[#loc55, #loc51])
#loc366 = loc(fused[#loc66, #loc67])
#loc367 = loc(fused[#loc68, #loc69])
#loc368 = loc(fused[#loc71, #loc70])
#loc369 = loc(fused[#loc72, #loc73])
#loc370 = loc(fused[#loc74, #loc75])
#loc371 = loc(fused[#loc76, #loc77])
#loc372 = loc(fused[#loc81, #loc82])
#loc373 = loc(fused[#loc84, #loc85, #loc86, #loc77])
#loc374 = loc(fused[#loc91, #loc92])
#loc375 = loc(fused[#loc95, #loc94])
#loc376 = loc(fused[#loc98, #loc99])
#loc377 = loc(fused[#loc100, #loc101])
#loc378 = loc(fused[#loc102, #loc103])
#loc379 = loc(fused[#loc104, #loc105])
#loc380 = loc(fused[#loc106, #loc107])
#loc381 = loc(fused[#loc110, #loc111])
#loc383 = loc(fused[#loc115, #loc116])
#loc384 = loc(fused[#loc118, #loc119, #loc120, #loc116])
#loc385 = loc(fused[#loc122, #loc123])
#loc386 = loc(fused[#loc124, #loc125])
#loc387 = loc(fused[#loc126, #loc127])
#loc388 = loc(fused[#loc129, #loc130])
#loc389 = loc(fused[#loc128, #loc130])
#loc390 = loc(fused[#loc133, #loc134])
#loc391 = loc(fused[#loc136, #loc137, #loc138, #loc127])
#loc392 = loc(fused[#loc141, #loc142])
#loc393 = loc(fused[#loc140, #loc142])
#loc394 = loc(fused[#loc139, #loc143])
#loc395 = loc(fused[#loc144, #loc143])
#loc396 = loc(fused[#loc145, #loc146])
#loc397 = loc(fused[#loc147, #loc148])
#loc398 = loc(fused[#loc150, #loc146])
#loc399 = loc(fused[#loc162, #loc163])
#loc400 = loc(fused[#loc164, #loc165])
#loc401 = loc(fused[#loc167, #loc166])
#loc402 = loc(fused[#loc168, #loc169])
#loc403 = loc(fused[#loc170, #loc171])
#loc404 = loc(fused[#loc172, #loc173])
#loc405 = loc(fused[#loc177, #loc178])
#loc406 = loc(fused[#loc180, #loc181, #loc182, #loc173])
#loc407 = loc(fused[#loc187, #loc188])
#loc408 = loc(fused[#loc192, #loc191])
#loc409 = loc(fused[#loc195, #loc196])
#loc410 = loc(fused[#loc197, #loc198])
#loc412 = loc(fused[#loc202, #loc203])
#loc413 = loc(fused[#loc205, #loc203])
#loc414 = loc(fused[#loc206, #loc207])
#loc415 = loc(fused[#loc208, #loc209])
#loc416 = loc(fused[#loc210, #loc211])
#loc417 = loc(fused[#loc213, #loc214])
#loc418 = loc(fused[#loc212, #loc214])
#loc419 = loc(fused[#loc217, #loc218])
#loc420 = loc(fused[#loc220, #loc221, #loc222, #loc211])
#loc421 = loc(fused[#loc225, #loc226])
#loc422 = loc(fused[#loc224, #loc226])
#loc423 = loc(fused[#loc223, #loc227])
#loc424 = loc(fused[#loc228, #loc227])
#loc425 = loc(fused[#loc229, #loc230])
#loc426 = loc(fused[#loc231, #loc232])
#loc427 = loc(fused[#loc234, #loc230])
#loc428 = loc(fused[#loc247, #loc248])
#loc429 = loc(fused[#loc249, #loc250])
#loc430 = loc(fused[#loc252, #loc251])
#loc431 = loc(fused[#loc253, #loc254])
#loc432 = loc(fused[#loc255, #loc256])
#loc433 = loc(fused[#loc257, #loc258])
#loc434 = loc(fused[#loc262, #loc263])
#loc435 = loc(fused[#loc265, #loc266, #loc267, #loc258])
#loc436 = loc(fused[#loc272, #loc273])
#loc437 = loc(fused[#loc277, #loc276])
#loc438 = loc(fused[#loc280, #loc281])
#loc439 = loc(fused[#loc282, #loc283])
#loc441 = loc(fused[#loc287, #loc288])
#loc442 = loc(fused[#loc290, #loc288])
#loc443 = loc(fused[#loc291, #loc292])
#loc444 = loc(fused[#loc293, #loc294])
#loc445 = loc(fused[#loc295, #loc296])
#loc446 = loc(fused[#loc298, #loc299])
#loc447 = loc(fused[#loc297, #loc299])
#loc448 = loc(fused[#loc301, #loc302, #loc303, #loc296])
#loc449 = loc(fused[#loc306, #loc307])
#loc450 = loc(fused[#loc305, #loc307])
#loc451 = loc(fused[#loc304, #loc308])
#loc452 = loc(fused[#loc309, #loc308])
#loc453 = loc(fused[#loc310, #loc311])
#loc454 = loc(fused[#loc312, #loc313])
#loc455 = loc(fused[#loc315, #loc311])
#loc456 = loc(fused[#loc328, #loc329])
#loc457 = loc(fused[#loc330, #loc331])
#loc458 = loc(fused[#loc333, #loc332])
#loc459 = loc(fused[#loc335, #loc334])
#loc460 = loc(fused[#loc337, #loc336])
