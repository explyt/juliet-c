!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc101)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc106)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc107)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc110)
        cir.condition(%7) loc(#loc21)
      } body {
        cir.scope {
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc23)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc25)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc25)
          %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc28)
          cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc113)
        } loc(#loc111)
        cir.yield loc(#loc16)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc30)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
        cir.yield loc(#loc108)
      } loc(#loc108)
    } loc(#loc108)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc116)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc36)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc37)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc37)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc117)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc41)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc42)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc118)
      %19 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc45)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc48)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc48)
      %24 = cir.call @strncat(%20, %21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
      %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    } loc(#loc115)
    cir.return loc(#loc6)
  } loc(#loc103)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc120)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc119)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc124)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc125)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc67)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc70)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc128)
        cir.condition(%7) loc(#loc71)
      } body {
        cir.scope {
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc75)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc75)
          %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc77)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc78)
          cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc131)
        } loc(#loc129)
        cir.yield loc(#loc66)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc80)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
        cir.yield loc(#loc126)
      } loc(#loc126)
    } loc(#loc126)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc134)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc86)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc87)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc87)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc87)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc135)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc91)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc92)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc93)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc92)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc94)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc136)
      %19 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc95)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc98)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc98)
      %24 = cir.call @strncat(%20, %21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
      %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    } loc(#loc133)
    cir.return loc(#loc56)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":0:0)
#loc1 = loc("/usr/include/string.h":152:1)
#loc2 = loc("/usr/include/string.h":153:29)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":25:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":26:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":27:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":28:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:18)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":30:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":33:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":34:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":34:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":34:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":34:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":29:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":36:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":43:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":37:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":37:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":38:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":38:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":38:29)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":38:33)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":38:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":38:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":39:25)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":39:16)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":39:20)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":39:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":41:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":41:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":41:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":41:31)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":42:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":42:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":73:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":76:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":75:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":75:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":51:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":71:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":53:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":53:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":54:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":54:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":55:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":55:26)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":56:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":56:28)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":62:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:16)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:20)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:18)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":58:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":60:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":60:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":61:19)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":61:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":61:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":61:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:24)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":57:23)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":63:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":70:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":64:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":64:24)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":65:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":65:24)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":65:29)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":65:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":65:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":65:34)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":66:25)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":66:16)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":66:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":66:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":68:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":68:17)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":68:23)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":68:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":69:19)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncat_17.c":69:9)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc11, #loc12])
#loc107 = loc(fused[#loc13, #loc14])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc18, #loc17])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc22, #loc16])
#loc112 = loc(fused[#loc24, #loc23])
#loc113 = loc(fused[#loc26, #loc25])
#loc114 = loc(fused[#loc30, #loc29])
#loc115 = loc(fused[#loc31, #loc32])
#loc116 = loc(fused[#loc33, #loc34])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc44, #loc41])
#loc119 = loc(fused[#loc51, #loc52])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc63, #loc64])
#loc126 = loc(fused[#loc65, #loc66])
#loc127 = loc(fused[#loc68, #loc67])
#loc128 = loc(fused[#loc69, #loc70])
#loc129 = loc(fused[#loc72, #loc66])
#loc130 = loc(fused[#loc74, #loc73])
#loc131 = loc(fused[#loc76, #loc75])
#loc132 = loc(fused[#loc80, #loc79])
#loc133 = loc(fused[#loc81, #loc82])
#loc134 = loc(fused[#loc83, #loc84])
#loc135 = loc(fused[#loc89, #loc90])
#loc136 = loc(fused[#loc94, #loc91])
