!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":411:10)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":411:14)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":411:20)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":411:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc631 = loc(fused[#loc173, #loc174])
#loc632 = loc(fused[#loc175, #loc176])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc563)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc564)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc565)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc566)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc567)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc568)
  cir.func private @close(!s32i) -> !s32i loc(#loc569)
  cir.func private @printIntLine(!s32i) loc(#loc570)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc571)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc573)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc30)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc578)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc579)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc580)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc581)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc39)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc580)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc44)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc46)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc583)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc53)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc53)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc585)
                cir.if %56 {
                  cir.break loc(#loc55)
                } loc(#loc586)
              } loc(#loc584)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc587)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc588)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc589)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc63)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc63)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc590)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc66)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc591)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc71)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc71)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc72)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc592)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc594)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc595)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc595)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc83)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc84)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc84)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc596)
                cir.if %60 {
                  cir.break loc(#loc86)
                } loc(#loc597)
              } loc(#loc593)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc89)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc89)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc89)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc89)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc89)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc89)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc89)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc90)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc598)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc91)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc92)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc92)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc599)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc98)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc98)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc601)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc99)
                  cir.yield %58 : !cir.bool loc(#loc99)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc101)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc602)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc99)
                    cir.yield %62 : !cir.bool loc(#loc99)
                  }, false {
                    %62 = cir.const #false loc(#loc99)
                    cir.yield %62 : !cir.bool loc(#loc99)
                  }) : (!cir.bool) -> !cir.bool loc(#loc99)
                  cir.yield %61 : !cir.bool loc(#loc99)
                }) : (!cir.bool) -> !cir.bool loc(#loc99)
                cir.if %57 {
                  cir.break loc(#loc103)
                } loc(#loc603)
              } loc(#loc600)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc104)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc104)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc106)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc604)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc108)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc605)
              cir.yield loc(#loc43)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc111)
              cir.condition(%12) loc(#loc111)
            } loc(#loc582)
          } loc(#loc582)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc115)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc607)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc118)
            } loc(#loc608)
          } loc(#loc606)
        } loc(#loc577)
      } loc(#loc576)
    } loc(#loc575)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc121)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc121)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc612)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc613)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc613)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc613)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc615)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc138)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc138)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc617)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc141)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc619)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc144)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc620)
                  cir.condition(%18) loc(#loc145)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc148)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc148)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc149)
                  } loc(#loc621)
                  cir.yield loc(#loc140)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc151)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc622)
                  cir.yield loc(#loc618)
                } loc(#loc618)
              } loc(#loc618)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc152)
            } loc(#loc616)
          } loc(#loc614)
        } loc(#loc611)
      } loc(#loc610)
    } loc(#loc609)
    cir.return loc(#loc22)
  } loc(#loc572)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc624)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc155)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc625)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc157)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc626)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc159)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc627)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    cir.return loc(#loc154)
  } loc(#loc623)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc628)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc629)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc170)
  cir.func @main(%arg0: !s32i loc(fused[#loc173, #loc174]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc175, #loc176])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc631)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc632)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc178)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc179)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc180)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc167)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc633)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02_good() : () -> () loc(#loc182)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc168)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc169)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc634)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02_bad() : () -> () loc(#loc186)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc170)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc189)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc635)
    cir.return %17 : !s32i loc(#loc635)
  } loc(#loc630)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc192)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc637)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc198)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc638)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc202)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc202)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc642)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc643)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc644)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc645)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc211)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc644)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc216)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc217)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc218)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc219)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc647)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc225)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc225)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc649)
                cir.if %56 {
                  cir.break loc(#loc227)
                } loc(#loc650)
              } loc(#loc648)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc651)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc230)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc652)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc653)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc235)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc235)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc654)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc237)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc237)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc238)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc655)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc241)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc241)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc242)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc656)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc658)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc659)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc659)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc252)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc253)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc253)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc660)
                cir.if %60 {
                  cir.break loc(#loc255)
                } loc(#loc661)
              } loc(#loc657)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc256)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc257)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc257)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc258)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc258)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc258)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc258)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc258)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc258)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc258)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc259)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc259)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc662)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc260)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc261)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc261)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc663)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc267)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc267)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc665)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc268)
                  cir.yield %58 : !cir.bool loc(#loc268)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc270)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc666)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc268)
                    cir.yield %62 : !cir.bool loc(#loc268)
                  }, false {
                    %62 = cir.const #false loc(#loc268)
                    cir.yield %62 : !cir.bool loc(#loc268)
                  }) : (!cir.bool) -> !cir.bool loc(#loc268)
                  cir.yield %61 : !cir.bool loc(#loc268)
                }) : (!cir.bool) -> !cir.bool loc(#loc268)
                cir.if %57 {
                  cir.break loc(#loc272)
                } loc(#loc667)
              } loc(#loc664)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc273)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc273)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc274)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc275)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc275)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc668)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc276)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc277)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc669)
              cir.yield loc(#loc215)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc280)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc280)
              cir.condition(%12) loc(#loc280)
            } loc(#loc646)
          } loc(#loc646)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc283)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc284)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc284)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc671)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc287)
            } loc(#loc672)
          } loc(#loc670)
        } loc(#loc641)
      } loc(#loc640)
    } loc(#loc639)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc290)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc290)
      cir.if %4 {
        %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc191)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc191)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc294)
      } else {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc676)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc677)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc677)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc677)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc304)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc679)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc306)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc307)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc680)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc305)
                cir.yield %16 : !cir.bool loc(#loc305)
              }, false {
                %16 = cir.const #false loc(#loc305)
                cir.yield %16 : !cir.bool loc(#loc305)
              }) : (!cir.bool) -> !cir.bool loc(#loc305)
              cir.yield %15 : !cir.bool loc(#loc305)
            }, false {
              %12 = cir.const #false loc(#loc305)
              cir.yield %12 : !cir.bool loc(#loc305)
            }) : (!cir.bool) -> !cir.bool loc(#loc305)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc312)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc313)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc314)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc314)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc682)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc317)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc684)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc319)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc320)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc685)
                  cir.condition(%19) loc(#loc321)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc324)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc324)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc325)
                  } loc(#loc686)
                  cir.yield loc(#loc316)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc326)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc327)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc687)
                  cir.yield loc(#loc683)
                } loc(#loc683)
              } loc(#loc683)
            } else {
              %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc192)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc192)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc328)
            } loc(#loc681)
          } loc(#loc678)
        } loc(#loc675)
      } loc(#loc674)
    } loc(#loc673)
    cir.return loc(#loc194)
  } loc(#loc636)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc689)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc333)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc334)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc690)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc338)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc338)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc694)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc695)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc696)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc697)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc347)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc347)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc696)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc352)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc353)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc354)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc355)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc699)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc360)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc361)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc361)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc701)
                cir.if %56 {
                  cir.break loc(#loc363)
                } loc(#loc702)
              } loc(#loc700)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc703)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc366)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc704)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc705)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc371)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc371)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc706)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc373)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc373)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc374)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc707)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc377)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc377)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc378)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc708)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc383)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc710)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc711)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc711)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc388)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc389)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc389)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc712)
                cir.if %60 {
                  cir.break loc(#loc391)
                } loc(#loc713)
              } loc(#loc709)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc392)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc393)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc393)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc394)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc394)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc394)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc394)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc394)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc394)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc394)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc395)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc395)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc714)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc396)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc397)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc397)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc715)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc402)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc403)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc403)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc717)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc404)
                  cir.yield %58 : !cir.bool loc(#loc404)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc405)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc406)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc718)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc404)
                    cir.yield %62 : !cir.bool loc(#loc404)
                  }, false {
                    %62 = cir.const #false loc(#loc404)
                    cir.yield %62 : !cir.bool loc(#loc404)
                  }) : (!cir.bool) -> !cir.bool loc(#loc404)
                  cir.yield %61 : !cir.bool loc(#loc404)
                }) : (!cir.bool) -> !cir.bool loc(#loc404)
                cir.if %57 {
                  cir.break loc(#loc408)
                } loc(#loc719)
              } loc(#loc716)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc409)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc409)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc410)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc411)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc411)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc720)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc412)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc413)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc721)
              cir.yield loc(#loc351)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc416)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc416)
              cir.condition(%12) loc(#loc416)
            } loc(#loc698)
          } loc(#loc698)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc419)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc420)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc420)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc723)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc422)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc423)
            } loc(#loc724)
          } loc(#loc722)
        } loc(#loc693)
      } loc(#loc692)
    } loc(#loc691)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc426)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc426)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc728)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc729)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc729)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc729)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc436)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc437)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc731)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc439)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc440)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc732)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc438)
                cir.yield %16 : !cir.bool loc(#loc438)
              }, false {
                %16 = cir.const #false loc(#loc438)
                cir.yield %16 : !cir.bool loc(#loc438)
              }) : (!cir.bool) -> !cir.bool loc(#loc438)
              cir.yield %15 : !cir.bool loc(#loc438)
            }, false {
              %12 = cir.const #false loc(#loc438)
              cir.yield %12 : !cir.bool loc(#loc438)
            }) : (!cir.bool) -> !cir.bool loc(#loc438)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc445)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc446)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc447)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc447)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc734)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc450)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc736)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc452)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc453)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc737)
                  cir.condition(%19) loc(#loc454)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc457)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc457)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc457)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc458)
                  } loc(#loc738)
                  cir.yield loc(#loc449)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc459)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc460)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc739)
                  cir.yield loc(#loc735)
                } loc(#loc735)
              } loc(#loc735)
            } else {
              %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc461)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc461)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc462)
            } loc(#loc733)
          } loc(#loc730)
        } loc(#loc727)
      } loc(#loc726)
    } loc(#loc725)
    cir.return loc(#loc330)
  } loc(#loc688)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc741)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc467)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc468)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc742)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc472)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc472)
      cir.if %4 {
        %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc476)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc476)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc477)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc478)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc745)
      } loc(#loc744)
    } loc(#loc743)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc482)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc482)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc749)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc750)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc750)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc750)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc492)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc493)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc752)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc497)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc498)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc499)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc499)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc754)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc502)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc756)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc504)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc505)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc757)
                  cir.condition(%18) loc(#loc506)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc508)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc509)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc509)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc509)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc510)
                  } loc(#loc758)
                  cir.yield loc(#loc501)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc511)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc512)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc759)
                  cir.yield loc(#loc755)
                } loc(#loc755)
              } loc(#loc755)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc513)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc513)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc514)
            } loc(#loc753)
          } loc(#loc751)
        } loc(#loc748)
      } loc(#loc747)
    } loc(#loc746)
    cir.return loc(#loc464)
  } loc(#loc740)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc761)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc519)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc520)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc762)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc524)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc524)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc526)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc765)
      } loc(#loc764)
    } loc(#loc763)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc530)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc530)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc769)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc770)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc770)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc770)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc540)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc541)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc772)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc545)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc546)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc547)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc547)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc774)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc550)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc776)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc552)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc553)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc777)
                  cir.condition(%18) loc(#loc554)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc556)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc557)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc557)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc557)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc558)
                  } loc(#loc778)
                  cir.yield loc(#loc549)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc559)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc560)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc779)
                  cir.yield loc(#loc775)
                } loc(#loc775)
              } loc(#loc775)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc561)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc561)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc562)
            } loc(#loc773)
          } loc(#loc771)
        } loc(#loc768)
      } loc(#loc767)
    } loc(#loc766)
    cir.return loc(#loc516)
  } loc(#loc760)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":126:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":44:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":130:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":46:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":46:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":48:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":48:12)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":48:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":49:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":107:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":49:8)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":50:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":51:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":106:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":56:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":56:17)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":57:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":57:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":58:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":58:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":59:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":59:45)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":60:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":95:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":70:40)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":70:49)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":70:62)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":70:33)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":70:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":70:73)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":71:17)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":74:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":71:21)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":71:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":72:17)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":73:21)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":75:24)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":75:25)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":75:34)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":75:37)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":75:51)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":75:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":75:52)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":76:38)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":76:17)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":77:43)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":77:17)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":77:63)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":78:42)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":78:36)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":78:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":78:50)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:17)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":82:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:29)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:62)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:63)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:72)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:86)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:21)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":79:92)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":80:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":81:21)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:35)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:50)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:63)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:81)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:84)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:30)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":85:85)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":86:17)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":89:17)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":86:21)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":86:35)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":86:48)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":86:51)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":86:65)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":87:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":88:21)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":91:43)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":91:29)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":91:17)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":93:29)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":93:24)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":93:17)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":93:40)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":95:20)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":96:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":99:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":96:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":96:34)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":97:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":98:30)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":98:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":108:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":129:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":108:8)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":109:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":110:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":128:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":111:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":111:17)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":112:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":112:34)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":115:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":127:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":115:17)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":115:25)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":116:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":123:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":125:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":117:32)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":117:24)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":117:17)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:17)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":122:17)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:25)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:21)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:28)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:32)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:30)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":120:17)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":121:41)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":121:34)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":121:21)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:37)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":119:36)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":126:17)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":394:1)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":400:1)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":396:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":396:14)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":397:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":397:14)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":398:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":398:14)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":399:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":399:14)
#loc163 = loc("/usr/include/stdlib.h":575:1)
#loc164 = loc("/usr/include/stdlib.h":575:41)
#loc165 = loc("/usr/include/time.h":76:1)
#loc166 = loc("/usr/include/time.h":76:38)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":416:15)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":418:15)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":421:15)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":423:15)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":411:1)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":426:1)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":412:1)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":414:27)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":414:22)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":414:5)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":416:5)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":417:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":417:71)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":418:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":421:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":422:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":422:70)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":423:5)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":425:12)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":425:5)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":204:19)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":223:27)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":137:1)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":227:1)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":139:5)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":139:9)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":141:13)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":141:12)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":141:5)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":142:5)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":200:5)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":142:8)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":143:5)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":144:9)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":199:9)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":149:13)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":149:17)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":150:13)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":150:32)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":151:13)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":151:36)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":152:13)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":152:45)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":153:13)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":188:21)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":163:40)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":163:49)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":163:62)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":163:33)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":163:17)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":163:73)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":164:17)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":167:17)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":164:21)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":164:38)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":165:17)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":166:21)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":168:24)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":168:25)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":168:34)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":168:37)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":168:51)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":168:17)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":168:52)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":169:38)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":169:17)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":170:53)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":170:43)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":170:17)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":170:63)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":171:42)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":171:36)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":171:17)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":171:50)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:17)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":175:17)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:29)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:62)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:63)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:72)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:86)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:21)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":172:92)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":173:17)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":174:21)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:35)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:50)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:63)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:81)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:84)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:30)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:17)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":178:85)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":179:17)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":182:17)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":179:21)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":179:35)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":179:48)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":179:51)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":179:65)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":180:17)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":181:21)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":184:43)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":184:29)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":184:17)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":186:29)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":186:24)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":186:17)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":186:40)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":188:20)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":189:13)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":192:13)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":189:17)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":189:34)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":190:13)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":191:30)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":191:17)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":201:5)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":226:5)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":201:8)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":202:5)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":205:5)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":207:5)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":204:9)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":208:9)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":225:9)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":209:13)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":209:17)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":210:13)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":210:34)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":212:13)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":224:13)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":212:17)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":212:25)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":212:27)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":212:30)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":212:38)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":212:40)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":213:13)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":220:13)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":222:13)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":214:32)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":214:24)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":214:17)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:17)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":219:17)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:25)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:21)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:28)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:32)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:30)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":217:17)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":218:41)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":218:34)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":218:21)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:37)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":216:36)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":223:17)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":230:1)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":315:1)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":232:5)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":232:9)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":234:13)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":234:12)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":234:5)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":235:5)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":293:5)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":235:8)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":236:5)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":237:9)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":292:9)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":242:13)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":242:17)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":243:13)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":243:32)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":244:13)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":244:36)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":245:13)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":245:45)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":246:13)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":281:21)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":256:40)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":256:49)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":256:62)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":256:33)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":256:17)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":256:73)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":257:17)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":260:17)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":257:21)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":257:38)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":258:17)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":259:21)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":261:24)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":261:25)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":261:34)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":261:37)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":261:51)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":261:17)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":261:52)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":262:38)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":262:17)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":263:53)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":263:43)
#loc375 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":263:17)
#loc376 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":263:63)
#loc377 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":264:42)
#loc378 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":264:36)
#loc379 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":264:17)
#loc380 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":264:50)
#loc381 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:17)
#loc382 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":268:17)
#loc383 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:29)
#loc384 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:62)
#loc385 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:63)
#loc386 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:72)
#loc387 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:86)
#loc388 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:21)
#loc389 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":265:92)
#loc390 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":266:17)
#loc391 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":267:21)
#loc392 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:35)
#loc393 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:50)
#loc394 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:63)
#loc395 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:81)
#loc396 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:84)
#loc397 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:30)
#loc398 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:17)
#loc399 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":271:85)
#loc400 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":272:17)
#loc401 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":275:17)
#loc402 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":272:21)
#loc403 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":272:35)
#loc404 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":272:48)
#loc405 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":272:51)
#loc406 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":272:65)
#loc407 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":273:17)
#loc408 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":274:21)
#loc409 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":277:43)
#loc410 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":277:29)
#loc411 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":277:17)
#loc412 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":279:29)
#loc413 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":279:24)
#loc414 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":279:17)
#loc415 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":279:40)
#loc416 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":281:20)
#loc417 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":282:13)
#loc418 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":285:13)
#loc419 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":282:17)
#loc420 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":282:34)
#loc421 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":283:13)
#loc422 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":284:30)
#loc423 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":284:17)
#loc424 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":294:5)
#loc425 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":314:5)
#loc426 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":294:8)
#loc427 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":295:5)
#loc428 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":296:9)
#loc429 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":313:9)
#loc430 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":297:13)
#loc431 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":297:17)
#loc432 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":298:13)
#loc433 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":298:34)
#loc434 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":300:13)
#loc435 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":312:13)
#loc436 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":300:17)
#loc437 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":300:25)
#loc438 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":300:27)
#loc439 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":300:30)
#loc440 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":300:38)
#loc441 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":300:40)
#loc442 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":301:13)
#loc443 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":308:13)
#loc444 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":310:13)
#loc445 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":302:32)
#loc446 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":302:24)
#loc447 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":302:17)
#loc448 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:17)
#loc449 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":307:17)
#loc450 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:25)
#loc451 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:21)
#loc452 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:28)
#loc453 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:32)
#loc454 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:30)
#loc455 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":305:17)
#loc456 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":306:41)
#loc457 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":306:34)
#loc458 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":306:21)
#loc459 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:37)
#loc460 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":304:36)
#loc461 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":311:27)
#loc462 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":311:17)
#loc463 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":318:1)
#loc464 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":356:1)
#loc465 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":320:5)
#loc466 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":320:9)
#loc467 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":322:13)
#loc468 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":322:12)
#loc469 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":322:5)
#loc470 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":323:5)
#loc471 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":333:5)
#loc472 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":323:8)
#loc473 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":324:5)
#loc474 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":327:5)
#loc475 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":329:5)
#loc476 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":326:19)
#loc477 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":326:9)
#loc478 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":332:16)
#loc479 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":332:9)
#loc480 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":334:5)
#loc481 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":355:5)
#loc482 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":334:8)
#loc483 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":335:5)
#loc484 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":336:9)
#loc485 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":354:9)
#loc486 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":337:13)
#loc487 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":337:17)
#loc488 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":338:13)
#loc489 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":338:34)
#loc490 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":341:13)
#loc491 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":353:13)
#loc492 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":341:17)
#loc493 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":341:25)
#loc494 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":342:13)
#loc495 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":349:13)
#loc496 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":351:13)
#loc497 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":343:32)
#loc498 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":343:24)
#loc499 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":343:17)
#loc500 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:17)
#loc501 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":348:17)
#loc502 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:25)
#loc503 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:21)
#loc504 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:28)
#loc505 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:32)
#loc506 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:30)
#loc507 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":346:17)
#loc508 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":347:41)
#loc509 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":347:34)
#loc510 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":347:21)
#loc511 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:37)
#loc512 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":345:36)
#loc513 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":352:27)
#loc514 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":352:17)
#loc515 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":359:1)
#loc516 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":392:1)
#loc517 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":361:5)
#loc518 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":361:9)
#loc519 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":363:13)
#loc520 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":363:12)
#loc521 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":363:5)
#loc522 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":364:5)
#loc523 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":369:5)
#loc524 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":364:8)
#loc525 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":365:5)
#loc526 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":368:16)
#loc527 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":368:9)
#loc528 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":370:5)
#loc529 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":391:5)
#loc530 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":370:8)
#loc531 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":371:5)
#loc532 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":372:9)
#loc533 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":390:9)
#loc534 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":373:13)
#loc535 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":373:17)
#loc536 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":374:13)
#loc537 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":374:34)
#loc538 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":377:13)
#loc539 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":389:13)
#loc540 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":377:17)
#loc541 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":377:25)
#loc542 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":378:13)
#loc543 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":385:13)
#loc544 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":387:13)
#loc545 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":379:32)
#loc546 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":379:24)
#loc547 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":379:17)
#loc548 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:17)
#loc549 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":384:17)
#loc550 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:25)
#loc551 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:21)
#loc552 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:28)
#loc553 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:32)
#loc554 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:30)
#loc555 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":382:17)
#loc556 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":383:41)
#loc557 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":383:34)
#loc558 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":383:21)
#loc559 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:37)
#loc560 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":381:36)
#loc561 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":388:27)
#loc562 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_02.c":388:17)
#loc563 = loc(fused[#loc1, #loc2])
#loc564 = loc(fused[#loc3, #loc4])
#loc565 = loc(fused[#loc6, #loc7])
#loc566 = loc(fused[#loc8, #loc9])
#loc567 = loc(fused[#loc10, #loc11])
#loc568 = loc(fused[#loc12, #loc13])
#loc569 = loc(fused[#loc14, #loc15])
#loc570 = loc(fused[#loc16, #loc17])
#loc571 = loc(fused[#loc18, #loc19])
#loc572 = loc(fused[#loc21, #loc22])
#loc573 = loc(fused[#loc23, #loc24])
#loc574 = loc(fused[#loc27, #loc25])
#loc575 = loc(fused[#loc28, #loc29])
#loc576 = loc(fused[#loc31, #loc29])
#loc577 = loc(fused[#loc32, #loc33])
#loc578 = loc(fused[#loc34, #loc35])
#loc579 = loc(fused[#loc36, #loc37])
#loc580 = loc(fused[#loc38, #loc39])
#loc581 = loc(fused[#loc40, #loc41])
#loc582 = loc(fused[#loc42, #loc43])
#loc583 = loc(fused[#loc48, #loc49])
#loc584 = loc(fused[#loc50, #loc51])
#loc585 = loc(fused[#loc52, #loc53])
#loc586 = loc(fused[#loc54, #loc51])
#loc587 = loc(fused[#loc56, #loc57])
#loc588 = loc(fused[#loc59, #loc60])
#loc589 = loc(fused[#loc61, #loc62])
#loc590 = loc(fused[#loc65, #loc63])
#loc591 = loc(fused[#loc69, #loc70])
#loc592 = loc(fused[#loc74, #loc75])
#loc593 = loc(fused[#loc76, #loc77])
#loc594 = loc(fused[#loc79, #loc80])
#loc595 = loc(fused[#loc81, #loc82])
#loc596 = loc(fused[#loc83, #loc84])
#loc597 = loc(fused[#loc85, #loc77])
#loc598 = loc(fused[#loc89, #loc90])
#loc599 = loc(fused[#loc93, #loc94])
#loc600 = loc(fused[#loc95, #loc96])
#loc601 = loc(fused[#loc97, #loc98])
#loc602 = loc(fused[#loc100, #loc101])
#loc603 = loc(fused[#loc102, #loc96])
#loc604 = loc(fused[#loc106, #loc104])
#loc605 = loc(fused[#loc109, #loc110])
#loc606 = loc(fused[#loc112, #loc113])
#loc607 = loc(fused[#loc114, #loc115])
#loc608 = loc(fused[#loc116, #loc113])
#loc609 = loc(fused[#loc119, #loc120])
#loc610 = loc(fused[#loc122, #loc120])
#loc611 = loc(fused[#loc123, #loc124])
#loc612 = loc(fused[#loc125, #loc126])
#loc613 = loc(fused[#loc127, #loc128])
#loc614 = loc(fused[#loc129, #loc130])
#loc615 = loc(fused[#loc131, #loc132])
#loc616 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc617 = loc(fused[#loc138, #loc136])
#loc618 = loc(fused[#loc139, #loc140])
#loc619 = loc(fused[#loc142, #loc141])
#loc620 = loc(fused[#loc143, #loc144])
#loc621 = loc(fused[#loc146, #loc140])
#loc622 = loc(fused[#loc151, #loc150])
#loc623 = loc(fused[#loc153, #loc154])
#loc624 = loc(fused[#loc155, #loc156])
#loc625 = loc(fused[#loc157, #loc158])
#loc626 = loc(fused[#loc159, #loc160])
#loc627 = loc(fused[#loc161, #loc162])
#loc628 = loc(fused[#loc163, #loc164])
#loc629 = loc(fused[#loc165, #loc166])
#loc630 = loc(fused[#loc171, #loc172])
#loc633 = loc(fused[#loc182, #loc183])
#loc634 = loc(fused[#loc186, #loc187])
#loc635 = loc(fused[#loc190, #loc189])
#loc636 = loc(fused[#loc193, #loc194])
#loc637 = loc(fused[#loc195, #loc196])
#loc638 = loc(fused[#loc199, #loc197])
#loc639 = loc(fused[#loc200, #loc201])
#loc640 = loc(fused[#loc203, #loc201])
#loc641 = loc(fused[#loc204, #loc205])
#loc642 = loc(fused[#loc206, #loc207])
#loc643 = loc(fused[#loc208, #loc209])
#loc644 = loc(fused[#loc210, #loc211])
#loc645 = loc(fused[#loc212, #loc213])
#loc646 = loc(fused[#loc214, #loc215])
#loc647 = loc(fused[#loc220, #loc221])
#loc648 = loc(fused[#loc222, #loc223])
#loc649 = loc(fused[#loc224, #loc225])
#loc650 = loc(fused[#loc226, #loc223])
#loc651 = loc(fused[#loc228, #loc229])
#loc652 = loc(fused[#loc231, #loc232])
#loc653 = loc(fused[#loc233, #loc234])
#loc654 = loc(fused[#loc236, #loc235])
#loc655 = loc(fused[#loc239, #loc240])
#loc656 = loc(fused[#loc243, #loc244])
#loc657 = loc(fused[#loc245, #loc246])
#loc658 = loc(fused[#loc248, #loc249])
#loc659 = loc(fused[#loc250, #loc251])
#loc660 = loc(fused[#loc252, #loc253])
#loc661 = loc(fused[#loc254, #loc246])
#loc662 = loc(fused[#loc258, #loc259])
#loc663 = loc(fused[#loc262, #loc263])
#loc664 = loc(fused[#loc264, #loc265])
#loc665 = loc(fused[#loc266, #loc267])
#loc666 = loc(fused[#loc269, #loc270])
#loc667 = loc(fused[#loc271, #loc265])
#loc668 = loc(fused[#loc275, #loc273])
#loc669 = loc(fused[#loc278, #loc279])
#loc670 = loc(fused[#loc281, #loc282])
#loc671 = loc(fused[#loc283, #loc284])
#loc672 = loc(fused[#loc285, #loc282])
#loc673 = loc(fused[#loc288, #loc289])
#loc674 = loc(fused[#loc291, #loc292, #loc293, #loc289])
#loc675 = loc(fused[#loc295, #loc296])
#loc676 = loc(fused[#loc297, #loc298])
#loc677 = loc(fused[#loc299, #loc300])
#loc678 = loc(fused[#loc301, #loc302])
#loc679 = loc(fused[#loc303, #loc304])
#loc680 = loc(fused[#loc306, #loc308])
#loc681 = loc(fused[#loc309, #loc310, #loc311, #loc302])
#loc682 = loc(fused[#loc314, #loc312])
#loc683 = loc(fused[#loc315, #loc316])
#loc684 = loc(fused[#loc318, #loc317])
#loc685 = loc(fused[#loc319, #loc320])
#loc686 = loc(fused[#loc322, #loc316])
#loc687 = loc(fused[#loc327, #loc326])
#loc688 = loc(fused[#loc329, #loc330])
#loc689 = loc(fused[#loc331, #loc332])
#loc690 = loc(fused[#loc335, #loc333])
#loc691 = loc(fused[#loc336, #loc337])
#loc692 = loc(fused[#loc339, #loc337])
#loc693 = loc(fused[#loc340, #loc341])
#loc694 = loc(fused[#loc342, #loc343])
#loc695 = loc(fused[#loc344, #loc345])
#loc696 = loc(fused[#loc346, #loc347])
#loc697 = loc(fused[#loc348, #loc349])
#loc698 = loc(fused[#loc350, #loc351])
#loc699 = loc(fused[#loc356, #loc357])
#loc700 = loc(fused[#loc358, #loc359])
#loc701 = loc(fused[#loc360, #loc361])
#loc702 = loc(fused[#loc362, #loc359])
#loc703 = loc(fused[#loc364, #loc365])
#loc704 = loc(fused[#loc367, #loc368])
#loc705 = loc(fused[#loc369, #loc370])
#loc706 = loc(fused[#loc372, #loc371])
#loc707 = loc(fused[#loc375, #loc376])
#loc708 = loc(fused[#loc379, #loc380])
#loc709 = loc(fused[#loc381, #loc382])
#loc710 = loc(fused[#loc384, #loc385])
#loc711 = loc(fused[#loc386, #loc387])
#loc712 = loc(fused[#loc388, #loc389])
#loc713 = loc(fused[#loc390, #loc382])
#loc714 = loc(fused[#loc394, #loc395])
#loc715 = loc(fused[#loc398, #loc399])
#loc716 = loc(fused[#loc400, #loc401])
#loc717 = loc(fused[#loc402, #loc403])
#loc718 = loc(fused[#loc405, #loc406])
#loc719 = loc(fused[#loc407, #loc401])
#loc720 = loc(fused[#loc411, #loc409])
#loc721 = loc(fused[#loc414, #loc415])
#loc722 = loc(fused[#loc417, #loc418])
#loc723 = loc(fused[#loc419, #loc420])
#loc724 = loc(fused[#loc421, #loc418])
#loc725 = loc(fused[#loc424, #loc425])
#loc726 = loc(fused[#loc427, #loc425])
#loc727 = loc(fused[#loc428, #loc429])
#loc728 = loc(fused[#loc430, #loc431])
#loc729 = loc(fused[#loc432, #loc433])
#loc730 = loc(fused[#loc434, #loc435])
#loc731 = loc(fused[#loc436, #loc437])
#loc732 = loc(fused[#loc439, #loc441])
#loc733 = loc(fused[#loc442, #loc443, #loc444, #loc435])
#loc734 = loc(fused[#loc447, #loc445])
#loc735 = loc(fused[#loc448, #loc449])
#loc736 = loc(fused[#loc451, #loc450])
#loc737 = loc(fused[#loc452, #loc453])
#loc738 = loc(fused[#loc455, #loc449])
#loc739 = loc(fused[#loc460, #loc459])
#loc740 = loc(fused[#loc463, #loc464])
#loc741 = loc(fused[#loc465, #loc466])
#loc742 = loc(fused[#loc469, #loc467])
#loc743 = loc(fused[#loc470, #loc471])
#loc744 = loc(fused[#loc473, #loc474, #loc475, #loc471])
#loc745 = loc(fused[#loc479, #loc478])
#loc746 = loc(fused[#loc480, #loc481])
#loc747 = loc(fused[#loc483, #loc481])
#loc748 = loc(fused[#loc484, #loc485])
#loc749 = loc(fused[#loc486, #loc487])
#loc750 = loc(fused[#loc488, #loc489])
#loc751 = loc(fused[#loc490, #loc491])
#loc752 = loc(fused[#loc492, #loc493])
#loc753 = loc(fused[#loc494, #loc495, #loc496, #loc491])
#loc754 = loc(fused[#loc499, #loc497])
#loc755 = loc(fused[#loc500, #loc501])
#loc756 = loc(fused[#loc503, #loc502])
#loc757 = loc(fused[#loc504, #loc505])
#loc758 = loc(fused[#loc507, #loc501])
#loc759 = loc(fused[#loc512, #loc511])
#loc760 = loc(fused[#loc515, #loc516])
#loc761 = loc(fused[#loc517, #loc518])
#loc762 = loc(fused[#loc521, #loc519])
#loc763 = loc(fused[#loc522, #loc523])
#loc764 = loc(fused[#loc525, #loc523])
#loc765 = loc(fused[#loc527, #loc526])
#loc766 = loc(fused[#loc528, #loc529])
#loc767 = loc(fused[#loc531, #loc529])
#loc768 = loc(fused[#loc532, #loc533])
#loc769 = loc(fused[#loc534, #loc535])
#loc770 = loc(fused[#loc536, #loc537])
#loc771 = loc(fused[#loc538, #loc539])
#loc772 = loc(fused[#loc540, #loc541])
#loc773 = loc(fused[#loc542, #loc543, #loc544, #loc539])
#loc774 = loc(fused[#loc547, #loc545])
#loc775 = loc(fused[#loc548, #loc549])
#loc776 = loc(fused[#loc551, #loc550])
#loc777 = loc(fused[#loc552, #loc553])
#loc778 = loc(fused[#loc555, #loc549])
#loc779 = loc(fused[#loc560, #loc559])
