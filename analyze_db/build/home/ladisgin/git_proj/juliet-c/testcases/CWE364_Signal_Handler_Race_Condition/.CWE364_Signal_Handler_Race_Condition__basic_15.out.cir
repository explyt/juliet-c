!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:27)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:10)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:14)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:20)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:32)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:24)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:28)
!ty__structSigAtomic = !cir.struct<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc258 = loc(fused[#loc15, #loc16])
#loc290 = loc(fused[#loc99, #loc100])
#loc291 = loc(fused[#loc101, #loc102])
#loc296 = loc(fused[#loc119, #loc120])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc251)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc252)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc253)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc254)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc255)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc256)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc258)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc260)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc261)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc14)
  } loc(#loc257)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc35)
    cir.br ^bb2 loc(#loc33)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb19 [
      6: ^bb4
    ] loc(#loc33)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc267)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc32)
    cir.store %2, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc265)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
    %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc41)
    cir.br ^bb6 loc(#loc268)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc44)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc45)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc269)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc270)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
    %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc48)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc49)
    %16 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    cir.store %15, %16 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc271)
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<4> : !u64i loc(#loc272)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc53)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc273)
    cir.store %19, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc274)
    cir.br ^bb10 loc(#loc275)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc58)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc59)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc276)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc277)
  ^bb11:  // pred: ^bb10
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc63)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb12 loc(#loc57)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc57)
  ^bb13:  // pred: ^bb12
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc64)
    %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc278)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc67)
    %32 = cir.get_member %31[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc68)
    %34 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
    %35 = cir.call @signal(%33, %34) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc70)
    cir.br ^bb14 loc(#loc280)
  ^bb14:  // pred: ^bb13
    %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    %37 = cir.load %36 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc73)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc74)
    %40 = cir.cmp(ne, %37, %39) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc281)
    cir.brcond %40 ^bb15, ^bb16 loc(#loc282)
  ^bb15:  // pred: ^bb14
    %41 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
    %42 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    %43 = cir.load %42 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc77)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc77)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
    %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc78)
    %46 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc251)
    cir.store %45, %46 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc283)
    cir.br ^bb16 loc(#loc72)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc72)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc38)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc80)
  ^bb19:  // pred: ^bb2
    %47 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb20 loc(#loc82)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc34)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc30)
  } loc(#loc264)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc84)
  } loc(#loc284)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc287)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc288)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc96)
  cir.func @main(%arg0: !s32i loc(fused[#loc99, #loc100]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc101, #loc102])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc291)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc98)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc103)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc104)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc105)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc105)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc106)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_15_good() : () -> () loc(#loc108)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc95)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc293)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_15_bad() : () -> () loc(#loc112)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc96)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc115)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    cir.return %17 : !s32i loc(#loc294)
  } loc(#loc289)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc119, #loc120])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc296)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.br ^bb1 loc(#loc297)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc124)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc125)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc298)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc299)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc128)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb3 loc(#loc123)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc118)
  } loc(#loc295)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc302)
    cir.br ^bb1 loc(#loc303)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc135)
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc133)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb20 loc(#loc139)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc304)
  ^bb6:  // pred: ^bb5
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc132)
    cir.store %4, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc302)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc142)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
    %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc144)
    cir.br ^bb7 loc(#loc305)
  ^bb7:  // pred: ^bb6
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc147)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc148)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc306)
    cir.brcond %12 ^bb8, ^bb9 loc(#loc307)
  ^bb8:  // pred: ^bb7
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc150)
    %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc151)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc151)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc152)
    %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    cir.store %17, %18 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc308)
    cir.br ^bb9 loc(#loc146)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc146)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #cir.int<4> : !u64i loc(#loc309)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc310)
    cir.store %21, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc311)
    cir.br ^bb11 loc(#loc312)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc161)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc162)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc313)
    cir.brcond %25 ^bb12, ^bb13 loc(#loc314)
  ^bb12:  // pred: ^bb11
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc164)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc166)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb13 loc(#loc160)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc160)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc167)
    %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc315)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc170)
    %34 = cir.get_member %33[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc171)
    %36 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc172)
    %37 = cir.call @signal(%35, %36) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc173)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc174)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
    %40 = cir.call @signal(%38, %39) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc176)
    cir.br ^bb15 loc(#loc317)
  ^bb15:  // pred: ^bb14
    %41 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %42 = cir.load %41 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc179)
    %43 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc180)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc180)
    %45 = cir.cmp(ne, %42, %44) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc318)
    cir.brcond %45 ^bb16, ^bb17 loc(#loc319)
  ^bb16:  // pred: ^bb15
    %46 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc182)
    %47 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %48 = cir.load %47 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc183)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc183)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc184)
    %51 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    cir.store %50, %51 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc320)
    cir.br ^bb17 loc(#loc178)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc178)
  ^bb18:  // pred: ^bb17
    %52 = cir.const #cir.int<2> : !s32i loc(#loc186)
    %53 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc187)
    %54 = cir.call @signal(%52, %53) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc188)
    cir.br ^bb19 loc(#loc141)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc189)
  ^bb20:  // 2 preds: ^bb4, ^bb19
    cir.br ^bb21 loc(#loc134)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc130)
  } loc(#loc301)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc322)
    cir.br ^bb1 loc(#loc323)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc196)
    cir.br ^bb2 loc(#loc194)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb19 [
      6: ^bb4
    ] loc(#loc194)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc324)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc193)
    cir.store %2, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc322)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc200)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc201)
    %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc202)
    cir.br ^bb6 loc(#loc325)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc205)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc206)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc206)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc326)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc327)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc208)
    %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc209)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc209)
    cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc208)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc210)
    %16 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    cir.store %15, %16 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc328)
    cir.br ^bb8 loc(#loc204)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc204)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<4> : !u64i loc(#loc329)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc214)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc330)
    cir.store %19, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc331)
    cir.br ^bb10 loc(#loc332)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc219)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc220)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc220)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc333)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc334)
  ^bb11:  // pred: ^bb10
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc222)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc224)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc222)
    cir.br ^bb12 loc(#loc218)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc218)
  ^bb13:  // pred: ^bb12
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc225)
    %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc335)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc228)
    %32 = cir.get_member %31[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc229)
    %34 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc230)
    %35 = cir.call @signal(%33, %34) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc231)
    %36 = cir.const #cir.int<2> : !s32i loc(#loc232)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc233)
    %38 = cir.call @signal(%36, %37) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc234)
    cir.br ^bb14 loc(#loc337)
  ^bb14:  // pred: ^bb13
    %39 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %40 = cir.load %39 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc237)
    %41 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc238)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc238)
    %43 = cir.cmp(ne, %40, %42) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc338)
    cir.brcond %43 ^bb15, ^bb16 loc(#loc339)
  ^bb15:  // pred: ^bb14
    %44 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc240)
    %45 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    %46 = cir.load %45 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc241)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc241)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc240)
    %48 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc242)
    %49 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
    cir.store %48, %49 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc340)
    cir.br ^bb16 loc(#loc236)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc236)
  ^bb17:  // pred: ^bb16
    %50 = cir.const #cir.int<2> : !s32i loc(#loc244)
    %51 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc245)
    %52 = cir.call @signal(%50, %51) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc246)
    cir.br ^bb18 loc(#loc199)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc247)
  ^bb19:  // pred: ^bb2
    %53 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc248)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc248)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc249)
    cir.br ^bb20 loc(#loc250)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc195)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc191)
  } loc(#loc321)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_15.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":22:18)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":89:19)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":46:1)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":92:1)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":52:9)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":52:45)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":48:5)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":91:5)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":48:12)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":50:5)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":51:5)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":85:5)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:16)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:24)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:9)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:9)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":58:9)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:13)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:81)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":55:9)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":56:13)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":56:18)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":57:80)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":57:13)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:53)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:75)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:46)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:76)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:9)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:9)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:49)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:13)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:33)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:39)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:40)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:46)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:45)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":61:76)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":61:9)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":62:81)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":62:9)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:16)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:24)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:9)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:9)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":84:9)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:13)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:81)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":81:9)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":82:13)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":82:18)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":83:80)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":83:13)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":86:5)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":89:9)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":90:9)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":192:1)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":196:1)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":194:5)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":194:11)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":195:5)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":195:11)
#loc89 = loc("/usr/include/stdlib.h":575:1)
#loc90 = loc("/usr/include/stdlib.h":575:41)
#loc91 = loc("/usr/include/time.h":76:1)
#loc92 = loc("/usr/include/time.h":76:38)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":212:15)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":214:15)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":217:15)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":219:15)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:1)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":222:1)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":208:1)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":210:27)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":210:22)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":210:5)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":212:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":213:5)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":213:57)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":214:5)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":217:5)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":218:5)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":218:56)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":219:5)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":221:12)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":221:5)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:1)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":42:1)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":37:1)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:5)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":41:5)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:9)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:78)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":39:5)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":40:82)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":40:9)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":99:1)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":143:1)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":109:9)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":109:45)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":101:5)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":142:5)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":101:12)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":103:5)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":105:19)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":105:9)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":106:9)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":108:5)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":140:5)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:16)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:24)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:9)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:9)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":115:9)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:13)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:82)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":112:9)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":113:13)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":113:18)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":114:81)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":114:13)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:53)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:75)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:46)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:76)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:9)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:9)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:49)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:13)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:33)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:39)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:40)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:46)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:45)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":118:77)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":118:9)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":119:82)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":119:9)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:16)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:24)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:9)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:16)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:24)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:9)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:9)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":138:9)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:13)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:82)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":135:9)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":136:13)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":136:18)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":137:81)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":137:13)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:16)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:24)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:9)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":141:5)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":146:1)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":190:1)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":152:9)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":152:45)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":148:5)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":189:5)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":148:12)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":150:5)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":151:5)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":183:5)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:16)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:24)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:9)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:9)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":158:9)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:13)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:82)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":155:9)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":156:13)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":156:18)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":157:81)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":157:13)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:53)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:75)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:46)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:76)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:9)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:9)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:49)
#loc219 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:13)
#loc220 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:33)
#loc221 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:39)
#loc222 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:40)
#loc223 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:46)
#loc224 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:45)
#loc225 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":161:77)
#loc226 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":161:9)
#loc227 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":162:82)
#loc228 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":162:9)
#loc229 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:16)
#loc230 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:24)
#loc231 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:9)
#loc232 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:16)
#loc233 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:24)
#loc234 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:9)
#loc235 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:9)
#loc236 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":181:9)
#loc237 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:13)
#loc238 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:82)
#loc239 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":178:9)
#loc240 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":179:13)
#loc241 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":179:18)
#loc242 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":180:81)
#loc243 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":180:13)
#loc244 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:16)
#loc245 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:24)
#loc246 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:9)
#loc247 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":184:5)
#loc248 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":187:19)
#loc249 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":187:9)
#loc250 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":188:9)
#loc251 = loc(fused[#loc1, #loc2])
#loc252 = loc(fused[#loc3, #loc4])
#loc253 = loc(fused[#loc5, #loc6])
#loc254 = loc(fused[#loc7, #loc8])
#loc255 = loc(fused[#loc9, #loc10])
#loc256 = loc(fused[#loc11, #loc12])
#loc257 = loc(fused[#loc13, #loc14])
#loc259 = loc(fused[#loc18, #loc19])
#loc260 = loc(fused[#loc20, #loc21])
#loc261 = loc(fused[#loc22, #loc19])
#loc262 = loc(fused[#loc24, #loc23])
#loc263 = loc(fused[#loc26, #loc27])
#loc264 = loc(fused[#loc29, #loc30])
#loc265 = loc(fused[#loc31, #loc32])
#loc266 = loc(fused[#loc33, #loc34])
#loc267 = loc(fused[#loc37, #loc38])
#loc268 = loc(fused[#loc42, #loc43])
#loc269 = loc(fused[#loc44, #loc45])
#loc270 = loc(fused[#loc46, #loc43])
#loc271 = loc(fused[#loc50, #loc49])
#loc272 = loc(fused[#loc51, #loc52])
#loc273 = loc(fused[#loc53, #loc54])
#loc274 = loc(fused[#loc55, #loc54])
#loc275 = loc(fused[#loc56, #loc57])
#loc276 = loc(fused[#loc58, #loc59])
#loc277 = loc(fused[#loc60, #loc57])
#loc278 = loc(fused[#loc65, #loc64])
#loc279 = loc(fused[#loc67, #loc66])
#loc280 = loc(fused[#loc71, #loc72])
#loc281 = loc(fused[#loc73, #loc74])
#loc282 = loc(fused[#loc75, #loc72])
#loc283 = loc(fused[#loc79, #loc78])
#loc284 = loc(fused[#loc83, #loc84])
#loc285 = loc(fused[#loc85, #loc86])
#loc286 = loc(fused[#loc87, #loc88])
#loc287 = loc(fused[#loc89, #loc90])
#loc288 = loc(fused[#loc91, #loc92])
#loc289 = loc(fused[#loc97, #loc98])
#loc292 = loc(fused[#loc108, #loc109])
#loc293 = loc(fused[#loc112, #loc113])
#loc294 = loc(fused[#loc116, #loc115])
#loc295 = loc(fused[#loc117, #loc118])
#loc297 = loc(fused[#loc122, #loc123])
#loc298 = loc(fused[#loc124, #loc125])
#loc299 = loc(fused[#loc126, #loc123])
#loc300 = loc(fused[#loc128, #loc127])
#loc301 = loc(fused[#loc129, #loc130])
#loc302 = loc(fused[#loc131, #loc132])
#loc303 = loc(fused[#loc133, #loc134])
#loc304 = loc(fused[#loc140, #loc141])
#loc305 = loc(fused[#loc145, #loc146])
#loc306 = loc(fused[#loc147, #loc148])
#loc307 = loc(fused[#loc149, #loc146])
#loc308 = loc(fused[#loc153, #loc152])
#loc309 = loc(fused[#loc154, #loc155])
#loc310 = loc(fused[#loc156, #loc157])
#loc311 = loc(fused[#loc158, #loc157])
#loc312 = loc(fused[#loc159, #loc160])
#loc313 = loc(fused[#loc161, #loc162])
#loc314 = loc(fused[#loc163, #loc160])
#loc315 = loc(fused[#loc168, #loc167])
#loc316 = loc(fused[#loc170, #loc169])
#loc317 = loc(fused[#loc177, #loc178])
#loc318 = loc(fused[#loc179, #loc180])
#loc319 = loc(fused[#loc181, #loc178])
#loc320 = loc(fused[#loc185, #loc184])
#loc321 = loc(fused[#loc190, #loc191])
#loc322 = loc(fused[#loc192, #loc193])
#loc323 = loc(fused[#loc194, #loc195])
#loc324 = loc(fused[#loc198, #loc199])
#loc325 = loc(fused[#loc203, #loc204])
#loc326 = loc(fused[#loc205, #loc206])
#loc327 = loc(fused[#loc207, #loc204])
#loc328 = loc(fused[#loc211, #loc210])
#loc329 = loc(fused[#loc212, #loc213])
#loc330 = loc(fused[#loc214, #loc215])
#loc331 = loc(fused[#loc216, #loc215])
#loc332 = loc(fused[#loc217, #loc218])
#loc333 = loc(fused[#loc219, #loc220])
#loc334 = loc(fused[#loc221, #loc218])
#loc335 = loc(fused[#loc226, #loc225])
#loc336 = loc(fused[#loc228, #loc227])
#loc337 = loc(fused[#loc235, #loc236])
#loc338 = loc(fused[#loc237, #loc238])
#loc339 = loc(fused[#loc239, #loc236])
#loc340 = loc(fused[#loc243, #loc242])
