!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc59 = loc("CWE401_Memory_Leak__char_realloc_16.c":110:10)
#loc60 = loc("CWE401_Memory_Leak__char_realloc_16.c":110:14)
#loc61 = loc("CWE401_Memory_Leak__char_realloc_16.c":110:20)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_16.c":110:32)
#loc158 = loc(fused[#loc59, #loc60])
#loc159 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc137)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc18)
        cir.condition(%3) loc(#loc18)
      } do {
        %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc19)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc21)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc144)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc145)
        %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc33)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc150)
        } loc(#loc148)
        %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc34)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
        %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        cir.break loc(#loc38)
      } loc(#loc143)
    } loc(#loc143)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc41)
        cir.condition(%3) loc(#loc41)
      } do {
        cir.break loc(#loc42)
      } loc(#loc151)
    } loc(#loc151)
    cir.return loc(#loc11)
  } loc(#loc140)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc152)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc155)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc66)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE401_Memory_Leak__char_realloc_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call @CWE401_Memory_Leak__char_realloc_16_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE401_Memory_Leak__char_realloc_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call @CWE401_Memory_Leak__char_realloc_16_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.return %17 : !s32i loc(#loc162)
  } loc(#loc157)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc87)
        cir.condition(%3) loc(#loc87)
      } do {
        %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc88)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc90)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc90)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc168)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc169)
        %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc102)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
          } loc(#loc174)
        } loc(#loc172)
        %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc103)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc105)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc105)
        %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc107)
        cir.break loc(#loc108)
      } loc(#loc167)
    } loc(#loc167)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc111)
        cir.condition(%3) loc(#loc111)
      } do {
        %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc112)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
        cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
        cir.break loc(#loc114)
      } loc(#loc175)
    } loc(#loc175)
    cir.return loc(#loc80)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc119)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc123)
        cir.condition(%3) loc(#loc123)
      } do {
        %2 = cir.const #cir.int<100> : !s32i loc(#loc124)
        %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc124)
        %4 = cir.const #cir.int<1> : !u64i loc(#loc124)
        %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc124)
        %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc124)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc124)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
        %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc126)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc128)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc128)
        %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc130)
        cir.break loc(#loc131)
      } loc(#loc179)
    } loc(#loc179)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc134)
        cir.condition(%3) loc(#loc134)
      } do {
        cir.break loc(#loc135)
      } loc(#loc181)
    } loc(#loc181)
    cir.return loc(#loc116)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_16.c":34:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_16.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_16.c":44:1)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_16.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_16.c":26:12)
#loc14 = loc("CWE401_Memory_Leak__char_realloc_16.c":27:12)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_16.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_16.c":28:5)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_16.c":37:5)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_16.c":28:11)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_16.c":31:24)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_16.c":31:32)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_16.c":31:38)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_16.c":31:42)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_16.c":31:53)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_16.c":31:54)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_16.c":31:9)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:9)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:37)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:13)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:21)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:27)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:28)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:34)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_16.c":32:33)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_16.c":34:9)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_16.c":34:16)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_16.c":35:19)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_16.c":35:9)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_16.c":36:9)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_16.c":38:5)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_16.c":43:5)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_16.c":38:11)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_16.c":42:9)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_16.c":95:1)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_16.c":99:1)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_16.c":97:5)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_16.c":97:13)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_16.c":98:5)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_16.c":98:13)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_16.c":115:15)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_16.c":117:15)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_16.c":120:15)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_16.c":122:15)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_16.c":110:1)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_16.c":125:1)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_16.c":111:1)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_16.c":113:27)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_16.c":113:22)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_16.c":113:5)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_16.c":115:5)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_16.c":116:5)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_16.c":116:46)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_16.c":117:5)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_16.c":120:5)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_16.c":121:5)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_16.c":121:45)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_16.c":122:5)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_16.c":124:12)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_16.c":124:5)
#loc77 = loc("/usr/include/stdlib.h":687:1)
#loc78 = loc("/usr/include/stdlib.h":687:32)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_16.c":51:1)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_16.c":71:1)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_16.c":53:5)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_16.c":53:12)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_16.c":54:12)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_16.c":54:5)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_16.c":55:5)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_16.c":64:5)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_16.c":55:11)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_16.c":58:24)
#loc89 = loc("CWE401_Memory_Leak__char_realloc_16.c":58:32)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_16.c":58:38)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_16.c":58:42)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_16.c":58:53)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_16.c":58:54)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_16.c":58:9)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:9)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:37)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:13)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:21)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:27)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:28)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:34)
#loc102 = loc("CWE401_Memory_Leak__char_realloc_16.c":59:33)
#loc103 = loc("CWE401_Memory_Leak__char_realloc_16.c":61:9)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_16.c":61:16)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_16.c":61:22)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_16.c":62:19)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_16.c":62:9)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_16.c":63:9)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_16.c":65:5)
#loc110 = loc("CWE401_Memory_Leak__char_realloc_16.c":70:5)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_16.c":65:11)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_16.c":68:9)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_16.c":68:14)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_16.c":69:9)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_16.c":74:1)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_16.c":93:1)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_16.c":76:5)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_16.c":76:12)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_16.c":77:12)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_16.c":77:5)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_16.c":78:5)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_16.c":86:5)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_16.c":78:11)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_16.c":81:24)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_16.c":81:9)
#loc126 = loc("CWE401_Memory_Leak__char_realloc_16.c":83:9)
#loc127 = loc("CWE401_Memory_Leak__char_realloc_16.c":83:16)
#loc128 = loc("CWE401_Memory_Leak__char_realloc_16.c":83:22)
#loc129 = loc("CWE401_Memory_Leak__char_realloc_16.c":84:19)
#loc130 = loc("CWE401_Memory_Leak__char_realloc_16.c":84:9)
#loc131 = loc("CWE401_Memory_Leak__char_realloc_16.c":85:9)
#loc132 = loc("CWE401_Memory_Leak__char_realloc_16.c":87:5)
#loc133 = loc("CWE401_Memory_Leak__char_realloc_16.c":92:5)
#loc134 = loc("CWE401_Memory_Leak__char_realloc_16.c":87:11)
#loc135 = loc("CWE401_Memory_Leak__char_realloc_16.c":91:9)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc8, #loc9])
#loc140 = loc(fused[#loc10, #loc11])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc15, #loc14])
#loc143 = loc(fused[#loc16, #loc17])
#loc144 = loc(fused[#loc22, #loc23])
#loc145 = loc(fused[#loc21, #loc23])
#loc146 = loc(fused[#loc19, #loc24])
#loc147 = loc(fused[#loc25, #loc24])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc30, #loc27])
#loc151 = loc(fused[#loc39, #loc40])
#loc152 = loc(fused[#loc43, #loc44])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc57, #loc58])
#loc160 = loc(fused[#loc68, #loc69])
#loc161 = loc(fused[#loc72, #loc73])
#loc162 = loc(fused[#loc76, #loc75])
#loc163 = loc(fused[#loc77, #loc78])
#loc164 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc81, #loc82])
#loc166 = loc(fused[#loc84, #loc83])
#loc167 = loc(fused[#loc85, #loc86])
#loc168 = loc(fused[#loc91, #loc92])
#loc169 = loc(fused[#loc90, #loc92])
#loc170 = loc(fused[#loc88, #loc93])
#loc171 = loc(fused[#loc94, #loc93])
#loc172 = loc(fused[#loc95, #loc96])
#loc173 = loc(fused[#loc97, #loc98])
#loc174 = loc(fused[#loc99, #loc96])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc115, #loc116])
#loc177 = loc(fused[#loc117, #loc118])
#loc178 = loc(fused[#loc120, #loc119])
#loc179 = loc(fused[#loc121, #loc122])
#loc180 = loc(fused[#loc125, #loc124])
#loc181 = loc(fused[#loc132, #loc133])
