!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":23:81)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":23:88)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":52:85)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":52:92)
#loc107 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc54, #loc55])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc107)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc109)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc13)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc14)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc14)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc14)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc110)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc18)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc18)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc19)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc19)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc21)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc111)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
      %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc24)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc24)
      %22 = cir.const #cir.int<1> : !u64i loc(#loc112)
      %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc113)
      cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc114)
      %24 = cir.const #cir.int<0> : !s32i loc(#loc29)
      %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc29)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc31)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc33)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc115)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    } loc(#loc108)
    cir.return loc(#loc4)
  } loc(#loc106)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc118)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc119)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc46)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc121)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_badSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.return loc(#loc37)
  } loc(#loc116)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc54, #loc55])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc125)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc62)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc63)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc63)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc63)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc67)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc67)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc68)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc68)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc70)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc127)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
      %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc73)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc73)
      %22 = cir.const #cir.int<1> : !u64i loc(#loc128)
      %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc129)
      cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc130)
      %24 = cir.const #cir.int<0> : !s32i loc(#loc78)
      %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc78)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc80)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc81)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc80)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc82)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc131)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    } loc(#loc124)
    cir.return loc(#loc53)
  } loc(#loc122)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc136)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc137)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc99)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.return loc(#loc90)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":24:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":25:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":33:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":26:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":26:24)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:24)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:29)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:34)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:25)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:17)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:35)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:46)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:47)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:14)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:18)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":32:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":32:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":36:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":46:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":38:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":38:12)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":39:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":39:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":40:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":40:28)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":43:12)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":43:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:10)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:11)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":45:80)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":45:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":52:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":63:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":53:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":54:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":62:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":55:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":55:24)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:16)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:29)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:33)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:34)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:25)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:20)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:23)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:31)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:35)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:46)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:47)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:23)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:14)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:19)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":61:19)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":61:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":77:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":80:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":79:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":79:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":66:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":75:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":68:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":68:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":69:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":69:26)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":70:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":70:28)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":72:12)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":72:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:15)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:10)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:11)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":74:84)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":74:5)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc8, #loc9])
#loc109 = loc(fused[#loc10, #loc11])
#loc110 = loc(fused[#loc16, #loc17])
#loc111 = loc(fused[#loc21, #loc18])
#loc112 = loc(fused[#loc25, #loc26])
#loc113 = loc(fused[#loc24, #loc26])
#loc114 = loc(fused[#loc27, #loc28])
#loc115 = loc(fused[#loc30, #loc29])
#loc116 = loc(fused[#loc36, #loc37])
#loc117 = loc(fused[#loc38, #loc39])
#loc118 = loc(fused[#loc40, #loc41])
#loc119 = loc(fused[#loc42, #loc43])
#loc120 = loc(fused[#loc45, #loc44])
#loc121 = loc(fused[#loc47, #loc46])
#loc122 = loc(fused[#loc52, #loc53])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc60])
#loc126 = loc(fused[#loc65, #loc66])
#loc127 = loc(fused[#loc70, #loc67])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc73, #loc75])
#loc130 = loc(fused[#loc76, #loc77])
#loc131 = loc(fused[#loc79, #loc78])
#loc132 = loc(fused[#loc85, #loc86])
#loc133 = loc(fused[#loc87, #loc88])
#loc134 = loc(fused[#loc89, #loc90])
#loc135 = loc(fused[#loc91, #loc92])
#loc136 = loc(fused[#loc93, #loc94])
#loc137 = loc(fused[#loc95, #loc96])
#loc138 = loc(fused[#loc98, #loc97])
#loc139 = loc(fused[#loc100, #loc99])
