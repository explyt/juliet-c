!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":43:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":114:10)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":114:14)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":114:20)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":114:32)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":83:13)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:23)
#true = #cir.bool<true> : !cir.bool
!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType = !cir.struct<union "CWE400_Resource_Exhaustion__rand_sleep_34_unionType" {!s32i, !s32i}>
#loc135 = loc(fused[#loc46, #loc47])
#loc136 = loc(fused[#loc48, #loc49])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc118)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc123)
    %2 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc124)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc17)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc19)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc19)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc19)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc19)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc19)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc19)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc19)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc19)
    cir.br ^bb3(%20 : !u32i) loc(#loc19)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc19)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc19)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc19)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc19)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc19)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc19)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc19)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc19)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc19)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc19)
    cir.br ^bb3(%36 : !u32i) loc(#loc19)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":43:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc19)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %40 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %39, %40 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.br ^bb5 loc(#loc128)
  ^bb5:  // pred: ^bb4
    %41 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %44 = cir.cast(integral, %43 : !s32i), !u32i loc(#loc27)
    %45 = cir.call @usleep(%44) : (!u32i) -> !s32i loc(#loc28)
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc7)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc121)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc129)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc132)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc43)
  cir.func @main(%arg0: !s32i loc(fused[#loc46, #loc47]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc51)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc52)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc52)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc53)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc40)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_34_good() : () -> () loc(#loc55)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_34_bad() : () -> () loc(#loc59)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %17 : !s32i loc(#loc139)
  } loc(#loc134)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc142)
    %2 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc143)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc73)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc75)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %7 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc81)
    %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc82)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc83)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb2 loc(#loc80)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc65)
  } loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc86)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc150)
    %2 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc151)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc96)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc98)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc98)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc98)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc98)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc98)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc98)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc98)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc98)
    cir.br ^bb3(%20 : !u32i) loc(#loc98)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc98)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc98)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc98)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc98)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc98)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc98)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc98)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc98)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc98)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc98)
    cir.br ^bb3(%36 : !u32i) loc(#loc98)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":83:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc98)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %40 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %39, %40 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %41 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_sleep_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.br ^bb6 loc(#loc156)
  ^bb6:  // pred: ^bb5
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %45 = cir.cmp(gt, %43, %44) : !s32i, !cir.bool loc(#loc157)
    cir.brcond %45 ^bb7, ^bb12 loc(#loc108)
  ^bb7:  // pred: ^bb6
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %47 = cir.const #cir.int<2000> : !s32i loc(#loc110)
    %48 = cir.cmp(le, %46, %47) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %48 ^bb8, ^bb9 loc(#loc108)
  ^bb8:  // pred: ^bb7
    %49 = cir.const #true loc(#loc108)
    cir.br ^bb10(%49 : !cir.bool) loc(#loc108)
  ^bb9:  // pred: ^bb7
    %50 = cir.const #false loc(#loc108)
    cir.br ^bb10(%50 : !cir.bool) loc(#loc108)
  ^bb10(%51: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%51 : !cir.bool) loc(#loc108)
  ^bb12:  // pred: ^bb6
    %52 = cir.const #false loc(#loc108)
    cir.br ^bb13(%52 : !cir.bool) loc(#loc108)
  ^bb13(%53: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:23)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc108)
  ^bb14:  // pred: ^bb13
    cir.brcond %53 ^bb15, ^bb16 loc(#loc159)
  ^bb15:  // pred: ^bb14
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %55 = cir.cast(integral, %54 : !s32i), !u32i loc(#loc114)
    %56 = cir.call @usleep(%55) : (!u32i) -> !s32i loc(#loc115)
    %57 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc85)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb17 loc(#loc112)
  ^bb16:  // pred: ^bb14
    %59 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc86)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb17 loc(#loc105)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc105)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc103)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc88)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/unistd.h":480:1)
#loc4 = loc("/usr/include/unistd.h":480:43)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":49:19)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":36:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":51:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":46:9)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":46:29)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":38:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":38:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":39:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":39:57)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":41:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":41:13)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":41:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":43:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":44:26)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":30:9)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":44:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":45:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":50:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":31:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":48:15)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":48:9)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":49:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":100:1)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":104:1)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":102:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":102:13)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":103:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":103:13)
#loc36 = loc("/usr/include/stdlib.h":575:1)
#loc37 = loc("/usr/include/stdlib.h":575:41)
#loc38 = loc("/usr/include/time.h":76:1)
#loc39 = loc("/usr/include/time.h":76:38)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":119:15)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":121:15)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":124:15)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":126:15)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":114:1)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":129:1)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":115:1)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":117:27)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":117:22)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":117:5)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":119:5)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":120:5)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":120:52)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":121:5)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":124:5)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":125:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":125:51)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":126:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":128:12)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":128:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":58:1)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":73:1)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":68:9)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":68:29)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":60:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":60:9)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":61:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":61:57)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":63:14)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":63:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":63:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":65:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":65:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":66:26)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":66:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":67:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":72:5)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":70:15)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":70:9)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":71:19)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":71:9)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":91:23)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":95:23)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":76:1)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":98:1)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":86:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":86:29)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":78:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":78:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":79:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":79:57)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":81:14)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":81:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":81:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":83:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":84:26)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":84:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":85:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":97:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":96:9)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:21)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:26)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":88:35)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":89:9)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":92:9)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":94:9)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":90:19)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":90:13)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":91:13)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_34.c":95:13)
#loc118 = loc(fused[#loc1, #loc2])
#loc119 = loc(fused[#loc3, #loc4])
#loc120 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc8, #loc9])
#loc122 = loc(fused[#loc10, #loc11])
#loc123 = loc(fused[#loc12, #loc13])
#loc124 = loc(fused[#loc14, #loc15])
#loc125 = loc(fused[#loc18, #loc16])
#loc126 = loc(fused[#loc20, #loc19])
#loc127 = loc(fused[#loc23, #loc21])
#loc128 = loc(fused[#loc24, #loc25])
#loc129 = loc(fused[#loc30, #loc31])
#loc130 = loc(fused[#loc32, #loc33])
#loc131 = loc(fused[#loc34, #loc35])
#loc132 = loc(fused[#loc36, #loc37])
#loc133 = loc(fused[#loc38, #loc39])
#loc134 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc55, #loc56])
#loc138 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc63, #loc62])
#loc140 = loc(fused[#loc64, #loc65])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc68, #loc69])
#loc143 = loc(fused[#loc70, #loc71])
#loc144 = loc(fused[#loc74, #loc72])
#loc145 = loc(fused[#loc76, #loc75])
#loc146 = loc(fused[#loc78, #loc77])
#loc147 = loc(fused[#loc79, #loc80])
#loc148 = loc(fused[#loc87, #loc88])
#loc149 = loc(fused[#loc89, #loc90])
#loc150 = loc(fused[#loc91, #loc92])
#loc151 = loc(fused[#loc93, #loc94])
#loc152 = loc(fused[#loc97, #loc95])
#loc153 = loc(fused[#loc99, #loc98])
#loc154 = loc(fused[#loc101, #loc100])
#loc155 = loc(fused[#loc102, #loc103])
#loc156 = loc(fused[#loc104, #loc105])
#loc157 = loc(fused[#loc106, #loc107])
#loc158 = loc(fused[#loc109, #loc110])
#loc159 = loc(fused[#loc111, #loc112, #loc113, #loc105])
