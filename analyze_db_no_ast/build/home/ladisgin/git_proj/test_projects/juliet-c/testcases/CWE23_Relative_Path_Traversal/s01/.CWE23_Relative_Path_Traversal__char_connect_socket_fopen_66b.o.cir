!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":58:14)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":58:31)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":78:18)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":78:35)
#loc58 = loc(fused[#loc8, #loc9])
#loc67 = loc(fused[#loc32, #loc33])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc55)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc56)
  cir.func  @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_667badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc58)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc12)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s8i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc61)
      %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc18)
      cir.store %7, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc61)
      %8 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc19)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
      %12 = cir.call @fopen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc19)
      cir.store %12, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc62)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %15 = cir.cmp(ne, %13, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc64)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
          %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
        } loc(#loc65)
      } loc(#loc63)
    } loc(#loc60)
    cir.return loc(#loc7)
  } loc(#loc57)
  cir.func  @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_6611goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc32, #loc33])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc67)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc68)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc36)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s8i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc70)
      %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc42)
      cir.store %7, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc70)
      %8 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc43)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc45)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc45)
      %12 = cir.call @fopen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc43)
      cir.store %12, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc51)
        %15 = cir.cmp(ne, %13, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc73)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
          %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc54)
        } loc(#loc74)
      } loc(#loc72)
    } loc(#loc69)
    cir.return loc(#loc31)
  } loc(#loc66)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":65:29)
#loc4 = loc("/usr/include/stdio.h":184:1)
#loc5 = loc("/usr/include/stdio.h":184:36)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":58:1)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":71:1)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":61:5)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":61:30)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":59:1)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":61:19)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":61:29)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":62:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":70:5)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":63:9)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":63:23)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":65:17)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":65:23)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":65:9)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":65:34)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":66:9)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":69:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":66:13)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":66:22)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":67:9)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":68:20)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":68:13)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":78:1)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":90:1)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":80:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":80:30)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":79:1)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":80:19)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":80:29)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":81:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":89:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":82:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":82:23)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":84:17)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":84:23)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":84:29)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":84:9)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":84:34)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":85:9)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":88:9)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":85:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":85:22)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":86:9)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":87:20)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_66b.cpp":87:13)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc4, #loc5])
#loc57 = loc(fused[#loc6, #loc7])
#loc59 = loc(fused[#loc10, #loc11])
#loc60 = loc(fused[#loc15, #loc16])
#loc61 = loc(fused[#loc17, #loc18])
#loc62 = loc(fused[#loc21, #loc22])
#loc63 = loc(fused[#loc23, #loc24])
#loc64 = loc(fused[#loc25, #loc26])
#loc65 = loc(fused[#loc27, #loc24])
#loc66 = loc(fused[#loc30, #loc31])
#loc68 = loc(fused[#loc34, #loc35])
#loc69 = loc(fused[#loc39, #loc40])
#loc70 = loc(fused[#loc41, #loc42])
#loc71 = loc(fused[#loc46, #loc47])
#loc72 = loc(fused[#loc48, #loc49])
#loc73 = loc(fused[#loc50, #loc51])
#loc74 = loc(fused[#loc52, #loc49])
