!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc169)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc173)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc21)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc23)
          %6 = cir.binop(and, %4, %5) : !s32i loc(#loc23)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
          %8 = cir.ternary(%7, true {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc23)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc23)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc23)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc23)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc23)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc23)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc23)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc23)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc23)
            cir.yield %21 : !u32i loc(#loc23)
          }, false {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc23)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc23)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc23)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc23)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc23)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc23)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc23)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc23)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc23)
            %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc23)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc23)
            %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc23)
            %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc23)
            cir.yield %25 : !u32i loc(#loc23)
          }) : (!cir.bool) -> !u32i loc(#loc23)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc23)
          cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
          cir.break loc(#loc25)
        } loc(#loc22)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc27)
          cir.break loc(#loc28)
        } loc(#loc26)
        cir.yield loc(#loc19)
      } loc(#loc19)
    } loc(#loc177)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc180)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc182)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc37)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc43)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc45)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
          } loc(#loc186)
        } loc(#loc184)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc47)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc48)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc48)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc52)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc54)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc56)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc188)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc58)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc59)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
      } loc(#loc181)
    } loc(#loc179)
    cir.return loc(#loc13)
  } loc(#loc174)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc190)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc191)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc72)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc76)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc79)
          cir.break loc(#loc80)
        } loc(#loc77)
        cir.case(default, []) {
          %4 = cir.const #cir.int<100> : !s32i loc(#loc82)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc82)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
          cir.break loc(#loc85)
        } loc(#loc81)
        cir.yield loc(#loc74)
      } loc(#loc74)
    } loc(#loc195)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc89)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc198)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc200)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc93)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc94)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc93)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc203)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc100)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc102)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
          } loc(#loc204)
        } loc(#loc202)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc104)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc105)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc105)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc205)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc109)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc109)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc112)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc111)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc113)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc206)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc115)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc116)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc68)
  } loc(#loc192)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc123)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc127)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<100> : !s32i loc(#loc129)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc130)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc129)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
          cir.break loc(#loc132)
        } loc(#loc128)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc135)
          cir.break loc(#loc136)
        } loc(#loc133)
        cir.yield loc(#loc125)
      } loc(#loc125)
    } loc(#loc210)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc213)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc215)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc144)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc145)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc151)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc152)
            %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc153)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
          } loc(#loc219)
        } loc(#loc217)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc155)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc157)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc156)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc156)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc220)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc160)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc160)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc163)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc162)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc164)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc221)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc166)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc167)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
      } loc(#loc214)
    } loc(#loc212)
    cir.return loc(#loc119)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":34:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":21:1)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":50:1)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":23:5)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":23:9)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":25:13)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":25:12)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":25:5)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":26:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":36:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":26:12)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":28:5)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":30:16)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":30:9)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":31:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":32:5)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":34:9)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":35:9)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":38:5)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":49:5)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":38:9)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":38:16)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":39:5)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":42:9)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":42:48)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":42:37)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":42:44)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:9)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:43)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:13)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:27)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:33)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:34)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:40)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":43:39)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":45:16)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":45:28)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":45:33)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":45:38)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":45:9)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":45:39)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":46:30)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":46:9)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":46:20)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":46:25)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":46:26)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":47:19)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":47:9)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":48:9)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":48:14)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":120:1)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":124:1)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":122:5)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":122:14)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":123:5)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":123:14)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":57:1)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":86:1)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":59:5)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":59:9)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":61:13)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":61:12)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":61:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":62:5)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":72:5)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":62:12)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":64:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":66:19)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":66:9)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":67:9)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":68:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":70:16)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":70:20)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":70:9)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":71:9)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":74:5)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":85:5)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":74:9)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":74:16)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":75:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":78:9)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":78:48)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":78:37)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":78:44)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:9)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:43)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:13)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:27)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:33)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:34)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:40)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":79:39)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":81:16)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":81:28)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":81:33)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":81:38)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":81:9)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":81:39)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":82:30)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":82:9)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":82:20)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":82:25)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":82:26)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":83:19)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":83:9)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":84:9)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":84:14)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":89:1)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":118:1)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":91:5)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":91:9)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":93:13)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":93:12)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":93:5)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":94:5)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":104:5)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":94:12)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":96:5)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":98:16)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":98:20)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":98:9)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":99:9)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":100:5)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":102:19)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":102:9)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":103:9)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":106:5)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":117:5)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":106:9)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":106:16)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":107:5)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":110:9)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":110:48)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":110:37)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":110:44)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:9)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:43)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:13)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:27)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:33)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:34)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:40)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":111:39)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":113:16)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":113:28)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":113:33)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":113:38)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":113:9)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":113:39)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":114:30)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":114:9)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":114:20)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":114:25)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":114:26)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":115:19)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":115:9)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":116:9)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_15.c":116:14)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc6, #loc7])
#loc172 = loc(fused[#loc8, #loc9])
#loc173 = loc(fused[#loc10, #loc11])
#loc174 = loc(fused[#loc12, #loc13])
#loc175 = loc(fused[#loc14, #loc15])
#loc176 = loc(fused[#loc18, #loc16])
#loc177 = loc(fused[#loc19, #loc20])
#loc178 = loc(fused[#loc24, #loc23])
#loc179 = loc(fused[#loc29, #loc30])
#loc180 = loc(fused[#loc31, #loc32])
#loc181 = loc(fused[#loc33, #loc30])
#loc182 = loc(fused[#loc34, #loc35])
#loc183 = loc(fused[#loc36, #loc35])
#loc184 = loc(fused[#loc38, #loc39])
#loc185 = loc(fused[#loc40, #loc41])
#loc186 = loc(fused[#loc42, #loc39])
#loc187 = loc(fused[#loc50, #loc51])
#loc188 = loc(fused[#loc53, #loc52])
#loc189 = loc(fused[#loc61, #loc62])
#loc190 = loc(fused[#loc63, #loc64])
#loc191 = loc(fused[#loc65, #loc66])
#loc192 = loc(fused[#loc67, #loc68])
#loc193 = loc(fused[#loc69, #loc70])
#loc194 = loc(fused[#loc73, #loc71])
#loc195 = loc(fused[#loc74, #loc75])
#loc196 = loc(fused[#loc84, #loc83])
#loc197 = loc(fused[#loc86, #loc87])
#loc198 = loc(fused[#loc88, #loc89])
#loc199 = loc(fused[#loc90, #loc87])
#loc200 = loc(fused[#loc91, #loc92])
#loc201 = loc(fused[#loc93, #loc92])
#loc202 = loc(fused[#loc95, #loc96])
#loc203 = loc(fused[#loc97, #loc98])
#loc204 = loc(fused[#loc99, #loc96])
#loc205 = loc(fused[#loc107, #loc108])
#loc206 = loc(fused[#loc110, #loc109])
#loc207 = loc(fused[#loc118, #loc119])
#loc208 = loc(fused[#loc120, #loc121])
#loc209 = loc(fused[#loc124, #loc122])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc131, #loc130])
#loc212 = loc(fused[#loc137, #loc138])
#loc213 = loc(fused[#loc139, #loc140])
#loc214 = loc(fused[#loc141, #loc138])
#loc215 = loc(fused[#loc142, #loc143])
#loc216 = loc(fused[#loc144, #loc143])
#loc217 = loc(fused[#loc146, #loc147])
#loc218 = loc(fused[#loc148, #loc149])
#loc219 = loc(fused[#loc150, #loc147])
#loc220 = loc(fused[#loc158, #loc159])
#loc221 = loc(fused[#loc161, #loc160])
