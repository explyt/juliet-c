!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":23:25)
#loc8 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":23:32)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":55:29)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":55:36)
#loc162 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc89, #loc90])
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc10)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc163)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc164)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc165)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc21)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc23)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc169)
    } loc(#loc167)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc26)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc26)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc170)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc30)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc32)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc32)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    cir.return %24 : !cir.ptr<!s8i> loc(#loc172)
  } loc(#loc161)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc47)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc50)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc181)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc58)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc59)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc59)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc182)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc63)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc64)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc183)
      %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
      %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc69)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
      %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc69)
      %26 = cir.const #cir.int<1> : !u64i loc(#loc184)
      %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc185)
      cir.libc.memmove %27 bytes from %22 to %20 : !cir.ptr<!void>, !u64i loc(#loc186)
      %28 = cir.const #cir.int<0> : !s32i loc(#loc75)
      %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc75)
      %30 = cir.const #cir.int<100> : !s32i loc(#loc76)
      %31 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc76)
      %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
      %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc78)
      cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc187)
      %35 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
      cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc80)
      %36 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc81)
      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
      cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
    } loc(#loc180)
    cir.return loc(#loc44)
  } loc(#loc176)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc189)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    cir.return loc(#loc84)
  } loc(#loc188)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc89, #loc90])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc88)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc92)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc93)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc192)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc193)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc197)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc103)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc105)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc103)
      } loc(#loc198)
    } loc(#loc196)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc107)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc108)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc108)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc199)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc112)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc114)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc200)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    cir.return %24 : !cir.ptr<!s8i> loc(#loc201)
  } loc(#loc190)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc126)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc207)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc134)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc135)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc136)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc135)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc135)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc208)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc139)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc139)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc141)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc140)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc142)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc209)
      %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
      %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc145)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc145)
      %26 = cir.const #cir.int<1> : !u64i loc(#loc210)
      %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc211)
      cir.libc.memmove %27 bytes from %22 to %20 : !cir.ptr<!void>, !u64i loc(#loc212)
      %28 = cir.const #cir.int<0> : !s32i loc(#loc151)
      %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc151)
      %30 = cir.const #cir.int<100> : !s32i loc(#loc152)
      %31 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc152)
      %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
      %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc154)
      cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc213)
      %35 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
      cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc156)
      %36 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc157)
      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
      cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
    } loc(#loc206)
    cir.return loc(#loc120)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":31:1)
#loc9 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":24:1)
#loc10 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":26:20)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":26:27)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":26:30)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":26:41)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":26:42)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:33)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:9)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:17)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:23)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:24)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:30)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":27:29)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":28:12)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":28:18)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":28:23)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":28:26)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":28:5)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":28:27)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":29:18)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":29:5)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":29:10)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":29:13)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":29:14)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":30:12)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":30:5)
#loc37 = loc("/usr/include/string.h":407:1)
#loc38 = loc("/usr/include/string.h":408:33)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("/usr/include/stdlib.h":687:1)
#loc42 = loc("/usr/include/stdlib.h":687:32)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":33:1)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":49:1)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":35:5)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":35:12)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":36:12)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":36:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":37:22)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":37:12)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":37:5)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":37:26)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":38:5)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":48:5)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":39:9)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":39:22)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":40:16)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":40:22)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":40:27)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":40:31)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":40:9)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":40:32)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":41:23)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":41:14)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":41:18)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":41:9)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:17)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:23)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:29)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:36)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:42)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:53)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:9)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":44:54)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":45:23)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":45:14)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":45:18)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":45:9)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":46:19)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":46:9)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":47:9)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":47:14)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":84:1)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":87:1)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":86:5)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":86:13)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":55:1)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":63:1)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":56:1)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":58:20)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":58:27)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":58:31)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":58:42)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":58:43)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":58:5)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:5)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:33)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:9)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:17)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:23)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:24)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:30)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":59:29)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":60:12)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":60:18)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":60:23)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":60:27)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":60:5)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":60:28)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":61:19)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":61:5)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":61:10)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":61:14)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":61:15)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":62:12)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":62:5)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":66:1)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":82:1)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":68:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":68:12)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":69:12)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":69:5)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":70:26)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":70:12)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":70:5)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":70:30)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":71:5)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":81:5)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":72:9)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":72:22)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":73:16)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":73:22)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":73:27)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":73:31)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":73:9)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":73:32)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":74:23)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":74:14)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":74:18)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":74:9)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:17)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:23)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:29)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:36)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:42)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:53)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:9)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":77:54)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":78:23)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":78:14)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":78:18)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":78:9)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":79:19)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":79:9)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":80:9)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memmove_42.c":80:14)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc163 = loc(fused[#loc12, #loc13])
#loc164 = loc(fused[#loc11, #loc13])
#loc165 = loc(fused[#loc10, #loc14])
#loc166 = loc(fused[#loc15, #loc14])
#loc167 = loc(fused[#loc16, #loc17])
#loc168 = loc(fused[#loc18, #loc19])
#loc169 = loc(fused[#loc20, #loc17])
#loc170 = loc(fused[#loc28, #loc29])
#loc171 = loc(fused[#loc31, #loc30])
#loc172 = loc(fused[#loc36, #loc35])
#loc173 = loc(fused[#loc37, #loc38])
#loc174 = loc(fused[#loc39, #loc40])
#loc175 = loc(fused[#loc41, #loc42])
#loc176 = loc(fused[#loc43, #loc44])
#loc177 = loc(fused[#loc45, #loc46])
#loc178 = loc(fused[#loc48, #loc47])
#loc179 = loc(fused[#loc51, #loc52])
#loc180 = loc(fused[#loc53, #loc54])
#loc181 = loc(fused[#loc55, #loc56])
#loc182 = loc(fused[#loc61, #loc62])
#loc183 = loc(fused[#loc66, #loc63])
#loc184 = loc(fused[#loc71, #loc72])
#loc185 = loc(fused[#loc69, #loc72])
#loc186 = loc(fused[#loc73, #loc74])
#loc187 = loc(fused[#loc78, #loc75])
#loc188 = loc(fused[#loc83, #loc84])
#loc189 = loc(fused[#loc85, #loc86])
#loc190 = loc(fused[#loc87, #loc88])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc93, #loc95])
#loc194 = loc(fused[#loc92, #loc96])
#loc195 = loc(fused[#loc97, #loc96])
#loc196 = loc(fused[#loc98, #loc99])
#loc197 = loc(fused[#loc100, #loc101])
#loc198 = loc(fused[#loc102, #loc99])
#loc199 = loc(fused[#loc110, #loc111])
#loc200 = loc(fused[#loc113, #loc112])
#loc201 = loc(fused[#loc118, #loc117])
#loc202 = loc(fused[#loc119, #loc120])
#loc203 = loc(fused[#loc121, #loc122])
#loc204 = loc(fused[#loc124, #loc123])
#loc205 = loc(fused[#loc127, #loc128])
#loc206 = loc(fused[#loc129, #loc130])
#loc207 = loc(fused[#loc131, #loc132])
#loc208 = loc(fused[#loc137, #loc138])
#loc209 = loc(fused[#loc142, #loc139])
#loc210 = loc(fused[#loc147, #loc148])
#loc211 = loc(fused[#loc145, #loc148])
#loc212 = loc(fused[#loc149, #loc150])
#loc213 = loc(fused[#loc154, #loc151])
