!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":89:10)
#loc55 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":89:14)
#loc56 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":89:20)
#loc57 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":89:32)
#loc123 = loc(fused[#loc54, #loc55])
#loc124 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc105)
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc110)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc110)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc13)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc113)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc114)
          %6 = cir.const #cir.int<5> : !s32i loc(#loc23)
          cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc114)
          %7 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          %12 = cir.call @sprintf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc28)
        } loc(#loc112)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc116)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc117)
          %6 = cir.const #cir.int<5> : !s32i loc(#loc34)
          cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc117)
          %7 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc35)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          %12 = cir.call @sprintf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc35)
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc115)
      } loc(#loc111)
    } loc(#loc109)
    cir.return loc(#loc10)
  } loc(#loc108)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc118)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc124)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.return %17 : !s32i loc(#loc127)
  } loc(#loc122)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc130)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc130)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc76)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc76)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc133)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc134)
          %6 = cir.const #cir.int<5> : !s32i loc(#loc86)
          cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %7 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc87)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc89)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc89)
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %12 = cir.call @sprintf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc87)
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        } loc(#loc132)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc136)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc137)
          %6 = cir.const #cir.int<5> : !s32i loc(#loc98)
          cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          %7 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc99)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc101)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc101)
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
          %12 = cir.call @sprintf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc104)
        } loc(#loc135)
      } loc(#loc131)
    } loc(#loc129)
    cir.return loc(#loc73)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":365:1)
#loc4 = loc("/usr/include/stdio.h":366:45)
#loc5 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":30:27)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":40:27)
#loc9 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":22:1)
#loc10 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":44:1)
#loc11 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":24:5)
#loc12 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":43:5)
#loc13 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":24:8)
#loc14 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":24:33)
#loc15 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":25:5)
#loc16 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":33:5)
#loc17 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":35:5)
#loc18 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":26:9)
#loc19 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":32:9)
#loc20 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":27:13)
#loc21 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":27:32)
#loc22 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":28:13)
#loc23 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":28:27)
#loc24 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":30:13)
#loc25 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":30:21)
#loc26 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":30:33)
#loc27 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":31:23)
#loc28 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":31:13)
#loc29 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":36:9)
#loc30 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":42:9)
#loc31 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":37:13)
#loc32 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":37:32)
#loc33 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":38:13)
#loc34 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":38:27)
#loc35 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":40:13)
#loc36 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":40:21)
#loc37 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":40:33)
#loc38 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":41:23)
#loc39 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":41:13)
#loc40 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":75:1)
#loc41 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":78:1)
#loc42 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":77:5)
#loc43 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":77:11)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":94:15)
#loc49 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":96:15)
#loc50 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":99:15)
#loc51 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":101:15)
#loc52 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":89:1)
#loc53 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":104:1)
#loc58 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":90:1)
#loc59 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":92:27)
#loc60 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":92:22)
#loc61 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":92:5)
#loc62 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":94:5)
#loc63 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":95:5)
#loc64 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":95:90)
#loc65 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":96:5)
#loc66 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":99:5)
#loc67 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":100:5)
#loc68 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":100:89)
#loc69 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":101:5)
#loc70 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":103:12)
#loc71 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":103:5)
#loc72 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":51:1)
#loc73 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":73:1)
#loc74 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":53:5)
#loc75 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":72:5)
#loc76 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":53:8)
#loc77 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":53:33)
#loc78 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":54:5)
#loc79 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":62:5)
#loc80 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":64:5)
#loc81 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":55:9)
#loc82 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":61:9)
#loc83 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":56:13)
#loc84 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":56:32)
#loc85 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":57:13)
#loc86 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":57:27)
#loc87 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":59:13)
#loc88 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":59:21)
#loc89 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":59:27)
#loc90 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":59:33)
#loc91 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":60:23)
#loc92 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":60:13)
#loc93 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":65:9)
#loc94 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":71:9)
#loc95 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":66:13)
#loc96 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":66:32)
#loc97 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":67:13)
#loc98 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":67:27)
#loc99 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":69:13)
#loc100 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":69:21)
#loc101 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":69:27)
#loc102 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":69:33)
#loc103 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":70:23)
#loc104 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_12.c":70:13)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc6, #loc7])
#loc108 = loc(fused[#loc9, #loc10])
#loc109 = loc(fused[#loc11, #loc12])
#loc110 = loc(fused[#loc13, #loc14])
#loc111 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc112 = loc(fused[#loc18, #loc19])
#loc113 = loc(fused[#loc20, #loc21])
#loc114 = loc(fused[#loc22, #loc23])
#loc115 = loc(fused[#loc29, #loc30])
#loc116 = loc(fused[#loc31, #loc32])
#loc117 = loc(fused[#loc33, #loc34])
#loc118 = loc(fused[#loc40, #loc41])
#loc119 = loc(fused[#loc42, #loc43])
#loc120 = loc(fused[#loc44, #loc45])
#loc121 = loc(fused[#loc46, #loc47])
#loc122 = loc(fused[#loc52, #loc53])
#loc125 = loc(fused[#loc63, #loc64])
#loc126 = loc(fused[#loc67, #loc68])
#loc127 = loc(fused[#loc71, #loc70])
#loc128 = loc(fused[#loc72, #loc73])
#loc129 = loc(fused[#loc74, #loc75])
#loc130 = loc(fused[#loc76, #loc77])
#loc131 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc132 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc83, #loc84])
#loc134 = loc(fused[#loc85, #loc86])
#loc135 = loc(fused[#loc93, #loc94])
#loc136 = loc(fused[#loc95, #loc96])
#loc137 = loc(fused[#loc97, #loc98])
