!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc62 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":97:10)
#loc63 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":97:14)
#loc64 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":97:20)
#loc65 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":97:32)
#loc166 = loc(fused[#loc62, #loc63])
#loc167 = loc(fused[#loc64, #loc65])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc143)
  cir.func private @printLongLongLine(!s64i) loc(#loc144)
  cir.func private @CWE401_Memory_Leak__int64_t_malloc_66b_badSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc145)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_malloc_66_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.array<!cir.ptr<!s64i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc148)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc150)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc151)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc152)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc153)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc26)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s64i>, !cir.bool loc(#loc155)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc30)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc156)
    } loc(#loc154)
    %10 = cir.const #cir.int<5> : !s64i loc(#loc31)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc34)
    cir.store %10, %13 : !s64i, !cir.ptr<!s64i> loc(#loc157)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc37)
    %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc35)
    cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc38)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc39)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc41)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!cir.ptr<!s64i>>, %19 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc41)
    cir.store %18, %21 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc158)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc42)
    cir.call @CWE401_Memory_Leak__int64_t_malloc_66b_badSink(%22) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc43)
    cir.return loc(#loc10)
  } loc(#loc146)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_malloc_66_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc159)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc162)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc163)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc69)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE401_Memory_Leak__int64_t_malloc_66_good : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE401_Memory_Leak__int64_t_malloc_66_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE401_Memory_Leak__int64_t_malloc_66_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call @CWE401_Memory_Leak__int64_t_malloc_66_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %17 : !s32i loc(#loc170)
  } loc(#loc165)
  cir.func private @CWE401_Memory_Leak__int64_t_malloc_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc171)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!cir.ptr<!s64i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc174)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc175)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc90)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc90)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc90)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc90)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc90)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc90)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc176)
    %10 = cir.const #cir.int<5> : !s64i loc(#loc92)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc93)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc95)
    cir.store %10, %13 : !s64i, !cir.ptr<!s64i> loc(#loc177)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc98)
    %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc96)
    cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc99)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc100)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc101)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc102)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!cir.ptr<!s64i>>, %19 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc102)
    cir.store %18, %21 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc178)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc103)
    cir.call @CWE401_Memory_Leak__int64_t_malloc_66b_goodG2BSink(%22) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc104)
    cir.return loc(#loc83)
  } loc(#loc172)
  cir.func private @CWE401_Memory_Leak__int64_t_malloc_66b_goodB2GSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc179)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.alloca !cir.array<!cir.ptr<!s64i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc182)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc113)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc183)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc115)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc116)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc184)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc185)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc186)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc187)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc123)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc124)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s64i>, !cir.bool loc(#loc189)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc126)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc128)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc126)
      } loc(#loc190)
    } loc(#loc188)
    %10 = cir.const #cir.int<5> : !s64i loc(#loc129)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc130)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc132)
    cir.store %10, %13 : !s64i, !cir.ptr<!s64i> loc(#loc191)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc133)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc135)
    %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc133)
    cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc136)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc137)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc138)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc139)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!cir.ptr<!s64i>>, %19 : !s32i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc139)
    cir.store %18, %21 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc192)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s64i> x 5>>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc140)
    cir.call @CWE401_Memory_Leak__int64_t_malloc_66b_goodB2GSink(%22) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc141)
    cir.return loc(#loc108)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_66a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":25:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":25:74)
#loc9 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":27:1)
#loc10 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":41:1)
#loc11 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":29:5)
#loc12 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":29:15)
#loc13 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":30:5)
#loc14 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":30:26)
#loc15 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":31:12)
#loc16 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":31:5)
#loc17 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":33:23)
#loc18 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":33:30)
#loc19 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":33:34)
#loc20 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":33:48)
#loc21 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":33:49)
#loc22 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":33:5)
#loc23 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:5)
#loc24 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:33)
#loc25 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:9)
#loc26 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:17)
#loc27 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:23)
#loc28 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:24)
#loc29 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:30)
#loc30 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":34:29)
#loc31 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":36:15)
#loc32 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":36:5)
#loc33 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":36:10)
#loc34 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":36:11)
#loc35 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":37:23)
#loc36 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":37:28)
#loc37 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":37:29)
#loc38 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":37:5)
#loc39 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":39:20)
#loc40 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":39:15)
#loc41 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":39:5)
#loc42 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":40:52)
#loc43 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":40:5)
#loc44 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":82:1)
#loc45 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":86:1)
#loc46 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":84:5)
#loc47 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":84:13)
#loc48 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":85:5)
#loc49 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":85:13)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":102:15)
#loc57 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":104:15)
#loc58 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":107:15)
#loc59 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":109:15)
#loc60 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":97:1)
#loc61 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":112:1)
#loc66 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":98:1)
#loc67 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":100:27)
#loc68 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":100:22)
#loc69 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":100:5)
#loc70 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":102:5)
#loc71 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":103:5)
#loc72 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":103:48)
#loc73 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":104:5)
#loc74 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":107:5)
#loc75 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":108:5)
#loc76 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":108:47)
#loc77 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":109:5)
#loc78 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":111:12)
#loc79 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":111:5)
#loc80 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":48:1)
#loc81 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":48:78)
#loc82 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":50:1)
#loc83 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":62:1)
#loc84 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":52:5)
#loc85 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":52:15)
#loc86 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":53:5)
#loc87 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":53:26)
#loc88 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":54:12)
#loc89 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":54:5)
#loc90 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":56:23)
#loc91 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":56:5)
#loc92 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":58:15)
#loc93 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":58:5)
#loc94 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":58:10)
#loc95 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":58:11)
#loc96 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":59:23)
#loc97 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":59:28)
#loc98 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":59:29)
#loc99 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":59:5)
#loc100 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":60:20)
#loc101 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":60:15)
#loc102 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":60:5)
#loc103 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":61:56)
#loc104 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":61:5)
#loc105 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":65:1)
#loc106 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":65:78)
#loc107 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":67:1)
#loc108 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":80:1)
#loc109 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":69:5)
#loc110 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":69:15)
#loc111 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":70:5)
#loc112 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":70:26)
#loc113 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":71:12)
#loc114 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":71:5)
#loc115 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":73:23)
#loc116 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":73:30)
#loc117 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":73:34)
#loc118 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":73:48)
#loc119 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":73:49)
#loc120 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":73:5)
#loc121 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:5)
#loc122 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:33)
#loc123 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:9)
#loc124 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:17)
#loc125 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:23)
#loc126 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:24)
#loc127 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:30)
#loc128 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":74:29)
#loc129 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":76:15)
#loc130 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":76:5)
#loc131 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":76:10)
#loc132 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":76:11)
#loc133 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":77:23)
#loc134 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":77:28)
#loc135 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":77:29)
#loc136 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":77:5)
#loc137 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":78:20)
#loc138 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":78:15)
#loc139 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":78:5)
#loc140 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":79:56)
#loc141 = loc("CWE401_Memory_Leak__int64_t_malloc_66a.c":79:5)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc13, #loc14])
#loc149 = loc(fused[#loc16, #loc15])
#loc150 = loc(fused[#loc19, #loc20])
#loc151 = loc(fused[#loc18, #loc20])
#loc152 = loc(fused[#loc17, #loc21])
#loc153 = loc(fused[#loc22, #loc21])
#loc154 = loc(fused[#loc23, #loc24])
#loc155 = loc(fused[#loc25, #loc26])
#loc156 = loc(fused[#loc27, #loc24])
#loc157 = loc(fused[#loc32, #loc31])
#loc158 = loc(fused[#loc41, #loc39])
#loc159 = loc(fused[#loc44, #loc45])
#loc160 = loc(fused[#loc46, #loc47])
#loc161 = loc(fused[#loc48, #loc49])
#loc162 = loc(fused[#loc50, #loc51])
#loc163 = loc(fused[#loc52, #loc53])
#loc164 = loc(fused[#loc54, #loc55])
#loc165 = loc(fused[#loc60, #loc61])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc75, #loc76])
#loc170 = loc(fused[#loc79, #loc78])
#loc171 = loc(fused[#loc80, #loc81])
#loc172 = loc(fused[#loc82, #loc83])
#loc173 = loc(fused[#loc84, #loc85])
#loc174 = loc(fused[#loc86, #loc87])
#loc175 = loc(fused[#loc89, #loc88])
#loc176 = loc(fused[#loc91, #loc90])
#loc177 = loc(fused[#loc93, #loc92])
#loc178 = loc(fused[#loc102, #loc100])
#loc179 = loc(fused[#loc105, #loc106])
#loc180 = loc(fused[#loc107, #loc108])
#loc181 = loc(fused[#loc109, #loc110])
#loc182 = loc(fused[#loc111, #loc112])
#loc183 = loc(fused[#loc114, #loc113])
#loc184 = loc(fused[#loc117, #loc118])
#loc185 = loc(fused[#loc116, #loc118])
#loc186 = loc(fused[#loc115, #loc119])
#loc187 = loc(fused[#loc120, #loc119])
#loc188 = loc(fused[#loc121, #loc122])
#loc189 = loc(fused[#loc123, #loc124])
#loc190 = loc(fused[#loc125, #loc122])
#loc191 = loc(fused[#loc130, #loc129])
#loc192 = loc(fused[#loc139, #loc137])
