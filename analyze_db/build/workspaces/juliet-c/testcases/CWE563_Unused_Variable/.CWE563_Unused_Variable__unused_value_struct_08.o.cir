!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_struct_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc142)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_struct_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc144)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc146)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc12)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc148)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc15)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      } loc(#loc147)
    } loc(#loc145)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc151)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc20)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
      cir.if %3 {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc153)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc154)
        cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc27)
      } loc(#loc152)
    } loc(#loc150)
    cir.return loc(#loc4)
  } loc(#loc143)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_struct_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc159)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    cir.return loc(#loc29)
  } loc(#loc155)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc39)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc40)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.return %2 : !s32i loc(#loc161)
  } loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc164)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc166)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc51)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc51)
      cir.if %3 {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc168)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc56)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc171)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc60)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc60)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc65)
      } else {
        cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc66)
      } loc(#loc172)
    } loc(#loc170)
    cir.return loc(#loc46)
  } loc(#loc163)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.return %2 : !s32i loc(#loc174)
  } loc(#loc173)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc176)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc178)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc77)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc77)
      cir.if %3 {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc80)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc180)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc181)
      } loc(#loc179)
    } loc(#loc177)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc183)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc86)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc86)
      cir.if %3 {
        cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc89)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc72)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc186)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc188)
      %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc96)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc96)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc103)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc190)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc105)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc191)
        cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc107)
      } loc(#loc189)
    } loc(#loc187)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc193)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc110)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc110)
      cir.if %3 {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc195)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc196)
        cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc117)
      } loc(#loc194)
    } loc(#loc192)
    cir.return loc(#loc91)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc198)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc200)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc124)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc124)
      cir.if %3 {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc127)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc202)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc129)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc203)
        cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc131)
      } loc(#loc201)
    } loc(#loc199)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc205)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc134)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc134)
      cir.if %3 {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
        cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc207)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc139)
        %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
        cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc208)
        cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc141)
      } loc(#loc206)
    } loc(#loc204)
    cir.return loc(#loc119)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_struct_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":37:1)
#loc4 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":53:1)
#loc5 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":39:5)
#loc6 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":39:19)
#loc7 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":40:5)
#loc8 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":45:5)
#loc9 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":40:8)
#loc10 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":40:26)
#loc11 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":41:5)
#loc12 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":43:23)
#loc13 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc14 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":43:9)
#loc15 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":44:23)
#loc16 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc17 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":44:9)
#loc18 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":46:5)
#loc19 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":52:5)
#loc20 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":46:8)
#loc21 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":46:26)
#loc22 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":47:5)
#loc23 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":49:23)
#loc24 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":49:9)
#loc25 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":50:23)
#loc26 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":50:9)
#loc27 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":51:9)
#loc28 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":143:1)
#loc29 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":149:1)
#loc30 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":145:5)
#loc31 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":145:14)
#loc32 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":146:5)
#loc33 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":146:14)
#loc34 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":147:5)
#loc35 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":147:14)
#loc36 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":148:5)
#loc37 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":148:14)
#loc38 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":25:1)
#loc39 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":28:1)
#loc40 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":27:12)
#loc41 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":27:5)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":72:19)
#loc45 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":60:1)
#loc46 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":79:1)
#loc47 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":62:5)
#loc48 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":62:19)
#loc49 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":63:5)
#loc50 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":68:5)
#loc51 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":63:8)
#loc52 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":63:26)
#loc53 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":64:5)
#loc54 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":66:23)
#loc55 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":66:9)
#loc56 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":67:23)
#loc57 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":67:9)
#loc58 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":69:5)
#loc59 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":78:5)
#loc60 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":69:8)
#loc61 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":69:27)
#loc62 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":70:5)
#loc63 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":73:5)
#loc64 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":75:5)
#loc65 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":72:9)
#loc66 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":77:9)
#loc67 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":30:1)
#loc68 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":33:1)
#loc69 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":32:12)
#loc70 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":32:5)
#loc71 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":82:1)
#loc72 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":96:1)
#loc73 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":84:5)
#loc74 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":84:19)
#loc75 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":85:5)
#loc76 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":90:5)
#loc77 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":85:8)
#loc78 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":85:26)
#loc79 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":86:5)
#loc80 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":88:23)
#loc81 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":88:9)
#loc82 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":89:23)
#loc83 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":89:9)
#loc84 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":91:5)
#loc85 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":95:5)
#loc86 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":91:8)
#loc87 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":91:26)
#loc88 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":92:5)
#loc89 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":94:9)
#loc90 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":99:1)
#loc91 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":121:1)
#loc92 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":101:5)
#loc93 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":101:19)
#loc94 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":102:5)
#loc95 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":113:5)
#loc96 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":102:8)
#loc97 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":102:27)
#loc98 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":103:5)
#loc99 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":106:5)
#loc100 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":108:5)
#loc101 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":105:19)
#loc102 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":105:9)
#loc103 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":110:23)
#loc104 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":110:9)
#loc105 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":111:23)
#loc106 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":111:9)
#loc107 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":112:9)
#loc108 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":114:5)
#loc109 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":120:5)
#loc110 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":114:8)
#loc111 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":114:26)
#loc112 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":115:5)
#loc113 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":117:23)
#loc114 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":117:9)
#loc115 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":118:23)
#loc116 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":118:9)
#loc117 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":119:9)
#loc118 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":124:1)
#loc119 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":141:1)
#loc120 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":126:5)
#loc121 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":126:19)
#loc122 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":127:5)
#loc123 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":133:5)
#loc124 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":127:8)
#loc125 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":127:26)
#loc126 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":128:5)
#loc127 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":130:23)
#loc128 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":130:9)
#loc129 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":131:23)
#loc130 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":131:9)
#loc131 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":132:9)
#loc132 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":134:5)
#loc133 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":140:5)
#loc134 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":134:8)
#loc135 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":134:26)
#loc136 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":135:5)
#loc137 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":137:23)
#loc138 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":137:9)
#loc139 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":138:23)
#loc140 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":138:9)
#loc141 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":139:9)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc11, #loc8])
#loc148 = loc(fused[#loc14, #loc12])
#loc149 = loc(fused[#loc17, #loc15])
#loc150 = loc(fused[#loc18, #loc19])
#loc151 = loc(fused[#loc20, #loc21])
#loc152 = loc(fused[#loc22, #loc19])
#loc153 = loc(fused[#loc24, #loc23])
#loc154 = loc(fused[#loc26, #loc25])
#loc155 = loc(fused[#loc28, #loc29])
#loc156 = loc(fused[#loc30, #loc31])
#loc157 = loc(fused[#loc32, #loc33])
#loc158 = loc(fused[#loc34, #loc35])
#loc159 = loc(fused[#loc36, #loc37])
#loc160 = loc(fused[#loc38, #loc39])
#loc161 = loc(fused[#loc41, #loc40])
#loc162 = loc(fused[#loc42, #loc43])
#loc163 = loc(fused[#loc45, #loc46])
#loc164 = loc(fused[#loc47, #loc48])
#loc165 = loc(fused[#loc49, #loc50])
#loc166 = loc(fused[#loc51, #loc52])
#loc167 = loc(fused[#loc53, #loc50])
#loc168 = loc(fused[#loc55, #loc54])
#loc169 = loc(fused[#loc57, #loc56])
#loc170 = loc(fused[#loc58, #loc59])
#loc171 = loc(fused[#loc60, #loc61])
#loc172 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc173 = loc(fused[#loc67, #loc68])
#loc174 = loc(fused[#loc70, #loc69])
#loc175 = loc(fused[#loc71, #loc72])
#loc176 = loc(fused[#loc73, #loc74])
#loc177 = loc(fused[#loc75, #loc76])
#loc178 = loc(fused[#loc77, #loc78])
#loc179 = loc(fused[#loc79, #loc76])
#loc180 = loc(fused[#loc81, #loc80])
#loc181 = loc(fused[#loc83, #loc82])
#loc182 = loc(fused[#loc84, #loc85])
#loc183 = loc(fused[#loc86, #loc87])
#loc184 = loc(fused[#loc88, #loc85])
#loc185 = loc(fused[#loc90, #loc91])
#loc186 = loc(fused[#loc92, #loc93])
#loc187 = loc(fused[#loc94, #loc95])
#loc188 = loc(fused[#loc96, #loc97])
#loc189 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc190 = loc(fused[#loc104, #loc103])
#loc191 = loc(fused[#loc106, #loc105])
#loc192 = loc(fused[#loc108, #loc109])
#loc193 = loc(fused[#loc110, #loc111])
#loc194 = loc(fused[#loc112, #loc109])
#loc195 = loc(fused[#loc114, #loc113])
#loc196 = loc(fused[#loc116, #loc115])
#loc197 = loc(fused[#loc118, #loc119])
#loc198 = loc(fused[#loc120, #loc121])
#loc199 = loc(fused[#loc122, #loc123])
#loc200 = loc(fused[#loc124, #loc125])
#loc201 = loc(fused[#loc126, #loc123])
#loc202 = loc(fused[#loc128, #loc127])
#loc203 = loc(fused[#loc130, #loc129])
#loc204 = loc(fused[#loc132, #loc133])
#loc205 = loc(fused[#loc134, #loc135])
#loc206 = loc(fused[#loc136, #loc133])
#loc207 = loc(fused[#loc138, #loc137])
#loc208 = loc(fused[#loc140, #loc139])
