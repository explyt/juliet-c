!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc170)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc171)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc172)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc175)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc177)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc180)
        cir.condition(%7) loc(#loc22)
      } body {
        cir.scope {
          %5 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc24)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc182)
          %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
          cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc184)
          cir.scope {
            %24 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc186)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc35)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc36)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc37)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
            } loc(#loc187)
          } loc(#loc185)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc188)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc45)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
          %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
          cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc189)
          %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc49)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
          cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
        } loc(#loc181)
        cir.yield loc(#loc17)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc53)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
        cir.yield loc(#loc178)
      } loc(#loc178)
    } loc(#loc178)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc56)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc192)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc193)
        cir.condition(%7) loc(#loc60)
      } body {
        cir.yield loc(#loc55)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc62)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc194)
        cir.yield loc(#loc191)
      } loc(#loc191)
    } loc(#loc191)
    cir.return loc(#loc8)
  } loc(#loc173)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc197)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc195)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc198)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc201)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc203)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc82)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc206)
        cir.condition(%7) loc(#loc86)
      } body {
        cir.scope {
          %5 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc88)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc89)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc89)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc208)
          %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc209)
          cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc210)
          cir.scope {
            %24 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc212)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc99)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc100)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc101)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
            } loc(#loc213)
          } loc(#loc211)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc214)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc108)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
          %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
          cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc215)
          %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
          cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc113)
        } loc(#loc207)
        cir.yield loc(#loc81)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc115)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
        cir.yield loc(#loc204)
      } loc(#loc204)
    } loc(#loc204)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc118)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc218)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc219)
        cir.condition(%7) loc(#loc122)
      } body {
        cir.scope {
          %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc124)
          %6 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc125)
          cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
        } loc(#loc220)
        cir.yield loc(#loc117)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc127)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc221)
        cir.yield loc(#loc217)
      } loc(#loc217)
    } loc(#loc217)
    cir.return loc(#loc72)
  } loc(#loc199)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc224)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc226)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc139)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc229)
        cir.condition(%7) loc(#loc143)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<100> : !s32i loc(#loc145)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc145)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc145)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc145)
          %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc145)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc145)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
          cir.store %11, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc231)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc147)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc149)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc232)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc151)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
          cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc233)
          %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc156)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
          cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc158)
        } loc(#loc230)
        cir.yield loc(#loc138)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc160)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
        cir.yield loc(#loc227)
      } loc(#loc227)
    } loc(#loc227)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc163)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc236)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc165)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc166)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc237)
        cir.condition(%7) loc(#loc167)
      } body {
        cir.yield loc(#loc162)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc169)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc238)
        cir.yield loc(#loc235)
      } loc(#loc235)
    } loc(#loc235)
    cir.return loc(#loc129)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":44:1)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":26:9)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":26:11)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":27:21)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":28:12)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:5)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":38:5)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:13)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:9)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:16)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:20)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:18)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":30:5)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":32:33)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":32:40)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":32:45)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":32:65)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":32:66)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":32:9)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:9)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:37)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:13)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:21)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:27)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:28)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:34)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":33:33)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":35:26)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":35:9)
#loc40 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":35:14)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":35:15)
#loc42 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":36:26)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":36:9)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":36:14)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":36:15)
#loc47 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":37:26)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":37:31)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":37:32)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":37:9)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:24)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":29:23)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:5)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":43:5)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:13)
#loc57 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:9)
#loc58 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:16)
#loc59 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:20)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:18)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:24)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":39:23)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":95:1)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":99:1)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":97:5)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":97:13)
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":98:5)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":98:13)
#loc69 = loc("/usr/include/stdlib.h":687:1)
#loc70 = loc("/usr/include/stdlib.h":687:32)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":51:1)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":71:1)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":53:5)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":53:9)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":53:11)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":54:5)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":54:21)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":55:12)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":55:5)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:5)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":65:5)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:13)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:9)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:16)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:20)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:18)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":57:5)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":59:33)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":59:40)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":59:45)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":59:65)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":59:66)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":59:9)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:9)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:37)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:13)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:21)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:27)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:28)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:34)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":60:33)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":62:26)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":62:9)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":62:14)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":62:15)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":63:26)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":63:9)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":63:14)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":63:15)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":64:26)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":64:31)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":64:32)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":64:9)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:24)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":56:23)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:5)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":70:5)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:13)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:9)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:16)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:20)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:18)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":67:5)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":69:9)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":69:14)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:24)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":66:23)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":74:1)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":93:1)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":76:5)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":76:9)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":76:11)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":77:5)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":77:21)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":78:12)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":78:5)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:5)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":87:5)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:13)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:9)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:16)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:20)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:18)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":80:5)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":82:33)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":82:9)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":84:26)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":84:9)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":84:14)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":84:15)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":85:26)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":85:9)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":85:14)
#loc154 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":85:15)
#loc155 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":86:26)
#loc156 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":86:31)
#loc157 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":86:32)
#loc158 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":86:9)
#loc159 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:24)
#loc160 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":79:23)
#loc161 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:5)
#loc162 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":92:5)
#loc163 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:13)
#loc164 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:9)
#loc165 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:16)
#loc166 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:20)
#loc167 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:18)
#loc168 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:24)
#loc169 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_17.c":88:23)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc9, #loc10])
#loc175 = loc(fused[#loc9, #loc11])
#loc176 = loc(fused[#loc12, #loc13])
#loc177 = loc(fused[#loc15, #loc14])
#loc178 = loc(fused[#loc16, #loc17])
#loc179 = loc(fused[#loc19, #loc18])
#loc180 = loc(fused[#loc20, #loc21])
#loc181 = loc(fused[#loc23, #loc17])
#loc182 = loc(fused[#loc26, #loc27])
#loc183 = loc(fused[#loc24, #loc28])
#loc184 = loc(fused[#loc29, #loc28])
#loc185 = loc(fused[#loc30, #loc31])
#loc186 = loc(fused[#loc32, #loc33])
#loc187 = loc(fused[#loc34, #loc31])
#loc188 = loc(fused[#loc39, #loc38])
#loc189 = loc(fused[#loc44, #loc43])
#loc190 = loc(fused[#loc53, #loc52])
#loc191 = loc(fused[#loc54, #loc55])
#loc192 = loc(fused[#loc57, #loc56])
#loc193 = loc(fused[#loc58, #loc59])
#loc194 = loc(fused[#loc62, #loc61])
#loc195 = loc(fused[#loc63, #loc64])
#loc196 = loc(fused[#loc65, #loc66])
#loc197 = loc(fused[#loc67, #loc68])
#loc198 = loc(fused[#loc69, #loc70])
#loc199 = loc(fused[#loc71, #loc72])
#loc200 = loc(fused[#loc73, #loc74])
#loc201 = loc(fused[#loc73, #loc75])
#loc202 = loc(fused[#loc76, #loc77])
#loc203 = loc(fused[#loc79, #loc78])
#loc204 = loc(fused[#loc80, #loc81])
#loc205 = loc(fused[#loc83, #loc82])
#loc206 = loc(fused[#loc84, #loc85])
#loc207 = loc(fused[#loc87, #loc81])
#loc208 = loc(fused[#loc90, #loc91])
#loc209 = loc(fused[#loc88, #loc92])
#loc210 = loc(fused[#loc93, #loc92])
#loc211 = loc(fused[#loc94, #loc95])
#loc212 = loc(fused[#loc96, #loc97])
#loc213 = loc(fused[#loc98, #loc95])
#loc214 = loc(fused[#loc103, #loc102])
#loc215 = loc(fused[#loc107, #loc106])
#loc216 = loc(fused[#loc115, #loc114])
#loc217 = loc(fused[#loc116, #loc117])
#loc218 = loc(fused[#loc119, #loc118])
#loc219 = loc(fused[#loc120, #loc121])
#loc220 = loc(fused[#loc123, #loc117])
#loc221 = loc(fused[#loc127, #loc126])
#loc222 = loc(fused[#loc128, #loc129])
#loc223 = loc(fused[#loc130, #loc131])
#loc224 = loc(fused[#loc130, #loc132])
#loc225 = loc(fused[#loc133, #loc134])
#loc226 = loc(fused[#loc136, #loc135])
#loc227 = loc(fused[#loc137, #loc138])
#loc228 = loc(fused[#loc140, #loc139])
#loc229 = loc(fused[#loc141, #loc142])
#loc230 = loc(fused[#loc144, #loc138])
#loc231 = loc(fused[#loc146, #loc145])
#loc232 = loc(fused[#loc148, #loc147])
#loc233 = loc(fused[#loc152, #loc151])
#loc234 = loc(fused[#loc160, #loc159])
#loc235 = loc(fused[#loc161, #loc162])
#loc236 = loc(fused[#loc164, #loc163])
#loc237 = loc(fused[#loc165, #loc166])
#loc238 = loc(fused[#loc169, #loc168])
