!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_malloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc81)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc82)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__struct_malloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc84)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc85)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc86)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc87)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc89)
    cir.scope {
      cir.while {
        %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc21)
        cir.condition(%10) loc(#loc21)
      } do {
        cir.scope {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc23)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc25)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc92)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc28)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc30)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc93)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
          cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc36)
          %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc37)
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc38)
          cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
          cir.break loc(#loc39)
        } loc(#loc91)
        cir.yield loc(#loc20)
      } loc(#loc90)
    } loc(#loc90)
    cir.return loc(#loc8)
  } loc(#loc83)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__struct_malloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc95)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc94)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc98)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc50)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc51)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc99)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc100)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc102)
    cir.scope {
      cir.while {
        %9 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc58)
        cir.condition(%10) loc(#loc58)
      } do {
        cir.scope {
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
            %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
            %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc106)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
              %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
              %15 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
              %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc108)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc69)
              %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc71)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
              %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc109)
              %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
              cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc76)
              %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc77)
              %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc78)
              cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
            } loc(#loc107)
          } loc(#loc105)
          cir.break loc(#loc79)
        } loc(#loc104)
        cir.yield loc(#loc57)
      } loc(#loc103)
    } loc(#loc103)
    cir.return loc(#loc45)
  } loc(#loc96)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_malloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":23:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":38:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":25:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":25:21)
#loc11 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":26:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":26:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":28:29)
#loc14 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":28:36)
#loc15 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":28:38)
#loc16 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":28:58)
#loc17 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":28:59)
#loc18 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":28:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":29:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":37:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":29:11)
#loc22 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":30:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":32:26)
#loc24 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":32:9)
#loc25 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":32:14)
#loc26 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":32:15)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":33:26)
#loc29 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":33:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":33:14)
#loc31 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":33:15)
#loc32 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":34:26)
#loc34 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":34:31)
#loc35 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":34:32)
#loc36 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":34:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":35:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":35:14)
#loc39 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":36:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":65:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":68:1)
#loc42 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":67:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":67:13)
#loc44 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":45:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":63:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":47:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":47:21)
#loc48 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":48:12)
#loc49 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":48:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":50:29)
#loc51 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":50:36)
#loc52 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":50:38)
#loc53 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":50:58)
#loc54 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":50:59)
#loc55 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":50:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":51:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":62:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":51:11)
#loc59 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":52:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":54:9)
#loc61 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":60:9)
#loc62 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":54:13)
#loc63 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":54:21)
#loc64 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":55:9)
#loc65 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":56:30)
#loc66 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":56:13)
#loc67 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":56:18)
#loc68 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":56:19)
#loc69 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":57:30)
#loc70 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":57:13)
#loc71 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":57:18)
#loc72 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":57:19)
#loc73 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":58:30)
#loc74 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":58:35)
#loc75 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":58:36)
#loc76 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":58:13)
#loc77 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":59:13)
#loc78 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":59:18)
#loc79 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_16.c":61:9)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc12, #loc11])
#loc86 = loc(fused[#loc15, #loc16])
#loc87 = loc(fused[#loc14, #loc16])
#loc88 = loc(fused[#loc13, #loc17])
#loc89 = loc(fused[#loc18, #loc17])
#loc90 = loc(fused[#loc19, #loc20])
#loc91 = loc(fused[#loc22, #loc20])
#loc92 = loc(fused[#loc24, #loc23])
#loc93 = loc(fused[#loc29, #loc28])
#loc94 = loc(fused[#loc40, #loc41])
#loc95 = loc(fused[#loc42, #loc43])
#loc96 = loc(fused[#loc44, #loc45])
#loc97 = loc(fused[#loc46, #loc47])
#loc98 = loc(fused[#loc49, #loc48])
#loc99 = loc(fused[#loc52, #loc53])
#loc100 = loc(fused[#loc51, #loc53])
#loc101 = loc(fused[#loc50, #loc54])
#loc102 = loc(fused[#loc55, #loc54])
#loc103 = loc(fused[#loc56, #loc57])
#loc104 = loc(fused[#loc59, #loc57])
#loc105 = loc(fused[#loc60, #loc61])
#loc106 = loc(fused[#loc62, #loc63])
#loc107 = loc(fused[#loc64, #loc61])
#loc108 = loc(fused[#loc66, #loc65])
#loc109 = loc(fused[#loc70, #loc69])
