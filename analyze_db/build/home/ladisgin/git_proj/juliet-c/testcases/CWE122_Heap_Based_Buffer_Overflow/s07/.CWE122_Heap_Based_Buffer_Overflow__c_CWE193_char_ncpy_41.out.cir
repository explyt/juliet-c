!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":28:71)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":28:78)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":54:75)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":54:82)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":92:10)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":92:14)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":92:20)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":92:32)
#loc136 = loc(fused[#loc15, #loc16])
#loc152 = loc(fused[#loc58, #loc59])
#loc160 = loc(fused[#loc87, #loc88])
#loc161 = loc(fused[#loc89, #loc90])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc129)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc130)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
    cir.copy %2 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
    %3 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc20)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc22)
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc23)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc24)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc23)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc138)
    %12 = cir.call @strncpy(%4, %5, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc20)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc28)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb2 loc(#loc19)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc14)
  } loc(#loc135)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc140)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc40)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc41)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc41)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc145)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc40)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc53)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
    cir.br ^bb3 loc(#loc47)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc47)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_badSink(%16) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.return loc(#loc35)
  } loc(#loc141)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc58, #loc59])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc129)
    cir.copy %2 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc129)
    %3 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc63)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc65)
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc66)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc68)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc154)
    %12 = cir.call @strncpy(%4, %5, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc71)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
    cir.br ^bb2 loc(#loc62)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc57)
  } loc(#loc151)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc155)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc157)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    cir.return %17 : !s32i loc(#loc164)
  } loc(#loc159)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc109)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc111)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc112)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc112)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc112)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc168)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc169)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc124)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc126)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc124)
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41_goodG2BSink(%18) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.return loc(#loc106)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":57:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":57:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":31:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":31:29)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":28:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":38:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":29:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":30:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":37:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":34:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":34:17)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":34:23)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":34:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":34:38)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":34:48)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":35:19)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":35:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":36:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":36:14)
#loc30 = loc("/usr/include/stdlib.h":672:1)
#loc31 = loc("/usr/include/stdlib.h":672:45)
#loc32 = loc("/usr/include/stdlib.h":756:1)
#loc33 = loc("/usr/include/stdlib.h":756:70)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":40:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":48:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":42:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":42:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":43:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":43:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":45:20)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":45:27)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":45:30)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":45:41)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":45:42)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":45:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:23)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:24)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:30)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":46:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":47:70)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":47:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":54:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":64:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":55:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":56:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":63:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":60:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":60:17)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":60:23)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":60:31)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":60:38)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":60:48)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":61:19)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":61:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":62:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":62:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":77:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":80:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":79:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":79:13)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":97:15)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":99:15)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":102:15)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":104:15)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":92:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":107:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":93:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":95:27)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":95:22)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":95:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":97:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":98:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":98:67)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":99:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":102:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":103:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":103:66)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":104:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":106:12)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":106:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":67:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":75:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":69:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":69:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":70:12)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":70:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:20)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:28)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:31)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:34)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:45)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:27)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:46)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":72:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:33)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:17)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:23)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:24)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:30)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":73:29)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":74:74)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_41.c":74:5)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc13, #loc14])
#loc137 = loc(fused[#loc18, #loc19])
#loc138 = loc(fused[#loc23, #loc25])
#loc139 = loc(fused[#loc30, #loc31])
#loc140 = loc(fused[#loc32, #loc33])
#loc141 = loc(fused[#loc34, #loc35])
#loc142 = loc(fused[#loc36, #loc37])
#loc143 = loc(fused[#loc39, #loc38])
#loc144 = loc(fused[#loc42, #loc43])
#loc145 = loc(fused[#loc41, #loc43])
#loc146 = loc(fused[#loc40, #loc44])
#loc147 = loc(fused[#loc45, #loc44])
#loc148 = loc(fused[#loc46, #loc47])
#loc149 = loc(fused[#loc48, #loc49])
#loc150 = loc(fused[#loc50, #loc47])
#loc151 = loc(fused[#loc56, #loc57])
#loc153 = loc(fused[#loc61, #loc62])
#loc154 = loc(fused[#loc66, #loc68])
#loc155 = loc(fused[#loc73, #loc74])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc77, #loc78])
#loc158 = loc(fused[#loc79, #loc80])
#loc159 = loc(fused[#loc85, #loc86])
#loc162 = loc(fused[#loc96, #loc97])
#loc163 = loc(fused[#loc100, #loc101])
#loc164 = loc(fused[#loc104, #loc103])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc110, #loc109])
#loc168 = loc(fused[#loc114, #loc115])
#loc169 = loc(fused[#loc116, #loc115])
#loc170 = loc(fused[#loc111, #loc117])
#loc171 = loc(fused[#loc118, #loc117])
#loc172 = loc(fused[#loc119, #loc120])
#loc173 = loc(fused[#loc121, #loc122])
#loc174 = loc(fused[#loc123, #loc120])
