!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_for_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc164)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_for_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc20)
        cir.condition(%4) loc(#loc20)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc171)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc171)
          cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc171)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc28)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc28)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc28)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc28)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc28)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc28)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc28)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc28)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc173)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc32)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc40)
            } loc(#loc174)
          } loc(#loc172)
        } loc(#loc170)
        cir.break loc(#loc41)
      } loc(#loc169)
    } loc(#loc169)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc44)
        cir.condition(%4) loc(#loc44)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc178)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc48)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc48)
          cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc178)
          cir.scope {
            %6 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc51)
            cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc180)
            cir.for : cond {
              %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc53)
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc54)
              %11 = cir.cmp(lt, %8, %10) : !u64i, !s32i loc(#loc181)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc55)
              cir.condition(%12) loc(#loc55)
            } body {
              cir.scope {
                %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc10)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc10)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc57)
              } loc(#loc182)
              cir.yield loc(#loc50)
            } step {
              %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc58)
              %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc59)
              cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc183)
              cir.yield loc(#loc179)
            } loc(#loc179)
          } loc(#loc179)
        } loc(#loc177)
        cir.break loc(#loc60)
      } loc(#loc176)
    } loc(#loc176)
    cir.return loc(#loc12)
  } loc(#loc166)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_for_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc184)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc72)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc76)
        cir.condition(%4) loc(#loc76)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc192)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc192)
          cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc192)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc84)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc84)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc84)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc84)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc84)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc84)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc84)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc86)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc194)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc88)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc92)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc93)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc96)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc97)
            } loc(#loc195)
          } loc(#loc193)
        } loc(#loc191)
        cir.break loc(#loc98)
      } loc(#loc190)
    } loc(#loc190)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc101)
        cir.condition(%4) loc(#loc101)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc199)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc105)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc105)
          cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc199)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc109)
            %8 = cir.cmp(gt, %6, %7) : !s32i, !s32i loc(#loc201)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc110)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %12 = cir.const #cir.int<20> : !s32i loc(#loc113)
              %13 = cir.cmp(le, %11, %12) : !s32i, !s32i loc(#loc202)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc114)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc111)
                cir.yield %16 : !cir.bool loc(#loc111)
              }, false {
                %16 = cir.const #false loc(#loc111)
                cir.yield %16 : !cir.bool loc(#loc111)
              }) : (!cir.bool) -> !cir.bool loc(#loc111)
              cir.yield %15 : !cir.bool loc(#loc111)
            }, false {
              %11 = cir.const #false loc(#loc111)
              cir.yield %11 : !cir.bool loc(#loc111)
            }) : (!cir.bool) -> !cir.bool loc(#loc111)
            cir.if %10 {
              cir.scope {
                %11 = cir.const #cir.int<0> : !s32i loc(#loc118)
                %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc118)
                cir.store %12, %3 : !u64i, !cir.ptr<!u64i> loc(#loc205)
                cir.for : cond {
                  %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc120)
                  %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc121)
                  %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc206)
                  %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc122)
                  cir.condition(%17) loc(#loc122)
                } body {
                  cir.scope {
                    %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc124)
                    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc124)
                    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc125)
                  } loc(#loc207)
                  cir.yield loc(#loc117)
                } step {
                  %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc126)
                  %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc127)
                  cir.store %14, %3 : !u64i, !cir.ptr<!u64i> loc(#loc208)
                  cir.yield loc(#loc204)
                } loc(#loc204)
              } loc(#loc204)
            } loc(#loc203)
          } loc(#loc200)
        } loc(#loc198)
        cir.break loc(#loc128)
      } loc(#loc197)
    } loc(#loc197)
    cir.return loc(#loc68)
  } loc(#loc187)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc134)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc138)
        cir.condition(%4) loc(#loc138)
      } do {
        %3 = cir.const #cir.int<20> : !s32i loc(#loc139)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
        cir.break loc(#loc141)
      } loc(#loc212)
    } loc(#loc212)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc144)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc144)
        cir.condition(%4) loc(#loc144)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc216)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc148)
          cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc216)
          cir.scope {
            %6 = cir.const #cir.int<0> : !s32i loc(#loc151)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc151)
            cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc218)
            cir.for : cond {
              %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc153)
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc154)
              %11 = cir.cmp(lt, %8, %10) : !u64i, !s32i loc(#loc219)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc155)
              cir.condition(%12) loc(#loc155)
            } body {
              cir.scope {
                %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc157)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc157)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc158)
              } loc(#loc220)
              cir.yield loc(#loc150)
            } step {
              %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc159)
              %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc160)
              cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc221)
              cir.yield loc(#loc217)
            } loc(#loc217)
          } loc(#loc217)
        } loc(#loc215)
        cir.break loc(#loc161)
      } loc(#loc214)
    } loc(#loc214)
    cir.return loc(#loc130)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_for_loop_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":41:27)
#loc10 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":53:27)
#loc11 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":24:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":58:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":26:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":26:9)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":28:14)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":28:13)
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":28:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":29:5)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":45:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":29:11)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":31:9)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":43:9)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":32:13)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":32:49)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":34:13)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":42:13)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":34:23)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":34:36)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":34:53)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":34:17)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":34:63)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":34:60)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":35:13)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":38:13)
#loc35 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":40:13)
#loc36 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":37:30)
#loc37 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":37:25)
#loc38 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":37:17)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":37:41)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":41:17)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":44:9)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":46:5)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":57:5)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":46:11)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":48:9)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":55:9)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":49:13)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":49:24)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:13)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":54:13)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:22)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:18)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:25)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:37)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:27)
#loc56 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":52:13)
#loc57 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":53:17)
#loc58 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:45)
#loc59 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":51:44)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":56:9)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":130:1)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":134:1)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":132:5)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":132:13)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":133:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":133:13)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":65:1)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":102:1)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":67:5)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":67:9)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":69:14)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":69:13)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":69:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":70:5)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":86:5)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":70:11)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":72:9)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":84:9)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":73:13)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":73:49)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":75:13)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":83:13)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":75:23)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":75:36)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":75:53)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":75:17)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":75:63)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":75:60)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":76:13)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":79:13)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":81:13)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":78:30)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":78:25)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":78:17)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":78:41)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":82:27)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":82:17)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":85:9)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":87:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":101:5)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":87:11)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":89:9)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":99:9)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":90:13)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":90:24)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:13)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":98:13)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:17)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:25)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:23)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:27)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:30)
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:39)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":92:36)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":93:13)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:17)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":97:17)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:26)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:22)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:29)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:41)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:31)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":95:17)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":96:31)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":96:21)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:49)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":94:48)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":100:9)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":105:1)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":128:1)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":107:5)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":107:9)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":109:14)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":109:13)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":109:5)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":110:5)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":115:5)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":110:11)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":113:17)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":113:9)
#loc141 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":114:9)
#loc142 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":116:5)
#loc143 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":127:5)
#loc144 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":116:11)
#loc145 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":118:9)
#loc146 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":125:9)
#loc147 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":119:13)
#loc148 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":119:24)
#loc149 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:13)
#loc150 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":124:13)
#loc151 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:22)
#loc152 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:18)
#loc153 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:25)
#loc154 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:37)
#loc155 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:27)
#loc156 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":122:13)
#loc157 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":123:27)
#loc158 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":123:17)
#loc159 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:45)
#loc160 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":121:44)
#loc161 = loc("CWE400_Resource_Exhaustion__fgets_for_loop_16.c":126:9)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc11, #loc12])
#loc167 = loc(fused[#loc13, #loc14])
#loc168 = loc(fused[#loc17, #loc15])
#loc169 = loc(fused[#loc18, #loc19])
#loc170 = loc(fused[#loc21, #loc22])
#loc171 = loc(fused[#loc23, #loc24])
#loc172 = loc(fused[#loc25, #loc26])
#loc173 = loc(fused[#loc30, #loc31])
#loc174 = loc(fused[#loc33, #loc34, #loc35, #loc26])
#loc175 = loc(fused[#loc38, #loc39])
#loc176 = loc(fused[#loc42, #loc43])
#loc177 = loc(fused[#loc45, #loc46])
#loc178 = loc(fused[#loc47, #loc48])
#loc179 = loc(fused[#loc49, #loc50])
#loc180 = loc(fused[#loc52, #loc51])
#loc181 = loc(fused[#loc53, #loc54])
#loc182 = loc(fused[#loc56, #loc50])
#loc183 = loc(fused[#loc59, #loc58])
#loc184 = loc(fused[#loc61, #loc62])
#loc185 = loc(fused[#loc63, #loc64])
#loc186 = loc(fused[#loc65, #loc66])
#loc187 = loc(fused[#loc67, #loc68])
#loc188 = loc(fused[#loc69, #loc70])
#loc189 = loc(fused[#loc73, #loc71])
#loc190 = loc(fused[#loc74, #loc75])
#loc191 = loc(fused[#loc77, #loc78])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc86, #loc87])
#loc195 = loc(fused[#loc89, #loc90, #loc91, #loc82])
#loc196 = loc(fused[#loc94, #loc95])
#loc197 = loc(fused[#loc99, #loc100])
#loc198 = loc(fused[#loc102, #loc103])
#loc199 = loc(fused[#loc104, #loc105])
#loc200 = loc(fused[#loc106, #loc107])
#loc201 = loc(fused[#loc108, #loc109])
#loc202 = loc(fused[#loc112, #loc113])
#loc203 = loc(fused[#loc115, #loc107])
#loc204 = loc(fused[#loc116, #loc117])
#loc205 = loc(fused[#loc119, #loc118])
#loc206 = loc(fused[#loc120, #loc121])
#loc207 = loc(fused[#loc123, #loc117])
#loc208 = loc(fused[#loc127, #loc126])
#loc209 = loc(fused[#loc129, #loc130])
#loc210 = loc(fused[#loc131, #loc132])
#loc211 = loc(fused[#loc135, #loc133])
#loc212 = loc(fused[#loc136, #loc137])
#loc213 = loc(fused[#loc140, #loc139])
#loc214 = loc(fused[#loc142, #loc143])
#loc215 = loc(fused[#loc145, #loc146])
#loc216 = loc(fused[#loc147, #loc148])
#loc217 = loc(fused[#loc149, #loc150])
#loc218 = loc(fused[#loc152, #loc151])
#loc219 = loc(fused[#loc153, #loc154])
#loc220 = loc(fused[#loc156, #loc150])
#loc221 = loc(fused[#loc160, #loc159])
