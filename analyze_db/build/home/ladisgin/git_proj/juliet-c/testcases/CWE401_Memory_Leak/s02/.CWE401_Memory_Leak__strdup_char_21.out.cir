!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE401_Memory_Leak__strdup_char_21.c":27:21)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_21.c":27:28)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_21.c":156:10)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_21.c":156:14)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_21.c":156:20)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_21.c":156:32)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_21.c":62:26)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_21.c":62:33)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_21.c":92:26)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_21.c":92:33)
#loc151 = loc("CWE401_Memory_Leak__strdup_char_21.c":117:25)
#loc152 = loc("CWE401_Memory_Leak__strdup_char_21.c":117:32)
#loc181 = loc(fused[#loc15, #loc16])
#loc197 = loc(fused[#loc58, #loc59])
#loc198 = loc(fused[#loc60, #loc61])
#loc205 = loc(fused[#loc83, #loc84])
#loc216 = loc(fused[#loc117, #loc118])
#loc228 = loc(fused[#loc151, #loc152])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodB2G2.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc174)
  cir.global "private" constant cir_private @__const.goodB2G1.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc175)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_21_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc176)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc179)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc181)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc179)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
      cir.if %3 {
      } loc(#loc183)
    } loc(#loc182)
    cir.return loc(#loc14)
  } loc(#loc180)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc176)
      %6 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_21_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc176)
      cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc176)
      %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc30)
      %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc31)
      %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
      cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    } loc(#loc187)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc179)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    cir.call @badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.return loc(#loc23)
  } loc(#loc184)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc41)
  } loc(#loc190)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE401_Memory_Leak__strdup_char_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE401_Memory_Leak__strdup_char_21_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE401_Memory_Leak__strdup_char_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE401_Memory_Leak__strdup_char_21_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %17 : !s32i loc(#loc201)
  } loc(#loc196)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc203)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc83, #loc84])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc205)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc202)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc88)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc92)
      } else {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
      } loc(#loc207)
    } loc(#loc206)
    cir.return loc(#loc82)
  } loc(#loc204)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc175)
      %6 = cir.get_global @__const.goodB2G1.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc175)
      cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc175)
      %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc103)
      %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc104)
      %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
      cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    } loc(#loc211)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc202)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.call @goodB2G1Sink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.return loc(#loc96)
  } loc(#loc208)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc214)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc117, #loc118])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc216)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc214)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc122)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc124)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
      } loc(#loc218)
    } loc(#loc217)
    cir.return loc(#loc116)
  } loc(#loc215)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc130)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc174)
      %6 = cir.get_global @__const.goodB2G2.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc174)
      cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc174)
      %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc134)
      %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc135)
      %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
      cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    } loc(#loc222)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc214)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    cir.call @goodB2G2Sink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.return loc(#loc127)
  } loc(#loc219)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc226)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc151, #loc152])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc228)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc226)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc156)
      cir.if %3 {
      } loc(#loc230)
    } loc(#loc229)
    cir.return loc(#loc150)
  } loc(#loc227)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc162)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc164)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc164)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc164)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc164)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc164)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc166)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc146)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc146)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %16 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc226)
    cir.store %15, %16 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    cir.call @goodG2BSink(%17) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    cir.return loc(#loc159)
  } loc(#loc231)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_21.c":106:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_21.c":106:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_21.c":81:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_21.c":81:27)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_21.c":42:9)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_21.c":42:27)
#loc7 = loc("/usr/include/string.h":187:1)
#loc8 = loc("/usr/include/string.h":188:35)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_21.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_21.c":25:24)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_21.c":27:1)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_21.c":35:1)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_21.c":28:1)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_21.c":29:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_21.c":34:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_21.c":29:8)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_21.c":30:5)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_21.c":37:1)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_21.c":50:1)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_21.c":39:5)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_21.c":39:12)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_21.c":40:12)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_21.c":40:5)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_21.c":41:5)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_21.c":47:5)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:16)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:23)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:9)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_21.c":44:31)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_21.c":46:19)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_21.c":46:9)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_21.c":48:17)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_21.c":48:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_21.c":49:13)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_21.c":49:5)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_21.c":140:1)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_21.c":145:1)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_21.c":142:5)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_21.c":142:14)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_21.c":143:5)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_21.c":143:14)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_21.c":144:5)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_21.c":144:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_21.c":161:15)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_21.c":163:15)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_21.c":166:15)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_21.c":168:15)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_21.c":156:1)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_21.c":171:1)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_21.c":157:1)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_21.c":159:27)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_21.c":159:22)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_21.c":159:5)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_21.c":161:5)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_21.c":162:5)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_21.c":162:45)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_21.c":163:5)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_21.c":166:5)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_21.c":167:5)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_21.c":167:44)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_21.c":168:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_21.c":170:12)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_21.c":170:5)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_21.c":57:1)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_21.c":57:29)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_21.c":67:19)
#loc79 = loc("/usr/include/stdlib.h":687:1)
#loc80 = loc("/usr/include/stdlib.h":687:32)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_21.c":62:1)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_21.c":74:1)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_21.c":63:1)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_21.c":64:5)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_21.c":73:5)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_21.c":64:8)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_21.c":65:5)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_21.c":68:5)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_21.c":70:5)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_21.c":67:9)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_21.c":72:9)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_21.c":72:14)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_21.c":76:1)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_21.c":89:1)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_21.c":78:5)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_21.c":78:12)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_21.c":79:12)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_21.c":79:5)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_21.c":80:5)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_21.c":86:5)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:16)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:23)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:9)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_21.c":83:31)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_21.c":85:19)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_21.c":85:9)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_21.c":87:22)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_21.c":87:5)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_21.c":88:18)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_21.c":88:5)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_21.c":58:1)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_21.c":58:29)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_21.c":92:1)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_21.c":99:1)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_21.c":93:1)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_21.c":94:5)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_21.c":98:5)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_21.c":94:8)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_21.c":95:5)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_21.c":97:9)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_21.c":97:14)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_21.c":101:1)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_21.c":114:1)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_21.c":103:5)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_21.c":103:12)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_21.c":104:12)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_21.c":104:5)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_21.c":105:5)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_21.c":111:5)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:16)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:23)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:9)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_21.c":108:31)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_21.c":110:19)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_21.c":110:9)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_21.c":112:22)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_21.c":112:5)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_21.c":113:18)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_21.c":113:5)
#loc144 = loc("/usr/include/string.h":141:1)
#loc145 = loc("/usr/include/string.h":142:14)
#loc146 = loc("CWE401_Memory_Leak__strdup_char_21.c":134:18)
#loc147 = loc("CWE401_Memory_Leak__strdup_char_21.c":59:1)
#loc148 = loc("CWE401_Memory_Leak__strdup_char_21.c":59:28)
#loc149 = loc("CWE401_Memory_Leak__strdup_char_21.c":117:1)
#loc150 = loc("CWE401_Memory_Leak__strdup_char_21.c":125:1)
#loc153 = loc("CWE401_Memory_Leak__strdup_char_21.c":118:1)
#loc154 = loc("CWE401_Memory_Leak__strdup_char_21.c":119:5)
#loc155 = loc("CWE401_Memory_Leak__strdup_char_21.c":124:5)
#loc156 = loc("CWE401_Memory_Leak__strdup_char_21.c":119:8)
#loc157 = loc("CWE401_Memory_Leak__strdup_char_21.c":120:5)
#loc158 = loc("CWE401_Memory_Leak__strdup_char_21.c":127:1)
#loc159 = loc("CWE401_Memory_Leak__strdup_char_21.c":138:1)
#loc160 = loc("CWE401_Memory_Leak__strdup_char_21.c":129:5)
#loc161 = loc("CWE401_Memory_Leak__strdup_char_21.c":129:12)
#loc162 = loc("CWE401_Memory_Leak__strdup_char_21.c":130:12)
#loc163 = loc("CWE401_Memory_Leak__strdup_char_21.c":130:5)
#loc164 = loc("CWE401_Memory_Leak__strdup_char_21.c":132:20)
#loc165 = loc("CWE401_Memory_Leak__strdup_char_21.c":132:5)
#loc166 = loc("CWE401_Memory_Leak__strdup_char_21.c":134:5)
#loc167 = loc("CWE401_Memory_Leak__strdup_char_21.c":134:12)
#loc168 = loc("CWE401_Memory_Leak__strdup_char_21.c":135:15)
#loc169 = loc("CWE401_Memory_Leak__strdup_char_21.c":135:5)
#loc170 = loc("CWE401_Memory_Leak__strdup_char_21.c":136:21)
#loc171 = loc("CWE401_Memory_Leak__strdup_char_21.c":136:5)
#loc172 = loc("CWE401_Memory_Leak__strdup_char_21.c":137:17)
#loc173 = loc("CWE401_Memory_Leak__strdup_char_21.c":137:5)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc176 = loc(fused[#loc5, #loc6])
#loc177 = loc(fused[#loc7, #loc8])
#loc178 = loc(fused[#loc9, #loc10])
#loc179 = loc(fused[#loc11, #loc12])
#loc180 = loc(fused[#loc13, #loc14])
#loc182 = loc(fused[#loc18, #loc19])
#loc183 = loc(fused[#loc21, #loc19])
#loc184 = loc(fused[#loc22, #loc23])
#loc185 = loc(fused[#loc24, #loc25])
#loc186 = loc(fused[#loc27, #loc26])
#loc187 = loc(fused[#loc28, #loc29])
#loc188 = loc(fused[#loc32, #loc33])
#loc189 = loc(fused[#loc37, #loc36])
#loc190 = loc(fused[#loc40, #loc41])
#loc191 = loc(fused[#loc42, #loc43])
#loc192 = loc(fused[#loc44, #loc45])
#loc193 = loc(fused[#loc46, #loc47])
#loc194 = loc(fused[#loc48, #loc49])
#loc195 = loc(fused[#loc50, #loc51])
#loc196 = loc(fused[#loc56, #loc57])
#loc199 = loc(fused[#loc67, #loc68])
#loc200 = loc(fused[#loc71, #loc72])
#loc201 = loc(fused[#loc75, #loc74])
#loc202 = loc(fused[#loc76, #loc77])
#loc203 = loc(fused[#loc79, #loc80])
#loc204 = loc(fused[#loc81, #loc82])
#loc206 = loc(fused[#loc86, #loc87])
#loc207 = loc(fused[#loc89, #loc90, #loc91, #loc87])
#loc208 = loc(fused[#loc95, #loc96])
#loc209 = loc(fused[#loc97, #loc98])
#loc210 = loc(fused[#loc100, #loc99])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc105, #loc106])
#loc213 = loc(fused[#loc110, #loc109])
#loc214 = loc(fused[#loc113, #loc114])
#loc215 = loc(fused[#loc115, #loc116])
#loc217 = loc(fused[#loc120, #loc121])
#loc218 = loc(fused[#loc123, #loc121])
#loc219 = loc(fused[#loc126, #loc127])
#loc220 = loc(fused[#loc128, #loc129])
#loc221 = loc(fused[#loc131, #loc130])
#loc222 = loc(fused[#loc132, #loc133])
#loc223 = loc(fused[#loc136, #loc137])
#loc224 = loc(fused[#loc141, #loc140])
#loc225 = loc(fused[#loc144, #loc145])
#loc226 = loc(fused[#loc147, #loc148])
#loc227 = loc(fused[#loc149, #loc150])
#loc229 = loc(fused[#loc154, #loc155])
#loc230 = loc(fused[#loc157, #loc155])
#loc231 = loc(fused[#loc158, #loc159])
#loc232 = loc(fused[#loc160, #loc161])
#loc233 = loc(fused[#loc163, #loc162])
#loc234 = loc(fused[#loc165, #loc164])
#loc235 = loc(fused[#loc171, #loc170])
