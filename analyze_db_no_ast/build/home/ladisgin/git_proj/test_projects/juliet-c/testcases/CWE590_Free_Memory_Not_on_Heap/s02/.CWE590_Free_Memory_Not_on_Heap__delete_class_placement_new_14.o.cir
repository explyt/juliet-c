!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalFive : !s32i {alignment = 4 : i64} loc(#loc106)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @printIntLine(!s32i) loc(#loc107)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc108)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_143badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc111)
    cir.scope {
      %8 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc106)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc113)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc116)
          %13 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc117)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc118)
          %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc26)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc118)
          cir.call @_ZN12TwoIntsClassC2Ev(%17) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc24)
          cir.store %17, %13 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc117)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc27)
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
          %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc119)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc30)
          %22 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
          %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc120)
          %24 = cir.load %13 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
          cir.store %24, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc121)
        } loc(#loc115)
      } loc(#loc114)
    } loc(#loc112)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc37)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc38)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc39)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc39)
    cir.return loc(#loc9)
  } loc(#loc109)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc123)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc49)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc126)
    cir.scope {
      %8 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc106)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc53)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc54)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc128)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } else {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc131)
          %13 = cir.const #cir.int<8> : !u64i loc(#loc132)
          %14 = cir.call @_Znwm(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc131)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc132)
          cir.call @_ZN12TwoIntsClassC2Ev(%15) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc62)
          cir.store %15, %12 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc131)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc64)
          %17 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc66)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc67)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %22 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
          cir.store %22, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc135)
        } loc(#loc130)
      } loc(#loc129)
    } loc(#loc127)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc70)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc72)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc73)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc74)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc74)
    cir.return loc(#loc46)
  } loc(#loc124)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc138)
    cir.scope {
      %8 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc106)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc84)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc140)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc143)
          %13 = cir.const #cir.int<8> : !u64i loc(#loc144)
          %14 = cir.call @_Znwm(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc143)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc144)
          cir.call @_ZN12TwoIntsClassC2Ev(%15) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc89)
          cir.store %15, %12 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc143)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc91)
          %17 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc145)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc93)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc146)
          %22 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
          cir.store %22, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc147)
        } loc(#loc142)
      } loc(#loc141)
    } loc(#loc139)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc99)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc100)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc101)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc101)
    cir.return loc(#loc76)
  } loc(#loc136)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_144goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14L8goodG2B1Ev() : () -> () loc(#loc104)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14L8goodG2B2Ev() : () -> () loc(#loc105)
    cir.return loc(#loc103)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":26:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":44:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":28:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":28:20)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":29:12)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":29:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":30:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":40:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":30:8)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":30:20)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":31:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":32:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":39:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":34:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":34:45)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":35:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":35:53)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":35:41)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":35:45)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":36:34)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":36:13)
#loc29 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":37:34)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":37:13)
#loc32 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":38:20)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":38:13)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":41:18)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":41:24)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":41:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":43:12)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":26:6)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":58:19)
#loc43 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc44 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":51:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":73:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":53:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":53:20)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":54:12)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":54:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":55:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":69:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":55:8)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":55:20)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":56:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":59:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":61:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":58:9)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":62:9)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":68:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":64:13)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":64:45)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":64:41)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":65:34)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":65:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":66:34)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":66:13)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":67:20)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":67:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":70:18)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":70:24)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":70:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":72:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":51:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":76:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":93:1)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":78:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":78:20)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":79:12)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":79:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":80:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":89:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":80:8)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":80:20)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":81:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":82:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":88:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":84:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":84:45)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":84:41)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":85:34)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":85:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":86:34)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":86:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":87:20)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":87:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":90:18)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":90:24)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":90:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":92:12)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":76:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":95:1)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":99:1)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":97:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_14.cpp":98:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc4, #loc5])
#loc108 = loc(fused[#loc6, #loc7])
#loc109 = loc(fused[#loc8, #loc9])
#loc110 = loc(fused[#loc10, #loc11])
#loc111 = loc(fused[#loc13, #loc12])
#loc112 = loc(fused[#loc14, #loc15])
#loc113 = loc(fused[#loc16, #loc17])
#loc114 = loc(fused[#loc18, #loc15])
#loc115 = loc(fused[#loc19, #loc20])
#loc116 = loc(fused[#loc21, #loc22])
#loc117 = loc(fused[#loc23, #loc24])
#loc118 = loc(fused[#loc25, #loc24])
#loc119 = loc(fused[#loc28, #loc27])
#loc120 = loc(fused[#loc31, #loc30])
#loc121 = loc(fused[#loc34, #loc33])
#loc122 = loc(fused[#loc40, #loc41])
#loc123 = loc(fused[#loc43, #loc44])
#loc124 = loc(fused[#loc45, #loc46])
#loc125 = loc(fused[#loc47, #loc48])
#loc126 = loc(fused[#loc50, #loc49])
#loc127 = loc(fused[#loc51, #loc52])
#loc128 = loc(fused[#loc53, #loc54])
#loc129 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc61, #loc62])
#loc132 = loc(fused[#loc63, #loc62])
#loc133 = loc(fused[#loc65, #loc64])
#loc134 = loc(fused[#loc67, #loc66])
#loc135 = loc(fused[#loc69, #loc68])
#loc136 = loc(fused[#loc75, #loc76])
#loc137 = loc(fused[#loc77, #loc78])
#loc138 = loc(fused[#loc80, #loc79])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc83, #loc84])
#loc141 = loc(fused[#loc85, #loc82])
#loc142 = loc(fused[#loc86, #loc87])
#loc143 = loc(fused[#loc88, #loc89])
#loc144 = loc(fused[#loc90, #loc89])
#loc145 = loc(fused[#loc92, #loc91])
#loc146 = loc(fused[#loc94, #loc93])
#loc147 = loc(fused[#loc96, #loc95])
#loc148 = loc(fused[#loc102, #loc103])
