!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":24:69)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":24:75)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":44:74)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":44:80)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":61:74)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":61:80)
#loc94 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc37, #loc38])
#loc119 = loc(fused[#loc67, #loc68])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc90)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc92)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badSource(%arg0: !cir.ptr<!s32i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s32i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_badGlobal : !cir.ptr<!s32i> loc(#loc90)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc96)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc97)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc98)
    cir.br ^bb3 loc(#loc99)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc23)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc100)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc101)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc27)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc102)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
    cir.return %18 : !cir.ptr<!s32i> loc(#loc102)
  } loc(#loc93)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc103)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Source(%arg0: !cir.ptr<!s32i> loc(fused[#loc37, #loc38])) -> !cir.ptr<!s32i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc36)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc39)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc103)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc108)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb8 loc(#loc44)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc47)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc48)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc48)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc109)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc110)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc111)
    cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc114)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc60)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc54)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc41)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    cir.store %21, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc116)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
    cir.return %22 : !cir.ptr<!s32i> loc(#loc116)
  } loc(#loc105)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc117)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Source(%arg0: !cir.ptr<!s32i> loc(fused[#loc67, #loc68])) -> !cir.ptr<!s32i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc69)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc117)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc74)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc75)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc75)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc122)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc123)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc124)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc125)
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc83)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc127)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc128)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc85)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc87)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
    cir.br ^bb5 loc(#loc81)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc81)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc71)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
    cir.store %19, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    cir.return %20 : !cir.ptr<!s32i> loc(#loc129)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":22:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":33:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":25:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":26:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":26:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":29:23)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":29:30)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":29:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":29:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:37)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:21)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:28)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:34)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":30:33)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":32:12)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":32:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":40:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":40:12)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":49:19)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":44:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":58:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":45:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":46:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":56:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":46:8)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":47:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":50:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":52:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":49:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":54:23)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":54:30)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":54:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":54:43)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":54:44)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":54:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:37)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:21)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:28)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:34)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":55:33)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":57:12)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":57:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":41:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":41:12)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":61:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":70:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":62:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":63:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":68:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":63:8)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":64:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":66:23)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":66:30)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":66:33)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":66:43)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":66:44)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":66:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:37)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:21)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:27)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:28)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:34)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":67:33)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":69:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memcpy_22b.c":69:5)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc12, #loc13])
#loc96 = loc(fused[#loc15, #loc13])
#loc97 = loc(fused[#loc16, #loc18])
#loc98 = loc(fused[#loc19, #loc18])
#loc99 = loc(fused[#loc20, #loc21])
#loc100 = loc(fused[#loc22, #loc23])
#loc101 = loc(fused[#loc24, #loc21])
#loc102 = loc(fused[#loc29, #loc28])
#loc103 = loc(fused[#loc30, #loc31])
#loc104 = loc(fused[#loc32, #loc33])
#loc105 = loc(fused[#loc35, #loc36])
#loc107 = loc(fused[#loc40, #loc41])
#loc108 = loc(fused[#loc43, #loc44, #loc45, #loc41])
#loc109 = loc(fused[#loc49, #loc50])
#loc110 = loc(fused[#loc48, #loc50])
#loc111 = loc(fused[#loc47, #loc51])
#loc112 = loc(fused[#loc52, #loc51])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc54])
#loc116 = loc(fused[#loc62, #loc61])
#loc117 = loc(fused[#loc63, #loc64])
#loc118 = loc(fused[#loc65, #loc66])
#loc120 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc73, #loc71])
#loc122 = loc(fused[#loc76, #loc77])
#loc123 = loc(fused[#loc75, #loc77])
#loc124 = loc(fused[#loc74, #loc78])
#loc125 = loc(fused[#loc79, #loc78])
#loc126 = loc(fused[#loc80, #loc81])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc84, #loc81])
#loc129 = loc(fused[#loc89, #loc88])
