!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc78 = loc("CWE401_Memory_Leak__char_realloc_12.c":148:10)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_12.c":148:14)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_12.c":148:20)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_12.c":148:32)
#loc223 = loc(fused[#loc78, #loc79])
#loc224 = loc(fused[#loc80, #loc81])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc194)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc195)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc196)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc198)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc199)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc204)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc204)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc27)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc29)
        %11 = cir.const #cir.int<1> : !u64i loc(#loc206)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc207)
        %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
        cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
        cir.scope {
          %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc211)
          cir.if %24 {
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc41)
            cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
          } loc(#loc212)
        } loc(#loc210)
        %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
        %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc45)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc46)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc46)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc46)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc46)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc46)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc48)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc50)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc50)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } loc(#loc205)
    } loc(#loc203)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc215)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc215)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc55)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc55)
      cir.if %5 {
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc60)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
      } loc(#loc216)
    } loc(#loc214)
    cir.return loc(#loc15)
  } loc(#loc200)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc63)
  } loc(#loc217)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc220)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc75)
  cir.func @main(%arg0: !s32i loc(fused[#loc78, #loc79]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc80, #loc81])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc84)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc84)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc85)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc72)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %8 = cir.get_global @CWE401_Memory_Leak__char_realloc_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call @CWE401_Memory_Leak__char_realloc_12_good() : () -> () loc(#loc87)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc73)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %13 = cir.get_global @CWE401_Memory_Leak__char_realloc_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call @CWE401_Memory_Leak__char_realloc_12_bad() : () -> () loc(#loc91)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %17 : !s32i loc(#loc227)
  } loc(#loc222)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc232)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc104)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc104)
      cir.if %5 {
        %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc109)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc111)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc111)
        %11 = cir.const #cir.int<1> : !u64i loc(#loc234)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc235)
        %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
        cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
        cir.scope {
          %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc239)
          cir.if %24 {
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc123)
            cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
          } loc(#loc240)
        } loc(#loc238)
        %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc124)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc126)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc126)
        %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } else {
        %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc129)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc131)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc131)
        %11 = cir.const #cir.int<1> : !u64i loc(#loc241)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc242)
        %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc243)
        cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
        cir.scope {
          %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc246)
          cir.if %24 {
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc143)
            cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
          } loc(#loc247)
        } loc(#loc245)
        %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc144)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc146)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc146)
        %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc148)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc249)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc249)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc151)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc151)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc156)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc158)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc158)
      } loc(#loc250)
    } loc(#loc248)
    cir.return loc(#loc97)
  } loc(#loc228)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc164)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc255)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc255)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc168)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc168)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc173)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc173)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc173)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc173)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc173)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc173)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc175)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc177)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc177)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc175)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc179)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc180)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc180)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc180)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc180)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc180)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc180)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc182)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc184)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc184)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc186)
      } loc(#loc256)
    } loc(#loc254)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc260)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc260)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc189)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc189)
      cir.if %5 {
      } else {
      } loc(#loc261)
    } loc(#loc259)
    cir.return loc(#loc161)
  } loc(#loc251)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":683:1)
#loc4 = loc("/usr/include/stdlib.h":684:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__char_realloc_12.c":34:22)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE401_Memory_Leak__char_realloc_12.c":24:1)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_12.c":55:1)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_12.c":26:5)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_12.c":26:12)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_12.c":27:12)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_12.c":27:5)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_12.c":28:5)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_12.c":44:5)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_12.c":28:8)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_12.c":28:33)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_12.c":29:5)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_12.c":36:5)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_12.c":38:5)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:24)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:32)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:38)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:42)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:53)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:54)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:9)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:9)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:37)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:13)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:21)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:27)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:28)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:34)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:33)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_12.c":34:9)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_12.c":34:16)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_12.c":35:19)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_12.c":35:9)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_12.c":40:24)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_12.c":40:9)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_12.c":42:9)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_12.c":42:16)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_12.c":42:22)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_12.c":43:19)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_12.c":43:9)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_12.c":45:5)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_12.c":54:5)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_12.c":45:8)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_12.c":45:33)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_12.c":46:5)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_12.c":49:5)
#loc59 = loc("CWE401_Memory_Leak__char_realloc_12.c":51:5)
#loc60 = loc("CWE401_Memory_Leak__char_realloc_12.c":53:9)
#loc61 = loc("CWE401_Memory_Leak__char_realloc_12.c":53:14)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_12.c":133:1)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_12.c":137:1)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_12.c":135:5)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_12.c":135:13)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_12.c":136:5)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_12.c":136:13)
#loc68 = loc("/usr/include/stdlib.h":575:1)
#loc69 = loc("/usr/include/stdlib.h":575:41)
#loc70 = loc("/usr/include/time.h":76:1)
#loc71 = loc("/usr/include/time.h":76:38)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_12.c":153:15)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_12.c":155:15)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_12.c":158:15)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_12.c":160:15)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_12.c":148:1)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_12.c":163:1)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_12.c":149:1)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_12.c":151:27)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_12.c":151:22)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_12.c":151:5)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_12.c":153:5)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_12.c":154:5)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_12.c":154:46)
#loc89 = loc("CWE401_Memory_Leak__char_realloc_12.c":155:5)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_12.c":158:5)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_12.c":159:5)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_12.c":159:45)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_12.c":160:5)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_12.c":162:12)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_12.c":162:5)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_12.c":64:1)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_12.c":96:1)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_12.c":66:5)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_12.c":66:12)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_12.c":67:12)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_12.c":67:5)
#loc102 = loc("CWE401_Memory_Leak__char_realloc_12.c":68:5)
#loc103 = loc("CWE401_Memory_Leak__char_realloc_12.c":85:5)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_12.c":68:8)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_12.c":68:33)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_12.c":69:5)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_12.c":76:5)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_12.c":78:5)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:24)
#loc110 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:32)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:38)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:42)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:53)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:54)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:9)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:9)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:37)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:13)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:21)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:27)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:28)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:34)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:33)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_12.c":74:9)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_12.c":74:16)
#loc126 = loc("CWE401_Memory_Leak__char_realloc_12.c":74:22)
#loc127 = loc("CWE401_Memory_Leak__char_realloc_12.c":75:19)
#loc128 = loc("CWE401_Memory_Leak__char_realloc_12.c":75:9)
#loc129 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:24)
#loc130 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:32)
#loc131 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:38)
#loc132 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:42)
#loc133 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:53)
#loc134 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:54)
#loc135 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:9)
#loc136 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:9)
#loc137 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:37)
#loc138 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:13)
#loc139 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:21)
#loc140 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:27)
#loc141 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:28)
#loc142 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:34)
#loc143 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:33)
#loc144 = loc("CWE401_Memory_Leak__char_realloc_12.c":83:9)
#loc145 = loc("CWE401_Memory_Leak__char_realloc_12.c":83:16)
#loc146 = loc("CWE401_Memory_Leak__char_realloc_12.c":83:22)
#loc147 = loc("CWE401_Memory_Leak__char_realloc_12.c":84:19)
#loc148 = loc("CWE401_Memory_Leak__char_realloc_12.c":84:9)
#loc149 = loc("CWE401_Memory_Leak__char_realloc_12.c":86:5)
#loc150 = loc("CWE401_Memory_Leak__char_realloc_12.c":95:5)
#loc151 = loc("CWE401_Memory_Leak__char_realloc_12.c":86:8)
#loc152 = loc("CWE401_Memory_Leak__char_realloc_12.c":86:33)
#loc153 = loc("CWE401_Memory_Leak__char_realloc_12.c":87:5)
#loc154 = loc("CWE401_Memory_Leak__char_realloc_12.c":90:5)
#loc155 = loc("CWE401_Memory_Leak__char_realloc_12.c":92:5)
#loc156 = loc("CWE401_Memory_Leak__char_realloc_12.c":89:9)
#loc157 = loc("CWE401_Memory_Leak__char_realloc_12.c":89:14)
#loc158 = loc("CWE401_Memory_Leak__char_realloc_12.c":94:9)
#loc159 = loc("CWE401_Memory_Leak__char_realloc_12.c":94:14)
#loc160 = loc("CWE401_Memory_Leak__char_realloc_12.c":101:1)
#loc161 = loc("CWE401_Memory_Leak__char_realloc_12.c":131:1)
#loc162 = loc("CWE401_Memory_Leak__char_realloc_12.c":103:5)
#loc163 = loc("CWE401_Memory_Leak__char_realloc_12.c":103:12)
#loc164 = loc("CWE401_Memory_Leak__char_realloc_12.c":104:12)
#loc165 = loc("CWE401_Memory_Leak__char_realloc_12.c":104:5)
#loc166 = loc("CWE401_Memory_Leak__char_realloc_12.c":105:5)
#loc167 = loc("CWE401_Memory_Leak__char_realloc_12.c":120:5)
#loc168 = loc("CWE401_Memory_Leak__char_realloc_12.c":105:8)
#loc169 = loc("CWE401_Memory_Leak__char_realloc_12.c":105:33)
#loc170 = loc("CWE401_Memory_Leak__char_realloc_12.c":106:5)
#loc171 = loc("CWE401_Memory_Leak__char_realloc_12.c":112:5)
#loc172 = loc("CWE401_Memory_Leak__char_realloc_12.c":114:5)
#loc173 = loc("CWE401_Memory_Leak__char_realloc_12.c":108:24)
#loc174 = loc("CWE401_Memory_Leak__char_realloc_12.c":108:9)
#loc175 = loc("CWE401_Memory_Leak__char_realloc_12.c":110:9)
#loc176 = loc("CWE401_Memory_Leak__char_realloc_12.c":110:16)
#loc177 = loc("CWE401_Memory_Leak__char_realloc_12.c":110:22)
#loc178 = loc("CWE401_Memory_Leak__char_realloc_12.c":111:19)
#loc179 = loc("CWE401_Memory_Leak__char_realloc_12.c":111:9)
#loc180 = loc("CWE401_Memory_Leak__char_realloc_12.c":116:24)
#loc181 = loc("CWE401_Memory_Leak__char_realloc_12.c":116:9)
#loc182 = loc("CWE401_Memory_Leak__char_realloc_12.c":118:9)
#loc183 = loc("CWE401_Memory_Leak__char_realloc_12.c":118:16)
#loc184 = loc("CWE401_Memory_Leak__char_realloc_12.c":118:22)
#loc185 = loc("CWE401_Memory_Leak__char_realloc_12.c":119:19)
#loc186 = loc("CWE401_Memory_Leak__char_realloc_12.c":119:9)
#loc187 = loc("CWE401_Memory_Leak__char_realloc_12.c":121:5)
#loc188 = loc("CWE401_Memory_Leak__char_realloc_12.c":130:5)
#loc189 = loc("CWE401_Memory_Leak__char_realloc_12.c":121:8)
#loc190 = loc("CWE401_Memory_Leak__char_realloc_12.c":121:33)
#loc191 = loc("CWE401_Memory_Leak__char_realloc_12.c":122:5)
#loc192 = loc("CWE401_Memory_Leak__char_realloc_12.c":125:5)
#loc193 = loc("CWE401_Memory_Leak__char_realloc_12.c":127:5)
#loc194 = loc(fused[#loc1, #loc2])
#loc195 = loc(fused[#loc3, #loc4])
#loc196 = loc(fused[#loc5, #loc6])
#loc197 = loc(fused[#loc7, #loc8])
#loc198 = loc(fused[#loc10, #loc11])
#loc199 = loc(fused[#loc12, #loc13])
#loc200 = loc(fused[#loc14, #loc15])
#loc201 = loc(fused[#loc16, #loc17])
#loc202 = loc(fused[#loc19, #loc18])
#loc203 = loc(fused[#loc20, #loc21])
#loc204 = loc(fused[#loc22, #loc23])
#loc205 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc206 = loc(fused[#loc30, #loc31])
#loc207 = loc(fused[#loc29, #loc31])
#loc208 = loc(fused[#loc27, #loc32])
#loc209 = loc(fused[#loc33, #loc32])
#loc210 = loc(fused[#loc34, #loc35])
#loc211 = loc(fused[#loc36, #loc37])
#loc212 = loc(fused[#loc38, #loc35])
#loc213 = loc(fused[#loc47, #loc46])
#loc214 = loc(fused[#loc53, #loc54])
#loc215 = loc(fused[#loc55, #loc56])
#loc216 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc217 = loc(fused[#loc62, #loc63])
#loc218 = loc(fused[#loc64, #loc65])
#loc219 = loc(fused[#loc66, #loc67])
#loc220 = loc(fused[#loc68, #loc69])
#loc221 = loc(fused[#loc70, #loc71])
#loc222 = loc(fused[#loc76, #loc77])
#loc225 = loc(fused[#loc87, #loc88])
#loc226 = loc(fused[#loc91, #loc92])
#loc227 = loc(fused[#loc95, #loc94])
#loc228 = loc(fused[#loc96, #loc97])
#loc229 = loc(fused[#loc98, #loc99])
#loc230 = loc(fused[#loc101, #loc100])
#loc231 = loc(fused[#loc102, #loc103])
#loc232 = loc(fused[#loc104, #loc105])
#loc233 = loc(fused[#loc106, #loc107, #loc108, #loc103])
#loc234 = loc(fused[#loc112, #loc113])
#loc235 = loc(fused[#loc111, #loc113])
#loc236 = loc(fused[#loc109, #loc114])
#loc237 = loc(fused[#loc115, #loc114])
#loc238 = loc(fused[#loc116, #loc117])
#loc239 = loc(fused[#loc118, #loc119])
#loc240 = loc(fused[#loc120, #loc117])
#loc241 = loc(fused[#loc132, #loc133])
#loc242 = loc(fused[#loc131, #loc133])
#loc243 = loc(fused[#loc129, #loc134])
#loc244 = loc(fused[#loc135, #loc134])
#loc245 = loc(fused[#loc136, #loc137])
#loc246 = loc(fused[#loc138, #loc139])
#loc247 = loc(fused[#loc140, #loc137])
#loc248 = loc(fused[#loc149, #loc150])
#loc249 = loc(fused[#loc151, #loc152])
#loc250 = loc(fused[#loc153, #loc154, #loc155, #loc150])
#loc251 = loc(fused[#loc160, #loc161])
#loc252 = loc(fused[#loc162, #loc163])
#loc253 = loc(fused[#loc165, #loc164])
#loc254 = loc(fused[#loc166, #loc167])
#loc255 = loc(fused[#loc168, #loc169])
#loc256 = loc(fused[#loc170, #loc171, #loc172, #loc167])
#loc257 = loc(fused[#loc174, #loc173])
#loc258 = loc(fused[#loc181, #loc180])
#loc259 = loc(fused[#loc187, #loc188])
#loc260 = loc(fused[#loc189, #loc190])
#loc261 = loc(fused[#loc191, #loc192, #loc193, #loc188])
