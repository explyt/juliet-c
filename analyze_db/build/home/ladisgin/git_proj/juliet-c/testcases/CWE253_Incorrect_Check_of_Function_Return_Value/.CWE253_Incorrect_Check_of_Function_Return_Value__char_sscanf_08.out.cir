!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":120:10)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":120:14)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":120:20)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":120:32)
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc46, #loc47])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc124)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc12)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc12)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc127)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc127)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc127)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
            %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
            %13 = cir.call @__isoc99_sscanf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc25)
            %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc130)
            cir.if %15 {
              %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc27)
            } loc(#loc131)
          } loc(#loc129)
        } loc(#loc126)
      } loc(#loc125)
    } loc(#loc123)
    cir.return loc(#loc9)
  } loc(#loc122)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc132)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc135)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc41)
  cir.func @main(%arg0: !s32i loc(fused[#loc44, #loc45]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc46, #loc47])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc49)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc50)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc50)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc51)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc38)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08_good() : () -> () loc(#loc53)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc39)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc40)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08_bad() : () -> () loc(#loc57)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc41)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.return %17 : !s32i loc(#loc142)
  } loc(#loc137)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %2 : !s32i loc(#loc144)
  } loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc147)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc71)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc71)
      cir.if %2 {
        %3 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc76)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc150)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc150)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc150)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc85)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc86)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc86)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc87)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc87)
            %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
            %13 = cir.call @__isoc99_sscanf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc89)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc153)
            cir.if %16 {
              %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc92)
            } loc(#loc154)
          } loc(#loc152)
        } loc(#loc149)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc68)
  } loc(#loc145)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %2 : !s32i loc(#loc156)
  } loc(#loc155)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc159)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc101)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc101)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc162)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc163)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc162)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc162)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc112)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc113)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc113)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc114)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc114)
            %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
            %13 = cir.call @__isoc99_sscanf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc112)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc116)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc165)
            cir.if %16 {
              %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc118)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc118)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc119)
            } loc(#loc166)
          } loc(#loc164)
        } loc(#loc161)
      } loc(#loc160)
    } loc(#loc158)
    cir.return loc(#loc98)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":50:24)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":50:36)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":52:27)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":39:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":56:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":41:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":55:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":41:8)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":41:26)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":42:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":43:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":54:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":46:13)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":46:36)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":47:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":47:27)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":50:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":53:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":50:17)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":50:46)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":50:55)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":51:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":52:17)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":105:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":109:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":107:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":107:11)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":108:5)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":108:11)
#loc34 = loc("/usr/include/stdlib.h":575:1)
#loc35 = loc("/usr/include/stdlib.h":575:41)
#loc36 = loc("/usr/include/time.h":76:1)
#loc37 = loc("/usr/include/time.h":76:38)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":125:15)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":127:15)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":130:15)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":132:15)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":120:1)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":135:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":121:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":123:27)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":123:22)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":123:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":125:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":126:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":126:74)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":127:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":130:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":131:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":131:73)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":132:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":134:12)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":134:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":27:1)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":30:1)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":29:12)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":29:5)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":68:19)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":63:1)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":84:1)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":65:5)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":83:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":65:8)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":65:27)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":66:5)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":69:5)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":71:5)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":68:9)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":72:9)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":82:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":75:13)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":75:36)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":76:13)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":76:27)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":78:13)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":81:13)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":78:17)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":78:24)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":78:36)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":78:46)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":78:55)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":79:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":80:27)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":80:17)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":32:1)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":35:1)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":34:12)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":34:5)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":87:1)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":103:1)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":89:5)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":102:5)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":89:8)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":89:26)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":90:5)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":91:9)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":101:9)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":94:13)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":94:36)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":95:13)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":95:27)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":97:13)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":100:13)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":97:17)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":97:24)
#loc114 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":97:36)
#loc115 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":97:46)
#loc116 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":97:55)
#loc117 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":98:13)
#loc118 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":99:27)
#loc119 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_08.c":99:17)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc8, #loc9])
#loc123 = loc(fused[#loc10, #loc11])
#loc124 = loc(fused[#loc12, #loc13])
#loc125 = loc(fused[#loc14, #loc11])
#loc126 = loc(fused[#loc15, #loc16])
#loc127 = loc(fused[#loc17, #loc18])
#loc128 = loc(fused[#loc19, #loc20])
#loc129 = loc(fused[#loc21, #loc22])
#loc130 = loc(fused[#loc23, #loc25])
#loc131 = loc(fused[#loc26, #loc22])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc30, #loc31])
#loc134 = loc(fused[#loc32, #loc33])
#loc135 = loc(fused[#loc34, #loc35])
#loc136 = loc(fused[#loc36, #loc37])
#loc137 = loc(fused[#loc42, #loc43])
#loc140 = loc(fused[#loc53, #loc54])
#loc141 = loc(fused[#loc57, #loc58])
#loc142 = loc(fused[#loc61, #loc60])
#loc143 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc65, #loc64])
#loc145 = loc(fused[#loc67, #loc68])
#loc146 = loc(fused[#loc69, #loc70])
#loc147 = loc(fused[#loc71, #loc72])
#loc148 = loc(fused[#loc73, #loc74, #loc75, #loc70])
#loc149 = loc(fused[#loc77, #loc78])
#loc150 = loc(fused[#loc79, #loc80])
#loc151 = loc(fused[#loc81, #loc82])
#loc152 = loc(fused[#loc83, #loc84])
#loc153 = loc(fused[#loc85, #loc89])
#loc154 = loc(fused[#loc90, #loc84])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc96, #loc95])
#loc157 = loc(fused[#loc97, #loc98])
#loc158 = loc(fused[#loc99, #loc100])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc103, #loc100])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc108, #loc109])
#loc164 = loc(fused[#loc110, #loc111])
#loc165 = loc(fused[#loc112, #loc116])
#loc166 = loc(fused[#loc117, #loc111])
