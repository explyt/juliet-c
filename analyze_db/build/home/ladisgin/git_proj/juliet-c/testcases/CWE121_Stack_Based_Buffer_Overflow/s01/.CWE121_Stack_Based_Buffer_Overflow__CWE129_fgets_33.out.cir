!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":169:10)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":169:14)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":169:20)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":169:32)
#true = #cir.bool<true> : !cir.bool
#loc287 = loc(fused[#loc197, #loc198])
#loc288 = loc(fused[#loc199, #loc200])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc213)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc214)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc215)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc220)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc18)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc20)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc223)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc223)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc223)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc29)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc29)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc29)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc29)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc29)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc29)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc214)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc31)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
        %19 = cir.cmp(ne, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc40)
        } loc(#loc226)
      } loc(#loc224)
    } loc(#loc222)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc229)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc44)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc229)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc231)
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc232)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc232)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc232)
        cir.scope {
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc234)
          cir.if %12 {
            %13 = cir.const #cir.int<1> : !s32i loc(#loc58)
            %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc60)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc60)
            cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc236)
            cir.scope {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc63)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc238)
              cir.for : cond {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc65)
                %19 = cir.const #cir.int<10> : !s32i loc(#loc66)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc239)
                cir.condition(%20) loc(#loc239)
              } body {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc68)
                %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc68)
                %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc69)
                cir.yield loc(#loc62)
              } step {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc71)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc240)
                cir.yield loc(#loc237)
              } loc(#loc237)
            } loc(#loc237)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc72)
          } loc(#loc235)
        } loc(#loc233)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc14)
  } loc(#loc218)
  cir.func internal private @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc243)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc78)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc80)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc82)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc247)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc247)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc249)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc250)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc250)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc250)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc97)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc252)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc103)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc103)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc254)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc106)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc256)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc109)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc257)
                cir.condition(%21) loc(#loc257)
              } body {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc111)
                %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc111)
                %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc112)
                cir.yield loc(#loc105)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc114)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc258)
                cir.yield loc(#loc255)
              } loc(#loc255)
            } loc(#loc255)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc115)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc115)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc116)
          } loc(#loc253)
        } loc(#loc251)
      } loc(#loc248)
    } loc(#loc246)
    cir.return loc(#loc74)
  } loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc117)
  cir.func internal private @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc261)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc125)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc264)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc264)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc264)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc134)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc134)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc134)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc134)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc134)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc134)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc134)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc134)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc214)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc136)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc137)
        %19 = cir.cmp(ne, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc266)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc141)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc142)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc145)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc145)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc146)
        } loc(#loc267)
      } loc(#loc265)
    } loc(#loc263)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc270)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc150)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc270)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc272)
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc273)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc273)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc273)
        cir.scope {
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc160)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc275)
          %13 = cir.ternary(%12, true {
            %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %15 = cir.const #cir.int<10> : !s32i loc(#loc163)
            %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc276)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc161)
              cir.yield %18 : !cir.bool loc(#loc161)
            }, false {
              %18 = cir.const #false loc(#loc161)
              cir.yield %18 : !cir.bool loc(#loc161)
            }) : (!cir.bool) -> !cir.bool loc(#loc161)
            cir.yield %17 : !cir.bool loc(#loc161)
          }, false {
            %14 = cir.const #false loc(#loc161)
            cir.yield %14 : !cir.bool loc(#loc161)
          }) : (!cir.bool) -> !cir.bool loc(#loc161)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc168)
            %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
            %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc170)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc170)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc278)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc173)
              cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc280)
              cir.for : cond {
                %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc175)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc176)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc281)
                cir.condition(%21) loc(#loc281)
              } body {
                %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc177)
                %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc178)
                %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc178)
                %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc178)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc179)
                cir.yield loc(#loc172)
              } step {
                %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc181)
                cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc282)
                cir.yield loc(#loc279)
              } loc(#loc279)
            } loc(#loc279)
          } else {
            %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc117)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc117)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc182)
          } loc(#loc277)
        } loc(#loc274)
      } loc(#loc271)
    } loc(#loc269)
    cir.return loc(#loc119)
  } loc(#loc259)
  cir.func @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33L7goodG2BEv() : () -> () loc(#loc185)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33L7goodB2GEv() : () -> () loc(#loc186)
    cir.return loc(#loc184)
  } loc(#loc283)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc284)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc285)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc194)
  cir.func @main(%arg0: !s32i loc(fused[#loc197, #loc198]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc199, #loc200])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc287)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc288)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc196)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc201)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc202)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc203)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc203)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc204)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc191)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_334goodEv() : () -> () loc(#loc206)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc192)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc207)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc193)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    cir.call @_ZN51CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_333badEv() : () -> () loc(#loc209)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc194)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc210)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc211)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    cir.return %15 : !s32i loc(#loc289)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":43:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":64:27)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":27:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":68:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":29:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":30:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":32:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":32:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":32:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":33:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":45:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":34:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":34:45)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":36:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":44:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":36:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":36:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":36:49)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":36:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":36:59)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":37:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":40:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":42:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":39:25)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":39:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":39:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":39:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":43:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":46:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":67:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":47:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":47:20)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":48:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":66:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":49:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":49:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":50:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":50:34)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":53:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":65:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":53:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":53:25)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":54:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":61:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":63:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":55:32)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":55:24)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":55:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":57:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":60:17)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":57:25)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":57:21)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":57:28)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":57:32)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":59:41)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":59:34)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":59:21)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":57:37)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":57:36)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":64:17)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":75:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":106:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":77:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":77:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":78:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":78:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":80:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":80:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":80:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":83:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":83:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":84:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":105:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":85:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":85:20)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":86:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":104:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":87:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":87:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":88:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":88:34)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":91:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":103:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":91:17)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":91:25)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":92:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":99:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":101:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":93:32)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":93:24)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":93:17)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":95:17)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":98:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":95:25)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":95:21)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":95:28)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":95:32)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":97:41)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":97:34)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":97:21)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":95:37)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":95:36)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":102:27)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":102:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":145:27)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":109:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":149:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":111:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":111:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":112:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":112:20)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":114:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":114:12)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":114:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":115:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":127:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":116:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":116:45)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":118:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":126:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":118:19)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":118:32)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":118:49)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":118:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":118:59)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":119:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":122:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":124:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":121:25)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":121:20)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":121:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":121:36)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":125:23)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":125:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":128:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":148:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":129:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":129:20)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":130:9)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":147:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":131:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":131:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":132:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":132:34)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":134:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":146:13)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":134:17)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":134:25)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":134:27)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":134:30)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":134:38)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":134:40)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":135:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":142:13)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":144:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":136:32)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":136:24)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":136:17)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":138:17)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":141:17)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":138:25)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":138:21)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":138:28)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":138:32)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":140:41)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":140:34)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":140:21)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":138:37)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":138:36)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":145:17)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":151:1)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":155:1)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":153:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":154:5)
#loc187 = loc("/usr/include/stdlib.h":575:1)
#loc188 = loc("/usr/include/stdlib.h":575:41)
#loc189 = loc("/usr/include/time.h":76:1)
#loc190 = loc("/usr/include/time.h":76:38)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":174:15)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":176:15)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":179:15)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":181:15)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":169:1)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":184:1)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":170:1)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":172:27)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":172:22)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":172:5)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":174:5)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":175:5)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":176:5)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":179:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":180:5)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":181:5)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":183:12)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_33.cpp":183:5)
#loc213 = loc(fused[#loc1, #loc2])
#loc214 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc5, #loc6])
#loc216 = loc(fused[#loc7, #loc8])
#loc217 = loc(fused[#loc10, #loc11])
#loc218 = loc(fused[#loc13, #loc14])
#loc219 = loc(fused[#loc15, #loc16])
#loc220 = loc(fused[#loc17, #loc18])
#loc221 = loc(fused[#loc21, #loc19])
#loc222 = loc(fused[#loc22, #loc23])
#loc223 = loc(fused[#loc24, #loc25])
#loc224 = loc(fused[#loc26, #loc27])
#loc225 = loc(fused[#loc31, #loc32])
#loc226 = loc(fused[#loc33, #loc34, #loc35, #loc27])
#loc227 = loc(fused[#loc38, #loc39])
#loc228 = loc(fused[#loc41, #loc42])
#loc229 = loc(fused[#loc43, #loc44])
#loc230 = loc(fused[#loc45, #loc46])
#loc231 = loc(fused[#loc47, #loc48])
#loc232 = loc(fused[#loc49, #loc50])
#loc233 = loc(fused[#loc51, #loc52])
#loc234 = loc(fused[#loc53, #loc54])
#loc235 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc236 = loc(fused[#loc60, #loc58])
#loc237 = loc(fused[#loc61, #loc62])
#loc238 = loc(fused[#loc64, #loc63])
#loc239 = loc(fused[#loc65, #loc66])
#loc240 = loc(fused[#loc71, #loc70])
#loc241 = loc(fused[#loc73, #loc74])
#loc242 = loc(fused[#loc75, #loc76])
#loc243 = loc(fused[#loc77, #loc78])
#loc244 = loc(fused[#loc81, #loc79])
#loc245 = loc(fused[#loc83, #loc82])
#loc246 = loc(fused[#loc84, #loc85])
#loc247 = loc(fused[#loc86, #loc87])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc90, #loc91])
#loc250 = loc(fused[#loc92, #loc93])
#loc251 = loc(fused[#loc94, #loc95])
#loc252 = loc(fused[#loc96, #loc97])
#loc253 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc254 = loc(fused[#loc103, #loc101])
#loc255 = loc(fused[#loc104, #loc105])
#loc256 = loc(fused[#loc107, #loc106])
#loc257 = loc(fused[#loc108, #loc109])
#loc258 = loc(fused[#loc114, #loc113])
#loc259 = loc(fused[#loc118, #loc119])
#loc260 = loc(fused[#loc120, #loc121])
#loc261 = loc(fused[#loc122, #loc123])
#loc262 = loc(fused[#loc126, #loc124])
#loc263 = loc(fused[#loc127, #loc128])
#loc264 = loc(fused[#loc129, #loc130])
#loc265 = loc(fused[#loc131, #loc132])
#loc266 = loc(fused[#loc136, #loc137])
#loc267 = loc(fused[#loc138, #loc139, #loc140, #loc132])
#loc268 = loc(fused[#loc143, #loc144])
#loc269 = loc(fused[#loc147, #loc148])
#loc270 = loc(fused[#loc149, #loc150])
#loc271 = loc(fused[#loc151, #loc152])
#loc272 = loc(fused[#loc153, #loc154])
#loc273 = loc(fused[#loc155, #loc156])
#loc274 = loc(fused[#loc157, #loc158])
#loc275 = loc(fused[#loc159, #loc160])
#loc276 = loc(fused[#loc162, #loc164])
#loc277 = loc(fused[#loc165, #loc166, #loc167, #loc158])
#loc278 = loc(fused[#loc170, #loc168])
#loc279 = loc(fused[#loc171, #loc172])
#loc280 = loc(fused[#loc174, #loc173])
#loc281 = loc(fused[#loc175, #loc176])
#loc282 = loc(fused[#loc181, #loc180])
#loc283 = loc(fused[#loc183, #loc184])
#loc284 = loc(fused[#loc187, #loc188])
#loc285 = loc(fused[#loc189, #loc190])
#loc286 = loc(fused[#loc195, #loc196])
#loc289 = loc(fused[#loc212, #loc211])
