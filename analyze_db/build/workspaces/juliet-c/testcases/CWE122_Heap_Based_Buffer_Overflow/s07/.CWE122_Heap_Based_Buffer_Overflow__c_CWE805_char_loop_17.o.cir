!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc167)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc170)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc173)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc174)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb2 loc(#loc177)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc179)
    cir.brcond %8 ^bb3, ^bb11 loc(#loc27)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc180)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc29)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc30)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc181)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc182)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc187)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc40)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc42)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // pred: ^bb7
    %23 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc43)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc22)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %29 = cir.unary(inc, %28) nsw : !s32i, !s32i loc(#loc48)
    cir.store %29, %2 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb2 loc(#loc177)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc190)
  ^bb13:  // pred: ^bb12
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc52)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc53)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc53)
    cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc191)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc57)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc58)
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    cir.br ^bb14 loc(#loc193)
  ^bb14:  // pred: ^bb13
    %44 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc63)
    cir.store %45, %0 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb15 loc(#loc193)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %46 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc66)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc195)
    cir.brcond %49 ^bb16, ^bb20 loc(#loc67)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc196)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %51 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc70)
    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc70)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %55 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc73)
    cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    cir.br ^bb18 loc(#loc62)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc62)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc76)
    cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    cir.br ^bb15 loc(#loc193)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc62)
  ^bb21:  // pred: ^bb20
    %59 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc77)
    %61 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %62 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc79)
    %65 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc199)
    %66 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %67 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    cir.call @free(%68) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc85)
    cir.br ^bb22 loc(#loc50)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc10)
  } loc(#loc171)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc88)
    cir.return loc(#loc87)
  } loc(#loc200)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc205)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb2 loc(#loc208)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %8 ^bb3, ^bb11 loc(#loc108)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc211)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc110)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc111)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc212)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc213)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.br ^bb5 loc(#loc216)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc217)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc121)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc123)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc117)
  ^bb8:  // pred: ^bb7
    %23 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc124)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc219)
    cir.br ^bb9 loc(#loc103)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc103)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %29 = cir.unary(inc, %28) nsw : !s32i, !s32i loc(#loc129)
    cir.store %29, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb2 loc(#loc208)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc103)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc221)
  ^bb13:  // pred: ^bb12
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc133)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc134)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc134)
    cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc138)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc139)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc139)
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc141)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    cir.br ^bb14 loc(#loc224)
  ^bb14:  // pred: ^bb13
    %44 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc144)
    cir.store %45, %0 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    cir.br ^bb15 loc(#loc224)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %46 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc146)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc147)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc147)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc226)
    cir.brcond %49 ^bb16, ^bb20 loc(#loc148)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc227)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %51 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc151)
    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc151)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %55 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc154)
    cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc228)
    cir.br ^bb18 loc(#loc143)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc143)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc157)
    cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb15 loc(#loc224)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc143)
  ^bb21:  // pred: ^bb20
    %59 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc158)
    %61 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %62 = cir.const #cir.int<100> : !s32i loc(#loc160)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc160)
    %65 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc162)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    %66 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %67 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
    cir.call @free(%68) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
    cir.br ^bb22 loc(#loc131)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc91)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":23:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":49:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":36:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":36:16)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":37:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":37:24)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":25:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":25:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":26:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":26:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":27:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":27:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":34:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:16)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:20)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:18)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":29:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":31:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":31:31)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":31:34)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":31:45)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":31:46)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":31:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:37)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:27)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:28)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:34)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":32:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":33:19)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":33:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":33:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":33:15)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":28:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":35:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":48:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":38:16)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":38:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":38:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":38:33)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":38:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":38:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":39:25)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":39:16)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":39:20)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":39:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":44:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:14)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:21)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:25)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:23)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":42:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":43:30)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":43:23)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":43:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":43:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":43:19)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":43:31)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:31)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":41:30)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":45:23)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":45:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":45:14)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":45:18)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":45:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":46:19)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":46:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":47:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":47:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":84:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":87:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":86:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":86:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":56:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":82:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":69:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":69:16)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":70:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":70:24)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":58:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":58:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":59:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":59:12)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":60:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":60:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":67:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:16)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:20)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:18)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":62:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":64:24)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":64:31)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":64:35)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":64:46)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":64:47)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":64:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:37)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:21)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:27)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:28)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:34)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":65:33)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":66:19)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":66:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":66:14)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":66:15)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:24)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":61:23)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":68:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":81:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":71:16)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":71:24)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":71:29)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":71:33)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":71:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":71:34)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":72:25)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":72:16)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":72:20)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":72:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":77:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:18)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:14)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:21)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:25)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:23)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":75:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":76:30)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":76:23)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":76:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":76:18)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":76:19)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":76:31)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:31)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":74:30)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":78:23)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":78:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":78:14)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":78:18)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":78:19)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":79:19)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":79:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":80:14)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_17.c":80:9)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc7, #loc8])
#loc171 = loc(fused[#loc9, #loc10])
#loc172 = loc(fused[#loc11, #loc12])
#loc173 = loc(fused[#loc13, #loc14])
#loc174 = loc(fused[#loc15, #loc16])
#loc175 = loc(fused[#loc17, #loc18])
#loc176 = loc(fused[#loc20, #loc19])
#loc177 = loc(fused[#loc21, #loc22])
#loc178 = loc(fused[#loc24, #loc23])
#loc179 = loc(fused[#loc25, #loc26])
#loc180 = loc(fused[#loc28, #loc22])
#loc181 = loc(fused[#loc31, #loc32])
#loc182 = loc(fused[#loc30, #loc32])
#loc183 = loc(fused[#loc29, #loc33])
#loc184 = loc(fused[#loc34, #loc33])
#loc185 = loc(fused[#loc35, #loc36])
#loc186 = loc(fused[#loc37, #loc38])
#loc187 = loc(fused[#loc39, #loc36])
#loc188 = loc(fused[#loc44, #loc43])
#loc189 = loc(fused[#loc48, #loc47])
#loc190 = loc(fused[#loc49, #loc50])
#loc191 = loc(fused[#loc55, #loc56])
#loc192 = loc(fused[#loc60, #loc57])
#loc193 = loc(fused[#loc61, #loc62])
#loc194 = loc(fused[#loc64, #loc63])
#loc195 = loc(fused[#loc65, #loc66])
#loc196 = loc(fused[#loc68, #loc62])
#loc197 = loc(fused[#loc71, #loc74])
#loc198 = loc(fused[#loc76, #loc75])
#loc199 = loc(fused[#loc78, #loc77])
#loc200 = loc(fused[#loc86, #loc87])
#loc201 = loc(fused[#loc88, #loc89])
#loc202 = loc(fused[#loc90, #loc91])
#loc203 = loc(fused[#loc92, #loc93])
#loc204 = loc(fused[#loc94, #loc95])
#loc205 = loc(fused[#loc96, #loc97])
#loc206 = loc(fused[#loc98, #loc99])
#loc207 = loc(fused[#loc101, #loc100])
#loc208 = loc(fused[#loc102, #loc103])
#loc209 = loc(fused[#loc105, #loc104])
#loc210 = loc(fused[#loc106, #loc107])
#loc211 = loc(fused[#loc109, #loc103])
#loc212 = loc(fused[#loc112, #loc113])
#loc213 = loc(fused[#loc111, #loc113])
#loc214 = loc(fused[#loc110, #loc114])
#loc215 = loc(fused[#loc115, #loc114])
#loc216 = loc(fused[#loc116, #loc117])
#loc217 = loc(fused[#loc118, #loc119])
#loc218 = loc(fused[#loc120, #loc117])
#loc219 = loc(fused[#loc125, #loc124])
#loc220 = loc(fused[#loc129, #loc128])
#loc221 = loc(fused[#loc130, #loc131])
#loc222 = loc(fused[#loc136, #loc137])
#loc223 = loc(fused[#loc141, #loc138])
#loc224 = loc(fused[#loc142, #loc143])
#loc225 = loc(fused[#loc145, #loc144])
#loc226 = loc(fused[#loc146, #loc147])
#loc227 = loc(fused[#loc149, #loc143])
#loc228 = loc(fused[#loc152, #loc155])
#loc229 = loc(fused[#loc157, #loc156])
#loc230 = loc(fused[#loc159, #loc158])
