!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":467:10)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":467:14)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":467:20)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":467:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc700 = loc(fused[#loc194, #loc195])
#loc701 = loc(fused[#loc196, #loc197])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc630)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc631)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc632)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc633)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc634)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc635)
  cir.func private @close(!s32i) -> !s32i loc(#loc636)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc637)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc638)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc639)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc640)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc25)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc641)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc643)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc33)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc644)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc37)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc647)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc648)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc649)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc650)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc46)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc649)
            cir.scope {
              cir.do {
                %10 = cir.const #cir.int<2> : !s32i loc(#loc51)
                %11 = cir.const #cir.int<1> : !s32i loc(#loc52)
                %12 = cir.const #cir.int<6> : !s32i loc(#loc53)
                %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
                cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc652)
                cir.scope {
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc60)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc654)
                  cir.if %58 {
                    cir.break loc(#loc62)
                  } loc(#loc655)
                } loc(#loc653)
                %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc656)
                %15 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %16 = cir.const #cir.int<16> : !u64i loc(#loc657)
                cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc658)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc70)
                %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc70)
                %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc659)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
                %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc660)
                %25 = cir.const #cir.int<27015> : !s32i loc(#loc78)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc78)
                %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc79)
                %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc661)
                cir.scope {
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                  %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc663)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc664)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc664)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc91)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc665)
                  cir.if %62 {
                    cir.break loc(#loc93)
                  } loc(#loc666)
                } loc(#loc662)
                %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc95)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
                %32 = cir.const #cir.int<3> : !s32i loc(#loc96)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc96)
                %34 = cir.const #cir.int<8> : !u64i loc(#loc96)
                %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc96)
                %36 = cir.const #cir.int<2> : !s32i loc(#loc96)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc96)
                %38 = cir.binop(add, %35, %37) : !u64i loc(#loc96)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc97)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc667)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc98)
                %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
                %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc99)
                cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc668)
                cir.scope {
                  %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc105)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc670)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc106)
                    cir.yield %60 : !cir.bool loc(#loc106)
                  }, false {
                    %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc108)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc671)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc106)
                      cir.yield %64 : !cir.bool loc(#loc106)
                    }, false {
                      %64 = cir.const #false loc(#loc106)
                      cir.yield %64 : !cir.bool loc(#loc106)
                    }) : (!cir.bool) -> !cir.bool loc(#loc106)
                    cir.yield %63 : !cir.bool loc(#loc106)
                  }) : (!cir.bool) -> !cir.bool loc(#loc106)
                  cir.if %59 {
                    cir.break loc(#loc110)
                  } loc(#loc672)
                } loc(#loc669)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc111)
                %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc111)
                %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
                %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc113)
                cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc673)
                %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc114)
                %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
                %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc117)
                %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc114)
                cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc674)
                cir.yield loc(#loc50)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc120)
                cir.condition(%11) loc(#loc120)
              } loc(#loc651)
            } loc(#loc651)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc124)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc676)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc127)
              } loc(#loc677)
            } loc(#loc675)
          } loc(#loc646)
          cir.break loc(#loc128)
        } loc(#loc38)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          cir.break loc(#loc131)
        } loc(#loc129)
        cir.yield loc(#loc35)
      } loc(#loc35)
    } loc(#loc645)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc134)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc680)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc682)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc683)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc148)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc149)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc685)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc686)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc687)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc688)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc690)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc159)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc160)
                    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc161)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc159)
                  } loc(#loc691)
                } loc(#loc689)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc162)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc25)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc25)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc162)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc165)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc166)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc167)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc28)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc28)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc168)
              } loc(#loc684)
            } loc(#loc681)
          } loc(#loc679)
          cir.break loc(#loc169)
        } loc(#loc135)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc172)
          cir.break loc(#loc173)
        } loc(#loc170)
        cir.yield loc(#loc132)
      } loc(#loc132)
    } loc(#loc678)
    cir.return loc(#loc30)
  } loc(#loc642)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc693)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc176)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc694)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc178)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc695)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc180)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc696)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc182)
    cir.return loc(#loc175)
  } loc(#loc692)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc697)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc698)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc191)
  cir.func @main(%arg0: !s32i loc(fused[#loc194, #loc195]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc196, #loc197])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc700)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc701)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc193)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc198)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc199)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc200)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc200)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc201)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc188)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc702)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_good() : () -> () loc(#loc203)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc189)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc190)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc703)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_bad() : () -> () loc(#loc207)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc191)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc210)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc704)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc704)
    cir.return %17 : !s32i loc(#loc704)
  } loc(#loc699)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc212)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc706)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc217)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc707)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc221)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc710)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc711)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc712)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc713)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc230)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc230)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc712)
            cir.scope {
              cir.do {
                %10 = cir.const #cir.int<2> : !s32i loc(#loc235)
                %11 = cir.const #cir.int<1> : !s32i loc(#loc236)
                %12 = cir.const #cir.int<6> : !s32i loc(#loc237)
                %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
                cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc715)
                cir.scope {
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc244)
                  %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc244)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc717)
                  cir.if %58 {
                    cir.break loc(#loc246)
                  } loc(#loc718)
                } loc(#loc716)
                %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc719)
                %15 = cir.const #cir.int<0> : !s32i loc(#loc249)
                %16 = cir.const #cir.int<16> : !u64i loc(#loc720)
                cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc721)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc254)
                %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc254)
                %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc722)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc256)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc256)
                %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc257)
                %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc723)
                %25 = cir.const #cir.int<27015> : !s32i loc(#loc260)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc260)
                %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc261)
                %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc724)
                cir.scope {
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                  %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc726)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc727)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc727)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc271)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc272)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc272)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc728)
                  cir.if %62 {
                    cir.break loc(#loc274)
                  } loc(#loc729)
                } loc(#loc725)
                %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc275)
                %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc276)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc276)
                %32 = cir.const #cir.int<3> : !s32i loc(#loc277)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc277)
                %34 = cir.const #cir.int<8> : !u64i loc(#loc277)
                %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc277)
                %36 = cir.const #cir.int<2> : !s32i loc(#loc277)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc277)
                %38 = cir.binop(add, %35, %37) : !u64i loc(#loc277)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc278)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc278)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc730)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc279)
                %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc280)
                %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc280)
                cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc731)
                cir.scope {
                  %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc286)
                  %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc286)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc733)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc287)
                    cir.yield %60 : !cir.bool loc(#loc287)
                  }, false {
                    %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc289)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc734)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc287)
                      cir.yield %64 : !cir.bool loc(#loc287)
                    }, false {
                      %64 = cir.const #false loc(#loc287)
                      cir.yield %64 : !cir.bool loc(#loc287)
                    }) : (!cir.bool) -> !cir.bool loc(#loc287)
                    cir.yield %63 : !cir.bool loc(#loc287)
                  }) : (!cir.bool) -> !cir.bool loc(#loc287)
                  cir.if %59 {
                    cir.break loc(#loc291)
                  } loc(#loc735)
                } loc(#loc732)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc292)
                %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc292)
                %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc294)
                %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc294)
                cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc736)
                %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc295)
                %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc296)
                %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc298)
                %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc295)
                cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc737)
                cir.yield loc(#loc234)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc301)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc301)
                cir.condition(%11) loc(#loc301)
              } loc(#loc714)
            } loc(#loc714)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc304)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc305)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc305)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc739)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc308)
              } loc(#loc740)
            } loc(#loc738)
          } loc(#loc709)
          cir.break loc(#loc309)
        } loc(#loc222)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc311)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc311)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc312)
          cir.break loc(#loc313)
        } loc(#loc310)
        cir.yield loc(#loc219)
      } loc(#loc219)
    } loc(#loc708)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc316)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc318)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc318)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc319)
          cir.break loc(#loc320)
        } loc(#loc317)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc743)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc328)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc745)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc746)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc332)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc333)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc333)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc747)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc331)
                  cir.yield %14 : !cir.bool loc(#loc331)
                }, false {
                  %14 = cir.const #false loc(#loc331)
                  cir.yield %14 : !cir.bool loc(#loc331)
                }) : (!cir.bool) -> !cir.bool loc(#loc331)
                cir.yield %13 : !cir.bool loc(#loc331)
              }, false {
                %9 = cir.const #false loc(#loc331)
                cir.yield %9 : !cir.bool loc(#loc331)
              }) : (!cir.bool) -> !cir.bool loc(#loc331)
              cir.if %8 {
                %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc337)
                %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc338)
                %11 = cir.const #cir.int<1> : !u64i loc(#loc749)
                %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc750)
                %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc337)
                %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc751)
                cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc752)
                cir.scope {
                  %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc345)
                  %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc346)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc346)
                  %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc754)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc348)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc349)
                    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc350)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc348)
                  } loc(#loc755)
                } loc(#loc753)
                %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc351)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc352)
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc353)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc353)
                %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc351)
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc354)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc355)
                %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc356)
                %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
                %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc357)
                cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc356)
              } else {
                %9 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc212)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc212)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc358)
              } loc(#loc748)
            } loc(#loc744)
          } loc(#loc742)
          cir.break loc(#loc359)
        } loc(#loc321)
        cir.yield loc(#loc314)
      } loc(#loc314)
    } loc(#loc741)
    cir.return loc(#loc214)
  } loc(#loc705)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc757)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc364)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc364)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc758)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc368)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc761)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc762)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc763)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc764)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc377)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc377)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc763)
            cir.scope {
              cir.do {
                %10 = cir.const #cir.int<2> : !s32i loc(#loc382)
                %11 = cir.const #cir.int<1> : !s32i loc(#loc383)
                %12 = cir.const #cir.int<6> : !s32i loc(#loc384)
                %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc385)
                cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc766)
                cir.scope {
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc390)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc391)
                  %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc391)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc768)
                  cir.if %58 {
                    cir.break loc(#loc393)
                  } loc(#loc769)
                } loc(#loc767)
                %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc770)
                %15 = cir.const #cir.int<0> : !s32i loc(#loc396)
                %16 = cir.const #cir.int<16> : !u64i loc(#loc771)
                cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc772)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc401)
                %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc401)
                %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc773)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc403)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc403)
                %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc404)
                %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc774)
                %25 = cir.const #cir.int<27015> : !s32i loc(#loc407)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc407)
                %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc408)
                %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc775)
                cir.scope {
                  %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                  %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc777)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc778)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc778)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc418)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc419)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc419)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc779)
                  cir.if %62 {
                    cir.break loc(#loc421)
                  } loc(#loc780)
                } loc(#loc776)
                %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc422)
                %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc423)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc423)
                %32 = cir.const #cir.int<3> : !s32i loc(#loc424)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc424)
                %34 = cir.const #cir.int<8> : !u64i loc(#loc424)
                %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc424)
                %36 = cir.const #cir.int<2> : !s32i loc(#loc424)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc424)
                %38 = cir.binop(add, %35, %37) : !u64i loc(#loc424)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc425)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc425)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc781)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc426)
                %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc427)
                %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc427)
                cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc782)
                cir.scope {
                  %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc433)
                  %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc433)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc784)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc434)
                    cir.yield %60 : !cir.bool loc(#loc434)
                  }, false {
                    %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc435)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc436)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc785)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc434)
                      cir.yield %64 : !cir.bool loc(#loc434)
                    }, false {
                      %64 = cir.const #false loc(#loc434)
                      cir.yield %64 : !cir.bool loc(#loc434)
                    }) : (!cir.bool) -> !cir.bool loc(#loc434)
                    cir.yield %63 : !cir.bool loc(#loc434)
                  }) : (!cir.bool) -> !cir.bool loc(#loc434)
                  cir.if %59 {
                    cir.break loc(#loc438)
                  } loc(#loc786)
                } loc(#loc783)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc439)
                %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc439)
                %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc440)
                %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc441)
                %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc441)
                cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc787)
                %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc442)
                %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc443)
                %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc444)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc445)
                %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc442)
                cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc788)
                cir.yield loc(#loc381)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc448)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc448)
                cir.condition(%11) loc(#loc448)
              } loc(#loc765)
            } loc(#loc765)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc451)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc452)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc452)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc790)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc454)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc455)
              } loc(#loc791)
            } loc(#loc789)
          } loc(#loc760)
          cir.break loc(#loc456)
        } loc(#loc369)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc458)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc458)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc459)
          cir.break loc(#loc460)
        } loc(#loc457)
        cir.yield loc(#loc366)
      } loc(#loc366)
    } loc(#loc759)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc463)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc794)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc471)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc796)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc797)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc475)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc476)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc476)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc798)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc474)
                  cir.yield %14 : !cir.bool loc(#loc474)
                }, false {
                  %14 = cir.const #false loc(#loc474)
                  cir.yield %14 : !cir.bool loc(#loc474)
                }) : (!cir.bool) -> !cir.bool loc(#loc474)
                cir.yield %13 : !cir.bool loc(#loc474)
              }, false {
                %9 = cir.const #false loc(#loc474)
                cir.yield %9 : !cir.bool loc(#loc474)
              }) : (!cir.bool) -> !cir.bool loc(#loc474)
              cir.if %8 {
                %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc480)
                %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc481)
                %11 = cir.const #cir.int<1> : !u64i loc(#loc800)
                %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc801)
                %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc480)
                %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc802)
                cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc803)
                cir.scope {
                  %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc488)
                  %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc489)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc489)
                  %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc805)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc491)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc492)
                    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc493)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc491)
                  } loc(#loc806)
                } loc(#loc804)
                %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc494)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc495)
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc496)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc496)
                %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc494)
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc497)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc498)
                %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc499)
                %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc500)
                %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc500)
                cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc499)
              } else {
                %9 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc501)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc501)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc502)
              } loc(#loc799)
            } loc(#loc795)
          } loc(#loc793)
          cir.break loc(#loc503)
        } loc(#loc464)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc505)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc505)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc506)
          cir.break loc(#loc507)
        } loc(#loc504)
        cir.yield loc(#loc461)
      } loc(#loc461)
    } loc(#loc792)
    cir.return loc(#loc361)
  } loc(#loc756)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc808)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc512)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc512)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc809)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc516)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc518)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc518)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc519)
          cir.break loc(#loc520)
        } loc(#loc517)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc522)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc522)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc811)
          cir.break loc(#loc524)
        } loc(#loc521)
        cir.yield loc(#loc514)
      } loc(#loc514)
    } loc(#loc810)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc527)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc814)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc535)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc816)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc817)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc541)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc542)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc819)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc820)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc541)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc821)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc822)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc549)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc550)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc550)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc824)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc552)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc553)
                    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc554)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc552)
                  } loc(#loc825)
                } loc(#loc823)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc555)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc556)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc557)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc557)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc555)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc558)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc559)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc560)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc561)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc561)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc560)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc562)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc562)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc563)
              } loc(#loc818)
            } loc(#loc815)
          } loc(#loc813)
          cir.break loc(#loc564)
        } loc(#loc528)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc566)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc566)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc567)
          cir.break loc(#loc568)
        } loc(#loc565)
        cir.yield loc(#loc525)
      } loc(#loc525)
    } loc(#loc812)
    cir.return loc(#loc509)
  } loc(#loc807)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc827)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc573)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc573)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc828)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc577)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc579)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc579)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc830)
          cir.break loc(#loc581)
        } loc(#loc578)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc583)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc583)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc584)
          cir.break loc(#loc585)
        } loc(#loc582)
        cir.yield loc(#loc575)
      } loc(#loc575)
    } loc(#loc829)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc588)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc833)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc596)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc835)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc836)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc602)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc603)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc838)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc839)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc602)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc840)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc841)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc610)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc611)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc611)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc843)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc613)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc614)
                    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc615)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc613)
                  } loc(#loc844)
                } loc(#loc842)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc616)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc617)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc618)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc618)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc616)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc619)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc620)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc621)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc622)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc622)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc621)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc623)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc623)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc624)
              } loc(#loc837)
            } loc(#loc834)
          } loc(#loc832)
          cir.break loc(#loc625)
        } loc(#loc589)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc627)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc627)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc628)
          cir.break loc(#loc629)
        } loc(#loc626)
        cir.yield loc(#loc586)
      } loc(#loc586)
    } loc(#loc831)
    cir.return loc(#loc570)
  } loc(#loc826)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":181:1)
#loc13 = loc("/usr/include/stdlib.h":183:14)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":117:19)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("/usr/include/stdlib.h":756:1)
#loc22 = loc("/usr/include/stdlib.h":756:70)
#loc23 = loc("/usr/include/string.h":141:1)
#loc24 = loc("/usr/include/string.h":142:14)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":133:30)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":139:23)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":50:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":148:1)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":52:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":52:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":54:12)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":54:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":55:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":119:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":55:12)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":57:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":58:5)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":113:5)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":63:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":63:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":64:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":64:28)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":65:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":65:32)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":66:9)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":66:41)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":67:9)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":102:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:36)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:45)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:58)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:29)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:69)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":78:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":81:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":78:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":78:34)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":79:13)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":80:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:20)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:21)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:30)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:33)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:47)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:48)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":83:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":83:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:59)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:38)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:46)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":89:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:25)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:58)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:59)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:68)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:82)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:17)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:88)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":87:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":88:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:31)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:46)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:59)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:77)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:80)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:26)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:81)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":96:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:31)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:44)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:47)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:61)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":94:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":95:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":98:39)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":98:25)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":98:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:20)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:28)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:41)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:47)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:48)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":102:16)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":103:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":106:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":103:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":103:30)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":104:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":105:26)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":105:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":114:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":115:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":117:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":118:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":120:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":147:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":120:12)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":122:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":123:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":141:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":124:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":124:16)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":140:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:20)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:39)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":129:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":136:9)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":138:9)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:32)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:39)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:44)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:55)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:56)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:45)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:29)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:35)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:36)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:42)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:41)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":133:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":133:20)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":134:23)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":134:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":135:13)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":135:18)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":139:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":142:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":143:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":145:19)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":145:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":146:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":450:1)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":456:1)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":452:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":452:14)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":453:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":453:14)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":454:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":454:14)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":455:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":455:14)
#loc184 = loc("/usr/include/stdlib.h":575:1)
#loc185 = loc("/usr/include/stdlib.h":575:41)
#loc186 = loc("/usr/include/time.h":76:1)
#loc187 = loc("/usr/include/time.h":76:38)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":472:15)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":474:15)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":477:15)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":479:15)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":467:1)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":482:1)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":468:1)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":470:27)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":470:22)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":470:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":472:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":473:5)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":473:71)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":474:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":477:5)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":478:5)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":478:70)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":479:5)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":481:12)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":481:5)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":248:23)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":155:1)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":253:1)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":157:5)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":157:12)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":159:12)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":159:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":160:5)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":224:5)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":160:12)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":162:5)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":163:5)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":218:5)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":168:9)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":168:13)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":169:9)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":169:28)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":170:9)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":170:32)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":171:9)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":171:41)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":172:9)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":207:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:36)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:45)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:58)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:29)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:69)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":183:13)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":186:13)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":183:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":183:34)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":184:13)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":185:17)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:20)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:21)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:30)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:33)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:47)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:13)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:48)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":188:34)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":188:13)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:49)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:39)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:59)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:38)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:32)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:46)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":194:13)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:25)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:58)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:59)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:68)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:82)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:88)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":192:13)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":193:17)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:31)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:46)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:59)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:77)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:80)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:26)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:13)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:81)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":201:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:17)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:31)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:44)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:47)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:61)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":199:13)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":200:17)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":203:39)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":203:25)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":203:13)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:20)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:28)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:41)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:47)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:13)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:48)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":207:16)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":208:9)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":211:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":208:13)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":208:30)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":209:9)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":210:26)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":210:13)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":219:5)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":220:5)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":222:19)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":222:9)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":223:9)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":225:5)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":252:5)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":225:12)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":227:5)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":229:19)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":229:9)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":230:9)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":231:5)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":232:5)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":250:5)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":233:9)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":233:16)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:9)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":249:9)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:13)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:20)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:39)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:41)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:44)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:51)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":238:9)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":245:9)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":247:9)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:32)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:39)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:44)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:55)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:56)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:13)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:13)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:45)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:17)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:29)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:35)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:36)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:42)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:41)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":242:13)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":242:20)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":242:30)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":243:23)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":243:13)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":244:13)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":244:18)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":248:13)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":251:5)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":256:1)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":354:1)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":258:5)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":258:12)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":260:12)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":260:5)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":261:5)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":325:5)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":261:12)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":263:5)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":264:5)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":319:5)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":269:9)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":269:13)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":270:9)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":270:28)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":271:9)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":271:32)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":272:9)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":272:41)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":273:9)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":308:17)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:36)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:45)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:58)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:29)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:13)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:69)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":284:13)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":287:13)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":284:17)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":284:34)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":285:13)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":286:17)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:20)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:21)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:30)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:33)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:47)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:13)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:48)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":289:34)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":289:13)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:49)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:39)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:13)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:59)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:38)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:32)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:13)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:46)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:13)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":295:13)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:25)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:58)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:59)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:68)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:82)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:17)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:88)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":293:13)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":294:17)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:31)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:46)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:59)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:77)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:80)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:26)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:13)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:81)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:13)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":302:13)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:17)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:31)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:44)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:47)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:61)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":300:13)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":301:17)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":304:39)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":304:25)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":304:13)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:20)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:28)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:41)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:47)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:13)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:48)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":308:16)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":309:9)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":312:9)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":309:13)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":309:30)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":310:9)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":311:26)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":311:13)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":320:5)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":321:5)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":323:19)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":323:9)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":324:9)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":326:5)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":353:5)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":326:12)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":328:5)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":329:5)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":347:5)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":330:9)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":330:16)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:9)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":346:9)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:13)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:20)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:39)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:41)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:44)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:51)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":335:9)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":342:9)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":344:9)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:32)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:39)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:44)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:55)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:56)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:13)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:13)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:45)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:17)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:29)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:35)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:36)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:42)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:41)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":339:13)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":339:20)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":339:30)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":340:23)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":340:13)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":341:13)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":341:18)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":345:23)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":345:13)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":348:5)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":349:5)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":351:19)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":351:9)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":352:9)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":357:1)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":401:1)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":359:5)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":359:12)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":361:12)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":361:5)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":362:5)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":372:5)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":362:12)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":364:5)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":366:19)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":366:9)
#loc520 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":367:9)
#loc521 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":368:5)
#loc522 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":370:16)
#loc523 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":370:9)
#loc524 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":371:9)
#loc525 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":373:5)
#loc526 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":400:5)
#loc527 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":373:12)
#loc528 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":375:5)
#loc529 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":376:5)
#loc530 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":394:5)
#loc531 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":377:9)
#loc532 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":377:16)
#loc533 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:9)
#loc534 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":393:9)
#loc535 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:13)
#loc536 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:20)
#loc537 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:39)
#loc538 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":382:9)
#loc539 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":389:9)
#loc540 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":391:9)
#loc541 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:32)
#loc542 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:39)
#loc543 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:44)
#loc544 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:55)
#loc545 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:56)
#loc546 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:13)
#loc547 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:13)
#loc548 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:45)
#loc549 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:17)
#loc550 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:29)
#loc551 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:35)
#loc552 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:36)
#loc553 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:42)
#loc554 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:41)
#loc555 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":386:13)
#loc556 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":386:20)
#loc557 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":386:30)
#loc558 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":387:23)
#loc559 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":387:13)
#loc560 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":388:13)
#loc561 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":388:18)
#loc562 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":392:23)
#loc563 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":392:13)
#loc564 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":395:5)
#loc565 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":396:5)
#loc566 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":398:19)
#loc567 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":398:9)
#loc568 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":399:9)
#loc569 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":404:1)
#loc570 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":448:1)
#loc571 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":406:5)
#loc572 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":406:12)
#loc573 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":408:12)
#loc574 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":408:5)
#loc575 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":409:5)
#loc576 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":419:5)
#loc577 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":409:12)
#loc578 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":411:5)
#loc579 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":413:16)
#loc580 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":413:9)
#loc581 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":414:9)
#loc582 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":415:5)
#loc583 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":417:19)
#loc584 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":417:9)
#loc585 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":418:9)
#loc586 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":420:5)
#loc587 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":447:5)
#loc588 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":420:12)
#loc589 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":422:5)
#loc590 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":423:5)
#loc591 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":441:5)
#loc592 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":424:9)
#loc593 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":424:16)
#loc594 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:9)
#loc595 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":440:9)
#loc596 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:13)
#loc597 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:20)
#loc598 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:39)
#loc599 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":429:9)
#loc600 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":436:9)
#loc601 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":438:9)
#loc602 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:32)
#loc603 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:39)
#loc604 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:44)
#loc605 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:55)
#loc606 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:56)
#loc607 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:13)
#loc608 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:13)
#loc609 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:45)
#loc610 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:17)
#loc611 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:29)
#loc612 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:35)
#loc613 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:36)
#loc614 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:42)
#loc615 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:41)
#loc616 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":433:13)
#loc617 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":433:20)
#loc618 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":433:30)
#loc619 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":434:23)
#loc620 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":434:13)
#loc621 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":435:13)
#loc622 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":435:18)
#loc623 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":439:23)
#loc624 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":439:13)
#loc625 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":442:5)
#loc626 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":443:5)
#loc627 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":445:19)
#loc628 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":445:9)
#loc629 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":446:9)
#loc630 = loc(fused[#loc1, #loc2])
#loc631 = loc(fused[#loc3, #loc4])
#loc632 = loc(fused[#loc6, #loc7])
#loc633 = loc(fused[#loc8, #loc9])
#loc634 = loc(fused[#loc10, #loc11])
#loc635 = loc(fused[#loc12, #loc13])
#loc636 = loc(fused[#loc14, #loc15])
#loc637 = loc(fused[#loc16, #loc17])
#loc638 = loc(fused[#loc19, #loc20])
#loc639 = loc(fused[#loc21, #loc22])
#loc640 = loc(fused[#loc23, #loc24])
#loc641 = loc(fused[#loc26, #loc27])
#loc642 = loc(fused[#loc29, #loc30])
#loc643 = loc(fused[#loc31, #loc32])
#loc644 = loc(fused[#loc34, #loc33])
#loc645 = loc(fused[#loc35, #loc36])
#loc646 = loc(fused[#loc39, #loc40])
#loc647 = loc(fused[#loc41, #loc42])
#loc648 = loc(fused[#loc43, #loc44])
#loc649 = loc(fused[#loc45, #loc46])
#loc650 = loc(fused[#loc47, #loc48])
#loc651 = loc(fused[#loc49, #loc50])
#loc652 = loc(fused[#loc55, #loc56])
#loc653 = loc(fused[#loc57, #loc58])
#loc654 = loc(fused[#loc59, #loc60])
#loc655 = loc(fused[#loc61, #loc58])
#loc656 = loc(fused[#loc63, #loc64])
#loc657 = loc(fused[#loc66, #loc67])
#loc658 = loc(fused[#loc68, #loc69])
#loc659 = loc(fused[#loc72, #loc70])
#loc660 = loc(fused[#loc76, #loc77])
#loc661 = loc(fused[#loc81, #loc82])
#loc662 = loc(fused[#loc83, #loc84])
#loc663 = loc(fused[#loc86, #loc87])
#loc664 = loc(fused[#loc88, #loc89])
#loc665 = loc(fused[#loc90, #loc91])
#loc666 = loc(fused[#loc92, #loc84])
#loc667 = loc(fused[#loc96, #loc97])
#loc668 = loc(fused[#loc100, #loc101])
#loc669 = loc(fused[#loc102, #loc103])
#loc670 = loc(fused[#loc104, #loc105])
#loc671 = loc(fused[#loc107, #loc108])
#loc672 = loc(fused[#loc109, #loc103])
#loc673 = loc(fused[#loc113, #loc111])
#loc674 = loc(fused[#loc118, #loc119])
#loc675 = loc(fused[#loc121, #loc122])
#loc676 = loc(fused[#loc123, #loc124])
#loc677 = loc(fused[#loc125, #loc122])
#loc678 = loc(fused[#loc132, #loc133])
#loc679 = loc(fused[#loc136, #loc137])
#loc680 = loc(fused[#loc138, #loc139])
#loc681 = loc(fused[#loc140, #loc141])
#loc682 = loc(fused[#loc143, #loc144])
#loc683 = loc(fused[#loc142, #loc144])
#loc684 = loc(fused[#loc145, #loc146, #loc147, #loc141])
#loc685 = loc(fused[#loc150, #loc151])
#loc686 = loc(fused[#loc149, #loc151])
#loc687 = loc(fused[#loc148, #loc152])
#loc688 = loc(fused[#loc153, #loc152])
#loc689 = loc(fused[#loc154, #loc155])
#loc690 = loc(fused[#loc156, #loc157])
#loc691 = loc(fused[#loc158, #loc155])
#loc692 = loc(fused[#loc174, #loc175])
#loc693 = loc(fused[#loc176, #loc177])
#loc694 = loc(fused[#loc178, #loc179])
#loc695 = loc(fused[#loc180, #loc181])
#loc696 = loc(fused[#loc182, #loc183])
#loc697 = loc(fused[#loc184, #loc185])
#loc698 = loc(fused[#loc186, #loc187])
#loc699 = loc(fused[#loc192, #loc193])
#loc702 = loc(fused[#loc203, #loc204])
#loc703 = loc(fused[#loc207, #loc208])
#loc704 = loc(fused[#loc211, #loc210])
#loc705 = loc(fused[#loc213, #loc214])
#loc706 = loc(fused[#loc215, #loc216])
#loc707 = loc(fused[#loc218, #loc217])
#loc708 = loc(fused[#loc219, #loc220])
#loc709 = loc(fused[#loc223, #loc224])
#loc710 = loc(fused[#loc225, #loc226])
#loc711 = loc(fused[#loc227, #loc228])
#loc712 = loc(fused[#loc229, #loc230])
#loc713 = loc(fused[#loc231, #loc232])
#loc714 = loc(fused[#loc233, #loc234])
#loc715 = loc(fused[#loc239, #loc240])
#loc716 = loc(fused[#loc241, #loc242])
#loc717 = loc(fused[#loc243, #loc244])
#loc718 = loc(fused[#loc245, #loc242])
#loc719 = loc(fused[#loc247, #loc248])
#loc720 = loc(fused[#loc250, #loc251])
#loc721 = loc(fused[#loc252, #loc253])
#loc722 = loc(fused[#loc255, #loc254])
#loc723 = loc(fused[#loc258, #loc259])
#loc724 = loc(fused[#loc262, #loc263])
#loc725 = loc(fused[#loc264, #loc265])
#loc726 = loc(fused[#loc267, #loc268])
#loc727 = loc(fused[#loc269, #loc270])
#loc728 = loc(fused[#loc271, #loc272])
#loc729 = loc(fused[#loc273, #loc265])
#loc730 = loc(fused[#loc277, #loc278])
#loc731 = loc(fused[#loc281, #loc282])
#loc732 = loc(fused[#loc283, #loc284])
#loc733 = loc(fused[#loc285, #loc286])
#loc734 = loc(fused[#loc288, #loc289])
#loc735 = loc(fused[#loc290, #loc284])
#loc736 = loc(fused[#loc294, #loc292])
#loc737 = loc(fused[#loc299, #loc300])
#loc738 = loc(fused[#loc302, #loc303])
#loc739 = loc(fused[#loc304, #loc305])
#loc740 = loc(fused[#loc306, #loc303])
#loc741 = loc(fused[#loc314, #loc315])
#loc742 = loc(fused[#loc322, #loc323])
#loc743 = loc(fused[#loc324, #loc325])
#loc744 = loc(fused[#loc326, #loc327])
#loc745 = loc(fused[#loc329, #loc330])
#loc746 = loc(fused[#loc328, #loc330])
#loc747 = loc(fused[#loc332, #loc333])
#loc748 = loc(fused[#loc334, #loc335, #loc336, #loc327])
#loc749 = loc(fused[#loc339, #loc340])
#loc750 = loc(fused[#loc338, #loc340])
#loc751 = loc(fused[#loc337, #loc341])
#loc752 = loc(fused[#loc342, #loc341])
#loc753 = loc(fused[#loc343, #loc344])
#loc754 = loc(fused[#loc345, #loc346])
#loc755 = loc(fused[#loc347, #loc344])
#loc756 = loc(fused[#loc360, #loc361])
#loc757 = loc(fused[#loc362, #loc363])
#loc758 = loc(fused[#loc365, #loc364])
#loc759 = loc(fused[#loc366, #loc367])
#loc760 = loc(fused[#loc370, #loc371])
#loc761 = loc(fused[#loc372, #loc373])
#loc762 = loc(fused[#loc374, #loc375])
#loc763 = loc(fused[#loc376, #loc377])
#loc764 = loc(fused[#loc378, #loc379])
#loc765 = loc(fused[#loc380, #loc381])
#loc766 = loc(fused[#loc386, #loc387])
#loc767 = loc(fused[#loc388, #loc389])
#loc768 = loc(fused[#loc390, #loc391])
#loc769 = loc(fused[#loc392, #loc389])
#loc770 = loc(fused[#loc394, #loc395])
#loc771 = loc(fused[#loc397, #loc398])
#loc772 = loc(fused[#loc399, #loc400])
#loc773 = loc(fused[#loc402, #loc401])
#loc774 = loc(fused[#loc405, #loc406])
#loc775 = loc(fused[#loc409, #loc410])
#loc776 = loc(fused[#loc411, #loc412])
#loc777 = loc(fused[#loc414, #loc415])
#loc778 = loc(fused[#loc416, #loc417])
#loc779 = loc(fused[#loc418, #loc419])
#loc780 = loc(fused[#loc420, #loc412])
#loc781 = loc(fused[#loc424, #loc425])
#loc782 = loc(fused[#loc428, #loc429])
#loc783 = loc(fused[#loc430, #loc431])
#loc784 = loc(fused[#loc432, #loc433])
#loc785 = loc(fused[#loc435, #loc436])
#loc786 = loc(fused[#loc437, #loc431])
#loc787 = loc(fused[#loc441, #loc439])
#loc788 = loc(fused[#loc446, #loc447])
#loc789 = loc(fused[#loc449, #loc450])
#loc790 = loc(fused[#loc451, #loc452])
#loc791 = loc(fused[#loc453, #loc450])
#loc792 = loc(fused[#loc461, #loc462])
#loc793 = loc(fused[#loc465, #loc466])
#loc794 = loc(fused[#loc467, #loc468])
#loc795 = loc(fused[#loc469, #loc470])
#loc796 = loc(fused[#loc472, #loc473])
#loc797 = loc(fused[#loc471, #loc473])
#loc798 = loc(fused[#loc475, #loc476])
#loc799 = loc(fused[#loc477, #loc478, #loc479, #loc470])
#loc800 = loc(fused[#loc482, #loc483])
#loc801 = loc(fused[#loc481, #loc483])
#loc802 = loc(fused[#loc480, #loc484])
#loc803 = loc(fused[#loc485, #loc484])
#loc804 = loc(fused[#loc486, #loc487])
#loc805 = loc(fused[#loc488, #loc489])
#loc806 = loc(fused[#loc490, #loc487])
#loc807 = loc(fused[#loc508, #loc509])
#loc808 = loc(fused[#loc510, #loc511])
#loc809 = loc(fused[#loc513, #loc512])
#loc810 = loc(fused[#loc514, #loc515])
#loc811 = loc(fused[#loc523, #loc522])
#loc812 = loc(fused[#loc525, #loc526])
#loc813 = loc(fused[#loc529, #loc530])
#loc814 = loc(fused[#loc531, #loc532])
#loc815 = loc(fused[#loc533, #loc534])
#loc816 = loc(fused[#loc536, #loc537])
#loc817 = loc(fused[#loc535, #loc537])
#loc818 = loc(fused[#loc538, #loc539, #loc540, #loc534])
#loc819 = loc(fused[#loc543, #loc544])
#loc820 = loc(fused[#loc542, #loc544])
#loc821 = loc(fused[#loc541, #loc545])
#loc822 = loc(fused[#loc546, #loc545])
#loc823 = loc(fused[#loc547, #loc548])
#loc824 = loc(fused[#loc549, #loc550])
#loc825 = loc(fused[#loc551, #loc548])
#loc826 = loc(fused[#loc569, #loc570])
#loc827 = loc(fused[#loc571, #loc572])
#loc828 = loc(fused[#loc574, #loc573])
#loc829 = loc(fused[#loc575, #loc576])
#loc830 = loc(fused[#loc580, #loc579])
#loc831 = loc(fused[#loc586, #loc587])
#loc832 = loc(fused[#loc590, #loc591])
#loc833 = loc(fused[#loc592, #loc593])
#loc834 = loc(fused[#loc594, #loc595])
#loc835 = loc(fused[#loc597, #loc598])
#loc836 = loc(fused[#loc596, #loc598])
#loc837 = loc(fused[#loc599, #loc600, #loc601, #loc595])
#loc838 = loc(fused[#loc604, #loc605])
#loc839 = loc(fused[#loc603, #loc605])
#loc840 = loc(fused[#loc602, #loc606])
#loc841 = loc(fused[#loc607, #loc606])
#loc842 = loc(fused[#loc608, #loc609])
#loc843 = loc(fused[#loc610, #loc611])
#loc844 = loc(fused[#loc612, #loc609])
