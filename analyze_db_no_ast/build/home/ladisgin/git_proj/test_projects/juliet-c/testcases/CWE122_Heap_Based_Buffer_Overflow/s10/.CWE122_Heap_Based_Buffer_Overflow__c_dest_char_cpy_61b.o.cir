!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":23:73)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":23:80)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":37:77)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":37:84)
#loc60 = loc(fused[#loc7, #loc8])
#loc71 = loc(fused[#loc33, #loc34])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc58)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc61)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc62)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc66)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc20)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc22)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc24)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
      } loc(#loc67)
    } loc(#loc65)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc25)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc28)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc68)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.return %15 : !cir.ptr<!s8i> loc(#loc69)
  } loc(#loc59)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b_goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc33, #loc34])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc71)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc36)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc37)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc72)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc73)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc77)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc46)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc48)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc50)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc48)
      } loc(#loc78)
    } loc(#loc76)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc51)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc79)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.return %15 : !cir.ptr<!s8i> loc(#loc80)
  } loc(#loc70)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":30:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":24:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":26:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":26:27)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":26:30)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":26:41)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":26:42)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":26:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:14)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:23)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:24)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:30)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":27:29)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":28:15)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":28:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":28:10)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":28:11)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":29:12)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":29:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":37:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":44:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":38:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":40:20)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":40:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":40:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":40:42)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":40:43)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":40:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:17)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:23)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:30)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":41:29)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":42:15)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":42:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":42:10)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":42:11)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":43:12)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_61b.c":43:5)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc61 = loc(fused[#loc12, #loc13])
#loc62 = loc(fused[#loc11, #loc13])
#loc63 = loc(fused[#loc10, #loc14])
#loc64 = loc(fused[#loc15, #loc14])
#loc65 = loc(fused[#loc16, #loc17])
#loc66 = loc(fused[#loc18, #loc19])
#loc67 = loc(fused[#loc21, #loc17])
#loc68 = loc(fused[#loc26, #loc25])
#loc69 = loc(fused[#loc30, #loc29])
#loc70 = loc(fused[#loc31, #loc32])
#loc72 = loc(fused[#loc38, #loc39])
#loc73 = loc(fused[#loc37, #loc39])
#loc74 = loc(fused[#loc36, #loc40])
#loc75 = loc(fused[#loc41, #loc40])
#loc76 = loc(fused[#loc42, #loc43])
#loc77 = loc(fused[#loc44, #loc45])
#loc78 = loc(fused[#loc47, #loc43])
#loc79 = loc(fused[#loc52, #loc51])
#loc80 = loc(fused[#loc56, #loc55])
