!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":33:23)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":33:28)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":36:13)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":55:27)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":55:32)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":73:27)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":73:32)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":76:13)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:19)
#true = #cir.bool<true> : !cir.bool
#loc82 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc80)
  cir.func internal private @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc82)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc8)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc8)
    cir.brcond %4 ^bb1, ^bb2 loc(#loc8)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc8)
    %7 = cir.const #cir.int<30> : !s32i loc(#loc8)
    %8 = cir.shift(left, %6 : !u32i, %7 : !s32i) -> !u32i loc(#loc8)
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc8)
    %11 = cir.const #cir.int<15> : !s32i loc(#loc8)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc8)
    %13 = cir.binop(xor, %8, %12) : !u32i loc(#loc8)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc8)
    %16 = cir.binop(xor, %13, %15) : !u32i loc(#loc8)
    cir.br ^bb3(%16 : !u32i) loc(#loc8)
  ^bb2:  // pred: ^bb0
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
    %19 = cir.const #cir.int<30> : !s32i loc(#loc8)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc8)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc8)
    %23 = cir.const #cir.int<15> : !s32i loc(#loc8)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc8)
    %25 = cir.binop(xor, %20, %24) : !u32i loc(#loc8)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc8)
    %28 = cir.binop(xor, %25, %27) : !u32i loc(#loc8)
    %29 = cir.unary(minus, %28) : !u32i, !u32i loc(#loc8)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc8)
    %32 = cir.binop(sub, %29, %31) : !u32i loc(#loc8)
    cir.br ^bb3(%32 : !u32i) loc(#loc8)
  ^bb3(%33: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":36:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    %34 = cir.cast(integral, %33 : !u32i), !s32i loc(#loc8)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %34, %35 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.return loc(#loc4)
  } loc(#loc81)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc84)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc14)
  cir.func @_ZN41CWE400_Resource_Exhaustion__rand_sleep_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc87)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc22)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc23)
    %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc24)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc14)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.return loc(#loc16)
  } loc(#loc86)
  cir.func internal private @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc28, #loc29])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc90)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc30)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc31)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.return loc(#loc27)
  } loc(#loc89)
  cir.func internal private @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc38)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc40)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc41)
    %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc42)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.return loc(#loc34)
  } loc(#loc92)
  cir.func internal private @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc96)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc49)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc50)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc50)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %4 ^bb1, ^bb2 loc(#loc50)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc50)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc50)
    %7 = cir.const #cir.int<30> : !s32i loc(#loc50)
    %8 = cir.shift(left, %6 : !u32i, %7 : !s32i) -> !u32i loc(#loc50)
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc50)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc50)
    %11 = cir.const #cir.int<15> : !s32i loc(#loc50)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc50)
    %13 = cir.binop(xor, %8, %12) : !u32i loc(#loc50)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc50)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc50)
    %16 = cir.binop(xor, %13, %15) : !u32i loc(#loc50)
    cir.br ^bb3(%16 : !u32i) loc(#loc50)
  ^bb2:  // pred: ^bb0
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc50)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc50)
    %19 = cir.const #cir.int<30> : !s32i loc(#loc50)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc50)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc50)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc50)
    %23 = cir.const #cir.int<15> : !s32i loc(#loc50)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc50)
    %25 = cir.binop(xor, %20, %24) : !u32i loc(#loc50)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc50)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc50)
    %28 = cir.binop(xor, %25, %27) : !u32i loc(#loc50)
    %29 = cir.unary(minus, %28) : !u32i, !u32i loc(#loc50)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc50)
    %32 = cir.binop(sub, %29, %31) : !u32i loc(#loc50)
    cir.br ^bb3(%32 : !u32i) loc(#loc50)
  ^bb3(%33: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":76:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // pred: ^bb3
    %34 = cir.cast(integral, %33 : !u32i), !s32i loc(#loc50)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    cir.store %34, %35 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.return loc(#loc46)
  } loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc53)
  cir.func internal private @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc59)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc61)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc102)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc66)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %7 = cir.const #cir.int<2000> : !s32i loc(#loc68)
    %8 = cir.cmp(le, %6, %7) : !s32i, !cir.bool loc(#loc103)
    cir.brcond %8 ^bb3, ^bb4 loc(#loc66)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #true loc(#loc66)
    cir.br ^bb5(%9 : !cir.bool) loc(#loc66)
  ^bb4:  // pred: ^bb2
    %10 = cir.const #false loc(#loc66)
    cir.br ^bb5(%10 : !cir.bool) loc(#loc66)
  ^bb5(%11: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:19)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc66)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8(%11 : !cir.bool) loc(#loc66)
  ^bb7:  // pred: ^bb1
    %12 = cir.const #false loc(#loc66)
    cir.br ^bb8(%12 : !cir.bool) loc(#loc66)
  ^bb8(%13: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:19)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // pred: ^bb8
    cir.brcond %13 ^bb10, ^bb11 loc(#loc104)
  ^bb10:  // pred: ^bb9
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc72)
    %16 = cir.call @usleep(%15) : (!u32i) -> !s32i loc(#loc73)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc52)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb12 loc(#loc70)
  ^bb11:  // pred: ^bb9
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc53)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb12 loc(#loc63)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc63)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc55)
  } loc(#loc98)
  cir.func @_ZN41CWE400_Resource_Exhaustion__rand_sleep_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L7goodG2BEv() : () -> () loc(#loc78)
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_43L7goodB2GEv() : () -> () loc(#loc79)
    cir.return loc(#loc77)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":33:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":37:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":34:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":36:5)
#loc10 = loc("/usr/include/unistd.h":480:1)
#loc11 = loc("/usr/include/unistd.h":480:43)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":47:15)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":39:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":48:1)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":41:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":41:9)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":43:14)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":43:13)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":43:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":44:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":46:11)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":46:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":47:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":55:1)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":59:1)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":56:1)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":58:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":58:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":61:1)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":70:1)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":63:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":63:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":65:14)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":65:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":65:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":66:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":68:11)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":68:5)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":69:15)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":69:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":73:1)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":77:1)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":74:1)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":76:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":89:19)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":93:19)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":79:1)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":95:1)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":81:5)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":81:9)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":83:14)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":83:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":83:5)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":84:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":94:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:9)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:17)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:22)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":86:31)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":87:5)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":90:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":92:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":88:15)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":88:9)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":89:9)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":93:9)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":97:1)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":101:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":99:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_43.cpp":100:5)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc83 = loc(fused[#loc9, #loc8])
#loc84 = loc(fused[#loc10, #loc11])
#loc85 = loc(fused[#loc12, #loc13])
#loc86 = loc(fused[#loc15, #loc16])
#loc87 = loc(fused[#loc17, #loc18])
#loc88 = loc(fused[#loc21, #loc19])
#loc89 = loc(fused[#loc26, #loc27])
#loc91 = loc(fused[#loc32, #loc31])
#loc92 = loc(fused[#loc33, #loc34])
#loc93 = loc(fused[#loc35, #loc36])
#loc94 = loc(fused[#loc39, #loc37])
#loc95 = loc(fused[#loc45, #loc46])
#loc97 = loc(fused[#loc51, #loc50])
#loc98 = loc(fused[#loc54, #loc55])
#loc99 = loc(fused[#loc56, #loc57])
#loc100 = loc(fused[#loc60, #loc58])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc64, #loc65])
#loc103 = loc(fused[#loc67, #loc68])
#loc104 = loc(fused[#loc69, #loc70, #loc71, #loc63])
#loc105 = loc(fused[#loc76, #loc77])
