!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc146)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc148)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc151)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc153)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc153)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
      cir.if %5 {
        %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc20)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc5)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc5)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
        %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
        cir.store %11, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %13 = cir.call @fclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc24)
      } loc(#loc154)
    } loc(#loc152)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc157)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc157)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc27)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc27)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %7 = cir.call @fclose(%6) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc31)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc10)
  } loc(#loc149)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc161)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc162)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc33)
  } loc(#loc159)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc164)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc51)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc170)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc170)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc55)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc55)
      cir.if %5 {
        %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc58)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc59)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc59)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc60)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc60)
        %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc58)
        cir.store %11, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
        %13 = cir.call @fclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc64)
      } loc(#loc171)
    } loc(#loc169)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc174)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc174)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc67)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc67)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
      } loc(#loc175)
    } loc(#loc173)
    cir.return loc(#loc48)
  } loc(#loc166)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc77)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc180)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc180)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc81)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc81)
      cir.if %5 {
        %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc84)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc85)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc85)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
        %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc84)
        cir.store %11, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
        %13 = cir.call @fclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
      } loc(#loc181)
    } loc(#loc179)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc184)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc184)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc93)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc93)
      cir.if %5 {
      } loc(#loc185)
    } loc(#loc183)
    cir.return loc(#loc74)
  } loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"GoodSource_fopen.txt\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc101)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc190)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc190)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc105)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc105)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc110)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc110)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
      } else {
        %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc112)
        %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc113)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc113)
        %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc112)
        cir.store %11, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc192)
      } loc(#loc191)
    } loc(#loc189)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc194)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc194)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc118)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc118)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc121)
        %7 = cir.call @fclose(%6) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc122)
      } loc(#loc195)
    } loc(#loc193)
    cir.return loc(#loc98)
  } loc(#loc186)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc200)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc200)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc131)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc131)
      cir.if %5 {
        %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc134)
        %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc135)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc135)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc136)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc136)
        %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc134)
        cir.store %11, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc202)
      } loc(#loc201)
    } loc(#loc199)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc204)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc204)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc141)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc141)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc144)
        %7 = cir.call @fclose(%6) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc145)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc124)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":28:22)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":28:45)
#loc7 = loc("/usr/include/stdio.h":184:1)
#loc8 = loc("/usr/include/stdio.h":184:36)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":22:1)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":37:1)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":24:5)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":24:12)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":25:12)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":25:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":26:5)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":31:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":26:8)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":26:26)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":27:5)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":28:16)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":28:9)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":28:49)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":30:16)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":30:9)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":32:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":36:5)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":32:8)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":32:26)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":33:5)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":35:16)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":35:9)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":125:1)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":131:1)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":127:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":127:14)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":128:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":128:14)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":129:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":129:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":130:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":130:14)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc44 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":57:19)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":44:1)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":65:1)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":46:5)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":46:12)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":47:12)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":47:5)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":48:5)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":53:5)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":48:8)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":48:26)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":49:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":50:16)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":50:22)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":50:45)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":50:9)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":50:49)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":52:16)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":52:9)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":54:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":64:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":54:8)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":54:27)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":55:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":58:5)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":60:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":57:9)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":68:1)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":84:1)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":70:5)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":70:12)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":71:12)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":71:5)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":72:5)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":77:5)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":72:8)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":72:26)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":73:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":74:16)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":74:22)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":74:45)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":74:9)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":74:49)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":76:16)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":76:9)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":78:5)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":83:5)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":78:8)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":78:26)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":79:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":99:22)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":87:1)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":106:1)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":89:5)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":89:12)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":90:12)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":90:5)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":91:5)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":100:5)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":91:8)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":91:27)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":92:5)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":95:5)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":97:5)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":94:19)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":94:9)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":99:16)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":99:46)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":99:9)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":99:50)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":101:5)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":105:5)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":101:8)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":101:26)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":102:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":104:16)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":104:9)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":109:1)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":123:1)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":111:5)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":111:12)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":112:12)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":112:5)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":113:5)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":117:5)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":113:8)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":113:26)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":114:5)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":116:16)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":116:22)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":116:46)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":116:9)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":116:50)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":118:5)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":122:5)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":118:8)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":118:26)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":119:5)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":121:16)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_11.c":121:9)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc14, #loc13])
#loc152 = loc(fused[#loc15, #loc16])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc19, #loc16])
#loc155 = loc(fused[#loc21, #loc22])
#loc156 = loc(fused[#loc25, #loc26])
#loc157 = loc(fused[#loc27, #loc28])
#loc158 = loc(fused[#loc29, #loc26])
#loc159 = loc(fused[#loc32, #loc33])
#loc160 = loc(fused[#loc34, #loc35])
#loc161 = loc(fused[#loc36, #loc37])
#loc162 = loc(fused[#loc38, #loc39])
#loc163 = loc(fused[#loc40, #loc41])
#loc164 = loc(fused[#loc42, #loc43])
#loc165 = loc(fused[#loc44, #loc45])
#loc166 = loc(fused[#loc47, #loc48])
#loc167 = loc(fused[#loc49, #loc50])
#loc168 = loc(fused[#loc52, #loc51])
#loc169 = loc(fused[#loc53, #loc54])
#loc170 = loc(fused[#loc55, #loc56])
#loc171 = loc(fused[#loc57, #loc54])
#loc172 = loc(fused[#loc61, #loc62])
#loc173 = loc(fused[#loc65, #loc66])
#loc174 = loc(fused[#loc67, #loc68])
#loc175 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc176 = loc(fused[#loc73, #loc74])
#loc177 = loc(fused[#loc75, #loc76])
#loc178 = loc(fused[#loc78, #loc77])
#loc179 = loc(fused[#loc79, #loc80])
#loc180 = loc(fused[#loc81, #loc82])
#loc181 = loc(fused[#loc83, #loc80])
#loc182 = loc(fused[#loc87, #loc88])
#loc183 = loc(fused[#loc91, #loc92])
#loc184 = loc(fused[#loc93, #loc94])
#loc185 = loc(fused[#loc95, #loc92])
#loc186 = loc(fused[#loc97, #loc98])
#loc187 = loc(fused[#loc99, #loc100])
#loc188 = loc(fused[#loc102, #loc101])
#loc189 = loc(fused[#loc103, #loc104])
#loc190 = loc(fused[#loc105, #loc106])
#loc191 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc192 = loc(fused[#loc114, #loc115])
#loc193 = loc(fused[#loc116, #loc117])
#loc194 = loc(fused[#loc118, #loc119])
#loc195 = loc(fused[#loc120, #loc117])
#loc196 = loc(fused[#loc123, #loc124])
#loc197 = loc(fused[#loc125, #loc126])
#loc198 = loc(fused[#loc128, #loc127])
#loc199 = loc(fused[#loc129, #loc130])
#loc200 = loc(fused[#loc131, #loc132])
#loc201 = loc(fused[#loc133, #loc130])
#loc202 = loc(fused[#loc137, #loc138])
#loc203 = loc(fused[#loc139, #loc140])
#loc204 = loc(fused[#loc141, #loc142])
#loc205 = loc(fused[#loc143, #loc140])
