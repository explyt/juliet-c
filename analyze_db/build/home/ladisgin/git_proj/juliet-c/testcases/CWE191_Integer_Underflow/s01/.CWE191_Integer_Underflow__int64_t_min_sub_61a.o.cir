!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_min_sub_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE191_Integer_Underflow__int64_t_min_sub_61b_badSource(!s64i) -> !s64i loc(#loc75)
  cir.func private @printLongLongLine(!s64i) loc(#loc76)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_sub_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc11)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc80)
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc13)
    %4 = cir.call @CWE191_Integer_Underflow__int64_t_min_sub_61b_badSource(%3) : (!s64i) -> !s64i loc(#loc14)
    cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc81)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc8)
    %8 = cir.binop(sub, %5, %7) nsw : !s64i loc(#loc19)
    cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc78)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc20)
    cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc21)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc77)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_sub_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc85)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc83)
  cir.func private @CWE191_Integer_Underflow__int64_t_min_sub_61b_goodG2BSource(!s64i) -> !s64i loc(#loc86)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc36)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc90)
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc38)
    %4 = cir.call @CWE191_Integer_Underflow__int64_t_min_sub_61b_goodG2BSource(%3) : (!s64i) -> !s64i loc(#loc39)
    cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc91)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc44)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc33)
    %8 = cir.binop(sub, %5, %7) nsw : !s64i loc(#loc44)
    cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc88)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc45)
    cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc46)
    cir.br ^bb2 loc(#loc43)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc31)
  } loc(#loc87)
  cir.func private @CWE191_Integer_Underflow__int64_t_min_sub_61b_goodB2GSource(!s64i) -> !s64i loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc58)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc98)
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc60)
    %4 = cir.call @CWE191_Integer_Underflow__int64_t_min_sub_61b_goodB2GSource(%3) : (!s64i) -> !s64i loc(#loc61)
    cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc66)
    %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc67)
    %7 = cir.unary(minus, %6) : !s64i, !s64i loc(#loc67)
    %8 = cir.const #cir.int<1> : !s64i loc(#loc67)
    %9 = cir.binop(sub, %7, %8) nsw : !s64i loc(#loc67)
    %10 = cir.cmp(gt, %5, %9) : !s64i, !cir.bool loc(#loc101)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc71)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc55)
    %14 = cir.binop(sub, %11, %13) nsw : !s64i loc(#loc71)
    cir.store %14, %0 : !s64i, !cir.ptr<!s64i> loc(#loc96)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc72)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc73)
    cir.br ^bb4 loc(#loc69)
  ^bb3:  // pred: ^bb1
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc51)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc65)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc53)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_min_sub_61a.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":23:77)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":25:1)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":35:1)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":32:9)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":32:33)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":27:5)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":27:13)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":28:12)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":28:5)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":29:68)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":29:12)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":29:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":29:72)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":30:5)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":34:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":32:26)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":33:27)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":33:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":76:1)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":80:1)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":78:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":78:13)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":79:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":79:13)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":42:1)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":42:81)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":44:1)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":54:1)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":51:9)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":51:33)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":46:5)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":46:13)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":47:12)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":47:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":48:72)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":48:12)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":48:5)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":48:76)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":49:5)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":53:5)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":51:26)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":52:27)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":52:9)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":57:1)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":57:81)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":72:19)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":59:1)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":74:1)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":67:9)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":67:33)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":61:5)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":61:13)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":62:12)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":62:5)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":63:72)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":63:12)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":63:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":63:76)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":65:5)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":73:5)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":65:9)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":65:16)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":66:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":69:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":71:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":67:26)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":68:27)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":68:9)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_min_sub_61a.c":72:9)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc9, #loc10])
#loc80 = loc(fused[#loc12, #loc11])
#loc81 = loc(fused[#loc15, #loc16])
#loc82 = loc(fused[#loc17, #loc18])
#loc83 = loc(fused[#loc22, #loc23])
#loc84 = loc(fused[#loc24, #loc25])
#loc85 = loc(fused[#loc26, #loc27])
#loc86 = loc(fused[#loc28, #loc29])
#loc87 = loc(fused[#loc30, #loc31])
#loc88 = loc(fused[#loc32, #loc33])
#loc89 = loc(fused[#loc34, #loc35])
#loc90 = loc(fused[#loc37, #loc36])
#loc91 = loc(fused[#loc40, #loc41])
#loc92 = loc(fused[#loc42, #loc43])
#loc93 = loc(fused[#loc47, #loc48])
#loc94 = loc(fused[#loc49, #loc50])
#loc95 = loc(fused[#loc52, #loc53])
#loc96 = loc(fused[#loc54, #loc55])
#loc97 = loc(fused[#loc56, #loc57])
#loc98 = loc(fused[#loc59, #loc58])
#loc99 = loc(fused[#loc62, #loc63])
#loc100 = loc(fused[#loc64, #loc65])
#loc101 = loc(fused[#loc66, #loc67])
#loc102 = loc(fused[#loc68, #loc69, #loc70, #loc65])
