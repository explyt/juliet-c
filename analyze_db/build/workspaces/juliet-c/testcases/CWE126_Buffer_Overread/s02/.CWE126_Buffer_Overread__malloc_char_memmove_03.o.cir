!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc220)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc221)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc223)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc19)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc228)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc22)
        %6 = cir.const #cir.int<50> : !s32i loc(#loc23)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc230)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc231)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc235)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc33)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc34)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc35)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
          } loc(#loc236)
        } loc(#loc234)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc37)
        %15 = cir.const #cir.int<50> : !s32i loc(#loc38)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc38)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc38)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc237)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc42)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
        %22 = cir.const #cir.int<50> : !s32i loc(#loc44)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc45)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc44)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc46)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc238)
      } loc(#loc229)
    } loc(#loc227)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc240)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc52)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc53)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc54)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc53)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc53)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc241)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc57)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc57)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc58)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc58)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc60)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc242)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc63)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc63)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc243)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc244)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc245)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc69)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc69)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc70)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc71)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc70)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc72)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc246)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc75)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    } loc(#loc239)
    cir.return loc(#loc12)
  } loc(#loc224)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc83)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc88)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc92)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc93)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc254)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc83)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc83)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc97)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc98)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc99)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc99)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc256)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc257)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc258)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc261)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc109)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc111)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
          } loc(#loc262)
        } loc(#loc260)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc113)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc114)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc114)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc114)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc263)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc118)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc120)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc120)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc122)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc264)
      } loc(#loc255)
    } loc(#loc253)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc266)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc128)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc129)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc130)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc129)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc129)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc267)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc133)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc133)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc134)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc134)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc136)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc268)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc139)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc139)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc269)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc270)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc271)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc145)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc145)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc146)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc147)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc146)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc148)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc272)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc150)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc151)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
    } loc(#loc265)
    cir.return loc(#loc85)
  } loc(#loc250)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc157)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc161)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc162)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc277)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc164)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc165)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc165)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc279)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc280)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc281)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc284)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc175)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc177)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
          } loc(#loc285)
        } loc(#loc283)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc179)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc180)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc180)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc180)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc184)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc184)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc186)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc186)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc188)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc287)
      } loc(#loc278)
    } loc(#loc276)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc289)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc193)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc193)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc194)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc195)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc196)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc195)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc195)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc290)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc199)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc199)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc200)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc201)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc200)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc202)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc202)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc291)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc203)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc205)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc206)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc205)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc292)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc293)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc294)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc211)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc211)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc212)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc213)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc212)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc214)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc214)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc295)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc215)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc216)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc217)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc217)
    } loc(#loc288)
    cir.return loc(#loc154)
  } loc(#loc273)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_03.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":46:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":34:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":27:8)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":27:11)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":28:5)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":30:24)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":30:31)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":30:34)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":30:45)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":30:46)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":30:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:9)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:37)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:13)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:21)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:27)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:28)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:34)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":31:33)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":32:16)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":32:22)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":32:27)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":32:30)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":32:9)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":32:31)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":33:22)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":33:9)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":33:14)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":33:17)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":33:18)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":35:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":45:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":36:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":36:22)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":37:16)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":37:22)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":37:27)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":37:31)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":37:9)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":37:32)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":38:23)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":38:14)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":38:18)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":38:9)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:17)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:23)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:29)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:36)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:42)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:53)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:9)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":41:54)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":42:23)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":42:14)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":42:18)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":42:9)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":43:19)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":43:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":44:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":44:14)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":109:1)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":113:1)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":111:5)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":111:14)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":112:5)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":112:14)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":60:19)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":53:1)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":81:1)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":55:5)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":55:12)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":56:12)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":56:5)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":57:5)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":69:5)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":57:8)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":57:11)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":58:5)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":61:5)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":63:5)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":60:9)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":65:24)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":65:31)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":65:35)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":65:46)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":65:47)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":65:9)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:9)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:37)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:13)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:21)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:27)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:28)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:34)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":66:33)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":67:16)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":67:22)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":67:27)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":67:31)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":67:9)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":67:32)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":68:23)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":68:9)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":68:14)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":68:18)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":68:19)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":70:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":80:5)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":71:9)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":71:22)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":72:16)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":72:22)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":72:27)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":72:31)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":72:9)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":72:32)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":73:23)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":73:14)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":73:18)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":73:9)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:17)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:23)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:29)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:36)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:42)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:53)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:9)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":76:54)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":77:23)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":77:14)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":77:18)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":77:9)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":78:19)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":78:9)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":79:9)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":79:14)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":84:1)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":107:1)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":86:5)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":86:12)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":87:12)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":87:5)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":88:5)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":95:5)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":88:8)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":88:11)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":89:5)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":91:24)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":91:31)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":91:35)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":91:46)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":91:47)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":91:9)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:9)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:37)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:13)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:21)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:27)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:28)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:34)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":92:33)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":93:16)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":93:22)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":93:27)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":93:31)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":93:9)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":93:32)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":94:23)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":94:9)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":94:14)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":94:18)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":94:19)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":96:5)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":106:5)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":97:9)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":97:22)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":98:16)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":98:22)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":98:27)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":98:31)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":98:9)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":98:32)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":99:23)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":99:14)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":99:18)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":99:9)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:17)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:23)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:29)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:36)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:42)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:53)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:9)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":102:54)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":103:23)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":103:14)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":103:18)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":103:9)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":104:19)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":104:9)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":105:9)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_memmove_03.c":105:14)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc9, #loc10])
#loc224 = loc(fused[#loc11, #loc12])
#loc225 = loc(fused[#loc13, #loc14])
#loc226 = loc(fused[#loc16, #loc15])
#loc227 = loc(fused[#loc17, #loc18])
#loc228 = loc(fused[#loc19, #loc20])
#loc229 = loc(fused[#loc21, #loc18])
#loc230 = loc(fused[#loc24, #loc25])
#loc231 = loc(fused[#loc23, #loc25])
#loc232 = loc(fused[#loc22, #loc26])
#loc233 = loc(fused[#loc27, #loc26])
#loc234 = loc(fused[#loc28, #loc29])
#loc235 = loc(fused[#loc30, #loc31])
#loc236 = loc(fused[#loc32, #loc29])
#loc237 = loc(fused[#loc40, #loc41])
#loc238 = loc(fused[#loc43, #loc42])
#loc239 = loc(fused[#loc47, #loc48])
#loc240 = loc(fused[#loc49, #loc50])
#loc241 = loc(fused[#loc55, #loc56])
#loc242 = loc(fused[#loc60, #loc57])
#loc243 = loc(fused[#loc65, #loc66])
#loc244 = loc(fused[#loc63, #loc66])
#loc245 = loc(fused[#loc67, #loc68])
#loc246 = loc(fused[#loc72, #loc69])
#loc247 = loc(fused[#loc77, #loc78])
#loc248 = loc(fused[#loc79, #loc80])
#loc249 = loc(fused[#loc81, #loc82])
#loc250 = loc(fused[#loc84, #loc85])
#loc251 = loc(fused[#loc86, #loc87])
#loc252 = loc(fused[#loc89, #loc88])
#loc253 = loc(fused[#loc90, #loc91])
#loc254 = loc(fused[#loc92, #loc93])
#loc255 = loc(fused[#loc94, #loc95, #loc96, #loc91])
#loc256 = loc(fused[#loc100, #loc101])
#loc257 = loc(fused[#loc99, #loc101])
#loc258 = loc(fused[#loc98, #loc102])
#loc259 = loc(fused[#loc103, #loc102])
#loc260 = loc(fused[#loc104, #loc105])
#loc261 = loc(fused[#loc106, #loc107])
#loc262 = loc(fused[#loc108, #loc105])
#loc263 = loc(fused[#loc116, #loc117])
#loc264 = loc(fused[#loc119, #loc118])
#loc265 = loc(fused[#loc123, #loc124])
#loc266 = loc(fused[#loc125, #loc126])
#loc267 = loc(fused[#loc131, #loc132])
#loc268 = loc(fused[#loc136, #loc133])
#loc269 = loc(fused[#loc141, #loc142])
#loc270 = loc(fused[#loc139, #loc142])
#loc271 = loc(fused[#loc143, #loc144])
#loc272 = loc(fused[#loc148, #loc145])
#loc273 = loc(fused[#loc153, #loc154])
#loc274 = loc(fused[#loc155, #loc156])
#loc275 = loc(fused[#loc158, #loc157])
#loc276 = loc(fused[#loc159, #loc160])
#loc277 = loc(fused[#loc161, #loc162])
#loc278 = loc(fused[#loc163, #loc160])
#loc279 = loc(fused[#loc166, #loc167])
#loc280 = loc(fused[#loc165, #loc167])
#loc281 = loc(fused[#loc164, #loc168])
#loc282 = loc(fused[#loc169, #loc168])
#loc283 = loc(fused[#loc170, #loc171])
#loc284 = loc(fused[#loc172, #loc173])
#loc285 = loc(fused[#loc174, #loc171])
#loc286 = loc(fused[#loc182, #loc183])
#loc287 = loc(fused[#loc185, #loc184])
#loc288 = loc(fused[#loc189, #loc190])
#loc289 = loc(fused[#loc191, #loc192])
#loc290 = loc(fused[#loc197, #loc198])
#loc291 = loc(fused[#loc202, #loc199])
#loc292 = loc(fused[#loc207, #loc208])
#loc293 = loc(fused[#loc205, #loc208])
#loc294 = loc(fused[#loc209, #loc210])
#loc295 = loc(fused[#loc214, #loc211])
