!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc133)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc10)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc137)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc12)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc137)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %9 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_badData : !cir.ptr<!s32i> loc(#loc133)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %10 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc140)
    cir.call %10() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc16)
    cir.return loc(#loc4)
  } loc(#loc134)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    cir.return loc(#loc19)
  } loc(#loc141)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc143)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc144)
  cir.func private @printIntLine(!s32i) loc(#loc145)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc146)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_badData : !cir.ptr<!s32i> loc(#loc133)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc150)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc151)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc40)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc41)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc152)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc153)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc40)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc154)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc155)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc49)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc157)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc51)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc53)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr1) loc(#loc51)
        } loc(#loc158)
      } loc(#loc156)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc56)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc56)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc160)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc58)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc59)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc161)
          cir.condition(%24) loc(#loc60)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc64)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc65)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc163)
          } loc(#loc162)
          cir.yield loc(#loc55)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc66)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc67)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc164)
          cir.yield loc(#loc159)
        } loc(#loc159)
      } loc(#loc159)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc69)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc70)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc68)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc71)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc72)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc73)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc72)
    } loc(#loc149)
    cir.return loc(#loc31)
  } loc(#loc147)
  cir.global "private" internal dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc165)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc81)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc83)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %5 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_goodG2BData : !cir.ptr<!s32i> loc(#loc165)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc171)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc77)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45_goodG2BData : !cir.ptr<!s32i> loc(#loc165)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc176)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc100)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc177)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc178)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc99)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc179)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc180)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc108)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc182)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc111)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc112)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr1) loc(#loc110)
        } loc(#loc183)
      } loc(#loc181)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc115)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc115)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc185)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc117)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc118)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc186)
          cir.condition(%24) loc(#loc119)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc121)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc124)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc188)
          } loc(#loc187)
          cir.yield loc(#loc114)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc125)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc126)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc189)
          cir.yield loc(#loc184)
        } loc(#loc184)
      } loc(#loc184)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc128)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc129)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc130)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc131)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc132)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc131)
    } loc(#loc174)
    cir.return loc(#loc90)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":19:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":19:12)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":43:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":54:1)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":45:5)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":45:9)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":47:13)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":47:12)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":47:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":49:12)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":49:22)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":49:26)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":49:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":52:75)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":52:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":53:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":53:13)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":91:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":94:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":93:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":93:13)
#loc22 = loc("/usr/include/stdlib.h":672:1)
#loc23 = loc("/usr/include/stdlib.h":672:45)
#loc24 = loc("/usr/include/stdlib.h":756:1)
#loc25 = loc("/usr/include/stdlib.h":756:70)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc28 = loc("/usr/include/stdlib.h":687:1)
#loc29 = loc("/usr/include/stdlib.h":687:32)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":24:1)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":41:1)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":26:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":26:16)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":27:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":40:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":28:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":28:16)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":29:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":29:14)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":32:28)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":32:35)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":32:42)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":32:52)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":32:53)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":32:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:43)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:27)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:33)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:34)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:40)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":33:39)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":37:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:18)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:14)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:33)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:23)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":35:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":36:29)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":36:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":36:24)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":36:25)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:40)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":34:39)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":38:22)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":38:33)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":38:34)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":38:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":39:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":39:14)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":20:1)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":20:12)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":80:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":89:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":82:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":82:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":84:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":84:12)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":84:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":86:12)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":86:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":87:79)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":87:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":88:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":88:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":61:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":78:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":63:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":63:16)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":64:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":77:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":65:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":65:16)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":66:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":66:14)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":69:28)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":69:35)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":69:42)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":69:52)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":69:53)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":69:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:43)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:27)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:33)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:34)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:40)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":70:39)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":74:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:18)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:14)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:21)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:33)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:23)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":72:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":73:29)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":73:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":73:24)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":73:25)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:40)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":71:39)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":75:22)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":75:33)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":75:34)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":75:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":76:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_45.c":76:14)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc9, #loc7])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc13, #loc12])
#loc139 = loc(fused[#loc15, #loc14])
#loc140 = loc(fused[#loc16, #loc17])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc24, #loc25])
#loc145 = loc(fused[#loc26, #loc27])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc32, #loc33])
#loc149 = loc(fused[#loc34, #loc35])
#loc150 = loc(fused[#loc36, #loc37])
#loc151 = loc(fused[#loc38, #loc39])
#loc152 = loc(fused[#loc42, #loc43])
#loc153 = loc(fused[#loc41, #loc43])
#loc154 = loc(fused[#loc40, #loc44])
#loc155 = loc(fused[#loc45, #loc44])
#loc156 = loc(fused[#loc46, #loc47])
#loc157 = loc(fused[#loc48, #loc49])
#loc158 = loc(fused[#loc50, #loc47])
#loc159 = loc(fused[#loc54, #loc55])
#loc160 = loc(fused[#loc57, #loc56])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc61, #loc55])
#loc163 = loc(fused[#loc63, #loc62])
#loc164 = loc(fused[#loc67, #loc66])
#loc165 = loc(fused[#loc74, #loc75])
#loc166 = loc(fused[#loc76, #loc77])
#loc167 = loc(fused[#loc78, #loc79])
#loc168 = loc(fused[#loc82, #loc80])
#loc169 = loc(fused[#loc84, #loc83])
#loc170 = loc(fused[#loc86, #loc85])
#loc171 = loc(fused[#loc87, #loc88])
#loc172 = loc(fused[#loc89, #loc90])
#loc173 = loc(fused[#loc91, #loc92])
#loc174 = loc(fused[#loc93, #loc94])
#loc175 = loc(fused[#loc95, #loc96])
#loc176 = loc(fused[#loc97, #loc98])
#loc177 = loc(fused[#loc101, #loc102])
#loc178 = loc(fused[#loc100, #loc102])
#loc179 = loc(fused[#loc99, #loc103])
#loc180 = loc(fused[#loc104, #loc103])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc107, #loc108])
#loc183 = loc(fused[#loc109, #loc106])
#loc184 = loc(fused[#loc113, #loc114])
#loc185 = loc(fused[#loc116, #loc115])
#loc186 = loc(fused[#loc117, #loc118])
#loc187 = loc(fused[#loc120, #loc114])
#loc188 = loc(fused[#loc122, #loc121])
#loc189 = loc(fused[#loc126, #loc125])
