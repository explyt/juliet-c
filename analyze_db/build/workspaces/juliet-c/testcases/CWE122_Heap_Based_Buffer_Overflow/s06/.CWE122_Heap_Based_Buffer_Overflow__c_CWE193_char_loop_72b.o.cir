!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":34:14)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":34:29)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":58:18)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":58:33)
#loc104 = loc(fused[#loc8, #loc9])
#loc110 = loc(fused[#loc27, #loc28])
#loc124 = loc(fused[#loc65, #loc66])
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.record<struct "std::_Vector_base<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.record<class "std::vector<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_7211goodG2BSinkESt6vectorIPcSaIS1_EE.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc101)
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_727badSinkESt6vectorIPcSaIS1_EE.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc102)
  cir.func linkonce_odr @_ZNSt6vectorIPcSaIS0_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc8, #loc9])) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>> loc(#loc10)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc10)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc7)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc11)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> loc(#loc12)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> loc(#loc11)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc15)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!s8i>>, %9 : !u64i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc105)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.return %11 : !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
  } loc(#loc103)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc106)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc108)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_727badSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc27, #loc28])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc31)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc32)
    %4 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc33)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc102)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc113)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc114)
      %9 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_727badSinkESt6vectorIPcSaIS1_EE.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc102)
      cir.copy %9 to %6 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc102)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc39)
      %11 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc40)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc39)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc115)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc45)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc45)
        cir.store %18, %7 : !u64i, !cir.ptr<!u64i> loc(#loc117)
        cir.for : cond {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc47)
          %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
          %23 = cir.binop(add, %20, %22) : !u64i loc(#loc118)
          %24 = cir.cmp(lt, %19, %23) : !u64i, !cir.bool loc(#loc119)
          cir.condition(%24) loc(#loc119)
        } body {
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %20 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc52)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc52)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc52)
            %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
            %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc54)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc55)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc121)
          } loc(#loc120)
          cir.yield loc(#loc44)
        } step {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc58)
          cir.store %20, %7 : !u64i, !cir.ptr<!u64i> loc(#loc122)
          cir.yield loc(#loc116)
        } loc(#loc116)
      } loc(#loc116)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc61)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc61)
    } loc(#loc112)
    cir.return loc(#loc26)
  } loc(#loc109)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_7211goodG2BSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc65, #loc66])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc69)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc70)
    %4 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc71)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc101)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc127)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc128)
      %9 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_7211goodG2BSinkESt6vectorIPcSaIS1_EE.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
      cir.copy %9 to %6 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc77)
      %11 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc78)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc77)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc129)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc83)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc83)
        cir.store %18, %7 : !u64i, !cir.ptr<!u64i> loc(#loc131)
        cir.for : cond {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc85)
          %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc86)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc87)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc87)
          %23 = cir.binop(add, %20, %22) : !u64i loc(#loc132)
          %24 = cir.cmp(lt, %19, %23) : !u64i, !cir.bool loc(#loc133)
          cir.condition(%24) loc(#loc133)
        } body {
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc89)
            %20 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc90)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc90)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc90)
            %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc92)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc93)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc135)
          } loc(#loc134)
          cir.yield loc(#loc82)
        } step {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc95)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc96)
          cir.store %20, %7 : !u64i, !cir.ptr<!u64i> loc(#loc136)
          cir.yield loc(#loc130)
        } loc(#loc130)
      } loc(#loc130)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc99)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc99)
    } loc(#loc126)
    cir.return loc(#loc64)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":62:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":62:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":39:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":39:29)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc15 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc19 = loc("/usr/include/string.h":407:1)
#loc20 = loc("/usr/include/string.h":408:33)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("/usr/include/stdlib.h":687:1)
#loc24 = loc("/usr/include/stdlib.h":687:32)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":34:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":51:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":37:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":37:31)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":35:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":37:30)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":37:19)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":38:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":50:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":40:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":40:16)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":40:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":41:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":41:28)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":41:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":41:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":47:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:18)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:25)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:37)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":45:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":46:30)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":46:23)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":46:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":46:18)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":46:19)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":46:31)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:41)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":44:40)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":48:19)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":48:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":49:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":49:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":58:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":74:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":60:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":60:31)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":59:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":60:30)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":60:19)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":61:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":73:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":63:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":63:16)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":63:19)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":64:21)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":64:28)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":64:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":64:34)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":70:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:18)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:21)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:25)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:37)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":68:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":69:30)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":69:23)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":69:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":69:18)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":69:19)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":69:31)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:41)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":67:40)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":71:19)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":71:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":72:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_72b.cpp":72:14)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc17, #loc18])
#loc106 = loc(fused[#loc19, #loc20])
#loc107 = loc(fused[#loc21, #loc22])
#loc108 = loc(fused[#loc23, #loc24])
#loc109 = loc(fused[#loc25, #loc26])
#loc111 = loc(fused[#loc29, #loc30])
#loc112 = loc(fused[#loc34, #loc35])
#loc113 = loc(fused[#loc36, #loc37])
#loc114 = loc(fused[#loc36, #loc38])
#loc115 = loc(fused[#loc41, #loc42])
#loc116 = loc(fused[#loc43, #loc44])
#loc117 = loc(fused[#loc46, #loc45])
#loc118 = loc(fused[#loc48, #loc49])
#loc119 = loc(fused[#loc47, #loc49])
#loc120 = loc(fused[#loc50, #loc44])
#loc121 = loc(fused[#loc53, #loc56])
#loc122 = loc(fused[#loc58, #loc57])
#loc123 = loc(fused[#loc63, #loc64])
#loc125 = loc(fused[#loc67, #loc68])
#loc126 = loc(fused[#loc72, #loc73])
#loc127 = loc(fused[#loc74, #loc75])
#loc128 = loc(fused[#loc74, #loc76])
#loc129 = loc(fused[#loc79, #loc80])
#loc130 = loc(fused[#loc81, #loc82])
#loc131 = loc(fused[#loc84, #loc83])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc85, #loc87])
#loc134 = loc(fused[#loc88, #loc82])
#loc135 = loc(fused[#loc91, #loc94])
#loc136 = loc(fused[#loc96, #loc95])
