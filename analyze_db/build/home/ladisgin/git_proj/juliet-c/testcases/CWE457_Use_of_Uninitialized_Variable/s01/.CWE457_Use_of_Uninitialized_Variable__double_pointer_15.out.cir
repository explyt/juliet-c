!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":198:10)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":198:14)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":198:20)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":198:32)
#loc250 = loc(fused[#loc50, #loc51])
#loc251 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printDoubleLine(!cir.double) loc(#loc237)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc12)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.break loc(#loc14)
        } loc(#loc13)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc16)
          cir.break loc(#loc17)
        } loc(#loc15)
        cir.yield loc(#loc10)
      } loc(#loc10)
    } loc(#loc240)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc20)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc22)
          %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc23)
          cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc24)
          cir.break loc(#loc25)
        } loc(#loc21)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc28)
          cir.break loc(#loc29)
        } loc(#loc26)
        cir.yield loc(#loc18)
      } loc(#loc18)
    } loc(#loc241)
    cir.return loc(#loc7)
  } loc(#loc238)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc31)
  } loc(#loc242)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc247)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc57)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_pointer_15_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    cir.return %17 : !s32i loc(#loc254)
  } loc(#loc249)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc255)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc256)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc258)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc78)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.break loc(#loc80)
        } loc(#loc79)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc82)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc82)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc83)
          cir.break loc(#loc84)
        } loc(#loc81)
        cir.yield loc(#loc76)
      } loc(#loc76)
    } loc(#loc259)
    cir.scope {
      %1 = cir.const #cir.int<8> : !s32i loc(#loc87)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc89)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc89)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          cir.break loc(#loc91)
        } loc(#loc88)
        cir.case(default, []) {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc93)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc261)
          %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc93)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc262)
          cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc263)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc100)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc101)
            %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc265)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc104)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc105)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc103)
            } loc(#loc266)
          } loc(#loc264)
          %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc106)
          %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc107)
          cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc267)
          %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc109)
          %9 = cir.load %8 : !cir.ptr<!cir.double>, !cir.double loc(#loc110)
          cir.call @printDoubleLine(%9) : (!cir.double) -> () loc(#loc111)
          cir.break loc(#loc112)
        } loc(#loc92)
        cir.yield loc(#loc85)
      } loc(#loc85)
    } loc(#loc260)
    cir.return loc(#loc73)
  } loc(#loc257)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc269)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc119)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.break loc(#loc121)
        } loc(#loc120)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc124)
          cir.break loc(#loc125)
        } loc(#loc122)
        cir.yield loc(#loc117)
      } loc(#loc117)
    } loc(#loc270)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc128)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc130)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc272)
          %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc130)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc273)
          cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc274)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc137)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc138)
            %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc276)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc140)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc141)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc142)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc140)
            } loc(#loc277)
          } loc(#loc275)
          %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc143)
          %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc144)
          cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc278)
          %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc146)
          %9 = cir.load %8 : !cir.ptr<!cir.double>, !cir.double loc(#loc147)
          cir.call @printDoubleLine(%9) : (!cir.double) -> () loc(#loc148)
          cir.break loc(#loc149)
        } loc(#loc129)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc152)
          cir.break loc(#loc153)
        } loc(#loc150)
        cir.yield loc(#loc126)
      } loc(#loc126)
    } loc(#loc271)
    cir.return loc(#loc114)
  } loc(#loc268)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc280)
    cir.scope {
      %1 = cir.const #cir.int<5> : !s32i loc(#loc160)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc161)
        cir.case(default, []) {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc166)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc282)
          %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc166)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc283)
          cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc284)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc173)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc174)
            %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !cir.bool loc(#loc286)
            cir.if %11 {
              %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc176)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc177)
              %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc178)
              cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr1) loc(#loc176)
            } loc(#loc287)
          } loc(#loc285)
          %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc179)
          %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc180)
          cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc288)
          cir.break loc(#loc182)
        } loc(#loc165)
        cir.yield loc(#loc158)
      } loc(#loc158)
    } loc(#loc281)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc185)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc187)
          %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc188)
          cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc189)
          cir.break loc(#loc190)
        } loc(#loc186)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc192)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc192)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc193)
          cir.break loc(#loc194)
        } loc(#loc191)
        cir.yield loc(#loc183)
      } loc(#loc183)
    } loc(#loc289)
    cir.return loc(#loc155)
  } loc(#loc279)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc291)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc201)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc203)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc293)
          %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc203)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc294)
          cir.store %5, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc295)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc210)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc211)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc211)
            %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !cir.bool loc(#loc297)
            cir.if %11 {
              %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc213)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc214)
              %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc215)
              cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr1) loc(#loc213)
            } loc(#loc298)
          } loc(#loc296)
          %6 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc216)
          %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc217)
          cir.store %6, %7 : !cir.double, !cir.ptr<!cir.double> loc(#loc299)
          cir.break loc(#loc219)
        } loc(#loc202)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc221)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc221)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc222)
          cir.break loc(#loc223)
        } loc(#loc220)
        cir.yield loc(#loc199)
      } loc(#loc199)
    } loc(#loc292)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc226)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc228)
          %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc229)
          cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc230)
          cir.break loc(#loc231)
        } loc(#loc227)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc233)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc233)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc234)
          cir.break loc(#loc235)
        } loc(#loc232)
        cir.yield loc(#loc224)
      } loc(#loc224)
    } loc(#loc300)
    cir.return loc(#loc196)
  } loc(#loc290)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":35:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":24:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":49:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":26:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":26:14)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":27:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":37:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":27:12)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":29:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":32:9)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":33:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":35:9)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":36:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":38:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":48:5)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":38:12)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":40:5)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":42:26)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":42:25)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":42:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":43:9)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":44:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":46:19)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":46:9)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":47:9)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":181:1)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":187:1)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":183:5)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":183:14)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":184:5)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":184:14)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":185:5)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":185:14)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":186:5)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":186:14)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":203:15)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":205:15)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":208:15)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":210:15)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":198:1)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":213:1)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":199:1)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":201:27)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":201:22)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":201:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":203:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":204:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":204:66)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":205:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":208:5)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":209:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":209:65)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":210:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":212:12)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":212:5)
#loc68 = loc("/usr/include/stdlib.h":672:1)
#loc69 = loc("/usr/include/stdlib.h":672:45)
#loc70 = loc("/usr/include/stdlib.h":756:1)
#loc71 = loc("/usr/include/stdlib.h":756:70)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":56:1)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":85:1)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":58:5)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":58:14)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":59:5)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":69:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":59:12)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":61:5)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":64:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":65:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":67:19)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":67:9)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":68:9)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":70:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":84:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":70:12)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":72:5)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":74:19)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":74:9)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":75:9)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":76:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:26)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:33)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:46)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:47)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":79:9)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:9)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:37)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:13)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:21)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:27)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:28)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:34)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":80:33)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":81:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":81:10)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":81:9)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":82:26)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":82:25)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":82:9)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":83:9)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":88:1)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":117:1)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":90:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":90:14)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":91:5)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":101:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":91:12)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":93:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":96:9)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":97:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":99:19)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":99:9)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":100:9)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":102:5)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":116:5)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":102:12)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":104:5)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:26)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:33)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:46)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:47)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":107:9)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:9)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:37)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:13)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:21)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:27)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:28)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:34)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":108:33)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":109:17)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":109:10)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":109:9)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":110:26)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":110:25)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":110:9)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":111:9)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":112:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":114:19)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":114:9)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":115:9)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":120:1)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":148:1)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":122:5)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":122:14)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":123:5)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":136:5)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":123:12)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":125:5)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":127:19)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":127:9)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":128:9)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":129:5)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:26)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:33)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:46)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:47)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":132:9)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:9)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:37)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:13)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:21)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:27)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:28)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:34)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":133:33)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":134:17)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":134:10)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":134:9)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":135:9)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":137:5)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":147:5)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":137:12)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":139:5)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":141:26)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":141:25)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":141:9)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":142:9)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":143:5)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":145:19)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":145:9)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":146:9)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":151:1)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":179:1)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":153:5)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":153:14)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":154:5)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":167:5)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":154:12)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":156:5)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:26)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:33)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:46)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:47)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":159:9)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:9)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:37)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:13)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:21)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:27)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:28)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:34)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":160:33)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":161:17)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":161:10)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":161:9)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":162:9)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":163:5)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":165:19)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":165:9)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":166:9)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":168:5)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":178:5)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":168:12)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":170:5)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":172:26)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":172:25)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":172:9)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":173:9)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":174:5)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":176:19)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":176:9)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_15.c":177:9)
#loc236 = loc(fused[#loc1, #loc2])
#loc237 = loc(fused[#loc4, #loc5])
#loc238 = loc(fused[#loc6, #loc7])
#loc239 = loc(fused[#loc8, #loc9])
#loc240 = loc(fused[#loc10, #loc11])
#loc241 = loc(fused[#loc18, #loc19])
#loc242 = loc(fused[#loc30, #loc31])
#loc243 = loc(fused[#loc32, #loc33])
#loc244 = loc(fused[#loc34, #loc35])
#loc245 = loc(fused[#loc36, #loc37])
#loc246 = loc(fused[#loc38, #loc39])
#loc247 = loc(fused[#loc40, #loc41])
#loc248 = loc(fused[#loc42, #loc43])
#loc249 = loc(fused[#loc48, #loc49])
#loc252 = loc(fused[#loc59, #loc60])
#loc253 = loc(fused[#loc63, #loc64])
#loc254 = loc(fused[#loc67, #loc66])
#loc255 = loc(fused[#loc68, #loc69])
#loc256 = loc(fused[#loc70, #loc71])
#loc257 = loc(fused[#loc72, #loc73])
#loc258 = loc(fused[#loc74, #loc75])
#loc259 = loc(fused[#loc76, #loc77])
#loc260 = loc(fused[#loc85, #loc86])
#loc261 = loc(fused[#loc94, #loc95])
#loc262 = loc(fused[#loc93, #loc96])
#loc263 = loc(fused[#loc97, #loc96])
#loc264 = loc(fused[#loc98, #loc99])
#loc265 = loc(fused[#loc100, #loc101])
#loc266 = loc(fused[#loc102, #loc99])
#loc267 = loc(fused[#loc108, #loc106])
#loc268 = loc(fused[#loc113, #loc114])
#loc269 = loc(fused[#loc115, #loc116])
#loc270 = loc(fused[#loc117, #loc118])
#loc271 = loc(fused[#loc126, #loc127])
#loc272 = loc(fused[#loc131, #loc132])
#loc273 = loc(fused[#loc130, #loc133])
#loc274 = loc(fused[#loc134, #loc133])
#loc275 = loc(fused[#loc135, #loc136])
#loc276 = loc(fused[#loc137, #loc138])
#loc277 = loc(fused[#loc139, #loc136])
#loc278 = loc(fused[#loc145, #loc143])
#loc279 = loc(fused[#loc154, #loc155])
#loc280 = loc(fused[#loc156, #loc157])
#loc281 = loc(fused[#loc158, #loc159])
#loc282 = loc(fused[#loc167, #loc168])
#loc283 = loc(fused[#loc166, #loc169])
#loc284 = loc(fused[#loc170, #loc169])
#loc285 = loc(fused[#loc171, #loc172])
#loc286 = loc(fused[#loc173, #loc174])
#loc287 = loc(fused[#loc175, #loc172])
#loc288 = loc(fused[#loc181, #loc179])
#loc289 = loc(fused[#loc183, #loc184])
#loc290 = loc(fused[#loc195, #loc196])
#loc291 = loc(fused[#loc197, #loc198])
#loc292 = loc(fused[#loc199, #loc200])
#loc293 = loc(fused[#loc204, #loc205])
#loc294 = loc(fused[#loc203, #loc206])
#loc295 = loc(fused[#loc207, #loc206])
#loc296 = loc(fused[#loc208, #loc209])
#loc297 = loc(fused[#loc210, #loc211])
#loc298 = loc(fused[#loc212, #loc209])
#loc299 = loc(fused[#loc218, #loc216])
#loc300 = loc(fused[#loc224, #loc225])
