!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":21:76)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":21:86)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":46:80)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":46:90)
#loc106 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLongLongLine(!s64i) loc(#loc103)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc104)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41_badSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc108)
      %2 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc108)
      cir.store %2, %1 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc108)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc14)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc15)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc15)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc16)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc109)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc110)
      cir.libc.memcpy %10 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc111)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc21)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc22)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc23)
      %14 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc21)
      cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc24)
      %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc25)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc26)
      cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    } loc(#loc107)
    cir.return loc(#loc6)
  } loc(#loc105)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc113)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc35)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc116)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc37)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc38)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc38)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc117)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc118)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc37)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc119)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc46)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s64i>, !s32i loc(#loc122)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc47)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc50)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc51)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
      } loc(#loc123)
    } loc(#loc121)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41_badSink(%9) : (!cir.ptr<!s64i>) -> () loc(#loc53)
    cir.return loc(#loc32)
  } loc(#loc114)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41_goodG2BSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc56, #loc57])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc58)
    cir.scope {
      %1 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc127)
      %2 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc127)
      cir.store %2, %1 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc127)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc63)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc63)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc64)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc64)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc65)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc65)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc128)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc129)
      cir.libc.memcpy %10 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc130)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc70)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc71)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc72)
      %14 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc70)
      cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc73)
      %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc74)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc75)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc75)
      cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
    } loc(#loc126)
    cir.return loc(#loc55)
  } loc(#loc124)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc131)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc135)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc87)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc136)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc137)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc138)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc139)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc94)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc95)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s64i>, !s32i loc(#loc141)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc96)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc98)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc100)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
      } loc(#loc142)
    } loc(#loc140)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc101)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41_goodG2BSink(%9) : (!cir.ptr<!s64i>) -> () loc(#loc102)
    cir.return loc(#loc81)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":30:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":22:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":23:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":29:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":24:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":24:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":26:16)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":26:22)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":26:30)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":26:34)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":26:48)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":26:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":26:49)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":27:27)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":27:32)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":27:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":27:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":28:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":28:14)
#loc27 = loc("/usr/include/stdlib.h":672:1)
#loc28 = loc("/usr/include/stdlib.h":672:45)
#loc29 = loc("/usr/include/stdlib.h":756:1)
#loc30 = loc("/usr/include/stdlib.h":756:70)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":32:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":40:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":34:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":34:15)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":35:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":35:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":37:23)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":37:30)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":37:33)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":37:47)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":37:48)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":37:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:33)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:17)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:24)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:30)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":38:29)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":39:75)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":39:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":46:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":55:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":47:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":48:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":54:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":49:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":49:33)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":51:16)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":51:22)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":51:30)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":51:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":51:48)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":51:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":51:49)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":52:27)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":52:32)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":52:33)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":52:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":53:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":53:14)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":68:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":71:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":70:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":70:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":58:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":66:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":60:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":60:15)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":61:12)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":61:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":63:23)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":63:30)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":63:34)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":63:48)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":63:49)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":63:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:33)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:14)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:23)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:30)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":64:29)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":65:79)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_41.c":65:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc10, #loc11])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc17, #loc18])
#loc110 = loc(fused[#loc16, #loc18])
#loc111 = loc(fused[#loc19, #loc20])
#loc112 = loc(fused[#loc27, #loc28])
#loc113 = loc(fused[#loc29, #loc30])
#loc114 = loc(fused[#loc31, #loc32])
#loc115 = loc(fused[#loc33, #loc34])
#loc116 = loc(fused[#loc36, #loc35])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc38, #loc40])
#loc119 = loc(fused[#loc37, #loc41])
#loc120 = loc(fused[#loc42, #loc41])
#loc121 = loc(fused[#loc43, #loc44])
#loc122 = loc(fused[#loc45, #loc46])
#loc123 = loc(fused[#loc48, #loc44])
#loc124 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc59, #loc60])
#loc127 = loc(fused[#loc61, #loc62])
#loc128 = loc(fused[#loc66, #loc67])
#loc129 = loc(fused[#loc65, #loc67])
#loc130 = loc(fused[#loc68, #loc69])
#loc131 = loc(fused[#loc76, #loc77])
#loc132 = loc(fused[#loc78, #loc79])
#loc133 = loc(fused[#loc80, #loc81])
#loc134 = loc(fused[#loc82, #loc83])
#loc135 = loc(fused[#loc85, #loc84])
#loc136 = loc(fused[#loc88, #loc89])
#loc137 = loc(fused[#loc87, #loc89])
#loc138 = loc(fused[#loc86, #loc90])
#loc139 = loc(fused[#loc91, #loc90])
#loc140 = loc(fused[#loc92, #loc93])
#loc141 = loc(fused[#loc94, #loc95])
#loc142 = loc(fused[#loc97, #loc93])
