!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE843_Type_Confusion__short_44.c":21:21)
#loc6 = loc("CWE843_Type_Confusion__short_44.c":21:28)
#loc34 = loc("CWE843_Type_Confusion__short_44.c":48:25)
#loc35 = loc("CWE843_Type_Confusion__short_44.c":48:32)
#loc59 = loc(fused[#loc5, #loc6])
#loc71 = loc(fused[#loc34, #loc35])
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc57)
  cir.func internal private @badSink(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc10)
    cir.return loc(#loc4)
  } loc(#loc58)
  cir.func no_proto @CWE843_Type_Confusion__short_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc61)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc62)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc16)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc17)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc63)
    cir.scope {
      %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortBuffer", init] {alignment = 2 : i64} loc(#loc65)
      %7 = cir.const #cir.int<8> : !s32i loc(#loc22)
      %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc22)
      cir.store %8, %6 : !s16i, !cir.ptr<!s16i> loc(#loc65)
      %9 = cir.cast(bitcast, %6 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc66)
      cir.store %9, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc67)
    } loc(#loc64)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc26)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc27)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>) -> () loc(#loc26)
    cir.return loc(#loc12)
  } loc(#loc60)
  cir.func no_proto @CWE843_Type_Confusion__short_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc69)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc29)
  } loc(#loc68)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc34, #loc35])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc71)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc36)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc37)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc37)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc39)
    cir.return loc(#loc33)
  } loc(#loc70)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc73)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc74)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc45)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc75)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc77)
      %7 = cir.const #cir.int<8> : !s32i loc(#loc51)
      cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc77)
      %8 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc78)
      cir.store %8, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc79)
    } loc(#loc76)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc55)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc56)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>) -> () loc(#loc55)
    cir.return loc(#loc41)
  } loc(#loc72)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_44.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__short_44.c":21:1)
#loc4 = loc("CWE843_Type_Confusion__short_44.c":25:1)
#loc7 = loc("CWE843_Type_Confusion__short_44.c":22:1)
#loc8 = loc("CWE843_Type_Confusion__short_44.c":24:26)
#loc9 = loc("CWE843_Type_Confusion__short_44.c":24:18)
#loc10 = loc("CWE843_Type_Confusion__short_44.c":24:5)
#loc11 = loc("CWE843_Type_Confusion__short_44.c":27:1)
#loc12 = loc("CWE843_Type_Confusion__short_44.c":41:1)
#loc13 = loc("CWE843_Type_Confusion__short_44.c":29:5)
#loc14 = loc("CWE843_Type_Confusion__short_44.c":29:12)
#loc15 = loc("CWE843_Type_Confusion__short_44.c":31:5)
#loc16 = loc("CWE843_Type_Confusion__short_44.c":31:32)
#loc17 = loc("CWE843_Type_Confusion__short_44.c":33:12)
#loc18 = loc("CWE843_Type_Confusion__short_44.c":33:5)
#loc19 = loc("CWE843_Type_Confusion__short_44.c":34:5)
#loc20 = loc("CWE843_Type_Confusion__short_44.c":38:5)
#loc21 = loc("CWE843_Type_Confusion__short_44.c":36:9)
#loc22 = loc("CWE843_Type_Confusion__short_44.c":36:29)
#loc23 = loc("CWE843_Type_Confusion__short_44.c":37:16)
#loc24 = loc("CWE843_Type_Confusion__short_44.c":37:17)
#loc25 = loc("CWE843_Type_Confusion__short_44.c":37:9)
#loc26 = loc("CWE843_Type_Confusion__short_44.c":40:5)
#loc27 = loc("CWE843_Type_Confusion__short_44.c":40:13)
#loc28 = loc("CWE843_Type_Confusion__short_44.c":68:1)
#loc29 = loc("CWE843_Type_Confusion__short_44.c":71:1)
#loc30 = loc("CWE843_Type_Confusion__short_44.c":70:5)
#loc31 = loc("CWE843_Type_Confusion__short_44.c":70:13)
#loc32 = loc("CWE843_Type_Confusion__short_44.c":48:1)
#loc33 = loc("CWE843_Type_Confusion__short_44.c":52:1)
#loc36 = loc("CWE843_Type_Confusion__short_44.c":49:1)
#loc37 = loc("CWE843_Type_Confusion__short_44.c":51:26)
#loc38 = loc("CWE843_Type_Confusion__short_44.c":51:18)
#loc39 = loc("CWE843_Type_Confusion__short_44.c":51:5)
#loc40 = loc("CWE843_Type_Confusion__short_44.c":54:1)
#loc41 = loc("CWE843_Type_Confusion__short_44.c":66:1)
#loc42 = loc("CWE843_Type_Confusion__short_44.c":56:5)
#loc43 = loc("CWE843_Type_Confusion__short_44.c":56:12)
#loc44 = loc("CWE843_Type_Confusion__short_44.c":57:5)
#loc45 = loc("CWE843_Type_Confusion__short_44.c":57:32)
#loc46 = loc("CWE843_Type_Confusion__short_44.c":59:12)
#loc47 = loc("CWE843_Type_Confusion__short_44.c":59:5)
#loc48 = loc("CWE843_Type_Confusion__short_44.c":60:5)
#loc49 = loc("CWE843_Type_Confusion__short_44.c":64:5)
#loc50 = loc("CWE843_Type_Confusion__short_44.c":62:9)
#loc51 = loc("CWE843_Type_Confusion__short_44.c":62:25)
#loc52 = loc("CWE843_Type_Confusion__short_44.c":63:16)
#loc53 = loc("CWE843_Type_Confusion__short_44.c":63:17)
#loc54 = loc("CWE843_Type_Confusion__short_44.c":63:9)
#loc55 = loc("CWE843_Type_Confusion__short_44.c":65:5)
#loc56 = loc("CWE843_Type_Confusion__short_44.c":65:13)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc60 = loc(fused[#loc11, #loc12])
#loc61 = loc(fused[#loc13, #loc14])
#loc62 = loc(fused[#loc15, #loc16])
#loc63 = loc(fused[#loc18, #loc17])
#loc64 = loc(fused[#loc19, #loc20])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc23, #loc24])
#loc67 = loc(fused[#loc25, #loc24])
#loc68 = loc(fused[#loc28, #loc29])
#loc69 = loc(fused[#loc30, #loc31])
#loc70 = loc(fused[#loc32, #loc33])
#loc72 = loc(fused[#loc40, #loc41])
#loc73 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc44, #loc45])
#loc75 = loc(fused[#loc47, #loc46])
#loc76 = loc(fused[#loc48, #loc49])
#loc77 = loc(fused[#loc50, #loc51])
#loc78 = loc(fused[#loc52, #loc53])
#loc79 = loc(fused[#loc54, #loc53])
