!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":31:21)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":31:28)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":212:10)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":212:14)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":212:20)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":212:32)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":78:26)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":78:33)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":121:26)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":121:33)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":159:25)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":159:32)
#true = #cir.bool<true> : !cir.bool
#loc304 = loc(fused[#loc20, #loc21])
#loc332 = loc(fused[#loc92, #loc93])
#loc333 = loc(fused[#loc94, #loc95])
#loc339 = loc(fused[#loc116, #loc117])
#loc362 = loc(fused[#loc180, #loc181])
#loc385 = loc(fused[#loc242, #loc243])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc296)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc298)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc299)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc300)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc301)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func internal private @badSink(%arg0: !u64i loc(fused[#loc20, #loc21])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc304)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc22)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc298)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc25)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc308)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc310)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc311)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc39)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc313)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc314)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc39)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc315)
              cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc318)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc50)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc51)
                  %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc52)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc50)
                } loc(#loc319)
              } loc(#loc317)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc53)
              %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc14)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc14)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
              %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc56)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
            } else {
              %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc59)
            } loc(#loc312)
          } loc(#loc309)
        } loc(#loc307)
      } loc(#loc306)
    } loc(#loc305)
    cir.return loc(#loc19)
  } loc(#loc303)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc321)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc64)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc322)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc66)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc297)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc66)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %10 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc298)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    cir.call @badSink(%11) : (!u64i) -> () loc(#loc71)
    cir.return loc(#loc61)
  } loc(#loc320)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc325)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc327)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc73)
  } loc(#loc324)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc328)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc329)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc89)
  cir.func @main(%arg0: !s32i loc(fused[#loc92, #loc93]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc94, #loc95])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc332)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc333)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc97)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc98)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc98)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc99)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc334)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21_good() : () -> () loc(#loc101)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc335)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21_bad() : () -> () loc(#loc105)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc89)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.return %17 : !s32i loc(#loc336)
  } loc(#loc331)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc337)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc113)
  cir.func internal private @goodB2G1Sink(%arg0: !u64i loc(fused[#loc116, #loc117])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc339)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc118)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc337)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc121)
      cir.if %3 {
        %4 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc112)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc112)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc125)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc343)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc345)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc346)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc136)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc137)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc137)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc347)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc135)
                cir.yield %14 : !cir.bool loc(#loc135)
              }, false {
                %14 = cir.const #false loc(#loc135)
                cir.yield %14 : !cir.bool loc(#loc135)
              }) : (!cir.bool) -> !cir.bool loc(#loc135)
              cir.yield %13 : !cir.bool loc(#loc135)
            }, false {
              %9 = cir.const #false loc(#loc135)
              cir.yield %9 : !cir.bool loc(#loc135)
            }) : (!cir.bool) -> !cir.bool loc(#loc135)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc141)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc349)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc350)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc351)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc354)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc152)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc153)
                  %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc154)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc152)
                } loc(#loc355)
              } loc(#loc353)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc155)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
              %17 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc157)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc157)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc159)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc160)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc160)
            } else {
              %9 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc113)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc113)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc162)
            } loc(#loc348)
          } loc(#loc344)
        } loc(#loc342)
      } loc(#loc341)
    } loc(#loc340)
    cir.return loc(#loc115)
  } loc(#loc338)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc357)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc167)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc358)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc169)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc297)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc170)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc171)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc171)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc169)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %10 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc337)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc174)
    cir.call @goodB2G1Sink(%11) : (!u64i) -> () loc(#loc175)
    cir.return loc(#loc164)
  } loc(#loc356)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc360)
  cir.func internal private @goodB2G2Sink(%arg0: !u64i loc(fused[#loc180, #loc181])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc362)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc360)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc185)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc366)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc193)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc368)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc369)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc197)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc198)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc198)
              %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc370)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc196)
                cir.yield %14 : !cir.bool loc(#loc196)
              }, false {
                %14 = cir.const #false loc(#loc196)
                cir.yield %14 : !cir.bool loc(#loc196)
              }) : (!cir.bool) -> !cir.bool loc(#loc196)
              cir.yield %13 : !cir.bool loc(#loc196)
            }, false {
              %9 = cir.const #false loc(#loc196)
              cir.yield %9 : !cir.bool loc(#loc196)
            }) : (!cir.bool) -> !cir.bool loc(#loc196)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc202)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc203)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc372)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc373)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc202)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc374)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc375)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc211)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc211)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc377)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc213)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc214)
                  %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc215)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc213)
                } loc(#loc378)
              } loc(#loc376)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc216)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
              %17 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc218)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc218)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc216)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc220)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc221)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc221)
            } else {
              %9 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc223)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc223)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc224)
            } loc(#loc371)
          } loc(#loc367)
        } loc(#loc365)
      } loc(#loc364)
    } loc(#loc363)
    cir.return loc(#loc179)
  } loc(#loc361)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc229)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc229)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc381)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc231)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc297)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc232)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc233)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc233)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc231)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc234)
    %10 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc360)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc236)
    cir.call @goodB2G2Sink(%11) : (!u64i) -> () loc(#loc237)
    cir.return loc(#loc226)
  } loc(#loc379)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc383)
  cir.func internal private @goodG2BSink(%arg0: !u64i loc(fused[#loc242, #loc243])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc385)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc383)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc247)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc247)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc389)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc255)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc391)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc392)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc261)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc262)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc394)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc395)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc261)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc396)
              cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc397)
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc270)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc270)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc399)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc272)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc273)
                  %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc274)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc272)
                } loc(#loc400)
              } loc(#loc398)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc275)
              %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc276)
              %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc277)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc277)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc275)
              %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc278)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc279)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc280)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc281)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc281)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc280)
            } else {
              %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc282)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc282)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc283)
            } loc(#loc393)
          } loc(#loc390)
        } loc(#loc388)
      } loc(#loc387)
    } loc(#loc386)
    cir.return loc(#loc241)
  } loc(#loc384)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc402)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc288)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc288)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc403)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc290)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc290)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc404)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc292)
    %6 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc383)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc294)
    cir.call @goodG2BSink(%7) : (!u64i) -> () loc(#loc295)
    cir.return loc(#loc285)
  } loc(#loc401)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":63:19)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":29:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":29:24)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("/usr/include/string.h":141:1)
#loc13 = loc("/usr/include/string.h":142:14)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":45:34)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":51:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":31:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":55:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":32:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":33:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":54:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":33:8)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":34:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":35:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":53:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":36:13)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":36:20)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":40:13)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":52:13)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":40:17)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":40:24)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":40:43)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":41:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":48:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":50:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":42:36)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":42:43)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":42:48)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":42:59)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":42:60)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":42:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:17)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:49)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:21)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:33)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:39)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:40)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:46)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":43:45)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":45:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":45:24)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":46:27)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":46:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":47:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":47:22)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":51:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":57:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":66:1)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":59:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":59:12)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":61:12)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":61:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":63:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":63:12)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":64:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":64:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":65:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":65:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":196:1)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":201:1)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":198:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":198:14)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":199:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":199:14)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":200:5)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":200:13)
#loc80 = loc("/usr/include/stdlib.h":575:1)
#loc81 = loc("/usr/include/stdlib.h":575:41)
#loc82 = loc("/usr/include/time.h":76:1)
#loc83 = loc("/usr/include/time.h":76:38)
#loc84 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc85 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":217:15)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":219:15)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":222:15)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":224:15)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":212:1)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":227:1)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":213:1)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":215:27)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":215:22)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":215:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":217:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":218:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":218:63)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":219:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":222:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":223:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":223:62)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":224:5)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":226:12)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":226:5)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":73:1)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":73:29)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":83:19)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":103:27)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":78:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":107:1)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":79:1)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":80:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":106:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":80:8)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":81:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":84:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":86:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":83:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":87:9)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":105:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":88:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":88:20)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":92:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":104:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":92:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":92:24)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":92:43)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":92:45)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":92:48)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":92:55)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":93:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":100:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":102:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":94:36)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":94:43)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":94:48)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":94:59)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":94:60)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":94:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:17)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:49)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:21)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:33)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:39)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:40)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:46)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":95:45)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":97:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":97:24)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":97:34)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":98:27)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":98:17)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":99:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":99:22)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":103:17)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":109:1)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":118:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":111:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":111:12)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":113:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":113:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":115:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":115:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":115:19)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":116:22)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":116:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":117:18)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":117:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":74:1)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":74:29)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":121:1)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":145:1)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":122:1)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":123:5)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":144:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":123:8)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":124:5)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":125:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":143:9)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":126:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":126:20)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":130:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":142:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":130:17)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":130:24)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":130:43)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":130:45)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":130:48)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":130:55)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":131:13)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":138:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":140:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":132:36)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":132:43)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":132:48)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":132:59)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":132:60)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":132:17)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:49)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:21)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:33)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:39)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:40)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:46)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":133:45)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":135:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":135:24)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":135:34)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":136:27)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":136:17)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":137:17)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":137:22)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":141:27)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":141:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":147:1)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":156:1)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":149:5)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":149:12)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":151:12)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":151:5)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":153:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":153:12)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":153:19)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":154:22)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":154:5)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":155:18)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":155:5)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":75:1)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":75:28)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":159:1)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":183:1)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":160:1)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":161:5)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":182:5)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":161:8)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":162:5)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":163:9)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":181:9)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":164:13)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":164:20)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":168:13)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":180:13)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":168:17)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":168:24)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":168:43)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":169:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":176:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":178:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":170:36)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":170:43)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":170:48)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":170:59)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":170:60)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":170:17)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:17)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:49)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:21)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:33)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:39)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:40)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:46)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":171:45)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":173:17)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":173:24)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":173:34)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":174:27)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":174:17)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":175:17)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":175:22)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":179:27)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":179:17)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":185:1)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":194:1)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":187:5)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":187:12)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":189:12)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":189:5)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":191:12)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":191:5)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":192:21)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":192:5)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":193:17)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_21.c":193:5)
#loc296 = loc(fused[#loc1, #loc2])
#loc297 = loc(fused[#loc3, #loc4])
#loc298 = loc(fused[#loc6, #loc7])
#loc299 = loc(fused[#loc8, #loc9])
#loc300 = loc(fused[#loc10, #loc11])
#loc301 = loc(fused[#loc12, #loc13])
#loc302 = loc(fused[#loc15, #loc16])
#loc303 = loc(fused[#loc18, #loc19])
#loc305 = loc(fused[#loc23, #loc24])
#loc306 = loc(fused[#loc26, #loc24])
#loc307 = loc(fused[#loc27, #loc28])
#loc308 = loc(fused[#loc29, #loc30])
#loc309 = loc(fused[#loc31, #loc32])
#loc310 = loc(fused[#loc34, #loc35])
#loc311 = loc(fused[#loc33, #loc35])
#loc312 = loc(fused[#loc36, #loc37, #loc38, #loc32])
#loc313 = loc(fused[#loc41, #loc42])
#loc314 = loc(fused[#loc40, #loc42])
#loc315 = loc(fused[#loc39, #loc43])
#loc316 = loc(fused[#loc44, #loc43])
#loc317 = loc(fused[#loc45, #loc46])
#loc318 = loc(fused[#loc47, #loc48])
#loc319 = loc(fused[#loc49, #loc46])
#loc320 = loc(fused[#loc60, #loc61])
#loc321 = loc(fused[#loc62, #loc63])
#loc322 = loc(fused[#loc65, #loc64])
#loc323 = loc(fused[#loc69, #loc68])
#loc324 = loc(fused[#loc72, #loc73])
#loc325 = loc(fused[#loc74, #loc75])
#loc326 = loc(fused[#loc76, #loc77])
#loc327 = loc(fused[#loc78, #loc79])
#loc328 = loc(fused[#loc80, #loc81])
#loc329 = loc(fused[#loc82, #loc83])
#loc330 = loc(fused[#loc84, #loc85])
#loc331 = loc(fused[#loc90, #loc91])
#loc334 = loc(fused[#loc101, #loc102])
#loc335 = loc(fused[#loc105, #loc106])
#loc336 = loc(fused[#loc109, #loc108])
#loc337 = loc(fused[#loc110, #loc111])
#loc338 = loc(fused[#loc114, #loc115])
#loc340 = loc(fused[#loc119, #loc120])
#loc341 = loc(fused[#loc122, #loc123, #loc124, #loc120])
#loc342 = loc(fused[#loc126, #loc127])
#loc343 = loc(fused[#loc128, #loc129])
#loc344 = loc(fused[#loc130, #loc131])
#loc345 = loc(fused[#loc133, #loc134])
#loc346 = loc(fused[#loc132, #loc134])
#loc347 = loc(fused[#loc136, #loc137])
#loc348 = loc(fused[#loc138, #loc139, #loc140, #loc131])
#loc349 = loc(fused[#loc143, #loc144])
#loc350 = loc(fused[#loc142, #loc144])
#loc351 = loc(fused[#loc141, #loc145])
#loc352 = loc(fused[#loc146, #loc145])
#loc353 = loc(fused[#loc147, #loc148])
#loc354 = loc(fused[#loc149, #loc150])
#loc355 = loc(fused[#loc151, #loc148])
#loc356 = loc(fused[#loc163, #loc164])
#loc357 = loc(fused[#loc165, #loc166])
#loc358 = loc(fused[#loc168, #loc167])
#loc359 = loc(fused[#loc173, #loc172])
#loc360 = loc(fused[#loc176, #loc177])
#loc361 = loc(fused[#loc178, #loc179])
#loc363 = loc(fused[#loc183, #loc184])
#loc364 = loc(fused[#loc186, #loc184])
#loc365 = loc(fused[#loc187, #loc188])
#loc366 = loc(fused[#loc189, #loc190])
#loc367 = loc(fused[#loc191, #loc192])
#loc368 = loc(fused[#loc194, #loc195])
#loc369 = loc(fused[#loc193, #loc195])
#loc370 = loc(fused[#loc197, #loc198])
#loc371 = loc(fused[#loc199, #loc200, #loc201, #loc192])
#loc372 = loc(fused[#loc204, #loc205])
#loc373 = loc(fused[#loc203, #loc205])
#loc374 = loc(fused[#loc202, #loc206])
#loc375 = loc(fused[#loc207, #loc206])
#loc376 = loc(fused[#loc208, #loc209])
#loc377 = loc(fused[#loc210, #loc211])
#loc378 = loc(fused[#loc212, #loc209])
#loc379 = loc(fused[#loc225, #loc226])
#loc380 = loc(fused[#loc227, #loc228])
#loc381 = loc(fused[#loc230, #loc229])
#loc382 = loc(fused[#loc235, #loc234])
#loc383 = loc(fused[#loc238, #loc239])
#loc384 = loc(fused[#loc240, #loc241])
#loc386 = loc(fused[#loc245, #loc246])
#loc387 = loc(fused[#loc248, #loc246])
#loc388 = loc(fused[#loc249, #loc250])
#loc389 = loc(fused[#loc251, #loc252])
#loc390 = loc(fused[#loc253, #loc254])
#loc391 = loc(fused[#loc256, #loc257])
#loc392 = loc(fused[#loc255, #loc257])
#loc393 = loc(fused[#loc258, #loc259, #loc260, #loc254])
#loc394 = loc(fused[#loc263, #loc264])
#loc395 = loc(fused[#loc262, #loc264])
#loc396 = loc(fused[#loc261, #loc265])
#loc397 = loc(fused[#loc266, #loc265])
#loc398 = loc(fused[#loc267, #loc268])
#loc399 = loc(fused[#loc269, #loc270])
#loc400 = loc(fused[#loc271, #loc268])
#loc401 = loc(fused[#loc284, #loc285])
#loc402 = loc(fused[#loc286, #loc287])
#loc403 = loc(fused[#loc289, #loc288])
#loc404 = loc(fused[#loc291, #loc290])
#loc405 = loc(fused[#loc293, #loc292])
