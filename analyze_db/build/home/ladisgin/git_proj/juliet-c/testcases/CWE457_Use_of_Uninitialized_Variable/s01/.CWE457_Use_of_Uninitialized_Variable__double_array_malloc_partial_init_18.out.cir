!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":131:10)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":131:14)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":131:20)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":131:32)
#loc268 = loc(fused[#loc83, #loc84])
#loc269 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc233)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc234)
  cir.func private @printDoubleLine(!cir.double) loc(#loc235)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc238)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc239)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc240)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc241)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc242)
    cir.store %9, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc243)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc23)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc24)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc245)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc246)
    } loc(#loc244)
    cir.goto "source" loc(#loc247)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc31)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc34)
      cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc249)
      cir.for : cond {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc37)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc38)
        %14 = cir.binop(div, %12, %13) : !s32i loc(#loc250)
        %15 = cir.cmp(lt, %11, %14) : !s32i, !cir.bool loc(#loc251)
        cir.condition(%15) loc(#loc40)
      } body {
        cir.scope {
          %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
          %12 = cir.cast(int_to_float, %11 : !s32i), !cir.double loc(#loc42)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc43)
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc45)
          cir.store %12, %15 : !cir.double, !cir.ptr<!cir.double> loc(#loc253)
        } loc(#loc252)
        cir.yield loc(#loc33)
      } step {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc47)
        cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc254)
        cir.yield loc(#loc248)
      } loc(#loc248)
    } loc(#loc248)
    cir.goto "sink" loc(#loc255)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc50)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc53)
      cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc257)
      cir.for : cond {
        %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc56)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc258)
        cir.condition(%13) loc(#loc57)
      } body {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc59)
          %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc61)
          %14 = cir.load %13 : !cir.ptr<!cir.double>, !cir.double loc(#loc59)
          cir.call @printDoubleLine(%14) : (!cir.double) -> () loc(#loc62)
        } loc(#loc259)
        cir.yield loc(#loc52)
      } step {
        %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc64)
        cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc260)
        cir.yield loc(#loc256)
      } loc(#loc256)
    } loc(#loc256)
    cir.return loc(#loc8)
  } loc(#loc236)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc66)
  } loc(#loc261)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc265)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc90)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc271)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    cir.return %17 : !s32i loc(#loc272)
  } loc(#loc267)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc275)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc276)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc110)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc110)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc277)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc278)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc279)
    cir.store %9, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc280)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc117)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc118)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc282)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc122)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
      } loc(#loc283)
    } loc(#loc281)
    cir.goto "source" loc(#loc284)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc125)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc128)
      cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc286)
      cir.for : cond {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc130)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc131)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc132)
        %14 = cir.binop(div, %12, %13) : !s32i loc(#loc287)
        %15 = cir.cmp(lt, %11, %14) : !s32i, !cir.bool loc(#loc288)
        cir.condition(%15) loc(#loc134)
      } body {
        cir.scope {
          %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %12 = cir.cast(int_to_float, %11 : !s32i), !cir.double loc(#loc136)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc137)
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc139)
          cir.store %12, %15 : !cir.double, !cir.ptr<!cir.double> loc(#loc290)
        } loc(#loc289)
        cir.yield loc(#loc127)
      } step {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc141)
        cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc291)
        cir.yield loc(#loc285)
      } loc(#loc285)
    } loc(#loc285)
    cir.goto "sink" loc(#loc292)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc144)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc147)
      cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
      cir.for : cond {
        %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc150)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc295)
        cir.condition(%13) loc(#loc151)
      } body {
        cir.scope {
          %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
          %12 = cir.cast(int_to_float, %11 : !s32i), !cir.double loc(#loc153)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc154)
          %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc156)
          cir.store %12, %15 : !cir.double, !cir.ptr<!cir.double> loc(#loc297)
        } loc(#loc296)
        cir.yield loc(#loc146)
      } step {
        %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc157)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc158)
        cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc298)
        cir.yield loc(#loc293)
      } loc(#loc293)
    } loc(#loc293)
    cir.scope {
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc300)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc165)
        cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc302)
        cir.for : cond {
          %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc168)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc303)
          cir.condition(%14) loc(#loc169)
        } body {
          cir.scope {
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc171)
            %13 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc173)
            %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc171)
            cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc174)
          } loc(#loc304)
          cir.yield loc(#loc164)
        } step {
          %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc176)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc305)
          cir.yield loc(#loc301)
        } loc(#loc301)
      } loc(#loc301)
    } loc(#loc299)
    cir.return loc(#loc102)
  } loc(#loc273)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc307)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc308)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc309)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc185)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc186)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc186)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc310)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc311)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc185)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc312)
    cir.store %9, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc313)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc193)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc194)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc194)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc315)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc196)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc197)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc198)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc196)
      } loc(#loc316)
    } loc(#loc314)
    cir.goto "source" loc(#loc317)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc201)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc204)
      cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc319)
      cir.for : cond {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc206)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc207)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc320)
        cir.condition(%13) loc(#loc208)
      } body {
        cir.scope {
          %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc210)
          %12 = cir.cast(int_to_float, %11 : !s32i), !cir.double loc(#loc210)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc211)
          %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc212)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc213)
          cir.store %12, %15 : !cir.double, !cir.ptr<!cir.double> loc(#loc322)
        } loc(#loc321)
        cir.yield loc(#loc203)
      } step {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc215)
        cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc323)
        cir.yield loc(#loc318)
      } loc(#loc318)
    } loc(#loc318)
    cir.goto "sink" loc(#loc324)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc218)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc221)
      cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc326)
      cir.for : cond {
        %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc224)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc327)
        cir.condition(%13) loc(#loc225)
      } body {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc227)
          %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc229)
          %14 = cir.load %13 : !cir.ptr<!cir.double>, !cir.double loc(#loc227)
          cir.call @printDoubleLine(%14) : (!cir.double) -> () loc(#loc230)
        } loc(#loc328)
        cir.yield loc(#loc220)
      } step {
        %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc231)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc232)
        cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc329)
        cir.yield loc(#loc325)
      } loc(#loc325)
    } loc(#loc325)
    cir.return loc(#loc178)
  } loc(#loc306)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":22:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":47:1)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":24:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":24:14)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":31:9)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":31:13)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":41:9)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":41:13)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":25:22)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":25:29)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":25:32)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":25:45)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":25:46)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":25:5)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:5)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:33)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:9)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:17)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:23)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:24)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:30)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":26:29)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":27:5)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":27:10)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":28:1)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:9)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":35:9)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:15)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:13)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:18)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:21)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:24)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:25)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:19)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":33:9)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":34:31)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":34:13)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":34:18)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":34:19)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:29)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":32:28)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":37:5)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":37:10)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":38:1)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:9)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":45:9)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:15)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:13)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:18)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:20)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:19)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":43:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":44:29)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":44:34)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":44:35)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":44:13)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:25)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":42:24)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":116:1)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":120:1)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":118:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":118:13)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":119:5)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":119:13)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":136:15)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":138:15)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":141:15)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":143:15)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":131:1)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":146:1)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":132:1)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":134:27)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":134:22)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":134:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":136:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":137:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":137:84)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":138:5)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":141:5)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":142:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":142:83)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":143:5)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":145:12)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":145:5)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":54:1)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":86:1)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":56:5)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":56:14)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":63:9)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":63:13)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":73:9)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":73:13)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":57:22)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":57:29)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":57:32)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":57:45)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":57:46)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":57:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:33)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:9)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:17)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:23)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:24)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:30)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":58:29)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":59:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":59:10)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":60:1)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:9)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":67:9)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:15)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:13)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:18)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:21)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:24)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:25)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:19)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":65:9)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":66:31)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":66:13)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":66:18)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":66:19)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:29)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":64:28)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":69:5)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":69:10)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":70:1)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:9)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":77:9)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:15)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:13)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:18)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:20)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:19)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":75:9)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":76:31)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":76:13)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":76:18)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":76:19)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:25)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":74:24)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":79:5)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":85:5)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":80:9)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":80:13)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:9)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":84:9)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:15)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:13)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:18)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:20)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:19)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":82:9)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":83:29)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":83:34)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":83:35)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":83:13)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:25)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":81:24)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":89:1)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":114:1)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":91:5)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":91:14)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":98:9)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":98:13)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":108:9)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":108:13)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":92:22)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":92:29)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":92:32)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":92:45)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":92:46)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":92:5)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:5)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:33)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:9)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:17)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:23)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:24)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:30)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":93:29)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":94:5)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":94:10)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":95:1)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:9)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":102:9)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:15)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:13)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:18)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:20)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:19)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":100:9)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":101:31)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":101:13)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":101:18)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":101:19)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:25)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":99:24)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":104:5)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":104:10)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":105:1)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:9)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":112:9)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:15)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:13)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:18)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:20)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:19)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":110:9)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":111:29)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":111:34)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":111:35)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":111:13)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:25)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_18.c":109:24)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc3, #loc4])
#loc235 = loc(fused[#loc5, #loc6])
#loc236 = loc(fused[#loc7, #loc8])
#loc237 = loc(fused[#loc9, #loc10])
#loc238 = loc(fused[#loc11, #loc12])
#loc239 = loc(fused[#loc13, #loc14])
#loc240 = loc(fused[#loc17, #loc18])
#loc241 = loc(fused[#loc16, #loc18])
#loc242 = loc(fused[#loc15, #loc19])
#loc243 = loc(fused[#loc20, #loc19])
#loc244 = loc(fused[#loc21, #loc22])
#loc245 = loc(fused[#loc23, #loc24])
#loc246 = loc(fused[#loc25, #loc22])
#loc247 = loc(fused[#loc29, #loc30])
#loc248 = loc(fused[#loc32, #loc33])
#loc249 = loc(fused[#loc35, #loc34])
#loc250 = loc(fused[#loc37, #loc38])
#loc251 = loc(fused[#loc36, #loc39])
#loc252 = loc(fused[#loc41, #loc33])
#loc253 = loc(fused[#loc43, #loc42])
#loc254 = loc(fused[#loc47, #loc46])
#loc255 = loc(fused[#loc48, #loc49])
#loc256 = loc(fused[#loc51, #loc52])
#loc257 = loc(fused[#loc54, #loc53])
#loc258 = loc(fused[#loc55, #loc56])
#loc259 = loc(fused[#loc58, #loc52])
#loc260 = loc(fused[#loc64, #loc63])
#loc261 = loc(fused[#loc65, #loc66])
#loc262 = loc(fused[#loc67, #loc68])
#loc263 = loc(fused[#loc69, #loc70])
#loc264 = loc(fused[#loc71, #loc72])
#loc265 = loc(fused[#loc73, #loc74])
#loc266 = loc(fused[#loc75, #loc76])
#loc267 = loc(fused[#loc81, #loc82])
#loc270 = loc(fused[#loc92, #loc93])
#loc271 = loc(fused[#loc96, #loc97])
#loc272 = loc(fused[#loc100, #loc99])
#loc273 = loc(fused[#loc101, #loc102])
#loc274 = loc(fused[#loc103, #loc104])
#loc275 = loc(fused[#loc105, #loc106])
#loc276 = loc(fused[#loc107, #loc108])
#loc277 = loc(fused[#loc111, #loc112])
#loc278 = loc(fused[#loc110, #loc112])
#loc279 = loc(fused[#loc109, #loc113])
#loc280 = loc(fused[#loc114, #loc113])
#loc281 = loc(fused[#loc115, #loc116])
#loc282 = loc(fused[#loc117, #loc118])
#loc283 = loc(fused[#loc119, #loc116])
#loc284 = loc(fused[#loc123, #loc124])
#loc285 = loc(fused[#loc126, #loc127])
#loc286 = loc(fused[#loc129, #loc128])
#loc287 = loc(fused[#loc131, #loc132])
#loc288 = loc(fused[#loc130, #loc133])
#loc289 = loc(fused[#loc135, #loc127])
#loc290 = loc(fused[#loc137, #loc136])
#loc291 = loc(fused[#loc141, #loc140])
#loc292 = loc(fused[#loc142, #loc143])
#loc293 = loc(fused[#loc145, #loc146])
#loc294 = loc(fused[#loc148, #loc147])
#loc295 = loc(fused[#loc149, #loc150])
#loc296 = loc(fused[#loc152, #loc146])
#loc297 = loc(fused[#loc154, #loc153])
#loc298 = loc(fused[#loc158, #loc157])
#loc299 = loc(fused[#loc159, #loc160])
#loc300 = loc(fused[#loc161, #loc162])
#loc301 = loc(fused[#loc163, #loc164])
#loc302 = loc(fused[#loc166, #loc165])
#loc303 = loc(fused[#loc167, #loc168])
#loc304 = loc(fused[#loc170, #loc164])
#loc305 = loc(fused[#loc176, #loc175])
#loc306 = loc(fused[#loc177, #loc178])
#loc307 = loc(fused[#loc179, #loc180])
#loc308 = loc(fused[#loc181, #loc182])
#loc309 = loc(fused[#loc183, #loc184])
#loc310 = loc(fused[#loc187, #loc188])
#loc311 = loc(fused[#loc186, #loc188])
#loc312 = loc(fused[#loc185, #loc189])
#loc313 = loc(fused[#loc190, #loc189])
#loc314 = loc(fused[#loc191, #loc192])
#loc315 = loc(fused[#loc193, #loc194])
#loc316 = loc(fused[#loc195, #loc192])
#loc317 = loc(fused[#loc199, #loc200])
#loc318 = loc(fused[#loc202, #loc203])
#loc319 = loc(fused[#loc205, #loc204])
#loc320 = loc(fused[#loc206, #loc207])
#loc321 = loc(fused[#loc209, #loc203])
#loc322 = loc(fused[#loc211, #loc210])
#loc323 = loc(fused[#loc215, #loc214])
#loc324 = loc(fused[#loc216, #loc217])
#loc325 = loc(fused[#loc219, #loc220])
#loc326 = loc(fused[#loc222, #loc221])
#loc327 = loc(fused[#loc223, #loc224])
#loc328 = loc(fused[#loc226, #loc220])
#loc329 = loc(fused[#loc232, #loc231])
