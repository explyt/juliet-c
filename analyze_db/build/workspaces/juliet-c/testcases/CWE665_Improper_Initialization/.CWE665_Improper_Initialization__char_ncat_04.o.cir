!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc139)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
      } loc(#loc147)
    } loc(#loc146)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc149)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc150)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc26)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc27)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc31)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc32)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc34)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc152)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc35)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc35)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc153)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc39)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc42)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc39)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    } loc(#loc148)
    cir.return loc(#loc8)
  } loc(#loc142)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc159)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc62)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } else {
        %5 = cir.const #cir.int<0> : !s32i loc(#loc67)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc67)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc70)
        cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc163)
      } loc(#loc162)
    } loc(#loc161)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc165)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc166)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc78)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc79)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc79)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc79)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc83)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc83)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc84)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc86)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc168)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc87)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc87)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc169)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc91)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc94)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc91)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    } loc(#loc164)
    cir.return loc(#loc53)
  } loc(#loc157)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc107)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc107)
      cir.if %4 {
        %5 = cir.const #cir.int<0> : !s32i loc(#loc109)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc109)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc111)
        %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc112)
        cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc176)
      } loc(#loc175)
    } loc(#loc174)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc178)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc179)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc120)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc121)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc122)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc121)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc121)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc180)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc125)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc126)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc127)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc126)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc128)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc181)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc129)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc129)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc182)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc133)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc136)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    } loc(#loc177)
    cir.return loc(#loc98)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_04.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/string.h":152:1)
#loc4 = loc("/usr/include/string.h":153:29)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE665_Improper_Initialization__char_ncat_04.c":30:1)
#loc8 = loc("CWE665_Improper_Initialization__char_ncat_04.c":50:1)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_04.c":32:5)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_04.c":32:12)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_04.c":33:5)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_04.c":33:24)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_04.c":34:12)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_04.c":34:5)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_04.c":35:5)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_04.c":39:5)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_04.c":35:8)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_04.c":36:5)
#loc19 = loc("CWE665_Improper_Initialization__char_ncat_04.c":40:5)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_04.c":49:5)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_04.c":41:9)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_04.c":41:16)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_04.c":42:9)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_04.c":42:24)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_04.c":43:16)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_04.c":43:24)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_04.c":43:29)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_04.c":43:33)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_04.c":43:9)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_04.c":43:34)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_04.c":44:25)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_04.c":44:16)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_04.c":44:20)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_04.c":44:9)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_04.c":45:21)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_04.c":45:28)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_04.c":45:9)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_04.c":45:34)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_04.c":47:9)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_04.c":47:17)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_04.c":47:23)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_04.c":47:31)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_04.c":48:19)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_04.c":48:9)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_04.c":107:1)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_04.c":111:1)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_04.c":109:5)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_04.c":109:14)
#loc49 = loc("CWE665_Improper_Initialization__char_ncat_04.c":110:5)
#loc50 = loc("CWE665_Improper_Initialization__char_ncat_04.c":110:14)
#loc51 = loc("CWE665_Improper_Initialization__char_ncat_04.c":65:19)
#loc52 = loc("CWE665_Improper_Initialization__char_ncat_04.c":57:1)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_04.c":82:1)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_04.c":59:5)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_04.c":59:12)
#loc56 = loc("CWE665_Improper_Initialization__char_ncat_04.c":60:5)
#loc57 = loc("CWE665_Improper_Initialization__char_ncat_04.c":60:24)
#loc58 = loc("CWE665_Improper_Initialization__char_ncat_04.c":61:12)
#loc59 = loc("CWE665_Improper_Initialization__char_ncat_04.c":61:5)
#loc60 = loc("CWE665_Improper_Initialization__char_ncat_04.c":62:5)
#loc61 = loc("CWE665_Improper_Initialization__char_ncat_04.c":71:5)
#loc62 = loc("CWE665_Improper_Initialization__char_ncat_04.c":62:8)
#loc63 = loc("CWE665_Improper_Initialization__char_ncat_04.c":63:5)
#loc64 = loc("CWE665_Improper_Initialization__char_ncat_04.c":66:5)
#loc65 = loc("CWE665_Improper_Initialization__char_ncat_04.c":68:5)
#loc66 = loc("CWE665_Improper_Initialization__char_ncat_04.c":65:9)
#loc67 = loc("CWE665_Improper_Initialization__char_ncat_04.c":70:19)
#loc68 = loc("CWE665_Improper_Initialization__char_ncat_04.c":70:9)
#loc69 = loc("CWE665_Improper_Initialization__char_ncat_04.c":70:14)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_04.c":70:15)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_04.c":72:5)
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_04.c":81:5)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_04.c":73:9)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_04.c":73:16)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_04.c":74:9)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_04.c":74:24)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_04.c":75:16)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_04.c":75:24)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_04.c":75:29)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_04.c":75:33)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_04.c":75:9)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_04.c":75:34)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_04.c":76:25)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_04.c":76:16)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_04.c":76:20)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_04.c":76:9)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_04.c":77:21)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_04.c":77:28)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_04.c":77:9)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_04.c":77:34)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_04.c":79:9)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_04.c":79:17)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_04.c":79:23)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_04.c":79:31)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_04.c":80:19)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_04.c":80:9)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_04.c":85:1)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_04.c":105:1)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_04.c":87:5)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_04.c":87:12)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_04.c":88:5)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_04.c":88:24)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_04.c":89:12)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_04.c":89:5)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_04.c":90:5)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_04.c":94:5)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_04.c":90:8)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_04.c":91:5)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_04.c":93:19)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_04.c":93:9)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_04.c":93:14)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_04.c":93:15)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_04.c":95:5)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_04.c":104:5)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_04.c":96:9)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_04.c":96:16)
#loc117 = loc("CWE665_Improper_Initialization__char_ncat_04.c":97:9)
#loc118 = loc("CWE665_Improper_Initialization__char_ncat_04.c":97:24)
#loc119 = loc("CWE665_Improper_Initialization__char_ncat_04.c":98:16)
#loc120 = loc("CWE665_Improper_Initialization__char_ncat_04.c":98:24)
#loc121 = loc("CWE665_Improper_Initialization__char_ncat_04.c":98:29)
#loc122 = loc("CWE665_Improper_Initialization__char_ncat_04.c":98:33)
#loc123 = loc("CWE665_Improper_Initialization__char_ncat_04.c":98:9)
#loc124 = loc("CWE665_Improper_Initialization__char_ncat_04.c":98:34)
#loc125 = loc("CWE665_Improper_Initialization__char_ncat_04.c":99:25)
#loc126 = loc("CWE665_Improper_Initialization__char_ncat_04.c":99:16)
#loc127 = loc("CWE665_Improper_Initialization__char_ncat_04.c":99:20)
#loc128 = loc("CWE665_Improper_Initialization__char_ncat_04.c":99:9)
#loc129 = loc("CWE665_Improper_Initialization__char_ncat_04.c":100:21)
#loc130 = loc("CWE665_Improper_Initialization__char_ncat_04.c":100:28)
#loc131 = loc("CWE665_Improper_Initialization__char_ncat_04.c":100:9)
#loc132 = loc("CWE665_Improper_Initialization__char_ncat_04.c":100:34)
#loc133 = loc("CWE665_Improper_Initialization__char_ncat_04.c":102:9)
#loc134 = loc("CWE665_Improper_Initialization__char_ncat_04.c":102:17)
#loc135 = loc("CWE665_Improper_Initialization__char_ncat_04.c":102:23)
#loc136 = loc("CWE665_Improper_Initialization__char_ncat_04.c":102:31)
#loc137 = loc("CWE665_Improper_Initialization__char_ncat_04.c":103:19)
#loc138 = loc("CWE665_Improper_Initialization__char_ncat_04.c":103:9)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc14, #loc13])
#loc146 = loc(fused[#loc15, #loc16])
#loc147 = loc(fused[#loc18, #loc16])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc23, #loc24])
#loc151 = loc(fused[#loc29, #loc30])
#loc152 = loc(fused[#loc34, #loc31])
#loc153 = loc(fused[#loc37, #loc38])
#loc154 = loc(fused[#loc45, #loc46])
#loc155 = loc(fused[#loc47, #loc48])
#loc156 = loc(fused[#loc49, #loc50])
#loc157 = loc(fused[#loc52, #loc53])
#loc158 = loc(fused[#loc54, #loc55])
#loc159 = loc(fused[#loc56, #loc57])
#loc160 = loc(fused[#loc59, #loc58])
#loc161 = loc(fused[#loc60, #loc61])
#loc162 = loc(fused[#loc63, #loc64, #loc65, #loc61])
#loc163 = loc(fused[#loc68, #loc67])
#loc164 = loc(fused[#loc71, #loc72])
#loc165 = loc(fused[#loc73, #loc74])
#loc166 = loc(fused[#loc75, #loc76])
#loc167 = loc(fused[#loc81, #loc82])
#loc168 = loc(fused[#loc86, #loc83])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc101, #loc102])
#loc173 = loc(fused[#loc104, #loc103])
#loc174 = loc(fused[#loc105, #loc106])
#loc175 = loc(fused[#loc108, #loc106])
#loc176 = loc(fused[#loc110, #loc109])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc115, #loc116])
#loc179 = loc(fused[#loc117, #loc118])
#loc180 = loc(fused[#loc123, #loc124])
#loc181 = loc(fused[#loc128, #loc125])
#loc182 = loc(fused[#loc131, #loc132])
