!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc93 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:44)
#loc134 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":237:10)
#loc135 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":237:14)
#loc136 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":237:20)
#loc137 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":237:32)
#loc257 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc348 = loc(fused[#loc134, #loc135])
#loc349 = loc(fused[#loc136, #loc137])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc298)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc299)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc300)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc301)
  cir.func private @close(!s32i) -> !s32i loc(#loc302)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_connect_socket_divide_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc303)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_divide_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc307)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc308)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc309)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc31)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb1 loc(#loc311)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc25)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb2 loc(#loc312)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc312)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc40)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb5 loc(#loc314)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc47)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc316)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc49)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc317)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc318)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc319)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc57)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc320)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc60)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc321)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc65)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc65)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc66)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc322)
    cir.br ^bb9 loc(#loc323)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc324)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc325)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc325)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc77)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc78)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc326)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc327)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc80)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc71)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc83)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc83)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc83)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc83)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc83)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc83)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc84)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc328)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc86)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc86)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb13 loc(#loc330)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc92)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc331)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc93)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc93)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc93)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc93)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc93)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc93)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc93)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc93)
  ^bb18(%68: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc93)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc93)
  ^bb20(%69: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc93)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc333)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc97)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc90)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc98)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc334)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc102)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb3 loc(#loc36)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc36)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc336)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc108)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc338)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc111)
    cir.br ^bb29 loc(#loc106)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc106)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc34)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %84 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_badData : !cir.ptr<!s32i> loc(#loc303)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %85 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc340)
    cir.call %85() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc114)
    cir.return loc(#loc19)
  } loc(#loc304)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_divide_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc342)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc118)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc343)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc120)
    cir.return loc(#loc117)
  } loc(#loc341)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc344)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc345)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc131)
  cir.func @main(%arg0: !s32i loc(fused[#loc134, #loc135]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc136, #loc137])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc348)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc349)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc133)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc139)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc140)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc141)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_divide_45_good() : () -> () loc(#loc143)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc351)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_divide_45_bad() : () -> () loc(#loc147)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc131)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc352)
    cir.return %17 : !s32i loc(#loc352)
  } loc(#loc347)
  cir.func private @printIntLine(!s32i) loc(#loc353)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_badData : !cir.ptr<!s32i> loc(#loc303)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc356)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc160)
    cir.return loc(#loc155)
  } loc(#loc354)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_connect_socket_divide_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc357)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc168)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc170)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %5 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_goodG2BData : !cir.ptr<!s32i> loc(#loc357)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc363)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc174)
    cir.return loc(#loc164)
  } loc(#loc358)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc365)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_goodG2BData : !cir.ptr<!s32i> loc(#loc357)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc180)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc366)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc182)
    cir.return loc(#loc177)
  } loc(#loc364)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_connect_socket_divide_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc367)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc370)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc371)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc372)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc373)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc198)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb1 loc(#loc375)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc192)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb2 loc(#loc376)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc376)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc204)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc204)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc205)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc207)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc208)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb5 loc(#loc378)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc214)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc379)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc380)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc216)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc212)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc381)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc219)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc382)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc383)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc224)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc224)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc384)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc226)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc226)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc227)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc385)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc230)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc230)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc231)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc386)
    cir.br ^bb9 loc(#loc387)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc388)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc389)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc389)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc241)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc242)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc391)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc244)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc235)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc246)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc246)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc247)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc247)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc247)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc247)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc247)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc247)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc247)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc248)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc248)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc392)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc249)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc250)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc250)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb13 loc(#loc394)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc256)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc256)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc257)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc257)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc257)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc259)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc396)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc257)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc257)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc257)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc257)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc257)
  ^bb18(%68: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc257)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc257)
  ^bb20(%69: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc257)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc397)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc261)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc254)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc262)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc262)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc264)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc264)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc398)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc265)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc266)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    cir.br ^bb3 loc(#loc203)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc203)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc400)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc272)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc402)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc275)
    cir.br ^bb29 loc(#loc270)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc270)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc201)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %84 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_goodB2GData : !cir.ptr<!s32i> loc(#loc367)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    %85 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc404)
    cir.call %85() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc278)
    cir.return loc(#loc186)
  } loc(#loc368)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc280)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_45_goodB2GData : !cir.ptr<!s32i> loc(#loc367)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb1 loc(#loc407)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc288)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc409)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc292)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %8 = cir.binop(div, %6, %7) : !s32i loc(#loc410)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc294)
    cir.br ^bb4 loc(#loc290)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc280)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc280)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc295)
    cir.br ^bb4 loc(#loc286)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc286)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc282)
  } loc(#loc405)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":86:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":42:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":42:12)
#loc18 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":55:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":118:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":65:9)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":65:13)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":66:9)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":66:28)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":67:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":67:32)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":68:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":68:41)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":57:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":57:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":59:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":59:12)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":59:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":60:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":115:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":69:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":104:17)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":104:16)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":79:36)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":79:45)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":79:58)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":79:29)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":79:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":79:69)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":80:13)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":83:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":80:17)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":80:34)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":81:13)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":82:17)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":84:20)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":84:21)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":84:30)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":84:33)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":84:47)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":84:13)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":84:48)
#loc57 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":85:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":85:13)
#loc60 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":86:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":86:13)
#loc64 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":86:59)
#loc65 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":87:38)
#loc66 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":87:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":87:13)
#loc69 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":87:46)
#loc70 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:13)
#loc71 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":91:13)
#loc72 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:25)
#loc73 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:58)
#loc74 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:59)
#loc75 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:68)
#loc76 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:82)
#loc77 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:17)
#loc78 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":88:88)
#loc79 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":89:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":90:17)
#loc81 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:31)
#loc82 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:46)
#loc83 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:59)
#loc84 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:77)
#loc85 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:80)
#loc86 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:26)
#loc87 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":94:81)
#loc89 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:13)
#loc90 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":98:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:31)
#loc94 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:47)
#loc95 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":95:61)
#loc96 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":96:13)
#loc97 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":97:17)
#loc98 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":100:39)
#loc99 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":100:25)
#loc100 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":100:13)
#loc101 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":102:25)
#loc102 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":102:20)
#loc103 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":102:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":102:36)
#loc105 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":105:9)
#loc106 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":108:9)
#loc107 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":105:13)
#loc108 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":105:30)
#loc109 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":106:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":107:26)
#loc111 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":107:13)
#loc112 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":116:67)
#loc113 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":116:5)
#loc114 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":117:5)
#loc115 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":117:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":223:1)
#loc117 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":227:1)
#loc118 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":225:5)
#loc119 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":225:13)
#loc120 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":226:5)
#loc121 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":226:13)
#loc122 = loc("/usr/include/stdlib.h":575:1)
#loc123 = loc("/usr/include/stdlib.h":575:41)
#loc124 = loc("/usr/include/time.h":76:1)
#loc125 = loc("/usr/include/time.h":76:38)
#loc126 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc127 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc128 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":242:15)
#loc129 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":244:15)
#loc130 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":247:15)
#loc131 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":249:15)
#loc132 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":237:1)
#loc133 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":252:1)
#loc138 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":238:1)
#loc139 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":240:27)
#loc140 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":240:22)
#loc141 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":240:5)
#loc142 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":242:5)
#loc143 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":243:5)
#loc144 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":243:62)
#loc145 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":244:5)
#loc146 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":247:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":248:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":248:61)
#loc149 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":249:5)
#loc150 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":251:12)
#loc151 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":251:5)
#loc152 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc153 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc154 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":48:1)
#loc155 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":53:1)
#loc156 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":50:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":50:16)
#loc158 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":52:18)
#loc159 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":52:24)
#loc160 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":52:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":43:1)
#loc162 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":43:12)
#loc163 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":132:1)
#loc164 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":141:1)
#loc165 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":134:5)
#loc166 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":134:9)
#loc167 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":136:13)
#loc168 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":136:12)
#loc169 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":136:5)
#loc170 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":138:12)
#loc171 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":138:5)
#loc172 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":139:71)
#loc173 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":139:5)
#loc174 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":140:5)
#loc175 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":140:17)
#loc176 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":125:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":130:1)
#loc178 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":127:5)
#loc179 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":127:16)
#loc180 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":129:18)
#loc181 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":129:24)
#loc182 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":129:5)
#loc183 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":44:1)
#loc184 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":44:12)
#loc185 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":158:1)
#loc186 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":221:1)
#loc187 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":168:9)
#loc188 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":168:13)
#loc189 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":169:9)
#loc190 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":169:28)
#loc191 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":170:9)
#loc192 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":170:32)
#loc193 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":171:9)
#loc194 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":171:41)
#loc195 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":160:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":160:9)
#loc197 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":162:13)
#loc198 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":162:12)
#loc199 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":162:5)
#loc200 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":163:5)
#loc201 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":218:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":172:9)
#loc203 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":207:17)
#loc204 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":207:16)
#loc205 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":182:36)
#loc206 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":182:45)
#loc207 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":182:58)
#loc208 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":182:29)
#loc209 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":182:13)
#loc210 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":182:69)
#loc211 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":183:13)
#loc212 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":186:13)
#loc213 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":183:17)
#loc214 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":183:34)
#loc215 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":184:13)
#loc216 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":185:17)
#loc217 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":187:20)
#loc218 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":187:21)
#loc219 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":187:30)
#loc220 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":187:33)
#loc221 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":187:47)
#loc222 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":187:13)
#loc223 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":187:48)
#loc224 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":188:34)
#loc225 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":188:13)
#loc226 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":189:49)
#loc227 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":189:39)
#loc228 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":189:13)
#loc229 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":189:59)
#loc230 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":190:38)
#loc231 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":190:32)
#loc232 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":190:13)
#loc233 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":190:46)
#loc234 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:13)
#loc235 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":194:13)
#loc236 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:25)
#loc237 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:58)
#loc238 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:59)
#loc239 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:68)
#loc240 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:82)
#loc241 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:17)
#loc242 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":191:88)
#loc243 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":192:13)
#loc244 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":193:17)
#loc245 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:31)
#loc246 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:46)
#loc247 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:59)
#loc248 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:77)
#loc249 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:80)
#loc250 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:26)
#loc251 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:13)
#loc252 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":197:81)
#loc253 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:13)
#loc254 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":201:13)
#loc255 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:17)
#loc256 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:31)
#loc258 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:47)
#loc259 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":198:61)
#loc260 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":199:13)
#loc261 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":200:17)
#loc262 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":203:39)
#loc263 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":203:25)
#loc264 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":203:13)
#loc265 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":205:25)
#loc266 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":205:20)
#loc267 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":205:13)
#loc268 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":205:36)
#loc269 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":208:9)
#loc270 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":211:9)
#loc271 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":208:13)
#loc272 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":208:30)
#loc273 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":209:9)
#loc274 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":210:26)
#loc275 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":210:13)
#loc276 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":219:71)
#loc277 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":219:5)
#loc278 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":220:5)
#loc279 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":220:17)
#loc280 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":154:19)
#loc281 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":144:1)
#loc282 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":156:1)
#loc283 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":146:5)
#loc284 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":146:16)
#loc285 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":148:5)
#loc286 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":155:5)
#loc287 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":148:9)
#loc288 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":148:17)
#loc289 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":149:5)
#loc290 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":151:5)
#loc291 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":153:5)
#loc292 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":150:22)
#loc293 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":150:28)
#loc294 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":150:9)
#loc295 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_45.c":154:9)
#loc296 = loc(fused[#loc1, #loc2])
#loc297 = loc(fused[#loc3, #loc4])
#loc298 = loc(fused[#loc6, #loc7])
#loc299 = loc(fused[#loc8, #loc9])
#loc300 = loc(fused[#loc10, #loc11])
#loc301 = loc(fused[#loc12, #loc13])
#loc302 = loc(fused[#loc14, #loc15])
#loc303 = loc(fused[#loc16, #loc17])
#loc304 = loc(fused[#loc18, #loc19])
#loc305 = loc(fused[#loc20, #loc21])
#loc306 = loc(fused[#loc22, #loc23])
#loc307 = loc(fused[#loc24, #loc25])
#loc308 = loc(fused[#loc26, #loc27])
#loc309 = loc(fused[#loc28, #loc29])
#loc310 = loc(fused[#loc32, #loc30])
#loc311 = loc(fused[#loc33, #loc34])
#loc312 = loc(fused[#loc35, #loc36])
#loc313 = loc(fused[#loc42, #loc43])
#loc314 = loc(fused[#loc44, #loc45])
#loc315 = loc(fused[#loc46, #loc47])
#loc316 = loc(fused[#loc48, #loc45])
#loc317 = loc(fused[#loc50, #loc51])
#loc318 = loc(fused[#loc53, #loc54])
#loc319 = loc(fused[#loc55, #loc56])
#loc320 = loc(fused[#loc59, #loc57])
#loc321 = loc(fused[#loc63, #loc64])
#loc322 = loc(fused[#loc68, #loc69])
#loc323 = loc(fused[#loc70, #loc71])
#loc324 = loc(fused[#loc73, #loc74])
#loc325 = loc(fused[#loc75, #loc76])
#loc326 = loc(fused[#loc77, #loc78])
#loc327 = loc(fused[#loc79, #loc71])
#loc328 = loc(fused[#loc83, #loc84])
#loc329 = loc(fused[#loc87, #loc88])
#loc330 = loc(fused[#loc89, #loc90])
#loc331 = loc(fused[#loc91, #loc92])
#loc332 = loc(fused[#loc94, #loc95])
#loc333 = loc(fused[#loc96, #loc90])
#loc334 = loc(fused[#loc100, #loc98])
#loc335 = loc(fused[#loc103, #loc104])
#loc336 = loc(fused[#loc105, #loc106])
#loc337 = loc(fused[#loc107, #loc108])
#loc338 = loc(fused[#loc109, #loc106])
#loc339 = loc(fused[#loc113, #loc112])
#loc340 = loc(fused[#loc114, #loc115])
#loc341 = loc(fused[#loc116, #loc117])
#loc342 = loc(fused[#loc118, #loc119])
#loc343 = loc(fused[#loc120, #loc121])
#loc344 = loc(fused[#loc122, #loc123])
#loc345 = loc(fused[#loc124, #loc125])
#loc346 = loc(fused[#loc126, #loc127])
#loc347 = loc(fused[#loc132, #loc133])
#loc350 = loc(fused[#loc143, #loc144])
#loc351 = loc(fused[#loc147, #loc148])
#loc352 = loc(fused[#loc151, #loc150])
#loc353 = loc(fused[#loc152, #loc153])
#loc354 = loc(fused[#loc154, #loc155])
#loc355 = loc(fused[#loc156, #loc157])
#loc356 = loc(fused[#loc158, #loc159])
#loc357 = loc(fused[#loc161, #loc162])
#loc358 = loc(fused[#loc163, #loc164])
#loc359 = loc(fused[#loc165, #loc166])
#loc360 = loc(fused[#loc169, #loc167])
#loc361 = loc(fused[#loc171, #loc170])
#loc362 = loc(fused[#loc173, #loc172])
#loc363 = loc(fused[#loc174, #loc175])
#loc364 = loc(fused[#loc176, #loc177])
#loc365 = loc(fused[#loc178, #loc179])
#loc366 = loc(fused[#loc180, #loc181])
#loc367 = loc(fused[#loc183, #loc184])
#loc368 = loc(fused[#loc185, #loc186])
#loc369 = loc(fused[#loc187, #loc188])
#loc370 = loc(fused[#loc189, #loc190])
#loc371 = loc(fused[#loc191, #loc192])
#loc372 = loc(fused[#loc193, #loc194])
#loc373 = loc(fused[#loc195, #loc196])
#loc374 = loc(fused[#loc199, #loc197])
#loc375 = loc(fused[#loc200, #loc201])
#loc376 = loc(fused[#loc202, #loc203])
#loc377 = loc(fused[#loc209, #loc210])
#loc378 = loc(fused[#loc211, #loc212])
#loc379 = loc(fused[#loc213, #loc214])
#loc380 = loc(fused[#loc215, #loc212])
#loc381 = loc(fused[#loc217, #loc218])
#loc382 = loc(fused[#loc220, #loc221])
#loc383 = loc(fused[#loc222, #loc223])
#loc384 = loc(fused[#loc225, #loc224])
#loc385 = loc(fused[#loc228, #loc229])
#loc386 = loc(fused[#loc232, #loc233])
#loc387 = loc(fused[#loc234, #loc235])
#loc388 = loc(fused[#loc237, #loc238])
#loc389 = loc(fused[#loc239, #loc240])
#loc390 = loc(fused[#loc241, #loc242])
#loc391 = loc(fused[#loc243, #loc235])
#loc392 = loc(fused[#loc247, #loc248])
#loc393 = loc(fused[#loc251, #loc252])
#loc394 = loc(fused[#loc253, #loc254])
#loc395 = loc(fused[#loc255, #loc256])
#loc396 = loc(fused[#loc258, #loc259])
#loc397 = loc(fused[#loc260, #loc254])
#loc398 = loc(fused[#loc264, #loc262])
#loc399 = loc(fused[#loc267, #loc268])
#loc400 = loc(fused[#loc269, #loc270])
#loc401 = loc(fused[#loc271, #loc272])
#loc402 = loc(fused[#loc273, #loc270])
#loc403 = loc(fused[#loc277, #loc276])
#loc404 = loc(fused[#loc278, #loc279])
#loc405 = loc(fused[#loc281, #loc282])
#loc406 = loc(fused[#loc283, #loc284])
#loc407 = loc(fused[#loc285, #loc286])
#loc408 = loc(fused[#loc287, #loc288])
#loc409 = loc(fused[#loc289, #loc290, #loc291, #loc286])
#loc410 = loc(fused[#loc292, #loc293])
