!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":159:10)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":159:14)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":159:20)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":159:32)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:27)
#true = #cir.bool<true> : !cir.bool
#loc243 = loc(fused[#loc87, #loc88])
#loc244 = loc(fused[#loc89, #loc90])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc211)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc212)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc213)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc218)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc219)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc220)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc221)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc222)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc223)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc222)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc223)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc30)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb2 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc218)
    cir.store %11, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc218)
    cir.br ^bb3 loc(#loc227)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %13 = cir.const #cir.int<3> : !s32i loc(#loc40)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc40)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc40)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc40)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc40)
    %19 = cir.binop(add, %16, %18) : !u64i loc(#loc40)
    %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc40)
    %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc212)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc228)
    cir.brcond %26 ^bb4, ^bb5 loc(#loc229)
  ^bb4:  // pred: ^bb3
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc47)
    %28 = cir.call @atoi(%27) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb6 loc(#loc45)
  ^bb5:  // pred: ^bb3
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // pred: ^bb7
    %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %32 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    cir.store %31, %32 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc232)
  ^bb10:  // pred: ^bb9
    %33 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.store %34, %2 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb11 loc(#loc233)
  ^bb11:  // pred: ^bb10
    %35 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc220)
    cir.store %35, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc220)
    cir.br ^bb12 loc(#loc234)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc235)
    cir.brcond %38 ^bb13, ^bb14 loc(#loc236)
  ^bb13:  // pred: ^bb12
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %40 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc68)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc68)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc69)
    cir.br ^bb15 loc(#loc65)
  ^bb14:  // pred: ^bb12
    %43 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb15 loc(#loc61)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc61)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc59)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc56)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc14)
  } loc(#loc216)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc237)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc240)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc94)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_32_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_32_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    cir.return %17 : !s32i loc(#loc247)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc249)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc250)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc251)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc252)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc253)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc254)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc253)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc254)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc120)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    %10 = cir.const #cir.int<7> : !s32i loc(#loc125)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc259)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.br ^bb4 loc(#loc260)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc251)
    cir.store %15, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc251)
    cir.br ^bb5 loc(#loc261)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %18 = cir.cmp(ge, %16, %17) : !s32i, !cir.bool loc(#loc262)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc263)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc143)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc143)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc144)
    cir.br ^bb8 loc(#loc140)
  ^bb7:  // pred: ^bb5
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc145)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.br ^bb8 loc(#loc136)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc136)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc134)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc131)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc106)
  } loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc147)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc266)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc267)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc268)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc269)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc270)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc271)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc270)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc271)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc165)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb1 loc(#loc273)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb2 loc(#loc274)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc266)
    cir.store %11, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc266)
    cir.br ^bb3 loc(#loc275)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc174)
    %13 = cir.const #cir.int<3> : !s32i loc(#loc175)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc175)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc175)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc175)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc175)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc175)
    %19 = cir.binop(add, %16, %18) : !u64i loc(#loc175)
    %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc175)
    %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc212)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
    %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc177)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc178)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc276)
    cir.brcond %26 ^bb4, ^bb5 loc(#loc277)
  ^bb4:  // pred: ^bb3
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc182)
    %28 = cir.call @atoi(%27) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc183)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb6 loc(#loc180)
  ^bb5:  // pred: ^bb3
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc186)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    cir.br ^bb6 loc(#loc173)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc173)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc171)
  ^bb8:  // pred: ^bb7
    %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %32 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
    cir.store %31, %32 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb9 loc(#loc168)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc280)
  ^bb10:  // pred: ^bb9
    %33 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.store %34, %2 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb11 loc(#loc281)
  ^bb11:  // pred: ^bb10
    %35 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc268)
    cir.store %35, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc268)
    cir.br ^bb12 loc(#loc282)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc283)
    cir.brcond %38 ^bb13, ^bb18 loc(#loc200)
  ^bb13:  // pred: ^bb12
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %40 = cir.const #cir.int<10> : !s32i loc(#loc202)
    %41 = cir.cmp(lt, %39, %40) : !s32i, !cir.bool loc(#loc284)
    cir.brcond %41 ^bb14, ^bb15 loc(#loc200)
  ^bb14:  // pred: ^bb13
    %42 = cir.const #true loc(#loc200)
    cir.br ^bb16(%42 : !cir.bool) loc(#loc200)
  ^bb15:  // pred: ^bb13
    %43 = cir.const #false loc(#loc200)
    cir.br ^bb16(%43 : !cir.bool) loc(#loc200)
  ^bb16(%44: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc200)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%44 : !cir.bool) loc(#loc200)
  ^bb18:  // pred: ^bb12
    %45 = cir.const #false loc(#loc200)
    cir.br ^bb19(%45 : !cir.bool) loc(#loc200)
  ^bb19(%46: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc200)
  ^bb20:  // pred: ^bb19
    cir.brcond %46 ^bb21, ^bb22 loc(#loc285)
  ^bb21:  // pred: ^bb20
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %48 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc208)
    %49 = cir.ptr_stride(%48 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc208)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc209)
    cir.br ^bb23 loc(#loc205)
  ^bb22:  // pred: ^bb20
    %51 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc147)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc210)
    cir.br ^bb23 loc(#loc197)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc197)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc195)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc192)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc149)
  } loc(#loc264)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":43:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":60:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":64:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:21)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":34:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":34:49)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:21)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":51:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":51:34)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":26:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":26:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":27:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":27:22)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":28:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":28:22)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:12)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":31:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":47:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:20)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":33:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":45:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":44:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:23)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:36)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:53)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:17)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:63)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":37:13)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":40:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":42:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:29)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:24)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:17)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:40)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":43:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:21)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:10)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":48:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":63:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:20)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":50:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":62:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":61:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:17)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:25)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":55:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":57:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":59:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:37)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:30)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:17)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":60:17)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":145:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":149:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":147:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":147:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":148:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":148:13)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":164:15)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":166:15)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":169:15)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":171:15)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":159:1)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":174:1)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":160:1)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":162:27)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":162:22)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":162:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":164:5)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":165:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":165:50)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":166:5)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":169:5)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":170:5)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":170:49)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":171:5)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":173:12)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":173:5)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":71:1)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":101:1)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:9)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:21)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:9)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:21)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":88:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":88:34)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":73:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":73:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":74:5)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":74:22)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":75:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":75:22)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:12)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":78:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":84:5)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:20)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":82:16)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":82:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:21)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:10)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":85:5)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":100:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:20)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":87:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":99:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":98:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:17)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:25)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":92:13)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":94:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":96:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:37)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:30)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:17)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":97:27)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":97:17)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":139:27)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":104:1)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":143:1)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:9)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:21)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":114:13)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":114:49)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:9)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:21)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":131:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":131:34)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":106:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":106:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":107:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":107:22)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":108:5)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":108:22)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:12)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:5)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":111:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":127:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:20)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":113:9)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":125:9)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":124:13)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:23)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:36)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:53)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:17)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:63)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":117:13)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":120:13)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":122:13)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:29)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:24)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:17)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:40)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":123:27)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":123:17)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:21)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:10)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":128:5)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":142:5)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:20)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":130:9)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":141:9)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":140:13)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:17)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:25)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:30)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:38)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:40)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":134:13)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":136:13)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":138:13)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:37)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:30)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:17)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":139:17)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc7, #loc8])
#loc215 = loc(fused[#loc10, #loc11])
#loc216 = loc(fused[#loc13, #loc14])
#loc217 = loc(fused[#loc15, #loc16])
#loc218 = loc(fused[#loc17, #loc18])
#loc219 = loc(fused[#loc19, #loc20])
#loc220 = loc(fused[#loc21, #loc22])
#loc221 = loc(fused[#loc23, #loc24])
#loc222 = loc(fused[#loc25, #loc26])
#loc223 = loc(fused[#loc27, #loc28])
#loc224 = loc(fused[#loc31, #loc29])
#loc225 = loc(fused[#loc32, #loc33])
#loc226 = loc(fused[#loc35, #loc36])
#loc227 = loc(fused[#loc37, #loc38])
#loc228 = loc(fused[#loc42, #loc43])
#loc229 = loc(fused[#loc44, #loc45, #loc46, #loc38])
#loc230 = loc(fused[#loc49, #loc50])
#loc231 = loc(fused[#loc54, #loc52])
#loc232 = loc(fused[#loc55, #loc56])
#loc233 = loc(fused[#loc58, #loc59])
#loc234 = loc(fused[#loc60, #loc61])
#loc235 = loc(fused[#loc62, #loc63])
#loc236 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc237 = loc(fused[#loc71, #loc72])
#loc238 = loc(fused[#loc73, #loc74])
#loc239 = loc(fused[#loc75, #loc76])
#loc240 = loc(fused[#loc77, #loc78])
#loc241 = loc(fused[#loc79, #loc80])
#loc242 = loc(fused[#loc85, #loc86])
#loc245 = loc(fused[#loc96, #loc97])
#loc246 = loc(fused[#loc100, #loc101])
#loc247 = loc(fused[#loc104, #loc103])
#loc248 = loc(fused[#loc105, #loc106])
#loc249 = loc(fused[#loc107, #loc108])
#loc250 = loc(fused[#loc109, #loc110])
#loc251 = loc(fused[#loc111, #loc112])
#loc252 = loc(fused[#loc113, #loc114])
#loc253 = loc(fused[#loc115, #loc116])
#loc254 = loc(fused[#loc117, #loc118])
#loc255 = loc(fused[#loc121, #loc119])
#loc256 = loc(fused[#loc122, #loc123])
#loc257 = loc(fused[#loc126, #loc125])
#loc258 = loc(fused[#loc129, #loc127])
#loc259 = loc(fused[#loc130, #loc131])
#loc260 = loc(fused[#loc133, #loc134])
#loc261 = loc(fused[#loc135, #loc136])
#loc262 = loc(fused[#loc137, #loc138])
#loc263 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc264 = loc(fused[#loc148, #loc149])
#loc265 = loc(fused[#loc150, #loc151])
#loc266 = loc(fused[#loc152, #loc153])
#loc267 = loc(fused[#loc154, #loc155])
#loc268 = loc(fused[#loc156, #loc157])
#loc269 = loc(fused[#loc158, #loc159])
#loc270 = loc(fused[#loc160, #loc161])
#loc271 = loc(fused[#loc162, #loc163])
#loc272 = loc(fused[#loc166, #loc164])
#loc273 = loc(fused[#loc167, #loc168])
#loc274 = loc(fused[#loc170, #loc171])
#loc275 = loc(fused[#loc172, #loc173])
#loc276 = loc(fused[#loc177, #loc178])
#loc277 = loc(fused[#loc179, #loc180, #loc181, #loc173])
#loc278 = loc(fused[#loc184, #loc185])
#loc279 = loc(fused[#loc190, #loc188])
#loc280 = loc(fused[#loc191, #loc192])
#loc281 = loc(fused[#loc194, #loc195])
#loc282 = loc(fused[#loc196, #loc197])
#loc283 = loc(fused[#loc198, #loc199])
#loc284 = loc(fused[#loc201, #loc203])
#loc285 = loc(fused[#loc204, #loc205, #loc206, #loc197])
