!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc249)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc250)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc251)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc252)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc254)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc256)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc259)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc262)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc262)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc262)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc40)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc43)
            } loc(#loc265)
          } loc(#loc263)
        } loc(#loc261)
      } loc(#loc260)
    } loc(#loc258)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc47)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc268)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc52)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc271)
          cir.if %8 {
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc273)
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc55)
            %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc56)
            cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc273)
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc58)
          } loc(#loc272)
        } loc(#loc270)
      } loc(#loc269)
    } loc(#loc267)
    cir.return loc(#loc15)
  } loc(#loc255)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc275)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc276)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc277)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc278)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc60)
  } loc(#loc274)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc80)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc283)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc286)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc286)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc286)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc89)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc89)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc89)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc89)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc89)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc89)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc89)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc89)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc91)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc288)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc97)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc101)
            } loc(#loc289)
          } loc(#loc287)
        } loc(#loc285)
      } loc(#loc284)
    } loc(#loc282)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc105)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc292)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc109)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc295)
          cir.if %8 {
            cir.scope {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %10 = cir.const #cir.int<2147483647> : !s32i loc(#loc118)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc118)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc118)
              %14 = cir.const #cir.int<2> : !s32i loc(#loc119)
              %15 = cir.binop(div, %13, %14) : !s32i loc(#loc298)
              %16 = cir.cmp(gt, %9, %15) : !s32i, !cir.bool loc(#loc299)
              cir.if %16 {
                %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc301)
                %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc125)
                %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc126)
                cir.store %20, %17 : !s32i, !cir.ptr<!s32i> loc(#loc301)
                %21 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc128)
              } else {
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc70)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc70)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc129)
              } loc(#loc300)
            } loc(#loc297)
          } loc(#loc296)
        } loc(#loc294)
      } loc(#loc293)
    } loc(#loc291)
    cir.return loc(#loc72)
  } loc(#loc279)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc303)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc139)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc306)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc309)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc309)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc309)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc147)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc148)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc148)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc148)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc148)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc148)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc148)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc148)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc148)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc150)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc311)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc155)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc156)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc159)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc159)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc160)
            } loc(#loc312)
          } loc(#loc310)
        } loc(#loc308)
      } loc(#loc307)
    } loc(#loc305)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc164)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc315)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc169)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc318)
          cir.if %8 {
            cir.scope {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %10 = cir.const #cir.int<2147483647> : !s32i loc(#loc174)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc174)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc174)
              %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc174)
              %14 = cir.const #cir.int<2> : !s32i loc(#loc175)
              %15 = cir.binop(div, %13, %14) : !s32i loc(#loc321)
              %16 = cir.cmp(gt, %9, %15) : !s32i, !cir.bool loc(#loc322)
              cir.if %16 {
                %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc324)
                %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc181)
                %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc182)
                cir.store %20, %17 : !s32i, !cir.ptr<!s32i> loc(#loc324)
                %21 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc184)
              } else {
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc185)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc185)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc186)
              } loc(#loc323)
            } loc(#loc320)
          } loc(#loc319)
        } loc(#loc317)
      } loc(#loc316)
    } loc(#loc314)
    cir.return loc(#loc131)
  } loc(#loc302)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc326)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc196)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc329)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc201)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc202)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc203)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
      } loc(#loc330)
    } loc(#loc328)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc208)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc333)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc213)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc336)
          cir.if %8 {
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc338)
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc216)
            %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc217)
            cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc338)
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc218)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc219)
          } loc(#loc337)
        } loc(#loc335)
      } loc(#loc334)
    } loc(#loc332)
    cir.return loc(#loc188)
  } loc(#loc325)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc340)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc224)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc229)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc343)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc231)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc232)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc345)
      } loc(#loc344)
    } loc(#loc342)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc249)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc236)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc237)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc347)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc242)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc350)
          cir.if %8 {
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc352)
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc245)
            %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc246)
            cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc352)
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc247)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc248)
          } loc(#loc351)
        } loc(#loc349)
      } loc(#loc348)
    } loc(#loc346)
    cir.return loc(#loc221)
  } loc(#loc339)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_07.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":25:1)
#loc2 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":25:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":46:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":29:1)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":59:1)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":31:5)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":31:9)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":33:12)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":33:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":34:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":49:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":34:8)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":34:20)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":35:5)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":36:9)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":48:9)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":37:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":37:49)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":39:13)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":47:13)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":39:23)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":39:36)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":39:53)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":39:17)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":39:63)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":40:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":43:13)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":45:13)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":42:29)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":42:24)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":42:17)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":42:40)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":46:17)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":50:5)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":58:5)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":50:8)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":50:20)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":51:5)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":52:9)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":57:9)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":52:12)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":52:19)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":53:9)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":55:13)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":55:33)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":55:26)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":56:26)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":56:13)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":199:1)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":205:1)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":201:5)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":201:14)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":202:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":202:14)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":203:5)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":203:14)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":204:5)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":204:14)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":90:19)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":104:27)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":66:1)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":108:1)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":68:5)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":68:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":70:12)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":70:5)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":71:5)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":86:5)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":71:8)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":71:20)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":72:5)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":73:9)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":85:9)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":74:13)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":74:49)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":76:13)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":84:13)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":76:23)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":76:36)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":76:53)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":76:17)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":76:63)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":77:13)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":80:13)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":82:13)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":79:29)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":79:24)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":79:17)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":79:40)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":83:27)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":83:17)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":87:5)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":107:5)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":87:8)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":87:20)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":88:5)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":91:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":93:5)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":90:9)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":94:9)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":106:9)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":94:12)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":94:19)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":95:9)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":97:13)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":105:13)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":97:17)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":97:25)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":97:33)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":97:34)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":98:13)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":101:13)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":103:13)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":99:17)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":99:37)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":99:30)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":100:30)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":100:17)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":104:17)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":111:1)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":148:1)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":113:5)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":113:9)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":115:12)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":115:5)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":116:5)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":131:5)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":116:8)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":116:20)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":117:5)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":118:9)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":130:9)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":119:13)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":119:49)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":121:13)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":129:13)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":121:23)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":121:36)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":121:53)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":121:17)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":121:63)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":122:13)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":125:13)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":127:13)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":124:29)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":124:24)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":124:17)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":124:40)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":128:27)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":128:17)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":132:5)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":147:5)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":132:8)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":132:20)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":133:5)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":134:9)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":146:9)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":134:12)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":134:19)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":135:9)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":137:13)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":145:13)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":137:17)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":137:25)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":137:33)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":137:34)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":138:13)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":141:13)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":143:13)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":139:17)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":139:37)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":139:30)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":140:30)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":140:17)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":144:27)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":144:17)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":151:1)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":175:1)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":153:5)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":153:9)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":155:12)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":155:5)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":156:5)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":165:5)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":156:8)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":156:20)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":157:5)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":160:5)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":162:5)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":159:19)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":159:9)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":164:17)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":164:16)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":164:9)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":166:5)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":174:5)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":166:8)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":166:20)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":167:5)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":168:9)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":173:9)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":168:12)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":168:19)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":169:9)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":171:13)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":171:33)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":171:26)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":172:26)
#loc219 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":172:13)
#loc220 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":178:1)
#loc221 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":197:1)
#loc222 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":180:5)
#loc223 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":180:9)
#loc224 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":182:12)
#loc225 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":182:5)
#loc226 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":183:5)
#loc227 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":187:5)
#loc228 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":183:8)
#loc229 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":183:20)
#loc230 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":184:5)
#loc231 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":186:17)
#loc232 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":186:16)
#loc233 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":186:9)
#loc234 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":188:5)
#loc235 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":196:5)
#loc236 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":188:8)
#loc237 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":188:20)
#loc238 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":189:5)
#loc239 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":190:9)
#loc240 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":195:9)
#loc241 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":190:12)
#loc242 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":190:19)
#loc243 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":191:9)
#loc244 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":193:13)
#loc245 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":193:33)
#loc246 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":193:26)
#loc247 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":194:26)
#loc248 = loc("CWE191_Integer_Underflow__int_fgets_multiply_07.c":194:13)
#loc249 = loc(fused[#loc1, #loc2])
#loc250 = loc(fused[#loc3, #loc4])
#loc251 = loc(fused[#loc5, #loc6])
#loc252 = loc(fused[#loc7, #loc8])
#loc253 = loc(fused[#loc9, #loc10])
#loc254 = loc(fused[#loc12, #loc13])
#loc255 = loc(fused[#loc14, #loc15])
#loc256 = loc(fused[#loc16, #loc17])
#loc257 = loc(fused[#loc19, #loc18])
#loc258 = loc(fused[#loc20, #loc21])
#loc259 = loc(fused[#loc22, #loc23])
#loc260 = loc(fused[#loc24, #loc21])
#loc261 = loc(fused[#loc25, #loc26])
#loc262 = loc(fused[#loc27, #loc28])
#loc263 = loc(fused[#loc29, #loc30])
#loc264 = loc(fused[#loc34, #loc35])
#loc265 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc266 = loc(fused[#loc41, #loc42])
#loc267 = loc(fused[#loc44, #loc45])
#loc268 = loc(fused[#loc46, #loc47])
#loc269 = loc(fused[#loc48, #loc45])
#loc270 = loc(fused[#loc49, #loc50])
#loc271 = loc(fused[#loc51, #loc52])
#loc272 = loc(fused[#loc53, #loc50])
#loc273 = loc(fused[#loc54, #loc55])
#loc274 = loc(fused[#loc59, #loc60])
#loc275 = loc(fused[#loc61, #loc62])
#loc276 = loc(fused[#loc63, #loc64])
#loc277 = loc(fused[#loc65, #loc66])
#loc278 = loc(fused[#loc67, #loc68])
#loc279 = loc(fused[#loc71, #loc72])
#loc280 = loc(fused[#loc73, #loc74])
#loc281 = loc(fused[#loc76, #loc75])
#loc282 = loc(fused[#loc77, #loc78])
#loc283 = loc(fused[#loc79, #loc80])
#loc284 = loc(fused[#loc81, #loc78])
#loc285 = loc(fused[#loc82, #loc83])
#loc286 = loc(fused[#loc84, #loc85])
#loc287 = loc(fused[#loc86, #loc87])
#loc288 = loc(fused[#loc91, #loc92])
#loc289 = loc(fused[#loc93, #loc94, #loc95, #loc87])
#loc290 = loc(fused[#loc98, #loc99])
#loc291 = loc(fused[#loc102, #loc103])
#loc292 = loc(fused[#loc104, #loc105])
#loc293 = loc(fused[#loc106, #loc107, #loc108, #loc103])
#loc294 = loc(fused[#loc110, #loc111])
#loc295 = loc(fused[#loc112, #loc113])
#loc296 = loc(fused[#loc114, #loc111])
#loc297 = loc(fused[#loc115, #loc116])
#loc298 = loc(fused[#loc118, #loc119])
#loc299 = loc(fused[#loc117, #loc120])
#loc300 = loc(fused[#loc121, #loc122, #loc123, #loc116])
#loc301 = loc(fused[#loc124, #loc125])
#loc302 = loc(fused[#loc130, #loc131])
#loc303 = loc(fused[#loc132, #loc133])
#loc304 = loc(fused[#loc135, #loc134])
#loc305 = loc(fused[#loc136, #loc137])
#loc306 = loc(fused[#loc138, #loc139])
#loc307 = loc(fused[#loc140, #loc137])
#loc308 = loc(fused[#loc141, #loc142])
#loc309 = loc(fused[#loc143, #loc144])
#loc310 = loc(fused[#loc145, #loc146])
#loc311 = loc(fused[#loc150, #loc151])
#loc312 = loc(fused[#loc152, #loc153, #loc154, #loc146])
#loc313 = loc(fused[#loc157, #loc158])
#loc314 = loc(fused[#loc161, #loc162])
#loc315 = loc(fused[#loc163, #loc164])
#loc316 = loc(fused[#loc165, #loc162])
#loc317 = loc(fused[#loc166, #loc167])
#loc318 = loc(fused[#loc168, #loc169])
#loc319 = loc(fused[#loc170, #loc167])
#loc320 = loc(fused[#loc171, #loc172])
#loc321 = loc(fused[#loc174, #loc175])
#loc322 = loc(fused[#loc173, #loc176])
#loc323 = loc(fused[#loc177, #loc178, #loc179, #loc172])
#loc324 = loc(fused[#loc180, #loc181])
#loc325 = loc(fused[#loc187, #loc188])
#loc326 = loc(fused[#loc189, #loc190])
#loc327 = loc(fused[#loc192, #loc191])
#loc328 = loc(fused[#loc193, #loc194])
#loc329 = loc(fused[#loc195, #loc196])
#loc330 = loc(fused[#loc197, #loc198, #loc199, #loc194])
#loc331 = loc(fused[#loc204, #loc202])
#loc332 = loc(fused[#loc205, #loc206])
#loc333 = loc(fused[#loc207, #loc208])
#loc334 = loc(fused[#loc209, #loc206])
#loc335 = loc(fused[#loc210, #loc211])
#loc336 = loc(fused[#loc212, #loc213])
#loc337 = loc(fused[#loc214, #loc211])
#loc338 = loc(fused[#loc215, #loc216])
#loc339 = loc(fused[#loc220, #loc221])
#loc340 = loc(fused[#loc222, #loc223])
#loc341 = loc(fused[#loc225, #loc224])
#loc342 = loc(fused[#loc226, #loc227])
#loc343 = loc(fused[#loc228, #loc229])
#loc344 = loc(fused[#loc230, #loc227])
#loc345 = loc(fused[#loc233, #loc231])
#loc346 = loc(fused[#loc234, #loc235])
#loc347 = loc(fused[#loc236, #loc237])
#loc348 = loc(fused[#loc238, #loc235])
#loc349 = loc(fused[#loc239, #loc240])
#loc350 = loc(fused[#loc241, #loc242])
#loc351 = loc(fused[#loc243, #loc240])
#loc352 = loc(fused[#loc244, #loc245])
