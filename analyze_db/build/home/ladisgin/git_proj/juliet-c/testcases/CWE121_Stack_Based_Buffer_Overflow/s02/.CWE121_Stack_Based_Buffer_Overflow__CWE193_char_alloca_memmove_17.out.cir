!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":92:10)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":92:14)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":92:20)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":92:32)
#loc147 = loc(fused[#loc63, #loc64])
#loc148 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc121)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc122)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc122)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc126)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc128)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc16)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc129)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc18)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc18)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc18)
    %16 = cir.const #cir.int<1> : !u64i loc(#loc18)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc18)
    %18 = cir.alloca !u8i, !cir.ptr<!u8i>, %17 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %20, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %21 = cir.const #cir.int<0> : !s32i loc(#loc21)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc132)
    cir.brcond %24 ^bb3, ^bb7 loc(#loc25)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // pred: ^bb3
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    cir.store %25, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc29)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %32 = cir.unary(inc, %31) : !s32i, !s32i loc(#loc34)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb2 loc(#loc130)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc137)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc122)
    cir.copy %33 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc122)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc38)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %38 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc40)
    %40 = cir.call @strlen(%39) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc41)
    %43 = cir.binop(add, %40, %42) : !u64i loc(#loc138)
    %44 = cir.const #cir.int<1> : !u64i loc(#loc139)
    %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc140)
    cir.libc.memmove %45 bytes from %37 to %35 : !cir.ptr<!void>, !u64i loc(#loc141)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb10 loc(#loc36)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc125)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc142)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc144)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.return %17 : !s32i loc(#loc151)
  } loc(#loc146)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc121)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc153)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc155)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc88)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc88)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc88)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc88)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc156)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc90)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc90)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc90)
    %16 = cir.const #cir.int<1> : !u64i loc(#loc90)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc90)
    %18 = cir.alloca !u8i, !cir.ptr<!u8i>, %17 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc90)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc90)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %20, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %21 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %24 ^bb3, ^bb7 loc(#loc97)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc160)
  ^bb4:  // pred: ^bb3
    %25 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.store %25, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc101)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc92)
  ^bb6:  // pred: ^bb5
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %32 = cir.unary(inc, %31) : !s32i, !s32i loc(#loc106)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.br ^bb2 loc(#loc157)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc92)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc164)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc121)
    cir.copy %33 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc121)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc110)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %38 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc111)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc112)
    %40 = cir.call @strlen(%39) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc111)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc113)
    %43 = cir.binop(add, %40, %42) : !u64i loc(#loc165)
    %44 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc167)
    cir.libc.memmove %45 bytes from %37 to %35 : !cir.ptr<!void>, !u64i loc(#loc168)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb10 loc(#loc108)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc82)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":69:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":69:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":42:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":42:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":48:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":30:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":31:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":32:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":33:37)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":40:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:20)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:18)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":35:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":38:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":38:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":39:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":39:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":39:14)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":39:15)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":34:23)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":41:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":47:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:17)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:23)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:32)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:39)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:49)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:54)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:65)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:31)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":45:66)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":46:19)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":46:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":77:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":80:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":79:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":79:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":97:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":99:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":102:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":104:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":92:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":107:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":93:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":95:27)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":95:22)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":95:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":97:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":98:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":98:76)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":99:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":102:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":103:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":103:75)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":104:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":106:12)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":106:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":55:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":75:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":57:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":57:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":58:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":58:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":59:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":59:36)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":60:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":60:37)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":67:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:20)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:18)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":62:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":65:16)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":65:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":66:19)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":66:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":66:14)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":66:15)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:24)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":61:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":68:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":74:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:17)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:23)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:32)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:39)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:49)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:54)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:65)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:31)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":72:66)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":73:19)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_17.c":73:9)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc11, #loc12])
#loc127 = loc(fused[#loc13, #loc14])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc19, #loc20])
#loc131 = loc(fused[#loc22, #loc21])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc26, #loc20])
#loc134 = loc(fused[#loc28, #loc27])
#loc135 = loc(fused[#loc30, #loc29])
#loc136 = loc(fused[#loc34, #loc33])
#loc137 = loc(fused[#loc35, #loc36])
#loc138 = loc(fused[#loc39, #loc41])
#loc139 = loc(fused[#loc42, #loc43])
#loc140 = loc(fused[#loc44, #loc43])
#loc141 = loc(fused[#loc45, #loc46])
#loc142 = loc(fused[#loc49, #loc50])
#loc143 = loc(fused[#loc51, #loc52])
#loc144 = loc(fused[#loc53, #loc54])
#loc145 = loc(fused[#loc55, #loc56])
#loc146 = loc(fused[#loc61, #loc62])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc76, #loc77])
#loc151 = loc(fused[#loc80, #loc79])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc87, #loc88])
#loc156 = loc(fused[#loc89, #loc90])
#loc157 = loc(fused[#loc91, #loc92])
#loc158 = loc(fused[#loc94, #loc93])
#loc159 = loc(fused[#loc95, #loc96])
#loc160 = loc(fused[#loc98, #loc92])
#loc161 = loc(fused[#loc100, #loc99])
#loc162 = loc(fused[#loc102, #loc101])
#loc163 = loc(fused[#loc106, #loc105])
#loc164 = loc(fused[#loc107, #loc108])
#loc165 = loc(fused[#loc111, #loc113])
#loc166 = loc(fused[#loc114, #loc115])
#loc167 = loc(fused[#loc116, #loc115])
#loc168 = loc(fused[#loc117, #loc118])
