!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE506_Embedded_Malicious_Code/CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"conf.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc137)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc138)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc139)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc140)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc141)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
  cir.func private @close(!s32i) -> !s32i loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc24)
  cir.func no_proto @CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc29)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc147)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc148)
            %3 = cir.alloca !cir.array<!s8i x 65536>, !cir.ptr<!cir.array<!s8i x 65536>>, ["contents"] {alignment = 16 : i64} loc(#loc149)
            %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc150)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc36)
            cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
            %7 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc41)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc4)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc4)
            %12 = cir.call @fopen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc41)
            cir.store %12, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc151)
            cir.scope {
              %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc47)
              %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc153)
              cir.if %16 {
                cir.scope {
                  %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc51)
                  %20 = cir.const #cir.int<65535> : !s32i loc(#loc52)
                  %21 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
                  %22 = cir.call @fgets(%19, %20, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
                  %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
                  %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
                  %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
                  cir.if %25 {
                    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc57)
                    %28 = cir.const #cir.int<0> : !s32i loc(#loc58)
                    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc58)
                    %30 = cir.const #cir.int<0> : !s32i loc(#loc59)
                    %31 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc60)
                    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc60)
                    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc158)
                  } loc(#loc157)
                } loc(#loc155)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
                %18 = cir.call @fclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc62)
              } loc(#loc154)
            } loc(#loc152)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc67)
                  %14 = cir.const #cir.int<1> : !s32i loc(#loc68)
                  %15 = cir.const #cir.int<6> : !s32i loc(#loc69)
                  %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc70)
                  cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc161)
                  cir.scope {
                    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc76)
                    %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc76)
                    %34 = cir.cmp(eq, %31, %33) : !s32i, !cir.bool loc(#loc163)
                    cir.if %34 {
                      cir.break loc(#loc78)
                    } loc(#loc164)
                  } loc(#loc162)
                  %17 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc165)
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc81)
                  %19 = cir.const #cir.int<16> : !u64i loc(#loc166)
                  cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
                  %20 = cir.const #cir.int<2> : !s32i loc(#loc86)
                  %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc86)
                  %22 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
                  cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc168)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc89)
                  %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc89)
                  %25 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc90)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc91)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc169)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc93)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc93)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc94)
                  %30 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc95)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc170)
                  cir.scope {
                    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %32 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc172)
                    %33 = cir.const #cir.int<16> : !u64i loc(#loc173)
                    %34 = cir.cast(integral, %33 : !u64i), !u32i loc(#loc173)
                    %35 = cir.call @connect(%31, %32, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc105)
                    %36 = cir.const #cir.int<1> : !s32i loc(#loc106)
                    %37 = cir.unary(minus, %36) nsw : !s32i, !s32i loc(#loc106)
                    %38 = cir.cmp(eq, %35, %37) : !s32i, !cir.bool loc(#loc174)
                    cir.if %38 {
                      cir.break loc(#loc108)
                    } loc(#loc175)
                  } loc(#loc171)
                  cir.scope {
                    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                    %32 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc112)
                    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
                    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc113)
                    %35 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc114)
                    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc113)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc115)
                    %38 = cir.call @send(%31, %33, %36, %37) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
                    %39 = cir.cast(integral, %38 : !s64i), !u64i loc(#loc116)
                    %40 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc117)
                    %41 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc118)
                    %42 = cir.call @strlen(%41) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc117)
                    %43 = cir.cmp(ne, %39, %42) : !u64i, !cir.bool loc(#loc177)
                    cir.if %43 {
                      cir.break loc(#loc121)
                    } loc(#loc178)
                  } loc(#loc176)
                } loc(#loc160)
                cir.yield loc(#loc64)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc122)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc122)
                cir.condition(%14) loc(#loc122)
              } loc(#loc159)
            } loc(#loc159)
            cir.scope {
              %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc126)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc126)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc180)
              cir.if %16 {
                %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc129)
              } loc(#loc181)
            } loc(#loc179)
          } loc(#loc146)
          cir.break loc(#loc130)
        } loc(#loc30)
        cir.case(default, []) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc24)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc24)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          cir.break loc(#loc133)
        } loc(#loc131)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc145)
    cir.return loc(#loc26)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE506_Embedded_Malicious_Code/CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":55:23)
#loc4 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":55:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":60:27)
#loc10 = loc("/usr/include/stdio.h":184:1)
#loc11 = loc("/usr/include/stdio.h":184:36)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:74)
#loc20 = loc("/usr/include/string.h":407:1)
#loc21 = loc("/usr/include/string.h":408:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":109:19)
#loc25 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":41:1)
#loc26 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":112:1)
#loc27 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":43:5)
#loc28 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":111:5)
#loc29 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":43:12)
#loc30 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":45:5)
#loc31 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":46:5)
#loc32 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":105:5)
#loc33 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":51:9)
#loc34 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":51:28)
#loc35 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":52:9)
#loc36 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":52:32)
#loc37 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":53:9)
#loc38 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":53:28)
#loc39 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":54:9)
#loc40 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":54:16)
#loc41 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":55:17)
#loc42 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":55:9)
#loc43 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":55:36)
#loc44 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":56:9)
#loc45 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":65:9)
#loc46 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":56:13)
#loc47 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":56:22)
#loc48 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":57:9)
#loc49 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":58:13)
#loc50 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":63:13)
#loc51 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":58:23)
#loc52 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":58:39)
#loc53 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":58:47)
#loc54 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":58:17)
#loc55 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":58:57)
#loc56 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":59:13)
#loc57 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":60:17)
#loc58 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":62:31)
#loc59 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":62:26)
#loc60 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":62:17)
#loc61 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":64:20)
#loc62 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":64:13)
#loc63 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":66:9)
#loc64 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":94:17)
#loc65 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":67:9)
#loc66 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":93:9)
#loc67 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":75:36)
#loc68 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":75:45)
#loc69 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":75:58)
#loc70 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":75:29)
#loc71 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":75:13)
#loc72 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":75:69)
#loc73 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":76:13)
#loc74 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":79:13)
#loc75 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":76:17)
#loc76 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":76:34)
#loc77 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":77:13)
#loc78 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":78:17)
#loc79 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":80:20)
#loc80 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":80:21)
#loc81 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":80:30)
#loc82 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":80:33)
#loc83 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":80:47)
#loc84 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":80:13)
#loc85 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":80:48)
#loc86 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":81:34)
#loc87 = loc("/usr/include/netinet/in.h":249:5)
#loc88 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":81:13)
#loc89 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":82:39)
#loc90 = loc("/usr/include/netinet/in.h":251:20)
#loc91 = loc("/usr/include/netinet/in.h":33:15)
#loc92 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":82:13)
#loc93 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":83:38)
#loc94 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":83:32)
#loc95 = loc("/usr/include/netinet/in.h":250:15)
#loc96 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":83:13)
#loc97 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":83:46)
#loc98 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:13)
#loc99 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":87:13)
#loc100 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:25)
#loc101 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:58)
#loc102 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:59)
#loc103 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:68)
#loc104 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:82)
#loc105 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:17)
#loc106 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":84:88)
#loc107 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":85:13)
#loc108 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":86:17)
#loc109 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:13)
#loc110 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":92:13)
#loc111 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:22)
#loc112 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:37)
#loc113 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:47)
#loc114 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:54)
#loc115 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:65)
#loc116 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:17)
#loc117 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:71)
#loc118 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:78)
#loc119 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":89:86)
#loc120 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":90:13)
#loc121 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":91:17)
#loc122 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":94:16)
#loc123 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":95:9)
#loc124 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":98:9)
#loc125 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":95:13)
#loc126 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":95:30)
#loc127 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":96:9)
#loc128 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":97:26)
#loc129 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":97:13)
#loc130 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":106:5)
#loc131 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":107:5)
#loc132 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":109:9)
#loc133 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_15.c":110:9)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc12, #loc13])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc16, #loc17])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc27, #loc28])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc35, #loc36])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc39, #loc40])
#loc151 = loc(fused[#loc42, #loc43])
#loc152 = loc(fused[#loc44, #loc45])
#loc153 = loc(fused[#loc46, #loc47])
#loc154 = loc(fused[#loc48, #loc45])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc50])
#loc158 = loc(fused[#loc60, #loc58])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc65, #loc66])
#loc161 = loc(fused[#loc71, #loc72])
#loc162 = loc(fused[#loc73, #loc74])
#loc163 = loc(fused[#loc75, #loc76])
#loc164 = loc(fused[#loc77, #loc74])
#loc165 = loc(fused[#loc79, #loc80])
#loc166 = loc(fused[#loc82, #loc83])
#loc167 = loc(fused[#loc84, #loc85])
#loc168 = loc(fused[#loc88, #loc86])
#loc169 = loc(fused[#loc92, #loc89])
#loc170 = loc(fused[#loc96, #loc97])
#loc171 = loc(fused[#loc98, #loc99])
#loc172 = loc(fused[#loc101, #loc102])
#loc173 = loc(fused[#loc103, #loc104])
#loc174 = loc(fused[#loc105, #loc106])
#loc175 = loc(fused[#loc107, #loc99])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc116, #loc119])
#loc178 = loc(fused[#loc120, #loc110])
#loc179 = loc(fused[#loc123, #loc124])
#loc180 = loc(fused[#loc125, #loc126])
#loc181 = loc(fused[#loc127, #loc124])
