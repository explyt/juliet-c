!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":16:9)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":16:19)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":16:26)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":49:14)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":23:9)
#loc60 = loc(fused[#loc4, #loc5])
!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass = !cir.struct<class "CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01::GoodClass" {!cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"GoodClass\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc1)
  cir.func linkonce_odr  @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_019GoodClassC2EPc(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":16:9), %arg1: !cir.ptr<!s8i> loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc2)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["name", init] {alignment = 8 : i64} loc(#loc60)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>> loc(#loc6)
    cir.store %arg1, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> loc(#loc2)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc7)
    %4 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc8)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %6 = cir.call @strlen(%5) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc8)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc10)
    %9 = cir.binop(add, %6, %8) : !u64i loc(#loc61)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc7)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc62)
    %12 = cir.get_member %2[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    cir.scope {
      %18 = cir.get_member %2[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
      %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc65)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc20)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc22)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc20)
      } loc(#loc66)
    } loc(#loc64)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc23)
    %14 = cir.get_member %2[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %17 = cir.call @strcpy(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc23)
    cir.return loc(#loc3)
  } loc(#loc59)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc67)
  cir.func linkonce_odr  @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_019GoodClass9printNameEv(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":49:14)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc30)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>> loc(#loc31)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> loc(#loc30)
    %2 = cir.get_member %1[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.return loc(#loc29)
  } loc(#loc68)
  cir.func linkonce_odr  @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_019GoodClassD2Ev(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":23:9)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc34)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>> loc(#loc36)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> loc(#loc34)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc37)
    %3 = cir.get_member %1[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc37)
    cir.return loc(#loc35)
  } loc(#loc69)
  cir.func internal private  @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01L5good1Ev() extra(#fn_attr) {
    %0 = cir.alloca !ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, ["goodClassObject", init] {alignment = 8 : i64} loc(#loc71)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc1)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc1)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_019GoodClassC2EPc(%0, %2) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>, !cir.ptr<!s8i>) -> () loc(#loc43)
    cir.try synthetic cleanup {
      cir.call exception @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_019GoodClass9printNameEv(%0) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>) -> () cleanup {
        cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_019GoodClassD2Ev(%0) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>) -> () extra(#fn_attr1) loc(#loc69)
        cir.yield loc(#loc45)
      } loc(#loc45)
      cir.yield loc(#loc44)
    } catch [#cir.unwind {
      cir.resume loc(#loc44)
    }] loc(#loc44)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_019GoodClassD2Ev(%0) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_013A3AGoodClass>) -> () extra(#fn_attr1) loc(#loc69)
    cir.return loc(#loc40)
  } loc(#loc70)
  cir.func  @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_014goodEv() extra(#fn_attr) {
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01L5good1Ev() : () -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc72)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc73)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc74)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc75)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc76)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc77)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":60:32)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":21:9)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":17:9)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":18:34)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":18:41)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":18:48)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":18:54)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":18:55)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":55:16)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":18:13)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:13)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:47)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:23)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:31)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:17)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:37)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:38)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:44)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":19:43)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":20:13)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":20:26)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":20:32)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":49:9)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":52:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":50:9)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":51:23)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":51:13)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":27:9)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":24:9)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":26:13)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":26:18)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":58:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":62:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":60:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":60:43)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":60:15)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":58:13)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":61:21)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":64:1)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":67:1)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_01_good1.cpp":66:5)
#loc49 = loc("/usr/include/stdlib.h":672:1)
#loc50 = loc("/usr/include/stdlib.h":672:45)
#loc51 = loc("/usr/include/string.h":407:1)
#loc52 = loc("/usr/include/string.h":408:33)
#loc53 = loc("/usr/include/stdlib.h":756:1)
#loc54 = loc("/usr/include/stdlib.h":756:70)
#loc55 = loc("/usr/include/string.h":141:1)
#loc56 = loc("/usr/include/string.h":142:14)
#loc57 = loc("/usr/include/stdlib.h":687:1)
#loc58 = loc("/usr/include/stdlib.h":687:32)
#loc59 = loc(fused[#loc2, #loc3])
#loc61 = loc(fused[#loc8, #loc10])
#loc62 = loc(fused[#loc7, #loc11])
#loc63 = loc(fused[#loc13, #loc11])
#loc64 = loc(fused[#loc14, #loc15])
#loc65 = loc(fused[#loc18, #loc17])
#loc66 = loc(fused[#loc19, #loc15])
#loc67 = loc(fused[#loc26, #loc27])
#loc68 = loc(fused[#loc28, #loc29])
#loc69 = loc(fused[#loc34, #loc35])
#loc70 = loc(fused[#loc39, #loc40])
#loc71 = loc(fused[#loc41, #loc42])
#loc72 = loc(fused[#loc46, #loc47])
#loc73 = loc(fused[#loc49, #loc50])
#loc74 = loc(fused[#loc51, #loc52])
#loc75 = loc(fused[#loc53, #loc54])
#loc76 = loc(fused[#loc55, #loc56])
#loc77 = loc(fused[#loc57, #loc58])
