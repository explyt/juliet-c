!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":219:10)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":219:14)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":219:20)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":219:32)
#true = #cir.bool<true> : !cir.bool
#loc246 = loc(fused[#loc61, #loc62])
#loc247 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc229)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc21)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
          %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc23)
          cir.break loc(#loc25)
        } loc(#loc22)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc27)
          cir.break loc(#loc28)
        } loc(#loc26)
        cir.yield loc(#loc19)
      } loc(#loc19)
    } loc(#loc236)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc31)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc33)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc34)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc11)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc11)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          cir.break loc(#loc36)
        } loc(#loc32)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc39)
          cir.break loc(#loc40)
        } loc(#loc37)
        cir.yield loc(#loc29)
      } loc(#loc29)
    } loc(#loc237)
    cir.return loc(#loc13)
  } loc(#loc233)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc42)
  } loc(#loc238)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc243)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_15_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_15_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    cir.return %17 : !s32i loc(#loc250)
  } loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc86)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc90)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc92)
          %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc94)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc94)
          %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc92)
          cir.break loc(#loc95)
        } loc(#loc91)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          cir.break loc(#loc99)
        } loc(#loc96)
        cir.yield loc(#loc88)
      } loc(#loc88)
    } loc(#loc254)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc102)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc105)
          cir.break loc(#loc106)
        } loc(#loc103)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc257)
            %7 = cir.ternary(%6, true {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %9 = cir.const #cir.int<2000> : !s32i loc(#loc114)
              %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc258)
              %11 = cir.ternary(%10, true {
                %12 = cir.const #true loc(#loc112)
                cir.yield %12 : !cir.bool loc(#loc112)
              }, false {
                %12 = cir.const #false loc(#loc112)
                cir.yield %12 : !cir.bool loc(#loc112)
              }) : (!cir.bool) -> !cir.bool loc(#loc112)
              cir.yield %11 : !cir.bool loc(#loc112)
            }, false {
              %8 = cir.const #false loc(#loc112)
              cir.yield %8 : !cir.bool loc(#loc112)
            }) : (!cir.bool) -> !cir.bool loc(#loc112)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc118)
              %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc119)
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc79)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc79)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc120)
            } else {
              %8 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc80)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc80)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc121)
            } loc(#loc259)
          } loc(#loc256)
          cir.break loc(#loc122)
        } loc(#loc107)
        cir.yield loc(#loc100)
      } loc(#loc100)
    } loc(#loc255)
    cir.return loc(#loc82)
  } loc(#loc251)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc128)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc132)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc134)
          %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc136)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc136)
          %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc134)
          cir.break loc(#loc137)
        } loc(#loc133)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          cir.break loc(#loc141)
        } loc(#loc138)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc263)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc144)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc149)
            %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc266)
            %7 = cir.ternary(%6, true {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %9 = cir.const #cir.int<2000> : !s32i loc(#loc152)
              %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc267)
              %11 = cir.ternary(%10, true {
                %12 = cir.const #true loc(#loc150)
                cir.yield %12 : !cir.bool loc(#loc150)
              }, false {
                %12 = cir.const #false loc(#loc150)
                cir.yield %12 : !cir.bool loc(#loc150)
              }) : (!cir.bool) -> !cir.bool loc(#loc150)
              cir.yield %11 : !cir.bool loc(#loc150)
            }, false {
              %8 = cir.const #false loc(#loc150)
              cir.yield %8 : !cir.bool loc(#loc150)
            }) : (!cir.bool) -> !cir.bool loc(#loc150)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
              %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc156)
              %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc157)
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc158)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc158)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc159)
            } else {
              %8 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc160)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc160)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc161)
            } loc(#loc268)
          } loc(#loc265)
          cir.break loc(#loc162)
        } loc(#loc145)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc164)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc164)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc165)
          cir.break loc(#loc166)
        } loc(#loc163)
        cir.yield loc(#loc142)
      } loc(#loc142)
    } loc(#loc264)
    cir.return loc(#loc124)
  } loc(#loc260)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc172)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc176)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc179)
          cir.break loc(#loc180)
        } loc(#loc177)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc182)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
          cir.break loc(#loc184)
        } loc(#loc181)
        cir.yield loc(#loc174)
      } loc(#loc174)
    } loc(#loc272)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc187)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc189)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc190)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc191)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc191)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc192)
          cir.break loc(#loc193)
        } loc(#loc188)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc195)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc195)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc196)
          cir.break loc(#loc197)
        } loc(#loc194)
        cir.yield loc(#loc185)
      } loc(#loc185)
    } loc(#loc274)
    cir.return loc(#loc168)
  } loc(#loc269)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc203)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc207)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc209)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
          cir.break loc(#loc211)
        } loc(#loc208)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc213)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc213)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc214)
          cir.break loc(#loc215)
        } loc(#loc212)
        cir.yield loc(#loc205)
      } loc(#loc205)
    } loc(#loc278)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc218)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc220)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc221)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc222)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc222)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc223)
          cir.break loc(#loc224)
        } loc(#loc219)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc226)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc226)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc227)
          cir.break loc(#loc228)
        } loc(#loc225)
        cir.yield loc(#loc216)
      } loc(#loc216)
    } loc(#loc280)
    cir.return loc(#loc199)
  } loc(#loc275)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":39:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":43:19)
#loc9 = loc("/usr/include/unistd.h":480:1)
#loc10 = loc("/usr/include/unistd.h":480:43)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":51:19)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":30:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":58:1)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":32:5)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":32:9)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":34:14)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":34:13)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":34:5)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":35:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":45:5)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":35:12)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":37:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":39:9)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":39:16)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":40:9)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":41:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":43:9)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":44:9)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":46:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":57:5)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":46:12)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":48:5)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":50:15)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":50:9)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":51:9)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":52:9)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":53:5)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":55:19)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":55:9)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":56:9)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":202:1)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":208:1)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":204:5)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":204:14)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":205:5)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":205:14)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":206:5)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":206:14)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":207:5)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":207:14)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":224:15)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":226:15)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":229:15)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":231:15)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":219:1)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":234:1)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":220:1)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":222:27)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":222:22)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":222:5)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":224:5)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":225:5)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":225:54)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":226:5)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":229:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":230:5)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":230:53)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":231:5)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":233:12)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":233:5)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":92:23)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":96:23)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":65:1)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":100:1)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":67:5)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":67:9)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":69:14)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":69:13)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":69:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":70:5)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":80:5)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":70:12)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":72:5)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":74:9)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":74:16)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":74:23)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":75:9)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":76:5)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":78:19)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":78:9)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":79:9)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":81:5)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":99:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":81:12)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":83:5)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":85:19)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":85:9)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":86:9)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":87:5)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":89:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":97:9)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":89:13)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":89:21)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":89:23)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":89:26)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":89:35)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":90:9)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":93:9)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":95:9)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":91:19)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":91:13)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":92:13)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":96:13)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":98:9)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":103:1)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":138:1)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":105:5)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":105:9)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":107:14)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":107:13)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":107:5)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":108:5)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":118:5)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":108:12)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":110:5)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":112:9)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":112:16)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":112:23)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":113:9)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":114:5)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":116:19)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":116:9)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":117:9)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":119:5)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":137:5)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":119:12)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":121:5)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":123:9)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":131:9)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":123:13)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":123:21)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":123:23)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":123:26)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":123:35)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":124:9)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":127:9)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":129:9)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":125:19)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":125:13)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":126:23)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":126:13)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":130:23)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":130:13)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":132:9)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":133:5)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":135:19)
#loc165 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":135:9)
#loc166 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":136:9)
#loc167 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":141:1)
#loc168 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":169:1)
#loc169 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":143:5)
#loc170 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":143:9)
#loc171 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":145:14)
#loc172 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":145:13)
#loc173 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":145:5)
#loc174 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":146:5)
#loc175 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":156:5)
#loc176 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":146:12)
#loc177 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":148:5)
#loc178 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":150:19)
#loc179 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":150:9)
#loc180 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":151:9)
#loc181 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":152:5)
#loc182 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":154:17)
#loc183 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":154:9)
#loc184 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":155:9)
#loc185 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":157:5)
#loc186 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":168:5)
#loc187 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":157:12)
#loc188 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":159:5)
#loc189 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":161:15)
#loc190 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":161:9)
#loc191 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":162:19)
#loc192 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":162:9)
#loc193 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":163:9)
#loc194 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":164:5)
#loc195 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":166:19)
#loc196 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":166:9)
#loc197 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":167:9)
#loc198 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":172:1)
#loc199 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":200:1)
#loc200 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":174:5)
#loc201 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":174:9)
#loc202 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":176:14)
#loc203 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":176:13)
#loc204 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":176:5)
#loc205 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":177:5)
#loc206 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":187:5)
#loc207 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":177:12)
#loc208 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":179:5)
#loc209 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":181:17)
#loc210 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":181:9)
#loc211 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":182:9)
#loc212 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":183:5)
#loc213 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":185:19)
#loc214 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":185:9)
#loc215 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":186:9)
#loc216 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":188:5)
#loc217 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":199:5)
#loc218 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":188:12)
#loc219 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":190:5)
#loc220 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":192:15)
#loc221 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":192:9)
#loc222 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":193:19)
#loc223 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":193:9)
#loc224 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":194:9)
#loc225 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":195:5)
#loc226 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":197:19)
#loc227 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":197:9)
#loc228 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_15.c":198:9)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc6, #loc7])
#loc232 = loc(fused[#loc9, #loc10])
#loc233 = loc(fused[#loc12, #loc13])
#loc234 = loc(fused[#loc14, #loc15])
#loc235 = loc(fused[#loc18, #loc16])
#loc236 = loc(fused[#loc19, #loc20])
#loc237 = loc(fused[#loc29, #loc30])
#loc238 = loc(fused[#loc41, #loc42])
#loc239 = loc(fused[#loc43, #loc44])
#loc240 = loc(fused[#loc45, #loc46])
#loc241 = loc(fused[#loc47, #loc48])
#loc242 = loc(fused[#loc49, #loc50])
#loc243 = loc(fused[#loc51, #loc52])
#loc244 = loc(fused[#loc53, #loc54])
#loc245 = loc(fused[#loc59, #loc60])
#loc248 = loc(fused[#loc70, #loc71])
#loc249 = loc(fused[#loc74, #loc75])
#loc250 = loc(fused[#loc78, #loc77])
#loc251 = loc(fused[#loc81, #loc82])
#loc252 = loc(fused[#loc83, #loc84])
#loc253 = loc(fused[#loc87, #loc85])
#loc254 = loc(fused[#loc88, #loc89])
#loc255 = loc(fused[#loc100, #loc101])
#loc256 = loc(fused[#loc108, #loc109])
#loc257 = loc(fused[#loc110, #loc111])
#loc258 = loc(fused[#loc113, #loc114])
#loc259 = loc(fused[#loc115, #loc116, #loc117, #loc109])
#loc260 = loc(fused[#loc123, #loc124])
#loc261 = loc(fused[#loc125, #loc126])
#loc262 = loc(fused[#loc129, #loc127])
#loc263 = loc(fused[#loc130, #loc131])
#loc264 = loc(fused[#loc142, #loc143])
#loc265 = loc(fused[#loc146, #loc147])
#loc266 = loc(fused[#loc148, #loc149])
#loc267 = loc(fused[#loc151, #loc152])
#loc268 = loc(fused[#loc153, #loc154, #loc155, #loc147])
#loc269 = loc(fused[#loc167, #loc168])
#loc270 = loc(fused[#loc169, #loc170])
#loc271 = loc(fused[#loc173, #loc171])
#loc272 = loc(fused[#loc174, #loc175])
#loc273 = loc(fused[#loc183, #loc182])
#loc274 = loc(fused[#loc185, #loc186])
#loc275 = loc(fused[#loc198, #loc199])
#loc276 = loc(fused[#loc200, #loc201])
#loc277 = loc(fused[#loc204, #loc202])
#loc278 = loc(fused[#loc205, #loc206])
#loc279 = loc(fused[#loc210, #loc209])
#loc280 = loc(fused[#loc216, #loc217])
