!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc236)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc237)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_system_06_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc238)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc239)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc242)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc243)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
  cir.func private @close(!s32i) -> !s32i loc(#loc246)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc247)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc28)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc249)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc238)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_system_06_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc39)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc40)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc254)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc257)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc258)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc259)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc260)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc261)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc51)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc51)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc260)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc261)
          cir.scope {
            cir.do {
              cir.scope {
                %17 = cir.const #cir.int<2> : !s32i loc(#loc60)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc61)
                %19 = cir.const #cir.int<6> : !s32i loc(#loc62)
                %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
                cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc264)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc69)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc69)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc266)
                  cir.if %74 {
                    cir.break loc(#loc71)
                  } loc(#loc267)
                } loc(#loc265)
                %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc268)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc74)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc269)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc79)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc79)
                %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc271)
                %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
                %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
                %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc82)
                %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc272)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc87)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc87)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
                %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc273)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                  %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc275)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc276)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc276)
                  %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc99)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc100)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc277)
                  cir.if %78 {
                    cir.break loc(#loc102)
                  } loc(#loc278)
                } loc(#loc274)
                %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
                %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc105)
                %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc106)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc279)
                %41 = cir.const #cir.int<1> : !u64i loc(#loc280)
                %42 = cir.const #cir.int<100> : !s32i loc(#loc111)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc111)
                %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc112)
                %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc281)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc113)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc113)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc282)
                %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc283)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc115)
                %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc116)
                cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc284)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc122)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc122)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc286)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc123)
                    cir.yield %76 : !cir.bool loc(#loc123)
                  }, false {
                    %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc125)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc287)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc123)
                      cir.yield %80 : !cir.bool loc(#loc123)
                    }, false {
                      %80 = cir.const #false loc(#loc123)
                      cir.yield %80 : !cir.bool loc(#loc123)
                    }) : (!cir.bool) -> !cir.bool loc(#loc123)
                    cir.yield %79 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.if %75 {
                    cir.break loc(#loc127)
                  } loc(#loc288)
                } loc(#loc285)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc128)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc128)
                %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
                %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc130)
                %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc131)
                %59 = cir.const #cir.int<1> : !u64i loc(#loc289)
                %60 = cir.binop(div, %58, %59) : !u64i loc(#loc290)
                %61 = cir.binop(add, %56, %60) : !u64i loc(#loc291)
                %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc134)
                cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc292)
                %63 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc135)
                %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
                %65 = cir.const #cir.int<13> : !s32i loc(#loc137)
                %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc135)
                cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc142)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc144)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc144)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc296)
                  } loc(#loc295)
                } loc(#loc294)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc147)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                %69 = cir.const #cir.int<10> : !s32i loc(#loc149)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc147)
                cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc156)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc156)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc300)
                  } loc(#loc299)
                } loc(#loc298)
              } loc(#loc263)
              cir.yield loc(#loc57)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc159)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc159)
              cir.condition(%18) loc(#loc159)
            } loc(#loc262)
          } loc(#loc262)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc163)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc163)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc302)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc166)
            } loc(#loc303)
          } loc(#loc301)
        } loc(#loc256)
      } loc(#loc255)
    } loc(#loc253)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc170)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc171)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc305)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc28)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc28)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc173)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc174)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc175)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
      } loc(#loc306)
    } loc(#loc304)
    cir.return loc(#loc32)
  } loc(#loc250)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc308)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc178)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc309)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc180)
    cir.return loc(#loc177)
  } loc(#loc307)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc182)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc185)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc312)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc237)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc313)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc194)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc195)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc315)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc182)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc182)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc199)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc200)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc185)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc185)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc200)
      } loc(#loc316)
    } loc(#loc314)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc205)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc206)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc318)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc208)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc208)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc209)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc210)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc211)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc210)
      } loc(#loc319)
    } loc(#loc317)
    cir.return loc(#loc187)
  } loc(#loc311)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc321)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc236)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc220)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc221)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc324)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc223)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc225)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc225)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
      } loc(#loc325)
    } loc(#loc323)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc229)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc230)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc327)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc232)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc232)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc233)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc234)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc235)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc234)
      } loc(#loc328)
    } loc(#loc326)
    cir.return loc(#loc213)
  } loc(#loc320)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_06.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":175:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":175:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":151:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":151:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":63:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":63:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":94:53)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/stdlib.h":923:1)
#loc25 = loc("/usr/include/stdlib.h":923:41)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":138:19)
#loc29 = loc("/usr/include/stdlib.h":756:1)
#loc30 = loc("/usr/include/stdlib.h":756:70)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":60:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":141:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":62:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":62:12)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":64:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":64:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":65:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":134:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":65:8)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":65:27)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":66:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":67:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":133:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":72:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":72:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":73:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":73:32)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":74:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":74:19)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":75:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":75:36)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":76:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":76:41)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":76:30)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":76:37)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":77:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":122:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":78:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":121:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":87:40)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":87:49)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":87:62)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":87:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":87:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":87:73)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":88:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":91:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":88:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":88:38)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":89:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":90:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":92:24)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":92:25)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":92:34)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":92:37)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":92:51)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":92:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":92:52)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":93:38)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":93:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":94:43)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":94:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":94:63)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":95:42)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":95:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":95:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":95:50)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":99:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:29)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:62)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:63)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:72)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:86)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:21)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":96:92)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":97:17)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":98:21)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:35)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:59)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:66)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:64)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:50)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:73)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:76)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:87)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:92)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:98)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:108)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:109)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:112)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:30)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":103:113)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":104:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":107:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":104:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":104:35)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":104:48)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":104:51)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":104:65)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":105:17)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":106:21)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":109:61)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":109:17)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":109:22)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":109:32)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":109:45)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":109:56)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":109:57)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":111:27)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":111:34)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":111:40)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":111:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":111:44)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":112:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":115:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":112:21)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":113:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":114:32)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":114:22)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":114:21)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":116:27)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":116:34)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":116:40)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":116:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":116:44)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":117:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":120:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":117:21)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":118:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":119:32)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":119:22)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":119:21)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":122:20)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":123:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":126:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":123:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":123:34)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":124:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":125:30)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":125:17)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":136:5)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":140:5)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":136:16)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":136:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":136:25)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":137:5)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":138:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":139:9)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":139:14)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":190:1)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":194:1)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":192:5)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":192:14)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":193:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":193:14)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":156:19)
#loc183 = loc("/usr/include/string.h":149:1)
#loc184 = loc("/usr/include/string.h":150:14)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":161:22)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":148:1)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":169:1)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":150:5)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":150:12)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":152:12)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":152:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":153:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":162:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":153:8)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":153:27)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":154:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":157:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":159:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":156:9)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":161:9)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":161:16)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":164:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":168:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":164:16)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":164:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":164:25)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":165:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":166:19)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":166:9)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":167:9)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":167:14)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":172:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":188:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":174:5)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":174:12)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":176:12)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":176:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":177:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":181:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":177:8)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":177:27)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":178:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":180:9)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":180:16)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":180:22)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":183:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":187:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":183:16)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":183:9)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":183:25)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":184:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":185:19)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":185:9)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":186:9)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_06.c":186:14)
#loc236 = loc(fused[#loc1, #loc2])
#loc237 = loc(fused[#loc3, #loc4])
#loc238 = loc(fused[#loc5, #loc6])
#loc239 = loc(fused[#loc7, #loc8])
#loc240 = loc(fused[#loc9, #loc10])
#loc241 = loc(fused[#loc11, #loc12])
#loc242 = loc(fused[#loc14, #loc15])
#loc243 = loc(fused[#loc16, #loc17])
#loc244 = loc(fused[#loc18, #loc19])
#loc245 = loc(fused[#loc20, #loc21])
#loc246 = loc(fused[#loc22, #loc23])
#loc247 = loc(fused[#loc24, #loc25])
#loc248 = loc(fused[#loc26, #loc27])
#loc249 = loc(fused[#loc29, #loc30])
#loc250 = loc(fused[#loc31, #loc32])
#loc251 = loc(fused[#loc33, #loc34])
#loc252 = loc(fused[#loc36, #loc35])
#loc253 = loc(fused[#loc37, #loc38])
#loc254 = loc(fused[#loc39, #loc40])
#loc255 = loc(fused[#loc41, #loc38])
#loc256 = loc(fused[#loc42, #loc43])
#loc257 = loc(fused[#loc44, #loc45])
#loc258 = loc(fused[#loc46, #loc47])
#loc259 = loc(fused[#loc48, #loc49])
#loc260 = loc(fused[#loc50, #loc51])
#loc261 = loc(fused[#loc52, #loc53])
#loc262 = loc(fused[#loc56, #loc57])
#loc263 = loc(fused[#loc58, #loc59])
#loc264 = loc(fused[#loc64, #loc65])
#loc265 = loc(fused[#loc66, #loc67])
#loc266 = loc(fused[#loc68, #loc69])
#loc267 = loc(fused[#loc70, #loc67])
#loc268 = loc(fused[#loc72, #loc73])
#loc269 = loc(fused[#loc75, #loc76])
#loc270 = loc(fused[#loc77, #loc78])
#loc271 = loc(fused[#loc81, #loc79])
#loc272 = loc(fused[#loc85, #loc86])
#loc273 = loc(fused[#loc90, #loc91])
#loc274 = loc(fused[#loc92, #loc93])
#loc275 = loc(fused[#loc95, #loc96])
#loc276 = loc(fused[#loc97, #loc98])
#loc277 = loc(fused[#loc99, #loc100])
#loc278 = loc(fused[#loc101, #loc93])
#loc279 = loc(fused[#loc107, #loc108])
#loc280 = loc(fused[#loc109, #loc110])
#loc281 = loc(fused[#loc111, #loc112])
#loc282 = loc(fused[#loc111, #loc113])
#loc283 = loc(fused[#loc109, #loc114])
#loc284 = loc(fused[#loc117, #loc118])
#loc285 = loc(fused[#loc119, #loc120])
#loc286 = loc(fused[#loc121, #loc122])
#loc287 = loc(fused[#loc124, #loc125])
#loc288 = loc(fused[#loc126, #loc120])
#loc289 = loc(fused[#loc132, #loc133])
#loc290 = loc(fused[#loc131, #loc133])
#loc291 = loc(fused[#loc130, #loc133])
#loc292 = loc(fused[#loc129, #loc128])
#loc293 = loc(fused[#loc138, #loc139])
#loc294 = loc(fused[#loc140, #loc141])
#loc295 = loc(fused[#loc143, #loc141])
#loc296 = loc(fused[#loc146, #loc144])
#loc297 = loc(fused[#loc150, #loc151])
#loc298 = loc(fused[#loc152, #loc153])
#loc299 = loc(fused[#loc155, #loc153])
#loc300 = loc(fused[#loc158, #loc156])
#loc301 = loc(fused[#loc160, #loc161])
#loc302 = loc(fused[#loc162, #loc163])
#loc303 = loc(fused[#loc164, #loc161])
#loc304 = loc(fused[#loc167, #loc168])
#loc305 = loc(fused[#loc170, #loc171])
#loc306 = loc(fused[#loc172, #loc168])
#loc307 = loc(fused[#loc176, #loc177])
#loc308 = loc(fused[#loc178, #loc179])
#loc309 = loc(fused[#loc180, #loc181])
#loc310 = loc(fused[#loc183, #loc184])
#loc311 = loc(fused[#loc186, #loc187])
#loc312 = loc(fused[#loc188, #loc189])
#loc313 = loc(fused[#loc191, #loc190])
#loc314 = loc(fused[#loc192, #loc193])
#loc315 = loc(fused[#loc194, #loc195])
#loc316 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc317 = loc(fused[#loc202, #loc203])
#loc318 = loc(fused[#loc205, #loc206])
#loc319 = loc(fused[#loc207, #loc203])
#loc320 = loc(fused[#loc212, #loc213])
#loc321 = loc(fused[#loc214, #loc215])
#loc322 = loc(fused[#loc217, #loc216])
#loc323 = loc(fused[#loc218, #loc219])
#loc324 = loc(fused[#loc220, #loc221])
#loc325 = loc(fused[#loc222, #loc219])
#loc326 = loc(fused[#loc226, #loc227])
#loc327 = loc(fused[#loc229, #loc230])
#loc328 = loc(fused[#loc231, #loc227])
