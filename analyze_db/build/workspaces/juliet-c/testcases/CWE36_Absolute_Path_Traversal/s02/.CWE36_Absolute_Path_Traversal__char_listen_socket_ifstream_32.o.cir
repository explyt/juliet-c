!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc256)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc257)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc258)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc259)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc261)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc262)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc263)
  cir.func private @close(!s32i) -> !s32i loc(#loc264)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc265)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc266)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc267)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc268)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc270)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc271)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc272)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc273)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc271)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc272)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc273)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc273)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc276)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc278)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc279)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc280)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc281)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc282)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc283)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc53)
        cir.store %18, %14 : !s32i, !cir.ptr<!s32i> loc(#loc281)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc55)
        cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc282)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
        %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
        cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc283)
        cir.scope {
          cir.do {
            cir.scope {
              %24 = cir.const #cir.int<2> : !s32i loc(#loc64)
              %25 = cir.const #cir.int<1> : !u32i loc(#loc65)
              %26 = cir.cast(integral, %25 : !u32i), !s32i loc(#loc65)
              %27 = cir.const #cir.int<6> : !u32i loc(#loc66)
              %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc66)
              %29 = cir.call @socket(%24, %26, %28) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
              cir.store %29, %14 : !s32i, !cir.ptr<!s32i> loc(#loc286)
              cir.scope {
                %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc73)
                %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc73)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc288)
                cir.if %85 {
                  cir.break loc(#loc75)
                } loc(#loc289)
              } loc(#loc287)
              %30 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc290)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc78)
              %32 = cir.const #cir.int<16> : !u64i loc(#loc291)
              cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
              %33 = cir.const #cir.int<2> : !s32i loc(#loc83)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc83)
              %35 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc293)
              %36 = cir.const #cir.int<0> : !s32i loc(#loc86)
              %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc86)
              %38 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
              %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
              cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc294)
              %40 = cir.const #cir.int<27015> : !s32i loc(#loc90)
              %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc90)
              %42 = cir.call @htons(%41) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc91)
              %43 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
              cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc295)
              cir.scope {
                %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %83 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc297)
                %84 = cir.const #cir.int<16> : !u64i loc(#loc298)
                %85 = cir.cast(integral, %84 : !u64i), !u32i loc(#loc298)
                %86 = cir.call @bind(%82, %83, %85) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc102)
                %87 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %88 = cir.unary(minus, %87) nsw : !s32i, !s32i loc(#loc103)
                %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc299)
                cir.if %89 {
                  cir.break loc(#loc105)
                } loc(#loc300)
              } loc(#loc296)
              cir.scope {
                %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %83 = cir.const #cir.int<5> : !s32i loc(#loc109)
                %84 = cir.call @listen(%82, %83) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc110)
                %85 = cir.const #cir.int<1> : !s32i loc(#loc111)
                %86 = cir.unary(minus, %85) nsw : !s32i, !s32i loc(#loc111)
                %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc302)
                cir.if %87 {
                  cir.break loc(#loc113)
                } loc(#loc303)
              } loc(#loc301)
              %44 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc115)
              %46 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc116)
              %47 = cir.call @accept(%44, %45, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc117)
              cir.store %47, %15 : !s32i, !cir.ptr<!s32i> loc(#loc304)
              cir.scope {
                %82 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc123)
                %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc123)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc306)
                cir.if %85 {
                  cir.break loc(#loc125)
                } loc(#loc307)
              } loc(#loc305)
              %48 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %49 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
              %50 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc128)
              %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc129)
              %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc308)
              %53 = cir.const #cir.int<1> : !u64i loc(#loc309)
              %54 = cir.const #cir.int<4096> : !s32i loc(#loc134)
              %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc134)
              %56 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc135)
              %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc310)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc136)
              %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc311)
              %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc312)
              %62 = cir.const #cir.int<0> : !s32i loc(#loc138)
              %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc139)
              %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc139)
              cir.store %64, %11 : !s32i, !cir.ptr<!s32i> loc(#loc313)
              cir.scope {
                %82 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc145)
                %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc145)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc315)
                %86 = cir.ternary(%85, true {
                  %87 = cir.const #true loc(#loc146)
                  cir.yield %87 : !cir.bool loc(#loc146)
                }, false {
                  %87 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                  %88 = cir.const #cir.int<0> : !s32i loc(#loc148)
                  %89 = cir.cmp(eq, %87, %88) : !s32i, !cir.bool loc(#loc316)
                  %90 = cir.ternary(%89, true {
                    %91 = cir.const #true loc(#loc146)
                    cir.yield %91 : !cir.bool loc(#loc146)
                  }, false {
                    %91 = cir.const #false loc(#loc146)
                    cir.yield %91 : !cir.bool loc(#loc146)
                  }) : (!cir.bool) -> !cir.bool loc(#loc146)
                  cir.yield %90 : !cir.bool loc(#loc146)
                }) : (!cir.bool) -> !cir.bool loc(#loc146)
                cir.if %86 {
                  cir.break loc(#loc150)
                } loc(#loc317)
              } loc(#loc314)
              %65 = cir.const #cir.int<0> : !s8i loc(#loc151)
              %66 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
              %67 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc153)
              %68 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc154)
              %70 = cir.const #cir.int<1> : !u64i loc(#loc318)
              %71 = cir.binop(div, %69, %70) : !u64i loc(#loc319)
              %72 = cir.binop(add, %67, %71) : !u64i loc(#loc320)
              %73 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %72 : !u64i), !cir.ptr<!s8i> loc(#loc157)
              cir.store %65, %73 : !s8i, !cir.ptr<!s8i> loc(#loc321)
              %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
              %75 = cir.const #cir.int<13> : !s8i loc(#loc159)
              %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc159)
              %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc160)
              cir.store %77, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
              cir.scope {
                %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
                cir.if %83 {
                  %84 = cir.const #cir.int<0> : !s8i loc(#loc167)
                  %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                  cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc325)
                } loc(#loc324)
              } loc(#loc323)
              %78 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
              %79 = cir.const #cir.int<10> : !s8i loc(#loc171)
              %80 = cir.cast(integral, %79 : !s8i), !s32i loc(#loc171)
              %81 = cir.call @strchr(%78, %80) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc172)
              cir.store %81, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
              cir.scope {
                %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc177)
                cir.if %83 {
                  %84 = cir.const #cir.int<0> : !s8i loc(#loc179)
                  %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                  cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc329)
                } loc(#loc328)
              } loc(#loc327)
            } loc(#loc285)
            cir.yield loc(#loc61)
          } while {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc182)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc182)
            cir.condition(%25) loc(#loc182)
          } loc(#loc284)
        } loc(#loc284)
        cir.scope {
          %24 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc185)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc186)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc186)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc331)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc189)
          } loc(#loc332)
        } loc(#loc330)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc193)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc193)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc334)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc195)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc196)
          } loc(#loc335)
        } loc(#loc333)
      } loc(#loc277)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
    } loc(#loc275)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc338)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc338)
      cir.scope {
        %9 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc340)
        cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc208)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
        %11 = cir.const #cir.int<8> : !s32i loc(#loc341)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%9, %10, %11) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
            cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc268)
            cir.yield loc(#loc213)
          } loc(#loc213)
          cir.yield loc(#loc212)
        } catch [#cir.unwind {
          cir.resume loc(#loc212)
        }] loc(#loc212)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
            cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc268)
            cir.yield loc(#loc214)
          } loc(#loc214)
          cir.yield loc(#loc212)
        } catch [#cir.unwind {
          cir.resume loc(#loc212)
        }] loc(#loc212)
        cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc268)
      } loc(#loc339)
    } loc(#loc337)
    cir.return loc(#loc28)
  } loc(#loc269)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc342)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc217)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc344)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc345)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc346)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc347)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc345)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc346)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc347)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc347)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc350)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc350)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc235)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc217)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc217)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc351)
    } loc(#loc349)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc353)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc353)
      cir.scope {
        %9 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc355)
        cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc248)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
        %11 = cir.const #cir.int<8> : !s32i loc(#loc341)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%9, %10, %11) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
            cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc268)
            cir.yield loc(#loc251)
          } loc(#loc251)
          cir.yield loc(#loc250)
        } catch [#cir.unwind {
          cir.resume loc(#loc250)
        }] loc(#loc250)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
            cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc268)
            cir.yield loc(#loc252)
          } loc(#loc252)
          cir.yield loc(#loc250)
        } catch [#cir.unwind {
          cir.resume loc(#loc250)
        }] loc(#loc250)
        cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc268)
      } loc(#loc354)
    } loc(#loc352)
    cir.return loc(#loc219)
  } loc(#loc343)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32L7goodG2BEv() : () -> () loc(#loc255)
    cir.return loc(#loc254)
  } loc(#loc356)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":525:7)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":526:34)
#loc21 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":664:7)
#loc22 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":673:7)
#loc23 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":736:7)
#loc24 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":741:7)
#loc25 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":606:7)
#loc26 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":607:9)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":52:1)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":151:1)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":54:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":54:12)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":55:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":55:25)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":56:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":56:25)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":57:5)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":57:37)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":58:12)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":58:5)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":59:5)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":141:5)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":60:9)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":60:24)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":60:23)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":61:9)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":139:9)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":66:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":66:17)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":67:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":67:32)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":68:13)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":68:19)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":69:13)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":69:35)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":70:13)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":70:35)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":71:13)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":71:41)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":71:30)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":71:37)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":72:13)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":124:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":73:13)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":123:13)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":82:39)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":82:48)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":82:61)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":82:32)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":82:17)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":82:72)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":83:17)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":86:17)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":83:21)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":83:37)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":84:17)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":85:21)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":87:24)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":87:25)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":87:34)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":87:37)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":87:51)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":87:17)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":87:52)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":88:38)
#loc84 = loc("/usr/include/netinet/in.h":249:5)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":88:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":89:43)
#loc87 = loc("/usr/include/netinet/in.h":251:20)
#loc88 = loc("/usr/include/netinet/in.h":33:15)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":89:17)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":90:42)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":90:36)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":90:17)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":90:50)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:17)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":94:17)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:26)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:58)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:59)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:68)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:82)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:21)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":91:88)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":92:17)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":93:21)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":95:17)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":98:17)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":95:28)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":95:42)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":95:21)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":95:61)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":96:17)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":97:21)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":99:39)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":99:53)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":99:59)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":99:32)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":99:17)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":99:63)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":100:17)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":103:17)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":100:21)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":100:37)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":101:17)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":102:21)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:35)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:58)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:65)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:63)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:49)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:72)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:75)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:86)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:91)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:106)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:116)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:117)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:120)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:30)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":105:121)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":106:17)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":109:17)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":106:21)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":106:35)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":106:48)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":106:51)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":106:65)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":107:17)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":108:21)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":111:61)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":111:17)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":111:22)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":111:32)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":111:45)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":111:56)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":111:57)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":113:34)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":113:40)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":113:27)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":113:17)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":113:44)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":114:17)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":117:17)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":114:21)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":115:17)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":116:32)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":116:22)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":116:21)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":118:34)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":118:40)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":118:27)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":118:17)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":118:44)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":119:17)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":122:17)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":119:21)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":120:17)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":121:32)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":121:22)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":121:21)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":124:20)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":125:13)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":128:13)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":125:17)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":125:33)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":126:13)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":127:30)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":127:17)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":129:13)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":132:13)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":129:17)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":129:33)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":130:13)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":131:30)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":131:17)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":140:21)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":140:10)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":140:9)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":142:5)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":150:5)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":143:9)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":143:24)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":143:23)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":144:9)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":149:9)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":145:13)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":145:22)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":147:36)
#loc210 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:57)
#loc211 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:67)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":52:6)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":147:23)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":148:23)
#loc215 = loc("/usr/include/string.h":149:1)
#loc216 = loc("/usr/include/string.h":150:14)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":172:22)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":158:1)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":185:1)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":160:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":160:12)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":161:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":161:25)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":162:5)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":162:25)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":163:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":163:37)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":164:12)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":164:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":165:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":175:5)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":166:9)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":166:24)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":166:23)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":172:9)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":172:16)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":174:21)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":174:10)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":174:9)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":176:5)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":184:5)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":177:9)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":177:24)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":177:23)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":178:9)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":183:9)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":179:13)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":179:22)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":181:36)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":158:13)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":181:23)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":182:23)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":187:1)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":190:1)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_32.cpp":189:5)
#loc256 = loc(fused[#loc1, #loc2])
#loc257 = loc(fused[#loc3, #loc4])
#loc258 = loc(fused[#loc5, #loc6])
#loc259 = loc(fused[#loc7, #loc8])
#loc260 = loc(fused[#loc9, #loc10])
#loc261 = loc(fused[#loc11, #loc12])
#loc262 = loc(fused[#loc13, #loc14])
#loc263 = loc(fused[#loc15, #loc16])
#loc264 = loc(fused[#loc17, #loc18])
#loc265 = loc(fused[#loc19, #loc20])
#loc266 = loc(fused[#loc21, #loc22])
#loc267 = loc(fused[#loc23, #loc24])
#loc268 = loc(fused[#loc25, #loc26])
#loc269 = loc(fused[#loc27, #loc28])
#loc270 = loc(fused[#loc29, #loc30])
#loc271 = loc(fused[#loc31, #loc32])
#loc272 = loc(fused[#loc33, #loc34])
#loc273 = loc(fused[#loc35, #loc36])
#loc274 = loc(fused[#loc38, #loc37])
#loc275 = loc(fused[#loc39, #loc40])
#loc276 = loc(fused[#loc41, #loc42])
#loc277 = loc(fused[#loc44, #loc45])
#loc278 = loc(fused[#loc46, #loc47])
#loc279 = loc(fused[#loc48, #loc49])
#loc280 = loc(fused[#loc50, #loc51])
#loc281 = loc(fused[#loc52, #loc53])
#loc282 = loc(fused[#loc54, #loc55])
#loc283 = loc(fused[#loc56, #loc57])
#loc284 = loc(fused[#loc60, #loc61])
#loc285 = loc(fused[#loc62, #loc63])
#loc286 = loc(fused[#loc68, #loc69])
#loc287 = loc(fused[#loc70, #loc71])
#loc288 = loc(fused[#loc72, #loc73])
#loc289 = loc(fused[#loc74, #loc71])
#loc290 = loc(fused[#loc76, #loc77])
#loc291 = loc(fused[#loc79, #loc80])
#loc292 = loc(fused[#loc81, #loc82])
#loc293 = loc(fused[#loc85, #loc83])
#loc294 = loc(fused[#loc89, #loc86])
#loc295 = loc(fused[#loc93, #loc94])
#loc296 = loc(fused[#loc95, #loc96])
#loc297 = loc(fused[#loc98, #loc99])
#loc298 = loc(fused[#loc100, #loc101])
#loc299 = loc(fused[#loc102, #loc103])
#loc300 = loc(fused[#loc104, #loc96])
#loc301 = loc(fused[#loc106, #loc107])
#loc302 = loc(fused[#loc110, #loc111])
#loc303 = loc(fused[#loc112, #loc107])
#loc304 = loc(fused[#loc118, #loc119])
#loc305 = loc(fused[#loc120, #loc121])
#loc306 = loc(fused[#loc122, #loc123])
#loc307 = loc(fused[#loc124, #loc121])
#loc308 = loc(fused[#loc130, #loc131])
#loc309 = loc(fused[#loc132, #loc133])
#loc310 = loc(fused[#loc134, #loc135])
#loc311 = loc(fused[#loc134, #loc136])
#loc312 = loc(fused[#loc132, #loc137])
#loc313 = loc(fused[#loc140, #loc141])
#loc314 = loc(fused[#loc142, #loc143])
#loc315 = loc(fused[#loc144, #loc145])
#loc316 = loc(fused[#loc147, #loc148])
#loc317 = loc(fused[#loc149, #loc143])
#loc318 = loc(fused[#loc155, #loc156])
#loc319 = loc(fused[#loc154, #loc156])
#loc320 = loc(fused[#loc153, #loc156])
#loc321 = loc(fused[#loc152, #loc151])
#loc322 = loc(fused[#loc161, #loc162])
#loc323 = loc(fused[#loc163, #loc164])
#loc324 = loc(fused[#loc166, #loc164])
#loc325 = loc(fused[#loc169, #loc167])
#loc326 = loc(fused[#loc173, #loc174])
#loc327 = loc(fused[#loc175, #loc176])
#loc328 = loc(fused[#loc178, #loc176])
#loc329 = loc(fused[#loc181, #loc179])
#loc330 = loc(fused[#loc183, #loc184])
#loc331 = loc(fused[#loc185, #loc186])
#loc332 = loc(fused[#loc187, #loc184])
#loc333 = loc(fused[#loc190, #loc191])
#loc334 = loc(fused[#loc192, #loc193])
#loc335 = loc(fused[#loc194, #loc191])
#loc336 = loc(fused[#loc199, #loc197])
#loc337 = loc(fused[#loc200, #loc201])
#loc338 = loc(fused[#loc202, #loc203])
#loc339 = loc(fused[#loc205, #loc206])
#loc340 = loc(fused[#loc207, #loc208])
#loc341 = loc(fused[#loc210, #loc211])
#loc342 = loc(fused[#loc215, #loc216])
#loc343 = loc(fused[#loc218, #loc219])
#loc344 = loc(fused[#loc220, #loc221])
#loc345 = loc(fused[#loc222, #loc223])
#loc346 = loc(fused[#loc224, #loc225])
#loc347 = loc(fused[#loc226, #loc227])
#loc348 = loc(fused[#loc229, #loc228])
#loc349 = loc(fused[#loc230, #loc231])
#loc350 = loc(fused[#loc232, #loc233])
#loc351 = loc(fused[#loc239, #loc237])
#loc352 = loc(fused[#loc240, #loc241])
#loc353 = loc(fused[#loc242, #loc243])
#loc354 = loc(fused[#loc245, #loc246])
#loc355 = loc(fused[#loc247, #loc248])
#loc356 = loc(fused[#loc253, #loc254])
