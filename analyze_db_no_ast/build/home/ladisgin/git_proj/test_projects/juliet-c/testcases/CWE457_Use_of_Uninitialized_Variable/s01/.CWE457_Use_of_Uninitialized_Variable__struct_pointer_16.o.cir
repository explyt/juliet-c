!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc105)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_pointer_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
        cir.condition(%2) loc(#loc9)
      } do {
        cir.break loc(#loc10)
      } loc(#loc108)
    } loc(#loc108)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%2) loc(#loc13)
      } do {
        %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
        %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
        %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
        cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc17)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
        %5 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc21)
        cir.break loc(#loc22)
      } loc(#loc109)
    } loc(#loc109)
    cir.return loc(#loc4)
  } loc(#loc106)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_pointer_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc110)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc113)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc114)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%2) loc(#loc39)
      } do {
        cir.break loc(#loc40)
      } loc(#loc117)
    } loc(#loc117)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc43)
        cir.condition(%2) loc(#loc43)
      } do {
        %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc44)
        %2 = cir.const #cir.int<8> : !u64i loc(#loc119)
        %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc44)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
        cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc121)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc123)
          %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc53)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc55)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc57)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc55)
          } loc(#loc124)
        } loc(#loc122)
        %5 = cir.const #cir.int<5> : !s32i loc(#loc58)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
        %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
        cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc125)
        %8 = cir.const #cir.int<6> : !s32i loc(#loc60)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
        %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc126)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
        %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
        %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc63)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc64)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
        %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
        %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc66)
        cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc67)
        cir.break loc(#loc68)
      } loc(#loc118)
    } loc(#loc118)
    cir.return loc(#loc34)
  } loc(#loc115)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc75)
        cir.condition(%2) loc(#loc75)
      } do {
        %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc76)
        %2 = cir.const #cir.int<8> : !u64i loc(#loc130)
        %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc76)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
        cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc134)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc85)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc89)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc87)
          } loc(#loc135)
        } loc(#loc133)
        %5 = cir.const #cir.int<5> : !s32i loc(#loc90)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
        %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
        cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc136)
        %8 = cir.const #cir.int<6> : !s32i loc(#loc92)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
        %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc137)
        cir.break loc(#loc94)
      } loc(#loc129)
    } loc(#loc129)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc97)
        cir.condition(%2) loc(#loc97)
      } do {
        %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
        %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
        %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc100)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
        %5 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc103)
        cir.break loc(#loc104)
      } loc(#loc138)
    } loc(#loc138)
    cir.return loc(#loc70)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":24:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":40:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":26:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":26:21)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":27:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":32:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":27:11)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":31:9)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":33:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":39:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":33:11)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":36:22)
#loc15 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":36:28)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":36:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":37:22)
#loc19 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":37:28)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":37:9)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":38:9)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":93:1)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":97:1)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":95:5)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":95:13)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":96:5)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":96:13)
#loc29 = loc("/usr/include/stdlib.h":672:1)
#loc30 = loc("/usr/include/stdlib.h":672:45)
#loc31 = loc("/usr/include/stdlib.h":756:1)
#loc32 = loc("/usr/include/stdlib.h":756:70)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":47:1)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":68:1)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":49:5)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":49:21)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":50:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":55:5)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":50:11)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":54:9)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":56:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":67:5)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":56:11)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:33)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:40)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:60)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:61)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:9)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:9)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:37)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:13)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:21)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:18)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:27)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:28)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:34)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:33)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":62:24)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":62:9)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":63:24)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":63:9)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":64:22)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":64:28)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":64:9)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":65:22)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":65:28)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":65:9)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":66:9)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":71:1)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":91:1)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":73:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":73:21)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":74:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":83:5)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":74:11)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:33)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:40)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:60)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:61)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:9)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:37)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:13)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:21)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:18)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:27)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:28)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:34)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:33)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":80:24)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":80:9)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":81:24)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":81:9)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":82:9)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":84:5)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":90:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":84:11)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":87:22)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":87:28)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":87:9)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":88:22)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":88:28)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":88:9)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":89:9)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc11, #loc12])
#loc110 = loc(fused[#loc23, #loc24])
#loc111 = loc(fused[#loc25, #loc26])
#loc112 = loc(fused[#loc27, #loc28])
#loc113 = loc(fused[#loc29, #loc30])
#loc114 = loc(fused[#loc31, #loc32])
#loc115 = loc(fused[#loc33, #loc34])
#loc116 = loc(fused[#loc35, #loc36])
#loc117 = loc(fused[#loc37, #loc38])
#loc118 = loc(fused[#loc41, #loc42])
#loc119 = loc(fused[#loc45, #loc46])
#loc120 = loc(fused[#loc44, #loc47])
#loc121 = loc(fused[#loc48, #loc47])
#loc122 = loc(fused[#loc49, #loc50])
#loc123 = loc(fused[#loc51, #loc52])
#loc124 = loc(fused[#loc54, #loc50])
#loc125 = loc(fused[#loc59, #loc58])
#loc126 = loc(fused[#loc61, #loc60])
#loc127 = loc(fused[#loc69, #loc70])
#loc128 = loc(fused[#loc71, #loc72])
#loc129 = loc(fused[#loc73, #loc74])
#loc130 = loc(fused[#loc77, #loc78])
#loc131 = loc(fused[#loc76, #loc79])
#loc132 = loc(fused[#loc80, #loc79])
#loc133 = loc(fused[#loc81, #loc82])
#loc134 = loc(fused[#loc83, #loc84])
#loc135 = loc(fused[#loc86, #loc82])
#loc136 = loc(fused[#loc91, #loc90])
#loc137 = loc(fused[#loc93, #loc92])
#loc138 = loc(fused[#loc95, #loc96])
