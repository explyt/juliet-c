!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":24:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":24:40)
#loc24 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":65:27)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":65:44)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc166 = loc(fused[#loc7, #loc8])
#loc198 = loc(fused[#loc88, #loc89])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc164)
  cir.func internal private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43L9badSourceERP14_twoIntsStruct(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc166)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc10)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc167)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc168)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc172)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc23)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc165)
  cir.func linkonce_odr @_ZN14_twoIntsStructaSERKS_(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16), %arg1: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc24)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["", init, const] {alignment = 8 : i64} loc(#loc24)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc24)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc24)
    cir.store %arg1, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc24)
    %3 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc24)
    %8 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc25)
    %9 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc25)
    cir.libc.memcpy %7 bytes from %9 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc24)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc24)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    cir.return %10 : !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
  } loc(#loc24)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc174)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc177)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    cir.store %4, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc181)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43L9badSourceERP14_twoIntsStruct(%3) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc42)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc183)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc184)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc49)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc185)
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc52)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc186)
    cir.brcond %10 ^bb5, ^bb9 loc(#loc186)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc187)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %14 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %12 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc60)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb7 loc(#loc48)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc48)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc62)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb4 loc(#loc184)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc48)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc191)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc192)
  ^bb13:  // pred: ^bb12
    %23 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc67)
    cir.store %24, %2 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.br ^bb14 loc(#loc192)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %25 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc70)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc194)
    cir.brcond %28 ^bb15, ^bb19 loc(#loc194)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc195)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %35 = cir.call @_ZN14_twoIntsStructaSERKS_(%34, %31) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr) loc(#loc77)
    cir.br ^bb17 loc(#loc66)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc66)
  ^bb18:  // pred: ^bb17
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc79)
    cir.store %37, %2 : !u64i, !cir.ptr<!u64i> loc(#loc196)
    cir.br ^bb14 loc(#loc192)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc66)
  ^bb20:  // pred: ^bb19
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %39 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
    cir.call @printStructLine(%40) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc83)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc84)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc85)
    cir.br ^bb21 loc(#loc64)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc44)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc31)
  } loc(#loc176)
  cir.func internal private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43L13goodG2BSourceERP14_twoIntsStruct(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc88, #loc89])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc198)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc90)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc91)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc92)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc199)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc200)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc96)
    cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc99)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc204)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc102)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc104)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb3 loc(#loc98)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc87)
  } loc(#loc197)
  cir.func internal private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc207)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc209)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %4, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc211)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43L13goodG2BSourceERP14_twoIntsStruct(%3) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc117)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc213)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc214)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc124)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc215)
    cir.br ^bb4 loc(#loc214)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc127)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc216)
    cir.brcond %10 ^bb5, ^bb9 loc(#loc216)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc217)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    %14 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %12 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc60)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc136)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb4 loc(#loc214)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc123)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc121)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc221)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc222)
  ^bb13:  // pred: ^bb12
    %23 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc141)
    cir.store %24, %2 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb14 loc(#loc222)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %25 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc143)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc144)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc224)
    cir.brcond %28 ^bb15, ^bb19 loc(#loc224)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc225)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc146)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    %35 = cir.call @_ZN14_twoIntsStructaSERKS_(%34, %31) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr) loc(#loc151)
    cir.br ^bb17 loc(#loc140)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc140)
  ^bb18:  // pred: ^bb17
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc153)
    cir.store %37, %2 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    cir.br ^bb14 loc(#loc222)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc140)
  ^bb20:  // pred: ^bb19
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %39 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
    cir.call @printStructLine(%40) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc157)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc158)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
    cir.br ^bb21 loc(#loc138)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc119)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc106)
  } loc(#loc206)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43L7goodG2BEv() : () -> () loc(#loc162)
    cir.return loc(#loc161)
  } loc(#loc227)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":24:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":29:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":25:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":27:29)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":27:36)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":27:39)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":27:59)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":27:60)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":28:29)
#loc25 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc28 = loc("/usr/include/stdlib.h":687:1)
#loc29 = loc("/usr/include/stdlib.h":687:32)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":31:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":58:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":37:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":37:33)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":39:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":39:20)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":48:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":48:20)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":33:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":33:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":34:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":34:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":35:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":36:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":57:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":38:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":46:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":41:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":45:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":41:22)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":41:18)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":41:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":41:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":42:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":43:36)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":43:24)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":43:17)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":44:36)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":44:24)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":44:17)
#loc60 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":41:35)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":41:34)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":47:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":56:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":50:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":53:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":50:22)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":50:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":50:25)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":50:29)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":51:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":52:34)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":52:27)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":52:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":52:22)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":52:23)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":52:25)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":50:35)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":50:34)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":54:30)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":54:35)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":54:36)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":54:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":55:18)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":55:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":65:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":70:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":66:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":68:29)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":68:36)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":68:40)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":68:60)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":68:61)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":68:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:33)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:17)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:23)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:24)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:30)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":69:29)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":72:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":99:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":78:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":78:33)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":80:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":80:20)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":89:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":89:20)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":74:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":74:21)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":75:12)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":75:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":76:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":77:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":98:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":79:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":87:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":82:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":86:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":82:22)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":82:18)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":82:25)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":82:29)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":83:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":84:36)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":84:24)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":84:17)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":85:36)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":85:24)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":85:17)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":82:35)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":82:34)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":88:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":97:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":91:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":94:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":91:22)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":91:18)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":91:25)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":91:29)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":92:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":93:34)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":93:27)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":93:17)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":93:22)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":93:23)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":93:25)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":91:35)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":91:34)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":95:30)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":95:35)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":95:36)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":95:13)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":96:18)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":96:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":101:1)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":104:1)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_43.cpp":103:5)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc12, #loc13])
#loc168 = loc(fused[#loc11, #loc13])
#loc169 = loc(fused[#loc10, #loc14])
#loc170 = loc(fused[#loc15, #loc14])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc18, #loc19])
#loc173 = loc(fused[#loc20, #loc17])
#loc174 = loc(fused[#loc26, #loc27])
#loc175 = loc(fused[#loc28, #loc29])
#loc176 = loc(fused[#loc30, #loc31])
#loc177 = loc(fused[#loc32, #loc33])
#loc178 = loc(fused[#loc34, #loc35])
#loc179 = loc(fused[#loc36, #loc37])
#loc180 = loc(fused[#loc38, #loc39])
#loc181 = loc(fused[#loc41, #loc40])
#loc182 = loc(fused[#loc43, #loc44])
#loc183 = loc(fused[#loc45, #loc46])
#loc184 = loc(fused[#loc47, #loc48])
#loc185 = loc(fused[#loc50, #loc49])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc53, #loc48])
#loc188 = loc(fused[#loc56, #loc54])
#loc189 = loc(fused[#loc59, #loc57])
#loc190 = loc(fused[#loc62, #loc61])
#loc191 = loc(fused[#loc63, #loc64])
#loc192 = loc(fused[#loc65, #loc66])
#loc193 = loc(fused[#loc68, #loc67])
#loc194 = loc(fused[#loc69, #loc70])
#loc195 = loc(fused[#loc71, #loc66])
#loc196 = loc(fused[#loc79, #loc78])
#loc197 = loc(fused[#loc86, #loc87])
#loc199 = loc(fused[#loc93, #loc94])
#loc200 = loc(fused[#loc92, #loc94])
#loc201 = loc(fused[#loc91, #loc95])
#loc202 = loc(fused[#loc96, #loc95])
#loc203 = loc(fused[#loc97, #loc98])
#loc204 = loc(fused[#loc99, #loc100])
#loc205 = loc(fused[#loc101, #loc98])
#loc206 = loc(fused[#loc105, #loc106])
#loc207 = loc(fused[#loc107, #loc108])
#loc208 = loc(fused[#loc109, #loc110])
#loc209 = loc(fused[#loc111, #loc112])
#loc210 = loc(fused[#loc113, #loc114])
#loc211 = loc(fused[#loc116, #loc115])
#loc212 = loc(fused[#loc118, #loc119])
#loc213 = loc(fused[#loc120, #loc121])
#loc214 = loc(fused[#loc122, #loc123])
#loc215 = loc(fused[#loc125, #loc124])
#loc216 = loc(fused[#loc126, #loc127])
#loc217 = loc(fused[#loc128, #loc123])
#loc218 = loc(fused[#loc131, #loc129])
#loc219 = loc(fused[#loc134, #loc132])
#loc220 = loc(fused[#loc136, #loc135])
#loc221 = loc(fused[#loc137, #loc138])
#loc222 = loc(fused[#loc139, #loc140])
#loc223 = loc(fused[#loc142, #loc141])
#loc224 = loc(fused[#loc143, #loc144])
#loc225 = loc(fused[#loc145, #loc140])
#loc226 = loc(fused[#loc153, #loc152])
#loc227 = loc(fused[#loc160, #loc161])
