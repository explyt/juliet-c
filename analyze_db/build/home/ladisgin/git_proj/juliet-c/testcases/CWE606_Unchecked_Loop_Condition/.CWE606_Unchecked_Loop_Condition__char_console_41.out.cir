!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":28:21)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":28:28)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":182:10)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":182:14)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":182:20)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":182:32)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":113:25)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":113:32)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":84:25)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":84:32)
#true = #cir.bool<true> : !cir.bool
#loc298 = loc(fused[#loc17, #loc18])
#loc342 = loc(fused[#loc124, #loc125])
#loc343 = loc(fused[#loc126, #loc127])
#loc348 = loc(fused[#loc144, #loc145])
#loc391 = loc(fused[#loc247, #loc248])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc291)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc292)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc293)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc294)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc296)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc298)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc300)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc301)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc302)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc28)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc28)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc304)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc32)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc306)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc36)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc308)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc309)
              cir.condition(%16) loc(#loc40)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc42)
                %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc43)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc311)
              } loc(#loc310)
              cir.yield loc(#loc35)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc45)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc312)
              cir.yield loc(#loc307)
            } loc(#loc307)
          } loc(#loc307)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc47)
        } loc(#loc305)
      } loc(#loc303)
    } loc(#loc299)
    cir.return loc(#loc16)
  } loc(#loc297)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc315)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc315)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc315)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc318)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
      cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc318)
      cir.scope {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc64)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc64)
        %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc65)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc320)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc66)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc321)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc71)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc72)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc73)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc73)
            %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc324)
            %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc324)
            %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc293)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
            %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc76)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc325)
            cir.if %29 {
              %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc81)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
              %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc81)
              cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc327)
              cir.scope {
                %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc87)
                %34 = cir.const #cir.int<0> : !s32i loc(#loc88)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc88)
                %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc329)
                %37 = cir.ternary(%36, true {
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
                  %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc91)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc92)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc92)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc330)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc93)
                  %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc90)
                  %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc90)
                  %46 = cir.const #cir.int<10> : !s32i loc(#loc94)
                  %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc331)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc89)
                    cir.yield %49 : !cir.bool loc(#loc89)
                  }, false {
                    %49 = cir.const #false loc(#loc89)
                    cir.yield %49 : !cir.bool loc(#loc89)
                  }) : (!cir.bool) -> !cir.bool loc(#loc89)
                  cir.yield %48 : !cir.bool loc(#loc89)
                }, false {
                  %38 = cir.const #false loc(#loc89)
                  cir.yield %38 : !cir.bool loc(#loc89)
                }) : (!cir.bool) -> !cir.bool loc(#loc89)
                cir.if %37 {
                  %38 = cir.const #cir.int<0> : !s32i loc(#loc96)
                  %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc96)
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
                  %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc98)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc99)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc333)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc100)
                  cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc334)
                } loc(#loc332)
              } loc(#loc328)
            } else {
              %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc101)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc102)
              %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc102)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc104)
              %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc105)
              cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc335)
            } loc(#loc326)
          } loc(#loc323)
        } loc(#loc322)
      } loc(#loc319)
    } loc(#loc317)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.call @badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.return loc(#loc49)
  } loc(#loc313)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc337)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc110)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc338)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc112)
    cir.return loc(#loc109)
  } loc(#loc336)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc339)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc121)
  cir.func @main(%arg0: !s32i loc(fused[#loc124, #loc125]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc126, #loc127])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc342)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc343)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc130)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc130)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc131)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc118)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc344)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_41_good() : () -> () loc(#loc133)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc120)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc345)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_41_bad() : () -> () loc(#loc137)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc140)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc346)
    cir.return %17 : !s32i loc(#loc346)
  } loc(#loc341)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc144, #loc145])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc348)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc350)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc351)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc352)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc155)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc157)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc157)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc155)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc158)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc354)
        cir.if %10 {
          cir.scope {
            %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %12 = cir.const #cir.int<10000> : !s32i loc(#loc163)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc357)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc165)
              cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc359)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc169)
                cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc361)
                cir.for : cond {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                  %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc362)
                  cir.condition(%19) loc(#loc173)
                } body {
                  cir.scope {
                    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc175)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc176)
                    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc364)
                  } loc(#loc363)
                  cir.yield loc(#loc168)
                } step {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc178)
                  cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc365)
                  cir.yield loc(#loc360)
                } loc(#loc360)
              } loc(#loc360)
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc179)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc180)
            } loc(#loc358)
          } loc(#loc356)
        } loc(#loc355)
      } loc(#loc353)
    } loc(#loc349)
    cir.return loc(#loc143)
  } loc(#loc347)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc367)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc368)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc368)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc368)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc187)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc369)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc371)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc193)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc193)
      cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc371)
      cir.scope {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc197)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc197)
        %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc198)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc373)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc199)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc199)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc374)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc204)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc205)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc206)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc206)
            %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc207)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc377)
            %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc377)
            %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc293)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc208)
            %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc209)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc378)
            cir.if %29 {
              %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc214)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
              %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc214)
              cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc380)
              cir.scope {
                %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc220)
                %34 = cir.const #cir.int<0> : !s32i loc(#loc221)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc221)
                %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc382)
                %37 = cir.ternary(%36, true {
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
                  %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc224)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc225)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc225)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc383)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc226)
                  %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc223)
                  %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc223)
                  %46 = cir.const #cir.int<10> : !s32i loc(#loc227)
                  %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc384)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc222)
                    cir.yield %49 : !cir.bool loc(#loc222)
                  }, false {
                    %49 = cir.const #false loc(#loc222)
                    cir.yield %49 : !cir.bool loc(#loc222)
                  }) : (!cir.bool) -> !cir.bool loc(#loc222)
                  cir.yield %48 : !cir.bool loc(#loc222)
                }, false {
                  %38 = cir.const #false loc(#loc222)
                  cir.yield %38 : !cir.bool loc(#loc222)
                }) : (!cir.bool) -> !cir.bool loc(#loc222)
                cir.if %37 {
                  %38 = cir.const #cir.int<0> : !s32i loc(#loc229)
                  %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc229)
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
                  %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc231)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc232)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc232)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc386)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc233)
                  cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc387)
                } loc(#loc385)
              } loc(#loc381)
            } else {
              %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc234)
              %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc234)
              cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc235)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc236)
              %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc236)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
              %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc238)
              %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc239)
              cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc388)
            } loc(#loc379)
          } loc(#loc376)
        } loc(#loc375)
      } loc(#loc372)
    } loc(#loc370)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
    cir.call @goodB2GSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc241)
    cir.return loc(#loc182)
  } loc(#loc366)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc389)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc244)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc247, #loc248])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc391)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc393)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc394)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc395)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc258)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc259)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc260)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc260)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc258)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc261)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc397)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc263)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc399)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc267)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc401)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc269)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc402)
              cir.condition(%16) loc(#loc271)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc273)
                %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc274)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc404)
              } loc(#loc403)
              cir.yield loc(#loc266)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc276)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc405)
              cir.yield loc(#loc400)
            } loc(#loc400)
          } loc(#loc400)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc277)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc278)
        } loc(#loc398)
      } loc(#loc396)
    } loc(#loc392)
    cir.return loc(#loc246)
  } loc(#loc390)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc407)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc408)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc408)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc408)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc285)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc409)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc287)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc288)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc244)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc244)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc287)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc289)
    cir.call @goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc290)
    cir.return loc(#loc280)
  } loc(#loc406)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_41.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":70:27)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:26)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":44:1)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":29:1)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":30:5)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":43:5)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:9)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:13)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:16)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":31:19)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:9)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":42:9)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:13)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:20)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":32:39)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":33:9)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":35:27)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":35:13)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":40:13)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:22)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:18)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:25)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:29)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:27)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":37:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":39:28)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":39:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:33)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":36:32)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":41:26)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":41:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":46:1)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":77:1)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":48:5)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":48:12)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":49:5)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":49:28)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":50:12)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":50:5)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":51:5)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":75:5)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:9)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:37)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:26)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":53:33)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:9)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":74:9)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:17)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":55:27)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":56:9)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":73:13)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:23)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:28)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:27)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:43)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:47)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:57)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:17)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":58:67)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":59:13)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":67:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":69:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:27)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:34)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:17)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":62:38)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":66:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:21)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:31)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:33)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:36)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:41)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:49)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:50)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":63:55)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":64:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:39)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:21)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:26)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:34)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":65:35)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":70:17)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:33)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:17)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:22)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":72:29)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":76:13)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":76:5)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":167:1)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":171:1)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":169:5)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":169:13)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":170:5)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":170:13)
#loc114 = loc("/usr/include/stdlib.h":575:1)
#loc115 = loc("/usr/include/stdlib.h":575:41)
#loc116 = loc("/usr/include/time.h":76:1)
#loc117 = loc("/usr/include/time.h":76:38)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":187:15)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":189:15)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":192:15)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":194:15)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":182:1)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":197:1)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":183:1)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":185:27)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":185:22)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":185:5)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":187:5)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":188:5)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":188:59)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":189:5)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":192:5)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":193:5)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":193:58)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":194:5)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":196:12)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":196:5)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":113:1)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":132:1)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":114:1)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":115:5)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":131:5)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:9)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:13)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:16)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":116:19)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:9)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":130:9)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:13)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:20)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:26)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":117:39)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":118:9)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":120:13)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":129:13)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":120:17)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":120:21)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":121:13)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":122:31)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":122:17)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:17)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":127:17)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:26)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:22)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:29)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:33)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:31)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":124:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":126:32)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":126:21)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:37)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":123:36)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":128:30)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":128:17)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":134:1)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":165:1)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":136:5)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":136:12)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":137:5)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":137:28)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":138:12)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":138:5)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":139:5)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":163:5)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:9)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:37)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:26)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":141:33)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:9)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":162:9)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:13)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:17)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":143:27)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":144:9)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:13)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":161:13)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:23)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:28)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:27)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:43)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:47)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:57)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:17)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":146:67)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":147:13)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":155:13)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":157:13)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:27)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:34)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:17)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":150:38)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:17)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":154:17)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:21)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:31)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:33)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:36)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:41)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:49)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:50)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":151:55)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":152:17)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:39)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:21)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:26)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:34)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":153:35)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":158:27)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":158:17)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:33)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:17)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:22)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":160:29)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":164:17)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":164:5)
#loc242 = loc("/usr/include/string.h":141:1)
#loc243 = loc("/usr/include/string.h":142:14)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":108:18)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":84:1)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":100:1)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":85:1)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":86:5)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":99:5)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:9)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:13)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:16)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":87:19)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:9)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":98:9)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:13)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:20)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:26)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":88:39)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":89:9)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":91:27)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":91:13)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:13)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":96:13)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:22)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:18)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:25)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:29)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:27)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":93:13)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":95:28)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":95:17)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:33)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":92:32)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":97:26)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":97:13)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":102:1)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":110:1)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":104:5)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":104:12)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":105:5)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":105:28)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":106:12)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":106:5)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":108:5)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":108:12)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":109:17)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_41.c":109:5)
#loc291 = loc(fused[#loc1, #loc2])
#loc292 = loc(fused[#loc3, #loc4])
#loc293 = loc(fused[#loc5, #loc6])
#loc294 = loc(fused[#loc7, #loc8])
#loc295 = loc(fused[#loc10, #loc11])
#loc296 = loc(fused[#loc13, #loc14])
#loc297 = loc(fused[#loc15, #loc16])
#loc299 = loc(fused[#loc20, #loc21])
#loc300 = loc(fused[#loc22, #loc23])
#loc301 = loc(fused[#loc22, #loc24])
#loc302 = loc(fused[#loc22, #loc25])
#loc303 = loc(fused[#loc26, #loc27])
#loc304 = loc(fused[#loc28, #loc30])
#loc305 = loc(fused[#loc31, #loc27])
#loc306 = loc(fused[#loc33, #loc32])
#loc307 = loc(fused[#loc34, #loc35])
#loc308 = loc(fused[#loc37, #loc36])
#loc309 = loc(fused[#loc38, #loc39])
#loc310 = loc(fused[#loc41, #loc35])
#loc311 = loc(fused[#loc43, #loc42])
#loc312 = loc(fused[#loc45, #loc44])
#loc313 = loc(fused[#loc48, #loc49])
#loc314 = loc(fused[#loc50, #loc51])
#loc315 = loc(fused[#loc52, #loc53])
#loc316 = loc(fused[#loc55, #loc54])
#loc317 = loc(fused[#loc56, #loc57])
#loc318 = loc(fused[#loc58, #loc59])
#loc319 = loc(fused[#loc62, #loc63])
#loc320 = loc(fused[#loc64, #loc65])
#loc321 = loc(fused[#loc64, #loc66])
#loc322 = loc(fused[#loc67, #loc63])
#loc323 = loc(fused[#loc68, #loc69])
#loc324 = loc(fused[#loc73, #loc74])
#loc325 = loc(fused[#loc76, #loc77])
#loc326 = loc(fused[#loc78, #loc79, #loc80, #loc69])
#loc327 = loc(fused[#loc83, #loc84])
#loc328 = loc(fused[#loc85, #loc86])
#loc329 = loc(fused[#loc87, #loc88])
#loc330 = loc(fused[#loc91, #loc92])
#loc331 = loc(fused[#loc90, #loc94])
#loc332 = loc(fused[#loc95, #loc86])
#loc333 = loc(fused[#loc98, #loc99])
#loc334 = loc(fused[#loc97, #loc96])
#loc335 = loc(fused[#loc103, #loc102])
#loc336 = loc(fused[#loc108, #loc109])
#loc337 = loc(fused[#loc110, #loc111])
#loc338 = loc(fused[#loc112, #loc113])
#loc339 = loc(fused[#loc114, #loc115])
#loc340 = loc(fused[#loc116, #loc117])
#loc341 = loc(fused[#loc122, #loc123])
#loc344 = loc(fused[#loc133, #loc134])
#loc345 = loc(fused[#loc137, #loc138])
#loc346 = loc(fused[#loc141, #loc140])
#loc347 = loc(fused[#loc142, #loc143])
#loc349 = loc(fused[#loc147, #loc148])
#loc350 = loc(fused[#loc149, #loc150])
#loc351 = loc(fused[#loc149, #loc151])
#loc352 = loc(fused[#loc149, #loc152])
#loc353 = loc(fused[#loc153, #loc154])
#loc354 = loc(fused[#loc155, #loc158])
#loc355 = loc(fused[#loc159, #loc154])
#loc356 = loc(fused[#loc160, #loc161])
#loc357 = loc(fused[#loc162, #loc163])
#loc358 = loc(fused[#loc164, #loc161])
#loc359 = loc(fused[#loc166, #loc165])
#loc360 = loc(fused[#loc167, #loc168])
#loc361 = loc(fused[#loc170, #loc169])
#loc362 = loc(fused[#loc171, #loc172])
#loc363 = loc(fused[#loc174, #loc168])
#loc364 = loc(fused[#loc176, #loc175])
#loc365 = loc(fused[#loc178, #loc177])
#loc366 = loc(fused[#loc181, #loc182])
#loc367 = loc(fused[#loc183, #loc184])
#loc368 = loc(fused[#loc185, #loc186])
#loc369 = loc(fused[#loc188, #loc187])
#loc370 = loc(fused[#loc189, #loc190])
#loc371 = loc(fused[#loc191, #loc192])
#loc372 = loc(fused[#loc195, #loc196])
#loc373 = loc(fused[#loc197, #loc198])
#loc374 = loc(fused[#loc197, #loc199])
#loc375 = loc(fused[#loc200, #loc196])
#loc376 = loc(fused[#loc201, #loc202])
#loc377 = loc(fused[#loc206, #loc207])
#loc378 = loc(fused[#loc209, #loc210])
#loc379 = loc(fused[#loc211, #loc212, #loc213, #loc202])
#loc380 = loc(fused[#loc216, #loc217])
#loc381 = loc(fused[#loc218, #loc219])
#loc382 = loc(fused[#loc220, #loc221])
#loc383 = loc(fused[#loc224, #loc225])
#loc384 = loc(fused[#loc223, #loc227])
#loc385 = loc(fused[#loc228, #loc219])
#loc386 = loc(fused[#loc231, #loc232])
#loc387 = loc(fused[#loc230, #loc229])
#loc388 = loc(fused[#loc237, #loc236])
#loc389 = loc(fused[#loc242, #loc243])
#loc390 = loc(fused[#loc245, #loc246])
#loc392 = loc(fused[#loc250, #loc251])
#loc393 = loc(fused[#loc252, #loc253])
#loc394 = loc(fused[#loc252, #loc254])
#loc395 = loc(fused[#loc252, #loc255])
#loc396 = loc(fused[#loc256, #loc257])
#loc397 = loc(fused[#loc258, #loc261])
#loc398 = loc(fused[#loc262, #loc257])
#loc399 = loc(fused[#loc264, #loc263])
#loc400 = loc(fused[#loc265, #loc266])
#loc401 = loc(fused[#loc268, #loc267])
#loc402 = loc(fused[#loc269, #loc270])
#loc403 = loc(fused[#loc272, #loc266])
#loc404 = loc(fused[#loc274, #loc273])
#loc405 = loc(fused[#loc276, #loc275])
#loc406 = loc(fused[#loc279, #loc280])
#loc407 = loc(fused[#loc281, #loc282])
#loc408 = loc(fused[#loc283, #loc284])
#loc409 = loc(fused[#loc286, #loc285])
