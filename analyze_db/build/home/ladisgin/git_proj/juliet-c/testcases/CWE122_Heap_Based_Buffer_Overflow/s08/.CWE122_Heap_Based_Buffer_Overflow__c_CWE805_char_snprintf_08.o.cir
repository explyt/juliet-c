!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc185)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc186)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc189)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc195)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc25)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc26)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc26)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc197)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc198)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    cir.br ^bb3 loc(#loc201)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc202)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc203)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc38)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb5 loc(#loc32)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc39)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc42)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc204)
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc205)
  ^bb9:  // pred: ^bb8
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %27 = cir.const #cir.int<67> : !s32i loc(#loc46)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc47)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc47)
    cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc206)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc51)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc52)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    %39 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc55)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc57)
    %43 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    %46 = cir.call @snprintf(%40, %42, %44, %45) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc55)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %48 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc13)
  } loc(#loc190)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc208)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.return %2 : !s32i loc(#loc212)
  } loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc73)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc80)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc218)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc84)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb8 loc(#loc87)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc91)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc220)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc221)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb4 loc(#loc224)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc226)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc103)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // pred: ^bb6
    %22 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc104)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc227)
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc83)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc228)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc111)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc112)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc112)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc229)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc116)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc117)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc119)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    %41 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc120)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc122)
    %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc123)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc123)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %48 = cir.call @snprintf(%42, %44, %46, %47) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc120)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %50 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc127)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb11 loc(#loc109)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc75)
  } loc(#loc213)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc131)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    cir.return %2 : !s32i loc(#loc232)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc234)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc139)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc238)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc143)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc143)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc239)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc146)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc147)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc147)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc240)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc241)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.br ^bb3 loc(#loc244)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc246)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc159)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc153)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc160)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    cir.br ^bb7 loc(#loc142)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc142)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc248)
  ^bb9:  // pred: ^bb8
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
    %27 = cir.const #cir.int<67> : !s32i loc(#loc167)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc168)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc168)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc168)
    cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc249)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc172)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc173)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc173)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc175)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    %39 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc176)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc178)
    %43 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc179)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc179)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
    %46 = cir.call @snprintf(%40, %42, %44, %45) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc176)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc182)
    %48 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc183)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc184)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc183)
    cir.br ^bb10 loc(#loc165)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc134)
  } loc(#loc233)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdio.h":385:1)
#loc6 = loc("/usr/include/stdio.h":387:62)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":59:29)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":43:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":63:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":55:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":55:24)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":45:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":45:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":46:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":46:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":47:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":53:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":47:8)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":47:26)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":48:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":50:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":50:31)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":50:34)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":50:45)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":50:46)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":50:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:37)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:21)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:27)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:28)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:34)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":51:33)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":52:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":52:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":52:14)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":52:15)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":54:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":62:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":56:16)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":56:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":56:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":56:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":56:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":56:34)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":57:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":57:16)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":57:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":57:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":59:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":59:18)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":59:24)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":59:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":60:19)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":60:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":61:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":61:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":120:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":124:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":122:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":122:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":123:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":123:14)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":31:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":34:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":33:12)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":33:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":77:19)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":70:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":95:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":87:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":87:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":72:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":72:12)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":73:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":73:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":74:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":85:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":74:8)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":74:27)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":75:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":78:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":80:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":77:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":82:24)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":82:31)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":82:35)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":82:46)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":82:47)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":82:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:37)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:21)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:27)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:28)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:34)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":83:33)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":84:19)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":84:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":84:14)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":84:15)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":86:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":94:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":88:16)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":88:24)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":88:29)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":88:33)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":88:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":88:34)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":89:25)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":89:16)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":89:20)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":89:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":91:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":91:18)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":91:24)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":91:29)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":91:35)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":92:19)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":92:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":93:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":93:14)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":36:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":39:1)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":38:12)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":38:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":98:1)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":118:1)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":110:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":110:24)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":100:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":100:12)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":101:12)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":101:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":102:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":108:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":102:8)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":102:26)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":103:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":105:24)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":105:31)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":105:35)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":105:46)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":105:47)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":105:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:37)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:21)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:27)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:28)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:34)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":106:33)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":107:19)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":107:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":107:14)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":107:15)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":109:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":117:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":111:16)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":111:24)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":111:29)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":111:33)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":111:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":111:34)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":112:25)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":112:16)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":112:20)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":112:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":114:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":114:18)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":114:24)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":114:29)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":114:35)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":115:19)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":115:9)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":116:9)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_08.c":116:14)
#loc185 = loc(fused[#loc1, #loc2])
#loc186 = loc(fused[#loc3, #loc4])
#loc187 = loc(fused[#loc5, #loc6])
#loc188 = loc(fused[#loc8, #loc9])
#loc189 = loc(fused[#loc10, #loc11])
#loc190 = loc(fused[#loc12, #loc13])
#loc191 = loc(fused[#loc14, #loc15])
#loc192 = loc(fused[#loc16, #loc17])
#loc193 = loc(fused[#loc19, #loc18])
#loc194 = loc(fused[#loc20, #loc21])
#loc195 = loc(fused[#loc22, #loc23])
#loc196 = loc(fused[#loc24, #loc21])
#loc197 = loc(fused[#loc27, #loc28])
#loc198 = loc(fused[#loc26, #loc28])
#loc199 = loc(fused[#loc25, #loc29])
#loc200 = loc(fused[#loc30, #loc29])
#loc201 = loc(fused[#loc31, #loc32])
#loc202 = loc(fused[#loc33, #loc34])
#loc203 = loc(fused[#loc35, #loc32])
#loc204 = loc(fused[#loc40, #loc39])
#loc205 = loc(fused[#loc43, #loc44])
#loc206 = loc(fused[#loc49, #loc50])
#loc207 = loc(fused[#loc54, #loc51])
#loc208 = loc(fused[#loc63, #loc64])
#loc209 = loc(fused[#loc65, #loc66])
#loc210 = loc(fused[#loc67, #loc68])
#loc211 = loc(fused[#loc69, #loc70])
#loc212 = loc(fused[#loc72, #loc71])
#loc213 = loc(fused[#loc74, #loc75])
#loc214 = loc(fused[#loc76, #loc77])
#loc215 = loc(fused[#loc78, #loc79])
#loc216 = loc(fused[#loc81, #loc80])
#loc217 = loc(fused[#loc82, #loc83])
#loc218 = loc(fused[#loc84, #loc85])
#loc219 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc220 = loc(fused[#loc92, #loc93])
#loc221 = loc(fused[#loc91, #loc93])
#loc222 = loc(fused[#loc90, #loc94])
#loc223 = loc(fused[#loc95, #loc94])
#loc224 = loc(fused[#loc96, #loc97])
#loc225 = loc(fused[#loc98, #loc99])
#loc226 = loc(fused[#loc100, #loc97])
#loc227 = loc(fused[#loc105, #loc104])
#loc228 = loc(fused[#loc108, #loc109])
#loc229 = loc(fused[#loc114, #loc115])
#loc230 = loc(fused[#loc119, #loc116])
#loc231 = loc(fused[#loc129, #loc130])
#loc232 = loc(fused[#loc132, #loc131])
#loc233 = loc(fused[#loc133, #loc134])
#loc234 = loc(fused[#loc135, #loc136])
#loc235 = loc(fused[#loc137, #loc138])
#loc236 = loc(fused[#loc140, #loc139])
#loc237 = loc(fused[#loc141, #loc142])
#loc238 = loc(fused[#loc143, #loc144])
#loc239 = loc(fused[#loc145, #loc142])
#loc240 = loc(fused[#loc148, #loc149])
#loc241 = loc(fused[#loc147, #loc149])
#loc242 = loc(fused[#loc146, #loc150])
#loc243 = loc(fused[#loc151, #loc150])
#loc244 = loc(fused[#loc152, #loc153])
#loc245 = loc(fused[#loc154, #loc155])
#loc246 = loc(fused[#loc156, #loc153])
#loc247 = loc(fused[#loc161, #loc160])
#loc248 = loc(fused[#loc164, #loc165])
#loc249 = loc(fused[#loc170, #loc171])
#loc250 = loc(fused[#loc175, #loc172])
