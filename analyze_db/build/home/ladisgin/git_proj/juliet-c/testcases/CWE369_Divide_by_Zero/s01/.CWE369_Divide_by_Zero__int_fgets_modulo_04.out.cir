!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":197:10)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":197:14)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":197:20)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":197:32)
#loc256 = loc(fused[#loc69, #loc70])
#loc257 = loc(fused[#loc71, #loc72])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc229)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc230)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc231)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc233)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc235)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc236)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc19)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb1 loc(#loc238)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc239)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc240)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc235)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc235)
    cir.br ^bb4 loc(#loc241)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc30)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc30)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc30)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc30)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc30)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc242)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc243)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb7 loc(#loc35)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc22)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc22)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc245)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %27 ^bb13, ^bb14 loc(#loc246)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %30 = cir.binop(rem, %28, %29) : !s32i loc(#loc247)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc48)
    cir.br ^bb14 loc(#loc43)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc43)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc13)
  } loc(#loc234)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc50)
  } loc(#loc248)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc253)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc66)
  cir.func @main(%arg0: !s32i loc(fused[#loc69, #loc70]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc71, #loc72])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc256)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc257)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc73)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc75)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc75)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc76)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc258)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_04_good() : () -> () loc(#loc78)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_04_bad() : () -> () loc(#loc82)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    cir.return %17 : !s32i loc(#loc260)
  } loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc262)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc263)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc96)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb1 loc(#loc265)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc100)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc266)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc267)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc262)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc262)
    cir.br ^bb4 loc(#loc268)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc107)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc107)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc107)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc107)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc107)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc107)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc107)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc107)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc109)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc115)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb7 loc(#loc112)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc118)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc105)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc103)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc99)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc99)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc272)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %27 ^bb13, ^bb14 loc(#loc273)
  ^bb13:  // pred: ^bb12
    %28 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb20 loc(#loc124)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc274)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %32 = cir.cmp(ne, %30, %31) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %32 ^bb16, ^bb17 loc(#loc276)
  ^bb16:  // pred: ^bb15
    %33 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %35 = cir.binop(rem, %33, %34) : !s32i loc(#loc277)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc136)
    cir.br ^bb18 loc(#loc132)
  ^bb17:  // pred: ^bb15
    %36 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc88)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    cir.br ^bb18 loc(#loc128)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc128)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc121)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc121)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc90)
  } loc(#loc261)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc279)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc145)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.br ^bb1 loc(#loc282)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc283)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc284)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc279)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc279)
    cir.br ^bb4 loc(#loc285)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc155)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc156)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc156)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc156)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc156)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc156)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc156)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc156)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc156)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc157)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc158)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc286)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc287)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc163)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc164)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb7 loc(#loc161)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc167)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    cir.br ^bb7 loc(#loc154)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc154)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc152)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc148)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc148)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc289)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc171)
    cir.brcond %27 ^bb13, ^bb19 loc(#loc290)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc291)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %30 = cir.cmp(ne, %28, %29) : !s32i, !cir.bool loc(#loc292)
    cir.brcond %30 ^bb15, ^bb16 loc(#loc293)
  ^bb15:  // pred: ^bb14
    %31 = cir.const #cir.int<100> : !s32i loc(#loc180)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %33 = cir.binop(rem, %31, %32) : !s32i loc(#loc294)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc182)
    cir.br ^bb17 loc(#loc178)
  ^bb16:  // pred: ^bb14
    %34 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc183)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.br ^bb17 loc(#loc174)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc174)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc170)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc170)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc139)
  } loc(#loc278)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc296)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc190)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb1 loc(#loc298)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc194)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc299)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc198)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc198)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    cir.br ^bb4 loc(#loc196)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc200)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc301)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc204)
    cir.brcond %9 ^bb7, ^bb8 loc(#loc302)
  ^bb7:  // pred: ^bb6
    %10 = cir.const #cir.int<100> : !s32i loc(#loc206)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc303)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc208)
    cir.br ^bb8 loc(#loc203)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc203)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc186)
  } loc(#loc295)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc214)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb1 loc(#loc307)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc218)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc308)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<7> : !s32i loc(#loc220)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb3 loc(#loc217)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc217)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc310)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc224)
    cir.brcond %7 ^bb6, ^bb7 loc(#loc311)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<100> : !s32i loc(#loc226)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc312)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc228)
    cir.br ^bb7 loc(#loc223)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc223)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc210)
  } loc(#loc304)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":47:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":30:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":56:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":38:13)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":38:49)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":32:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":32:9)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":34:13)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":34:12)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":34:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":35:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":50:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":35:8)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":36:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":37:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":49:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":40:13)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":48:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":40:23)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":40:36)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":40:53)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":40:17)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":40:63)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":41:13)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":44:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":46:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":43:29)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":43:24)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":43:17)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":43:40)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":47:17)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":51:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":55:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":51:8)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":52:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":54:22)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":54:28)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":54:9)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":180:1)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":186:1)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":182:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":182:14)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":183:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":183:14)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":184:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":184:14)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":185:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":185:14)
#loc59 = loc("/usr/include/stdlib.h":575:1)
#loc60 = loc("/usr/include/stdlib.h":575:41)
#loc61 = loc("/usr/include/time.h":76:1)
#loc62 = loc("/usr/include/time.h":76:38)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":202:15)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":204:15)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":207:15)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":209:15)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":197:1)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":212:1)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":198:1)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":200:27)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":200:22)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":200:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":202:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":203:5)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":203:53)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":204:5)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":207:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":208:5)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":208:52)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":209:5)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":211:12)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":211:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":87:19)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":98:23)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":63:1)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":101:1)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":71:13)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":71:49)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":65:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":65:9)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":67:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":67:12)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":67:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":68:5)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":83:5)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":68:8)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":69:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":70:9)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":82:9)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":73:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":81:13)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":73:23)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":73:36)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":73:53)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":73:17)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":73:63)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":74:13)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":77:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":79:13)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":76:29)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":76:24)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":76:17)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":76:40)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":80:27)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":80:17)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":84:5)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":100:5)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":84:8)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":85:5)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":88:5)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":90:5)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":87:9)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":92:9)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":99:9)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":92:13)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":92:21)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":93:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":95:9)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":97:9)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":94:26)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":94:32)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":94:13)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":98:13)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":104:1)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":137:1)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":112:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":112:49)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":106:5)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":106:9)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":108:13)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":108:12)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":108:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":109:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":124:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":109:8)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":110:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":111:9)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":123:9)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":114:13)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":122:13)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":114:23)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":114:36)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":114:53)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":114:17)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":114:63)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":115:13)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":118:13)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":120:13)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":117:29)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":117:24)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":117:17)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":117:40)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":121:27)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":121:17)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":125:5)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":136:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":125:8)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":126:5)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":128:9)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":135:9)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":128:13)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":128:21)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":129:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":131:9)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":133:9)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":130:26)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":130:32)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":130:13)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":134:23)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":134:13)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":140:1)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":160:1)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":142:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":142:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":144:13)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":144:12)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":144:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":145:5)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":154:5)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":145:8)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":146:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":149:5)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":151:5)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":148:19)
#loc199 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":148:9)
#loc200 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":153:16)
#loc201 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":153:9)
#loc202 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":155:5)
#loc203 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":159:5)
#loc204 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":155:8)
#loc205 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":156:5)
#loc206 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":158:22)
#loc207 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":158:28)
#loc208 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":158:9)
#loc209 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":163:1)
#loc210 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":178:1)
#loc211 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":165:5)
#loc212 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":165:9)
#loc213 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":167:13)
#loc214 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":167:12)
#loc215 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":167:5)
#loc216 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":168:5)
#loc217 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":172:5)
#loc218 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":168:8)
#loc219 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":169:5)
#loc220 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":171:16)
#loc221 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":171:9)
#loc222 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":173:5)
#loc223 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":177:5)
#loc224 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":173:8)
#loc225 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":174:5)
#loc226 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":176:22)
#loc227 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":176:28)
#loc228 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_04.c":176:9)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc10, #loc11])
#loc234 = loc(fused[#loc12, #loc13])
#loc235 = loc(fused[#loc14, #loc15])
#loc236 = loc(fused[#loc16, #loc17])
#loc237 = loc(fused[#loc20, #loc18])
#loc238 = loc(fused[#loc21, #loc22])
#loc239 = loc(fused[#loc24, #loc22])
#loc240 = loc(fused[#loc25, #loc26])
#loc241 = loc(fused[#loc27, #loc28])
#loc242 = loc(fused[#loc32, #loc33])
#loc243 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc244 = loc(fused[#loc39, #loc40])
#loc245 = loc(fused[#loc42, #loc43])
#loc246 = loc(fused[#loc45, #loc43])
#loc247 = loc(fused[#loc46, #loc47])
#loc248 = loc(fused[#loc49, #loc50])
#loc249 = loc(fused[#loc51, #loc52])
#loc250 = loc(fused[#loc53, #loc54])
#loc251 = loc(fused[#loc55, #loc56])
#loc252 = loc(fused[#loc57, #loc58])
#loc253 = loc(fused[#loc59, #loc60])
#loc254 = loc(fused[#loc61, #loc62])
#loc255 = loc(fused[#loc67, #loc68])
#loc258 = loc(fused[#loc78, #loc79])
#loc259 = loc(fused[#loc82, #loc83])
#loc260 = loc(fused[#loc86, #loc85])
#loc261 = loc(fused[#loc89, #loc90])
#loc262 = loc(fused[#loc91, #loc92])
#loc263 = loc(fused[#loc93, #loc94])
#loc264 = loc(fused[#loc97, #loc95])
#loc265 = loc(fused[#loc98, #loc99])
#loc266 = loc(fused[#loc101, #loc99])
#loc267 = loc(fused[#loc102, #loc103])
#loc268 = loc(fused[#loc104, #loc105])
#loc269 = loc(fused[#loc109, #loc110])
#loc270 = loc(fused[#loc111, #loc112, #loc113, #loc105])
#loc271 = loc(fused[#loc116, #loc117])
#loc272 = loc(fused[#loc120, #loc121])
#loc273 = loc(fused[#loc123, #loc124, #loc125, #loc121])
#loc274 = loc(fused[#loc127, #loc128])
#loc275 = loc(fused[#loc129, #loc130])
#loc276 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc277 = loc(fused[#loc134, #loc135])
#loc278 = loc(fused[#loc138, #loc139])
#loc279 = loc(fused[#loc140, #loc141])
#loc280 = loc(fused[#loc142, #loc143])
#loc281 = loc(fused[#loc146, #loc144])
#loc282 = loc(fused[#loc147, #loc148])
#loc283 = loc(fused[#loc150, #loc148])
#loc284 = loc(fused[#loc151, #loc152])
#loc285 = loc(fused[#loc153, #loc154])
#loc286 = loc(fused[#loc158, #loc159])
#loc287 = loc(fused[#loc160, #loc161, #loc162, #loc154])
#loc288 = loc(fused[#loc165, #loc166])
#loc289 = loc(fused[#loc169, #loc170])
#loc290 = loc(fused[#loc172, #loc170])
#loc291 = loc(fused[#loc173, #loc174])
#loc292 = loc(fused[#loc175, #loc176])
#loc293 = loc(fused[#loc177, #loc178, #loc179, #loc174])
#loc294 = loc(fused[#loc180, #loc181])
#loc295 = loc(fused[#loc185, #loc186])
#loc296 = loc(fused[#loc187, #loc188])
#loc297 = loc(fused[#loc191, #loc189])
#loc298 = loc(fused[#loc192, #loc193])
#loc299 = loc(fused[#loc195, #loc196, #loc197, #loc193])
#loc300 = loc(fused[#loc201, #loc200])
#loc301 = loc(fused[#loc202, #loc203])
#loc302 = loc(fused[#loc205, #loc203])
#loc303 = loc(fused[#loc206, #loc207])
#loc304 = loc(fused[#loc209, #loc210])
#loc305 = loc(fused[#loc211, #loc212])
#loc306 = loc(fused[#loc215, #loc213])
#loc307 = loc(fused[#loc216, #loc217])
#loc308 = loc(fused[#loc219, #loc217])
#loc309 = loc(fused[#loc221, #loc220])
#loc310 = loc(fused[#loc222, #loc223])
#loc311 = loc(fused[#loc225, #loc223])
#loc312 = loc(fused[#loc226, #loc227])
