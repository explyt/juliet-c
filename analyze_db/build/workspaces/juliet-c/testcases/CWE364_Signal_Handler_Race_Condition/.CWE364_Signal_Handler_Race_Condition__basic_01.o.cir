!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":28:27)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":36:24)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc149 = loc(fused[#loc15, #loc16])
#loc176 = loc(fused[#loc79, #loc80])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc142)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc143)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc151)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc153)
      } loc(#loc152)
    } loc(#loc150)
    cir.return loc(#loc14)
  } loc(#loc148)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc156)
      %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc31)
      cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc156)
      %2 = cir.const #cir.int<2> : !s32i loc(#loc32)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc33)
      %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc34)
      cir.scope {
        %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc37)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc38)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc158)
        cir.if %22 {
          %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc40)
          %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
          %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc41)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc41)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc42)
          %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
          cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc160)
        } loc(#loc159)
      } loc(#loc157)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc44)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc161)
      %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc162)
      cir.store %8, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc163)
      cir.scope {
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc51)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc52)
        %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc165)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc55)
          %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc56)
          cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
        } loc(#loc166)
      } loc(#loc164)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc57)
      %10 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
      cir.store %9, %10 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
      %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc60)
      %14 = cir.get_member %13[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
      cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc168)
      %15 = cir.const #cir.int<2> : !s32i loc(#loc61)
      %16 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc62)
      %17 = cir.call @signal(%15, %16) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc63)
      cir.scope {
        %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc66)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc67)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc170)
        cir.if %22 {
          %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc69)
          %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
          %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc70)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc70)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc71)
          %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc142)
          cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc172)
        } loc(#loc171)
      } loc(#loc169)
    } loc(#loc155)
    cir.return loc(#loc27)
  } loc(#loc154)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc173)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc79, #loc80])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc176)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc84)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc85)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc178)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc87)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc88)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc180)
      } loc(#loc179)
    } loc(#loc177)
    cir.return loc(#loc78)
  } loc(#loc175)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc183)
      %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc94)
      cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc183)
      %2 = cir.const #cir.int<2> : !s32i loc(#loc95)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
      %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc97)
      cir.scope {
        %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
        %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc100)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc101)
        %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc185)
        cir.if %28 {
          %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc103)
          %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
          %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc104)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc104)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc105)
          %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
          cir.store %33, %34 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc187)
        } loc(#loc186)
      } loc(#loc184)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc107)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc188)
      %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc189)
      cir.store %8, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc190)
      cir.scope {
        %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc114)
        %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc115)
        %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc192)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc117)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc118)
          %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc119)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc117)
        } loc(#loc193)
      } loc(#loc191)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc120)
      %10 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
      cir.store %9, %10 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc194)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc122)
      %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
      %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc123)
      %14 = cir.get_member %13[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
      cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc195)
      %15 = cir.const #cir.int<2> : !s32i loc(#loc124)
      %16 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc125)
      %17 = cir.call @signal(%15, %16) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc126)
      %18 = cir.const #cir.int<2> : !s32i loc(#loc127)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc128)
      %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc129)
      cir.scope {
        %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
        %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc132)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc133)
        %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc197)
        cir.if %28 {
          %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc135)
          %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
          %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc136)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc136)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc137)
          %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_01StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc143)
          cir.store %33, %34 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc199)
        } loc(#loc198)
      } loc(#loc196)
      %21 = cir.const #cir.int<2> : !s32i loc(#loc139)
      %22 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc140)
      %23 = cir.call @signal(%21, %22) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc141)
    } loc(#loc182)
    cir.return loc(#loc90)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_01.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":83:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":48:5)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":82:5)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":49:9)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":49:45)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":50:16)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":50:24)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":50:9)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":51:9)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":55:9)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":51:13)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":51:81)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":52:9)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":53:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":53:18)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":54:80)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":54:13)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":56:46)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":56:53)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":56:75)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":56:76)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":56:9)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:9)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:49)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:13)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:33)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:39)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:40)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:46)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":57:45)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":58:76)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":58:9)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":59:81)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":59:9)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":67:16)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":67:24)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":67:9)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":77:9)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":81:9)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":77:13)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":77:81)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":78:9)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":79:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":79:18)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":80:80)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":80:13)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":126:1)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":129:1)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":128:5)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":128:11)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":36:1)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":42:1)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":37:1)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":38:5)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":41:5)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":38:9)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":38:78)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":39:5)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":40:82)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":40:9)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":89:1)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":124:1)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":91:5)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":123:5)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":92:9)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":92:45)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":93:16)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":93:24)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":93:9)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":94:9)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":98:9)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":94:13)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":94:82)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":95:9)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":96:13)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":96:18)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":97:81)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":97:13)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":99:46)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":99:53)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":99:75)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":99:76)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":99:9)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:9)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:49)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:13)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:33)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:39)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:40)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:46)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":100:45)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":101:77)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":101:9)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":102:82)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":102:9)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":110:16)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":110:24)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":110:9)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":116:16)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":116:24)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":116:9)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":117:9)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":121:9)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":117:13)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":117:82)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":118:9)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":119:13)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":119:18)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":120:81)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":120:13)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":122:16)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":122:24)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_01.c":122:9)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc13, #loc14])
#loc150 = loc(fused[#loc18, #loc19])
#loc151 = loc(fused[#loc20, #loc21])
#loc152 = loc(fused[#loc22, #loc19])
#loc153 = loc(fused[#loc24, #loc23])
#loc154 = loc(fused[#loc26, #loc27])
#loc155 = loc(fused[#loc28, #loc29])
#loc156 = loc(fused[#loc30, #loc31])
#loc157 = loc(fused[#loc35, #loc36])
#loc158 = loc(fused[#loc37, #loc38])
#loc159 = loc(fused[#loc39, #loc36])
#loc160 = loc(fused[#loc43, #loc42])
#loc161 = loc(fused[#loc45, #loc46])
#loc162 = loc(fused[#loc44, #loc47])
#loc163 = loc(fused[#loc48, #loc47])
#loc164 = loc(fused[#loc49, #loc50])
#loc165 = loc(fused[#loc51, #loc52])
#loc166 = loc(fused[#loc53, #loc50])
#loc167 = loc(fused[#loc58, #loc57])
#loc168 = loc(fused[#loc60, #loc59])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc66, #loc67])
#loc171 = loc(fused[#loc68, #loc65])
#loc172 = loc(fused[#loc72, #loc71])
#loc173 = loc(fused[#loc73, #loc74])
#loc174 = loc(fused[#loc75, #loc76])
#loc175 = loc(fused[#loc77, #loc78])
#loc177 = loc(fused[#loc82, #loc83])
#loc178 = loc(fused[#loc84, #loc85])
#loc179 = loc(fused[#loc86, #loc83])
#loc180 = loc(fused[#loc88, #loc87])
#loc181 = loc(fused[#loc89, #loc90])
#loc182 = loc(fused[#loc91, #loc92])
#loc183 = loc(fused[#loc93, #loc94])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc102, #loc99])
#loc187 = loc(fused[#loc106, #loc105])
#loc188 = loc(fused[#loc108, #loc109])
#loc189 = loc(fused[#loc107, #loc110])
#loc190 = loc(fused[#loc111, #loc110])
#loc191 = loc(fused[#loc112, #loc113])
#loc192 = loc(fused[#loc114, #loc115])
#loc193 = loc(fused[#loc116, #loc113])
#loc194 = loc(fused[#loc121, #loc120])
#loc195 = loc(fused[#loc123, #loc122])
#loc196 = loc(fused[#loc130, #loc131])
#loc197 = loc(fused[#loc132, #loc133])
#loc198 = loc(fused[#loc134, #loc131])
#loc199 = loc(fused[#loc138, #loc137])
