!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc168)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc169)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printUnsignedLine(!u32i) loc(#loc171)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc14)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc174)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc20)
      } loc(#loc176)
    } loc(#loc175)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc180)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc30)
          %8 = cir.unary(inc, %7) : !u32i, !u32i loc(#loc31)
          cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc181)
          %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc29)
          cir.store %9, %6 : !u32i, !cir.ptr<!u32i> loc(#loc180)
          %10 = cir.load %6 : !cir.ptr<!u32i>, !u32i loc(#loc32)
          cir.call @printUnsignedLine(%10) : (!u32i) -> () loc(#loc33)
        } loc(#loc179)
      } loc(#loc178)
    } loc(#loc177)
    cir.return loc(#loc11)
  } loc(#loc172)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc184)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc182)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc187)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc54)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc191)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc58)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc60)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc60)
      } loc(#loc193)
    } loc(#loc192)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc65)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc72)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc73)
          %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc73)
          %9 = cir.const #cir.int<2> : !u32i loc(#loc73)
          %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc73)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc73)
          %12 = cir.binop(add, %10, %11) : !u32i loc(#loc73)
          %13 = cir.cmp(lt, %6, %12) : !u32i, !cir.bool loc(#loc197)
          cir.if %13 {
            %14 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc199)
            %15 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc79)
            %16 = cir.unary(inc, %15) : !u32i, !u32i loc(#loc80)
            cir.store %16, %0 : !u32i, !cir.ptr<!u32i> loc(#loc200)
            %17 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc78)
            cir.store %17, %14 : !u32i, !cir.ptr<!u32i> loc(#loc199)
            %18 = cir.load %14 : !cir.ptr<!u32i>, !u32i loc(#loc81)
            cir.call @printUnsignedLine(%18) : (!u32i) -> () loc(#loc82)
          } else {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc49)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
          } loc(#loc198)
        } loc(#loc196)
      } loc(#loc195)
    } loc(#loc194)
    cir.return loc(#loc51)
  } loc(#loc189)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc88)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc203)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc92)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc94)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc96)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc96)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc94)
      } loc(#loc205)
    } loc(#loc204)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc99)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc103)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc104)
          %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc104)
          %9 = cir.const #cir.int<2> : !u32i loc(#loc104)
          %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc104)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc104)
          %12 = cir.binop(add, %10, %11) : !u32i loc(#loc104)
          %13 = cir.cmp(lt, %6, %12) : !u32i, !cir.bool loc(#loc209)
          cir.if %13 {
            %14 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc211)
            %15 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc110)
            %16 = cir.unary(inc, %15) : !u32i, !u32i loc(#loc111)
            cir.store %16, %0 : !u32i, !cir.ptr<!u32i> loc(#loc212)
            %17 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc109)
            cir.store %17, %14 : !u32i, !cir.ptr<!u32i> loc(#loc211)
            %18 = cir.load %14 : !cir.ptr<!u32i>, !u32i loc(#loc112)
            cir.call @printUnsignedLine(%18) : (!u32i) -> () loc(#loc113)
          } else {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc114)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc114)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc115)
          } loc(#loc210)
        } loc(#loc208)
      } loc(#loc207)
    } loc(#loc206)
    cir.return loc(#loc85)
  } loc(#loc201)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc120)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc215)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc124)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc128)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc128)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc130)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc130)
        cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc218)
      } loc(#loc217)
    } loc(#loc216)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc134)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc222)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc140)
          %8 = cir.unary(inc, %7) : !u32i, !u32i loc(#loc141)
          cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc223)
          %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc139)
          cir.store %9, %6 : !u32i, !cir.ptr<!u32i> loc(#loc222)
          %10 = cir.load %6 : !cir.ptr<!u32i>, !u32i loc(#loc142)
          cir.call @printUnsignedLine(%10) : (!u32i) -> () loc(#loc143)
        } loc(#loc221)
      } loc(#loc220)
    } loc(#loc219)
    cir.return loc(#loc117)
  } loc(#loc213)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc148)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc226)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc152)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc154)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc154)
        cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc229)
      } loc(#loc228)
    } loc(#loc227)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc158)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc233)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc164)
          %8 = cir.unary(inc, %7) : !u32i, !u32i loc(#loc165)
          cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc234)
          %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc163)
          cir.store %9, %6 : !u32i, !cir.ptr<!u32i> loc(#loc233)
          %10 = cir.load %6 : !cir.ptr<!u32i>, !u32i loc(#loc166)
          cir.call @printUnsignedLine(%10) : (!u32i) -> () loc(#loc167)
        } loc(#loc232)
      } loc(#loc231)
    } loc(#loc230)
    cir.return loc(#loc145)
  } loc(#loc224)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":23:1)
#loc2 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":23:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":35:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":28:1)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":46:1)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":30:5)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":30:18)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":31:12)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":31:5)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":32:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":36:5)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":32:8)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":33:5)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":35:9)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":35:17)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":37:5)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":45:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":37:8)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":38:5)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":39:9)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":44:9)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":42:13)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":42:35)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":41:17)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":41:13)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":43:31)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":43:13)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":156:1)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":162:1)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":158:5)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":158:14)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":159:5)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":159:14)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":160:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":160:14)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":161:5)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":161:14)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":24:1)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":24:26)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":65:19)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":78:23)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":53:1)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":81:1)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":55:5)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":55:18)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":56:12)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":56:5)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":57:5)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":61:5)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":57:8)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":58:5)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":60:9)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":60:17)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":60:24)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":62:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":80:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":62:8)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":63:5)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":66:5)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":68:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":65:9)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":70:9)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":79:9)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":70:13)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":70:20)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":71:9)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":75:9)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":77:9)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":73:13)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":73:35)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":72:17)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":72:13)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":74:31)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":74:13)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":78:13)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":84:1)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":107:1)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":86:5)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":86:18)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":87:12)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":87:5)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":88:5)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":92:5)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":88:8)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":89:5)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":91:9)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":91:17)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":91:24)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":93:5)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":106:5)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":93:8)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":94:5)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":96:9)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":105:9)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":96:13)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":96:20)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":97:9)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":101:9)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":103:9)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":99:13)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":99:35)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":98:17)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":98:13)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":100:31)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":100:13)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":104:23)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":104:13)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":110:1)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":133:1)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":112:5)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":112:18)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":113:12)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":113:5)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":114:5)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":123:5)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":114:8)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":115:5)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":118:5)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":120:5)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":117:19)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":117:9)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":122:16)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":122:9)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":124:5)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":132:5)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":124:8)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":125:5)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":126:9)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":131:9)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":129:13)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":129:35)
#loc140 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":128:17)
#loc141 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":128:13)
#loc142 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":130:31)
#loc143 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":130:13)
#loc144 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":136:1)
#loc145 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":154:1)
#loc146 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":138:5)
#loc147 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":138:18)
#loc148 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":139:12)
#loc149 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":139:5)
#loc150 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":140:5)
#loc151 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":144:5)
#loc152 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":140:8)
#loc153 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":141:5)
#loc154 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":143:16)
#loc155 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":143:9)
#loc156 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":145:5)
#loc157 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":153:5)
#loc158 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":145:8)
#loc159 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":146:5)
#loc160 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":147:9)
#loc161 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":152:9)
#loc162 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":150:13)
#loc163 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":150:35)
#loc164 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":149:17)
#loc165 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":149:13)
#loc166 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":151:31)
#loc167 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_05.c":151:13)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc8, #loc9])
#loc172 = loc(fused[#loc10, #loc11])
#loc173 = loc(fused[#loc12, #loc13])
#loc174 = loc(fused[#loc15, #loc14])
#loc175 = loc(fused[#loc16, #loc17])
#loc176 = loc(fused[#loc19, #loc17])
#loc177 = loc(fused[#loc22, #loc23])
#loc178 = loc(fused[#loc25, #loc23])
#loc179 = loc(fused[#loc26, #loc27])
#loc180 = loc(fused[#loc28, #loc29])
#loc181 = loc(fused[#loc31, #loc30])
#loc182 = loc(fused[#loc34, #loc35])
#loc183 = loc(fused[#loc36, #loc37])
#loc184 = loc(fused[#loc38, #loc39])
#loc185 = loc(fused[#loc40, #loc41])
#loc186 = loc(fused[#loc42, #loc43])
#loc187 = loc(fused[#loc44, #loc45])
#loc188 = loc(fused[#loc46, #loc47])
#loc189 = loc(fused[#loc50, #loc51])
#loc190 = loc(fused[#loc52, #loc53])
#loc191 = loc(fused[#loc55, #loc54])
#loc192 = loc(fused[#loc56, #loc57])
#loc193 = loc(fused[#loc59, #loc57])
#loc194 = loc(fused[#loc63, #loc64])
#loc195 = loc(fused[#loc66, #loc67, #loc68, #loc64])
#loc196 = loc(fused[#loc70, #loc71])
#loc197 = loc(fused[#loc72, #loc73])
#loc198 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc199 = loc(fused[#loc77, #loc78])
#loc200 = loc(fused[#loc80, #loc79])
#loc201 = loc(fused[#loc84, #loc85])
#loc202 = loc(fused[#loc86, #loc87])
#loc203 = loc(fused[#loc89, #loc88])
#loc204 = loc(fused[#loc90, #loc91])
#loc205 = loc(fused[#loc93, #loc91])
#loc206 = loc(fused[#loc97, #loc98])
#loc207 = loc(fused[#loc100, #loc98])
#loc208 = loc(fused[#loc101, #loc102])
#loc209 = loc(fused[#loc103, #loc104])
#loc210 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc211 = loc(fused[#loc108, #loc109])
#loc212 = loc(fused[#loc111, #loc110])
#loc213 = loc(fused[#loc116, #loc117])
#loc214 = loc(fused[#loc118, #loc119])
#loc215 = loc(fused[#loc121, #loc120])
#loc216 = loc(fused[#loc122, #loc123])
#loc217 = loc(fused[#loc125, #loc126, #loc127, #loc123])
#loc218 = loc(fused[#loc131, #loc130])
#loc219 = loc(fused[#loc132, #loc133])
#loc220 = loc(fused[#loc135, #loc133])
#loc221 = loc(fused[#loc136, #loc137])
#loc222 = loc(fused[#loc138, #loc139])
#loc223 = loc(fused[#loc141, #loc140])
#loc224 = loc(fused[#loc144, #loc145])
#loc225 = loc(fused[#loc146, #loc147])
#loc226 = loc(fused[#loc149, #loc148])
#loc227 = loc(fused[#loc150, #loc151])
#loc228 = loc(fused[#loc153, #loc151])
#loc229 = loc(fused[#loc155, #loc154])
#loc230 = loc(fused[#loc156, #loc157])
#loc231 = loc(fused[#loc159, #loc157])
#loc232 = loc(fused[#loc160, #loc161])
#loc233 = loc(fused[#loc162, #loc163])
#loc234 = loc(fused[#loc165, #loc164])
