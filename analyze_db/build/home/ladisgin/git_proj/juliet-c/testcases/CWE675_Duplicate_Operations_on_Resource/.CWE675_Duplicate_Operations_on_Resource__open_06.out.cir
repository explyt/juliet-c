!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":156:10)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":156:14)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":156:20)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":156:32)
#loc213 = loc(fused[#loc56, #loc57])
#loc214 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc191)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc19)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc198)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc20)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc21)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc199)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc22)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc26)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc201)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<5> : !s32i loc(#loc29)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc33)
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc7)
  } loc(#loc192)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc204)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc209)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc210)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_06_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_06_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.return %17 : !s32i loc(#loc217)
  } loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc80)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc84)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc85)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc222)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc87)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc87)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc88)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc89)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc224)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc90)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc91)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc225)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc92)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc96)
    cir.br ^bb3 loc(#loc83)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %19 = cir.cmp(ne, %17, %18) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc229)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb8 loc(#loc102)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc98)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc76)
  } loc(#loc218)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc110)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb1 loc(#loc233)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc115)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc234)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc235)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc117)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc117)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc118)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc119)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc236)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc120)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc121)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc237)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc122)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc126)
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<5> : !s32i loc(#loc129)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc130)
    %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc240)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc241)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc128)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc128)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc106)
  } loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc132)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc138)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc142)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc143)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc246)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc247)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb4 loc(#loc145)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc132)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc132)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %11 = cir.const #cir.int<64> : !s32i loc(#loc150)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc248)
    %13 = cir.const #cir.int<256> : !s32i loc(#loc151)
    %14 = cir.const #cir.int<128> : !s32i loc(#loc152)
    %15 = cir.binop(or, %13, %14) : !s32i loc(#loc249)
    %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc153)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc251)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<5> : !s32i loc(#loc158)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc159)
    %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc252)
    cir.brcond %19 ^bb7, ^bb8 loc(#loc253)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc162)
    cir.br ^bb8 loc(#loc157)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc157)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc134)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc168)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc172)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc173)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc258)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc175)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc175)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc176)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc177)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc260)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc178)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc179)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc261)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc180)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc171)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc263)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<5> : !s32i loc(#loc185)
    %16 = cir.const #cir.int<5> : !s32i loc(#loc186)
    %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc265)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc189)
    cir.br ^bb7 loc(#loc184)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc164)
  } loc(#loc254)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_06.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:21)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":36:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":51:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":38:5)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":38:9)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":39:13)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":39:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":39:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":40:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":45:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":40:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":40:27)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":41:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:43)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:50)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:59)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:67)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:16)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:9)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":42:75)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":44:15)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":44:9)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":46:5)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":50:5)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":46:8)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":46:27)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":47:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":49:15)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":49:9)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":139:1)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":145:1)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":141:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":141:14)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":142:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":142:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":143:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":143:14)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":144:5)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":144:14)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":161:15)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":163:15)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":166:15)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":168:15)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":156:1)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":171:1)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":157:1)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":159:27)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":159:22)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":159:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":161:5)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":162:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":162:59)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":163:5)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":166:5)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":167:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":167:58)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":168:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":170:12)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":170:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":71:19)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":58:1)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":79:1)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":60:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":60:9)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":61:13)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":61:12)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":61:5)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":62:5)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":67:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":62:8)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":62:27)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":63:5)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:21)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:43)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:50)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:59)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:67)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:16)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:9)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":64:75)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":66:15)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":66:9)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":68:5)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":78:5)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":68:8)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":68:27)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":69:5)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":72:5)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":74:5)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":71:9)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":82:1)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":98:1)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":84:5)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":84:9)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":85:13)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":85:12)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":85:5)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":86:5)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":91:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":86:8)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":86:27)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":87:5)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:21)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:43)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:50)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:59)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:67)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:16)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:9)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":88:75)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":90:15)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":90:9)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":92:5)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":97:5)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":92:8)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":92:27)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":93:5)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:21)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":101:1)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":120:1)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":103:5)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":103:9)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":104:13)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":104:12)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":104:5)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":105:5)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":114:5)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":105:8)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":105:27)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":106:5)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":109:5)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":111:5)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":108:19)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":108:9)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:44)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:51)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:60)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:68)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:16)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:9)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":113:76)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":115:5)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":119:5)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":115:8)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":115:27)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":116:5)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":118:15)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":118:9)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":123:1)
#loc164 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":137:1)
#loc165 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":125:5)
#loc166 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":125:9)
#loc167 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":126:13)
#loc168 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":126:12)
#loc169 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":126:5)
#loc170 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":127:5)
#loc171 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":131:5)
#loc172 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":127:8)
#loc173 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":127:27)
#loc174 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":128:5)
#loc175 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:21)
#loc176 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:44)
#loc177 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:51)
#loc178 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:60)
#loc179 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:68)
#loc180 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:16)
#loc181 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:9)
#loc182 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":130:76)
#loc183 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":132:5)
#loc184 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":136:5)
#loc185 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":132:8)
#loc186 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":132:27)
#loc187 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":133:5)
#loc188 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":135:15)
#loc189 = loc("CWE675_Duplicate_Operations_on_Resource__open_06.c":135:9)
#loc190 = loc(fused[#loc1, #loc2])
#loc191 = loc(fused[#loc4, #loc5])
#loc192 = loc(fused[#loc6, #loc7])
#loc193 = loc(fused[#loc8, #loc9])
#loc194 = loc(fused[#loc12, #loc10])
#loc195 = loc(fused[#loc13, #loc14])
#loc196 = loc(fused[#loc15, #loc16])
#loc197 = loc(fused[#loc17, #loc14])
#loc198 = loc(fused[#loc18, #loc19])
#loc199 = loc(fused[#loc20, #loc21])
#loc200 = loc(fused[#loc23, #loc24])
#loc201 = loc(fused[#loc27, #loc28])
#loc202 = loc(fused[#loc29, #loc30])
#loc203 = loc(fused[#loc31, #loc28])
#loc204 = loc(fused[#loc34, #loc35])
#loc205 = loc(fused[#loc36, #loc37])
#loc206 = loc(fused[#loc38, #loc39])
#loc207 = loc(fused[#loc40, #loc41])
#loc208 = loc(fused[#loc42, #loc43])
#loc209 = loc(fused[#loc44, #loc45])
#loc210 = loc(fused[#loc46, #loc47])
#loc211 = loc(fused[#loc48, #loc49])
#loc212 = loc(fused[#loc54, #loc55])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc69, #loc70])
#loc217 = loc(fused[#loc73, #loc72])
#loc218 = loc(fused[#loc75, #loc76])
#loc219 = loc(fused[#loc77, #loc78])
#loc220 = loc(fused[#loc81, #loc79])
#loc221 = loc(fused[#loc82, #loc83])
#loc222 = loc(fused[#loc84, #loc85])
#loc223 = loc(fused[#loc86, #loc83])
#loc224 = loc(fused[#loc88, #loc89])
#loc225 = loc(fused[#loc90, #loc91])
#loc226 = loc(fused[#loc93, #loc94])
#loc227 = loc(fused[#loc97, #loc98])
#loc228 = loc(fused[#loc99, #loc100])
#loc229 = loc(fused[#loc101, #loc102, #loc103, #loc98])
#loc230 = loc(fused[#loc105, #loc106])
#loc231 = loc(fused[#loc107, #loc108])
#loc232 = loc(fused[#loc111, #loc109])
#loc233 = loc(fused[#loc112, #loc113])
#loc234 = loc(fused[#loc114, #loc115])
#loc235 = loc(fused[#loc116, #loc113])
#loc236 = loc(fused[#loc118, #loc119])
#loc237 = loc(fused[#loc120, #loc121])
#loc238 = loc(fused[#loc123, #loc124])
#loc239 = loc(fused[#loc127, #loc128])
#loc240 = loc(fused[#loc129, #loc130])
#loc241 = loc(fused[#loc131, #loc128])
#loc242 = loc(fused[#loc133, #loc134])
#loc243 = loc(fused[#loc135, #loc136])
#loc244 = loc(fused[#loc139, #loc137])
#loc245 = loc(fused[#loc140, #loc141])
#loc246 = loc(fused[#loc142, #loc143])
#loc247 = loc(fused[#loc144, #loc145, #loc146, #loc141])
#loc248 = loc(fused[#loc149, #loc150])
#loc249 = loc(fused[#loc151, #loc152])
#loc250 = loc(fused[#loc154, #loc155])
#loc251 = loc(fused[#loc156, #loc157])
#loc252 = loc(fused[#loc158, #loc159])
#loc253 = loc(fused[#loc160, #loc157])
#loc254 = loc(fused[#loc163, #loc164])
#loc255 = loc(fused[#loc165, #loc166])
#loc256 = loc(fused[#loc169, #loc167])
#loc257 = loc(fused[#loc170, #loc171])
#loc258 = loc(fused[#loc172, #loc173])
#loc259 = loc(fused[#loc174, #loc171])
#loc260 = loc(fused[#loc176, #loc177])
#loc261 = loc(fused[#loc178, #loc179])
#loc262 = loc(fused[#loc181, #loc182])
#loc263 = loc(fused[#loc183, #loc184])
#loc264 = loc(fused[#loc185, #loc186])
#loc265 = loc(fused[#loc187, #loc184])
