!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc126)
  cir.func private @printLongLongLine(!s64i) loc(#loc127)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc129)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %2 ^bb3, ^bb14 loc(#loc17)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // pred: ^bb3
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc134)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc135)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc136)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc131)
    cir.br ^bb5 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc27)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc138)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc139)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc31)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
    cir.br ^bb7 loc(#loc25)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // pred: ^bb7
    %17 = cir.const #cir.int<5> : !s64i loc(#loc32)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc35)
    cir.store %17, %20 : !s64i, !cir.ptr<!s64i> loc(#loc140)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !s32i), !cir.ptr<!s64i> loc(#loc38)
    %24 = cir.load %23 : !cir.ptr<!s64i>, !s64i loc(#loc36)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc39)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc40)
    %27 = cir.const #cir.int<130000> : !s32i loc(#loc41)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc41)
    %29 = cir.const #cir.int<8> : !u64i loc(#loc141)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc142)
    %31 = cir.call @realloc(%26, %30) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc45)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc143)
    cir.store %32, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc144)
    cir.br ^bb9 loc(#loc145)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc50)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc51)
    %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s64i>, !cir.bool loc(#loc146)
    cir.brcond %36 ^bb10, ^bb11 loc(#loc147)
  ^bb10:  // pred: ^bb9
    %37 = cir.const #cir.int<10> : !s64i loc(#loc53)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc54)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s64i>, %39 : !s32i), !cir.ptr<!s64i> loc(#loc56)
    cir.store %37, %40 : !s64i, !cir.ptr<!s64i> loc(#loc148)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc57)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s64i>, %42 : !s32i), !cir.ptr<!s64i> loc(#loc59)
    %44 = cir.load %43 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    cir.call @printLongLongLine(%44) : (!s64i) -> () loc(#loc60)
    %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc62)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb11 loc(#loc49)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc49)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc19)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc63)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc16)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc12)
  } loc(#loc130)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc149)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %3 ^bb3, ^bb14 loc(#loc76)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // pred: ^bb3
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc80)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc156)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc157)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc158)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc152)
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc85)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc86)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc160)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc161)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc88)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc90)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc84)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<5> : !s64i loc(#loc91)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc92)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc94)
    cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc162)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc95)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !s32i), !cir.ptr<!s64i> loc(#loc97)
    %25 = cir.load %24 : !cir.ptr<!s64i>, !s64i loc(#loc95)
    cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc98)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc99)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc99)
    %28 = cir.const #cir.int<130000> : !s32i loc(#loc100)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc100)
    %30 = cir.const #cir.int<8> : !u64i loc(#loc163)
    %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc164)
    %32 = cir.call @realloc(%27, %31) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc165)
    cir.store %33, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc166)
    cir.br ^bb9 loc(#loc167)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
    %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc110)
    %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!s64i>, !cir.bool loc(#loc168)
    cir.brcond %37 ^bb10, ^bb11 loc(#loc169)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc112)
    cir.store %38, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc170)
    %39 = cir.const #cir.int<10> : !s64i loc(#loc114)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc115)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s64i>, %41 : !s32i), !cir.ptr<!s64i> loc(#loc117)
    cir.store %39, %42 : !s64i, !cir.ptr<!s64i> loc(#loc171)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc118)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s64i>, %44 : !s32i), !cir.ptr<!s64i> loc(#loc120)
    %46 = cir.load %45 : !cir.ptr<!s64i>, !s64i loc(#loc118)
    cir.call @printLongLongLine(%46) : (!s64i) -> () loc(#loc121)
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc108)
  ^bb12:  // pred: ^bb11
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc122)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc122)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc124)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc75)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc69)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":683:1)
#loc8 = loc("/usr/include/stdlib.h":684:14)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":46:1)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:13)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:67)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":26:5)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":45:5)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":26:11)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":28:9)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":43:9)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:41)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:48)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:52)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":29:66)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:13)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:41)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:17)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:25)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:31)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:32)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:38)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":30:37)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:23)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:13)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:18)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":32:19)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:31)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:36)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:37)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":33:13)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:39)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:46)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:54)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:68)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:45)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:31)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:69)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":35:13)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":36:13)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":42:13)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":36:17)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":36:25)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":37:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:27)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:17)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:22)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":39:23)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:35)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:40)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:41)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":40:17)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":41:17)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":41:22)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":44:9)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":80:1)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":83:1)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":82:5)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":82:11)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":53:1)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":78:1)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:13)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:67)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":60:13)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":60:23)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":55:5)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":77:5)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":55:11)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":57:9)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":75:9)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:41)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:48)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:52)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":58:66)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:13)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:41)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:17)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:25)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:31)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:32)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:38)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":59:37)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:23)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:13)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:18)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":62:19)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:31)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:36)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:37)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":63:13)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:42)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:49)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:57)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:71)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:48)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:34)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:72)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":64:13)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":67:13)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":73:13)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":67:17)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":67:28)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":68:13)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":69:24)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":69:17)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:27)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:17)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:22)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":71:23)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:35)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:40)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:41)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":72:17)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":74:18)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":74:13)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_16.c":76:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc16])
#loc133 = loc(fused[#loc18, #loc19])
#loc134 = loc(fused[#loc22, #loc23])
#loc135 = loc(fused[#loc21, #loc23])
#loc136 = loc(fused[#loc20, #loc14])
#loc137 = loc(fused[#loc24, #loc25])
#loc138 = loc(fused[#loc26, #loc27])
#loc139 = loc(fused[#loc28, #loc25])
#loc140 = loc(fused[#loc33, #loc32])
#loc141 = loc(fused[#loc42, #loc43])
#loc142 = loc(fused[#loc44, #loc43])
#loc143 = loc(fused[#loc45, #loc46])
#loc144 = loc(fused[#loc47, #loc46])
#loc145 = loc(fused[#loc48, #loc49])
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc52, #loc49])
#loc148 = loc(fused[#loc54, #loc53])
#loc149 = loc(fused[#loc64, #loc65])
#loc150 = loc(fused[#loc66, #loc67])
#loc151 = loc(fused[#loc68, #loc69])
#loc152 = loc(fused[#loc70, #loc71])
#loc153 = loc(fused[#loc72, #loc73])
#loc154 = loc(fused[#loc74, #loc75])
#loc155 = loc(fused[#loc77, #loc78])
#loc156 = loc(fused[#loc81, #loc82])
#loc157 = loc(fused[#loc80, #loc82])
#loc158 = loc(fused[#loc79, #loc71])
#loc159 = loc(fused[#loc83, #loc84])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc87, #loc84])
#loc162 = loc(fused[#loc92, #loc91])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc103, #loc102])
#loc165 = loc(fused[#loc104, #loc105])
#loc166 = loc(fused[#loc106, #loc105])
#loc167 = loc(fused[#loc107, #loc108])
#loc168 = loc(fused[#loc109, #loc110])
#loc169 = loc(fused[#loc111, #loc108])
#loc170 = loc(fused[#loc113, #loc112])
#loc171 = loc(fused[#loc115, #loc114])
