!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":96:10)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":96:14)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":96:20)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":96:32)
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc35, #loc36])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fputs(!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc96)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputs_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc99)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc10)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
        %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
        %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc14)
      } loc(#loc100)
    } loc(#loc98)
    cir.return loc(#loc7)
  } loc(#loc97)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputs_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc102)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc16)
  } loc(#loc101)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc104)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc105)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc30)
  cir.func @main(%arg0: !s32i loc(fused[#loc33, #loc34]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc35, #loc36])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc108)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc109)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc32)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc37)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc37)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc38)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc39)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc39)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc40)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc27)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_fputs_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call @CWE252_Unchecked_Return_Value__char_fputs_08_good() : () -> () loc(#loc42)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc28)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc29)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_fputs_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call @CWE252_Unchecked_Return_Value__char_fputs_08_bad() : () -> () loc(#loc46)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc30)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc49)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.return %17 : !s32i loc(#loc112)
  } loc(#loc107)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc53)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.return %2 : !s32i loc(#loc114)
  } loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"fputs failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc117)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc61)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc61)
      cir.if %2 {
        %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } else {
        cir.scope {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc69)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc69)
          %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
          %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc71)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc72)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc72)
          %10 = cir.cmp(eq, %7, %9) : !s32i, !cir.bool loc(#loc120)
          cir.if %10 {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc56)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc56)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
          } loc(#loc121)
        } loc(#loc119)
      } loc(#loc118)
    } loc(#loc116)
    cir.return loc(#loc58)
  } loc(#loc115)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.return %2 : !s32i loc(#loc123)
  } loc(#loc122)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc126)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc83)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc83)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc88)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc88)
          %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
          %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc91)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc91)
          %10 = cir.cmp(eq, %7, %9) : !s32i, !cir.bool loc(#loc129)
          cir.if %10 {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc93)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
          } loc(#loc130)
        } loc(#loc128)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc80)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":707:1)
#loc2 = loc("/usr/include/stdio.h":708:3)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":42:15)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":37:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":44:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":39:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":43:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":39:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":39:26)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":40:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":42:25)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":42:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":81:1)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":85:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":83:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":83:11)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":84:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":84:11)
#loc21 = loc("/usr/include/stdlib.h":575:1)
#loc22 = loc("/usr/include/stdlib.h":575:41)
#loc23 = loc("/usr/include/time.h":76:1)
#loc24 = loc("/usr/include/time.h":76:38)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":101:15)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":103:15)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":106:15)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":108:15)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":96:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":111:1)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":97:1)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":99:27)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":99:22)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":99:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":101:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":102:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":102:55)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":103:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":106:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":107:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":107:54)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":108:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":110:12)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":110:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":25:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":28:1)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":27:12)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":27:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":56:19)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":63:23)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":51:1)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":66:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":53:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":65:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":53:8)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":53:27)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":54:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":57:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":59:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":56:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":64:9)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:19)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:29)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:13)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":61:40)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":62:9)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":63:13)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":30:1)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":33:1)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":32:12)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":32:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":69:1)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":79:1)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":71:5)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":78:5)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":71:8)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":71:26)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":72:5)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:9)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":77:9)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:19)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:29)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:13)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":74:40)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":75:9)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":76:23)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fputs_08.c":76:13)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc4, #loc5])
#loc97 = loc(fused[#loc6, #loc7])
#loc98 = loc(fused[#loc8, #loc9])
#loc99 = loc(fused[#loc10, #loc11])
#loc100 = loc(fused[#loc12, #loc9])
#loc101 = loc(fused[#loc15, #loc16])
#loc102 = loc(fused[#loc17, #loc18])
#loc103 = loc(fused[#loc19, #loc20])
#loc104 = loc(fused[#loc21, #loc22])
#loc105 = loc(fused[#loc23, #loc24])
#loc106 = loc(fused[#loc25, #loc26])
#loc107 = loc(fused[#loc31, #loc32])
#loc110 = loc(fused[#loc42, #loc43])
#loc111 = loc(fused[#loc46, #loc47])
#loc112 = loc(fused[#loc50, #loc49])
#loc113 = loc(fused[#loc51, #loc52])
#loc114 = loc(fused[#loc54, #loc53])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc119 = loc(fused[#loc67, #loc68])
#loc120 = loc(fused[#loc71, #loc72])
#loc121 = loc(fused[#loc73, #loc68])
#loc122 = loc(fused[#loc75, #loc76])
#loc123 = loc(fused[#loc78, #loc77])
#loc124 = loc(fused[#loc79, #loc80])
#loc125 = loc(fused[#loc81, #loc82])
#loc126 = loc(fused[#loc83, #loc84])
#loc127 = loc(fused[#loc85, #loc82])
#loc128 = loc(fused[#loc86, #loc87])
#loc129 = loc(fused[#loc90, #loc91])
#loc130 = loc(fused[#loc92, #loc87])
