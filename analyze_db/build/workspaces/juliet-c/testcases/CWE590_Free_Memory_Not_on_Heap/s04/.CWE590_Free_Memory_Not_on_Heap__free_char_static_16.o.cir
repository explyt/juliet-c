!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc89)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    cir.scope {
      cir.while {
        %6 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc14)
        cir.condition(%7) loc(#loc14)
      } do {
        cir.scope {
          cir.scope {
            %6 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %9 = cir.const #cir.int<65> : !s32i loc(#loc19)
            %10 = cir.const #cir.int<100> : !s32i loc(#loc20)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc21)
            %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc20)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc20)
            cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc96)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc24)
            %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc24)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc25)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc26)
            %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc25)
            %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
            %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc27)
            cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc97)
            %21 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
            cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
          } loc(#loc95)
          cir.break loc(#loc30)
        } loc(#loc94)
        cir.yield loc(#loc13)
      } loc(#loc93)
    } loc(#loc93)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc33)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc7)
  } loc(#loc90)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc100)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc99)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc102)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      cir.while {
        %6 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc52)
        cir.condition(%7) loc(#loc52)
      } do {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc109)
            %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc58)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc59)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc59)
            %10 = cir.const #cir.int<1> : !u64i loc(#loc110)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc111)
            %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
            cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
            cir.scope {
              %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
              %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
              %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc114)
              cir.if %32 {
                %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
                %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
                cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc67)
                %35 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc69)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
              } loc(#loc115)
            } loc(#loc113)
            %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
            %16 = cir.const #cir.int<65> : !s32i loc(#loc71)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc72)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc72)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc72)
            cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc116)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc76)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
            %24 = cir.const #cir.int<100> : !s32i loc(#loc78)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc78)
            %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc80)
            cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc117)
            %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
            cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
          } loc(#loc108)
          cir.break loc(#loc83)
        } loc(#loc107)
        cir.yield loc(#loc51)
      } loc(#loc106)
    } loc(#loc106)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc86)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc86)
    cir.return loc(#loc45)
  } loc(#loc103)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":31:25)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":23:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":41:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":25:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":25:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":26:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":26:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":37:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":27:11)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":28:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":29:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":35:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:32)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:37)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:41)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:42)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:33)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:24)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:28)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":34:20)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":34:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":36:9)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":38:15)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":38:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":40:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":40:10)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":73:1)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":76:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":75:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":75:13)
#loc39 = loc("/usr/include/stdlib.h":672:1)
#loc40 = loc("/usr/include/stdlib.h":672:45)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":59:27)
#loc42 = loc("/usr/include/stdlib.h":756:1)
#loc43 = loc("/usr/include/stdlib.h":756:70)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":48:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":71:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":50:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":50:12)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":51:12)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":51:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":52:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":67:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":52:11)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":53:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":54:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":65:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:13)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:64)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:41)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:48)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:52)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:63)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":57:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":61:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":57:17)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":57:31)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":58:13)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":59:17)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":60:17)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":60:22)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:20)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:32)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:37)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:41)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:42)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:33)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:24)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:28)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:29)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":64:20)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":64:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":66:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":68:15)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":68:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":70:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":70:10)
#loc88 = loc(fused[#loc2, #loc3])
#loc89 = loc(fused[#loc4, #loc5])
#loc90 = loc(fused[#loc6, #loc7])
#loc91 = loc(fused[#loc8, #loc9])
#loc92 = loc(fused[#loc11, #loc10])
#loc93 = loc(fused[#loc12, #loc13])
#loc94 = loc(fused[#loc15, #loc13])
#loc95 = loc(fused[#loc16, #loc17])
#loc96 = loc(fused[#loc22, #loc23])
#loc97 = loc(fused[#loc27, #loc24])
#loc98 = loc(fused[#loc29, #loc28])
#loc99 = loc(fused[#loc35, #loc36])
#loc100 = loc(fused[#loc37, #loc38])
#loc101 = loc(fused[#loc39, #loc40])
#loc102 = loc(fused[#loc42, #loc43])
#loc103 = loc(fused[#loc44, #loc45])
#loc104 = loc(fused[#loc46, #loc47])
#loc105 = loc(fused[#loc49, #loc48])
#loc106 = loc(fused[#loc50, #loc51])
#loc107 = loc(fused[#loc53, #loc51])
#loc108 = loc(fused[#loc54, #loc55])
#loc109 = loc(fused[#loc56, #loc57])
#loc110 = loc(fused[#loc60, #loc61])
#loc111 = loc(fused[#loc59, #loc61])
#loc112 = loc(fused[#loc58, #loc57])
#loc113 = loc(fused[#loc62, #loc63])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc66, #loc63])
#loc116 = loc(fused[#loc74, #loc75])
#loc117 = loc(fused[#loc77, #loc76])
#loc118 = loc(fused[#loc82, #loc81])
