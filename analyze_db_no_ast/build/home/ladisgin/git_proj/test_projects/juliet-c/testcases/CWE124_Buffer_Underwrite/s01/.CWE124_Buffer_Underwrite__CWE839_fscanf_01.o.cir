!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc145)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc146)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc147)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fscanf_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc146)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc18)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc153)
      %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc154)
      %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc154)
      cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc154)
      cir.scope {
        %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %13 = cir.const #cir.int<10> : !s32i loc(#loc29)
        %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc156)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc30)
        cir.if %15 {
          %16 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          %18 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc36)
          %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc36)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc158)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc39)
            cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc160)
            cir.for : cond {
              %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc41)
              %22 = cir.const #cir.int<10> : !s32i loc(#loc42)
              %23 = cir.cmp(lt, %21, %22) : !s32i, !s32i loc(#loc161)
              %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc43)
              cir.condition(%24) loc(#loc43)
            } body {
              cir.scope {
                %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                %22 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc46)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc46)
                %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc46)
                cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc47)
              } loc(#loc162)
              cir.yield loc(#loc38)
            } step {
              %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc48)
              %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc49)
              cir.store %22, %9 : !s32i, !cir.ptr<!s32i> loc(#loc163)
              cir.yield loc(#loc159)
            } loc(#loc159)
          } loc(#loc159)
        } else {
          %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc50)
        } loc(#loc157)
      } loc(#loc155)
    } loc(#loc152)
    cir.return loc(#loc12)
  } loc(#loc149)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fscanf_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc164)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc62)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc64)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc172)
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc173)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc173)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc173)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
        %8 = cir.const #cir.int<10> : !s32i loc(#loc75)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !s32i loc(#loc175)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc76)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc80)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc82)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc82)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc177)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc85)
            cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc179)
            cir.for : cond {
              %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc88)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc180)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc89)
              cir.condition(%19) loc(#loc89)
            } body {
              cir.scope {
                %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc92)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc92)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc93)
              } loc(#loc181)
              cir.yield loc(#loc84)
            } step {
              %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc95)
              cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc182)
              cir.yield loc(#loc178)
            } loc(#loc178)
          } loc(#loc178)
        } else {
          %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc96)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc96)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
        } loc(#loc176)
      } loc(#loc174)
    } loc(#loc171)
    cir.return loc(#loc58)
  } loc(#loc167)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc98)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc104)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc106)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc146)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc108)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc108)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc106)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc187)
      %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc188)
      %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc188)
      cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc188)
      cir.scope {
        %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %14 = cir.cmp(ge, %12, %13) : !s32i, !s32i loc(#loc190)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc119)
        %16 = cir.ternary(%15, true {
          %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
          %18 = cir.const #cir.int<10> : !s32i loc(#loc122)
          %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc191)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc124)
          %21 = cir.ternary(%20, true {
            %22 = cir.const #true loc(#loc120)
            cir.yield %22 : !cir.bool loc(#loc120)
          }, false {
            %22 = cir.const #false loc(#loc120)
            cir.yield %22 : !cir.bool loc(#loc120)
          }) : (!cir.bool) -> !cir.bool loc(#loc120)
          cir.yield %21 : !cir.bool loc(#loc120)
        }, false {
          %17 = cir.const #false loc(#loc120)
          cir.yield %17 : !cir.bool loc(#loc120)
        }) : (!cir.bool) -> !cir.bool loc(#loc120)
        cir.if %16 {
          %17 = cir.const #cir.int<1> : !s32i loc(#loc128)
          %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %19 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc130)
          %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc130)
          cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc193)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc133)
            cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc195)
            cir.for : cond {
              %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %23 = cir.const #cir.int<10> : !s32i loc(#loc136)
              %24 = cir.cmp(lt, %22, %23) : !s32i, !s32i loc(#loc196)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc137)
              cir.condition(%25) loc(#loc137)
            } body {
              cir.scope {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %23 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc140)
                %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc141)
              } loc(#loc197)
              cir.yield loc(#loc132)
            } step {
              %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc143)
              cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc198)
              cir.yield loc(#loc194)
            } loc(#loc194)
          } loc(#loc194)
        } else {
          %17 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc98)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc98)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc144)
        } loc(#loc192)
      } loc(#loc189)
    } loc(#loc186)
    cir.return loc(#loc100)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":28:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":45:23)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":22:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":48:1)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":24:5)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":24:9)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":26:13)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":26:12)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":26:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":28:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":28:12)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":29:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":47:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":30:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":30:13)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":31:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":31:30)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":34:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":46:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":34:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":34:20)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":34:18)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":35:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":42:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":44:9)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":36:28)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":36:20)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":36:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":41:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:21)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:24)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:28)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:26)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":39:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":40:37)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":40:30)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":40:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:33)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":38:32)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":45:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":112:1)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":116:1)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":114:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":114:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":115:5)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":115:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":55:1)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":82:1)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":57:5)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":57:9)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":59:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":59:12)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":59:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":62:12)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":62:5)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":63:5)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":81:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":64:9)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":64:13)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":65:9)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":65:30)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":68:9)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":80:9)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":68:13)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":68:20)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":68:18)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":69:9)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":76:9)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":78:9)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":70:28)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":70:20)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":70:13)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:13)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":75:13)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:21)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:17)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:24)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:28)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:26)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":73:13)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":74:37)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":74:30)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":74:17)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:33)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":72:32)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":79:23)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":79:13)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":107:23)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":85:1)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":110:1)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":87:5)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":87:9)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":89:13)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":89:12)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":89:5)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":91:5)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":91:12)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":91:19)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":92:5)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":109:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":93:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":93:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":94:9)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":94:30)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:9)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":108:9)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:13)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:21)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:18)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:23)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:26)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:34)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:36)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":96:31)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":97:9)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":104:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":106:9)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":98:28)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":98:20)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":98:13)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":103:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:21)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:17)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:24)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:28)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:26)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":101:13)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":102:37)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":102:30)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":102:17)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:33)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":100:32)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_01.c":107:13)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc6, #loc7])
#loc148 = loc(fused[#loc8, #loc9])
#loc149 = loc(fused[#loc11, #loc12])
#loc150 = loc(fused[#loc13, #loc14])
#loc151 = loc(fused[#loc17, #loc15])
#loc152 = loc(fused[#loc20, #loc21])
#loc153 = loc(fused[#loc22, #loc23])
#loc154 = loc(fused[#loc24, #loc25])
#loc155 = loc(fused[#loc26, #loc27])
#loc156 = loc(fused[#loc28, #loc29])
#loc157 = loc(fused[#loc31, #loc32, #loc33, #loc27])
#loc158 = loc(fused[#loc36, #loc34])
#loc159 = loc(fused[#loc37, #loc38])
#loc160 = loc(fused[#loc40, #loc39])
#loc161 = loc(fused[#loc41, #loc42])
#loc162 = loc(fused[#loc44, #loc38])
#loc163 = loc(fused[#loc49, #loc48])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc55, #loc56])
#loc167 = loc(fused[#loc57, #loc58])
#loc168 = loc(fused[#loc59, #loc60])
#loc169 = loc(fused[#loc63, #loc61])
#loc170 = loc(fused[#loc65, #loc64])
#loc171 = loc(fused[#loc66, #loc67])
#loc172 = loc(fused[#loc68, #loc69])
#loc173 = loc(fused[#loc70, #loc71])
#loc174 = loc(fused[#loc72, #loc73])
#loc175 = loc(fused[#loc74, #loc75])
#loc176 = loc(fused[#loc77, #loc78, #loc79, #loc73])
#loc177 = loc(fused[#loc82, #loc80])
#loc178 = loc(fused[#loc83, #loc84])
#loc179 = loc(fused[#loc86, #loc85])
#loc180 = loc(fused[#loc87, #loc88])
#loc181 = loc(fused[#loc90, #loc84])
#loc182 = loc(fused[#loc95, #loc94])
#loc183 = loc(fused[#loc99, #loc100])
#loc184 = loc(fused[#loc101, #loc102])
#loc185 = loc(fused[#loc105, #loc103])
#loc186 = loc(fused[#loc109, #loc110])
#loc187 = loc(fused[#loc111, #loc112])
#loc188 = loc(fused[#loc113, #loc114])
#loc189 = loc(fused[#loc115, #loc116])
#loc190 = loc(fused[#loc117, #loc118])
#loc191 = loc(fused[#loc121, #loc123])
#loc192 = loc(fused[#loc125, #loc126, #loc127, #loc116])
#loc193 = loc(fused[#loc130, #loc128])
#loc194 = loc(fused[#loc131, #loc132])
#loc195 = loc(fused[#loc134, #loc133])
#loc196 = loc(fused[#loc135, #loc136])
#loc197 = loc(fused[#loc138, #loc132])
#loc198 = loc(fused[#loc143, #loc142])
