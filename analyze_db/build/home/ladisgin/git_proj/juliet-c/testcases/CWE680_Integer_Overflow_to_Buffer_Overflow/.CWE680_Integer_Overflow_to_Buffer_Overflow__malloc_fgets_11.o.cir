!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc211)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc212)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc213)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc214)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc217)
  cir.func private @printIntLine(!s32i) loc(#loc218)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc219)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc221)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc223)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc224)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc31)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc227)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc227)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc35)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc35)
    cir.brcond %9 ^bb2, ^bb10 loc(#loc228)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc229)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc221)
    cir.store %10, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc221)
    cir.br ^bb4 loc(#loc230)
  ^bb4:  // pred: ^bb3
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc42)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc43)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc43)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc43)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc43)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc43)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc43)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc43)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc43)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc231)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc232)
  ^bb5:  // pred: ^bb4
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc50)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %27, %3 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.br ^bb7 loc(#loc48)
  ^bb6:  // pred: ^bb4
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc39)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc34)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc234)
  ^bb12:  // pred: ^bb11
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc57)
    %31 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc58)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc235)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc236)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc237)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc238)
    cir.br ^bb13 loc(#loc239)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc66)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc240)
    cir.brcond %40 ^bb14, ^bb15 loc(#loc241)
  ^bb14:  // pred: ^bb13
    %41 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc70)
    cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
    cir.br ^bb15 loc(#loc64)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc64)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc242)
  ^bb17:  // pred: ^bb16
    %44 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc73)
    cir.store %45, %1 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.br ^bb18 loc(#loc242)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %46 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc76)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc244)
    cir.brcond %49 ^bb19, ^bb23 loc(#loc77)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc245)
  ^bb20:  // pred: ^bb19
    %50 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !u64i), !cir.ptr<!s32i> loc(#loc82)
    cir.store %50, %53 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb21 loc(#loc72)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc72)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc84)
    cir.store %55, %1 : !u64i, !cir.ptr<!u64i> loc(#loc247)
    cir.br ^bb18 loc(#loc242)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc72)
  ^bb24:  // pred: ^bb23
    %56 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!s32i>, %57 : !s32i), !cir.ptr<!s32i> loc(#loc87)
    %59 = cir.load %58 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%59) : (!s32i) -> () loc(#loc88)
    %60 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc89)
    cir.call @free(%61) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb25 loc(#loc56)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc21)
  } loc(#loc220)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc248)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc254)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc109)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc258)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc258)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc113)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb4 loc(#loc116)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<20> : !s32i loc(#loc119)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc261)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc123)
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc124)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc262)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc263)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc264)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc265)
    cir.br ^bb7 loc(#loc266)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc267)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc268)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc134)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc136)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
    cir.br ^bb9 loc(#loc130)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc130)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc269)
  ^bb11:  // pred: ^bb10
    %26 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc139)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb12 loc(#loc269)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc142)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc271)
    cir.brcond %31 ^bb13, ^bb17 loc(#loc143)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc272)
  ^bb14:  // pred: ^bb13
    %32 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !u64i), !cir.ptr<!s32i> loc(#loc148)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb15 loc(#loc138)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc138)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc150)
    cir.store %37, %0 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    cir.br ^bb12 loc(#loc269)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc138)
  ^bb18:  // pred: ^bb17
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc153)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc154)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc155)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
    cir.br ^bb19 loc(#loc122)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc101)
  } loc(#loc252)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc276)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc277)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc278)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc166)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb1 loc(#loc280)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc281)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc281)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc170)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc170)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc282)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc173)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb3 loc(#loc169)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc284)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc177)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc178)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc285)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc286)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc287)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc288)
    cir.br ^bb6 loc(#loc289)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc185)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc186)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc186)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc290)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc291)
  ^bb7:  // pred: ^bb6
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc188)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc190)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc188)
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc184)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc292)
  ^bb10:  // pred: ^bb9
    %24 = cir.const #cir.int<0> : !s32i loc(#loc193)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc193)
    cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc293)
    cir.br ^bb11 loc(#loc292)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc196)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc294)
    cir.brcond %29 ^bb12, ^bb16 loc(#loc197)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc295)
  ^bb13:  // pred: ^bb12
    %30 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc201)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc202)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb14 loc(#loc192)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc192)
  ^bb15:  // pred: ^bb14
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc203)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc204)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc297)
    cir.br ^bb11 loc(#loc292)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc192)
  ^bb17:  // pred: ^bb16
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc205)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc207)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc208)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc209)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc209)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc210)
    cir.br ^bb18 loc(#loc176)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc158)
  } loc(#loc275)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":40:27)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("/usr/include/stdlib.h":687:1)
#loc19 = loc("/usr/include/stdlib.h":687:32)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":23:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":58:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":31:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":31:49)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":45:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":45:16)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":46:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":46:14)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":25:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":25:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":27:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":27:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":27:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":28:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":43:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":28:8)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":28:26)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":29:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":30:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":42:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":33:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":41:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":33:23)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":33:36)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":33:53)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":33:17)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":33:63)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":34:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":37:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":39:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":36:29)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":36:24)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":36:17)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":36:40)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":40:17)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":44:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":57:5)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":49:28)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":49:35)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":49:42)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":49:52)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":49:53)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":49:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:43)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:27)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:33)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:34)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:40)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":50:39)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":54:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:18)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:14)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:21)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:33)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:23)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":52:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":53:29)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":53:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":53:24)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":53:25)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:40)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":51:39)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":55:22)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":55:33)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":55:34)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":55:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":56:14)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":56:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":123:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":127:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":125:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":125:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":126:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":126:14)
#loc97 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc98 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":73:19)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":65:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":94:1)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":81:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":81:16)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":82:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":82:14)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":67:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":67:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":69:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":69:12)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":69:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":70:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":79:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":70:8)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":70:27)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":71:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":74:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":76:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":73:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":78:16)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":78:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":80:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":93:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":85:28)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":85:35)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":85:42)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":85:52)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":85:53)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":85:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:43)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:27)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:33)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:34)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:40)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":86:39)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":90:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:18)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:14)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:21)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:23)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":88:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":89:29)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":89:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":89:24)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":89:25)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:40)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":87:39)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":91:22)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":91:33)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":91:34)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":91:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":92:14)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":92:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":97:1)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":121:1)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":108:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":108:16)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":109:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":109:14)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":99:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":99:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":101:13)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":101:12)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":101:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":102:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":106:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":102:8)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":102:26)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":103:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":105:16)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":105:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":107:5)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":120:5)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":112:28)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":112:35)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":112:42)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":112:52)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":112:53)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":112:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:43)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:13)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:27)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:33)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:34)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:40)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":113:39)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":117:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:18)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:14)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:21)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:33)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:23)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":115:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":116:29)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":116:13)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":116:24)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":116:25)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:40)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":114:39)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":118:22)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":118:33)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":118:34)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":118:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":119:14)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_11.c":119:9)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc7, #loc8])
#loc215 = loc(fused[#loc9, #loc10])
#loc216 = loc(fused[#loc12, #loc13])
#loc217 = loc(fused[#loc14, #loc15])
#loc218 = loc(fused[#loc16, #loc17])
#loc219 = loc(fused[#loc18, #loc19])
#loc220 = loc(fused[#loc20, #loc21])
#loc221 = loc(fused[#loc22, #loc23])
#loc222 = loc(fused[#loc24, #loc25])
#loc223 = loc(fused[#loc26, #loc27])
#loc224 = loc(fused[#loc28, #loc29])
#loc225 = loc(fused[#loc32, #loc30])
#loc226 = loc(fused[#loc33, #loc34])
#loc227 = loc(fused[#loc35, #loc36])
#loc228 = loc(fused[#loc37, #loc34])
#loc229 = loc(fused[#loc38, #loc39])
#loc230 = loc(fused[#loc40, #loc41])
#loc231 = loc(fused[#loc45, #loc46])
#loc232 = loc(fused[#loc47, #loc48, #loc49, #loc41])
#loc233 = loc(fused[#loc52, #loc53])
#loc234 = loc(fused[#loc55, #loc56])
#loc235 = loc(fused[#loc59, #loc60])
#loc236 = loc(fused[#loc58, #loc60])
#loc237 = loc(fused[#loc57, #loc61])
#loc238 = loc(fused[#loc62, #loc61])
#loc239 = loc(fused[#loc63, #loc64])
#loc240 = loc(fused[#loc65, #loc66])
#loc241 = loc(fused[#loc67, #loc64])
#loc242 = loc(fused[#loc71, #loc72])
#loc243 = loc(fused[#loc74, #loc73])
#loc244 = loc(fused[#loc75, #loc76])
#loc245 = loc(fused[#loc78, #loc72])
#loc246 = loc(fused[#loc80, #loc79])
#loc247 = loc(fused[#loc84, #loc83])
#loc248 = loc(fused[#loc91, #loc92])
#loc249 = loc(fused[#loc93, #loc94])
#loc250 = loc(fused[#loc95, #loc96])
#loc251 = loc(fused[#loc97, #loc98])
#loc252 = loc(fused[#loc100, #loc101])
#loc253 = loc(fused[#loc102, #loc103])
#loc254 = loc(fused[#loc104, #loc105])
#loc255 = loc(fused[#loc106, #loc107])
#loc256 = loc(fused[#loc110, #loc108])
#loc257 = loc(fused[#loc111, #loc112])
#loc258 = loc(fused[#loc113, #loc114])
#loc259 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc260 = loc(fused[#loc120, #loc119])
#loc261 = loc(fused[#loc121, #loc122])
#loc262 = loc(fused[#loc125, #loc126])
#loc263 = loc(fused[#loc124, #loc126])
#loc264 = loc(fused[#loc123, #loc127])
#loc265 = loc(fused[#loc128, #loc127])
#loc266 = loc(fused[#loc129, #loc130])
#loc267 = loc(fused[#loc131, #loc132])
#loc268 = loc(fused[#loc133, #loc130])
#loc269 = loc(fused[#loc137, #loc138])
#loc270 = loc(fused[#loc140, #loc139])
#loc271 = loc(fused[#loc141, #loc142])
#loc272 = loc(fused[#loc144, #loc138])
#loc273 = loc(fused[#loc146, #loc145])
#loc274 = loc(fused[#loc150, #loc149])
#loc275 = loc(fused[#loc157, #loc158])
#loc276 = loc(fused[#loc159, #loc160])
#loc277 = loc(fused[#loc161, #loc162])
#loc278 = loc(fused[#loc163, #loc164])
#loc279 = loc(fused[#loc167, #loc165])
#loc280 = loc(fused[#loc168, #loc169])
#loc281 = loc(fused[#loc170, #loc171])
#loc282 = loc(fused[#loc172, #loc169])
#loc283 = loc(fused[#loc174, #loc173])
#loc284 = loc(fused[#loc175, #loc176])
#loc285 = loc(fused[#loc179, #loc180])
#loc286 = loc(fused[#loc178, #loc180])
#loc287 = loc(fused[#loc177, #loc181])
#loc288 = loc(fused[#loc182, #loc181])
#loc289 = loc(fused[#loc183, #loc184])
#loc290 = loc(fused[#loc185, #loc186])
#loc291 = loc(fused[#loc187, #loc184])
#loc292 = loc(fused[#loc191, #loc192])
#loc293 = loc(fused[#loc194, #loc193])
#loc294 = loc(fused[#loc195, #loc196])
#loc295 = loc(fused[#loc198, #loc192])
#loc296 = loc(fused[#loc200, #loc199])
#loc297 = loc(fused[#loc204, #loc203])
