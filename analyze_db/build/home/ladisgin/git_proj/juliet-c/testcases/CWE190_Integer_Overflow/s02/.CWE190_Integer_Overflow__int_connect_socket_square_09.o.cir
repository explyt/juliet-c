!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:48)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:48)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:28)
#loc342 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:48)
#loc369 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:28)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc433)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc434)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc435)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc436)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc437)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc438)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc439)
  cir.func private @close(!s32i) -> !s32i loc(#loc440)
  cir.func private @printIntLine(!s32i) loc(#loc441)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc443)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc444)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc445)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc446)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc447)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc448)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc34)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.br ^bb1 loc(#loc450)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %9 ^bb2, ^bb34 loc(#loc451)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc452)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc27)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.br ^bb4 loc(#loc453)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc453)
  ^bb5:  // pred: ^bb26
    %12 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %13 ^bb6, ^bb27 loc(#loc44)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %14 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc47)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    cir.br ^bb7 loc(#loc455)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc54)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc456)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc457)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc56)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // pred: ^bb9
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc458)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc459)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc460)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc64)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc461)
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
    %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc462)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc72)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc463)
    cir.br ^bb11 loc(#loc464)
  ^bb11:  // pred: ^bb10
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc465)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc466)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc466)
    %41 = cir.call @connect(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc85)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc467)
    cir.brcond %44 ^bb12, ^bb13 loc(#loc468)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc87)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc78)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %46 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %48 = cir.const #cir.int<3> : !s32i loc(#loc90)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc90)
    %50 = cir.const #cir.int<4> : !u64i loc(#loc90)
    %51 = cir.binop(mul, %49, %50) : !u64i loc(#loc90)
    %52 = cir.const #cir.int<2> : !s32i loc(#loc90)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc90)
    %54 = cir.binop(add, %51, %53) : !u64i loc(#loc90)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc91)
    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc469)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %59 = cir.call @recv(%45, %47, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
    %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc93)
    cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc470)
    cir.br ^bb15 loc(#loc471)
  ^bb15:  // pred: ^bb14
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc99)
    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc472)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc100)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc100)
    cir.br ^bb22(%65 : !cir.bool) loc(#loc100)
  ^bb17:  // pred: ^bb15
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc473)
    cir.brcond %68 ^bb18, ^bb19 loc(#loc100)
  ^bb18:  // pred: ^bb17
    %69 = cir.const #true loc(#loc100)
    cir.br ^bb20(%69 : !cir.bool) loc(#loc100)
  ^bb19:  // pred: ^bb17
    %70 = cir.const #false loc(#loc100)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc100)
  ^bb20(%71: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc100)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%71 : !cir.bool) loc(#loc100)
  ^bb22(%72: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc100)
  ^bb23:  // pred: ^bb22
    cir.brcond %72 ^bb24, ^bb25 loc(#loc474)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc104)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc97)
  ^bb26:  // pred: ^bb25
    %73 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc105)
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
    %77 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %75 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %74, %77 : !s8i, !cir.ptr<!s8i> loc(#loc475)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %79 = cir.call @atoi(%78) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
    cir.store %79, %5 : !s32i, !cir.ptr<!s32i> loc(#loc476)
    cir.br ^bb5 loc(#loc43)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc43)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc477)
  ^bb29:  // pred: ^bb28
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc115)
    %83 = cir.cmp(ne, %80, %82) : !s32i, !cir.bool loc(#loc478)
    cir.brcond %83 ^bb30, ^bb31 loc(#loc479)
  ^bb30:  // pred: ^bb29
    %84 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %85 = cir.call @close(%84) : (!s32i) -> !s32i loc(#loc118)
    cir.br ^bb31 loc(#loc113)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc113)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc41)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc37)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc37)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc480)
  ^bb36:  // pred: ^bb35
    %86 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %87 = cir.load %86 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %88 = cir.cast(int_to_bool, %87 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %88 ^bb37, ^bb40 loc(#loc481)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc482)
  ^bb38:  // pred: ^bb37
    %89 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %90 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %91 = cir.binop(mul, %89, %90) nsw : !s32i loc(#loc125)
    cir.store %91, %4 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    %92 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call @printIntLine(%92) : (!s32i) -> () loc(#loc127)
    cir.br ^bb39 loc(#loc124)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc120)
  ^bb40:  // 2 preds: ^bb36, ^bb39
    cir.br ^bb41 loc(#loc120)
  ^bb41:  // pred: ^bb40
    cir.return loc(#loc21)
  } loc(#loc442)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc484)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc130)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc485)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc132)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc486)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc134)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc487)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc136)
    cir.return loc(#loc129)
  } loc(#loc483)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc488)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc489)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc142)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc144)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc491)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc492)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc493)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc494)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc495)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc496)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.br ^bb1 loc(#loc498)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc163)
    cir.brcond %9 ^bb2, ^bb34 loc(#loc499)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc500)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc152)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc493)
    cir.br ^bb4 loc(#loc501)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc501)
  ^bb5:  // pred: ^bb26
    %12 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc169)
    cir.brcond %13 ^bb6, ^bb27 loc(#loc169)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %14 = cir.const #cir.int<2> : !s32i loc(#loc170)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc172)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc173)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc502)
    cir.br ^bb7 loc(#loc503)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc179)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc505)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc181)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc177)
  ^bb10:  // pred: ^bb9
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc506)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc507)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc508)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc189)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc189)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc509)
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc191)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc191)
    %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc192)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc510)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc195)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc195)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc196)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc511)
    cir.br ^bb11 loc(#loc512)
  ^bb11:  // pred: ^bb10
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc513)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc514)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc514)
    %41 = cir.call @connect(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc206)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc207)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc515)
    cir.brcond %44 ^bb12, ^bb13 loc(#loc516)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc209)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc200)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    %46 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc211)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
    %48 = cir.const #cir.int<3> : !s32i loc(#loc212)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc212)
    %50 = cir.const #cir.int<4> : !u64i loc(#loc212)
    %51 = cir.binop(mul, %49, %50) : !u64i loc(#loc212)
    %52 = cir.const #cir.int<2> : !s32i loc(#loc212)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc212)
    %54 = cir.binop(add, %51, %53) : !u64i loc(#loc212)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc213)
    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc517)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %59 = cir.call @recv(%45, %47, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc215)
    %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc215)
    cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc518)
    cir.br ^bb15 loc(#loc519)
  ^bb15:  // pred: ^bb14
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc221)
    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc520)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc222)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc222)
    cir.br ^bb22(%65 : !cir.bool) loc(#loc222)
  ^bb17:  // pred: ^bb15
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc521)
    cir.brcond %68 ^bb18, ^bb19 loc(#loc222)
  ^bb18:  // pred: ^bb17
    %69 = cir.const #true loc(#loc222)
    cir.br ^bb20(%69 : !cir.bool) loc(#loc222)
  ^bb19:  // pred: ^bb17
    %70 = cir.const #false loc(#loc222)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc222)
  ^bb20(%71: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc222)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%71 : !cir.bool) loc(#loc222)
  ^bb22(%72: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc222)
  ^bb23:  // pred: ^bb22
    cir.brcond %72 ^bb24, ^bb25 loc(#loc522)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc226)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc219)
  ^bb26:  // pred: ^bb25
    %73 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc227)
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc229)
    %77 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %75 : !s32i), !cir.ptr<!s8i> loc(#loc229)
    cir.store %74, %77 : !s8i, !cir.ptr<!s8i> loc(#loc523)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc230)
    %79 = cir.call @atoi(%78) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc231)
    cir.store %79, %5 : !s32i, !cir.ptr<!s32i> loc(#loc524)
    cir.br ^bb5 loc(#loc168)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc168)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc525)
  ^bb29:  // pred: ^bb28
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc237)
    %83 = cir.cmp(ne, %80, %82) : !s32i, !cir.bool loc(#loc526)
    cir.brcond %83 ^bb30, ^bb31 loc(#loc527)
  ^bb30:  // pred: ^bb29
    %84 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %85 = cir.call @close(%84) : (!s32i) -> !s32i loc(#loc240)
    cir.br ^bb31 loc(#loc235)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc235)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc166)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc162)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc162)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc528)
  ^bb36:  // pred: ^bb35
    %86 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc488)
    %87 = cir.load %86 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %88 = cir.cast(int_to_bool, %87 : !s32i), !cir.bool loc(#loc243)
    cir.brcond %88 ^bb37, ^bb38 loc(#loc529)
  ^bb37:  // pred: ^bb36
    %89 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc142)
    %90 = cir.cast(array_to_ptrdecay, %89 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%90) : (!cir.ptr<!s8i>) -> () loc(#loc247)
    cir.br ^bb52 loc(#loc245)
  ^bb38:  // pred: ^bb36
    cir.br ^bb39 loc(#loc530)
  ^bb39:  // pred: ^bb38
    %91 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %92 = cir.const #cir.int<2147483647> : !s32i loc(#loc251)
    %93 = cir.unary(minus, %92) : !s32i, !s32i loc(#loc251)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc251)
    %95 = cir.binop(sub, %93, %94) nsw : !s32i loc(#loc251)
    %96 = cir.cmp(gt, %91, %95) : !s32i, !cir.bool loc(#loc531)
    cir.brcond %96 ^bb40, ^bb45 loc(#loc252)
  ^bb40:  // pred: ^bb39
    %97 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %98 = cir.abs %97 poison : !s32i loc(#loc254)
    %99 = cir.cast(integral, %98 : !s32i), !s64i loc(#loc254)
    %100 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc255)
    %101 = cir.const #cir.int<2147483647> : !s32i loc(#loc256)
    %102 = cir.cast(int_to_float, %101 : !s32i), !cir.double loc(#loc256)
    %103 = cir.call @sqrt(%102) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc255)
    %104 = cir.cast(float_to_int, %103 : !cir.double), !s64i loc(#loc255)
    %105 = cir.cmp(lt, %99, %104) : !s64i, !cir.bool loc(#loc532)
    cir.brcond %105 ^bb41, ^bb42 loc(#loc252)
  ^bb41:  // pred: ^bb40
    %106 = cir.const #true loc(#loc252)
    cir.br ^bb43(%106 : !cir.bool) loc(#loc252)
  ^bb42:  // pred: ^bb40
    %107 = cir.const #false loc(#loc252)
    cir.br ^bb43(%107 : !cir.bool) loc(#loc252)
  ^bb43(%108: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:28)):  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc252)
  ^bb44:  // pred: ^bb43
    cir.br ^bb46(%108 : !cir.bool) loc(#loc252)
  ^bb45:  // pred: ^bb39
    %109 = cir.const #false loc(#loc252)
    cir.br ^bb46(%109 : !cir.bool) loc(#loc252)
  ^bb46(%110: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:28)):  // 2 preds: ^bb44, ^bb45
    cir.br ^bb47 loc(#loc252)
  ^bb47:  // pred: ^bb46
    cir.brcond %110 ^bb48, ^bb49 loc(#loc533)
  ^bb48:  // pred: ^bb47
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %112 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %113 = cir.binop(mul, %111, %112) nsw : !s32i loc(#loc261)
    cir.store %113, %4 : !s32i, !cir.ptr<!s32i> loc(#loc495)
    %114 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc263)
    cir.br ^bb50 loc(#loc259)
  ^bb49:  // pred: ^bb47
    %115 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc144)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%116) : (!cir.ptr<!s8i>) -> () loc(#loc264)
    cir.br ^bb50 loc(#loc249)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc249)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc242)
  ^bb52:  // 2 preds: ^bb37, ^bb51
    cir.br ^bb53 loc(#loc242)
  ^bb53:  // pred: ^bb52
    cir.return loc(#loc146)
  } loc(#loc490)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc535)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc536)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc537)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc538)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc539)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc540)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc279)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb1 loc(#loc542)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc283)
    cir.brcond %9 ^bb2, ^bb34 loc(#loc543)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc544)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc272)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb4 loc(#loc545)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc545)
  ^bb5:  // pred: ^bb26
    %12 = cir.const #cir.int<0> : !s32i loc(#loc289)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc289)
    cir.brcond %13 ^bb6, ^bb27 loc(#loc289)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %14 = cir.const #cir.int<2> : !s32i loc(#loc290)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc292)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc293)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc546)
    cir.br ^bb7 loc(#loc547)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc299)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc299)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc548)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc549)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc301)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc297)
  ^bb10:  // pred: ^bb9
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc550)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc304)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc551)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc552)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc309)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc309)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc553)
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc311)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc311)
    %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc312)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc554)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc315)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc315)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc316)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc555)
    cir.br ^bb11 loc(#loc556)
  ^bb11:  // pred: ^bb10
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc557)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc558)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc558)
    %41 = cir.call @connect(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc326)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc327)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc327)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc559)
    cir.brcond %44 ^bb12, ^bb13 loc(#loc560)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc329)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc320)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc330)
    %46 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc331)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc331)
    %48 = cir.const #cir.int<3> : !s32i loc(#loc332)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc332)
    %50 = cir.const #cir.int<4> : !u64i loc(#loc332)
    %51 = cir.binop(mul, %49, %50) : !u64i loc(#loc332)
    %52 = cir.const #cir.int<2> : !s32i loc(#loc332)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc332)
    %54 = cir.binop(add, %51, %53) : !u64i loc(#loc332)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc333)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc333)
    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc561)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc334)
    %59 = cir.call @recv(%45, %47, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc335)
    %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc335)
    cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc562)
    cir.br ^bb15 loc(#loc563)
  ^bb15:  // pred: ^bb14
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc341)
    %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc341)
    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc564)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc342)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc342)
    cir.br ^bb22(%65 : !cir.bool) loc(#loc342)
  ^bb17:  // pred: ^bb15
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc343)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc344)
    %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc565)
    cir.brcond %68 ^bb18, ^bb19 loc(#loc342)
  ^bb18:  // pred: ^bb17
    %69 = cir.const #true loc(#loc342)
    cir.br ^bb20(%69 : !cir.bool) loc(#loc342)
  ^bb19:  // pred: ^bb17
    %70 = cir.const #false loc(#loc342)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc342)
  ^bb20(%71: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc342)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%71 : !cir.bool) loc(#loc342)
  ^bb22(%72: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc342)
  ^bb23:  // pred: ^bb22
    cir.brcond %72 ^bb24, ^bb25 loc(#loc566)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc346)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc339)
  ^bb26:  // pred: ^bb25
    %73 = cir.const #cir.int<0> : !s32i loc(#loc347)
    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc347)
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc349)
    %77 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %75 : !s32i), !cir.ptr<!s8i> loc(#loc349)
    cir.store %74, %77 : !s8i, !cir.ptr<!s8i> loc(#loc567)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc350)
    %79 = cir.call @atoi(%78) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc351)
    cir.store %79, %5 : !s32i, !cir.ptr<!s32i> loc(#loc568)
    cir.br ^bb5 loc(#loc288)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc288)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc569)
  ^bb29:  // pred: ^bb28
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc356)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc357)
    %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc357)
    %83 = cir.cmp(ne, %80, %82) : !s32i, !cir.bool loc(#loc570)
    cir.brcond %83 ^bb30, ^bb31 loc(#loc571)
  ^bb30:  // pred: ^bb29
    %84 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %85 = cir.call @close(%84) : (!s32i) -> !s32i loc(#loc360)
    cir.br ^bb31 loc(#loc355)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc355)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc286)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc282)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc282)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc572)
  ^bb36:  // pred: ^bb35
    %86 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %87 = cir.load %86 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    %88 = cir.cast(int_to_bool, %87 : !s32i), !cir.bool loc(#loc363)
    cir.brcond %88 ^bb37, ^bb51 loc(#loc573)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc574)
  ^bb38:  // pred: ^bb37
    %89 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc367)
    %90 = cir.const #cir.int<2147483647> : !s32i loc(#loc368)
    %91 = cir.unary(minus, %90) : !s32i, !s32i loc(#loc368)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc368)
    %93 = cir.binop(sub, %91, %92) nsw : !s32i loc(#loc368)
    %94 = cir.cmp(gt, %89, %93) : !s32i, !cir.bool loc(#loc575)
    cir.brcond %94 ^bb39, ^bb44 loc(#loc369)
  ^bb39:  // pred: ^bb38
    %95 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc370)
    %96 = cir.abs %95 poison : !s32i loc(#loc371)
    %97 = cir.cast(integral, %96 : !s32i), !s64i loc(#loc371)
    %98 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc372)
    %99 = cir.const #cir.int<2147483647> : !s32i loc(#loc373)
    %100 = cir.cast(int_to_float, %99 : !s32i), !cir.double loc(#loc373)
    %101 = cir.call @sqrt(%100) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc372)
    %102 = cir.cast(float_to_int, %101 : !cir.double), !s64i loc(#loc372)
    %103 = cir.cmp(lt, %97, %102) : !s64i, !cir.bool loc(#loc576)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc369)
  ^bb40:  // pred: ^bb39
    %104 = cir.const #true loc(#loc369)
    cir.br ^bb42(%104 : !cir.bool) loc(#loc369)
  ^bb41:  // pred: ^bb39
    %105 = cir.const #false loc(#loc369)
    cir.br ^bb42(%105 : !cir.bool) loc(#loc369)
  ^bb42(%106: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:28)):  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc369)
  ^bb43:  // pred: ^bb42
    cir.br ^bb45(%106 : !cir.bool) loc(#loc369)
  ^bb44:  // pred: ^bb38
    %107 = cir.const #false loc(#loc369)
    cir.br ^bb45(%107 : !cir.bool) loc(#loc369)
  ^bb45(%108: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:28)):  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc369)
  ^bb46:  // pred: ^bb45
    cir.brcond %108 ^bb47, ^bb48 loc(#loc577)
  ^bb47:  // pred: ^bb46
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc378)
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %111 = cir.binop(mul, %109, %110) nsw : !s32i loc(#loc378)
    cir.store %111, %4 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    %112 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc380)
    cir.br ^bb49 loc(#loc376)
  ^bb48:  // pred: ^bb46
    %113 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc381)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc381)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc382)
    cir.br ^bb49 loc(#loc366)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc366)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc362)
  ^bb51:  // 2 preds: ^bb36, ^bb50
    cir.br ^bb52 loc(#loc362)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc266)
  } loc(#loc534)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc579)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc580)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc389)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.br ^bb1 loc(#loc582)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc488)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc393)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc393)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc583)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc397)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc397)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc398)
    cir.br ^bb4 loc(#loc395)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc399)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.br ^bb4 loc(#loc392)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc392)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc585)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc403)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc403)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc586)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc587)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc407)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc407)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc579)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc408)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc409)
    cir.br ^bb9 loc(#loc406)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc402)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc402)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc384)
  } loc(#loc578)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc589)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc590)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc416)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc591)
    cir.br ^bb1 loc(#loc592)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc420)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc593)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc422)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.br ^bb3 loc(#loc419)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc419)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc595)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc433)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc426)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc596)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc597)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc430)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc432)
    cir.br ^bb8 loc(#loc429)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc425)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc425)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc411)
  } loc(#loc588)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":79:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":46:1)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":118:1)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":58:13)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":58:17)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":59:13)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":59:32)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":60:13)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":60:36)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":61:13)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":61:45)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":114:13)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":114:33)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":48:5)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":48:9)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":50:12)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":50:5)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":51:5)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":109:5)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":51:8)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":52:5)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":53:9)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":108:9)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":62:13)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":97:21)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":97:20)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":72:40)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":72:49)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":72:62)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":72:33)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":72:17)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":72:73)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":73:17)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":76:17)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":73:21)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":73:38)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":74:17)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":75:21)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":77:24)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":77:25)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":77:34)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":77:37)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":77:51)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":77:17)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":77:52)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":78:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":78:17)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":79:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":79:17)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":79:63)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":80:42)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":80:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":80:17)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":80:50)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:17)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":84:17)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:29)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:62)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:63)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:72)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:86)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:21)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":81:92)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":82:17)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":83:21)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:35)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:50)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:63)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:81)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:84)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:30)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:17)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":87:85)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:17)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":91:17)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:21)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:35)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:51)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":88:65)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":89:17)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":90:21)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":93:43)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":93:29)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":93:17)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":95:29)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":95:24)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":95:17)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":95:40)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":98:13)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":101:13)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":98:17)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":98:34)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":99:13)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":100:30)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":100:17)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":110:5)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":117:5)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":110:8)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":111:5)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":112:9)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":116:9)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":114:26)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":115:26)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":115:13)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":336:1)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":342:1)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":338:5)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":338:14)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":339:5)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":339:14)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":340:5)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":340:14)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":341:5)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":341:14)
#loc138 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc139 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc140 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc141 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":192:19)
#loc143 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":204:23)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":125:1)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":207:1)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":137:13)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":137:17)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":138:13)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":138:32)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":139:13)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":139:36)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":140:13)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":140:45)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":199:13)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":199:33)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":127:5)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":127:9)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":129:12)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":129:5)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":130:5)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":188:5)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":130:8)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":131:5)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":132:9)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":187:9)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":141:13)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":176:21)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":176:20)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":151:40)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":151:49)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":151:62)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":151:33)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":151:17)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":151:73)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":152:17)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":155:17)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":152:21)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":152:38)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":153:17)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":154:21)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":156:24)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":156:25)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":156:34)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":156:37)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":156:51)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":156:17)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":156:52)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":157:38)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":157:17)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":158:53)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":158:43)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":158:17)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":158:63)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":159:42)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":159:36)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":159:17)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":159:50)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:17)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":163:17)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:29)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:62)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:63)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:72)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:86)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:21)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":160:92)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":161:17)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":162:21)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:35)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:50)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:63)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:81)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:84)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:30)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:17)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":166:85)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:17)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":170:17)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:21)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:35)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:51)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":167:65)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":168:17)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":169:21)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":172:43)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":172:29)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":172:17)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":174:29)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":174:24)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":174:17)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":174:40)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":177:13)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":180:13)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":177:17)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":177:34)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":178:13)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":179:30)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":179:17)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":189:5)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":206:5)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":189:8)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":190:5)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":193:5)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":195:5)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":192:9)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:9)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":205:9)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:13)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:20)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:35)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:31)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:49)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:62)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":197:69)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":198:9)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":201:9)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":203:9)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":199:26)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":200:26)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":200:13)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":204:13)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":210:1)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":287:1)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":222:13)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":222:17)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":223:13)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":223:32)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":224:13)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":224:36)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":225:13)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":225:45)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":279:13)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":279:33)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":212:5)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":212:9)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":214:12)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":214:5)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":215:5)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":273:5)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":215:8)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":216:5)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":217:9)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":272:9)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":226:13)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":261:21)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":261:20)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":236:40)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":236:49)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":236:62)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":236:33)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":236:17)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":236:73)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":237:17)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":240:17)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":237:21)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":237:38)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":238:17)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":239:21)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":241:24)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":241:25)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":241:34)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":241:37)
#loc306 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":241:51)
#loc307 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":241:17)
#loc308 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":241:52)
#loc309 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":242:38)
#loc310 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":242:17)
#loc311 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":243:53)
#loc312 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":243:43)
#loc313 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":243:17)
#loc314 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":243:63)
#loc315 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":244:42)
#loc316 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":244:36)
#loc317 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":244:17)
#loc318 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":244:50)
#loc319 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:17)
#loc320 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":248:17)
#loc321 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:29)
#loc322 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:62)
#loc323 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:63)
#loc324 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:72)
#loc325 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:86)
#loc326 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:21)
#loc327 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":245:92)
#loc328 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":246:17)
#loc329 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":247:21)
#loc330 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:35)
#loc331 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:50)
#loc332 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:63)
#loc333 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:81)
#loc334 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:84)
#loc335 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:30)
#loc336 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:17)
#loc337 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":251:85)
#loc338 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:17)
#loc339 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":255:17)
#loc340 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:21)
#loc341 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:35)
#loc343 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:51)
#loc344 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":252:65)
#loc345 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":253:17)
#loc346 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":254:21)
#loc347 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":257:43)
#loc348 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":257:29)
#loc349 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":257:17)
#loc350 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":259:29)
#loc351 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":259:24)
#loc352 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":259:17)
#loc353 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":259:40)
#loc354 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":262:13)
#loc355 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":265:13)
#loc356 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":262:17)
#loc357 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":262:34)
#loc358 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":263:13)
#loc359 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":264:30)
#loc360 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":264:17)
#loc361 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":274:5)
#loc362 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":286:5)
#loc363 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":274:8)
#loc364 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":275:5)
#loc365 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:9)
#loc366 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":285:9)
#loc367 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:13)
#loc368 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:20)
#loc370 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:35)
#loc371 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:31)
#loc372 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:49)
#loc373 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:62)
#loc374 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":277:69)
#loc375 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":278:9)
#loc376 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":281:9)
#loc377 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":283:9)
#loc378 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":279:26)
#loc379 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":280:26)
#loc380 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":280:13)
#loc381 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":284:23)
#loc382 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":284:13)
#loc383 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":290:1)
#loc384 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":313:1)
#loc385 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":309:13)
#loc386 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":309:33)
#loc387 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":292:5)
#loc388 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":292:9)
#loc389 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":294:12)
#loc390 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":294:5)
#loc391 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":295:5)
#loc392 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":304:5)
#loc393 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":295:8)
#loc394 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":296:5)
#loc395 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":299:5)
#loc396 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":301:5)
#loc397 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":298:19)
#loc398 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":298:9)
#loc399 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":303:16)
#loc400 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":303:9)
#loc401 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":305:5)
#loc402 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":312:5)
#loc403 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":305:8)
#loc404 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":306:5)
#loc405 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":307:9)
#loc406 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":311:9)
#loc407 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":309:26)
#loc408 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":310:26)
#loc409 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":310:13)
#loc410 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":316:1)
#loc411 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":334:1)
#loc412 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":330:13)
#loc413 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":330:33)
#loc414 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":318:5)
#loc415 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":318:9)
#loc416 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":320:12)
#loc417 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":320:5)
#loc418 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":321:5)
#loc419 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":325:5)
#loc420 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":321:8)
#loc421 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":322:5)
#loc422 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":324:16)
#loc423 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":324:9)
#loc424 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":326:5)
#loc425 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":333:5)
#loc426 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":326:8)
#loc427 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":327:5)
#loc428 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":328:9)
#loc429 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":332:9)
#loc430 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":330:26)
#loc431 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":331:26)
#loc432 = loc("CWE190_Integer_Overflow__int_connect_socket_square_09.c":331:13)
#loc433 = loc(fused[#loc1, #loc2])
#loc434 = loc(fused[#loc3, #loc4])
#loc435 = loc(fused[#loc5, #loc6])
#loc436 = loc(fused[#loc8, #loc9])
#loc437 = loc(fused[#loc10, #loc11])
#loc438 = loc(fused[#loc12, #loc13])
#loc439 = loc(fused[#loc14, #loc15])
#loc440 = loc(fused[#loc16, #loc17])
#loc441 = loc(fused[#loc18, #loc19])
#loc442 = loc(fused[#loc20, #loc21])
#loc443 = loc(fused[#loc22, #loc23])
#loc444 = loc(fused[#loc24, #loc25])
#loc445 = loc(fused[#loc26, #loc27])
#loc446 = loc(fused[#loc28, #loc29])
#loc447 = loc(fused[#loc30, #loc31])
#loc448 = loc(fused[#loc32, #loc33])
#loc449 = loc(fused[#loc35, #loc34])
#loc450 = loc(fused[#loc36, #loc37])
#loc451 = loc(fused[#loc39, #loc37])
#loc452 = loc(fused[#loc40, #loc41])
#loc453 = loc(fused[#loc42, #loc43])
#loc454 = loc(fused[#loc49, #loc50])
#loc455 = loc(fused[#loc51, #loc52])
#loc456 = loc(fused[#loc53, #loc54])
#loc457 = loc(fused[#loc55, #loc52])
#loc458 = loc(fused[#loc57, #loc58])
#loc459 = loc(fused[#loc60, #loc61])
#loc460 = loc(fused[#loc62, #loc63])
#loc461 = loc(fused[#loc66, #loc64])
#loc462 = loc(fused[#loc70, #loc71])
#loc463 = loc(fused[#loc75, #loc76])
#loc464 = loc(fused[#loc77, #loc78])
#loc465 = loc(fused[#loc80, #loc81])
#loc466 = loc(fused[#loc82, #loc83])
#loc467 = loc(fused[#loc84, #loc85])
#loc468 = loc(fused[#loc86, #loc78])
#loc469 = loc(fused[#loc90, #loc91])
#loc470 = loc(fused[#loc94, #loc95])
#loc471 = loc(fused[#loc96, #loc97])
#loc472 = loc(fused[#loc98, #loc99])
#loc473 = loc(fused[#loc101, #loc102])
#loc474 = loc(fused[#loc103, #loc97])
#loc475 = loc(fused[#loc107, #loc105])
#loc476 = loc(fused[#loc110, #loc111])
#loc477 = loc(fused[#loc112, #loc113])
#loc478 = loc(fused[#loc114, #loc115])
#loc479 = loc(fused[#loc116, #loc113])
#loc480 = loc(fused[#loc119, #loc120])
#loc481 = loc(fused[#loc122, #loc120])
#loc482 = loc(fused[#loc123, #loc124])
#loc483 = loc(fused[#loc128, #loc129])
#loc484 = loc(fused[#loc130, #loc131])
#loc485 = loc(fused[#loc132, #loc133])
#loc486 = loc(fused[#loc134, #loc135])
#loc487 = loc(fused[#loc136, #loc137])
#loc488 = loc(fused[#loc138, #loc139])
#loc489 = loc(fused[#loc140, #loc141])
#loc490 = loc(fused[#loc145, #loc146])
#loc491 = loc(fused[#loc147, #loc148])
#loc492 = loc(fused[#loc149, #loc150])
#loc493 = loc(fused[#loc151, #loc152])
#loc494 = loc(fused[#loc153, #loc154])
#loc495 = loc(fused[#loc155, #loc156])
#loc496 = loc(fused[#loc157, #loc158])
#loc497 = loc(fused[#loc160, #loc159])
#loc498 = loc(fused[#loc161, #loc162])
#loc499 = loc(fused[#loc164, #loc162])
#loc500 = loc(fused[#loc165, #loc166])
#loc501 = loc(fused[#loc167, #loc168])
#loc502 = loc(fused[#loc174, #loc175])
#loc503 = loc(fused[#loc176, #loc177])
#loc504 = loc(fused[#loc178, #loc179])
#loc505 = loc(fused[#loc180, #loc177])
#loc506 = loc(fused[#loc182, #loc183])
#loc507 = loc(fused[#loc185, #loc186])
#loc508 = loc(fused[#loc187, #loc188])
#loc509 = loc(fused[#loc190, #loc189])
#loc510 = loc(fused[#loc193, #loc194])
#loc511 = loc(fused[#loc197, #loc198])
#loc512 = loc(fused[#loc199, #loc200])
#loc513 = loc(fused[#loc202, #loc203])
#loc514 = loc(fused[#loc204, #loc205])
#loc515 = loc(fused[#loc206, #loc207])
#loc516 = loc(fused[#loc208, #loc200])
#loc517 = loc(fused[#loc212, #loc213])
#loc518 = loc(fused[#loc216, #loc217])
#loc519 = loc(fused[#loc218, #loc219])
#loc520 = loc(fused[#loc220, #loc221])
#loc521 = loc(fused[#loc223, #loc224])
#loc522 = loc(fused[#loc225, #loc219])
#loc523 = loc(fused[#loc229, #loc227])
#loc524 = loc(fused[#loc232, #loc233])
#loc525 = loc(fused[#loc234, #loc235])
#loc526 = loc(fused[#loc236, #loc237])
#loc527 = loc(fused[#loc238, #loc235])
#loc528 = loc(fused[#loc241, #loc242])
#loc529 = loc(fused[#loc244, #loc245, #loc246, #loc242])
#loc530 = loc(fused[#loc248, #loc249])
#loc531 = loc(fused[#loc250, #loc251])
#loc532 = loc(fused[#loc254, #loc257])
#loc533 = loc(fused[#loc258, #loc259, #loc260, #loc249])
#loc534 = loc(fused[#loc265, #loc266])
#loc535 = loc(fused[#loc267, #loc268])
#loc536 = loc(fused[#loc269, #loc270])
#loc537 = loc(fused[#loc271, #loc272])
#loc538 = loc(fused[#loc273, #loc274])
#loc539 = loc(fused[#loc275, #loc276])
#loc540 = loc(fused[#loc277, #loc278])
#loc541 = loc(fused[#loc280, #loc279])
#loc542 = loc(fused[#loc281, #loc282])
#loc543 = loc(fused[#loc284, #loc282])
#loc544 = loc(fused[#loc285, #loc286])
#loc545 = loc(fused[#loc287, #loc288])
#loc546 = loc(fused[#loc294, #loc295])
#loc547 = loc(fused[#loc296, #loc297])
#loc548 = loc(fused[#loc298, #loc299])
#loc549 = loc(fused[#loc300, #loc297])
#loc550 = loc(fused[#loc302, #loc303])
#loc551 = loc(fused[#loc305, #loc306])
#loc552 = loc(fused[#loc307, #loc308])
#loc553 = loc(fused[#loc310, #loc309])
#loc554 = loc(fused[#loc313, #loc314])
#loc555 = loc(fused[#loc317, #loc318])
#loc556 = loc(fused[#loc319, #loc320])
#loc557 = loc(fused[#loc322, #loc323])
#loc558 = loc(fused[#loc324, #loc325])
#loc559 = loc(fused[#loc326, #loc327])
#loc560 = loc(fused[#loc328, #loc320])
#loc561 = loc(fused[#loc332, #loc333])
#loc562 = loc(fused[#loc336, #loc337])
#loc563 = loc(fused[#loc338, #loc339])
#loc564 = loc(fused[#loc340, #loc341])
#loc565 = loc(fused[#loc343, #loc344])
#loc566 = loc(fused[#loc345, #loc339])
#loc567 = loc(fused[#loc349, #loc347])
#loc568 = loc(fused[#loc352, #loc353])
#loc569 = loc(fused[#loc354, #loc355])
#loc570 = loc(fused[#loc356, #loc357])
#loc571 = loc(fused[#loc358, #loc355])
#loc572 = loc(fused[#loc361, #loc362])
#loc573 = loc(fused[#loc364, #loc362])
#loc574 = loc(fused[#loc365, #loc366])
#loc575 = loc(fused[#loc367, #loc368])
#loc576 = loc(fused[#loc371, #loc374])
#loc577 = loc(fused[#loc375, #loc376, #loc377, #loc366])
#loc578 = loc(fused[#loc383, #loc384])
#loc579 = loc(fused[#loc385, #loc386])
#loc580 = loc(fused[#loc387, #loc388])
#loc581 = loc(fused[#loc390, #loc389])
#loc582 = loc(fused[#loc391, #loc392])
#loc583 = loc(fused[#loc394, #loc395, #loc396, #loc392])
#loc584 = loc(fused[#loc400, #loc399])
#loc585 = loc(fused[#loc401, #loc402])
#loc586 = loc(fused[#loc404, #loc402])
#loc587 = loc(fused[#loc405, #loc406])
#loc588 = loc(fused[#loc410, #loc411])
#loc589 = loc(fused[#loc412, #loc413])
#loc590 = loc(fused[#loc414, #loc415])
#loc591 = loc(fused[#loc417, #loc416])
#loc592 = loc(fused[#loc418, #loc419])
#loc593 = loc(fused[#loc421, #loc419])
#loc594 = loc(fused[#loc423, #loc422])
#loc595 = loc(fused[#loc424, #loc425])
#loc596 = loc(fused[#loc427, #loc425])
#loc597 = loc(fused[#loc428, #loc429])
