!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc91)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execlp_12_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc92)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc93)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc94)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc96)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc16)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc92)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execlp_12_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc105)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc105)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc33)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %9 ^bb2, ^bb9 loc(#loc106)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc107)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc40)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc40)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc100)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc11)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc11)
    %15 = cir.call @getenv(%14) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc109)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc110)
  ^bb5:  // pred: ^bb4
    %20 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc48)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc51)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc53)
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc111)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc55)
    %31 = cir.binop(sub, %28, %30) : !u64i loc(#loc112)
    %32 = cir.call @strncat(%23, %24, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc44)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc39)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc36)
  ^bb9:  // pred: ^bb1
    %33 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc56)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc16)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc16)
    %37 = cir.call @strcat(%34, %36) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc32)
  ^bb11:  // pred: ^bb10
    %38 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc19)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc19)
    %40 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc58)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc58)
    %42 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %45 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
    %46 = cir.call @execlp(%39, %41, %43, %44, %45) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc61)
    cir.return loc(#loc22)
  } loc(#loc99)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc113)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc91)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc119)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc119)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc74)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc79)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc81)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc81)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc79)
    cir.br ^bb4 loc(#loc77)
  ^bb3:  // pred: ^bb1
    %13 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc82)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc84)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc84)
    %17 = cir.call @strcat(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc85)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc85)
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %22 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc87)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc87)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %26 = cir.call @execlp(%19, %21, %23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc90)
    cir.return loc(#loc67)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":92:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":92:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":56:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":56:28)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdlib.h":773:1)
#loc10 = loc("/usr/include/stdlib.h":773:50)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:41)
#loc12 = loc("/usr/include/string.h":152:1)
#loc13 = loc("/usr/include/string.h":153:29)
#loc14 = loc("/usr/include/string.h":149:1)
#loc15 = loc("/usr/include/string.h":150:14)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":75:22)
#loc17 = loc("/usr/include/unistd.h":605:1)
#loc18 = loc("/usr/include/unistd.h":606:14)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:38)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":53:1)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":81:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:13)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:41)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:53)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":55:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":55:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":57:12)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":57:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":58:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":76:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":58:8)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":58:33)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":59:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":71:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":73:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":60:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":70:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:30)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:37)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:34)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":65:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":69:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":65:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":65:32)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":66:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:30)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:29)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:39)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:52)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:56)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:64)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":75:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":75:16)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:25)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:52)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:66)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:5)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":110:1)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":113:1)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":112:5)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":112:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":89:1)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":108:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":91:5)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":91:12)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":93:12)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":93:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":94:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":103:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":94:8)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":94:33)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":95:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":98:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":100:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":97:9)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":97:16)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":97:22)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":102:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":102:16)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":102:22)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:12)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:25)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:38)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:52)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:66)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:5)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc14, #loc15])
#loc98 = loc(fused[#loc17, #loc18])
#loc99 = loc(fused[#loc21, #loc22])
#loc100 = loc(fused[#loc23, #loc24])
#loc101 = loc(fused[#loc25, #loc26])
#loc102 = loc(fused[#loc27, #loc28])
#loc103 = loc(fused[#loc30, #loc29])
#loc104 = loc(fused[#loc31, #loc32])
#loc105 = loc(fused[#loc33, #loc34])
#loc106 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc107 = loc(fused[#loc38, #loc39])
#loc108 = loc(fused[#loc43, #loc44])
#loc109 = loc(fused[#loc45, #loc46])
#loc110 = loc(fused[#loc47, #loc44])
#loc111 = loc(fused[#loc53, #loc54])
#loc112 = loc(fused[#loc53, #loc55])
#loc113 = loc(fused[#loc62, #loc63])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc66, #loc67])
#loc116 = loc(fused[#loc68, #loc69])
#loc117 = loc(fused[#loc71, #loc70])
#loc118 = loc(fused[#loc72, #loc73])
#loc119 = loc(fused[#loc74, #loc75])
#loc120 = loc(fused[#loc76, #loc77, #loc78, #loc73])
