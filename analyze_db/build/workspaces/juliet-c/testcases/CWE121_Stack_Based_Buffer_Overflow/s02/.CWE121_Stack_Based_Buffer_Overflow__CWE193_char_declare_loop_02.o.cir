!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc159)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc160)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc161)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc162)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc166)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc167)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc21)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc23)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc25)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc28)
        cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc171)
      } loc(#loc169)
    } loc(#loc168)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc161)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc173)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc174)
      %6 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc161)
      cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc161)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc34)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc34)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc175)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc40)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc177)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc44)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc178)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc179)
          cir.condition(%18) loc(#loc45)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc48)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc48)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc48)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc51)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc181)
          } loc(#loc180)
          cir.yield loc(#loc39)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc53)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc54)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc182)
          cir.yield loc(#loc176)
        } loc(#loc176)
      } loc(#loc176)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    } loc(#loc172)
    cir.return loc(#loc12)
  } loc(#loc164)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc188)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc189)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc74)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc74)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } else {
        %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc79)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc81)
        %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc81)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc83)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc84)
        cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc193)
      } loc(#loc191)
    } loc(#loc190)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc160)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc196)
      %6 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc160)
      cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc160)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc90)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc91)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc90)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc197)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc96)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc96)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc199)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc98)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc99)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc100)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc200)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc201)
          cir.condition(%18) loc(#loc101)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc103)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc104)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc104)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc106)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc107)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc203)
          } loc(#loc202)
          cir.yield loc(#loc95)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc109)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc110)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc204)
          cir.yield loc(#loc198)
        } loc(#loc198)
      } loc(#loc198)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    } loc(#loc194)
    cir.return loc(#loc65)
  } loc(#loc186)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc207)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc208)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc123)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc125)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc127)
        %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc127)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc129)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc130)
        cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc212)
      } loc(#loc210)
    } loc(#loc209)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc159)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc214)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc215)
      %6 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc159)
      cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc159)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc136)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc137)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc136)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc216)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc142)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc142)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc218)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc144)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc145)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc146)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc146)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc219)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc220)
          cir.condition(%18) loc(#loc147)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc149)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc150)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc150)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc150)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc153)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc222)
          } loc(#loc221)
          cir.yield loc(#loc141)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc155)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc156)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc223)
          cir.yield loc(#loc217)
        } loc(#loc217)
      } loc(#loc217)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    } loc(#loc213)
    cir.return loc(#loc114)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":104:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":104:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":77:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":77:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":41:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":41:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":52:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":31:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":32:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":39:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":33:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":34:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":37:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":37:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":38:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":38:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":38:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":38:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":40:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":51:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":42:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":42:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":42:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":43:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":43:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":43:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":43:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":49:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:18)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:21)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:37)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":47:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":48:30)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":48:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":48:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":48:18)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":48:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":48:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:41)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":46:40)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":50:19)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":50:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":117:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":121:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":119:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":119:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":120:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":120:14)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":67:19)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":59:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":88:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":61:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":61:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":62:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":62:26)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":63:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":63:29)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":64:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":75:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":64:8)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":65:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":68:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":70:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":67:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":73:16)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":73:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":74:19)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":74:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":74:14)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":74:15)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":76:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":87:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":78:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":78:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":78:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":79:21)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":79:28)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":79:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":79:34)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":85:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:18)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:14)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:21)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:25)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:37)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:23)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":83:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":84:30)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":84:23)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":84:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":84:18)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":84:19)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":84:31)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:41)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":82:40)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":86:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":86:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":91:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":115:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":93:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":93:12)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":94:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":94:26)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":95:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":95:29)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":96:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":102:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":96:8)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":97:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":100:16)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":100:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":101:19)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":101:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":101:14)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":101:15)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":103:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":114:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":105:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":105:16)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":105:19)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":106:21)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":106:28)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":106:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":106:34)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":112:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:18)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:14)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:21)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:25)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:37)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:23)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":110:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":111:30)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":111:23)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":111:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":111:18)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":111:19)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":111:31)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:41)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":109:40)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":113:19)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_02.c":113:9)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc19, #loc20])
#loc169 = loc(fused[#loc22, #loc20])
#loc170 = loc(fused[#loc24, #loc23])
#loc171 = loc(fused[#loc26, #loc25])
#loc172 = loc(fused[#loc29, #loc30])
#loc173 = loc(fused[#loc31, #loc32])
#loc174 = loc(fused[#loc31, #loc33])
#loc175 = loc(fused[#loc36, #loc37])
#loc176 = loc(fused[#loc38, #loc39])
#loc177 = loc(fused[#loc41, #loc40])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc42, #loc44])
#loc180 = loc(fused[#loc46, #loc39])
#loc181 = loc(fused[#loc49, #loc52])
#loc182 = loc(fused[#loc54, #loc53])
#loc183 = loc(fused[#loc57, #loc58])
#loc184 = loc(fused[#loc59, #loc60])
#loc185 = loc(fused[#loc61, #loc62])
#loc186 = loc(fused[#loc64, #loc65])
#loc187 = loc(fused[#loc66, #loc67])
#loc188 = loc(fused[#loc68, #loc69])
#loc189 = loc(fused[#loc70, #loc71])
#loc190 = loc(fused[#loc72, #loc73])
#loc191 = loc(fused[#loc75, #loc76, #loc77, #loc73])
#loc192 = loc(fused[#loc80, #loc79])
#loc193 = loc(fused[#loc82, #loc81])
#loc194 = loc(fused[#loc85, #loc86])
#loc195 = loc(fused[#loc87, #loc88])
#loc196 = loc(fused[#loc87, #loc89])
#loc197 = loc(fused[#loc92, #loc93])
#loc198 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc97, #loc96])
#loc200 = loc(fused[#loc99, #loc100])
#loc201 = loc(fused[#loc98, #loc100])
#loc202 = loc(fused[#loc102, #loc95])
#loc203 = loc(fused[#loc105, #loc108])
#loc204 = loc(fused[#loc110, #loc109])
#loc205 = loc(fused[#loc113, #loc114])
#loc206 = loc(fused[#loc115, #loc116])
#loc207 = loc(fused[#loc117, #loc118])
#loc208 = loc(fused[#loc119, #loc120])
#loc209 = loc(fused[#loc121, #loc122])
#loc210 = loc(fused[#loc124, #loc122])
#loc211 = loc(fused[#loc126, #loc125])
#loc212 = loc(fused[#loc128, #loc127])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc133, #loc135])
#loc216 = loc(fused[#loc138, #loc139])
#loc217 = loc(fused[#loc140, #loc141])
#loc218 = loc(fused[#loc143, #loc142])
#loc219 = loc(fused[#loc145, #loc146])
#loc220 = loc(fused[#loc144, #loc146])
#loc221 = loc(fused[#loc148, #loc141])
#loc222 = loc(fused[#loc151, #loc154])
#loc223 = loc(fused[#loc156, #loc155])
