!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE190_Integer_Overflow__int_connect_socket_add_68_badData : !s32i {alignment = 4 : i64} loc(#loc51)
  cir.func private @printIntLine(!s32i) loc(#loc52)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_68b_badSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc54)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc55)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_add_68_badData : !cir.ptr<!s32i> loc(#loc51)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.br ^bb1 loc(#loc56)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc13)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc15)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc53)
  cir.global "private" external @CWE190_Integer_Overflow__int_connect_socket_add_68_goodG2BData : !s32i {alignment = 4 : i64} loc(#loc57)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_68b_goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc59)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc60)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_add_68_goodG2BData : !cir.ptr<!s32i> loc(#loc57)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.br ^bb1 loc(#loc61)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc26)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc28)
    cir.br ^bb2 loc(#loc25)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc19)
  } loc(#loc58)
  cir.global "private" external @CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData : !s32i {alignment = 4 : i64} loc(#loc62)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_68b_goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc66)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_add_68_goodB2GData : !cir.ptr<!s32i> loc(#loc62)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc43)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc68)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc69)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc47)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc49)
    cir.br ^bb4 loc(#loc45)
  ^bb3:  // pred: ^bb1
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc41)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc35)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_68b.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":42:1)
#loc2 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":42:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":48:1)
#loc6 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":56:1)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":53:9)
#loc8 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":53:29)
#loc9 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":50:5)
#loc10 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":50:16)
#loc11 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":51:5)
#loc12 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":55:5)
#loc13 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":53:22)
#loc14 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":54:22)
#loc15 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":54:9)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":43:1)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":43:12)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":63:1)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":71:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":68:9)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":68:29)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":65:5)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":65:16)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":66:5)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":70:5)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":68:22)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":69:22)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":69:9)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":44:1)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":44:12)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":85:19)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":74:1)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":87:1)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":80:9)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":80:29)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":76:5)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":76:16)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":78:5)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":86:5)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":78:9)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":78:16)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":79:5)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":82:5)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":84:5)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":80:22)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":81:22)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":81:9)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_add_68b.c":85:9)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc54 = loc(fused[#loc7, #loc8])
#loc55 = loc(fused[#loc9, #loc10])
#loc56 = loc(fused[#loc11, #loc12])
#loc57 = loc(fused[#loc16, #loc17])
#loc58 = loc(fused[#loc18, #loc19])
#loc59 = loc(fused[#loc20, #loc21])
#loc60 = loc(fused[#loc22, #loc23])
#loc61 = loc(fused[#loc24, #loc25])
#loc62 = loc(fused[#loc29, #loc30])
#loc63 = loc(fused[#loc31, #loc32])
#loc64 = loc(fused[#loc34, #loc35])
#loc65 = loc(fused[#loc36, #loc37])
#loc66 = loc(fused[#loc38, #loc39])
#loc67 = loc(fused[#loc40, #loc41])
#loc68 = loc(fused[#loc42, #loc43])
#loc69 = loc(fused[#loc44, #loc45, #loc46, #loc41])
