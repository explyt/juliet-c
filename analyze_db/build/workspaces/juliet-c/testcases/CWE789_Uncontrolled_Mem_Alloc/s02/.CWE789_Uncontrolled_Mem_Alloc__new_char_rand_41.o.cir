!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":31:21)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":31:28)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":68:25)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":68:32)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":101:25)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":101:32)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:41)
#true = #cir.bool<true> : !cir.bool
#loc143 = loc(fused[#loc13, #loc14])
#loc157 = loc(fused[#loc52, #loc53])
#loc171 = loc(fused[#loc93, #loc94])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc138)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc139)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L7badSinkEm(%arg0: !u64i loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    cir.store %arg0, %1 : !u64i, !cir.ptr<!u64i> loc(#loc17)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %3 = cir.const #cir.int<5> : !u64i loc(#loc147)
    %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc148)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc149)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %6 = cir.call @_Znam(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc29)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc33)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.delete.array %14 : <!s8i> loc(#loc37)
    cir.br ^bb5 loc(#loc26)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc12)
  } loc(#loc142)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_413badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc43)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc45)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc45)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L7badSinkEm(%5) : (!u64i) -> () loc(#loc49)
    cir.return loc(#loc40)
  } loc(#loc152)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L11goodG2BSinkEm(%arg0: !u64i loc(fused[#loc52, #loc53])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    cir.store %arg0, %1 : !u64i, !cir.ptr<!u64i> loc(#loc56)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %3 = cir.const #cir.int<5> : !u64i loc(#loc161)
    %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc162)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc163)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %6 = cir.call @_Znam(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc68)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc72)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc74)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc74)
    %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.delete.array %14 : <!s8i> loc(#loc77)
    cir.br ^bb5 loc(#loc65)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc78)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc60)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc58)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc51)
  } loc(#loc156)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc84)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc86)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc169)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L11goodG2BSinkEm(%5) : (!u64i) -> () loc(#loc89)
    cir.return loc(#loc81)
  } loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc90)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L11goodB2GSinkEm(%arg0: !u64i loc(fused[#loc93, #loc94])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    cir.store %arg0, %1 : !u64i, !cir.ptr<!u64i> loc(#loc97)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %3 = cir.const #cir.int<5> : !u64i loc(#loc175)
    %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc176)
    cir.brcond %4 ^bb3, ^bb8 loc(#loc105)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc107)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc177)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc105)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #true loc(#loc105)
    cir.br ^bb6(%9 : !cir.bool) loc(#loc105)
  ^bb5:  // pred: ^bb3
    %10 = cir.const #false loc(#loc105)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc105)
  ^bb6(%11: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:41)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%11 : !cir.bool) loc(#loc105)
  ^bb8:  // pred: ^bb2
    %12 = cir.const #false loc(#loc105)
    cir.br ^bb9(%12 : !cir.bool) loc(#loc105)
  ^bb9(%13: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:41)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc105)
  ^bb10:  // pred: ^bb9
    cir.brcond %13 ^bb11, ^bb12 loc(#loc178)
  ^bb11:  // pred: ^bb10
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc112)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc116)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc118)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc118)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.delete.array %23 : <!s8i> loc(#loc121)
    cir.br ^bb13 loc(#loc109)
  ^bb12:  // pred: ^bb10
    %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc90)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb13 loc(#loc101)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc101)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc99)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc92)
  } loc(#loc170)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc127)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc129)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc129)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L11goodB2GSinkEm(%5) : (!u64i) -> () loc(#loc133)
    cir.return loc(#loc124)
  } loc(#loc181)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_414goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L7goodG2BEv() : () -> () loc(#loc136)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41L7goodB2GEv() : () -> () loc(#loc137)
    cir.return loc(#loc135)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":42:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":48:23)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":31:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":51:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":34:9)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":34:16)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":32:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":33:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":50:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":38:9)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":49:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":38:13)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":38:20)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":38:39)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":39:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":45:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":47:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":40:33)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":31:13)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":40:24)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":40:37)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":40:13)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":42:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":42:20)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":43:23)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":43:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":44:23)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":48:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":53:1)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":61:1)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":55:5)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":55:12)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":57:12)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":57:5)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":59:12)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":59:5)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":59:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":60:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":60:5)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":68:1)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":88:1)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":71:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":71:16)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":69:1)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":70:5)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":87:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":75:9)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":86:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":75:13)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":75:20)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":75:39)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":76:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":82:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":84:9)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":77:33)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":68:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":77:24)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":77:37)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":77:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":79:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":79:20)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":79:30)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":80:23)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":80:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":81:23)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":85:23)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":85:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":90:1)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":98:1)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":92:5)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":92:12)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":94:12)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":94:5)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":96:12)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":96:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":97:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":97:5)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":118:23)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":101:1)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":121:1)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":104:9)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":104:16)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":102:1)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":103:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":120:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:9)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":119:9)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:20)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:39)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:44)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":108:51)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":109:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":115:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":117:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":110:33)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":101:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":110:24)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":110:37)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":110:13)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":112:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":112:20)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":112:30)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":113:23)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":113:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":114:23)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":118:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":123:1)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":131:1)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":125:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":125:12)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":127:12)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":127:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":129:12)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":129:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":129:17)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":130:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":130:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":133:1)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":137:1)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":135:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_41.cpp":136:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc8, #loc9])
#loc142 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc15, #loc16])
#loc145 = loc(fused[#loc18, #loc19])
#loc146 = loc(fused[#loc20, #loc21])
#loc147 = loc(fused[#loc23, #loc24])
#loc148 = loc(fused[#loc22, #loc24])
#loc149 = loc(fused[#loc25, #loc26, #loc27, #loc21])
#loc150 = loc(fused[#loc30, #loc31])
#loc151 = loc(fused[#loc32, #loc31])
#loc152 = loc(fused[#loc39, #loc40])
#loc153 = loc(fused[#loc41, #loc42])
#loc154 = loc(fused[#loc44, #loc43])
#loc155 = loc(fused[#loc46, #loc47])
#loc156 = loc(fused[#loc50, #loc51])
#loc158 = loc(fused[#loc54, #loc55])
#loc159 = loc(fused[#loc57, #loc58])
#loc160 = loc(fused[#loc59, #loc60])
#loc161 = loc(fused[#loc62, #loc63])
#loc162 = loc(fused[#loc61, #loc63])
#loc163 = loc(fused[#loc64, #loc65, #loc66, #loc60])
#loc164 = loc(fused[#loc69, #loc70])
#loc165 = loc(fused[#loc71, #loc70])
#loc166 = loc(fused[#loc80, #loc81])
#loc167 = loc(fused[#loc82, #loc83])
#loc168 = loc(fused[#loc85, #loc84])
#loc169 = loc(fused[#loc87, #loc86])
#loc170 = loc(fused[#loc91, #loc92])
#loc172 = loc(fused[#loc95, #loc96])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc103, #loc104])
#loc176 = loc(fused[#loc102, #loc104])
#loc177 = loc(fused[#loc106, #loc107])
#loc178 = loc(fused[#loc108, #loc109, #loc110, #loc101])
#loc179 = loc(fused[#loc113, #loc114])
#loc180 = loc(fused[#loc115, #loc114])
#loc181 = loc(fused[#loc123, #loc124])
#loc182 = loc(fused[#loc125, #loc126])
#loc183 = loc(fused[#loc128, #loc127])
#loc184 = loc(fused[#loc130, #loc131])
#loc185 = loc(fused[#loc134, #loc135])
