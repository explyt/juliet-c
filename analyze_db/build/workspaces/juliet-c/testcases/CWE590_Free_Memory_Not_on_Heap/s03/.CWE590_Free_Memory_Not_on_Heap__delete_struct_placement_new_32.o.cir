!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc92)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc93)
  cir.func @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_323badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc96)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc97)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc96)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc97)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc98)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc19)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc100)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc102)
        %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc103)
        %11 = cir.const #cir.int<8> : !u64i loc(#loc104)
        %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc28)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
        cir.call @_ZN14_twoIntsStructC2Ev(%14) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc26)
        cir.store %14, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %16 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc105)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
        %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc106)
        %21 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
        cir.store %21, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc107)
      } loc(#loc101)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc38)
      cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc108)
    } loc(#loc99)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc43)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc110)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
      cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
      cir.call @_ZdlPv(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc48)
    } loc(#loc109)
    cir.return loc(#loc7)
  } loc(#loc94)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc111)
  cir.func internal private @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc114)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc115)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc116)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc64)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc121)
        %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc120)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
        cir.call @_ZN14_twoIntsStructC2Ev(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc69)
        cir.store %12, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc120)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc122)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc123)
        %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
        cir.store %19, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
      } loc(#loc119)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc78)
      cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
    } loc(#loc117)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc83)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
      cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc86)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc87)
      cir.call @_ZdlPv(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc88)
    } loc(#loc126)
    cir.return loc(#loc52)
  } loc(#loc112)
  cir.func @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_324goodEv() extra(#fn_attr2) {
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32L7goodG2BEv() : () -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":26:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":50:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":28:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":28:21)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":29:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":29:34)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":30:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":30:34)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":31:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":31:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":32:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":43:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":33:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":33:33)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":33:32)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":34:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":41:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":36:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":36:46)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":37:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":37:54)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":37:42)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":37:46)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":38:34)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":38:13)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":39:34)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":39:13)
#loc34 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":40:20)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":40:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":42:21)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":42:10)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":42:9)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":44:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":49:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":45:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":45:33)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":45:32)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":46:25)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":46:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":48:16)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":26:6)
#loc49 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc50 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":57:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":80:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":59:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":59:21)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":60:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":60:34)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":61:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":61:34)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":62:12)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":62:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":63:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":73:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":64:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":64:33)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":64:32)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":65:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":71:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":67:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":67:46)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":67:42)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":68:34)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":68:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":69:34)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":69:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":70:20)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":70:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":72:21)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":72:10)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":72:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":74:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":79:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":75:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":75:33)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":75:32)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":76:25)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":76:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":78:16)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":57:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":82:1)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":85:1)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_32.cpp":84:5)
#loc92 = loc(fused[#loc2, #loc3])
#loc93 = loc(fused[#loc4, #loc5])
#loc94 = loc(fused[#loc6, #loc7])
#loc95 = loc(fused[#loc8, #loc9])
#loc96 = loc(fused[#loc10, #loc11])
#loc97 = loc(fused[#loc12, #loc13])
#loc98 = loc(fused[#loc15, #loc14])
#loc99 = loc(fused[#loc16, #loc17])
#loc100 = loc(fused[#loc18, #loc19])
#loc101 = loc(fused[#loc21, #loc22])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc25, #loc26])
#loc104 = loc(fused[#loc27, #loc26])
#loc105 = loc(fused[#loc30, #loc29])
#loc106 = loc(fused[#loc33, #loc32])
#loc107 = loc(fused[#loc36, #loc35])
#loc108 = loc(fused[#loc39, #loc37])
#loc109 = loc(fused[#loc40, #loc41])
#loc110 = loc(fused[#loc42, #loc43])
#loc111 = loc(fused[#loc49, #loc50])
#loc112 = loc(fused[#loc51, #loc52])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc60, #loc59])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc63, #loc64])
#loc119 = loc(fused[#loc66, #loc67])
#loc120 = loc(fused[#loc68, #loc69])
#loc121 = loc(fused[#loc70, #loc69])
#loc122 = loc(fused[#loc72, #loc71])
#loc123 = loc(fused[#loc74, #loc73])
#loc124 = loc(fused[#loc76, #loc75])
#loc125 = loc(fused[#loc79, #loc77])
#loc126 = loc(fused[#loc80, #loc81])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc89, #loc90])
