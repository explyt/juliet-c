!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":209:10)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":209:14)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":209:20)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":209:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc374 = loc(fused[#loc230, #loc231])
#loc375 = loc(fused[#loc232, #loc233])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc283)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_12_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc284)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc285)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc286)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc288)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc291)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc292)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc293)
  cir.func private @close(!s32i) -> !s32i loc(#loc294)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc27)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc296)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc30)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc297)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc284)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_12_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc284)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc284)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc302)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc302)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc41)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc41)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc307)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc308)
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc309)
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc310)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc55)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc55)
          cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc57)
          %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc57)
          cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc309)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
          cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc310)
          cir.scope {
            cir.do {
              %21 = cir.const #cir.int<2> : !s32i loc(#loc64)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc65)
              %23 = cir.const #cir.int<6> : !s32i loc(#loc66)
              %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
              cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc312)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc73)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc73)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc314)
                cir.if %81 {
                  cir.break loc(#loc75)
                } loc(#loc315)
              } loc(#loc313)
              %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc316)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc78)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc317)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc318)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc83)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc83)
              %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc319)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc86)
              %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc86)
              %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
              %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
              cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc320)
              %35 = cir.const #cir.int<27015> : !s32i loc(#loc90)
              %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc90)
              %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc91)
              %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc321)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc323)
                %80 = cir.const #cir.int<16> : !u64i loc(#loc324)
                %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc324)
                %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc102)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc103)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc325)
                cir.if %85 {
                  cir.break loc(#loc105)
                } loc(#loc326)
              } loc(#loc322)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %79 = cir.const #cir.int<5> : !s32i loc(#loc109)
                %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc110)
                %81 = cir.const #cir.int<1> : !s32i loc(#loc111)
                %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc111)
                %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc328)
                cir.if %83 {
                  cir.break loc(#loc113)
                } loc(#loc329)
              } loc(#loc327)
              %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc115)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc116)
              %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc117)
              cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc330)
              cir.scope {
                %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc123)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc123)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc332)
                cir.if %81 {
                  cir.break loc(#loc125)
                } loc(#loc333)
              } loc(#loc331)
              %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
              %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc128)
              %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc129)
              %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc334)
              %48 = cir.const #cir.int<1> : !u64i loc(#loc335)
              %49 = cir.const #cir.int<100> : !s32i loc(#loc134)
              %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc134)
              %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc135)
              %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc336)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc136)
              %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc337)
              %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc338)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc138)
              %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc139)
              %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc139)
              cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc339)
              cir.scope {
                %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc145)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc145)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc341)
                %82 = cir.ternary(%81, true {
                  %83 = cir.const #true loc(#loc146)
                  cir.yield %83 : !cir.bool loc(#loc146)
                }, false {
                  %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                  %84 = cir.const #cir.int<0> : !s32i loc(#loc148)
                  %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc342)
                  %86 = cir.ternary(%85, true {
                    %87 = cir.const #true loc(#loc146)
                    cir.yield %87 : !cir.bool loc(#loc146)
                  }, false {
                    %87 = cir.const #false loc(#loc146)
                    cir.yield %87 : !cir.bool loc(#loc146)
                  }) : (!cir.bool) -> !cir.bool loc(#loc146)
                  cir.yield %86 : !cir.bool loc(#loc146)
                }) : (!cir.bool) -> !cir.bool loc(#loc146)
                cir.if %82 {
                  cir.break loc(#loc150)
                } loc(#loc343)
              } loc(#loc340)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc151)
              %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc151)
              %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
              %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc153)
              %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc154)
              %66 = cir.const #cir.int<1> : !u64i loc(#loc344)
              %67 = cir.binop(div, %65, %66) : !u64i loc(#loc345)
              %68 = cir.binop(add, %63, %67) : !u64i loc(#loc346)
              %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc157)
              cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc347)
              %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc158)
              %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
              %72 = cir.const #cir.int<13> : !s32i loc(#loc160)
              %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
              cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc167)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc167)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc351)
                } loc(#loc350)
              } loc(#loc349)
              %74 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc170)
              %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
              %76 = cir.const #cir.int<10> : !s32i loc(#loc172)
              %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
              cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc177)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc179)
                  %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc179)
                  %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                  cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc355)
                } loc(#loc354)
              } loc(#loc353)
              cir.yield loc(#loc63)
            } while {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc182)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc182)
              cir.condition(%22) loc(#loc182)
            } loc(#loc311)
          } loc(#loc311)
          cir.scope {
            %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc185)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc186)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc186)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc357)
            cir.if %24 {
              %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc189)
            } loc(#loc358)
          } loc(#loc356)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc192)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc193)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc193)
            %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc360)
            cir.if %24 {
              %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc196)
            } loc(#loc361)
          } loc(#loc359)
        } loc(#loc304)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc197)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc27)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc27)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc197)
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc363)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc30)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc30)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc204)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc364)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc209)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc210)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc366)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc212)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc213)
        } loc(#loc367)
      } loc(#loc365)
    } loc(#loc362)
    cir.return loc(#loc34)
  } loc(#loc298)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc369)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc216)
    cir.return loc(#loc215)
  } loc(#loc368)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc370)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc371)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc372)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc227)
  cir.func @main(%arg0: !s32i loc(fused[#loc230, #loc231]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc232, #loc233])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc374)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc375)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc229)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc234)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc235)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc236)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc236)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc237)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc224)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc224)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc238)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_popen_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc376)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_12_good() : () -> () loc(#loc239)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc225)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc225)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc241)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc226)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc226)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc242)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_popen_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc377)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_12_bad() : () -> () loc(#loc243)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc227)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc246)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc378)
    cir.return %17 : !s32i loc(#loc378)
  } loc(#loc373)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc283)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc283)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc283)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc252)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc381)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc383)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc383)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc256)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc256)
      cir.if %7 {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc261)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc263)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc263)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc261)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc264)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc266)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc266)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc264)
      } loc(#loc384)
    } loc(#loc382)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc386)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc271)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc272)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc272)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc273)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc387)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc278)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc279)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc279)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc389)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc281)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc282)
        } loc(#loc390)
      } loc(#loc388)
    } loc(#loc385)
    cir.return loc(#loc249)
  } loc(#loc379)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":171:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":171:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":62:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":62:26)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":404:1)
#loc12 = loc("/usr/include/netinet/in.h":405:40)
#loc13 = loc("/usr/include/sys/socket.h":112:1)
#loc14 = loc("/usr/include/sys/socket.h":113:6)
#loc15 = loc("/usr/include/sys/socket.h":296:1)
#loc16 = loc("/usr/include/sys/socket.h":296:39)
#loc17 = loc("/usr/include/sys/socket.h":306:1)
#loc18 = loc("/usr/include/sys/socket.h":307:38)
#loc19 = loc("/usr/include/sys/socket.h":145:1)
#loc20 = loc("/usr/include/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":246:1)
#loc22 = loc("/usr/include/string.h":247:33)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("/usr/include/string.h":149:1)
#loc26 = loc("/usr/include/string.h":150:14)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":149:22)
#loc28 = loc("/usr/include/stdio.h":893:1)
#loc29 = loc("/usr/include/stdio.h":894:3)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":154:28)
#loc31 = loc("/usr/include/stdio.h":887:1)
#loc32 = loc("/usr/include/stdio.h":887:36)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":59:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":160:1)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":61:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":61:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":63:12)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":63:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":64:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":150:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":64:8)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":64:33)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":65:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":145:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":147:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":66:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":144:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":71:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":71:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":72:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":72:32)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":73:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":73:19)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":74:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":74:35)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":75:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":75:35)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":76:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":76:41)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":76:30)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":76:37)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":77:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":129:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":87:39)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":87:48)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":87:61)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":87:32)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":87:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":87:72)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":88:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":91:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":88:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":88:37)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":89:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":90:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":92:24)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":92:25)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":92:34)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":92:37)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":92:51)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":92:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":92:52)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":93:38)
#loc84 = loc("/usr/include/netinet/in.h":249:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":93:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":94:43)
#loc87 = loc("/usr/include/netinet/in.h":251:20)
#loc88 = loc("/usr/include/netinet/in.h":33:15)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":94:17)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":95:42)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":95:36)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":95:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":95:50)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":99:17)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:26)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:58)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:59)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:68)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:82)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:21)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":96:88)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":97:17)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":98:21)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":100:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":103:17)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":100:28)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":100:42)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":100:21)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":100:61)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":101:17)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":102:21)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":104:39)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":104:53)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":104:59)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":104:32)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":104:17)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":104:63)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":105:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":108:17)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":105:21)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":105:37)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":106:17)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":107:21)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:35)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:58)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:65)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:63)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:49)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:72)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:75)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:86)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:91)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:97)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:107)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:108)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:111)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:30)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":110:112)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":111:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":114:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":111:21)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":111:35)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":111:48)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":111:51)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":111:65)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":112:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":113:21)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":116:61)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":116:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":116:22)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":116:32)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":116:45)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":116:56)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":116:57)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":118:27)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":118:34)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":118:40)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":118:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":118:44)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":119:17)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":122:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":119:21)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":120:17)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":121:32)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":121:22)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":121:21)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":123:27)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":123:34)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":123:40)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":123:17)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":123:44)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":124:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":127:17)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":124:21)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":125:17)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":126:32)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":126:22)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":126:21)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":129:20)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":130:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":133:13)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":130:17)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":130:33)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":131:13)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":132:30)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":132:17)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":134:13)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":137:13)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":134:17)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":134:33)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":135:13)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":136:30)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":136:17)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":149:9)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":149:16)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":151:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":159:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":152:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":152:15)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":154:22)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":154:16)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":154:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":154:31)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":155:9)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":158:9)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":155:13)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":155:21)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":156:9)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":157:20)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":157:13)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":194:1)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":197:1)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":196:5)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":196:13)
#loc218 = loc("/usr/include/stdlib.h":575:1)
#loc219 = loc("/usr/include/stdlib.h":575:41)
#loc220 = loc("/usr/include/time.h":76:1)
#loc221 = loc("/usr/include/time.h":76:38)
#loc222 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc223 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":214:15)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":216:15)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":219:15)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":221:15)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":209:1)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":224:1)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":210:1)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":212:27)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":212:22)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":212:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":214:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":215:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":215:66)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":216:5)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":219:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":220:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":220:65)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":221:5)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":223:12)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":223:5)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":168:1)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":192:1)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":170:5)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":170:12)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":172:12)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":172:5)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":173:5)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":182:5)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":173:8)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":173:33)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":174:5)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":177:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":179:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":176:9)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":176:16)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":176:22)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":181:9)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":181:16)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":181:22)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":183:5)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":191:5)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":184:9)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":184:15)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":186:22)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":186:28)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":186:16)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":186:9)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":186:31)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":187:9)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":190:9)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":187:13)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":187:21)
#loc280 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":188:9)
#loc281 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":189:20)
#loc282 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_12.c":189:13)
#loc283 = loc(fused[#loc1, #loc2])
#loc284 = loc(fused[#loc3, #loc4])
#loc285 = loc(fused[#loc5, #loc6])
#loc286 = loc(fused[#loc7, #loc8])
#loc287 = loc(fused[#loc9, #loc10])
#loc288 = loc(fused[#loc11, #loc12])
#loc289 = loc(fused[#loc13, #loc14])
#loc290 = loc(fused[#loc15, #loc16])
#loc291 = loc(fused[#loc17, #loc18])
#loc292 = loc(fused[#loc19, #loc20])
#loc293 = loc(fused[#loc21, #loc22])
#loc294 = loc(fused[#loc23, #loc24])
#loc295 = loc(fused[#loc25, #loc26])
#loc296 = loc(fused[#loc28, #loc29])
#loc297 = loc(fused[#loc31, #loc32])
#loc298 = loc(fused[#loc33, #loc34])
#loc299 = loc(fused[#loc35, #loc36])
#loc300 = loc(fused[#loc38, #loc37])
#loc301 = loc(fused[#loc39, #loc40])
#loc302 = loc(fused[#loc41, #loc42])
#loc303 = loc(fused[#loc43, #loc44, #loc45, #loc40])
#loc304 = loc(fused[#loc46, #loc47])
#loc305 = loc(fused[#loc48, #loc49])
#loc306 = loc(fused[#loc50, #loc51])
#loc307 = loc(fused[#loc52, #loc53])
#loc308 = loc(fused[#loc54, #loc55])
#loc309 = loc(fused[#loc56, #loc57])
#loc310 = loc(fused[#loc58, #loc59])
#loc311 = loc(fused[#loc62, #loc63])
#loc312 = loc(fused[#loc68, #loc69])
#loc313 = loc(fused[#loc70, #loc71])
#loc314 = loc(fused[#loc72, #loc73])
#loc315 = loc(fused[#loc74, #loc71])
#loc316 = loc(fused[#loc76, #loc77])
#loc317 = loc(fused[#loc79, #loc80])
#loc318 = loc(fused[#loc81, #loc82])
#loc319 = loc(fused[#loc85, #loc83])
#loc320 = loc(fused[#loc89, #loc86])
#loc321 = loc(fused[#loc93, #loc94])
#loc322 = loc(fused[#loc95, #loc96])
#loc323 = loc(fused[#loc98, #loc99])
#loc324 = loc(fused[#loc100, #loc101])
#loc325 = loc(fused[#loc102, #loc103])
#loc326 = loc(fused[#loc104, #loc96])
#loc327 = loc(fused[#loc106, #loc107])
#loc328 = loc(fused[#loc110, #loc111])
#loc329 = loc(fused[#loc112, #loc107])
#loc330 = loc(fused[#loc118, #loc119])
#loc331 = loc(fused[#loc120, #loc121])
#loc332 = loc(fused[#loc122, #loc123])
#loc333 = loc(fused[#loc124, #loc121])
#loc334 = loc(fused[#loc130, #loc131])
#loc335 = loc(fused[#loc132, #loc133])
#loc336 = loc(fused[#loc134, #loc135])
#loc337 = loc(fused[#loc134, #loc136])
#loc338 = loc(fused[#loc132, #loc137])
#loc339 = loc(fused[#loc140, #loc141])
#loc340 = loc(fused[#loc142, #loc143])
#loc341 = loc(fused[#loc144, #loc145])
#loc342 = loc(fused[#loc147, #loc148])
#loc343 = loc(fused[#loc149, #loc143])
#loc344 = loc(fused[#loc155, #loc156])
#loc345 = loc(fused[#loc154, #loc156])
#loc346 = loc(fused[#loc153, #loc156])
#loc347 = loc(fused[#loc152, #loc151])
#loc348 = loc(fused[#loc161, #loc162])
#loc349 = loc(fused[#loc163, #loc164])
#loc350 = loc(fused[#loc166, #loc164])
#loc351 = loc(fused[#loc169, #loc167])
#loc352 = loc(fused[#loc173, #loc174])
#loc353 = loc(fused[#loc175, #loc176])
#loc354 = loc(fused[#loc178, #loc176])
#loc355 = loc(fused[#loc181, #loc179])
#loc356 = loc(fused[#loc183, #loc184])
#loc357 = loc(fused[#loc185, #loc186])
#loc358 = loc(fused[#loc187, #loc184])
#loc359 = loc(fused[#loc190, #loc191])
#loc360 = loc(fused[#loc192, #loc193])
#loc361 = loc(fused[#loc194, #loc191])
#loc362 = loc(fused[#loc199, #loc200])
#loc363 = loc(fused[#loc201, #loc202])
#loc364 = loc(fused[#loc205, #loc206])
#loc365 = loc(fused[#loc207, #loc208])
#loc366 = loc(fused[#loc209, #loc210])
#loc367 = loc(fused[#loc211, #loc208])
#loc368 = loc(fused[#loc214, #loc215])
#loc369 = loc(fused[#loc216, #loc217])
#loc370 = loc(fused[#loc218, #loc219])
#loc371 = loc(fused[#loc220, #loc221])
#loc372 = loc(fused[#loc222, #loc223])
#loc373 = loc(fused[#loc228, #loc229])
#loc376 = loc(fused[#loc239, #loc240])
#loc377 = loc(fused[#loc243, #loc244])
#loc378 = loc(fused[#loc247, #loc246])
#loc379 = loc(fused[#loc248, #loc249])
#loc380 = loc(fused[#loc250, #loc251])
#loc381 = loc(fused[#loc253, #loc252])
#loc382 = loc(fused[#loc254, #loc255])
#loc383 = loc(fused[#loc256, #loc257])
#loc384 = loc(fused[#loc258, #loc259, #loc260, #loc255])
#loc385 = loc(fused[#loc267, #loc268])
#loc386 = loc(fused[#loc269, #loc270])
#loc387 = loc(fused[#loc274, #loc275])
#loc388 = loc(fused[#loc276, #loc277])
#loc389 = loc(fused[#loc278, #loc279])
#loc390 = loc(fused[#loc280, #loc277])
