!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":24:68)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":24:75)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":24:82)
#loc52 = loc(fused[#loc10, #loc11])
!ty_anon_struct = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct2 = !cir.record<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_base = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81::CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81::CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad" {!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_base} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc49)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc50)
  cir.func @_ZNK56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad6actionEPc(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad> loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":24:68), %arg1: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc9)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc52)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad>> loc(#loc12)
    cir.store %arg1, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad> loc(#loc9)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc54)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc55)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc56)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc54)
      cir.store %6, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc54)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc20)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc20)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc57)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc26)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc59)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc28)
          %23 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc29)
          %24 = cir.cmp(lt, %22, %23) : !u64i, !cir.bool loc(#loc60)
          cir.condition(%24) loc(#loc60)
        } body {
          cir.scope {
            %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc33)
            %25 = cir.load %24 : !cir.ptr<!s8i>, !s8i loc(#loc31)
            %26 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc35)
            %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc35)
            cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc62)
          } loc(#loc61)
          cir.yield loc(#loc25)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc37)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc63)
          cir.yield loc(#loc58)
        } loc(#loc58)
      } loc(#loc58)
      %10 = cir.const #cir.int<0> : !s8i loc(#loc38)
      %11 = cir.const #cir.int<50> : !s32i loc(#loc39)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc39)
      %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc41)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc41)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc64)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc43)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc44)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    } loc(#loc53)
    cir.return loc(#loc8)
  } loc(#loc51)
  cir.global external dsolocal @_ZTVN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_badE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZNK56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad6actionEPc> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct2 {alignment = 8 : i64} loc(#loc65)
  cir.global "private" external @_ZTVN10__cxxabiv120__si_class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc46)
  cir.global external @_ZTSN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_badE = #cir.const_array<"N56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_badE" : !cir.array<!s8i x 122>> : !cir.array<!s8i x 122> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc46)
  cir.global linkonce_odr comdat @_ZTSN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8161CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_baseE = #cir.const_array<"N56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8161CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_baseE" : !cir.array<!s8i x 123>> : !cir.array<!s8i x 123> {alignment = 1 : i64} loc(#loc46)
  cir.global constant external @_ZTIN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8161CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8161CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc46)
  cir.global constant external @_ZTIN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_badE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv120__si_class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8160CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_8161CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc46)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":39:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":25:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":26:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":38:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":27:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":27:25)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":28:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":28:16)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":28:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":29:19)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":29:26)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":29:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":29:30)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":31:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":34:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":31:18)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":31:14)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":31:21)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":31:25)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":32:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":33:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":33:28)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":33:29)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":33:18)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":33:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":31:35)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":31:34)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":35:22)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":35:14)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":35:17)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":35:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":36:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":36:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":37:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81_bad.cpp":37:14)
#loc46 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81.h":33:1)
#loc47 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_81.h":37:1)
#loc48 = loc(fused[#loc1, #loc2])
#loc49 = loc(fused[#loc3, #loc4])
#loc50 = loc(fused[#loc5, #loc6])
#loc51 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc13, #loc14])
#loc54 = loc(fused[#loc15, #loc16])
#loc55 = loc(fused[#loc17, #loc18])
#loc56 = loc(fused[#loc17, #loc19])
#loc57 = loc(fused[#loc22, #loc23])
#loc58 = loc(fused[#loc24, #loc25])
#loc59 = loc(fused[#loc27, #loc26])
#loc60 = loc(fused[#loc28, #loc29])
#loc61 = loc(fused[#loc30, #loc25])
#loc62 = loc(fused[#loc35, #loc33])
#loc63 = loc(fused[#loc37, #loc36])
#loc64 = loc(fused[#loc41, #loc38])
#loc65 = loc(fused[#loc46, #loc47])
