!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_declare_cpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc109)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func no_proto @CWE127_Buffer_Underread__char_declare_cpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc114)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc15)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc115)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc19)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc20)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    cir.scope {
      %16 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc118)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc118)
      %18 = cir.call %17() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
      %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc25)
      cir.if %19 {
        %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
        %21 = cir.const #cir.int<8> : !s32i loc(#loc31)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc31)
        %23 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc32)
        cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
      } else {
        %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
        cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
      } loc(#loc119)
    } loc(#loc117)
    cir.scope {
      %16 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc123)
      %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc40)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %19 = cir.const #cir.int<67> : !s32i loc(#loc41)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %21 = cir.const #cir.int<2> : !s32i loc(#loc43)
      %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc42)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc42)
      %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc42)
      cir.libc.memset %25 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc124)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc47)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc48)
      %29 = cir.const #cir.int<2> : !s32i loc(#loc49)
      %30 = cir.binop(mul, %28, %29) nsw : !s32i loc(#loc48)
      %31 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc48)
      %33 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc51)
      %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc51)
      cir.store %27, %34 : !s8i, !cir.ptr<!s8i> loc(#loc125)
      %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc52)
      %36 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc53)
      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      %38 = cir.call @strcpy(%36, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
      %39 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc55)
      cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    } loc(#loc122)
    cir.return loc(#loc8)
  } loc(#loc112)
  cir.func no_proto @CWE127_Buffer_Underread__char_declare_cpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc126)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc130)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc68)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc69)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc69)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc131)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc73)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc74)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    cir.scope {
      %16 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc134)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc134)
      %18 = cir.call %17() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc79)
      %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc79)
      cir.if %19 {
        %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
        cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
      } else {
        %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
        cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
      } loc(#loc135)
    } loc(#loc133)
    cir.scope {
      %16 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc139)
      %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc92)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
      %19 = cir.const #cir.int<67> : !s32i loc(#loc93)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %21 = cir.const #cir.int<2> : !s32i loc(#loc95)
      %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc94)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc96)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc94)
      %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc94)
      cir.libc.memset %25 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc140)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc99)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc99)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc100)
      %29 = cir.const #cir.int<2> : !s32i loc(#loc101)
      %30 = cir.binop(mul, %28, %29) nsw : !s32i loc(#loc100)
      %31 = cir.const #cir.int<1> : !s32i loc(#loc102)
      %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc100)
      %33 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc103)
      %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc103)
      cir.store %27, %34 : !s8i, !cir.ptr<!s8i> loc(#loc141)
      %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc104)
      %36 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc105)
      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %38 = cir.call @strcpy(%36, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
      %39 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc107)
      cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    } loc(#loc138)
    cir.return loc(#loc62)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_declare_cpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":23:1)
#loc8 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":47:1)
#loc9 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":25:5)
#loc10 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":25:12)
#loc11 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":26:5)
#loc12 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":26:24)
#loc13 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":27:12)
#loc14 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":27:24)
#loc15 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":27:29)
#loc16 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":27:33)
#loc17 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":27:5)
#loc18 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":27:34)
#loc19 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":28:25)
#loc20 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":28:16)
#loc21 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":28:20)
#loc22 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":28:5)
#loc23 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":29:5)
#loc24 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":38:5)
#loc25 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":29:8)
#loc26 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":29:33)
#loc27 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":30:5)
#loc28 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":33:5)
#loc29 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":35:5)
#loc30 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":32:16)
#loc31 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":32:29)
#loc32 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":32:27)
#loc33 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":32:9)
#loc34 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":37:16)
#loc35 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":37:9)
#loc36 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":39:5)
#loc37 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":46:5)
#loc38 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":40:9)
#loc39 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":40:24)
#loc40 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":41:16)
#loc41 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":41:22)
#loc42 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":41:27)
#loc43 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":41:31)
#loc44 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":41:33)
#loc45 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":41:9)
#loc46 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":41:34)
#loc47 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":42:25)
#loc48 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":42:14)
#loc49 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":42:18)
#loc50 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":42:20)
#loc51 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":42:9)
#loc52 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":44:9)
#loc53 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":44:16)
#loc54 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":44:22)
#loc55 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":45:19)
#loc56 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":45:9)
#loc57 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":81:1)
#loc58 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":84:1)
#loc59 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":83:5)
#loc60 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":83:13)
#loc61 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":55:1)
#loc62 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":79:1)
#loc63 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":57:5)
#loc64 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":57:12)
#loc65 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":58:5)
#loc66 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":58:24)
#loc67 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":59:12)
#loc68 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":59:24)
#loc69 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":59:29)
#loc70 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":59:33)
#loc71 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":59:5)
#loc72 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":59:34)
#loc73 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":60:25)
#loc74 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":60:16)
#loc75 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":60:20)
#loc76 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":60:5)
#loc77 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":61:5)
#loc78 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":70:5)
#loc79 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":61:8)
#loc80 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":61:33)
#loc81 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":62:5)
#loc82 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":65:5)
#loc83 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":67:5)
#loc84 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":64:16)
#loc85 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":64:9)
#loc86 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":69:16)
#loc87 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":69:9)
#loc88 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":71:5)
#loc89 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":78:5)
#loc90 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":72:9)
#loc91 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":72:24)
#loc92 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":73:16)
#loc93 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":73:22)
#loc94 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":73:27)
#loc95 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":73:31)
#loc96 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":73:33)
#loc97 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":73:9)
#loc98 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":73:34)
#loc99 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":74:25)
#loc100 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":74:14)
#loc101 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":74:18)
#loc102 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":74:20)
#loc103 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":74:9)
#loc104 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":76:9)
#loc105 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":76:16)
#loc106 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":76:22)
#loc107 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":77:19)
#loc108 = loc("CWE127_Buffer_Underread__char_declare_cpy_12.c":77:9)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc9, #loc10])
#loc114 = loc(fused[#loc11, #loc12])
#loc115 = loc(fused[#loc17, #loc18])
#loc116 = loc(fused[#loc22, #loc19])
#loc117 = loc(fused[#loc23, #loc24])
#loc118 = loc(fused[#loc25, #loc26])
#loc119 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc120 = loc(fused[#loc33, #loc31])
#loc121 = loc(fused[#loc35, #loc34])
#loc122 = loc(fused[#loc36, #loc37])
#loc123 = loc(fused[#loc38, #loc39])
#loc124 = loc(fused[#loc45, #loc46])
#loc125 = loc(fused[#loc51, #loc47])
#loc126 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc61, #loc62])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc71, #loc72])
#loc132 = loc(fused[#loc76, #loc73])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc136 = loc(fused[#loc85, #loc84])
#loc137 = loc(fused[#loc87, #loc86])
#loc138 = loc(fused[#loc88, #loc89])
#loc139 = loc(fused[#loc90, #loc91])
#loc140 = loc(fused[#loc97, #loc98])
#loc141 = loc(fused[#loc103, #loc99])
