!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":304:10)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":304:14)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":304:20)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":304:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc556 = loc(fused[#loc213, #loc214])
#loc557 = loc(fused[#loc215, #loc216])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc470)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc471)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc472)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc473)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc474)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc475)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc476)
  cir.func private @close(!s32i) -> !s32i loc(#loc477)
  cir.func private @printIntLine(!s32i) loc(#loc478)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc479)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc481)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc482)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc483)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc30)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc34)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc486)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc487)
        cir.condition(%8) loc(#loc38)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc490)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc491)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc492)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc493)
            %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc494)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc47)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc492)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc49)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc493)
            cir.scope {
              cir.do {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc54)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc55)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc56)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc496)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc63)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc498)
                  cir.if %63 {
                    cir.break loc(#loc65)
                  } loc(#loc499)
                } loc(#loc497)
                %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc500)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc501)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc502)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc73)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc73)
                %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc503)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc76)
                %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc76)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc504)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc80)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc505)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                  %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc507)
                  %62 = cir.const #cir.int<16> : !u64i loc(#loc508)
                  %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc508)
                  %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
                  %65 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc93)
                  %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc509)
                  cir.if %67 {
                    cir.break loc(#loc95)
                  } loc(#loc510)
                } loc(#loc506)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %61 = cir.const #cir.int<5> : !s32i loc(#loc99)
                  %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc101)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc512)
                  cir.if %65 {
                    cir.break loc(#loc103)
                  } loc(#loc513)
                } loc(#loc511)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
                %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
                cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc514)
                cir.scope {
                  %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc113)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc113)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc516)
                  cir.if %63 {
                    cir.break loc(#loc115)
                  } loc(#loc517)
                } loc(#loc515)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
                %40 = cir.const #cir.int<3> : !s32i loc(#loc118)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc118)
                %42 = cir.const #cir.int<4> : !u64i loc(#loc118)
                %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc118)
                %44 = cir.const #cir.int<2> : !s32i loc(#loc118)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc118)
                %46 = cir.binop(add, %43, %45) : !u64i loc(#loc118)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc119)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc119)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc518)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc121)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc121)
                cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc519)
                cir.scope {
                  %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc127)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc127)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc521)
                  %64 = cir.ternary(%63, true {
                    %65 = cir.const #true loc(#loc128)
                    cir.yield %65 : !cir.bool loc(#loc128)
                  }, false {
                    %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                    %66 = cir.const #cir.int<0> : !s32i loc(#loc130)
                    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc522)
                    %68 = cir.ternary(%67, true {
                      %69 = cir.const #true loc(#loc128)
                      cir.yield %69 : !cir.bool loc(#loc128)
                    }, false {
                      %69 = cir.const #false loc(#loc128)
                      cir.yield %69 : !cir.bool loc(#loc128)
                    }) : (!cir.bool) -> !cir.bool loc(#loc128)
                    cir.yield %68 : !cir.bool loc(#loc128)
                  }) : (!cir.bool) -> !cir.bool loc(#loc128)
                  cir.if %64 {
                    cir.break loc(#loc132)
                  } loc(#loc523)
                } loc(#loc520)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc133)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc133)
                %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
                %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc135)
                cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc524)
                %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
                %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc137)
                cir.store %59, %2 : !s32i, !cir.ptr<!s32i> loc(#loc525)
                cir.yield loc(#loc53)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc140)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc140)
                cir.condition(%16) loc(#loc140)
              } loc(#loc495)
            } loc(#loc495)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc144)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc527)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc147)
              } loc(#loc528)
            } loc(#loc526)
            cir.scope {
              %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc151)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc151)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc530)
              cir.if %18 {
                %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc154)
              } loc(#loc531)
            } loc(#loc529)
          } loc(#loc489)
        } loc(#loc488)
        cir.yield loc(#loc33)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc156)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc532)
        cir.yield loc(#loc485)
      } loc(#loc485)
    } loc(#loc485)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc159)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc534)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc161)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc162)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc535)
        cir.condition(%8) loc(#loc163)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc538)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc539)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc539)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc539)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc174)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc541)
              cir.if %11 {
                %12 = cir.const #cir.int<1> : !s32i loc(#loc178)
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
                %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc180)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc180)
                cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc543)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc183)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc545)
                  cir.for : cond {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                    %18 = cir.const #cir.int<10> : !s32i loc(#loc186)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc546)
                    cir.condition(%19) loc(#loc187)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                      %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc190)
                      %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc190)
                      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc191)
                    } loc(#loc547)
                    cir.yield loc(#loc182)
                  } step {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc192)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc193)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc548)
                    cir.yield loc(#loc544)
                  } loc(#loc544)
                } loc(#loc544)
              } else {
                %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc21)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc21)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc194)
              } loc(#loc542)
            } loc(#loc540)
          } loc(#loc537)
        } loc(#loc536)
        cir.yield loc(#loc158)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc195)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc196)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc549)
        cir.yield loc(#loc533)
      } loc(#loc533)
    } loc(#loc533)
    cir.return loc(#loc23)
  } loc(#loc480)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc551)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc199)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc552)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc201)
    cir.return loc(#loc198)
  } loc(#loc550)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc553)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc554)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc210)
  cir.func @main(%arg0: !s32i loc(fused[#loc213, #loc214]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc215, #loc216])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc556)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc557)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc212)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc217)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc218)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc219)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc219)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc220)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc207)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_listen_socket_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc558)
    cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_17_good() : () -> () loc(#loc222)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc208)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc209)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_listen_socket_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc559)
    cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_17_bad() : () -> () loc(#loc226)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc210)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc229)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc560)
    cir.return %17 : !s32i loc(#loc560)
  } loc(#loc555)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc231)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc562)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc563)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc564)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc240)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc565)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc244)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc247)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc568)
        cir.condition(%8) loc(#loc248)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc571)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc572)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc573)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc574)
            %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc575)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc257)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc257)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc573)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc259)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc259)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc574)
            cir.scope {
              cir.do {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc264)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc265)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc266)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc267)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc577)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc273)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc273)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc579)
                  cir.if %63 {
                    cir.break loc(#loc275)
                  } loc(#loc580)
                } loc(#loc578)
                %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc581)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc278)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc582)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc583)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc283)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc283)
                %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc584)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc285)
                %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc285)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc585)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc287)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc287)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc288)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc586)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                  %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc588)
                  %62 = cir.const #cir.int<16> : !u64i loc(#loc589)
                  %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc589)
                  %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc298)
                  %65 = cir.const #cir.int<1> : !s32i loc(#loc299)
                  %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc299)
                  %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc590)
                  cir.if %67 {
                    cir.break loc(#loc301)
                  } loc(#loc591)
                } loc(#loc587)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                  %61 = cir.const #cir.int<5> : !s32i loc(#loc305)
                  %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc306)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc307)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc307)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc593)
                  cir.if %65 {
                    cir.break loc(#loc309)
                  } loc(#loc594)
                } loc(#loc592)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc311)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc312)
                %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc313)
                cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc595)
                cir.scope {
                  %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc318)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc319)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc319)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc597)
                  cir.if %63 {
                    cir.break loc(#loc321)
                  } loc(#loc598)
                } loc(#loc596)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc322)
                %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc323)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc323)
                %40 = cir.const #cir.int<3> : !s32i loc(#loc324)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc324)
                %42 = cir.const #cir.int<4> : !u64i loc(#loc324)
                %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc324)
                %44 = cir.const #cir.int<2> : !s32i loc(#loc324)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc324)
                %46 = cir.binop(add, %43, %45) : !u64i loc(#loc324)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc325)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc325)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc599)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc326)
                %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc327)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc327)
                cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc600)
                cir.scope {
                  %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc332)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc333)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc333)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc602)
                  %64 = cir.ternary(%63, true {
                    %65 = cir.const #true loc(#loc334)
                    cir.yield %65 : !cir.bool loc(#loc334)
                  }, false {
                    %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc335)
                    %66 = cir.const #cir.int<0> : !s32i loc(#loc336)
                    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc603)
                    %68 = cir.ternary(%67, true {
                      %69 = cir.const #true loc(#loc334)
                      cir.yield %69 : !cir.bool loc(#loc334)
                    }, false {
                      %69 = cir.const #false loc(#loc334)
                      cir.yield %69 : !cir.bool loc(#loc334)
                    }) : (!cir.bool) -> !cir.bool loc(#loc334)
                    cir.yield %68 : !cir.bool loc(#loc334)
                  }) : (!cir.bool) -> !cir.bool loc(#loc334)
                  cir.if %64 {
                    cir.break loc(#loc338)
                  } loc(#loc604)
                } loc(#loc601)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc339)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc339)
                %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc340)
                %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc341)
                %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc341)
                cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc605)
                %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc342)
                %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc343)
                cir.store %59, %2 : !s32i, !cir.ptr<!s32i> loc(#loc606)
                cir.yield loc(#loc263)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc346)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc346)
                cir.condition(%16) loc(#loc346)
              } loc(#loc576)
            } loc(#loc576)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc349)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc350)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc350)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc608)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc352)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc353)
              } loc(#loc609)
            } loc(#loc607)
            cir.scope {
              %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc356)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc357)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc357)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc611)
              cir.if %18 {
                %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc359)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc360)
              } loc(#loc612)
            } loc(#loc610)
          } loc(#loc570)
        } loc(#loc569)
        cir.yield loc(#loc243)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc361)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc362)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc613)
        cir.yield loc(#loc566)
      } loc(#loc566)
    } loc(#loc566)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc365)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc615)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc367)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc368)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc616)
        cir.condition(%8) loc(#loc369)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc619)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc620)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc620)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc620)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc379)
              %10 = cir.const #cir.int<0> : !s32i loc(#loc380)
              %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc622)
              %12 = cir.ternary(%11, true {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc383)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc623)
                %16 = cir.ternary(%15, true {
                  %17 = cir.const #true loc(#loc381)
                  cir.yield %17 : !cir.bool loc(#loc381)
                }, false {
                  %17 = cir.const #false loc(#loc381)
                  cir.yield %17 : !cir.bool loc(#loc381)
                }) : (!cir.bool) -> !cir.bool loc(#loc381)
                cir.yield %16 : !cir.bool loc(#loc381)
              }, false {
                %13 = cir.const #false loc(#loc381)
                cir.yield %13 : !cir.bool loc(#loc381)
              }) : (!cir.bool) -> !cir.bool loc(#loc381)
              cir.if %12 {
                %13 = cir.const #cir.int<1> : !s32i loc(#loc388)
                %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc389)
                %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc390)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc390)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc625)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc393)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc627)
                  cir.for : cond {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc395)
                    %19 = cir.const #cir.int<10> : !s32i loc(#loc396)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc628)
                    cir.condition(%20) loc(#loc397)
                  } body {
                    cir.scope {
                      %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc399)
                      %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc400)
                      %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc400)
                      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc400)
                      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc401)
                    } loc(#loc629)
                    cir.yield loc(#loc392)
                  } step {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc402)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc403)
                    cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc630)
                    cir.yield loc(#loc626)
                  } loc(#loc626)
                } loc(#loc626)
              } else {
                %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc231)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc231)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc404)
              } loc(#loc624)
            } loc(#loc621)
          } loc(#loc618)
        } loc(#loc617)
        cir.yield loc(#loc364)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc405)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc406)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc631)
        cir.yield loc(#loc614)
      } loc(#loc614)
    } loc(#loc614)
    cir.return loc(#loc233)
  } loc(#loc561)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc633)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc634)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc635)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc414)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc415)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc636)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc419)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc638)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc421)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc422)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc639)
        cir.condition(%8) loc(#loc423)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<7> : !s32i loc(#loc425)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc641)
        } loc(#loc640)
        cir.yield loc(#loc418)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc427)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc428)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc642)
        cir.yield loc(#loc637)
      } loc(#loc637)
    } loc(#loc637)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc431)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc644)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc433)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc434)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc645)
        cir.condition(%8) loc(#loc435)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc648)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc649)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc649)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc649)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc445)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc446)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc651)
              cir.if %11 {
                %12 = cir.const #cir.int<1> : !s32i loc(#loc450)
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc451)
                %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc452)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc452)
                cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc653)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc455)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc655)
                  cir.for : cond {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc457)
                    %18 = cir.const #cir.int<10> : !s32i loc(#loc458)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc656)
                    cir.condition(%19) loc(#loc459)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc461)
                      %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc462)
                      %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc462)
                      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc462)
                      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc463)
                    } loc(#loc657)
                    cir.yield loc(#loc454)
                  } step {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc464)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc465)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc658)
                    cir.yield loc(#loc654)
                  } loc(#loc654)
                } loc(#loc654)
              } else {
                %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc466)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc466)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc467)
              } loc(#loc652)
            } loc(#loc650)
          } loc(#loc647)
        } loc(#loc646)
        cir.yield loc(#loc430)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc468)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc469)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc659)
        cir.yield loc(#loc643)
      } loc(#loc643)
    } loc(#loc643)
    cir.return loc(#loc408)
  } loc(#loc632)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":140:27)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":44:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":144:1)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":46:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":46:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":46:11)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":47:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":47:9)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":49:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":49:12)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":49:5)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:5)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":121:5)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:9)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:16)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:20)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:18)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":51:5)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":52:9)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":120:9)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":57:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":57:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":58:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":58:32)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":59:13)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":59:35)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":60:13)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":60:35)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":61:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":61:45)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":62:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":105:21)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":72:39)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":72:48)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":72:61)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":72:32)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":72:17)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":72:72)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":73:17)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":76:17)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":73:21)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":73:37)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":74:17)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":75:21)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":77:24)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":77:25)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":77:34)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":77:37)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":77:51)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":77:17)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":77:52)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":78:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":78:17)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":79:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":79:17)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":80:42)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":80:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":80:17)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":80:50)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:17)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":84:17)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:26)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:58)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:59)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:68)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:82)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:21)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":81:88)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":82:17)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":83:21)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":85:17)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":88:17)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":85:28)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":85:42)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":85:21)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":85:61)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":86:17)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":87:21)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":89:39)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":89:53)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":89:59)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":89:32)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":89:17)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":89:63)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":90:17)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":93:17)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":90:21)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":90:37)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":91:17)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":92:21)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:35)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:49)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:62)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:80)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:83)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:30)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:17)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":95:84)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":96:17)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":99:17)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":96:21)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":96:35)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":96:48)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":96:51)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":96:65)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":97:17)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":98:21)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":101:43)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":101:29)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":101:17)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":103:29)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":103:24)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":103:17)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":103:40)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":105:20)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":106:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":109:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":106:17)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":106:33)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":107:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":108:30)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":108:17)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":110:13)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":113:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":110:17)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":110:33)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":111:13)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":112:30)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":112:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:24)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":50:23)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:5)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":143:5)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:13)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:9)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:16)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:20)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:18)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":123:5)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":124:9)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":142:9)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":125:13)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":125:17)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":126:13)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":126:34)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":129:13)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":141:13)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":129:17)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":129:24)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":130:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":137:13)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":139:13)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":131:32)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":131:24)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":131:17)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:17)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":136:17)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:25)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:21)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:28)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:32)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:30)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":134:17)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":135:41)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":135:34)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":135:21)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:37)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":133:36)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":140:17)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:24)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":122:23)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":289:1)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":293:1)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":291:5)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":291:13)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":292:5)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":292:13)
#loc203 = loc("/usr/include/stdlib.h":575:1)
#loc204 = loc("/usr/include/stdlib.h":575:41)
#loc205 = loc("/usr/include/time.h":76:1)
#loc206 = loc("/usr/include/time.h":76:38)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":309:15)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":311:15)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":314:15)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":316:15)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":304:1)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":319:1)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":305:1)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":307:27)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":307:22)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":307:5)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":309:5)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":310:5)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":310:60)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":311:5)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":314:5)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":315:5)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":315:59)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":316:5)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":318:12)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":318:5)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":246:27)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":151:1)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":250:1)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":153:5)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":153:9)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":153:11)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":154:5)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":154:9)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":156:13)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":156:12)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":156:5)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:5)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":228:5)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:13)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:9)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:16)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:20)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:18)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":158:5)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":159:9)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":227:9)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":164:13)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":164:17)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":165:13)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":165:32)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":166:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":166:35)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":167:13)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":167:35)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":168:13)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":168:45)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":169:13)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":212:21)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":179:39)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":179:48)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":179:61)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":179:32)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":179:17)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":179:72)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":180:17)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":183:17)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":180:21)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":180:37)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":181:17)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":182:21)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":184:24)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":184:25)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":184:34)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":184:37)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":184:51)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":184:17)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":184:52)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":185:38)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":185:17)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":186:43)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":186:17)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":187:42)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":187:36)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":187:17)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":187:50)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:17)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":191:17)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:26)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:58)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:59)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:68)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:82)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:21)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":188:88)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":189:17)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":190:21)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":192:17)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":195:17)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":192:28)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":192:42)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":192:21)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":192:61)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":193:17)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":194:21)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":196:39)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":196:53)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":196:59)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":196:32)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":196:17)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":196:63)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":197:17)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":200:17)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":197:21)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":197:37)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":198:17)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":199:21)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:35)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:49)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:62)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:80)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:83)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:30)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:17)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":202:84)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":203:17)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":206:17)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":203:21)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":203:35)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":203:48)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":203:51)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":203:65)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":204:17)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":205:21)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":208:43)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":208:29)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":208:17)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":210:29)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":210:24)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":210:17)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":210:40)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":212:20)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":213:13)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":216:13)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":213:17)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":213:33)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":214:13)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":215:30)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":215:17)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":217:13)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":220:13)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":217:17)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":217:33)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":218:13)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":219:30)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":219:17)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:24)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":157:23)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:5)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":249:5)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:13)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:9)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:16)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:20)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:18)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":230:5)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":231:9)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":248:9)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":232:13)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":232:17)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":233:13)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":233:34)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":235:13)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":247:13)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":235:17)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":235:25)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":235:27)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":235:30)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":235:38)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":235:40)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":236:13)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":243:13)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":245:13)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":237:32)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":237:24)
#loc390 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":237:17)
#loc391 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:17)
#loc392 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":242:17)
#loc393 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:25)
#loc394 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:21)
#loc395 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:28)
#loc396 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:32)
#loc397 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:30)
#loc398 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":240:17)
#loc399 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":241:41)
#loc400 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":241:34)
#loc401 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":241:21)
#loc402 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:37)
#loc403 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":239:36)
#loc404 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":246:17)
#loc405 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:24)
#loc406 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":229:23)
#loc407 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":253:1)
#loc408 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":287:1)
#loc409 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":255:5)
#loc410 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":255:9)
#loc411 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":255:11)
#loc412 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":256:5)
#loc413 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":256:9)
#loc414 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":258:13)
#loc415 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":258:12)
#loc416 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":258:5)
#loc417 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:5)
#loc418 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":264:5)
#loc419 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:13)
#loc420 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:9)
#loc421 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:16)
#loc422 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:20)
#loc423 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:18)
#loc424 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":260:5)
#loc425 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":263:16)
#loc426 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":263:9)
#loc427 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:24)
#loc428 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":259:23)
#loc429 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:5)
#loc430 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":286:5)
#loc431 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:13)
#loc432 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:9)
#loc433 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:16)
#loc434 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:20)
#loc435 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:18)
#loc436 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":266:5)
#loc437 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":267:9)
#loc438 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":285:9)
#loc439 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":268:13)
#loc440 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":268:17)
#loc441 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":269:13)
#loc442 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":269:34)
#loc443 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":272:13)
#loc444 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":284:13)
#loc445 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":272:17)
#loc446 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":272:24)
#loc447 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":273:13)
#loc448 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":280:13)
#loc449 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":282:13)
#loc450 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":274:32)
#loc451 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":274:24)
#loc452 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":274:17)
#loc453 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:17)
#loc454 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":279:17)
#loc455 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:25)
#loc456 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:21)
#loc457 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:28)
#loc458 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:32)
#loc459 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:30)
#loc460 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":277:17)
#loc461 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":278:41)
#loc462 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":278:34)
#loc463 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":278:21)
#loc464 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:37)
#loc465 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":276:36)
#loc466 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":283:27)
#loc467 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":283:17)
#loc468 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:24)
#loc469 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_17.c":265:23)
#loc470 = loc(fused[#loc1, #loc2])
#loc471 = loc(fused[#loc3, #loc4])
#loc472 = loc(fused[#loc5, #loc6])
#loc473 = loc(fused[#loc7, #loc8])
#loc474 = loc(fused[#loc9, #loc10])
#loc475 = loc(fused[#loc11, #loc12])
#loc476 = loc(fused[#loc13, #loc14])
#loc477 = loc(fused[#loc15, #loc16])
#loc478 = loc(fused[#loc17, #loc18])
#loc479 = loc(fused[#loc19, #loc20])
#loc480 = loc(fused[#loc22, #loc23])
#loc481 = loc(fused[#loc24, #loc25])
#loc482 = loc(fused[#loc24, #loc26])
#loc483 = loc(fused[#loc27, #loc28])
#loc484 = loc(fused[#loc31, #loc29])
#loc485 = loc(fused[#loc32, #loc33])
#loc486 = loc(fused[#loc35, #loc34])
#loc487 = loc(fused[#loc36, #loc37])
#loc488 = loc(fused[#loc39, #loc33])
#loc489 = loc(fused[#loc40, #loc41])
#loc490 = loc(fused[#loc42, #loc43])
#loc491 = loc(fused[#loc44, #loc45])
#loc492 = loc(fused[#loc46, #loc47])
#loc493 = loc(fused[#loc48, #loc49])
#loc494 = loc(fused[#loc50, #loc51])
#loc495 = loc(fused[#loc52, #loc53])
#loc496 = loc(fused[#loc58, #loc59])
#loc497 = loc(fused[#loc60, #loc61])
#loc498 = loc(fused[#loc62, #loc63])
#loc499 = loc(fused[#loc64, #loc61])
#loc500 = loc(fused[#loc66, #loc67])
#loc501 = loc(fused[#loc69, #loc70])
#loc502 = loc(fused[#loc71, #loc72])
#loc503 = loc(fused[#loc75, #loc73])
#loc504 = loc(fused[#loc79, #loc76])
#loc505 = loc(fused[#loc83, #loc84])
#loc506 = loc(fused[#loc85, #loc86])
#loc507 = loc(fused[#loc88, #loc89])
#loc508 = loc(fused[#loc90, #loc91])
#loc509 = loc(fused[#loc92, #loc93])
#loc510 = loc(fused[#loc94, #loc86])
#loc511 = loc(fused[#loc96, #loc97])
#loc512 = loc(fused[#loc100, #loc101])
#loc513 = loc(fused[#loc102, #loc97])
#loc514 = loc(fused[#loc108, #loc109])
#loc515 = loc(fused[#loc110, #loc111])
#loc516 = loc(fused[#loc112, #loc113])
#loc517 = loc(fused[#loc114, #loc111])
#loc518 = loc(fused[#loc118, #loc119])
#loc519 = loc(fused[#loc122, #loc123])
#loc520 = loc(fused[#loc124, #loc125])
#loc521 = loc(fused[#loc126, #loc127])
#loc522 = loc(fused[#loc129, #loc130])
#loc523 = loc(fused[#loc131, #loc125])
#loc524 = loc(fused[#loc135, #loc133])
#loc525 = loc(fused[#loc138, #loc139])
#loc526 = loc(fused[#loc141, #loc142])
#loc527 = loc(fused[#loc143, #loc144])
#loc528 = loc(fused[#loc145, #loc142])
#loc529 = loc(fused[#loc148, #loc149])
#loc530 = loc(fused[#loc150, #loc151])
#loc531 = loc(fused[#loc152, #loc149])
#loc532 = loc(fused[#loc156, #loc155])
#loc533 = loc(fused[#loc157, #loc158])
#loc534 = loc(fused[#loc160, #loc159])
#loc535 = loc(fused[#loc161, #loc162])
#loc536 = loc(fused[#loc164, #loc158])
#loc537 = loc(fused[#loc165, #loc166])
#loc538 = loc(fused[#loc167, #loc168])
#loc539 = loc(fused[#loc169, #loc170])
#loc540 = loc(fused[#loc171, #loc172])
#loc541 = loc(fused[#loc173, #loc174])
#loc542 = loc(fused[#loc175, #loc176, #loc177, #loc172])
#loc543 = loc(fused[#loc180, #loc178])
#loc544 = loc(fused[#loc181, #loc182])
#loc545 = loc(fused[#loc184, #loc183])
#loc546 = loc(fused[#loc185, #loc186])
#loc547 = loc(fused[#loc188, #loc182])
#loc548 = loc(fused[#loc193, #loc192])
#loc549 = loc(fused[#loc196, #loc195])
#loc550 = loc(fused[#loc197, #loc198])
#loc551 = loc(fused[#loc199, #loc200])
#loc552 = loc(fused[#loc201, #loc202])
#loc553 = loc(fused[#loc203, #loc204])
#loc554 = loc(fused[#loc205, #loc206])
#loc555 = loc(fused[#loc211, #loc212])
#loc558 = loc(fused[#loc222, #loc223])
#loc559 = loc(fused[#loc226, #loc227])
#loc560 = loc(fused[#loc230, #loc229])
#loc561 = loc(fused[#loc232, #loc233])
#loc562 = loc(fused[#loc234, #loc235])
#loc563 = loc(fused[#loc234, #loc236])
#loc564 = loc(fused[#loc237, #loc238])
#loc565 = loc(fused[#loc241, #loc239])
#loc566 = loc(fused[#loc242, #loc243])
#loc567 = loc(fused[#loc245, #loc244])
#loc568 = loc(fused[#loc246, #loc247])
#loc569 = loc(fused[#loc249, #loc243])
#loc570 = loc(fused[#loc250, #loc251])
#loc571 = loc(fused[#loc252, #loc253])
#loc572 = loc(fused[#loc254, #loc255])
#loc573 = loc(fused[#loc256, #loc257])
#loc574 = loc(fused[#loc258, #loc259])
#loc575 = loc(fused[#loc260, #loc261])
#loc576 = loc(fused[#loc262, #loc263])
#loc577 = loc(fused[#loc268, #loc269])
#loc578 = loc(fused[#loc270, #loc271])
#loc579 = loc(fused[#loc272, #loc273])
#loc580 = loc(fused[#loc274, #loc271])
#loc581 = loc(fused[#loc276, #loc277])
#loc582 = loc(fused[#loc279, #loc280])
#loc583 = loc(fused[#loc281, #loc282])
#loc584 = loc(fused[#loc284, #loc283])
#loc585 = loc(fused[#loc286, #loc285])
#loc586 = loc(fused[#loc289, #loc290])
#loc587 = loc(fused[#loc291, #loc292])
#loc588 = loc(fused[#loc294, #loc295])
#loc589 = loc(fused[#loc296, #loc297])
#loc590 = loc(fused[#loc298, #loc299])
#loc591 = loc(fused[#loc300, #loc292])
#loc592 = loc(fused[#loc302, #loc303])
#loc593 = loc(fused[#loc306, #loc307])
#loc594 = loc(fused[#loc308, #loc303])
#loc595 = loc(fused[#loc314, #loc315])
#loc596 = loc(fused[#loc316, #loc317])
#loc597 = loc(fused[#loc318, #loc319])
#loc598 = loc(fused[#loc320, #loc317])
#loc599 = loc(fused[#loc324, #loc325])
#loc600 = loc(fused[#loc328, #loc329])
#loc601 = loc(fused[#loc330, #loc331])
#loc602 = loc(fused[#loc332, #loc333])
#loc603 = loc(fused[#loc335, #loc336])
#loc604 = loc(fused[#loc337, #loc331])
#loc605 = loc(fused[#loc341, #loc339])
#loc606 = loc(fused[#loc344, #loc345])
#loc607 = loc(fused[#loc347, #loc348])
#loc608 = loc(fused[#loc349, #loc350])
#loc609 = loc(fused[#loc351, #loc348])
#loc610 = loc(fused[#loc354, #loc355])
#loc611 = loc(fused[#loc356, #loc357])
#loc612 = loc(fused[#loc358, #loc355])
#loc613 = loc(fused[#loc362, #loc361])
#loc614 = loc(fused[#loc363, #loc364])
#loc615 = loc(fused[#loc366, #loc365])
#loc616 = loc(fused[#loc367, #loc368])
#loc617 = loc(fused[#loc370, #loc364])
#loc618 = loc(fused[#loc371, #loc372])
#loc619 = loc(fused[#loc373, #loc374])
#loc620 = loc(fused[#loc375, #loc376])
#loc621 = loc(fused[#loc377, #loc378])
#loc622 = loc(fused[#loc379, #loc380])
#loc623 = loc(fused[#loc382, #loc384])
#loc624 = loc(fused[#loc385, #loc386, #loc387, #loc378])
#loc625 = loc(fused[#loc390, #loc388])
#loc626 = loc(fused[#loc391, #loc392])
#loc627 = loc(fused[#loc394, #loc393])
#loc628 = loc(fused[#loc395, #loc396])
#loc629 = loc(fused[#loc398, #loc392])
#loc630 = loc(fused[#loc403, #loc402])
#loc631 = loc(fused[#loc406, #loc405])
#loc632 = loc(fused[#loc407, #loc408])
#loc633 = loc(fused[#loc409, #loc410])
#loc634 = loc(fused[#loc409, #loc411])
#loc635 = loc(fused[#loc412, #loc413])
#loc636 = loc(fused[#loc416, #loc414])
#loc637 = loc(fused[#loc417, #loc418])
#loc638 = loc(fused[#loc420, #loc419])
#loc639 = loc(fused[#loc421, #loc422])
#loc640 = loc(fused[#loc424, #loc418])
#loc641 = loc(fused[#loc426, #loc425])
#loc642 = loc(fused[#loc428, #loc427])
#loc643 = loc(fused[#loc429, #loc430])
#loc644 = loc(fused[#loc432, #loc431])
#loc645 = loc(fused[#loc433, #loc434])
#loc646 = loc(fused[#loc436, #loc430])
#loc647 = loc(fused[#loc437, #loc438])
#loc648 = loc(fused[#loc439, #loc440])
#loc649 = loc(fused[#loc441, #loc442])
#loc650 = loc(fused[#loc443, #loc444])
#loc651 = loc(fused[#loc445, #loc446])
#loc652 = loc(fused[#loc447, #loc448, #loc449, #loc444])
#loc653 = loc(fused[#loc452, #loc450])
#loc654 = loc(fused[#loc453, #loc454])
#loc655 = loc(fused[#loc456, #loc455])
#loc656 = loc(fused[#loc457, #loc458])
#loc657 = loc(fused[#loc460, #loc454])
#loc658 = loc(fused[#loc465, #loc464])
#loc659 = loc(fused[#loc469, #loc468])
