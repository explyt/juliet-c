!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":23:69)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":23:85)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":54:73)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":54:89)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":102:10)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":102:14)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":102:20)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":102:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc153 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc54, #loc55])
#loc177 = loc(fused[#loc79, #loc80])
#loc178 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!ty__twoIntsStruct>, %2 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc13)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc14)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc15)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc152)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc158)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc160)
        cir.scope {
          %6 = cir.const #cir.int<0> : !s32i loc(#loc32)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc32)
          cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc162)
          cir.for : cond {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc35)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc35)
            %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc163)
            cir.condition(%11) loc(#loc36)
          } body {
            cir.scope {
              %8 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc39)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %9 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
              %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
              cir.store %8, %12 : !s32i, !cir.ptr<!s32i> loc(#loc165)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %14 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
              %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
              cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc166)
            } loc(#loc164)
            cir.yield loc(#loc31)
          } step {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc47)
            cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc167)
            cir.yield loc(#loc161)
          } loc(#loc161)
        } loc(#loc161)
      } loc(#loc159)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
      cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc168)
    } loc(#loc157)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_badSink(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
    cir.return loc(#loc17)
  } loc(#loc154)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc54, #loc55])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc56)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!ty__twoIntsStruct>, %2 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc60)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc62)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.return loc(#loc53)
  } loc(#loc169)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc64)
  } loc(#loc171)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc173)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %17 : !s32i loc(#loc181)
  } loc(#loc176)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc183)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc186)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc188)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc112)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc113)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc113)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc189)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc190)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
      cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
        %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc193)
        cir.if %15 {
          %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc121)
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc123)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
        } loc(#loc194)
      } loc(#loc192)
      cir.scope {
        %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc196)
        cir.scope {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc130)
          cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc198)
          cir.for : cond {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc132)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc133)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc133)
            %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc199)
            cir.condition(%18) loc(#loc134)
          } body {
            cir.scope {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
              %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc138)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
              %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc201)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc140)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
              %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
              %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc202)
            } loc(#loc200)
            cir.yield loc(#loc129)
          } step {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc145)
            cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc203)
            cir.yield loc(#loc197)
          } loc(#loc197)
        } loc(#loc197)
      } loc(#loc195)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
      cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc204)
    } loc(#loc187)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41_goodG2BSink(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc149)
    cir.return loc(#loc103)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":28:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":24:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":25:22)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":25:27)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":25:28)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":25:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":27:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":27:10)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":30:1)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":48:1)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":32:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":32:21)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":33:12)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":33:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":34:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":46:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":36:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":36:37)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":37:9)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":44:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":38:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":38:20)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":43:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:22)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:18)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:25)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:29)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:27)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":40:13)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":41:40)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":41:28)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":41:17)
#loc41 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":42:40)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":42:28)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":42:17)
#loc45 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:35)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":39:34)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":45:16)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":45:9)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":47:68)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":47:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":54:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":59:1)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":55:1)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":56:22)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":56:27)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":56:28)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":56:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":58:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":58:10)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":87:1)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":90:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":89:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":89:13)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":107:15)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":109:15)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":112:15)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":114:15)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":102:1)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":117:1)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":103:1)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":105:27)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":105:22)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":105:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":107:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":108:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":108:65)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":109:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":112:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":113:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":113:64)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":114:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":116:12)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":116:5)
#loc97 = loc("/usr/include/stdlib.h":672:1)
#loc98 = loc("/usr/include/stdlib.h":672:45)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":71:23)
#loc100 = loc("/usr/include/stdlib.h":756:1)
#loc101 = loc("/usr/include/stdlib.h":756:70)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":62:1)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":85:1)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":64:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":64:21)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":65:12)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":65:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":66:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":83:5)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":68:9)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":68:87)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":68:55)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":68:62)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":68:66)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":68:86)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":69:9)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":73:9)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":69:13)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":69:27)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":70:9)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":71:13)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":72:13)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":72:18)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":74:9)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":81:9)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":75:13)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":75:20)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:13)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":80:13)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:22)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:18)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:25)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:29)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:27)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":77:13)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":78:40)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":78:17)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":78:28)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":78:29)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":79:40)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":79:17)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":79:28)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":79:29)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:35)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":76:34)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":82:16)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":82:9)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":84:72)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_41.c":84:5)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc152 = loc(fused[#loc5, #loc6])
#loc154 = loc(fused[#loc16, #loc17])
#loc155 = loc(fused[#loc18, #loc19])
#loc156 = loc(fused[#loc21, #loc20])
#loc157 = loc(fused[#loc22, #loc23])
#loc158 = loc(fused[#loc24, #loc25])
#loc159 = loc(fused[#loc26, #loc27])
#loc160 = loc(fused[#loc28, #loc29])
#loc161 = loc(fused[#loc30, #loc31])
#loc162 = loc(fused[#loc33, #loc32])
#loc163 = loc(fused[#loc34, #loc35])
#loc164 = loc(fused[#loc37, #loc31])
#loc165 = loc(fused[#loc40, #loc38])
#loc166 = loc(fused[#loc44, #loc42])
#loc167 = loc(fused[#loc47, #loc46])
#loc168 = loc(fused[#loc49, #loc48])
#loc169 = loc(fused[#loc52, #loc53])
#loc171 = loc(fused[#loc63, #loc64])
#loc172 = loc(fused[#loc65, #loc66])
#loc173 = loc(fused[#loc67, #loc68])
#loc174 = loc(fused[#loc69, #loc70])
#loc175 = loc(fused[#loc71, #loc72])
#loc176 = loc(fused[#loc77, #loc78])
#loc179 = loc(fused[#loc88, #loc89])
#loc180 = loc(fused[#loc92, #loc93])
#loc181 = loc(fused[#loc96, #loc95])
#loc182 = loc(fused[#loc97, #loc98])
#loc183 = loc(fused[#loc100, #loc101])
#loc184 = loc(fused[#loc102, #loc103])
#loc185 = loc(fused[#loc104, #loc105])
#loc186 = loc(fused[#loc107, #loc106])
#loc187 = loc(fused[#loc108, #loc109])
#loc188 = loc(fused[#loc110, #loc111])
#loc189 = loc(fused[#loc114, #loc115])
#loc190 = loc(fused[#loc113, #loc115])
#loc191 = loc(fused[#loc112, #loc111])
#loc192 = loc(fused[#loc116, #loc117])
#loc193 = loc(fused[#loc118, #loc119])
#loc194 = loc(fused[#loc120, #loc117])
#loc195 = loc(fused[#loc124, #loc125])
#loc196 = loc(fused[#loc126, #loc127])
#loc197 = loc(fused[#loc128, #loc129])
#loc198 = loc(fused[#loc131, #loc130])
#loc199 = loc(fused[#loc132, #loc133])
#loc200 = loc(fused[#loc135, #loc129])
#loc201 = loc(fused[#loc137, #loc136])
#loc202 = loc(fused[#loc141, #loc140])
#loc203 = loc(fused[#loc145, #loc144])
#loc204 = loc(fused[#loc147, #loc146])
