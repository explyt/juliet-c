!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":55:21)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":55:28)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":148:25)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":148:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc218 = loc(fused[#loc15, #loc16])
#loc283 = loc(fused[#loc182, #loc183])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ofstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc211)
  cir.global "private" constant cir_private @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_443badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc212)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc213)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc214)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc215)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc216)
  cir.func internal private @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L7badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc218)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    cir.scope {
      %1 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc220)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc21)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %3 = cir.const #cir.int<16> : !s32i loc(#loc221)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%1, %2, %3) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc216)
          cir.yield loc(#loc26)
        } loc(#loc26)
        cir.yield loc(#loc25)
      } catch [#cir.unwind {
        cir.resume loc(#loc25)
      }] loc(#loc25)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc216)
          cir.yield loc(#loc27)
        } loc(#loc27)
        cir.yield loc(#loc25)
      } catch [#cir.unwind {
        cir.resume loc(#loc25)
      }] loc(#loc25)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc216)
    } loc(#loc219)
    cir.return loc(#loc14)
  } loc(#loc217)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc222)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc223)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc34)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc225)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc226)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc227)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc228)
  cir.func private @close(!s32i) -> !s32i loc(#loc229)
  cir.func @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_443badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc212)
    %3 = cir.get_global @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L7badSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc50)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc232)
    %4 = cir.get_global @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_443badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc212)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc212)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc235)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc236)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc237)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc238)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc239)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc62)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc238)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc65)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc65)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc239)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc71)
            %19 = cir.const #cir.int<1> : !u32i loc(#loc72)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc72)
            %21 = cir.const #cir.int<6> : !u32i loc(#loc73)
            %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc73)
            %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc74)
            cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc242)
            cir.scope {
              %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc80)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc244)
              cir.if %76 {
                cir.break loc(#loc82)
              } loc(#loc245)
            } loc(#loc243)
            %24 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc246)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %26 = cir.const #cir.int<16> : !u64i loc(#loc247)
            cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
            %27 = cir.const #cir.int<2> : !s32i loc(#loc90)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc90)
            %29 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc249)
            %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc34)
            %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
            %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc93)
            %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc94)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc95)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc250)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc98)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc98)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc99)
            %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc100)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc251)
            cir.scope {
              %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %74 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc253)
              %75 = cir.const #cir.int<16> : !u64i loc(#loc254)
              %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc254)
              %77 = cir.call @connect(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc110)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc111)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc255)
              cir.if %80 {
                cir.break loc(#loc113)
              } loc(#loc256)
            } loc(#loc252)
            %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
            %41 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc116)
            %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc117)
            %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc257)
            %44 = cir.const #cir.int<1> : !u64i loc(#loc258)
            %45 = cir.const #cir.int<4096> : !s32i loc(#loc122)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc122)
            %47 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc259)
            %49 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc124)
            %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc260)
            %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc261)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc127)
            %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc127)
            cir.store %55, %8 : !s32i, !cir.ptr<!s32i> loc(#loc262)
            cir.scope {
              %73 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc133)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc133)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc264)
              %77 = cir.ternary(%76, true {
                %78 = cir.const #true loc(#loc134)
                cir.yield %78 : !cir.bool loc(#loc134)
              }, false {
                %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc135)
                %79 = cir.const #cir.int<0> : !s32i loc(#loc136)
                %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc265)
                %81 = cir.ternary(%80, true {
                  %82 = cir.const #true loc(#loc134)
                  cir.yield %82 : !cir.bool loc(#loc134)
                }, false {
                  %82 = cir.const #false loc(#loc134)
                  cir.yield %82 : !cir.bool loc(#loc134)
                }) : (!cir.bool) -> !cir.bool loc(#loc134)
                cir.yield %81 : !cir.bool loc(#loc134)
              }) : (!cir.bool) -> !cir.bool loc(#loc134)
              cir.if %77 {
                cir.break loc(#loc138)
              } loc(#loc266)
            } loc(#loc263)
            %56 = cir.const #cir.int<0> : !s8i loc(#loc139)
            %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            %58 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc142)
            %61 = cir.const #cir.int<1> : !u64i loc(#loc267)
            %62 = cir.binop(div, %60, %61) : !u64i loc(#loc268)
            %63 = cir.binop(add, %58, %62) : !u64i loc(#loc269)
            %64 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc145)
            cir.store %56, %64 : !s8i, !cir.ptr<!s8i> loc(#loc270)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            %66 = cir.const #cir.int<13> : !s8i loc(#loc147)
            %67 = cir.cast(integral, %66 : !s8i), !s32i loc(#loc147)
            %68 = cir.call @strchr(%65, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc148)
            cir.store %68, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
            cir.scope {
              %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc153)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s8i loc(#loc155)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc274)
              } loc(#loc273)
            } loc(#loc272)
            %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %70 = cir.const #cir.int<10> : !s8i loc(#loc159)
            %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc159)
            %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc160)
            cir.store %72, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
            cir.scope {
              %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s8i loc(#loc167)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc278)
              } loc(#loc277)
            } loc(#loc276)
          } loc(#loc241)
          cir.yield loc(#loc68)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc170)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc170)
          cir.condition(%19) loc(#loc170)
        } loc(#loc240)
      } loc(#loc240)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc173)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc174)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc174)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc280)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc176)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc177)
        } loc(#loc281)
      } loc(#loc279)
    } loc(#loc234)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc178)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc178)
    cir.return loc(#loc46)
  } loc(#loc230)
  cir.func internal private @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L11goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc182, #loc183])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc283)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.scope {
      %1 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc285)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc188)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
      %3 = cir.const #cir.int<16> : !s32i loc(#loc221)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%1, %2, %3) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc216)
          cir.yield loc(#loc191)
        } loc(#loc191)
        cir.yield loc(#loc190)
      } catch [#cir.unwind {
        cir.resume loc(#loc190)
      }] loc(#loc190)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc216)
          cir.yield loc(#loc192)
        } loc(#loc192)
        cir.yield loc(#loc190)
      } catch [#cir.unwind {
        cir.resume loc(#loc190)
      }] loc(#loc190)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%1) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc216)
    } loc(#loc284)
    cir.return loc(#loc181)
  } loc(#loc282)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc195)
  cir.func internal private @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc288)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc289)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc211)
    %3 = cir.get_global @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L11goodG2BSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc201)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc289)
    %4 = cir.get_global @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc211)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc211)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc202)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc204)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc195)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc195)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc204)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc206)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc206)
    cir.return loc(#loc197)
  } loc(#loc287)
  cir.func @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_444goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44L7goodG2BEv() : () -> () loc(#loc210)
    cir.return loc(#loc209)
  } loc(#loc291)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":162:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":162:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":70:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":70:37)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":786:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":787:34)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":927:7)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":936:7)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":999:7)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":1004:7)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":869:7)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":870:9)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":55:1)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":63:1)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":56:1)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":57:5)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":62:5)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":58:9)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":58:18)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":60:33)
#loc23 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":928:57)
#loc24 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":928:67)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":55:13)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":60:20)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":61:20)
#loc28 = loc("/usr/include/string.h":407:1)
#loc29 = loc("/usr/include/string.h":408:33)
#loc30 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc31 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc32 = loc("/usr/include/arpa/inet.h":34:1)
#loc33 = loc("/usr/include/arpa/inet.h":34:47)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":99:49)
#loc35 = loc("/usr/include/netinet/in.h":402:1)
#loc36 = loc("/usr/include/netinet/in.h":403:40)
#loc37 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc38 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc39 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc40 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc41 = loc("/usr/include/string.h":226:1)
#loc42 = loc("/usr/include/string.h":227:50)
#loc43 = loc("/usr/include/unistd.h":358:1)
#loc44 = loc("/usr/include/unistd.h":358:27)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":65:1)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":141:1)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":67:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":67:12)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":69:5)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":69:32)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":71:12)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":71:5)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":72:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":138:5)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":77:9)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":77:13)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":78:9)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":78:28)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":79:9)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":79:15)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":80:9)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":80:32)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":81:9)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":81:37)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":81:26)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":81:33)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":82:9)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":127:17)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":83:9)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":126:9)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":92:36)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":92:45)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":92:58)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":92:29)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":92:13)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":92:69)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":93:13)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":96:13)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":93:17)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":93:34)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":94:13)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":95:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":97:20)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":97:21)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":97:30)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":97:33)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":97:47)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":97:13)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":97:48)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":98:34)
#loc91 = loc("/usr/include/netinet/in.h":249:5)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":98:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":99:39)
#loc94 = loc("/usr/include/netinet/in.h":251:20)
#loc95 = loc("/usr/include/netinet/in.h":33:15)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":99:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":99:59)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":100:38)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":100:32)
#loc100 = loc("/usr/include/netinet/in.h":250:15)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":100:13)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":100:46)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:13)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":104:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:25)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:58)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:59)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:68)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:82)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:17)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":101:88)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":102:13)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":103:17)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:31)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:55)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:62)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:60)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:46)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:69)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:72)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:83)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:88)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:103)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:113)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:114)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:117)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:26)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:13)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":108:118)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":109:13)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":112:13)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":109:17)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":109:31)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":109:44)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":109:47)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":109:61)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":110:13)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":111:17)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":114:57)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":114:13)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":114:18)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":114:28)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":114:41)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":114:52)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":114:53)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":116:30)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":116:36)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":116:23)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":116:13)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":116:40)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":117:13)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":120:13)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":117:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":118:13)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":119:28)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":119:18)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":119:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":121:30)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":121:36)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":121:23)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":121:13)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":121:40)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":122:13)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":125:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":122:17)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":123:13)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":124:28)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":124:18)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":124:17)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":127:16)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":128:9)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":131:9)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":128:13)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":128:30)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":129:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":130:26)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":130:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":140:5)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":140:13)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":148:1)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":156:1)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":149:1)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":150:5)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":155:5)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":151:9)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":151:18)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":153:33)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":148:13)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":153:20)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":154:20)
#loc193 = loc("/usr/include/string.h":149:1)
#loc194 = loc("/usr/include/string.h":150:14)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":165:18)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":158:1)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":167:1)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":160:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":160:12)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":161:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":161:32)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":163:12)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":163:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":165:5)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":165:12)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":166:5)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":166:13)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":169:1)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":172:1)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ofstream_44.cpp":171:5)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc7, #loc8])
#loc215 = loc(fused[#loc9, #loc10])
#loc216 = loc(fused[#loc11, #loc12])
#loc217 = loc(fused[#loc13, #loc14])
#loc219 = loc(fused[#loc18, #loc19])
#loc220 = loc(fused[#loc20, #loc21])
#loc221 = loc(fused[#loc23, #loc24])
#loc222 = loc(fused[#loc28, #loc29])
#loc223 = loc(fused[#loc30, #loc31])
#loc224 = loc(fused[#loc32, #loc33])
#loc225 = loc(fused[#loc35, #loc36])
#loc226 = loc(fused[#loc37, #loc38])
#loc227 = loc(fused[#loc39, #loc40])
#loc228 = loc(fused[#loc41, #loc42])
#loc229 = loc(fused[#loc43, #loc44])
#loc230 = loc(fused[#loc45, #loc46])
#loc231 = loc(fused[#loc47, #loc48])
#loc232 = loc(fused[#loc49, #loc50])
#loc233 = loc(fused[#loc52, #loc51])
#loc234 = loc(fused[#loc53, #loc54])
#loc235 = loc(fused[#loc55, #loc56])
#loc236 = loc(fused[#loc57, #loc58])
#loc237 = loc(fused[#loc59, #loc60])
#loc238 = loc(fused[#loc61, #loc62])
#loc239 = loc(fused[#loc63, #loc64])
#loc240 = loc(fused[#loc67, #loc68])
#loc241 = loc(fused[#loc69, #loc70])
#loc242 = loc(fused[#loc75, #loc76])
#loc243 = loc(fused[#loc77, #loc78])
#loc244 = loc(fused[#loc79, #loc80])
#loc245 = loc(fused[#loc81, #loc78])
#loc246 = loc(fused[#loc83, #loc84])
#loc247 = loc(fused[#loc86, #loc87])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc92, #loc90])
#loc250 = loc(fused[#loc96, #loc97])
#loc251 = loc(fused[#loc101, #loc102])
#loc252 = loc(fused[#loc103, #loc104])
#loc253 = loc(fused[#loc106, #loc107])
#loc254 = loc(fused[#loc108, #loc109])
#loc255 = loc(fused[#loc110, #loc111])
#loc256 = loc(fused[#loc112, #loc104])
#loc257 = loc(fused[#loc118, #loc119])
#loc258 = loc(fused[#loc120, #loc121])
#loc259 = loc(fused[#loc122, #loc123])
#loc260 = loc(fused[#loc122, #loc124])
#loc261 = loc(fused[#loc120, #loc125])
#loc262 = loc(fused[#loc128, #loc129])
#loc263 = loc(fused[#loc130, #loc131])
#loc264 = loc(fused[#loc132, #loc133])
#loc265 = loc(fused[#loc135, #loc136])
#loc266 = loc(fused[#loc137, #loc131])
#loc267 = loc(fused[#loc143, #loc144])
#loc268 = loc(fused[#loc142, #loc144])
#loc269 = loc(fused[#loc141, #loc144])
#loc270 = loc(fused[#loc140, #loc139])
#loc271 = loc(fused[#loc149, #loc150])
#loc272 = loc(fused[#loc151, #loc152])
#loc273 = loc(fused[#loc154, #loc152])
#loc274 = loc(fused[#loc157, #loc155])
#loc275 = loc(fused[#loc161, #loc162])
#loc276 = loc(fused[#loc163, #loc164])
#loc277 = loc(fused[#loc166, #loc164])
#loc278 = loc(fused[#loc169, #loc167])
#loc279 = loc(fused[#loc171, #loc172])
#loc280 = loc(fused[#loc173, #loc174])
#loc281 = loc(fused[#loc175, #loc172])
#loc282 = loc(fused[#loc180, #loc181])
#loc284 = loc(fused[#loc185, #loc186])
#loc285 = loc(fused[#loc187, #loc188])
#loc286 = loc(fused[#loc193, #loc194])
#loc287 = loc(fused[#loc196, #loc197])
#loc288 = loc(fused[#loc198, #loc199])
#loc289 = loc(fused[#loc200, #loc201])
#loc290 = loc(fused[#loc203, #loc202])
#loc291 = loc(fused[#loc208, #loc209])
