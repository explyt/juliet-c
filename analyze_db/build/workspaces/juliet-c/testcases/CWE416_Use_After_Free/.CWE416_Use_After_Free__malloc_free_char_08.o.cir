!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc252)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc253)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc254)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc260)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc262)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc263)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc264)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc267)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc33)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc268)
        } loc(#loc266)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc35)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc269)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc40)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc42)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc42)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc44)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc270)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc45)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
      } loc(#loc261)
    } loc(#loc259)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc272)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc49)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc49)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } loc(#loc273)
    } loc(#loc271)
    cir.return loc(#loc10)
  } loc(#loc256)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc275)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc276)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc277)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc278)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc274)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc66)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.return %2 : !s32i loc(#loc280)
  } loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc285)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc77)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc77)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc81)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc81)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc287)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc288)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc292)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc92)
            %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc93)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
          } loc(#loc293)
        } loc(#loc291)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc95)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc96)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc96)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc96)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc294)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc100)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc102)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc103)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc102)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc104)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc295)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc105)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
      } loc(#loc286)
    } loc(#loc284)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc297)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc109)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc109)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } else {
      } loc(#loc298)
    } loc(#loc296)
    cir.return loc(#loc70)
  } loc(#loc281)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc117)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    cir.return %2 : !s32i loc(#loc300)
  } loc(#loc299)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc302)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc305)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc127)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc127)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc130)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc131)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc131)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc307)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc308)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc309)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc310)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc312)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc141)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc143)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
          } loc(#loc313)
        } loc(#loc311)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc145)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc146)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc146)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc146)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc314)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc150)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc150)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc152)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc153)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc152)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc154)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc315)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc155)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
      } loc(#loc306)
    } loc(#loc304)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc317)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc159)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc159)
      cir.if %4 {
      } loc(#loc318)
    } loc(#loc316)
    cir.return loc(#loc120)
  } loc(#loc301)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc166)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc323)
      %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc170)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc170)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc175)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc175)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc176)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc177)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc178)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc178)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc325)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc326)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc327)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc186)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc330)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc188)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc190)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc188)
          } loc(#loc331)
        } loc(#loc329)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc191)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc192)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc193)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc194)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc193)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc193)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc332)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc197)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc197)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc199)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc200)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc199)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc201)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc333)
      } loc(#loc324)
    } loc(#loc322)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc335)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc204)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc204)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc208)
      } loc(#loc336)
    } loc(#loc334)
    cir.return loc(#loc163)
  } loc(#loc319)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc338)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc213)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc341)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc217)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc217)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc220)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc221)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc221)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc343)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc344)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc345)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc229)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc348)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc231)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc232)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc233)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc231)
          } loc(#loc349)
        } loc(#loc347)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc234)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc235)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc236)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc237)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc236)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc236)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc350)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc240)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc240)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc242)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc243)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc242)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc244)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc351)
      } loc(#loc342)
    } loc(#loc340)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc353)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc247)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc247)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc251)
      } loc(#loc354)
    } loc(#loc352)
    cir.return loc(#loc210)
  } loc(#loc337)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":37:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":57:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":39:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":39:12)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":41:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":41:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":42:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":50:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":42:8)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":42:26)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":43:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:24)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:31)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:35)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:46)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:47)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":44:9)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:9)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:37)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:13)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:21)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:27)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:28)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:34)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":45:33)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:16)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:22)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:27)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:31)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:9)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":46:32)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:23)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:9)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:14)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":47:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":49:9)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":49:14)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":51:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":56:5)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":51:8)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":51:26)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":52:5)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":54:19)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":54:9)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":165:1)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":171:1)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":167:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":167:14)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":168:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":168:14)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":169:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":169:14)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":170:5)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":170:14)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":25:1)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":28:1)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":27:12)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":27:5)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":81:19)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":64:1)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":90:1)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":66:5)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":66:12)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":68:12)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":68:5)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":69:5)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":77:5)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":69:8)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":69:26)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":70:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:24)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:31)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:35)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:46)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:47)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":71:9)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:9)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:37)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:13)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:21)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:27)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:28)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:34)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":72:33)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:16)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:22)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:27)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:31)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:9)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":73:32)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:23)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:9)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:14)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:18)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":74:19)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":76:9)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":76:14)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":78:5)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":89:5)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":78:8)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":78:27)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":79:5)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":82:5)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":84:5)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":81:9)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":30:1)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":33:1)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":32:12)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":32:5)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":93:1)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":114:1)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":95:5)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":95:12)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":97:12)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":97:5)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":98:5)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":106:5)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":98:8)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":98:26)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":99:5)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:24)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:31)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:35)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:46)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:47)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":100:9)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:9)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:37)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:13)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:21)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:27)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:28)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:34)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":101:33)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:16)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:22)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:27)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:31)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:9)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":102:32)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:23)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:9)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:14)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:18)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":103:19)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":105:9)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":105:14)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":107:5)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":113:5)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":107:8)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":107:26)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":108:5)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":117:1)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":141:1)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":119:5)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":119:12)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":121:12)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":121:5)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":122:5)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":134:5)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":122:8)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":122:27)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":123:5)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":126:5)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":128:5)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":125:19)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":125:9)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:24)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:31)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:35)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:46)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:47)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":129:9)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:9)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:37)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:13)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:21)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:27)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:28)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:34)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":130:33)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:16)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:22)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:27)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:31)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:9)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":131:32)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:23)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:9)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:14)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:18)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":132:19)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":135:5)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":140:5)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":135:8)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":135:26)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":136:5)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":138:19)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":138:9)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":144:1)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":163:1)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":146:5)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":146:12)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":148:12)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":148:5)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":149:5)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":156:5)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":149:8)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":149:26)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":150:5)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:24)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:31)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:35)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:46)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:47)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":151:9)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:9)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:37)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:13)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:21)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:27)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:28)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:34)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":152:33)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:16)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:22)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:27)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:31)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:9)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":153:32)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:23)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:9)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:14)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:18)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":154:19)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":157:5)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":162:5)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":157:8)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":157:26)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":158:5)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":160:19)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_char_08.c":160:9)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc7, #loc8])
#loc256 = loc(fused[#loc9, #loc10])
#loc257 = loc(fused[#loc11, #loc12])
#loc258 = loc(fused[#loc14, #loc13])
#loc259 = loc(fused[#loc15, #loc16])
#loc260 = loc(fused[#loc17, #loc18])
#loc261 = loc(fused[#loc19, #loc16])
#loc262 = loc(fused[#loc22, #loc23])
#loc263 = loc(fused[#loc21, #loc23])
#loc264 = loc(fused[#loc20, #loc24])
#loc265 = loc(fused[#loc25, #loc24])
#loc266 = loc(fused[#loc26, #loc27])
#loc267 = loc(fused[#loc28, #loc29])
#loc268 = loc(fused[#loc30, #loc27])
#loc269 = loc(fused[#loc38, #loc39])
#loc270 = loc(fused[#loc41, #loc40])
#loc271 = loc(fused[#loc47, #loc48])
#loc272 = loc(fused[#loc49, #loc50])
#loc273 = loc(fused[#loc51, #loc48])
#loc274 = loc(fused[#loc54, #loc55])
#loc275 = loc(fused[#loc56, #loc57])
#loc276 = loc(fused[#loc58, #loc59])
#loc277 = loc(fused[#loc60, #loc61])
#loc278 = loc(fused[#loc62, #loc63])
#loc279 = loc(fused[#loc64, #loc65])
#loc280 = loc(fused[#loc67, #loc66])
#loc281 = loc(fused[#loc69, #loc70])
#loc282 = loc(fused[#loc71, #loc72])
#loc283 = loc(fused[#loc74, #loc73])
#loc284 = loc(fused[#loc75, #loc76])
#loc285 = loc(fused[#loc77, #loc78])
#loc286 = loc(fused[#loc79, #loc76])
#loc287 = loc(fused[#loc82, #loc83])
#loc288 = loc(fused[#loc81, #loc83])
#loc289 = loc(fused[#loc80, #loc84])
#loc290 = loc(fused[#loc85, #loc84])
#loc291 = loc(fused[#loc86, #loc87])
#loc292 = loc(fused[#loc88, #loc89])
#loc293 = loc(fused[#loc90, #loc87])
#loc294 = loc(fused[#loc98, #loc99])
#loc295 = loc(fused[#loc101, #loc100])
#loc296 = loc(fused[#loc107, #loc108])
#loc297 = loc(fused[#loc109, #loc110])
#loc298 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc299 = loc(fused[#loc115, #loc116])
#loc300 = loc(fused[#loc118, #loc117])
#loc301 = loc(fused[#loc119, #loc120])
#loc302 = loc(fused[#loc121, #loc122])
#loc303 = loc(fused[#loc124, #loc123])
#loc304 = loc(fused[#loc125, #loc126])
#loc305 = loc(fused[#loc127, #loc128])
#loc306 = loc(fused[#loc129, #loc126])
#loc307 = loc(fused[#loc132, #loc133])
#loc308 = loc(fused[#loc131, #loc133])
#loc309 = loc(fused[#loc130, #loc134])
#loc310 = loc(fused[#loc135, #loc134])
#loc311 = loc(fused[#loc136, #loc137])
#loc312 = loc(fused[#loc138, #loc139])
#loc313 = loc(fused[#loc140, #loc137])
#loc314 = loc(fused[#loc148, #loc149])
#loc315 = loc(fused[#loc151, #loc150])
#loc316 = loc(fused[#loc157, #loc158])
#loc317 = loc(fused[#loc159, #loc160])
#loc318 = loc(fused[#loc161, #loc158])
#loc319 = loc(fused[#loc162, #loc163])
#loc320 = loc(fused[#loc164, #loc165])
#loc321 = loc(fused[#loc167, #loc166])
#loc322 = loc(fused[#loc168, #loc169])
#loc323 = loc(fused[#loc170, #loc171])
#loc324 = loc(fused[#loc172, #loc173, #loc174, #loc169])
#loc325 = loc(fused[#loc179, #loc180])
#loc326 = loc(fused[#loc178, #loc180])
#loc327 = loc(fused[#loc177, #loc181])
#loc328 = loc(fused[#loc182, #loc181])
#loc329 = loc(fused[#loc183, #loc184])
#loc330 = loc(fused[#loc185, #loc186])
#loc331 = loc(fused[#loc187, #loc184])
#loc332 = loc(fused[#loc195, #loc196])
#loc333 = loc(fused[#loc198, #loc197])
#loc334 = loc(fused[#loc202, #loc203])
#loc335 = loc(fused[#loc204, #loc205])
#loc336 = loc(fused[#loc206, #loc203])
#loc337 = loc(fused[#loc209, #loc210])
#loc338 = loc(fused[#loc211, #loc212])
#loc339 = loc(fused[#loc214, #loc213])
#loc340 = loc(fused[#loc215, #loc216])
#loc341 = loc(fused[#loc217, #loc218])
#loc342 = loc(fused[#loc219, #loc216])
#loc343 = loc(fused[#loc222, #loc223])
#loc344 = loc(fused[#loc221, #loc223])
#loc345 = loc(fused[#loc220, #loc224])
#loc346 = loc(fused[#loc225, #loc224])
#loc347 = loc(fused[#loc226, #loc227])
#loc348 = loc(fused[#loc228, #loc229])
#loc349 = loc(fused[#loc230, #loc227])
#loc350 = loc(fused[#loc238, #loc239])
#loc351 = loc(fused[#loc241, #loc240])
#loc352 = loc(fused[#loc245, #loc246])
#loc353 = loc(fused[#loc247, #loc248])
#loc354 = loc(fused[#loc249, #loc246])
