!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc126)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc127)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%4) loc(#loc13)
      } do {
        cir.scope {
          %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc15)
          cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc17)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc19)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc20)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc131)
          cir.break loc(#loc21)
        } loc(#loc129)
        cir.yield loc(#loc12)
      } loc(#loc128)
    } loc(#loc128)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc133)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc134)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc29)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc30)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc135)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc34)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc34)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc35)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc37)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc136)
      cir.scope {
        %27 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc40)
        cir.store %28, %3 : !u64i, !cir.ptr<!u64i> loc(#loc138)
        cir.for : cond {
          %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %30 = cir.const #cir.int<100> : !s32i loc(#loc43)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc43)
          %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc139)
          cir.condition(%32) loc(#loc44)
        } body {
          cir.scope {
            %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %30 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
            %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc47)
            %32 = cir.load %31 : !cir.ptr<!s8i>, !s8i loc(#loc47)
            %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
            %34 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc49)
            %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc50)
            cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc141)
          } loc(#loc140)
          cir.yield loc(#loc39)
        } step {
          %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc52)
          %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc53)
          cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc142)
          cir.yield loc(#loc137)
        } loc(#loc137)
      } loc(#loc137)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc54)
      %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc54)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc56)
      %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc58)
      cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc143)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    } loc(#loc132)
    cir.return loc(#loc4)
  } loc(#loc124)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc148)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc149)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc75)
        cir.condition(%4) loc(#loc75)
      } do {
        cir.scope {
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
          cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc79)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc79)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc81)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc82)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc153)
          cir.break loc(#loc83)
        } loc(#loc151)
        cir.yield loc(#loc74)
      } loc(#loc150)
    } loc(#loc150)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc155)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc156)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc91)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc92)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc93)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc92)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc92)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc96)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc96)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc97)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc98)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc97)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc99)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc158)
      cir.scope {
        %27 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc102)
        cir.store %28, %3 : !u64i, !cir.ptr<!u64i> loc(#loc160)
        cir.for : cond {
          %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc104)
          %30 = cir.const #cir.int<100> : !s32i loc(#loc105)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc105)
          %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc161)
          cir.condition(%32) loc(#loc106)
        } body {
          cir.scope {
            %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %30 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
            %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc109)
            %32 = cir.load %31 : !cir.ptr<!s8i>, !s8i loc(#loc109)
            %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
            %34 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc111)
            %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc112)
            cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc163)
          } loc(#loc162)
          cir.yield loc(#loc101)
        } step {
          %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc114)
          %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc115)
          cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc164)
          cir.yield loc(#loc159)
        } loc(#loc159)
      } loc(#loc159)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc116)
      %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc116)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc118)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc119)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc118)
      %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc120)
      cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc165)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    } loc(#loc154)
    cir.return loc(#loc66)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":49:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":25:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":25:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":26:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":26:26)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":27:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":27:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":35:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":28:11)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":29:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":32:16)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":32:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:14)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":33:15)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":34:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":36:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":48:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":37:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":37:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":38:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":38:24)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":39:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":40:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":45:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:18)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:21)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:23)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":43:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:18)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":44:31)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":42:30)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:23)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:14)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":46:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":47:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":47:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":83:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":86:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":85:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":85:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":56:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":81:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":58:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":58:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":59:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":59:26)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":60:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":60:28)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":61:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":67:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":61:11)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":62:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":64:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":64:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:19)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:14)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":65:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":66:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":68:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":80:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":69:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":69:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":70:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":70:24)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:16)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:24)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:29)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:33)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":71:34)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:25)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:16)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:20)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":72:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":77:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:18)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:14)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:21)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:25)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":75:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:30)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:23)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:18)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:19)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":76:31)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:31)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":74:30)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:23)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:14)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:18)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":78:19)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":79:19)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_16.c":79:9)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc14, #loc12])
#loc130 = loc(fused[#loc16, #loc15])
#loc131 = loc(fused[#loc18, #loc17])
#loc132 = loc(fused[#loc22, #loc23])
#loc133 = loc(fused[#loc24, #loc25])
#loc134 = loc(fused[#loc26, #loc27])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc37, #loc34])
#loc137 = loc(fused[#loc38, #loc39])
#loc138 = loc(fused[#loc41, #loc40])
#loc139 = loc(fused[#loc42, #loc43])
#loc140 = loc(fused[#loc45, #loc39])
#loc141 = loc(fused[#loc48, #loc51])
#loc142 = loc(fused[#loc53, #loc52])
#loc143 = loc(fused[#loc55, #loc54])
#loc144 = loc(fused[#loc61, #loc62])
#loc145 = loc(fused[#loc63, #loc64])
#loc146 = loc(fused[#loc65, #loc66])
#loc147 = loc(fused[#loc67, #loc68])
#loc148 = loc(fused[#loc69, #loc70])
#loc149 = loc(fused[#loc71, #loc72])
#loc150 = loc(fused[#loc73, #loc74])
#loc151 = loc(fused[#loc76, #loc74])
#loc152 = loc(fused[#loc78, #loc77])
#loc153 = loc(fused[#loc80, #loc79])
#loc154 = loc(fused[#loc84, #loc85])
#loc155 = loc(fused[#loc86, #loc87])
#loc156 = loc(fused[#loc88, #loc89])
#loc157 = loc(fused[#loc94, #loc95])
#loc158 = loc(fused[#loc99, #loc96])
#loc159 = loc(fused[#loc100, #loc101])
#loc160 = loc(fused[#loc103, #loc102])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc107, #loc101])
#loc163 = loc(fused[#loc110, #loc113])
#loc164 = loc(fused[#loc115, #loc114])
#loc165 = loc(fused[#loc117, #loc116])
