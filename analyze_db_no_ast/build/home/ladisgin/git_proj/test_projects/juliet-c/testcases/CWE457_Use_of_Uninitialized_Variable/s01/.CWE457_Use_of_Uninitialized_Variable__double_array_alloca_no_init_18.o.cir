!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printDoubleLine(!cir.double) loc(#loc127)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc130)
    %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc7)
    cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc131)
    cir.goto "source" loc(#loc132)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc13)
    cir.goto "sink" loc(#loc133)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc16)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc19)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc135)
      cir.for : cond {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc21)
        %11 = cir.const #cir.int<10> : !s32i loc(#loc22)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc136)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc23)
        cir.condition(%13) loc(#loc23)
      } body {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc25)
          %11 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc27)
          %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc25)
          cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc28)
        } loc(#loc137)
        cir.yield loc(#loc18)
      } step {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc30)
        cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc138)
        cir.yield loc(#loc134)
      } loc(#loc134)
    } loc(#loc134)
    cir.return loc(#loc4)
  } loc(#loc128)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc139)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc41)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc41)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc41)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc41)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc41)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc144)
    %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc41)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc41)
    cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc145)
    cir.goto "source" loc(#loc146)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc47)
    cir.goto "sink" loc(#loc147)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc50)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc53)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      cir.for : cond {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc55)
        %11 = cir.const #cir.int<10> : !s32i loc(#loc56)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc150)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc57)
        cir.condition(%13) loc(#loc57)
      } body {
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc59)
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc60)
          %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc61)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc62)
          cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc152)
        } loc(#loc151)
        cir.yield loc(#loc52)
      } step {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc63)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc64)
        cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc153)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc148)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc155)
      cir.scope {
        %10 = cir.const #cir.int<0> : !s32i loc(#loc71)
        cir.store %10, %9 : !s32i, !cir.ptr<!s32i> loc(#loc157)
        cir.for : cond {
          %11 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc73)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc74)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc158)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc75)
          cir.condition(%14) loc(#loc75)
        } body {
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc77)
            %12 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc79)
            %14 = cir.load %13 : !cir.ptr<!cir.double>, !cir.double loc(#loc77)
            cir.call @printDoubleLine(%14) : (!cir.double) -> () loc(#loc80)
          } loc(#loc159)
          cir.yield loc(#loc70)
        } step {
          %11 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc82)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc160)
          cir.yield loc(#loc156)
        } loc(#loc156)
      } loc(#loc156)
    } loc(#loc154)
    cir.return loc(#loc38)
  } loc(#loc142)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc87)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc87)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc87)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc87)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc163)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc164)
    %8 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc87)
    cir.store %9, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc165)
    cir.goto "source" loc(#loc166)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc95)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc98)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc168)
      cir.for : cond {
        %11 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc101)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc169)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc102)
        cir.condition(%14) loc(#loc102)
      } body {
        cir.scope {
          %11 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
          %12 = cir.cast(int_to_float, %11 : !s32i), !cir.double loc(#loc104)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc105)
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc107)
          cir.store %12, %15 : !cir.double, !cir.ptr<!cir.double> loc(#loc171)
        } loc(#loc170)
        cir.yield loc(#loc97)
      } step {
        %11 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc109)
        cir.store %12, %6 : !s32i, !cir.ptr<!s32i> loc(#loc172)
        cir.yield loc(#loc167)
      } loc(#loc167)
    } loc(#loc167)
    cir.goto "sink" loc(#loc173)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc112)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc115)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      cir.for : cond {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc118)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc176)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc119)
        cir.condition(%14) loc(#loc119)
      } body {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc121)
          %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc123)
          %14 = cir.load %13 : !cir.ptr<!cir.double>, !cir.double loc(#loc121)
          cir.call @printDoubleLine(%14) : (!cir.double) -> () loc(#loc124)
        } loc(#loc177)
        cir.yield loc(#loc114)
      } step {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc126)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc178)
        cir.yield loc(#loc174)
      } loc(#loc174)
    } loc(#loc174)
    cir.return loc(#loc84)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":40:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":24:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":25:22)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":34:9)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":34:13)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":25:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":26:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":26:10)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":27:1)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":30:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":30:10)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":31:1)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":38:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:15)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:13)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:18)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:20)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:19)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":36:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":37:29)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":37:34)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":37:35)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":37:13)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:25)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":35:24)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":101:1)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":105:1)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":103:5)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":103:13)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":104:5)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":104:13)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":47:1)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":72:1)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":49:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":49:14)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":50:22)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":59:9)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":59:13)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":50:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":51:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":51:10)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":52:1)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":55:5)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":55:10)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":56:1)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:9)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":63:9)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:15)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:13)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:18)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:20)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:19)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":61:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":62:31)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":62:13)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":62:18)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":62:19)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:25)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":60:24)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":65:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":71:5)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":66:9)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":66:13)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:9)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":70:9)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:15)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:13)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:18)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:20)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:19)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":68:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":69:29)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":69:34)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":69:35)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":69:13)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:25)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":67:24)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":75:1)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":99:1)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":77:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":77:14)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":78:22)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":83:9)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":83:13)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":93:9)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":93:13)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":78:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":79:5)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":79:10)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":80:1)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:9)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":87:9)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:15)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:13)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:18)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:20)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:19)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":85:9)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":86:31)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":86:13)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":86:18)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":86:19)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:25)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":84:24)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":89:5)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":89:10)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":90:1)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:9)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":97:9)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:15)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:13)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:18)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:20)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:19)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":95:9)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":96:29)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":96:34)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":96:35)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":96:13)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:25)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_18.c":94:24)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc8, #loc9])
#loc131 = loc(fused[#loc10, #loc7])
#loc132 = loc(fused[#loc11, #loc12])
#loc133 = loc(fused[#loc14, #loc15])
#loc134 = loc(fused[#loc17, #loc18])
#loc135 = loc(fused[#loc20, #loc19])
#loc136 = loc(fused[#loc21, #loc22])
#loc137 = loc(fused[#loc24, #loc18])
#loc138 = loc(fused[#loc30, #loc29])
#loc139 = loc(fused[#loc31, #loc32])
#loc140 = loc(fused[#loc33, #loc34])
#loc141 = loc(fused[#loc35, #loc36])
#loc142 = loc(fused[#loc37, #loc38])
#loc143 = loc(fused[#loc39, #loc40])
#loc144 = loc(fused[#loc42, #loc43])
#loc145 = loc(fused[#loc44, #loc41])
#loc146 = loc(fused[#loc45, #loc46])
#loc147 = loc(fused[#loc48, #loc49])
#loc148 = loc(fused[#loc51, #loc52])
#loc149 = loc(fused[#loc54, #loc53])
#loc150 = loc(fused[#loc55, #loc56])
#loc151 = loc(fused[#loc58, #loc52])
#loc152 = loc(fused[#loc60, #loc59])
#loc153 = loc(fused[#loc64, #loc63])
#loc154 = loc(fused[#loc65, #loc66])
#loc155 = loc(fused[#loc67, #loc68])
#loc156 = loc(fused[#loc69, #loc70])
#loc157 = loc(fused[#loc72, #loc71])
#loc158 = loc(fused[#loc73, #loc74])
#loc159 = loc(fused[#loc76, #loc70])
#loc160 = loc(fused[#loc82, #loc81])
#loc161 = loc(fused[#loc83, #loc84])
#loc162 = loc(fused[#loc85, #loc86])
#loc163 = loc(fused[#loc88, #loc89])
#loc164 = loc(fused[#loc90, #loc91])
#loc165 = loc(fused[#loc92, #loc87])
#loc166 = loc(fused[#loc93, #loc94])
#loc167 = loc(fused[#loc96, #loc97])
#loc168 = loc(fused[#loc99, #loc98])
#loc169 = loc(fused[#loc100, #loc101])
#loc170 = loc(fused[#loc103, #loc97])
#loc171 = loc(fused[#loc105, #loc104])
#loc172 = loc(fused[#loc109, #loc108])
#loc173 = loc(fused[#loc110, #loc111])
#loc174 = loc(fused[#loc113, #loc114])
#loc175 = loc(fused[#loc116, #loc115])
#loc176 = loc(fused[#loc117, #loc118])
#loc177 = loc(fused[#loc120, #loc114])
#loc178 = loc(fused[#loc126, #loc125])
