!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":116:10)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":116:14)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":116:20)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":116:32)
#loc240 = loc(fused[#loc104, #loc105])
#loc241 = loc(fused[#loc106, #loc107])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc205)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc206)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc211)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc213)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc17)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc214)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc19)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc19)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %19, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc21)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc22)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc215)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc26)
    %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc28)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc28)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc216)
    %34 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %36 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc33)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc217)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc37)
    %43 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc39)
    %47 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %48 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc220)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
    %50 = cir.call %49() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc44)
    %51 = cir.cast(int_to_bool, %50 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %51 ^bb2, ^bb3 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %52 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.store %52, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.br ^bb4 loc(#loc47)
  ^bb3:  // pred: ^bb1
    %53 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.store %53, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc224)
  ^bb6:  // pred: ^bb5
    %54 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    %56 = cir.const #cir.int<67> : !s32i loc(#loc56)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc57)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc57)
    cir.libc.memset %60 bytes from %55 set to %56 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %62 = cir.cast(integral, %61 : !s32i), !s8i loc(#loc61)
    %63 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc62)
    %66 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %62, %67 : !s8i, !cir.ptr<!s8i> loc(#loc226)
    %68 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc65)
    %69 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    %70 = cir.call @strlen(%69) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc65)
    cir.store %70, %1 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // pred: ^bb6
    %71 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc71)
    cir.store %72, %0 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb8 loc(#loc228)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %73 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %74 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %75 = cir.cmp(lt, %73, %74) : !u64i, !cir.bool loc(#loc230)
    cir.brcond %75 ^bb9, ^bb13 loc(#loc75)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc231)
  ^bb10:  // pred: ^bb9
    %76 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %77 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %78 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %77 : !u64i), !cir.ptr<!s8i> loc(#loc79)
    %79 = cir.load %78 : !cir.ptr<!s8i>, !s8i loc(#loc77)
    %80 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %81 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !u64i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %79, %82 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc70)
  ^bb12:  // pred: ^bb11
    %83 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %84 = cir.unary(inc, %83) : !u64i, !u64i loc(#loc83)
    cir.store %84, %0 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb8 loc(#loc228)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc70)
  ^bb14:  // pred: ^bb13
    %85 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc84)
    %87 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %89 = cir.binop(sub, %87, %88) nsw : !s32i loc(#loc85)
    %90 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc87)
    cir.store %86, %91 : !s8i, !cir.ptr<!s8i> loc(#loc234)
    %92 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%92) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb15 loc(#loc54)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc8)
  } loc(#loc208)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    cir.return loc(#loc91)
  } loc(#loc235)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc237)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc101)
  cir.func @main(%arg0: !s32i loc(fused[#loc104, #loc105]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc106, #loc107])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc108)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc109)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc110)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc110)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc111)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc98)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_loop_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_12_good() : () -> () loc(#loc113)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_loop_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_12_bad() : () -> () loc(#loc117)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc101)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %17 : !s32i loc(#loc244)
  } loc(#loc239)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc248)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc250)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc132)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc132)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc132)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc132)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc132)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc251)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc132)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc134)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc134)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc134)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc134)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc134)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    cir.store %19, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc136)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc137)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc137)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc137)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc252)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc141)
    %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc143)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc143)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc145)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc253)
    %34 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
    %36 = cir.const #cir.int<65> : !s32i loc(#loc147)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc148)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc148)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc148)
    cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc254)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc152)
    %43 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc154)
    %47 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    %48 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc257)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc257)
    %50 = cir.call %49() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc159)
    %51 = cir.cast(int_to_bool, %50 : !s32i), !cir.bool loc(#loc159)
    cir.brcond %51 ^bb2, ^bb3 loc(#loc258)
  ^bb2:  // pred: ^bb1
    %52 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    cir.store %52, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.br ^bb4 loc(#loc162)
  ^bb3:  // pred: ^bb1
    %53 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    cir.store %53, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc261)
  ^bb6:  // pred: ^bb5
    %54 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
    %56 = cir.const #cir.int<67> : !s32i loc(#loc171)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc172)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc172)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc172)
    cir.libc.memset %60 bytes from %55 set to %56 : !cir.ptr<!void>, !s32i, !u64i loc(#loc262)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %62 = cir.cast(integral, %61 : !s32i), !s8i loc(#loc176)
    %63 = cir.const #cir.int<100> : !s32i loc(#loc177)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc177)
    %66 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
    %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc179)
    cir.store %62, %67 : !s8i, !cir.ptr<!s8i> loc(#loc263)
    %68 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc180)
    %69 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
    %70 = cir.call @strlen(%69) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc180)
    cir.store %70, %1 : !u64i, !cir.ptr<!u64i> loc(#loc264)
    cir.br ^bb7 loc(#loc265)
  ^bb7:  // pred: ^bb6
    %71 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc186)
    cir.store %72, %0 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.br ^bb8 loc(#loc265)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %73 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc188)
    %74 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %75 = cir.cmp(lt, %73, %74) : !u64i, !cir.bool loc(#loc267)
    cir.brcond %75 ^bb9, ^bb13 loc(#loc190)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc268)
  ^bb10:  // pred: ^bb9
    %76 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    %77 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc193)
    %78 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %77 : !u64i), !cir.ptr<!s8i> loc(#loc194)
    %79 = cir.load %78 : !cir.ptr<!s8i>, !s8i loc(#loc192)
    %80 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    %81 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !u64i), !cir.ptr<!s8i> loc(#loc196)
    cir.store %79, %82 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    cir.br ^bb11 loc(#loc185)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc185)
  ^bb12:  // pred: ^bb11
    %83 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc197)
    %84 = cir.unary(inc, %83) : !u64i, !u64i loc(#loc198)
    cir.store %84, %0 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb8 loc(#loc265)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc185)
  ^bb14:  // pred: ^bb13
    %85 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc199)
    %87 = cir.const #cir.int<100> : !s32i loc(#loc200)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %89 = cir.binop(sub, %87, %88) nsw : !s32i loc(#loc200)
    %90 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc202)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc202)
    cir.store %86, %91 : !s8i, !cir.ptr<!s8i> loc(#loc271)
    %92 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%92) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    cir.br ^bb15 loc(#loc169)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc123)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":23:1)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":57:1)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":43:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":43:16)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":43:19)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":44:9)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":44:22)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":25:5)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":25:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":26:36)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":27:5)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":27:37)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":28:12)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":28:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":28:32)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":28:35)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":28:5)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":28:36)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":29:27)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":29:5)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":29:19)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":29:22)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":29:23)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":30:12)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":30:28)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":30:33)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":30:37)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":30:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":30:38)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":31:29)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":31:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":31:20)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":31:24)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":31:25)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":32:5)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":41:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":32:8)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":32:33)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":33:5)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":36:5)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":38:5)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":35:16)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":35:9)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":40:16)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":40:9)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":42:5)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":56:5)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":45:16)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":45:22)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":45:27)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":45:31)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":45:9)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":45:32)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":46:23)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":46:14)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":46:18)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":46:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":47:19)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":47:26)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":47:9)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":47:30)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:9)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":53:9)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:18)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:14)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:21)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:25)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:23)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":51:9)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":52:23)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":52:28)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":52:29)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":52:18)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":52:13)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:35)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":50:34)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":54:23)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":54:14)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":54:18)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":54:9)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":55:19)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":55:9)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":101:1)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":104:1)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":103:5)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":103:13)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":121:15)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":123:15)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":126:15)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":128:15)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":116:1)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":131:1)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":117:1)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":119:27)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":119:22)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":119:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":121:5)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":122:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":122:54)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":123:5)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":126:5)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":127:5)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":127:53)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":128:5)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":130:12)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":130:5)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":65:1)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":99:1)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":85:9)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":85:16)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":85:19)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":86:9)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":86:22)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":67:5)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":67:12)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":68:5)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":68:36)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":69:5)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":69:37)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":70:12)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":70:27)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":70:32)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":70:35)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":70:5)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":70:36)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":71:27)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":71:5)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":71:19)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":71:22)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":71:23)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":72:12)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":72:28)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":72:33)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":72:37)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":72:5)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":72:38)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":73:29)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":73:5)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":73:20)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":73:24)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":73:25)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":74:5)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":83:5)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":74:8)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":74:33)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":75:5)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":78:5)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":80:5)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":77:16)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":77:9)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":82:16)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":82:9)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":84:5)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":98:5)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":87:16)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":87:22)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":87:27)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":87:31)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":87:9)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":87:32)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":88:23)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":88:14)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":88:18)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":88:9)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":89:19)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":89:26)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":89:9)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":89:30)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:9)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":95:9)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:18)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:14)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:21)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:25)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:23)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":93:9)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":94:23)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":94:28)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":94:29)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":94:18)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":94:13)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:35)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":92:34)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":96:23)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":96:14)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":96:18)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":96:9)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":97:19)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_loop_12.c":97:9)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc9, #loc10])
#loc210 = loc(fused[#loc9, #loc11])
#loc211 = loc(fused[#loc12, #loc13])
#loc212 = loc(fused[#loc14, #loc15])
#loc213 = loc(fused[#loc16, #loc17])
#loc214 = loc(fused[#loc18, #loc19])
#loc215 = loc(fused[#loc24, #loc25])
#loc216 = loc(fused[#loc27, #loc26])
#loc217 = loc(fused[#loc35, #loc36])
#loc218 = loc(fused[#loc38, #loc37])
#loc219 = loc(fused[#loc42, #loc43])
#loc220 = loc(fused[#loc44, #loc45])
#loc221 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc222 = loc(fused[#loc50, #loc49])
#loc223 = loc(fused[#loc52, #loc51])
#loc224 = loc(fused[#loc53, #loc54])
#loc225 = loc(fused[#loc59, #loc60])
#loc226 = loc(fused[#loc64, #loc61])
#loc227 = loc(fused[#loc67, #loc68])
#loc228 = loc(fused[#loc69, #loc70])
#loc229 = loc(fused[#loc72, #loc71])
#loc230 = loc(fused[#loc73, #loc74])
#loc231 = loc(fused[#loc76, #loc70])
#loc232 = loc(fused[#loc81, #loc79])
#loc233 = loc(fused[#loc83, #loc82])
#loc234 = loc(fused[#loc87, #loc84])
#loc235 = loc(fused[#loc90, #loc91])
#loc236 = loc(fused[#loc92, #loc93])
#loc237 = loc(fused[#loc94, #loc95])
#loc238 = loc(fused[#loc96, #loc97])
#loc239 = loc(fused[#loc102, #loc103])
#loc242 = loc(fused[#loc113, #loc114])
#loc243 = loc(fused[#loc117, #loc118])
#loc244 = loc(fused[#loc121, #loc120])
#loc245 = loc(fused[#loc122, #loc123])
#loc246 = loc(fused[#loc124, #loc125])
#loc247 = loc(fused[#loc124, #loc126])
#loc248 = loc(fused[#loc127, #loc128])
#loc249 = loc(fused[#loc129, #loc130])
#loc250 = loc(fused[#loc131, #loc132])
#loc251 = loc(fused[#loc133, #loc134])
#loc252 = loc(fused[#loc139, #loc140])
#loc253 = loc(fused[#loc142, #loc141])
#loc254 = loc(fused[#loc150, #loc151])
#loc255 = loc(fused[#loc153, #loc152])
#loc256 = loc(fused[#loc157, #loc158])
#loc257 = loc(fused[#loc159, #loc160])
#loc258 = loc(fused[#loc161, #loc162, #loc163, #loc158])
#loc259 = loc(fused[#loc165, #loc164])
#loc260 = loc(fused[#loc167, #loc166])
#loc261 = loc(fused[#loc168, #loc169])
#loc262 = loc(fused[#loc174, #loc175])
#loc263 = loc(fused[#loc179, #loc176])
#loc264 = loc(fused[#loc182, #loc183])
#loc265 = loc(fused[#loc184, #loc185])
#loc266 = loc(fused[#loc187, #loc186])
#loc267 = loc(fused[#loc188, #loc189])
#loc268 = loc(fused[#loc191, #loc185])
#loc269 = loc(fused[#loc196, #loc194])
#loc270 = loc(fused[#loc198, #loc197])
#loc271 = loc(fused[#loc202, #loc199])
