!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":21:66)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":21:73)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":44:70)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":44:77)
#loc79 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc42, #loc43])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc77)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc80)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc81)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc79)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc82)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc83)
    cir.store %arg0, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc12)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.store %6, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc82)
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc17)
    cir.store %8, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc80)
    cir.store %9, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc80)
    cir.br ^bb2 loc(#loc85)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc22)
    cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc86)
    cir.br ^bb3 loc(#loc85)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc25)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc25)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc87)
    cir.brcond %15 ^bb4, ^bb8 loc(#loc26)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc29)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc29)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc32)
    cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc35)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc90)
    cir.br ^bb3 loc(#loc85)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc38)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc39)
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc78)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc42, #loc43])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc93)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc92)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc95)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc96)
    cir.store %arg0, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc52)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc49)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc49)
    cir.store %6, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc95)
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc53)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    cir.store %8, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc93)
    cir.store %9, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc93)
    cir.br ^bb2 loc(#loc98)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc59)
    cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc99)
    cir.br ^bb3 loc(#loc98)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc62)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc62)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc100)
    cir.brcond %15 ^bb4, ^bb8 loc(#loc63)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc66)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc66)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc69)
    cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.br ^bb6 loc(#loc58)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc58)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc72)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc103)
    cir.br ^bb3 loc(#loc98)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc58)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc75)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc76)
    cir.br ^bb10 loc(#loc56)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc41)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":37:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":28:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":28:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":29:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":29:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":24:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":24:32)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":26:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":22:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":26:20)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":26:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":27:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":36:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":34:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:18)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:14)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:21)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:25)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:23)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":32:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":33:30)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":33:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":33:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":33:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":33:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":33:31)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:30)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":31:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":35:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":35:27)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":35:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":35:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":44:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":60:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":51:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":51:28)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":52:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":52:16)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":47:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":47:32)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":49:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":49:27)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":45:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":49:20)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":49:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":50:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":59:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":57:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:18)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:21)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:25)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:23)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":55:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":56:30)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":56:23)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":56:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":56:18)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":56:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":56:31)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:30)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":54:29)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":58:22)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":58:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":58:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_64b.c":58:9)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc11, #loc12])
#loc83 = loc(fused[#loc13, #loc14])
#loc84 = loc(fused[#loc18, #loc19])
#loc85 = loc(fused[#loc20, #loc21])
#loc86 = loc(fused[#loc23, #loc22])
#loc87 = loc(fused[#loc24, #loc25])
#loc88 = loc(fused[#loc27, #loc21])
#loc89 = loc(fused[#loc30, #loc33])
#loc90 = loc(fused[#loc35, #loc34])
#loc91 = loc(fused[#loc40, #loc41])
#loc93 = loc(fused[#loc44, #loc45])
#loc94 = loc(fused[#loc46, #loc47])
#loc95 = loc(fused[#loc48, #loc49])
#loc96 = loc(fused[#loc50, #loc51])
#loc97 = loc(fused[#loc55, #loc56])
#loc98 = loc(fused[#loc57, #loc58])
#loc99 = loc(fused[#loc60, #loc59])
#loc100 = loc(fused[#loc61, #loc62])
#loc101 = loc(fused[#loc64, #loc58])
#loc102 = loc(fused[#loc67, #loc70])
#loc103 = loc(fused[#loc72, #loc71])
