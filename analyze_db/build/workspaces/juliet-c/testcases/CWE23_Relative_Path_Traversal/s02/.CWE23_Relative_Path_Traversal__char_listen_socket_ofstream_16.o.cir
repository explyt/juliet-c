!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ofstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc232)
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_163badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc233)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc236)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc239)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc240)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc241)
  cir.func private @close(!s32i) -> !s32i loc(#loc242)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc243)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc244)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc245)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc246)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc248)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc233)
    %2 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_163badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc233)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc233)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%5) loc(#loc39)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc253)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc254)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc255)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc256)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc257)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc258)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc50)
            cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc256)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc52)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc52)
            cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc257)
            %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc55)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc55)
            cir.store %16, %9 : !u64i, !cir.ptr<!u64i> loc(#loc258)
            cir.scope {
              cir.do {
                cir.scope {
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc61)
                  %18 = cir.const #cir.int<1> : !u32i loc(#loc62)
                  %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc62)
                  %20 = cir.const #cir.int<6> : !u32i loc(#loc63)
                  %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc63)
                  %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
                  cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc261)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc70)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc70)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc263)
                    cir.if %78 {
                      cir.break loc(#loc72)
                    } loc(#loc264)
                  } loc(#loc262)
                  %23 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc265)
                  %24 = cir.const #cir.int<0> : !s32i loc(#loc75)
                  %25 = cir.const #cir.int<16> : !u64i loc(#loc266)
                  cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc267)
                  %26 = cir.const #cir.int<2> : !s32i loc(#loc80)
                  %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc80)
                  %28 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc268)
                  %29 = cir.const #cir.int<0> : !s32i loc(#loc83)
                  %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc83)
                  %31 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
                  %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
                  cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc269)
                  %33 = cir.const #cir.int<27015> : !s32i loc(#loc87)
                  %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc87)
                  %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
                  %36 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                  cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc270)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                    %76 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc272)
                    %77 = cir.const #cir.int<16> : !u64i loc(#loc273)
                    %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc273)
                    %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc99)
                    %80 = cir.const #cir.int<1> : !s32i loc(#loc100)
                    %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc100)
                    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc274)
                    cir.if %82 {
                      cir.break loc(#loc102)
                    } loc(#loc275)
                  } loc(#loc271)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %76 = cir.const #cir.int<5> : !s32i loc(#loc106)
                    %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc107)
                    %78 = cir.const #cir.int<1> : !s32i loc(#loc108)
                    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc108)
                    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc277)
                    cir.if %80 {
                      cir.break loc(#loc110)
                    } loc(#loc278)
                  } loc(#loc276)
                  %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                  %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc112)
                  %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc113)
                  %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc114)
                  cir.store %40, %8 : !s32i, !cir.ptr<!s32i> loc(#loc279)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc120)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc120)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc281)
                    cir.if %78 {
                      cir.break loc(#loc122)
                    } loc(#loc282)
                  } loc(#loc280)
                  %41 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
                  %43 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc125)
                  %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc126)
                  %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc283)
                  %46 = cir.const #cir.int<1> : !u64i loc(#loc284)
                  %47 = cir.const #cir.int<4096> : !s32i loc(#loc131)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc131)
                  %49 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc132)
                  %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc285)
                  %51 = cir.const #cir.int<1> : !s32i loc(#loc133)
                  %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc133)
                  %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc286)
                  %54 = cir.binop(mul, %46, %53) : !u64i loc(#loc287)
                  %55 = cir.const #cir.int<0> : !s32i loc(#loc135)
                  %56 = cir.call @recv(%41, %45, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc136)
                  %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc136)
                  cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc288)
                  cir.scope {
                    %75 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc142)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc142)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc290)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc143)
                      cir.yield %80 : !cir.bool loc(#loc143)
                    }, false {
                      %80 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                      %81 = cir.const #cir.int<0> : !s32i loc(#loc145)
                      %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc291)
                      %83 = cir.ternary(%82, true {
                        %84 = cir.const #true loc(#loc143)
                        cir.yield %84 : !cir.bool loc(#loc143)
                      }, false {
                        %84 = cir.const #false loc(#loc143)
                        cir.yield %84 : !cir.bool loc(#loc143)
                      }) : (!cir.bool) -> !cir.bool loc(#loc143)
                      cir.yield %83 : !cir.bool loc(#loc143)
                    }) : (!cir.bool) -> !cir.bool loc(#loc143)
                    cir.if %79 {
                      cir.break loc(#loc147)
                    } loc(#loc292)
                  } loc(#loc289)
                  %58 = cir.const #cir.int<0> : !s8i loc(#loc148)
                  %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                  %60 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc150)
                  %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                  %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc151)
                  %63 = cir.const #cir.int<1> : !u64i loc(#loc293)
                  %64 = cir.binop(div, %62, %63) : !u64i loc(#loc294)
                  %65 = cir.binop(add, %60, %64) : !u64i loc(#loc295)
                  %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc154)
                  cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc296)
                  %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                  %68 = cir.const #cir.int<13> : !s8i loc(#loc156)
                  %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc156)
                  %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc157)
                  cir.store %70, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
                  cir.scope {
                    %75 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc162)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s8i loc(#loc164)
                      %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                      cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc300)
                    } loc(#loc299)
                  } loc(#loc298)
                  %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                  %72 = cir.const #cir.int<10> : !s8i loc(#loc168)
                  %73 = cir.cast(integral, %72 : !s8i), !s32i loc(#loc168)
                  %74 = cir.call @strchr(%71, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc169)
                  cir.store %74, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
                  cir.scope {
                    %75 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc174)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s8i loc(#loc176)
                      %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                      cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc304)
                    } loc(#loc303)
                  } loc(#loc302)
                } loc(#loc260)
                cir.yield loc(#loc58)
              } while {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc179)
                %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc179)
                cir.condition(%18) loc(#loc179)
              } loc(#loc259)
            } loc(#loc259)
            cir.scope {
              %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc182)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc183)
              %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc183)
              %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc306)
              cir.if %20 {
                %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc186)
              } loc(#loc307)
            } loc(#loc305)
            cir.scope {
              %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc190)
              %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc190)
              %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc309)
              cir.if %20 {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc192)
                %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc193)
              } loc(#loc310)
            } loc(#loc308)
          } loc(#loc252)
          cir.break loc(#loc194)
        } loc(#loc251)
        cir.yield loc(#loc38)
      } loc(#loc250)
    } loc(#loc250)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc312)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc198)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc313)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc246)
          cir.yield loc(#loc203)
        } loc(#loc203)
        cir.yield loc(#loc202)
      } catch [#cir.unwind {
        cir.resume loc(#loc202)
      }] loc(#loc202)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc246)
          cir.yield loc(#loc204)
        } loc(#loc204)
        cir.yield loc(#loc202)
      } catch [#cir.unwind {
        cir.resume loc(#loc202)
      }] loc(#loc202)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc246)
    } loc(#loc311)
    cir.return loc(#loc32)
  } loc(#loc247)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc314)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc207)
  cir.func internal private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc316)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc232)
    %2 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc232)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc232)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc212)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc216)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc216)
        cir.condition(%5) loc(#loc216)
      } do {
        cir.scope {
          %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc218)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc207)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc207)
          %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
          cir.break loc(#loc220)
        } loc(#loc319)
        cir.yield loc(#loc215)
      } loc(#loc318)
    } loc(#loc318)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc321)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc224)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc313)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc246)
          cir.yield loc(#loc227)
        } loc(#loc227)
        cir.yield loc(#loc226)
      } catch [#cir.unwind {
        cir.resume loc(#loc226)
      }] loc(#loc226)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc246)
          cir.yield loc(#loc228)
        } loc(#loc228)
        cir.yield loc(#loc226)
      } catch [#cir.unwind {
        cir.resume loc(#loc226)
      }] loc(#loc226)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc246)
    } loc(#loc320)
    cir.return loc(#loc209)
  } loc(#loc315)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16L7goodG2BEv() : () -> () loc(#loc231)
    cir.return loc(#loc230)
  } loc(#loc322)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":159:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":159:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":58:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":58:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":786:7)
#loc24 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":787:34)
#loc25 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":927:7)
#loc26 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":936:7)
#loc27 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":999:7)
#loc28 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":1004:7)
#loc29 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":869:7)
#loc30 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":870:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":55:1)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":149:1)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":57:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":57:12)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":59:12)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":59:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":60:5)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":142:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":60:11)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":61:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":62:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":140:9)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":67:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":67:17)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":68:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":68:32)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":69:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":69:19)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":70:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":70:35)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":71:13)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":71:35)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":72:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":72:41)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":72:30)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":72:37)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":73:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":125:21)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":74:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":124:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":83:39)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":83:48)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":83:61)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":83:32)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":83:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":83:72)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":84:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":87:17)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":84:21)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":84:37)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":85:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":86:21)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":88:24)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":88:25)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":88:34)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":88:37)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":88:51)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":88:17)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":88:52)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":89:38)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":89:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":90:43)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":90:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":91:42)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":91:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":91:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":91:50)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:17)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":95:17)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:26)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:58)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:59)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:68)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:82)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":92:88)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":93:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":94:21)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":96:17)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":99:17)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":96:28)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":96:42)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":96:21)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":96:61)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":97:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":98:21)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":100:39)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":100:53)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":100:59)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":100:32)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":100:17)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":100:63)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":101:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":104:17)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":101:21)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":101:37)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":102:17)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":103:21)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:35)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:58)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:65)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:63)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:49)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:72)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:75)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:86)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:91)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:106)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:116)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:117)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:120)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:30)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":106:121)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":107:17)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":110:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":107:21)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":107:35)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":107:48)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":107:51)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":107:65)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":108:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":109:21)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":112:61)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":112:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":112:22)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":112:32)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":112:45)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":112:56)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":112:57)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":114:34)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":114:40)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":114:27)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":114:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":114:44)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":115:17)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":118:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":115:21)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":116:17)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":117:32)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":117:22)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":117:21)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":119:34)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":119:40)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":119:27)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":119:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":119:44)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":120:17)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":123:17)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":120:21)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":121:17)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":122:32)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":122:22)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":122:21)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":125:20)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":126:13)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":129:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":126:17)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":126:33)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":127:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":128:30)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":128:17)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":130:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":133:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":130:17)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":130:33)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":131:13)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":132:30)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":132:17)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":141:9)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":143:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":148:5)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":144:9)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":144:18)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":146:33)
#loc200 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":928:57)
#loc201 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":928:67)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":55:6)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":146:20)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":147:20)
#loc205 = loc("/usr/include/string.h":149:1)
#loc206 = loc("/usr/include/string.h":150:14)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":164:22)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":156:1)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":173:1)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":158:5)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":158:12)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":160:12)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":160:5)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":161:5)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":166:5)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":161:11)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":162:5)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":164:9)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":164:16)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":165:9)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":167:5)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":172:5)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":168:9)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":168:18)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":170:33)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":156:13)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":170:20)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":171:20)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":175:1)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":178:1)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_16.cpp":177:5)
#loc232 = loc(fused[#loc1, #loc2])
#loc233 = loc(fused[#loc3, #loc4])
#loc234 = loc(fused[#loc5, #loc6])
#loc235 = loc(fused[#loc7, #loc8])
#loc236 = loc(fused[#loc9, #loc10])
#loc237 = loc(fused[#loc11, #loc12])
#loc238 = loc(fused[#loc13, #loc14])
#loc239 = loc(fused[#loc15, #loc16])
#loc240 = loc(fused[#loc17, #loc18])
#loc241 = loc(fused[#loc19, #loc20])
#loc242 = loc(fused[#loc21, #loc22])
#loc243 = loc(fused[#loc23, #loc24])
#loc244 = loc(fused[#loc25, #loc26])
#loc245 = loc(fused[#loc27, #loc28])
#loc246 = loc(fused[#loc29, #loc30])
#loc247 = loc(fused[#loc31, #loc32])
#loc248 = loc(fused[#loc33, #loc34])
#loc249 = loc(fused[#loc36, #loc35])
#loc250 = loc(fused[#loc37, #loc38])
#loc251 = loc(fused[#loc40, #loc38])
#loc252 = loc(fused[#loc41, #loc42])
#loc253 = loc(fused[#loc43, #loc44])
#loc254 = loc(fused[#loc45, #loc46])
#loc255 = loc(fused[#loc47, #loc48])
#loc256 = loc(fused[#loc49, #loc50])
#loc257 = loc(fused[#loc51, #loc52])
#loc258 = loc(fused[#loc53, #loc54])
#loc259 = loc(fused[#loc57, #loc58])
#loc260 = loc(fused[#loc59, #loc60])
#loc261 = loc(fused[#loc65, #loc66])
#loc262 = loc(fused[#loc67, #loc68])
#loc263 = loc(fused[#loc69, #loc70])
#loc264 = loc(fused[#loc71, #loc68])
#loc265 = loc(fused[#loc73, #loc74])
#loc266 = loc(fused[#loc76, #loc77])
#loc267 = loc(fused[#loc78, #loc79])
#loc268 = loc(fused[#loc82, #loc80])
#loc269 = loc(fused[#loc86, #loc83])
#loc270 = loc(fused[#loc90, #loc91])
#loc271 = loc(fused[#loc92, #loc93])
#loc272 = loc(fused[#loc95, #loc96])
#loc273 = loc(fused[#loc97, #loc98])
#loc274 = loc(fused[#loc99, #loc100])
#loc275 = loc(fused[#loc101, #loc93])
#loc276 = loc(fused[#loc103, #loc104])
#loc277 = loc(fused[#loc107, #loc108])
#loc278 = loc(fused[#loc109, #loc104])
#loc279 = loc(fused[#loc115, #loc116])
#loc280 = loc(fused[#loc117, #loc118])
#loc281 = loc(fused[#loc119, #loc120])
#loc282 = loc(fused[#loc121, #loc118])
#loc283 = loc(fused[#loc127, #loc128])
#loc284 = loc(fused[#loc129, #loc130])
#loc285 = loc(fused[#loc131, #loc132])
#loc286 = loc(fused[#loc131, #loc133])
#loc287 = loc(fused[#loc129, #loc134])
#loc288 = loc(fused[#loc137, #loc138])
#loc289 = loc(fused[#loc139, #loc140])
#loc290 = loc(fused[#loc141, #loc142])
#loc291 = loc(fused[#loc144, #loc145])
#loc292 = loc(fused[#loc146, #loc140])
#loc293 = loc(fused[#loc152, #loc153])
#loc294 = loc(fused[#loc151, #loc153])
#loc295 = loc(fused[#loc150, #loc153])
#loc296 = loc(fused[#loc149, #loc148])
#loc297 = loc(fused[#loc158, #loc159])
#loc298 = loc(fused[#loc160, #loc161])
#loc299 = loc(fused[#loc163, #loc161])
#loc300 = loc(fused[#loc166, #loc164])
#loc301 = loc(fused[#loc170, #loc171])
#loc302 = loc(fused[#loc172, #loc173])
#loc303 = loc(fused[#loc175, #loc173])
#loc304 = loc(fused[#loc178, #loc176])
#loc305 = loc(fused[#loc180, #loc181])
#loc306 = loc(fused[#loc182, #loc183])
#loc307 = loc(fused[#loc184, #loc181])
#loc308 = loc(fused[#loc187, #loc188])
#loc309 = loc(fused[#loc189, #loc190])
#loc310 = loc(fused[#loc191, #loc188])
#loc311 = loc(fused[#loc195, #loc196])
#loc312 = loc(fused[#loc197, #loc198])
#loc313 = loc(fused[#loc200, #loc201])
#loc314 = loc(fused[#loc205, #loc206])
#loc315 = loc(fused[#loc208, #loc209])
#loc316 = loc(fused[#loc210, #loc211])
#loc317 = loc(fused[#loc213, #loc212])
#loc318 = loc(fused[#loc214, #loc215])
#loc319 = loc(fused[#loc217, #loc215])
#loc320 = loc(fused[#loc221, #loc222])
#loc321 = loc(fused[#loc223, #loc224])
#loc322 = loc(fused[#loc229, #loc230])
