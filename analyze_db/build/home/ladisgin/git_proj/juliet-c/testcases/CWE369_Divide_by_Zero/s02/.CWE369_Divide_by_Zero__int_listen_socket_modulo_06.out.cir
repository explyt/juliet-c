!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":384:10)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":384:14)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":384:20)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":384:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc597 = loc(fused[#loc176, #loc177])
#loc598 = loc(fused[#loc178, #loc179])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc526)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc527)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc528)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc529)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc530)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc531)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc532)
  cir.func private @close(!s32i) -> !s32i loc(#loc533)
  cir.func private @printIntLine(!s32i) loc(#loc534)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc536)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc24)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc29)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc539)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc542)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc543)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc544)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc545)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc546)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc38)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc544)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc40)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc545)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc45)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc46)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc47)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc548)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc54)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc54)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc550)
                cir.if %63 {
                  cir.break loc(#loc56)
                } loc(#loc551)
              } loc(#loc549)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc552)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc59)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc553)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc554)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc64)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc64)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc555)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc67)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc556)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc71)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc71)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc72)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc557)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc559)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc560)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc560)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc83)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc84)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc84)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc561)
                cir.if %67 {
                  cir.break loc(#loc86)
                } loc(#loc562)
              } loc(#loc558)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc90)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc91)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc92)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc564)
                cir.if %65 {
                  cir.break loc(#loc94)
                } loc(#loc565)
              } loc(#loc563)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc96)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc97)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc98)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc566)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc104)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc104)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc568)
                cir.if %63 {
                  cir.break loc(#loc106)
                } loc(#loc569)
              } loc(#loc567)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc109)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc109)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc109)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc109)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc109)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc109)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc109)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc110)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc110)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc570)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc112)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc571)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc118)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc118)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc573)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc119)
                  cir.yield %65 : !cir.bool loc(#loc119)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc121)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc574)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc119)
                    cir.yield %69 : !cir.bool loc(#loc119)
                  }, false {
                    %69 = cir.const #false loc(#loc119)
                    cir.yield %69 : !cir.bool loc(#loc119)
                  }) : (!cir.bool) -> !cir.bool loc(#loc119)
                  cir.yield %68 : !cir.bool loc(#loc119)
                }) : (!cir.bool) -> !cir.bool loc(#loc119)
                cir.if %64 {
                  cir.break loc(#loc123)
                } loc(#loc575)
              } loc(#loc572)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc124)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc124)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc126)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc576)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc577)
              cir.yield loc(#loc44)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc131)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc131)
              cir.condition(%16) loc(#loc131)
            } loc(#loc547)
          } loc(#loc547)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc135)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc135)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc579)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc138)
            } loc(#loc580)
          } loc(#loc578)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc142)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc582)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc145)
            } loc(#loc583)
          } loc(#loc581)
        } loc(#loc541)
      } loc(#loc540)
    } loc(#loc538)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc148)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc149)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc585)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc151)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
        %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc587)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc153)
      } loc(#loc586)
    } loc(#loc584)
    cir.return loc(#loc20)
  } loc(#loc535)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc589)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc156)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc590)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc591)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc592)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    cir.return loc(#loc155)
  } loc(#loc588)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc593)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc594)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc595)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc173)
  cir.func @main(%arg0: !s32i loc(fused[#loc176, #loc177]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc178, #loc179])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc597)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc598)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc175)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc181)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc182)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc182)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc183)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc170)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc599)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_06_good() : () -> () loc(#loc185)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc171)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc172)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc600)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_06_bad() : () -> () loc(#loc189)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc173)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc192)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc601)
    cir.return %17 : !s32i loc(#loc601)
  } loc(#loc596)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc195)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc603)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc201)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc604)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc205)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc206)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc606)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc609)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc610)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc611)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc612)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc613)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc215)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc215)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc611)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc217)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc217)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc612)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc222)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc223)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc224)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc225)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc615)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc231)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc231)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc617)
                cir.if %63 {
                  cir.break loc(#loc233)
                } loc(#loc618)
              } loc(#loc616)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc619)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc236)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc620)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc621)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc241)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc241)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc622)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc243)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc243)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc623)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc245)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc245)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc246)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc624)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc251)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc626)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc627)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc627)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc256)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc257)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc257)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc628)
                cir.if %67 {
                  cir.break loc(#loc259)
                } loc(#loc629)
              } loc(#loc625)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc263)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc265)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc265)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc631)
                cir.if %65 {
                  cir.break loc(#loc267)
                } loc(#loc632)
              } loc(#loc630)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc269)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc270)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc271)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc633)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc277)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc277)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc635)
                cir.if %63 {
                  cir.break loc(#loc279)
                } loc(#loc636)
              } loc(#loc634)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc280)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc281)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc281)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc282)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc282)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc282)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc282)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc282)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc282)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc282)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc283)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc283)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc637)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc284)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc285)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc285)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc638)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc291)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc291)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc640)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc292)
                  cir.yield %65 : !cir.bool loc(#loc292)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc294)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc641)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc292)
                    cir.yield %69 : !cir.bool loc(#loc292)
                  }, false {
                    %69 = cir.const #false loc(#loc292)
                    cir.yield %69 : !cir.bool loc(#loc292)
                  }) : (!cir.bool) -> !cir.bool loc(#loc292)
                  cir.yield %68 : !cir.bool loc(#loc292)
                }) : (!cir.bool) -> !cir.bool loc(#loc292)
                cir.if %64 {
                  cir.break loc(#loc296)
                } loc(#loc642)
              } loc(#loc639)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc297)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc297)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc298)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc299)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc299)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc643)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc300)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc301)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc644)
              cir.yield loc(#loc221)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc304)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc304)
              cir.condition(%16) loc(#loc304)
            } loc(#loc614)
          } loc(#loc614)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc307)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc308)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc308)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc646)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc310)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc311)
            } loc(#loc647)
          } loc(#loc645)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc314)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc315)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc315)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc649)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc317)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc318)
            } loc(#loc650)
          } loc(#loc648)
        } loc(#loc608)
      } loc(#loc607)
    } loc(#loc605)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc321)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc322)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc652)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc194)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc194)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc326)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc329)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc330)
          %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc655)
          cir.if %8 {
            %9 = cir.const #cir.int<100> : !s32i loc(#loc334)
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc335)
            %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc657)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc336)
          } else {
            %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc195)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc195)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc337)
          } loc(#loc656)
        } loc(#loc654)
      } loc(#loc653)
    } loc(#loc651)
    cir.return loc(#loc197)
  } loc(#loc602)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc659)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc342)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc343)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc660)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc347)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc348)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc662)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc665)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc666)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc667)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc668)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc669)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc357)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc357)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc667)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc359)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc359)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc668)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc364)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc365)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc366)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc367)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc671)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc373)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc373)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc673)
                cir.if %63 {
                  cir.break loc(#loc375)
                } loc(#loc674)
              } loc(#loc672)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc675)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc378)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc676)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc677)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc383)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc383)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc678)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc385)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc385)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc679)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc387)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc387)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc388)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc680)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc393)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc682)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc683)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc683)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc398)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc399)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc399)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc684)
                cir.if %67 {
                  cir.break loc(#loc401)
                } loc(#loc685)
              } loc(#loc681)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc404)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc405)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc406)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc407)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc407)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc687)
                cir.if %65 {
                  cir.break loc(#loc409)
                } loc(#loc688)
              } loc(#loc686)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc410)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc411)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc412)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc413)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc689)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc418)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc419)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc419)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc691)
                cir.if %63 {
                  cir.break loc(#loc421)
                } loc(#loc692)
              } loc(#loc690)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc422)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc423)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc423)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc424)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc424)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc424)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc424)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc424)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc424)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc424)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc425)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc425)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc693)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc426)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc427)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc427)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc694)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc433)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc433)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc696)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc434)
                  cir.yield %65 : !cir.bool loc(#loc434)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc435)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc436)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc697)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc434)
                    cir.yield %69 : !cir.bool loc(#loc434)
                  }, false {
                    %69 = cir.const #false loc(#loc434)
                    cir.yield %69 : !cir.bool loc(#loc434)
                  }) : (!cir.bool) -> !cir.bool loc(#loc434)
                  cir.yield %68 : !cir.bool loc(#loc434)
                }) : (!cir.bool) -> !cir.bool loc(#loc434)
                cir.if %64 {
                  cir.break loc(#loc438)
                } loc(#loc698)
              } loc(#loc695)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc439)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc439)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc440)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc441)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc441)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc699)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc442)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc443)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc700)
              cir.yield loc(#loc363)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc446)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc446)
              cir.condition(%16) loc(#loc446)
            } loc(#loc670)
          } loc(#loc670)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc449)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc450)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc450)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc702)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc452)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc453)
            } loc(#loc703)
          } loc(#loc701)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc456)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc457)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc457)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc705)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc459)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc460)
            } loc(#loc706)
          } loc(#loc704)
        } loc(#loc664)
      } loc(#loc663)
    } loc(#loc661)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc463)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc464)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc708)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc468)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc469)
          %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc711)
          cir.if %8 {
            %9 = cir.const #cir.int<100> : !s32i loc(#loc473)
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc474)
            %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc713)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc475)
          } else {
            %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc476)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc476)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc477)
          } loc(#loc712)
        } loc(#loc710)
      } loc(#loc709)
    } loc(#loc707)
    cir.return loc(#loc339)
  } loc(#loc658)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc715)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc482)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc483)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc716)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc487)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc488)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc718)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc492)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc492)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc493)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc494)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc720)
      } loc(#loc719)
    } loc(#loc717)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc498)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc499)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc722)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc501)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc502)
        %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc724)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc503)
      } loc(#loc723)
    } loc(#loc721)
    cir.return loc(#loc479)
  } loc(#loc714)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc726)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc508)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc509)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc727)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc513)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc514)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc729)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc516)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc731)
      } loc(#loc730)
    } loc(#loc728)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc520)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc521)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc733)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc523)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc524)
        %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc735)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc525)
      } loc(#loc734)
    } loc(#loc732)
    cir.return loc(#loc505)
  } loc(#loc725)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":49:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":131:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":51:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":51:9)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":53:13)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":53:12)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":53:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":54:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":125:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":54:8)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":54:27)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":55:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":56:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":124:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":61:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":61:17)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":62:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":62:32)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":63:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":63:35)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":64:13)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":64:35)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":65:13)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":65:45)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":66:13)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":109:21)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":76:39)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":76:48)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":76:61)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":76:32)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":76:17)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":76:72)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":77:17)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":80:17)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":77:21)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":77:37)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":78:17)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":79:21)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":81:24)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":81:25)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":81:34)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":81:37)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":81:51)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":81:17)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":81:52)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":82:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":82:17)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":83:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":83:17)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":84:42)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":84:36)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":84:17)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":84:50)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:17)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":88:17)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:26)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:58)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:59)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:68)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:82)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:21)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":85:88)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":86:17)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":87:21)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":89:17)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":92:17)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":89:28)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":89:42)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":89:21)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":89:61)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":90:17)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":91:21)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":93:39)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":93:53)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":93:59)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":93:32)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":93:17)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":93:63)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":94:17)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":97:17)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":94:21)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":94:37)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":95:17)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":96:21)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:35)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:49)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:62)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:80)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:83)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:30)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:17)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":99:84)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":100:17)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":103:17)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":100:21)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":100:35)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":100:48)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":100:51)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":100:65)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":101:17)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":102:21)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":105:43)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":105:29)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":105:17)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":107:29)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":107:24)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":107:17)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":107:40)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":109:20)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":110:13)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":113:13)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":110:17)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":110:33)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":111:13)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":112:30)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":112:17)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":114:13)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":117:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":114:17)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":114:33)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":115:13)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":116:30)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":116:17)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":126:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":130:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":126:8)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":126:27)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":127:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":129:22)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":129:28)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":129:9)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":367:1)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":373:1)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":369:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":369:14)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":370:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":370:14)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":371:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":371:14)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":372:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":372:14)
#loc164 = loc("/usr/include/stdlib.h":575:1)
#loc165 = loc("/usr/include/stdlib.h":575:41)
#loc166 = loc("/usr/include/time.h":76:1)
#loc167 = loc("/usr/include/time.h":76:38)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":389:15)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":391:15)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":394:15)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":396:15)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":384:1)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":399:1)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":385:1)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":387:27)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":387:22)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":387:5)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":389:5)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":390:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":390:61)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":391:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":394:5)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":395:5)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":395:60)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":396:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":398:12)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":398:5)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":218:19)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":229:23)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":138:1)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":232:1)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":140:5)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":140:9)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":142:13)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":142:12)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":142:5)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":143:5)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":214:5)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":143:8)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":143:27)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":144:5)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":145:9)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":213:9)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":150:13)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":150:17)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":151:13)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":151:32)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":152:13)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":152:35)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":153:13)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":153:35)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":154:13)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":154:45)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":155:13)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":198:21)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":165:39)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":165:48)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":165:61)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":165:32)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":165:17)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":165:72)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":166:17)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":169:17)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":166:21)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":166:37)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":167:17)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":168:21)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":170:24)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":170:25)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":170:34)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":170:37)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":170:51)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":170:17)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":170:52)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":171:38)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":171:17)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":172:43)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":172:17)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":173:42)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":173:36)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":173:17)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":173:50)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:17)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":177:17)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:26)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:58)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:59)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:68)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:82)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:21)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":174:88)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":175:17)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":176:21)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":178:17)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":181:17)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":178:28)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":178:42)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":178:21)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":178:61)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":179:17)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":180:21)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":182:39)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":182:53)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":182:59)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":182:32)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":182:17)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":182:63)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":183:17)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":186:17)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":183:21)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":183:37)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":184:17)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":185:21)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:35)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:49)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:62)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:80)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:83)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:30)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:17)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":188:84)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":189:17)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":192:17)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":189:21)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":189:35)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":189:48)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":189:51)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":189:65)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":190:17)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":191:21)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":194:43)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":194:29)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":194:17)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":196:29)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":196:24)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":196:17)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":196:40)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":198:20)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":199:13)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":202:13)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":199:17)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":199:33)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":200:13)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":201:30)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":201:17)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":203:13)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":206:13)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":203:17)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":203:33)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":204:13)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":205:30)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":205:17)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":215:5)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":231:5)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":215:8)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":215:27)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":216:5)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":219:5)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":221:5)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":218:9)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":223:9)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":230:9)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":223:13)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":223:21)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":224:9)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":226:9)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":228:9)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":225:26)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":225:32)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":225:13)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":229:13)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":235:1)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":324:1)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":237:5)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":237:9)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":239:13)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":239:12)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":239:5)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":240:5)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":311:5)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":240:8)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":240:27)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":241:5)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":242:9)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":310:9)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":247:13)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":247:17)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":248:13)
#loc355 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":248:32)
#loc356 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":249:13)
#loc357 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":249:35)
#loc358 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":250:13)
#loc359 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":250:35)
#loc360 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":251:13)
#loc361 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":251:45)
#loc362 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":252:13)
#loc363 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":295:21)
#loc364 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":262:39)
#loc365 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":262:48)
#loc366 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":262:61)
#loc367 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":262:32)
#loc368 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":262:17)
#loc369 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":262:72)
#loc370 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":263:17)
#loc371 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":266:17)
#loc372 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":263:21)
#loc373 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":263:37)
#loc374 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":264:17)
#loc375 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":265:21)
#loc376 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":267:24)
#loc377 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":267:25)
#loc378 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":267:34)
#loc379 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":267:37)
#loc380 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":267:51)
#loc381 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":267:17)
#loc382 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":267:52)
#loc383 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":268:38)
#loc384 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":268:17)
#loc385 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":269:43)
#loc386 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":269:17)
#loc387 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":270:42)
#loc388 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":270:36)
#loc389 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":270:17)
#loc390 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":270:50)
#loc391 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:17)
#loc392 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":274:17)
#loc393 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:26)
#loc394 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:58)
#loc395 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:59)
#loc396 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:68)
#loc397 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:82)
#loc398 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:21)
#loc399 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":271:88)
#loc400 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":272:17)
#loc401 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":273:21)
#loc402 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":275:17)
#loc403 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":278:17)
#loc404 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":275:28)
#loc405 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":275:42)
#loc406 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":275:21)
#loc407 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":275:61)
#loc408 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":276:17)
#loc409 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":277:21)
#loc410 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":279:39)
#loc411 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":279:53)
#loc412 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":279:59)
#loc413 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":279:32)
#loc414 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":279:17)
#loc415 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":279:63)
#loc416 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":280:17)
#loc417 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":283:17)
#loc418 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":280:21)
#loc419 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":280:37)
#loc420 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":281:17)
#loc421 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":282:21)
#loc422 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:35)
#loc423 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:49)
#loc424 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:62)
#loc425 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:80)
#loc426 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:83)
#loc427 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:30)
#loc428 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:17)
#loc429 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":285:84)
#loc430 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":286:17)
#loc431 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":289:17)
#loc432 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":286:21)
#loc433 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":286:35)
#loc434 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":286:48)
#loc435 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":286:51)
#loc436 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":286:65)
#loc437 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":287:17)
#loc438 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":288:21)
#loc439 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":291:43)
#loc440 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":291:29)
#loc441 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":291:17)
#loc442 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":293:29)
#loc443 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":293:24)
#loc444 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":293:17)
#loc445 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":293:40)
#loc446 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":295:20)
#loc447 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":296:13)
#loc448 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":299:13)
#loc449 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":296:17)
#loc450 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":296:33)
#loc451 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":297:13)
#loc452 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":298:30)
#loc453 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":298:17)
#loc454 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":300:13)
#loc455 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":303:13)
#loc456 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":300:17)
#loc457 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":300:33)
#loc458 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":301:13)
#loc459 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":302:30)
#loc460 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":302:17)
#loc461 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":312:5)
#loc462 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":323:5)
#loc463 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":312:8)
#loc464 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":312:27)
#loc465 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":313:5)
#loc466 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":315:9)
#loc467 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":322:9)
#loc468 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":315:13)
#loc469 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":315:21)
#loc470 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":316:9)
#loc471 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":318:9)
#loc472 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":320:9)
#loc473 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":317:26)
#loc474 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":317:32)
#loc475 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":317:13)
#loc476 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":321:23)
#loc477 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":321:13)
#loc478 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":327:1)
#loc479 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":347:1)
#loc480 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":329:5)
#loc481 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":329:9)
#loc482 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":331:13)
#loc483 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":331:12)
#loc484 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":331:5)
#loc485 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":332:5)
#loc486 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":341:5)
#loc487 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":332:8)
#loc488 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":332:27)
#loc489 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":333:5)
#loc490 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":336:5)
#loc491 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":338:5)
#loc492 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":335:19)
#loc493 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":335:9)
#loc494 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":340:16)
#loc495 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":340:9)
#loc496 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":342:5)
#loc497 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":346:5)
#loc498 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":342:8)
#loc499 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":342:27)
#loc500 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":343:5)
#loc501 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":345:22)
#loc502 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":345:28)
#loc503 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":345:9)
#loc504 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":350:1)
#loc505 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":365:1)
#loc506 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":352:5)
#loc507 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":352:9)
#loc508 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":354:13)
#loc509 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":354:12)
#loc510 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":354:5)
#loc511 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":355:5)
#loc512 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":359:5)
#loc513 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":355:8)
#loc514 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":355:27)
#loc515 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":356:5)
#loc516 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":358:16)
#loc517 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":358:9)
#loc518 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":360:5)
#loc519 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":364:5)
#loc520 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":360:8)
#loc521 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":360:27)
#loc522 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":361:5)
#loc523 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":363:22)
#loc524 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":363:28)
#loc525 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_06.c":363:9)
#loc526 = loc(fused[#loc1, #loc2])
#loc527 = loc(fused[#loc3, #loc4])
#loc528 = loc(fused[#loc5, #loc6])
#loc529 = loc(fused[#loc7, #loc8])
#loc530 = loc(fused[#loc9, #loc10])
#loc531 = loc(fused[#loc11, #loc12])
#loc532 = loc(fused[#loc13, #loc14])
#loc533 = loc(fused[#loc15, #loc16])
#loc534 = loc(fused[#loc17, #loc18])
#loc535 = loc(fused[#loc19, #loc20])
#loc536 = loc(fused[#loc21, #loc22])
#loc537 = loc(fused[#loc25, #loc23])
#loc538 = loc(fused[#loc26, #loc27])
#loc539 = loc(fused[#loc28, #loc29])
#loc540 = loc(fused[#loc30, #loc27])
#loc541 = loc(fused[#loc31, #loc32])
#loc542 = loc(fused[#loc33, #loc34])
#loc543 = loc(fused[#loc35, #loc36])
#loc544 = loc(fused[#loc37, #loc38])
#loc545 = loc(fused[#loc39, #loc40])
#loc546 = loc(fused[#loc41, #loc42])
#loc547 = loc(fused[#loc43, #loc44])
#loc548 = loc(fused[#loc49, #loc50])
#loc549 = loc(fused[#loc51, #loc52])
#loc550 = loc(fused[#loc53, #loc54])
#loc551 = loc(fused[#loc55, #loc52])
#loc552 = loc(fused[#loc57, #loc58])
#loc553 = loc(fused[#loc60, #loc61])
#loc554 = loc(fused[#loc62, #loc63])
#loc555 = loc(fused[#loc66, #loc64])
#loc556 = loc(fused[#loc70, #loc67])
#loc557 = loc(fused[#loc74, #loc75])
#loc558 = loc(fused[#loc76, #loc77])
#loc559 = loc(fused[#loc79, #loc80])
#loc560 = loc(fused[#loc81, #loc82])
#loc561 = loc(fused[#loc83, #loc84])
#loc562 = loc(fused[#loc85, #loc77])
#loc563 = loc(fused[#loc87, #loc88])
#loc564 = loc(fused[#loc91, #loc92])
#loc565 = loc(fused[#loc93, #loc88])
#loc566 = loc(fused[#loc99, #loc100])
#loc567 = loc(fused[#loc101, #loc102])
#loc568 = loc(fused[#loc103, #loc104])
#loc569 = loc(fused[#loc105, #loc102])
#loc570 = loc(fused[#loc109, #loc110])
#loc571 = loc(fused[#loc113, #loc114])
#loc572 = loc(fused[#loc115, #loc116])
#loc573 = loc(fused[#loc117, #loc118])
#loc574 = loc(fused[#loc120, #loc121])
#loc575 = loc(fused[#loc122, #loc116])
#loc576 = loc(fused[#loc126, #loc124])
#loc577 = loc(fused[#loc129, #loc130])
#loc578 = loc(fused[#loc132, #loc133])
#loc579 = loc(fused[#loc134, #loc135])
#loc580 = loc(fused[#loc136, #loc133])
#loc581 = loc(fused[#loc139, #loc140])
#loc582 = loc(fused[#loc141, #loc142])
#loc583 = loc(fused[#loc143, #loc140])
#loc584 = loc(fused[#loc146, #loc147])
#loc585 = loc(fused[#loc148, #loc149])
#loc586 = loc(fused[#loc150, #loc147])
#loc587 = loc(fused[#loc151, #loc152])
#loc588 = loc(fused[#loc154, #loc155])
#loc589 = loc(fused[#loc156, #loc157])
#loc590 = loc(fused[#loc158, #loc159])
#loc591 = loc(fused[#loc160, #loc161])
#loc592 = loc(fused[#loc162, #loc163])
#loc593 = loc(fused[#loc164, #loc165])
#loc594 = loc(fused[#loc166, #loc167])
#loc595 = loc(fused[#loc168, #loc169])
#loc596 = loc(fused[#loc174, #loc175])
#loc599 = loc(fused[#loc185, #loc186])
#loc600 = loc(fused[#loc189, #loc190])
#loc601 = loc(fused[#loc193, #loc192])
#loc602 = loc(fused[#loc196, #loc197])
#loc603 = loc(fused[#loc198, #loc199])
#loc604 = loc(fused[#loc202, #loc200])
#loc605 = loc(fused[#loc203, #loc204])
#loc606 = loc(fused[#loc205, #loc206])
#loc607 = loc(fused[#loc207, #loc204])
#loc608 = loc(fused[#loc208, #loc209])
#loc609 = loc(fused[#loc210, #loc211])
#loc610 = loc(fused[#loc212, #loc213])
#loc611 = loc(fused[#loc214, #loc215])
#loc612 = loc(fused[#loc216, #loc217])
#loc613 = loc(fused[#loc218, #loc219])
#loc614 = loc(fused[#loc220, #loc221])
#loc615 = loc(fused[#loc226, #loc227])
#loc616 = loc(fused[#loc228, #loc229])
#loc617 = loc(fused[#loc230, #loc231])
#loc618 = loc(fused[#loc232, #loc229])
#loc619 = loc(fused[#loc234, #loc235])
#loc620 = loc(fused[#loc237, #loc238])
#loc621 = loc(fused[#loc239, #loc240])
#loc622 = loc(fused[#loc242, #loc241])
#loc623 = loc(fused[#loc244, #loc243])
#loc624 = loc(fused[#loc247, #loc248])
#loc625 = loc(fused[#loc249, #loc250])
#loc626 = loc(fused[#loc252, #loc253])
#loc627 = loc(fused[#loc254, #loc255])
#loc628 = loc(fused[#loc256, #loc257])
#loc629 = loc(fused[#loc258, #loc250])
#loc630 = loc(fused[#loc260, #loc261])
#loc631 = loc(fused[#loc264, #loc265])
#loc632 = loc(fused[#loc266, #loc261])
#loc633 = loc(fused[#loc272, #loc273])
#loc634 = loc(fused[#loc274, #loc275])
#loc635 = loc(fused[#loc276, #loc277])
#loc636 = loc(fused[#loc278, #loc275])
#loc637 = loc(fused[#loc282, #loc283])
#loc638 = loc(fused[#loc286, #loc287])
#loc639 = loc(fused[#loc288, #loc289])
#loc640 = loc(fused[#loc290, #loc291])
#loc641 = loc(fused[#loc293, #loc294])
#loc642 = loc(fused[#loc295, #loc289])
#loc643 = loc(fused[#loc299, #loc297])
#loc644 = loc(fused[#loc302, #loc303])
#loc645 = loc(fused[#loc305, #loc306])
#loc646 = loc(fused[#loc307, #loc308])
#loc647 = loc(fused[#loc309, #loc306])
#loc648 = loc(fused[#loc312, #loc313])
#loc649 = loc(fused[#loc314, #loc315])
#loc650 = loc(fused[#loc316, #loc313])
#loc651 = loc(fused[#loc319, #loc320])
#loc652 = loc(fused[#loc321, #loc322])
#loc653 = loc(fused[#loc323, #loc324, #loc325, #loc320])
#loc654 = loc(fused[#loc327, #loc328])
#loc655 = loc(fused[#loc329, #loc330])
#loc656 = loc(fused[#loc331, #loc332, #loc333, #loc328])
#loc657 = loc(fused[#loc334, #loc335])
#loc658 = loc(fused[#loc338, #loc339])
#loc659 = loc(fused[#loc340, #loc341])
#loc660 = loc(fused[#loc344, #loc342])
#loc661 = loc(fused[#loc345, #loc346])
#loc662 = loc(fused[#loc347, #loc348])
#loc663 = loc(fused[#loc349, #loc346])
#loc664 = loc(fused[#loc350, #loc351])
#loc665 = loc(fused[#loc352, #loc353])
#loc666 = loc(fused[#loc354, #loc355])
#loc667 = loc(fused[#loc356, #loc357])
#loc668 = loc(fused[#loc358, #loc359])
#loc669 = loc(fused[#loc360, #loc361])
#loc670 = loc(fused[#loc362, #loc363])
#loc671 = loc(fused[#loc368, #loc369])
#loc672 = loc(fused[#loc370, #loc371])
#loc673 = loc(fused[#loc372, #loc373])
#loc674 = loc(fused[#loc374, #loc371])
#loc675 = loc(fused[#loc376, #loc377])
#loc676 = loc(fused[#loc379, #loc380])
#loc677 = loc(fused[#loc381, #loc382])
#loc678 = loc(fused[#loc384, #loc383])
#loc679 = loc(fused[#loc386, #loc385])
#loc680 = loc(fused[#loc389, #loc390])
#loc681 = loc(fused[#loc391, #loc392])
#loc682 = loc(fused[#loc394, #loc395])
#loc683 = loc(fused[#loc396, #loc397])
#loc684 = loc(fused[#loc398, #loc399])
#loc685 = loc(fused[#loc400, #loc392])
#loc686 = loc(fused[#loc402, #loc403])
#loc687 = loc(fused[#loc406, #loc407])
#loc688 = loc(fused[#loc408, #loc403])
#loc689 = loc(fused[#loc414, #loc415])
#loc690 = loc(fused[#loc416, #loc417])
#loc691 = loc(fused[#loc418, #loc419])
#loc692 = loc(fused[#loc420, #loc417])
#loc693 = loc(fused[#loc424, #loc425])
#loc694 = loc(fused[#loc428, #loc429])
#loc695 = loc(fused[#loc430, #loc431])
#loc696 = loc(fused[#loc432, #loc433])
#loc697 = loc(fused[#loc435, #loc436])
#loc698 = loc(fused[#loc437, #loc431])
#loc699 = loc(fused[#loc441, #loc439])
#loc700 = loc(fused[#loc444, #loc445])
#loc701 = loc(fused[#loc447, #loc448])
#loc702 = loc(fused[#loc449, #loc450])
#loc703 = loc(fused[#loc451, #loc448])
#loc704 = loc(fused[#loc454, #loc455])
#loc705 = loc(fused[#loc456, #loc457])
#loc706 = loc(fused[#loc458, #loc455])
#loc707 = loc(fused[#loc461, #loc462])
#loc708 = loc(fused[#loc463, #loc464])
#loc709 = loc(fused[#loc465, #loc462])
#loc710 = loc(fused[#loc466, #loc467])
#loc711 = loc(fused[#loc468, #loc469])
#loc712 = loc(fused[#loc470, #loc471, #loc472, #loc467])
#loc713 = loc(fused[#loc473, #loc474])
#loc714 = loc(fused[#loc478, #loc479])
#loc715 = loc(fused[#loc480, #loc481])
#loc716 = loc(fused[#loc484, #loc482])
#loc717 = loc(fused[#loc485, #loc486])
#loc718 = loc(fused[#loc487, #loc488])
#loc719 = loc(fused[#loc489, #loc490, #loc491, #loc486])
#loc720 = loc(fused[#loc495, #loc494])
#loc721 = loc(fused[#loc496, #loc497])
#loc722 = loc(fused[#loc498, #loc499])
#loc723 = loc(fused[#loc500, #loc497])
#loc724 = loc(fused[#loc501, #loc502])
#loc725 = loc(fused[#loc504, #loc505])
#loc726 = loc(fused[#loc506, #loc507])
#loc727 = loc(fused[#loc510, #loc508])
#loc728 = loc(fused[#loc511, #loc512])
#loc729 = loc(fused[#loc513, #loc514])
#loc730 = loc(fused[#loc515, #loc512])
#loc731 = loc(fused[#loc517, #loc516])
#loc732 = loc(fused[#loc518, #loc519])
#loc733 = loc(fused[#loc520, #loc521])
#loc734 = loc(fused[#loc522, #loc519])
#loc735 = loc(fused[#loc523, #loc524])
