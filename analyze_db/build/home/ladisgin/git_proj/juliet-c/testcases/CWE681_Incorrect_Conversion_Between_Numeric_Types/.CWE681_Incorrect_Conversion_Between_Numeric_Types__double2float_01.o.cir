!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:36)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc79)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc80)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc81)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printFloatLine(!cir.float) loc(#loc83)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc85)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc86)
    cir.br ^bb1 loc(#loc87)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %3 = cir.cast(int_to_float, %2 : !s32i), !cir.double loc(#loc17)
    cir.store %3, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc86)
    cir.br ^bb2 loc(#loc88)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc22)
    %5 = cir.const #cir.int<256> : !s32i loc(#loc23)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc80)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc25)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc89)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc90)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc30)
    %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc31)
    cir.store %13, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc91)
    cir.br ^bb5 loc(#loc28)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc35)
    %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc35)
    cir.call @printFloatLine(%17) : (!cir.float) -> () loc(#loc36)
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc13)
  } loc(#loc84)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc93)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Value is too small or large to be represented as a float\00" : !cir.array<!s8i x 57>> : !cir.array<!s8i x 57> {alignment = 1 : i64} loc(#loc41)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc95)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc96)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %3 = cir.cast(int_to_float, %2 : !s32i), !cir.double loc(#loc47)
    cir.store %3, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc96)
    cir.br ^bb2 loc(#loc98)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc52)
    %5 = cir.const #cir.int<256> : !s32i loc(#loc53)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc80)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc55)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc99)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc100)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc60)
    %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc61)
    cir.store %13, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc101)
    cir.br ^bb5 loc(#loc58)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb5 loc(#loc51)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc51)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc68)
    %17 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc69)
    %18 = cir.cast(floating, %17 : !cir.float), !cir.double loc(#loc69)
    %19 = cir.cmp(gt, %16, %18) : !cir.double, !cir.bool loc(#loc103)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc70)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #true loc(#loc70)
    cir.br ^bb14(%20 : !cir.bool) loc(#loc70)
  ^bb9:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc71)
    %22 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc72)
    %23 = cir.cast(floating, %22 : !cir.float), !cir.double loc(#loc72)
    %24 = cir.cmp(lt, %21, %23) : !cir.double, !cir.bool loc(#loc104)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc70)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #true loc(#loc70)
    cir.br ^bb12(%25 : !cir.bool) loc(#loc70)
  ^bb11:  // pred: ^bb9
    %26 = cir.const #false loc(#loc70)
    cir.br ^bb12(%26 : !cir.bool) loc(#loc70)
  ^bb12(%27: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:36)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc70)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14(%27 : !cir.bool) loc(#loc70)
  ^bb14(%28: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:36)):  // 2 preds: ^bb8, ^bb13
    cir.br ^bb15 loc(#loc70)
  ^bb15:  // pred: ^bb14
    cir.brcond %28 ^bb16, ^bb17 loc(#loc105)
  ^bb16:  // pred: ^bb15
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc41)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb18 loc(#loc74)
  ^bb17:  // pred: ^bb15
    %31 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc77)
    %32 = cir.cast(floating, %31 : !cir.double), !cir.float loc(#loc77)
    cir.call @printFloatLine(%32) : (!cir.float) -> () loc(#loc78)
    cir.br ^bb18 loc(#loc67)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc67)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc49)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc43)
  } loc(#loc94)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":40:23)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":22:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":22:39)
#loc12 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":23:1)
#loc13 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":45:1)
#loc14 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":26:9)
#loc15 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":26:41)
#loc16 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":27:9)
#loc17 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":27:31)
#loc18 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":25:5)
#loc19 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":44:5)
#loc20 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":33:9)
#loc21 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":41:9)
#loc22 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":33:19)
#loc23 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":33:32)
#loc24 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":33:49)
#loc25 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":33:13)
#loc26 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":33:59)
#loc27 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":34:9)
#loc28 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":37:9)
#loc29 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":39:9)
#loc30 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":36:33)
#loc31 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":36:28)
#loc32 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":36:13)
#loc33 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":36:44)
#loc34 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":40:13)
#loc35 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":43:31)
#loc36 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":43:9)
#loc37 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":82:1)
#loc38 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":85:1)
#loc39 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":84:5)
#loc40 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":84:11)
#loc41 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":73:23)
#loc42 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":51:1)
#loc43 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":80:1)
#loc44 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":54:9)
#loc45 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":54:41)
#loc46 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":55:9)
#loc47 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":55:31)
#loc48 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":53:5)
#loc49 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":79:5)
#loc50 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":61:9)
#loc51 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":69:9)
#loc52 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":61:19)
#loc53 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":61:32)
#loc54 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":61:49)
#loc55 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":61:13)
#loc56 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":61:59)
#loc57 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":62:9)
#loc58 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":65:9)
#loc59 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":67:9)
#loc60 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":64:33)
#loc61 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":64:28)
#loc62 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":64:13)
#loc63 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":64:44)
#loc64 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":68:23)
#loc65 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":68:13)
#loc66 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:9)
#loc67 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":78:9)
#loc68 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:13)
#loc69 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:28)
#loc71 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:39)
#loc72 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":71:54)
#loc73 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":72:9)
#loc74 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":74:9)
#loc75 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":76:9)
#loc76 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":73:13)
#loc77 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":77:35)
#loc78 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_01.c":77:13)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc81 = loc(fused[#loc5, #loc6])
#loc82 = loc(fused[#loc7, #loc8])
#loc83 = loc(fused[#loc10, #loc11])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc16, #loc17])
#loc87 = loc(fused[#loc18, #loc19])
#loc88 = loc(fused[#loc20, #loc21])
#loc89 = loc(fused[#loc25, #loc26])
#loc90 = loc(fused[#loc27, #loc28, #loc29, #loc21])
#loc91 = loc(fused[#loc32, #loc33])
#loc92 = loc(fused[#loc37, #loc38])
#loc93 = loc(fused[#loc39, #loc40])
#loc94 = loc(fused[#loc42, #loc43])
#loc95 = loc(fused[#loc44, #loc45])
#loc96 = loc(fused[#loc46, #loc47])
#loc97 = loc(fused[#loc48, #loc49])
#loc98 = loc(fused[#loc50, #loc51])
#loc99 = loc(fused[#loc55, #loc56])
#loc100 = loc(fused[#loc57, #loc58, #loc59, #loc51])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc66, #loc67])
#loc103 = loc(fused[#loc68, #loc69])
#loc104 = loc(fused[#loc71, #loc72])
#loc105 = loc(fused[#loc73, #loc74, #loc75, #loc67])
