!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":73:10)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":73:14)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":73:20)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":73:32)
#loc108 = loc(fused[#loc35, #loc36])
#loc109 = loc(fused[#loc37, #loc38])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc96)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
        cir.condition(%1) loc(#loc7)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc100)
          %1 = cir.const #cir.int<8> : !u64i loc(#loc11)
          %2 = cir.alloca !u8i, !cir.ptr<!u8i>, %1 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
          %4 = cir.cast(bitcast, %2 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
          cir.store %5, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc100)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc13)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
          cir.store %7, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
          %8 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc16)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc17)
        } loc(#loc99)
        cir.break loc(#loc18)
      } loc(#loc98)
    } loc(#loc98)
    cir.return loc(#loc4)
  } loc(#loc97)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc20)
  } loc(#loc102)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc104)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc105)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc32)
  cir.func @main(%arg0: !s32i loc(fused[#loc35, #loc36]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc37, #loc38])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc108)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc109)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc34)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc39)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc39)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc40)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc41)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc41)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc42)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc29)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_16_good() : () -> () loc(#loc44)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc30)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc31)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_16_bad() : () -> () loc(#loc48)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc32)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc51)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.return %17 : !s32i loc(#loc112)
  } loc(#loc107)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc113)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc114)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc61)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc61)
        cir.condition(%1) loc(#loc61)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
          %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc119)
          %2 = cir.const #cir.int<8> : !u64i loc(#loc67)
          %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc67)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc67)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
          cir.store %5, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc119)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc68)
          %7 = cir.const #cir.int<4> : !u64i loc(#loc120)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc68)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc121)
          cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
          cir.scope {
            %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc76)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc124)
            cir.if %17 {
              %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc79)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc80)
              cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc78)
            } loc(#loc125)
          } loc(#loc123)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc81)
          %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc126)
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
          %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc85)
          cir.store %12, %13 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
          cir.scope {
            %14 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
            %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc90)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
            cir.store %16, %14 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
            %17 = cir.load deref %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc94)
          } loc(#loc128)
        } loc(#loc117)
        cir.break loc(#loc95)
      } loc(#loc116)
    } loc(#loc116)
    cir.return loc(#loc58)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":31:1)
#loc5 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":30:5)
#loc7 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":22:11)
#loc8 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":24:9)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":28:9)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":25:13)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":25:40)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":26:13)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":26:27)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":26:26)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":27:27)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":27:26)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":27:13)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":29:9)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":59:1)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":62:1)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":61:5)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":61:11)
#loc23 = loc("/usr/include/stdlib.h":575:1)
#loc24 = loc("/usr/include/stdlib.h":575:41)
#loc25 = loc("/usr/include/time.h":76:1)
#loc26 = loc("/usr/include/time.h":76:38)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":78:15)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":80:15)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":83:15)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":85:15)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":73:1)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":88:1)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":74:1)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":76:27)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":76:22)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":76:5)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":78:5)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":79:5)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":79:63)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":80:5)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":83:5)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":84:5)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":84:62)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":85:5)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":87:12)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":87:5)
#loc53 = loc("/usr/include/stdlib.h":672:1)
#loc54 = loc("/usr/include/stdlib.h":672:45)
#loc55 = loc("/usr/include/stdlib.h":756:1)
#loc56 = loc("/usr/include/stdlib.h":756:70)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":38:1)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":57:1)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":40:5)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":56:5)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":40:11)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":42:9)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":54:9)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":43:13)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":43:19)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":44:13)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":44:40)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":46:27)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":46:34)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":46:44)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":46:45)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":46:13)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:13)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:41)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:17)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:25)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:31)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:32)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:38)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":47:37)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":48:21)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":48:14)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":48:13)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":49:24)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":49:14)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":49:13)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":50:13)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":53:13)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":51:17)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":51:31)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":51:30)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":52:31)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":52:30)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":52:17)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_16.c":55:9)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc99 = loc(fused[#loc8, #loc9])
#loc100 = loc(fused[#loc10, #loc11])
#loc101 = loc(fused[#loc12, #loc13])
#loc102 = loc(fused[#loc19, #loc20])
#loc103 = loc(fused[#loc21, #loc22])
#loc104 = loc(fused[#loc23, #loc24])
#loc105 = loc(fused[#loc25, #loc26])
#loc106 = loc(fused[#loc27, #loc28])
#loc107 = loc(fused[#loc33, #loc34])
#loc110 = loc(fused[#loc44, #loc45])
#loc111 = loc(fused[#loc48, #loc49])
#loc112 = loc(fused[#loc52, #loc51])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc62, #loc63])
#loc118 = loc(fused[#loc64, #loc65])
#loc119 = loc(fused[#loc66, #loc67])
#loc120 = loc(fused[#loc69, #loc70])
#loc121 = loc(fused[#loc68, #loc71])
#loc122 = loc(fused[#loc72, #loc71])
#loc123 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc77, #loc74])
#loc126 = loc(fused[#loc83, #loc81])
#loc127 = loc(fused[#loc86, #loc84])
#loc128 = loc(fused[#loc87, #loc88])
#loc129 = loc(fused[#loc89, #loc90])
