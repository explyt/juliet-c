!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":24:16)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":24:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":56:27)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":56:32)
#loc115 = loc(fused[#loc8, #loc9])
#loc137 = loc(fused[#loc62, #loc63])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc112)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_439badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc113)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc114)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc116)
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_439badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc25)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc122)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc123)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc124)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc125)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc126)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc127)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc37)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc38)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc128)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc44)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc131)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc47)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc132)
          cir.condition(%24) loc(#loc132)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc52)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          } loc(#loc133)
          cir.yield loc(#loc43)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc53)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc54)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc135)
          cir.yield loc(#loc130)
        } loc(#loc130)
      } loc(#loc130)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc56)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc57)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc58)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
      cir.delete.array %18 : <!s32i> loc(#loc59)
    } loc(#loc121)
    cir.return loc(#loc19)
  } loc(#loc118)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc62, #loc63])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc137)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc64)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc65)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.return loc(#loc61)
  } loc(#loc136)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc72)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc74)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc143)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc145)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc82)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc146)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc147)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc148)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc86)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc87)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc149)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc93)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc93)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc152)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc95)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc96)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc153)
          cir.condition(%24) loc(#loc153)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc98)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc100)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc101)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc155)
          } loc(#loc154)
          cir.yield loc(#loc92)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc102)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc103)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc156)
          cir.yield loc(#loc151)
        } loc(#loc151)
      } loc(#loc151)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc105)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc106)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc107)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
      cir.delete.array %18 : <!s32i> loc(#loc108)
    } loc(#loc142)
    cir.return loc(#loc68)
  } loc(#loc139)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_434goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43L7goodG2BEv() : () -> () loc(#loc111)
    cir.return loc(#loc110)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":27:19)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":24:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":28:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":25:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":27:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":27:12)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":27:26)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc15 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":30:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":49:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":32:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":32:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":34:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":34:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":34:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":35:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":36:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":48:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":37:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":37:16)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":37:26)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":38:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":38:14)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":40:21)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":40:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":40:38)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":40:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":41:37)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":30:6)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":41:28)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":41:46)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":41:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":42:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":45:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":42:18)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":42:14)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":42:21)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":42:33)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":43:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":44:29)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":44:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":44:24)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":44:25)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":42:40)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":42:39)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":46:22)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":46:33)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":46:34)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":46:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":47:19)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":56:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":60:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":57:1)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":59:12)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":59:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":62:1)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":81:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":64:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":64:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":66:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":66:12)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":66:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":67:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":68:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":80:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":69:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":69:16)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":69:26)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":70:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":70:14)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":72:21)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":72:28)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":72:38)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":72:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":73:37)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":62:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":73:28)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":73:46)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":73:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":74:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":77:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":74:18)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":74:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":74:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":74:33)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":75:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":76:29)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":76:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":76:24)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":76:25)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":74:40)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":74:39)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":78:22)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":78:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":78:34)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":78:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":79:19)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":83:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":86:1)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_43.cpp":85:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc6, #loc7])
#loc116 = loc(fused[#loc14, #loc15])
#loc117 = loc(fused[#loc16, #loc17])
#loc118 = loc(fused[#loc18, #loc19])
#loc119 = loc(fused[#loc20, #loc21])
#loc120 = loc(fused[#loc24, #loc22])
#loc121 = loc(fused[#loc26, #loc27])
#loc122 = loc(fused[#loc28, #loc29])
#loc123 = loc(fused[#loc28, #loc30])
#loc124 = loc(fused[#loc31, #loc32])
#loc125 = loc(fused[#loc34, #loc35])
#loc126 = loc(fused[#loc33, #loc35])
#loc127 = loc(fused[#loc36, #loc35])
#loc128 = loc(fused[#loc39, #loc40])
#loc129 = loc(fused[#loc41, #loc40])
#loc130 = loc(fused[#loc42, #loc43])
#loc131 = loc(fused[#loc45, #loc44])
#loc132 = loc(fused[#loc46, #loc47])
#loc133 = loc(fused[#loc48, #loc43])
#loc134 = loc(fused[#loc50, #loc49])
#loc135 = loc(fused[#loc54, #loc53])
#loc136 = loc(fused[#loc60, #loc61])
#loc138 = loc(fused[#loc66, #loc65])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc69, #loc70])
#loc141 = loc(fused[#loc73, #loc71])
#loc142 = loc(fused[#loc75, #loc76])
#loc143 = loc(fused[#loc77, #loc78])
#loc144 = loc(fused[#loc77, #loc79])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc83, #loc84])
#loc147 = loc(fused[#loc82, #loc84])
#loc148 = loc(fused[#loc85, #loc84])
#loc149 = loc(fused[#loc88, #loc89])
#loc150 = loc(fused[#loc90, #loc89])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc94, #loc93])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc97, #loc92])
#loc155 = loc(fused[#loc99, #loc98])
#loc156 = loc(fused[#loc103, #loc102])
#loc157 = loc(fused[#loc109, #loc110])
