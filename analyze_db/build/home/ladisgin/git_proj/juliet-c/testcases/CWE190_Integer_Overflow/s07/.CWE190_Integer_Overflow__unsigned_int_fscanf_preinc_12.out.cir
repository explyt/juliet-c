!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":164:10)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":164:14)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":164:20)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":164:32)
#loc218 = loc(fused[#loc75, #loc76])
#loc219 = loc(fused[#loc77, #loc78])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc189)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc190)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printUnsignedLine(!u32i) loc(#loc192)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc195)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc196)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc21)
    cir.store %4, %2 : !u32i, !cir.ptr<!u32i> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc200)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc200)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc191)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc30)
    cir.br ^bb4 loc(#loc28)
  ^bb3:  // pred: ^bb1
    %15 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc32)
    cir.store %16, %2 : !u32i, !cir.ptr<!u32i> loc(#loc202)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc204)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc204)
    %19 = cir.call %18() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc36)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %20 ^bb7, ^bb10 loc(#loc205)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc206)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc43)
    %22 = cir.unary(inc, %21) : !u32i, !u32i loc(#loc43)
    cir.store %22, %2 : !u32i, !cir.ptr<!u32i> loc(#loc207)
    %23 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc16)
    cir.store %23, %0 : !u32i, !cir.ptr<!u32i> loc(#loc195)
    %24 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc45)
    cir.call @printUnsignedLine(%24) : (!u32i) -> () loc(#loc46)
    cir.br ^bb9 loc(#loc42)
  ^bb9:  // pred: ^bb8
    cir.br ^bb16 loc(#loc39)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc208)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc49)
    %26 = cir.const #cir.int<2147483647> : !s32i loc(#loc50)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc50)
    %28 = cir.const #cir.int<2> : !u32i loc(#loc50)
    %29 = cir.binop(mul, %27, %28) : !u32i loc(#loc50)
    %30 = cir.const #cir.int<1> : !u32i loc(#loc50)
    %31 = cir.binop(add, %29, %30) : !u32i loc(#loc50)
    %32 = cir.cmp(lt, %25, %31) : !u32i, !cir.bool loc(#loc209)
    cir.brcond %32 ^bb12, ^bb13 loc(#loc210)
  ^bb12:  // pred: ^bb11
    %33 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc54)
    %34 = cir.unary(inc, %33) : !u32i, !u32i loc(#loc54)
    cir.store %34, %2 : !u32i, !cir.ptr<!u32i> loc(#loc211)
    %35 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc18)
    cir.store %35, %1 : !u32i, !cir.ptr<!u32i> loc(#loc196)
    %36 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc56)
    cir.call @printUnsignedLine(%36) : (!u32i) -> () loc(#loc57)
    cir.br ^bb14 loc(#loc52)
  ^bb13:  // pred: ^bb11
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc12)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb14 loc(#loc48)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc35)
  ^bb16:  // 2 preds: ^bb9, ^bb15
    cir.br ^bb17 loc(#loc35)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc14)
  } loc(#loc194)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc212)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc215)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc82)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    cir.return %17 : !s32i loc(#loc222)
  } loc(#loc217)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc225)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc226)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc101)
    cir.store %4, %2 : !u32i, !cir.ptr<!u32i> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc229)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc229)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc105)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc230)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc110)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc191)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc111)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc112)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc112)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc110)
    cir.br ^bb4 loc(#loc108)
  ^bb3:  // pred: ^bb1
    %15 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc113)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc191)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc115)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc115)
    %20 = cir.call @__isoc99_fscanf(%17, %19, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc113)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc231)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc232)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
    %23 = cir.call %22() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc118)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %24 ^bb7, ^bb13 loc(#loc233)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc234)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc125)
    %26 = cir.const #cir.int<2147483647> : !s32i loc(#loc126)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc126)
    %28 = cir.const #cir.int<2> : !u32i loc(#loc126)
    %29 = cir.binop(mul, %27, %28) : !u32i loc(#loc126)
    %30 = cir.const #cir.int<1> : !u32i loc(#loc126)
    %31 = cir.binop(add, %29, %30) : !u32i loc(#loc126)
    %32 = cir.cmp(lt, %25, %31) : !u32i, !cir.bool loc(#loc235)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc130)
    %34 = cir.unary(inc, %33) : !u32i, !u32i loc(#loc130)
    cir.store %34, %2 : !u32i, !cir.ptr<!u32i> loc(#loc237)
    %35 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc96)
    cir.store %35, %0 : !u32i, !cir.ptr<!u32i> loc(#loc224)
    %36 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc132)
    cir.call @printUnsignedLine(%36) : (!u32i) -> () loc(#loc133)
    cir.br ^bb11 loc(#loc128)
  ^bb10:  // pred: ^bb8
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc134)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.br ^bb11 loc(#loc124)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc124)
  ^bb12:  // pred: ^bb11
    cir.br ^bb19 loc(#loc121)
  ^bb13:  // pred: ^bb6
    cir.br ^bb14 loc(#loc238)
  ^bb14:  // pred: ^bb13
    %39 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc138)
    %40 = cir.const #cir.int<2147483647> : !s32i loc(#loc139)
    %41 = cir.cast(integral, %40 : !s32i), !u32i loc(#loc139)
    %42 = cir.const #cir.int<2> : !u32i loc(#loc139)
    %43 = cir.binop(mul, %41, %42) : !u32i loc(#loc139)
    %44 = cir.const #cir.int<1> : !u32i loc(#loc139)
    %45 = cir.binop(add, %43, %44) : !u32i loc(#loc139)
    %46 = cir.cmp(lt, %39, %45) : !u32i, !cir.bool loc(#loc239)
    cir.brcond %46 ^bb15, ^bb16 loc(#loc240)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc143)
    %48 = cir.unary(inc, %47) : !u32i, !u32i loc(#loc143)
    cir.store %48, %2 : !u32i, !cir.ptr<!u32i> loc(#loc241)
    %49 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc98)
    cir.store %49, %1 : !u32i, !cir.ptr<!u32i> loc(#loc225)
    %50 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc145)
    cir.call @printUnsignedLine(%50) : (!u32i) -> () loc(#loc146)
    cir.br ^bb17 loc(#loc141)
  ^bb16:  // pred: ^bb14
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc147)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb17 loc(#loc137)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc137)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc117)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc117)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc94)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc244)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc245)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc157)
    cir.store %4, %2 : !u32i, !cir.ptr<!u32i> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc248)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc248)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc161)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc249)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc166)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc166)
    cir.store %10, %2 : !u32i, !cir.ptr<!u32i> loc(#loc250)
    cir.br ^bb4 loc(#loc164)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<2> : !s32i loc(#loc168)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc168)
    cir.store %12, %2 : !u32i, !cir.ptr<!u32i> loc(#loc251)
    cir.br ^bb4 loc(#loc160)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc160)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc252)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc253)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc253)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc172)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc172)
    cir.brcond %16 ^bb7, ^bb10 loc(#loc254)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc255)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc179)
    %18 = cir.unary(inc, %17) : !u32i, !u32i loc(#loc179)
    cir.store %18, %2 : !u32i, !cir.ptr<!u32i> loc(#loc256)
    %19 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc152)
    cir.store %19, %0 : !u32i, !cir.ptr<!u32i> loc(#loc243)
    %20 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc181)
    cir.call @printUnsignedLine(%20) : (!u32i) -> () loc(#loc182)
    cir.br ^bb9 loc(#loc178)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc175)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc257)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc185)
    %22 = cir.unary(inc, %21) : !u32i, !u32i loc(#loc185)
    cir.store %22, %2 : !u32i, !cir.ptr<!u32i> loc(#loc258)
    %23 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc154)
    cir.store %23, %1 : !u32i, !cir.ptr<!u32i> loc(#loc244)
    %24 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc187)
    cir.call @printUnsignedLine(%24) : (!u32i) -> () loc(#loc188)
    cir.br ^bb12 loc(#loc184)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc171)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc171)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc150)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":29:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":56:23)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":22:1)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":59:1)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":41:13)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":41:35)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":51:13)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":51:35)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":24:5)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":24:18)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":25:12)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":25:5)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":26:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":35:5)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":26:8)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":26:33)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":27:5)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":30:5)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":32:5)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":29:9)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":29:17)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":34:16)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":34:9)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":36:5)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":58:5)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":36:8)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":36:33)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":37:5)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":44:5)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":46:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":38:9)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":43:9)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":40:13)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":40:15)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":42:31)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":42:13)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":48:9)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":57:9)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":48:13)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":48:20)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":49:9)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":53:9)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":55:9)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":50:13)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":50:15)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":52:31)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":52:13)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":56:13)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":149:1)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":153:1)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":151:5)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":151:13)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":152:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":152:13)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":169:15)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":171:15)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":174:15)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":176:15)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":164:1)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":179:1)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":165:1)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":167:27)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":167:22)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":167:5)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":169:5)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":170:5)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":170:65)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":171:5)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":174:5)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":175:5)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":175:64)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":176:5)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":178:12)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":178:5)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":68:1)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":110:1)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":88:13)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":88:35)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":102:13)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":102:35)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":70:5)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":70:18)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":71:12)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":71:5)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":72:5)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":81:5)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":72:8)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":72:33)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":73:5)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":76:5)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":78:5)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":75:9)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":75:17)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":75:24)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":80:9)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":80:17)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":80:24)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":82:5)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":109:5)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":82:8)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":82:33)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":83:5)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":95:5)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":97:5)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":85:9)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":94:9)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":85:13)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":85:20)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":86:9)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":90:9)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":92:9)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":87:13)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":87:15)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":89:31)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":89:13)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":93:23)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":93:13)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":99:9)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":108:9)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":99:13)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":99:20)
#loc140 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":100:9)
#loc141 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":104:9)
#loc142 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":106:9)
#loc143 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":101:13)
#loc144 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":101:15)
#loc145 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":103:31)
#loc146 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":103:13)
#loc147 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":107:23)
#loc148 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":107:13)
#loc149 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":115:1)
#loc150 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":147:1)
#loc151 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":134:13)
#loc152 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":134:35)
#loc153 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":143:13)
#loc154 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":143:35)
#loc155 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":117:5)
#loc156 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":117:18)
#loc157 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":118:12)
#loc158 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":118:5)
#loc159 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":119:5)
#loc160 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":128:5)
#loc161 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":119:8)
#loc162 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":119:33)
#loc163 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":120:5)
#loc164 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":123:5)
#loc165 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":125:5)
#loc166 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":122:16)
#loc167 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":122:9)
#loc168 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":127:16)
#loc169 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":127:9)
#loc170 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":129:5)
#loc171 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":146:5)
#loc172 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":129:8)
#loc173 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":129:33)
#loc174 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":130:5)
#loc175 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":137:5)
#loc176 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":139:5)
#loc177 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":131:9)
#loc178 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":136:9)
#loc179 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":133:13)
#loc180 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":133:15)
#loc181 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":135:31)
#loc182 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":135:13)
#loc183 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":140:9)
#loc184 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":145:9)
#loc185 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":142:13)
#loc186 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":142:15)
#loc187 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":144:31)
#loc188 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_12.c":144:13)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc3, #loc4])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc8, #loc9])
#loc193 = loc(fused[#loc10, #loc11])
#loc194 = loc(fused[#loc13, #loc14])
#loc195 = loc(fused[#loc15, #loc16])
#loc196 = loc(fused[#loc17, #loc18])
#loc197 = loc(fused[#loc19, #loc20])
#loc198 = loc(fused[#loc22, #loc21])
#loc199 = loc(fused[#loc23, #loc24])
#loc200 = loc(fused[#loc25, #loc26])
#loc201 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc202 = loc(fused[#loc33, #loc32])
#loc203 = loc(fused[#loc34, #loc35])
#loc204 = loc(fused[#loc36, #loc37])
#loc205 = loc(fused[#loc38, #loc39, #loc40, #loc35])
#loc206 = loc(fused[#loc41, #loc42])
#loc207 = loc(fused[#loc43, #loc44])
#loc208 = loc(fused[#loc47, #loc48])
#loc209 = loc(fused[#loc49, #loc50])
#loc210 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc211 = loc(fused[#loc54, #loc55])
#loc212 = loc(fused[#loc59, #loc60])
#loc213 = loc(fused[#loc61, #loc62])
#loc214 = loc(fused[#loc63, #loc64])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc67, #loc68])
#loc217 = loc(fused[#loc73, #loc74])
#loc220 = loc(fused[#loc84, #loc85])
#loc221 = loc(fused[#loc88, #loc89])
#loc222 = loc(fused[#loc92, #loc91])
#loc223 = loc(fused[#loc93, #loc94])
#loc224 = loc(fused[#loc95, #loc96])
#loc225 = loc(fused[#loc97, #loc98])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc102, #loc101])
#loc228 = loc(fused[#loc103, #loc104])
#loc229 = loc(fused[#loc105, #loc106])
#loc230 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc231 = loc(fused[#loc116, #loc117])
#loc232 = loc(fused[#loc118, #loc119])
#loc233 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc234 = loc(fused[#loc123, #loc124])
#loc235 = loc(fused[#loc125, #loc126])
#loc236 = loc(fused[#loc127, #loc128, #loc129, #loc124])
#loc237 = loc(fused[#loc130, #loc131])
#loc238 = loc(fused[#loc136, #loc137])
#loc239 = loc(fused[#loc138, #loc139])
#loc240 = loc(fused[#loc140, #loc141, #loc142, #loc137])
#loc241 = loc(fused[#loc143, #loc144])
#loc242 = loc(fused[#loc149, #loc150])
#loc243 = loc(fused[#loc151, #loc152])
#loc244 = loc(fused[#loc153, #loc154])
#loc245 = loc(fused[#loc155, #loc156])
#loc246 = loc(fused[#loc158, #loc157])
#loc247 = loc(fused[#loc159, #loc160])
#loc248 = loc(fused[#loc161, #loc162])
#loc249 = loc(fused[#loc163, #loc164, #loc165, #loc160])
#loc250 = loc(fused[#loc167, #loc166])
#loc251 = loc(fused[#loc169, #loc168])
#loc252 = loc(fused[#loc170, #loc171])
#loc253 = loc(fused[#loc172, #loc173])
#loc254 = loc(fused[#loc174, #loc175, #loc176, #loc171])
#loc255 = loc(fused[#loc177, #loc178])
#loc256 = loc(fused[#loc179, #loc180])
#loc257 = loc(fused[#loc183, #loc184])
#loc258 = loc(fused[#loc185, #loc186])
