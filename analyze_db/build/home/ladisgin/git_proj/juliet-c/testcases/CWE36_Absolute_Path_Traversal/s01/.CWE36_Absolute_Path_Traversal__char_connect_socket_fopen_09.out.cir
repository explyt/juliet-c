!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":223:10)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":223:14)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":223:20)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":223:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc378 = loc(fused[#loc261, #loc262])
#loc379 = loc(fused[#loc263, #loc264])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc277)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc278)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc279)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc281)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc282)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc283)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc284)
  cir.func private @close(!s32i) -> !s32i loc(#loc285)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc22)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc287)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_093badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc290)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc290)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc290)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc277)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc35)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc295)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc296)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc297)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc298)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc299)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc46)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc298)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc299)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %18 = cir.const #cir.int<1> : !u32i loc(#loc54)
              %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc54)
              %20 = cir.const #cir.int<6> : !u32i loc(#loc55)
              %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc55)
              %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc301)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc62)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc303)
                cir.if %75 {
                  cir.break loc(#loc64)
                } loc(#loc304)
              } loc(#loc302)
              %23 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc305)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc306)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc307)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc72)
              %28 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc308)
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
              %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
              %32 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc309)
              %34 = cir.const #cir.int<27015> : !s32i loc(#loc80)
              %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc80)
              %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
              %37 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc310)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %73 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc312)
                %74 = cir.const #cir.int<16> : !u64i loc(#loc313)
                %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc313)
                %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc93)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc314)
                cir.if %79 {
                  cir.break loc(#loc95)
                } loc(#loc315)
              } loc(#loc311)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
              %40 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc98)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc99)
              %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc316)
              %43 = cir.const #cir.int<1> : !u64i loc(#loc317)
              %44 = cir.const #cir.int<4096> : !s32i loc(#loc104)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc104)
              %46 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc318)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc106)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc106)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc319)
              %51 = cir.binop(mul, %43, %50) : !u64i loc(#loc320)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc108)
              %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
              %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc109)
              cir.store %54, %7 : !s32i, !cir.ptr<!s32i> loc(#loc321)
              cir.scope {
                %72 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc115)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc323)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc116)
                  cir.yield %77 : !cir.bool loc(#loc116)
                }, false {
                  %77 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc324)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc116)
                    cir.yield %81 : !cir.bool loc(#loc116)
                  }, false {
                    %81 = cir.const #false loc(#loc116)
                    cir.yield %81 : !cir.bool loc(#loc116)
                  }) : (!cir.bool) -> !cir.bool loc(#loc116)
                  cir.yield %80 : !cir.bool loc(#loc116)
                }) : (!cir.bool) -> !cir.bool loc(#loc116)
                cir.if %76 {
                  cir.break loc(#loc120)
                } loc(#loc325)
              } loc(#loc322)
              %55 = cir.const #cir.int<0> : !s8i loc(#loc121)
              %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              %57 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc123)
              %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc124)
              %60 = cir.const #cir.int<1> : !u64i loc(#loc326)
              %61 = cir.binop(div, %59, %60) : !u64i loc(#loc327)
              %62 = cir.binop(add, %57, %61) : !u64i loc(#loc328)
              %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc127)
              cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc329)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              %65 = cir.const #cir.int<13> : !s8i loc(#loc129)
              %66 = cir.cast(integral, %65 : !s8i), !s32i loc(#loc129)
              %67 = cir.call @strchr(%64, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
              cir.store %67, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc330)
              cir.scope {
                %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc135)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s8i loc(#loc137)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc333)
                } loc(#loc332)
              } loc(#loc331)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
              %69 = cir.const #cir.int<10> : !s8i loc(#loc141)
              %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc141)
              %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
              cir.store %71, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
              cir.scope {
                %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s8i loc(#loc149)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc337)
                } loc(#loc336)
              } loc(#loc335)
              cir.yield loc(#loc52)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc152)
              cir.condition(%18) loc(#loc152)
            } loc(#loc300)
          } loc(#loc300)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc155)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc156)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc156)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc339)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc159)
            } loc(#loc340)
          } loc(#loc338)
        } loc(#loc294)
      } loc(#loc293)
    } loc(#loc292)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc342)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc163)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc342)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc164)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc22)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc22)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc164)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc343)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc170)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc171)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc345)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc174)
        } loc(#loc346)
      } loc(#loc344)
    } loc(#loc341)
    cir.return loc(#loc26)
  } loc(#loc288)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc347)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc177)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc180)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc350)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc351)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc351)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc351)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc187)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc347)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc191)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc191)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc177)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc177)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc195)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc196)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc180)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc180)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc196)
      } loc(#loc354)
    } loc(#loc353)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc356)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc201)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc356)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc202)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc204)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc204)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc202)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc357)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc209)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc210)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc359)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc212)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc213)
        } loc(#loc360)
      } loc(#loc358)
    } loc(#loc355)
    cir.return loc(#loc182)
  } loc(#loc349)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc362)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc363)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc363)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc363)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc220)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc364)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc277)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc224)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc224)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc226)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc228)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc228)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc226)
      } loc(#loc366)
    } loc(#loc365)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc368)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc232)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc368)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc233)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc235)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc235)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc233)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc369)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc240)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc241)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc371)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc243)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc244)
        } loc(#loc372)
      } loc(#loc370)
    } loc(#loc367)
    cir.return loc(#loc215)
  } loc(#loc361)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_094goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09L8goodG2B1Ev() : () -> () loc(#loc247)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09L8goodG2B2Ev() : () -> () loc(#loc248)
    cir.return loc(#loc246)
  } loc(#loc373)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc374)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc375)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc258)
  cir.func @main(%arg0: !s32i loc(fused[#loc261, #loc262]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc263, #loc264])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc379)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc260)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc265)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc266)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc267)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc267)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc268)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc255)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc255)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc269)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_094goodEv() : () -> () loc(#loc270)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc256)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc256)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc271)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc257)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc257)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc272)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_093badEv() : () -> () loc(#loc273)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc258)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc258)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc274)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc275)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc380)
    cir.return %15 : !s32i loc(#loc380)
  } loc(#loc377)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/sys/socket.h":102:1)
#loc6 = loc("/usr/include/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":89:53)
#loc10 = loc("/usr/include/netinet/in.h":404:1)
#loc11 = loc("/usr/include/netinet/in.h":405:40)
#loc12 = loc("/usr/include/sys/socket.h":126:1)
#loc13 = loc("/usr/include/sys/socket.h":126:75)
#loc14 = loc("/usr/include/sys/socket.h":145:1)
#loc15 = loc("/usr/include/sys/socket.h":145:68)
#loc16 = loc("/usr/include/string.h":226:1)
#loc17 = loc("/usr/include/string.h":227:50)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("/usr/include/stdio.h":264:1)
#loc21 = loc("/usr/include/stdio.h":266:3)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":133:29)
#loc23 = loc("/usr/include/stdio.h":184:1)
#loc24 = loc("/usr/include/stdio.h":184:36)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":55:1)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":139:1)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":57:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":57:12)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":58:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":58:37)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":59:12)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":59:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":60:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":129:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":60:8)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":61:5)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":62:9)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":128:9)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":67:13)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":67:17)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":68:13)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":68:32)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":69:13)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":69:19)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":70:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":70:36)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":71:13)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":71:41)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":71:30)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":71:37)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":72:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":117:21)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":82:40)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":82:49)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":82:62)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":82:33)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":82:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":82:73)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":83:17)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":86:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":83:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":83:38)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":84:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":85:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":87:24)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":87:25)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":87:34)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":87:37)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":87:51)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":87:17)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":87:52)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":88:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":88:17)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":89:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":89:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":89:63)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":90:42)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":90:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":90:17)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":90:50)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":94:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:29)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:62)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:63)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:72)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:86)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:21)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":91:92)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":92:17)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":93:21)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:35)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:59)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:66)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:64)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:50)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:73)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:76)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:87)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:92)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:107)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:117)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:118)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:121)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:30)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":98:122)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":99:17)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":102:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":99:21)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":99:35)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":99:48)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":99:51)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":99:65)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":100:17)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":101:21)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":104:61)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":104:17)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":104:22)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":104:32)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":104:45)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":104:56)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":104:57)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":106:34)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":106:40)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":106:27)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":106:17)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":106:44)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":107:17)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":110:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":107:21)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":108:17)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":109:32)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":109:22)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":109:21)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":111:34)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":111:40)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":111:27)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":111:17)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":111:44)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":112:17)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":115:17)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":112:21)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":113:17)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":114:32)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":114:22)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":114:21)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":117:20)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":118:13)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":121:13)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":118:17)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":118:34)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":119:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":120:30)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":120:17)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":130:5)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":138:5)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":131:9)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":131:23)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":133:17)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":133:23)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":133:9)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":133:34)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":134:9)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":137:9)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":134:13)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":134:22)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":135:9)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":136:20)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":136:13)
#loc175 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc176 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":154:19)
#loc178 = loc("/usr/include/string.h":149:1)
#loc179 = loc("/usr/include/string.h":150:14)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":163:22)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":146:1)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":175:1)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":148:5)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":148:12)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":149:5)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":149:37)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":150:12)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":150:5)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":151:5)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":165:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":151:8)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":152:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":155:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":157:5)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":154:9)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":163:9)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":163:16)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":166:5)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":174:5)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":167:9)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":167:23)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":169:17)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":169:23)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":169:29)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":169:9)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":169:34)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":170:9)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":173:9)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":170:13)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":170:22)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":171:9)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":172:20)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":172:13)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":178:1)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":202:1)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":180:5)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":180:12)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":181:5)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":181:37)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":182:12)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":182:5)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":183:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":192:5)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":183:8)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":184:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":190:9)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":190:16)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":190:22)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":193:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":201:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":194:9)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":194:23)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":196:17)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":196:23)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":196:29)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":196:9)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":196:34)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":197:9)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":200:9)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":197:13)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":197:22)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":198:9)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":199:20)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":199:13)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":204:1)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":208:1)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":206:5)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":207:5)
#loc249 = loc("/usr/include/stdlib.h":575:1)
#loc250 = loc("/usr/include/stdlib.h":575:41)
#loc251 = loc("/usr/include/time.h":76:1)
#loc252 = loc("/usr/include/time.h":76:38)
#loc253 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc254 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":228:15)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":230:15)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":233:15)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":235:15)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":223:1)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":238:1)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":224:1)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":226:27)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":226:22)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":226:5)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":228:5)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":229:5)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":230:5)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":233:5)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":234:5)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":235:5)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":237:12)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_09.cpp":237:5)
#loc277 = loc(fused[#loc1, #loc2])
#loc278 = loc(fused[#loc3, #loc4])
#loc279 = loc(fused[#loc5, #loc6])
#loc280 = loc(fused[#loc7, #loc8])
#loc281 = loc(fused[#loc10, #loc11])
#loc282 = loc(fused[#loc12, #loc13])
#loc283 = loc(fused[#loc14, #loc15])
#loc284 = loc(fused[#loc16, #loc17])
#loc285 = loc(fused[#loc18, #loc19])
#loc286 = loc(fused[#loc20, #loc21])
#loc287 = loc(fused[#loc23, #loc24])
#loc288 = loc(fused[#loc25, #loc26])
#loc289 = loc(fused[#loc27, #loc28])
#loc290 = loc(fused[#loc29, #loc30])
#loc291 = loc(fused[#loc32, #loc31])
#loc292 = loc(fused[#loc33, #loc34])
#loc293 = loc(fused[#loc36, #loc34])
#loc294 = loc(fused[#loc37, #loc38])
#loc295 = loc(fused[#loc39, #loc40])
#loc296 = loc(fused[#loc41, #loc42])
#loc297 = loc(fused[#loc43, #loc44])
#loc298 = loc(fused[#loc45, #loc46])
#loc299 = loc(fused[#loc47, #loc48])
#loc300 = loc(fused[#loc51, #loc52])
#loc301 = loc(fused[#loc57, #loc58])
#loc302 = loc(fused[#loc59, #loc60])
#loc303 = loc(fused[#loc61, #loc62])
#loc304 = loc(fused[#loc63, #loc60])
#loc305 = loc(fused[#loc65, #loc66])
#loc306 = loc(fused[#loc68, #loc69])
#loc307 = loc(fused[#loc70, #loc71])
#loc308 = loc(fused[#loc74, #loc72])
#loc309 = loc(fused[#loc78, #loc79])
#loc310 = loc(fused[#loc83, #loc84])
#loc311 = loc(fused[#loc85, #loc86])
#loc312 = loc(fused[#loc88, #loc89])
#loc313 = loc(fused[#loc90, #loc91])
#loc314 = loc(fused[#loc92, #loc93])
#loc315 = loc(fused[#loc94, #loc86])
#loc316 = loc(fused[#loc100, #loc101])
#loc317 = loc(fused[#loc102, #loc103])
#loc318 = loc(fused[#loc104, #loc105])
#loc319 = loc(fused[#loc104, #loc106])
#loc320 = loc(fused[#loc102, #loc107])
#loc321 = loc(fused[#loc110, #loc111])
#loc322 = loc(fused[#loc112, #loc113])
#loc323 = loc(fused[#loc114, #loc115])
#loc324 = loc(fused[#loc117, #loc118])
#loc325 = loc(fused[#loc119, #loc113])
#loc326 = loc(fused[#loc125, #loc126])
#loc327 = loc(fused[#loc124, #loc126])
#loc328 = loc(fused[#loc123, #loc126])
#loc329 = loc(fused[#loc122, #loc121])
#loc330 = loc(fused[#loc131, #loc132])
#loc331 = loc(fused[#loc133, #loc134])
#loc332 = loc(fused[#loc136, #loc134])
#loc333 = loc(fused[#loc139, #loc137])
#loc334 = loc(fused[#loc143, #loc144])
#loc335 = loc(fused[#loc145, #loc146])
#loc336 = loc(fused[#loc148, #loc146])
#loc337 = loc(fused[#loc151, #loc149])
#loc338 = loc(fused[#loc153, #loc154])
#loc339 = loc(fused[#loc155, #loc156])
#loc340 = loc(fused[#loc157, #loc154])
#loc341 = loc(fused[#loc160, #loc161])
#loc342 = loc(fused[#loc162, #loc163])
#loc343 = loc(fused[#loc166, #loc167])
#loc344 = loc(fused[#loc168, #loc169])
#loc345 = loc(fused[#loc170, #loc171])
#loc346 = loc(fused[#loc172, #loc169])
#loc347 = loc(fused[#loc175, #loc176])
#loc348 = loc(fused[#loc178, #loc179])
#loc349 = loc(fused[#loc181, #loc182])
#loc350 = loc(fused[#loc183, #loc184])
#loc351 = loc(fused[#loc185, #loc186])
#loc352 = loc(fused[#loc188, #loc187])
#loc353 = loc(fused[#loc189, #loc190])
#loc354 = loc(fused[#loc192, #loc193, #loc194, #loc190])
#loc355 = loc(fused[#loc198, #loc199])
#loc356 = loc(fused[#loc200, #loc201])
#loc357 = loc(fused[#loc205, #loc206])
#loc358 = loc(fused[#loc207, #loc208])
#loc359 = loc(fused[#loc209, #loc210])
#loc360 = loc(fused[#loc211, #loc208])
#loc361 = loc(fused[#loc214, #loc215])
#loc362 = loc(fused[#loc216, #loc217])
#loc363 = loc(fused[#loc218, #loc219])
#loc364 = loc(fused[#loc221, #loc220])
#loc365 = loc(fused[#loc222, #loc223])
#loc366 = loc(fused[#loc225, #loc223])
#loc367 = loc(fused[#loc229, #loc230])
#loc368 = loc(fused[#loc231, #loc232])
#loc369 = loc(fused[#loc236, #loc237])
#loc370 = loc(fused[#loc238, #loc239])
#loc371 = loc(fused[#loc240, #loc241])
#loc372 = loc(fused[#loc242, #loc239])
#loc373 = loc(fused[#loc245, #loc246])
#loc374 = loc(fused[#loc249, #loc250])
#loc375 = loc(fused[#loc251, #loc252])
#loc376 = loc(fused[#loc253, #loc254])
#loc377 = loc(fused[#loc259, #loc260])
#loc380 = loc(fused[#loc276, #loc275])
