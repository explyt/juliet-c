!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__int_realloc_42.c":24:24)
#loc10 = loc("CWE401_Memory_Leak__int_realloc_42.c":24:30)
#loc56 = loc("CWE401_Memory_Leak__int_realloc_42.c":69:28)
#loc57 = loc("CWE401_Memory_Leak__int_realloc_42.c":69:34)
#loc101 = loc("CWE401_Memory_Leak__int_realloc_42.c":49:28)
#loc102 = loc("CWE401_Memory_Leak__int_realloc_42.c":49:34)
#loc130 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc56, #loc57])
#loc164 = loc(fused[#loc101, #loc102])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc127)
  cir.func private  @printIntLine(!s32i) loc(#loc128)
  cir.func internal private  @badSource(%arg0: !cir.ptr<!s32i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s32i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc12)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc13)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc14)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc131)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc132)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc133)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
    cir.scope {
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
      %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc22)
      %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !s32i loc(#loc136)
      %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc23)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc27)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc137)
    } loc(#loc135)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc31)
    cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc34)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc35)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    cir.store %19, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    cir.return %20 : !cir.ptr<!s32i> loc(#loc139)
  } loc(#loc129)
  cir.func no_proto  @CWE401_Memory_Leak__int_realloc_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s32i>) -> !cir.ptr<!s32i> loc(#loc45)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.return loc(#loc39)
  } loc(#loc140)
  cir.func no_proto  @CWE401_Memory_Leak__int_realloc_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc144)
  cir.func internal private  @goodB2GSource(%arg0: !cir.ptr<!s32i> loc(fused[#loc56, #loc57])) -> !cir.ptr<!s32i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc55)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc58)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc59)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc60)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc61)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc149)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc150)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc151)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc152)
    cir.scope {
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
      %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc69)
      %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !s32i loc(#loc154)
      %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc70)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc72)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc74)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
      } loc(#loc155)
    } loc(#loc153)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc75)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc81)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc82)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    cir.store %19, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
    cir.return %20 : !cir.ptr<!s32i> loc(#loc157)
  } loc(#loc147)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc158)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s32i>) -> !cir.ptr<!s32i> loc(#loc94)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc97)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc98)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
    cir.return loc(#loc88)
  } loc(#loc159)
  cir.func internal private  @goodG2BSource(%arg0: !cir.ptr<!s32i> loc(fused[#loc101, #loc102])) -> !cir.ptr<!s32i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc100)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc103)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc104)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc104)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc104)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc104)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc106)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc109)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc112)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc113)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
    cir.return %18 : !cir.ptr<!s32i> loc(#loc167)
  } loc(#loc163)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc120)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s32i>) -> !cir.ptr<!s32i> loc(#loc123)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
    cir.return loc(#loc117)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_realloc_42.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int_realloc_42.c":33:1)
#loc11 = loc("CWE401_Memory_Leak__int_realloc_42.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__int_realloc_42.c":27:19)
#loc13 = loc("CWE401_Memory_Leak__int_realloc_42.c":27:27)
#loc14 = loc("CWE401_Memory_Leak__int_realloc_42.c":27:33)
#loc15 = loc("CWE401_Memory_Leak__int_realloc_42.c":27:37)
#loc16 = loc("CWE401_Memory_Leak__int_realloc_42.c":27:47)
#loc17 = loc("CWE401_Memory_Leak__int_realloc_42.c":27:48)
#loc18 = loc("CWE401_Memory_Leak__int_realloc_42.c":27:5)
#loc19 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:5)
#loc20 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:33)
#loc21 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:9)
#loc22 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:17)
#loc23 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:14)
#loc24 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:23)
#loc25 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:24)
#loc26 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:30)
#loc27 = loc("CWE401_Memory_Leak__int_realloc_42.c":28:29)
#loc28 = loc("CWE401_Memory_Leak__int_realloc_42.c":30:15)
#loc29 = loc("CWE401_Memory_Leak__int_realloc_42.c":30:5)
#loc30 = loc("CWE401_Memory_Leak__int_realloc_42.c":30:10)
#loc31 = loc("CWE401_Memory_Leak__int_realloc_42.c":30:11)
#loc32 = loc("CWE401_Memory_Leak__int_realloc_42.c":31:18)
#loc33 = loc("CWE401_Memory_Leak__int_realloc_42.c":31:23)
#loc34 = loc("CWE401_Memory_Leak__int_realloc_42.c":31:24)
#loc35 = loc("CWE401_Memory_Leak__int_realloc_42.c":31:5)
#loc36 = loc("CWE401_Memory_Leak__int_realloc_42.c":32:12)
#loc37 = loc("CWE401_Memory_Leak__int_realloc_42.c":32:5)
#loc38 = loc("CWE401_Memory_Leak__int_realloc_42.c":35:1)
#loc39 = loc("CWE401_Memory_Leak__int_realloc_42.c":42:1)
#loc40 = loc("CWE401_Memory_Leak__int_realloc_42.c":37:5)
#loc41 = loc("CWE401_Memory_Leak__int_realloc_42.c":37:11)
#loc42 = loc("CWE401_Memory_Leak__int_realloc_42.c":38:12)
#loc43 = loc("CWE401_Memory_Leak__int_realloc_42.c":38:5)
#loc44 = loc("CWE401_Memory_Leak__int_realloc_42.c":39:22)
#loc45 = loc("CWE401_Memory_Leak__int_realloc_42.c":39:12)
#loc46 = loc("CWE401_Memory_Leak__int_realloc_42.c":39:5)
#loc47 = loc("CWE401_Memory_Leak__int_realloc_42.c":39:26)
#loc48 = loc("CWE401_Memory_Leak__int_realloc_42.c":89:1)
#loc49 = loc("CWE401_Memory_Leak__int_realloc_42.c":93:1)
#loc50 = loc("CWE401_Memory_Leak__int_realloc_42.c":91:5)
#loc51 = loc("CWE401_Memory_Leak__int_realloc_42.c":91:13)
#loc52 = loc("CWE401_Memory_Leak__int_realloc_42.c":92:5)
#loc53 = loc("CWE401_Memory_Leak__int_realloc_42.c":92:13)
#loc54 = loc("CWE401_Memory_Leak__int_realloc_42.c":69:1)
#loc55 = loc("CWE401_Memory_Leak__int_realloc_42.c":78:1)
#loc58 = loc("CWE401_Memory_Leak__int_realloc_42.c":70:1)
#loc59 = loc("CWE401_Memory_Leak__int_realloc_42.c":72:19)
#loc60 = loc("CWE401_Memory_Leak__int_realloc_42.c":72:27)
#loc61 = loc("CWE401_Memory_Leak__int_realloc_42.c":72:33)
#loc62 = loc("CWE401_Memory_Leak__int_realloc_42.c":72:37)
#loc63 = loc("CWE401_Memory_Leak__int_realloc_42.c":72:47)
#loc64 = loc("CWE401_Memory_Leak__int_realloc_42.c":72:48)
#loc65 = loc("CWE401_Memory_Leak__int_realloc_42.c":72:5)
#loc66 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:5)
#loc67 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:33)
#loc68 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:9)
#loc69 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:17)
#loc70 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:14)
#loc71 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:23)
#loc72 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:24)
#loc73 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:30)
#loc74 = loc("CWE401_Memory_Leak__int_realloc_42.c":73:29)
#loc75 = loc("CWE401_Memory_Leak__int_realloc_42.c":75:15)
#loc76 = loc("CWE401_Memory_Leak__int_realloc_42.c":75:5)
#loc77 = loc("CWE401_Memory_Leak__int_realloc_42.c":75:10)
#loc78 = loc("CWE401_Memory_Leak__int_realloc_42.c":75:11)
#loc79 = loc("CWE401_Memory_Leak__int_realloc_42.c":76:18)
#loc80 = loc("CWE401_Memory_Leak__int_realloc_42.c":76:23)
#loc81 = loc("CWE401_Memory_Leak__int_realloc_42.c":76:24)
#loc82 = loc("CWE401_Memory_Leak__int_realloc_42.c":76:5)
#loc83 = loc("CWE401_Memory_Leak__int_realloc_42.c":77:12)
#loc84 = loc("CWE401_Memory_Leak__int_realloc_42.c":77:5)
#loc85 = loc("/usr/include/stdlib.h":687:1)
#loc86 = loc("/usr/include/stdlib.h":687:32)
#loc87 = loc("CWE401_Memory_Leak__int_realloc_42.c":80:1)
#loc88 = loc("CWE401_Memory_Leak__int_realloc_42.c":87:1)
#loc89 = loc("CWE401_Memory_Leak__int_realloc_42.c":82:5)
#loc90 = loc("CWE401_Memory_Leak__int_realloc_42.c":82:11)
#loc91 = loc("CWE401_Memory_Leak__int_realloc_42.c":83:12)
#loc92 = loc("CWE401_Memory_Leak__int_realloc_42.c":83:5)
#loc93 = loc("CWE401_Memory_Leak__int_realloc_42.c":84:26)
#loc94 = loc("CWE401_Memory_Leak__int_realloc_42.c":84:12)
#loc95 = loc("CWE401_Memory_Leak__int_realloc_42.c":84:5)
#loc96 = loc("CWE401_Memory_Leak__int_realloc_42.c":84:30)
#loc97 = loc("CWE401_Memory_Leak__int_realloc_42.c":86:5)
#loc98 = loc("CWE401_Memory_Leak__int_realloc_42.c":86:10)
#loc99 = loc("CWE401_Memory_Leak__int_realloc_42.c":49:1)
#loc100 = loc("CWE401_Memory_Leak__int_realloc_42.c":57:1)
#loc103 = loc("CWE401_Memory_Leak__int_realloc_42.c":50:1)
#loc104 = loc("CWE401_Memory_Leak__int_realloc_42.c":52:19)
#loc105 = loc("CWE401_Memory_Leak__int_realloc_42.c":52:5)
#loc106 = loc("CWE401_Memory_Leak__int_realloc_42.c":54:15)
#loc107 = loc("CWE401_Memory_Leak__int_realloc_42.c":54:5)
#loc108 = loc("CWE401_Memory_Leak__int_realloc_42.c":54:10)
#loc109 = loc("CWE401_Memory_Leak__int_realloc_42.c":54:11)
#loc110 = loc("CWE401_Memory_Leak__int_realloc_42.c":55:18)
#loc111 = loc("CWE401_Memory_Leak__int_realloc_42.c":55:23)
#loc112 = loc("CWE401_Memory_Leak__int_realloc_42.c":55:24)
#loc113 = loc("CWE401_Memory_Leak__int_realloc_42.c":55:5)
#loc114 = loc("CWE401_Memory_Leak__int_realloc_42.c":56:12)
#loc115 = loc("CWE401_Memory_Leak__int_realloc_42.c":56:5)
#loc116 = loc("CWE401_Memory_Leak__int_realloc_42.c":59:1)
#loc117 = loc("CWE401_Memory_Leak__int_realloc_42.c":66:1)
#loc118 = loc("CWE401_Memory_Leak__int_realloc_42.c":61:5)
#loc119 = loc("CWE401_Memory_Leak__int_realloc_42.c":61:11)
#loc120 = loc("CWE401_Memory_Leak__int_realloc_42.c":62:12)
#loc121 = loc("CWE401_Memory_Leak__int_realloc_42.c":62:5)
#loc122 = loc("CWE401_Memory_Leak__int_realloc_42.c":63:26)
#loc123 = loc("CWE401_Memory_Leak__int_realloc_42.c":63:12)
#loc124 = loc("CWE401_Memory_Leak__int_realloc_42.c":63:5)
#loc125 = loc("CWE401_Memory_Leak__int_realloc_42.c":63:30)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc14, #loc16])
#loc133 = loc(fused[#loc12, #loc17])
#loc134 = loc(fused[#loc18, #loc17])
#loc135 = loc(fused[#loc19, #loc20])
#loc136 = loc(fused[#loc21, #loc22])
#loc137 = loc(fused[#loc24, #loc20])
#loc138 = loc(fused[#loc29, #loc28])
#loc139 = loc(fused[#loc37, #loc36])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc43, #loc42])
#loc143 = loc(fused[#loc46, #loc47])
#loc144 = loc(fused[#loc48, #loc49])
#loc145 = loc(fused[#loc50, #loc51])
#loc146 = loc(fused[#loc52, #loc53])
#loc147 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc62, #loc63])
#loc150 = loc(fused[#loc61, #loc63])
#loc151 = loc(fused[#loc59, #loc64])
#loc152 = loc(fused[#loc65, #loc64])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc71, #loc67])
#loc156 = loc(fused[#loc76, #loc75])
#loc157 = loc(fused[#loc84, #loc83])
#loc158 = loc(fused[#loc85, #loc86])
#loc159 = loc(fused[#loc87, #loc88])
#loc160 = loc(fused[#loc89, #loc90])
#loc161 = loc(fused[#loc92, #loc91])
#loc162 = loc(fused[#loc95, #loc96])
#loc163 = loc(fused[#loc99, #loc100])
#loc165 = loc(fused[#loc105, #loc104])
#loc166 = loc(fused[#loc107, #loc106])
#loc167 = loc(fused[#loc115, #loc114])
#loc168 = loc(fused[#loc116, #loc117])
#loc169 = loc(fused[#loc118, #loc119])
#loc170 = loc(fused[#loc121, #loc120])
#loc171 = loc(fused[#loc124, #loc125])
