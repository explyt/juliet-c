!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc221)
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_453badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc222)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc223)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc224)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc226)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc227)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc228)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc229)
  cir.func private @close(!s32i) -> !s32i loc(#loc230)
  cir.global "private" internal dsolocal @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7badDataE = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc231)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc26)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc233)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.get_global @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7badDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc237)
      %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc36)
      cir.store %4, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc237)
      %5 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc37)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc26)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc26)
      %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc37)
      cir.store %9, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc238)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
        %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc44)
        %12 = cir.cmp(ne, %10, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc240)
        cir.if %12 {
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
          %14 = cir.call @fclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc47)
        } loc(#loc241)
      } loc(#loc239)
    } loc(#loc236)
    cir.return loc(#loc30)
  } loc(#loc234)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_453badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc222)
    %2 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_453badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc222)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc222)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc52)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc246)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc247)
      %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc248)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc249)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc250)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc63)
      cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc249)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc66)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc66)
      cir.store %15, %10 : !u64i, !cir.ptr<!u64i> loc(#loc250)
      cir.scope {
        cir.do {
          cir.scope {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc72)
            %17 = cir.const #cir.int<1> : !u32i loc(#loc73)
            %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc73)
            %19 = cir.const #cir.int<6> : !u32i loc(#loc74)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc74)
            %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc75)
            cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc253)
            cir.scope {
              %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc80)
              %72 = cir.const #cir.int<1> : !s32i loc(#loc81)
              %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc81)
              %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc255)
              cir.if %74 {
                cir.break loc(#loc83)
              } loc(#loc256)
            } loc(#loc254)
            %22 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc257)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %24 = cir.const #cir.int<16> : !u64i loc(#loc258)
            cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc259)
            %25 = cir.const #cir.int<2> : !s32i loc(#loc91)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc91)
            %27 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc260)
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
            %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc94)
            %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc95)
            %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc96)
            cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc261)
            %33 = cir.const #cir.int<27015> : !s32i loc(#loc99)
            %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc99)
            %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc100)
            %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc101)
            cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc262)
            cir.scope {
              %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %72 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc264)
              %73 = cir.const #cir.int<16> : !u64i loc(#loc265)
              %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc265)
              %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc111)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc112)
              %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc112)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc266)
              cir.if %78 {
                cir.break loc(#loc114)
              } loc(#loc267)
            } loc(#loc263)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
            %39 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc117)
            %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc118)
            %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc268)
            %42 = cir.const #cir.int<1> : !u64i loc(#loc269)
            %43 = cir.const #cir.int<4096> : !s32i loc(#loc123)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc123)
            %45 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc124)
            %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc270)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc125)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc125)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc271)
            %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc272)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc127)
            %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc128)
            %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc128)
            cir.store %53, %6 : !s32i, !cir.ptr<!s32i> loc(#loc273)
            cir.scope {
              %71 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %72 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc134)
              %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc275)
              %75 = cir.ternary(%74, true {
                %76 = cir.const #true loc(#loc135)
                cir.yield %76 : !cir.bool loc(#loc135)
              }, false {
                %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %77 = cir.const #cir.int<0> : !s32i loc(#loc137)
                %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc276)
                %79 = cir.ternary(%78, true {
                  %80 = cir.const #true loc(#loc135)
                  cir.yield %80 : !cir.bool loc(#loc135)
                }, false {
                  %80 = cir.const #false loc(#loc135)
                  cir.yield %80 : !cir.bool loc(#loc135)
                }) : (!cir.bool) -> !cir.bool loc(#loc135)
                cir.yield %79 : !cir.bool loc(#loc135)
              }) : (!cir.bool) -> !cir.bool loc(#loc135)
              cir.if %75 {
                cir.break loc(#loc139)
              } loc(#loc277)
            } loc(#loc274)
            %54 = cir.const #cir.int<0> : !s8i loc(#loc140)
            %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %56 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc142)
            %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc143)
            %59 = cir.const #cir.int<1> : !u64i loc(#loc278)
            %60 = cir.binop(div, %58, %59) : !u64i loc(#loc279)
            %61 = cir.binop(add, %56, %60) : !u64i loc(#loc280)
            %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc146)
            cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc281)
            %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
            %64 = cir.const #cir.int<13> : !s8i loc(#loc148)
            %65 = cir.cast(integral, %64 : !s8i), !s32i loc(#loc148)
            %66 = cir.call @strchr(%63, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc149)
            cir.store %66, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
            cir.scope {
              %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
              cir.if %72 {
                %73 = cir.const #cir.int<0> : !s8i loc(#loc156)
                %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc285)
              } loc(#loc284)
            } loc(#loc283)
            %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
            %68 = cir.const #cir.int<10> : !s8i loc(#loc160)
            %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc160)
            %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc161)
            cir.store %70, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
            cir.scope {
              %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
              %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
              cir.if %72 {
                %73 = cir.const #cir.int<0> : !s8i loc(#loc168)
                %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc289)
              } loc(#loc288)
            } loc(#loc287)
          } loc(#loc252)
          cir.yield loc(#loc69)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc171)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc171)
          cir.condition(%17) loc(#loc171)
        } loc(#loc251)
      } loc(#loc251)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc175)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc291)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc177)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc178)
        } loc(#loc292)
      } loc(#loc290)
    } loc(#loc245)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %5 = cir.get_global @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7badDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7badSinkEv() : () -> () loc(#loc181)
    cir.return loc(#loc49)
  } loc(#loc242)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc294)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" internal dsolocal @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L11goodG2BDataE = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc295)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L11goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc297)
    %1 = cir.get_global @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L11goodG2BDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc299)
      %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc194)
      cir.store %4, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc299)
      %5 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc195)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
      %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc197)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc197)
      %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc195)
      cir.store %9, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc300)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc202)
        %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc203)
        %12 = cir.cmp(ne, %10, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc302)
        cir.if %12 {
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc205)
          %14 = cir.call @fclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc206)
        } loc(#loc303)
      } loc(#loc301)
    } loc(#loc298)
    cir.return loc(#loc188)
  } loc(#loc296)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc305)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc221)
    %2 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc221)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc221)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc211)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc213)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc184)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc184)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc213)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    %10 = cir.get_global @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L11goodG2BDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L11goodG2BSinkEv() : () -> () loc(#loc217)
    cir.return loc(#loc208)
  } loc(#loc304)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_454goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45L7goodG2BEv() : () -> () loc(#loc220)
    cir.return loc(#loc219)
  } loc(#loc308)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":173:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":173:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":78:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":78:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":107:49)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":56:1)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":56:15)
#loc24 = loc("/usr/include/stdio.h":264:1)
#loc25 = loc("/usr/include/stdio.h":266:3)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":67:29)
#loc27 = loc("/usr/include/stdio.h":184:1)
#loc28 = loc("/usr/include/stdio.h":184:36)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":61:1)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":73:1)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":63:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":63:19)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":64:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":72:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":65:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":65:23)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":67:17)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":67:23)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":67:9)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":67:34)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":68:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":71:9)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":68:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":68:22)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":69:9)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":70:20)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":70:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":75:1)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":149:1)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":77:5)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":77:12)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":79:12)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":79:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":80:5)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":146:5)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":85:9)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":85:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":86:9)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":86:28)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":87:9)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":87:15)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":88:9)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":88:32)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":89:9)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":89:37)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":89:26)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":89:33)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":90:9)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":135:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":91:9)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":134:9)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":100:36)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":100:45)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":100:58)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":100:29)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":100:13)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":100:69)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":101:13)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":104:13)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":101:17)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":101:34)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":102:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":103:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":105:20)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":105:21)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":105:30)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":105:33)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":105:47)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":105:13)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":105:48)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":106:34)
#loc92 = loc("/usr/include/netinet/in.h":249:5)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":106:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":107:39)
#loc95 = loc("/usr/include/netinet/in.h":251:20)
#loc96 = loc("/usr/include/netinet/in.h":33:15)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":107:13)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":107:59)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":108:38)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":108:32)
#loc101 = loc("/usr/include/netinet/in.h":250:15)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":108:13)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":108:46)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":112:13)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:25)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:58)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:59)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:68)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:82)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:17)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":109:88)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":110:13)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":111:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:31)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:55)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:62)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:60)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:46)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:69)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:72)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:83)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:88)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:103)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:113)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:114)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:117)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:26)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":116:118)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":117:13)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":120:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":117:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":117:31)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":117:44)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":117:47)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":117:61)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":118:13)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":119:17)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":122:57)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":122:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":122:18)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":122:28)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":122:41)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":122:52)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":122:53)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":124:30)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":124:36)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":124:23)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":124:13)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":124:40)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":125:13)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":128:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":125:17)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":126:13)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":127:28)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":127:18)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":127:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":129:30)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":129:36)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":129:23)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":129:13)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":129:40)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":130:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":133:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":130:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":131:13)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":132:28)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":132:18)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":132:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":135:16)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":136:9)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":139:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":136:13)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":136:30)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":137:9)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":138:26)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":138:13)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":147:15)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":147:5)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":148:5)
#loc182 = loc("/usr/include/string.h":149:1)
#loc183 = loc("/usr/include/string.h":150:14)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":176:18)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":57:1)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":57:15)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":156:1)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":168:1)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":158:5)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":158:19)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":159:5)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":167:5)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":160:9)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":160:23)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":162:17)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":162:23)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":162:29)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":162:9)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":162:34)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":163:9)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":166:9)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":163:13)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":163:22)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":164:9)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":165:20)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":165:13)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":170:1)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":179:1)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":172:5)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":172:12)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":174:12)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":174:5)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":176:5)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":176:12)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":177:19)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":177:5)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":178:5)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":181:1)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":184:1)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_45.cpp":183:5)
#loc221 = loc(fused[#loc1, #loc2])
#loc222 = loc(fused[#loc3, #loc4])
#loc223 = loc(fused[#loc5, #loc6])
#loc224 = loc(fused[#loc7, #loc8])
#loc225 = loc(fused[#loc9, #loc10])
#loc226 = loc(fused[#loc12, #loc13])
#loc227 = loc(fused[#loc14, #loc15])
#loc228 = loc(fused[#loc16, #loc17])
#loc229 = loc(fused[#loc18, #loc19])
#loc230 = loc(fused[#loc20, #loc21])
#loc231 = loc(fused[#loc22, #loc23])
#loc232 = loc(fused[#loc24, #loc25])
#loc233 = loc(fused[#loc27, #loc28])
#loc234 = loc(fused[#loc29, #loc30])
#loc235 = loc(fused[#loc31, #loc32])
#loc236 = loc(fused[#loc33, #loc34])
#loc237 = loc(fused[#loc35, #loc36])
#loc238 = loc(fused[#loc39, #loc40])
#loc239 = loc(fused[#loc41, #loc42])
#loc240 = loc(fused[#loc43, #loc44])
#loc241 = loc(fused[#loc45, #loc42])
#loc242 = loc(fused[#loc48, #loc49])
#loc243 = loc(fused[#loc50, #loc51])
#loc244 = loc(fused[#loc53, #loc52])
#loc245 = loc(fused[#loc54, #loc55])
#loc246 = loc(fused[#loc56, #loc57])
#loc247 = loc(fused[#loc58, #loc59])
#loc248 = loc(fused[#loc60, #loc61])
#loc249 = loc(fused[#loc62, #loc63])
#loc250 = loc(fused[#loc64, #loc65])
#loc251 = loc(fused[#loc68, #loc69])
#loc252 = loc(fused[#loc70, #loc71])
#loc253 = loc(fused[#loc76, #loc77])
#loc254 = loc(fused[#loc78, #loc79])
#loc255 = loc(fused[#loc80, #loc81])
#loc256 = loc(fused[#loc82, #loc79])
#loc257 = loc(fused[#loc84, #loc85])
#loc258 = loc(fused[#loc87, #loc88])
#loc259 = loc(fused[#loc89, #loc90])
#loc260 = loc(fused[#loc93, #loc91])
#loc261 = loc(fused[#loc97, #loc98])
#loc262 = loc(fused[#loc102, #loc103])
#loc263 = loc(fused[#loc104, #loc105])
#loc264 = loc(fused[#loc107, #loc108])
#loc265 = loc(fused[#loc109, #loc110])
#loc266 = loc(fused[#loc111, #loc112])
#loc267 = loc(fused[#loc113, #loc105])
#loc268 = loc(fused[#loc119, #loc120])
#loc269 = loc(fused[#loc121, #loc122])
#loc270 = loc(fused[#loc123, #loc124])
#loc271 = loc(fused[#loc123, #loc125])
#loc272 = loc(fused[#loc121, #loc126])
#loc273 = loc(fused[#loc129, #loc130])
#loc274 = loc(fused[#loc131, #loc132])
#loc275 = loc(fused[#loc133, #loc134])
#loc276 = loc(fused[#loc136, #loc137])
#loc277 = loc(fused[#loc138, #loc132])
#loc278 = loc(fused[#loc144, #loc145])
#loc279 = loc(fused[#loc143, #loc145])
#loc280 = loc(fused[#loc142, #loc145])
#loc281 = loc(fused[#loc141, #loc140])
#loc282 = loc(fused[#loc150, #loc151])
#loc283 = loc(fused[#loc152, #loc153])
#loc284 = loc(fused[#loc155, #loc153])
#loc285 = loc(fused[#loc158, #loc156])
#loc286 = loc(fused[#loc162, #loc163])
#loc287 = loc(fused[#loc164, #loc165])
#loc288 = loc(fused[#loc167, #loc165])
#loc289 = loc(fused[#loc170, #loc168])
#loc290 = loc(fused[#loc172, #loc173])
#loc291 = loc(fused[#loc174, #loc175])
#loc292 = loc(fused[#loc176, #loc173])
#loc293 = loc(fused[#loc180, #loc179])
#loc294 = loc(fused[#loc182, #loc183])
#loc295 = loc(fused[#loc185, #loc186])
#loc296 = loc(fused[#loc187, #loc188])
#loc297 = loc(fused[#loc189, #loc190])
#loc298 = loc(fused[#loc191, #loc192])
#loc299 = loc(fused[#loc193, #loc194])
#loc300 = loc(fused[#loc198, #loc199])
#loc301 = loc(fused[#loc200, #loc201])
#loc302 = loc(fused[#loc202, #loc203])
#loc303 = loc(fused[#loc204, #loc201])
#loc304 = loc(fused[#loc207, #loc208])
#loc305 = loc(fused[#loc209, #loc210])
#loc306 = loc(fused[#loc212, #loc211])
#loc307 = loc(fused[#loc216, #loc215])
#loc308 = loc(fused[#loc218, #loc219])
