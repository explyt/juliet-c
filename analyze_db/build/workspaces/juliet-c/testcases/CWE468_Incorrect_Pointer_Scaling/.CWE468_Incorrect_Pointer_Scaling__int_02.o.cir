!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.good2.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc77)
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc78)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__int_02_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc79)
  cir.func private @printIntLine(!s32i) loc(#loc80)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_02_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc79)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc85)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc86)
          %5 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__int_02_bad.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc79)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc79)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc18)
          cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc85)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc22)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc87)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc88)
          %12 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %11 : !u64i), !cir.ptr<!s32i> loc(#loc25)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          cir.store %13, %4 : !s32i, !cir.ptr<!s32i> loc(#loc86)
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
        } loc(#loc84)
      } loc(#loc83)
    } loc(#loc82)
    cir.return loc(#loc10)
  } loc(#loc81)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc89)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc42)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc42)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc78)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc97)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc98)
          %5 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc78)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc78)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc50)
          cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc54)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc55)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc56)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc98)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc57)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc58)
        } loc(#loc96)
      } loc(#loc95)
    } loc(#loc94)
    cir.return loc(#loc39)
  } loc(#loc93)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc63)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc77)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc103)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc104)
          %5 = cir.get_global @__const.good2.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc77)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc77)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc68)
          cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc103)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc72)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc73)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc74)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc104)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc75)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc76)
        } loc(#loc102)
      } loc(#loc101)
    } loc(#loc100)
    cir.return loc(#loc60)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_02.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":66:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":66:64)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":50:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":50:64)
#loc5 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":25:13)
#loc6 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":25:64)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":20:1)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":33:1)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":22:5)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":32:5)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":22:8)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":23:5)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":24:9)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":31:9)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":26:13)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":26:31)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:13)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:55)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:29)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:41)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:43)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:53)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:39)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":29:27)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":30:26)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":30:13)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":76:1)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":80:1)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":78:5)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":78:11)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":79:5)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":79:11)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":45:19)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":40:1)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":58:1)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":42:5)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":57:5)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":42:8)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":43:5)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":46:5)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":48:5)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":45:9)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":49:9)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":56:9)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":51:13)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":51:31)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":54:13)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":54:41)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":54:29)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":54:40)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":54:39)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":54:27)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":55:26)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":55:13)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":61:1)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":74:1)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":63:5)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":73:5)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":63:8)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":64:5)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":65:9)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":72:9)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":67:13)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":67:31)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":70:13)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":70:41)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":70:29)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":70:40)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":70:39)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":70:27)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":71:26)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__int_02.c":71:13)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc11, #loc12])
#loc83 = loc(fused[#loc14, #loc12])
#loc84 = loc(fused[#loc15, #loc16])
#loc85 = loc(fused[#loc17, #loc18])
#loc86 = loc(fused[#loc19, #loc20])
#loc87 = loc(fused[#loc23, #loc24])
#loc88 = loc(fused[#loc22, #loc24])
#loc89 = loc(fused[#loc29, #loc30])
#loc90 = loc(fused[#loc31, #loc32])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc35, #loc36])
#loc93 = loc(fused[#loc38, #loc39])
#loc94 = loc(fused[#loc40, #loc41])
#loc95 = loc(fused[#loc43, #loc44, #loc45, #loc41])
#loc96 = loc(fused[#loc47, #loc48])
#loc97 = loc(fused[#loc49, #loc50])
#loc98 = loc(fused[#loc51, #loc52])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc61, #loc62])
#loc101 = loc(fused[#loc64, #loc62])
#loc102 = loc(fused[#loc65, #loc66])
#loc103 = loc(fused[#loc67, #loc68])
#loc104 = loc(fused[#loc69, #loc70])
