!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc94 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:44)
#loc137 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":234:10)
#loc138 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":234:14)
#loc139 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":234:20)
#loc140 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":234:32)
#loc229 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc333 = loc(fused[#loc137, #loc138])
#loc334 = loc(fused[#loc139, #loc140])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc281)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc283)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc284)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc285)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc286)
  cir.func private @close(!s32i) -> !s32i loc(#loc287)
  cir.func private @printIntLine(!s32i) loc(#loc288)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc291)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc292)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc293)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc294)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc295)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc32)
    cir.store %6, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc296)
    cir.br ^bb1 loc(#loc297)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc27)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb2 loc(#loc298)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc298)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc38)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc41)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb5 loc(#loc300)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc48)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc302)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc50)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc46)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc303)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc304)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc305)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc58)
    %24 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc306)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc61)
    %28 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc307)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc66)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc66)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc67)
    %33 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc308)
    cir.br ^bb9 loc(#loc309)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %35 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc310)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc311)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc311)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc78)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc79)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc312)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc313)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc81)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc72)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %43 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc83)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    %45 = cir.const #cir.int<20> : !s32i loc(#loc84)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc84)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc84)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %50 = cir.call @recv(%42, %44, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc87)
    %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc87)
    cir.store %51, %1 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb13 loc(#loc315)
  ^bb13:  // pred: ^bb12
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc93)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %55 ^bb14, ^bb15 loc(#loc94)
  ^bb14:  // pred: ^bb13
    %56 = cir.const #true loc(#loc94)
    cir.br ^bb20(%56 : !cir.bool) loc(#loc94)
  ^bb15:  // pred: ^bb13
    %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc317)
    cir.brcond %59 ^bb16, ^bb17 loc(#loc94)
  ^bb16:  // pred: ^bb15
    %60 = cir.const #true loc(#loc94)
    cir.br ^bb18(%60 : !cir.bool) loc(#loc94)
  ^bb17:  // pred: ^bb15
    %61 = cir.const #false loc(#loc94)
    cir.br ^bb18(%61 : !cir.bool) loc(#loc94)
  ^bb18(%62: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc94)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%62 : !cir.bool) loc(#loc94)
  ^bb20(%63: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc94)
  ^bb21:  // pred: ^bb20
    cir.brcond %63 ^bb22, ^bb23 loc(#loc318)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc98)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc91)
  ^bb24:  // pred: ^bb23
    %64 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc99)
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %67 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc101)
    %68 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %66 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc319)
    %69 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc102)
    %70 = cir.call @atof(%69) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc103)
    %71 = cir.cast(floating, %70 : !cir.double), !cir.float loc(#loc103)
    cir.store %71, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc320)
    cir.br ^bb3 loc(#loc37)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc37)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc321)
  ^bb27:  // pred: ^bb26
    %72 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc109)
    %75 = cir.cmp(ne, %72, %74) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %75 ^bb28, ^bb29 loc(#loc323)
  ^bb28:  // pred: ^bb27
    %76 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %77 = cir.call @close(%76) : (!s32i) -> !s32i loc(#loc112)
    cir.br ^bb29 loc(#loc107)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc107)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc324)
  ^bb31:  // pred: ^bb30
    %78 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc115)
    %79 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc116)
    %80 = cir.cast(floating, %79 : !cir.float), !cir.double loc(#loc116)
    %81 = cir.binop(div, %78, %80) : !cir.double loc(#loc325)
    %82 = cir.cast(float_to_int, %81 : !cir.double), !s32i loc(#loc325)
    cir.store %82, %5 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%83) : (!s32i) -> () loc(#loc118)
    cir.return loc(#loc19)
  } loc(#loc289)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc327)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc121)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc328)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc123)
    cir.return loc(#loc120)
  } loc(#loc326)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc329)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc330)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc134)
  cir.func @main(%arg0: !s32i loc(fused[#loc137, #loc138]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc139, #loc140])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc333)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc334)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc136)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc141)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc142)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc143)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc143)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc144)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc131)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc335)
    cir.call @CWE369_Divide_by_Zero__float_connect_socket_18_good() : () -> () loc(#loc146)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc132)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc133)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc336)
    cir.call @CWE369_Divide_by_Zero__float_connect_socket_18_bad() : () -> () loc(#loc150)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc134)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc153)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    cir.return %17 : !s32i loc(#loc337)
  } loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc155)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc339)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc340)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc341)
    %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc342)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc343)
    %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc344)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc170)
    cir.store %6, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc345)
    cir.br ^bb1 loc(#loc346)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc167)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb2 loc(#loc347)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc347)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc176)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc176)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc177)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc179)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc180)
    cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb5 loc(#loc349)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc186)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc350)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc351)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc188)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc352)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc353)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc354)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc196)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc196)
    %24 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc355)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc198)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc198)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc199)
    %28 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc356)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc202)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc202)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc203)
    %33 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc357)
    cir.br ^bb9 loc(#loc358)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %35 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc359)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc360)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc360)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc213)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc214)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc362)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc216)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc207)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %43 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc218)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
    %45 = cir.const #cir.int<20> : !s32i loc(#loc219)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc219)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc219)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %50 = cir.call @recv(%42, %44, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc222)
    %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc222)
    cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb13 loc(#loc364)
  ^bb13:  // pred: ^bb12
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc228)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc228)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %55 ^bb14, ^bb15 loc(#loc229)
  ^bb14:  // pred: ^bb13
    %56 = cir.const #true loc(#loc229)
    cir.br ^bb20(%56 : !cir.bool) loc(#loc229)
  ^bb15:  // pred: ^bb13
    %57 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc366)
    cir.brcond %59 ^bb16, ^bb17 loc(#loc229)
  ^bb16:  // pred: ^bb15
    %60 = cir.const #true loc(#loc229)
    cir.br ^bb18(%60 : !cir.bool) loc(#loc229)
  ^bb17:  // pred: ^bb15
    %61 = cir.const #false loc(#loc229)
    cir.br ^bb18(%61 : !cir.bool) loc(#loc229)
  ^bb18(%62: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc229)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%62 : !cir.bool) loc(#loc229)
  ^bb20(%63: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc229)
  ^bb21:  // pred: ^bb20
    cir.brcond %63 ^bb22, ^bb23 loc(#loc367)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc233)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc226)
  ^bb24:  // pred: ^bb23
    %64 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc234)
    %66 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %67 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc236)
    %68 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %66 : !s32i), !cir.ptr<!s8i> loc(#loc236)
    cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc368)
    %69 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc237)
    %70 = cir.call @atof(%69) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc238)
    %71 = cir.cast(floating, %70 : !cir.double), !cir.float loc(#loc238)
    cir.store %71, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc369)
    cir.br ^bb3 loc(#loc175)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc175)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc370)
  ^bb27:  // pred: ^bb26
    %72 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc244)
    %75 = cir.cmp(ne, %72, %74) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %75 ^bb28, ^bb29 loc(#loc372)
  ^bb28:  // pred: ^bb27
    %76 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %77 = cir.call @close(%76) : (!s32i) -> !s32i loc(#loc247)
    cir.br ^bb29 loc(#loc242)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc242)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc373)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc374)
  ^bb32:  // pred: ^bb31
    %78 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc252)
    %79 = cir.cast(floating, %78 : !cir.float), !cir.double loc(#loc252)
    %80 = cir.fabs %79 : !cir.double loc(#loc252)
    %81 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc253)
    %82 = cir.cmp(gt, %80, %81) : !cir.double, !cir.bool loc(#loc375)
    cir.brcond %82 ^bb33, ^bb34 loc(#loc376)
  ^bb33:  // pred: ^bb32
    %83 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc258)
    %84 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc259)
    %85 = cir.cast(floating, %84 : !cir.float), !cir.double loc(#loc259)
    %86 = cir.binop(div, %83, %85) : !cir.double loc(#loc377)
    %87 = cir.cast(float_to_int, %86 : !cir.double), !s32i loc(#loc377)
    cir.store %87, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    cir.call @printIntLine(%88) : (!s32i) -> () loc(#loc261)
    cir.br ^bb35 loc(#loc256)
  ^bb34:  // pred: ^bb32
    %89 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc155)
    %90 = cir.cast(array_to_ptrdecay, %89 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%90) : (!cir.ptr<!s8i>) -> () loc(#loc262)
    cir.br ^bb35 loc(#loc251)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc251)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc157)
  } loc(#loc338)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc379)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc380)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc269)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc381)
    cir.br ^bb1 loc(#loc382)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc273)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc383)
    cir.br ^bb2 loc(#loc384)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc277)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc278)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc278)
    %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc385)
    %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc385)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc280)
    cir.return loc(#loc264)
  } loc(#loc378)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_18.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":102:1)
#loc13 = loc("/usr/include/stdlib.h":103:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":46:1)
#loc19 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":116:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":48:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":48:11)
#loc22 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":58:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":58:13)
#loc24 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":59:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":59:28)
#loc26 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":60:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":60:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":61:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":61:41)
#loc30 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":113:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":113:40)
#loc32 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":50:12)
#loc33 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":50:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":51:5)
#loc35 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":51:10)
#loc36 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":62:9)
#loc37 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":97:17)
#loc38 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":97:16)
#loc39 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":71:36)
#loc40 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":71:45)
#loc41 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":71:58)
#loc42 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":71:29)
#loc43 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":71:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":71:69)
#loc45 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":72:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":75:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":72:17)
#loc48 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":72:34)
#loc49 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":73:13)
#loc50 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":74:17)
#loc51 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":76:20)
#loc52 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":76:21)
#loc53 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":76:30)
#loc54 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":76:33)
#loc55 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":76:47)
#loc56 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":76:13)
#loc57 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":76:48)
#loc58 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":77:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":77:13)
#loc61 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":78:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":78:13)
#loc65 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":78:59)
#loc66 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":79:38)
#loc67 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":79:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":79:13)
#loc70 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":79:46)
#loc71 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:13)
#loc72 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":83:13)
#loc73 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:25)
#loc74 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:58)
#loc75 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:59)
#loc76 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:68)
#loc77 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:82)
#loc78 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:17)
#loc79 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":80:88)
#loc80 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":81:13)
#loc81 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":82:17)
#loc82 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:31)
#loc83 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:46)
#loc84 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:59)
#loc85 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:77)
#loc86 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:80)
#loc87 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:26)
#loc88 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:13)
#loc89 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":87:81)
#loc90 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:13)
#loc91 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":91:13)
#loc92 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:17)
#loc93 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:31)
#loc95 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:47)
#loc96 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":88:61)
#loc97 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":89:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":90:17)
#loc99 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":93:39)
#loc100 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":93:25)
#loc101 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":93:13)
#loc102 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":95:32)
#loc103 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":95:27)
#loc104 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":95:13)
#loc105 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":95:43)
#loc106 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":98:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":101:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":98:13)
#loc109 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":98:30)
#loc110 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":99:9)
#loc111 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":100:26)
#loc112 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":100:13)
#loc113 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":109:5)
#loc114 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":109:10)
#loc115 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":113:28)
#loc116 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":113:36)
#loc117 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":114:22)
#loc118 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":114:9)
#loc119 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":219:1)
#loc120 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":223:1)
#loc121 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":221:5)
#loc122 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":221:13)
#loc123 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":222:5)
#loc124 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":222:13)
#loc125 = loc("/usr/include/stdlib.h":575:1)
#loc126 = loc("/usr/include/stdlib.h":575:41)
#loc127 = loc("/usr/include/time.h":76:1)
#loc128 = loc("/usr/include/time.h":76:38)
#loc129 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc130 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc131 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":239:15)
#loc132 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":241:15)
#loc133 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":244:15)
#loc134 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":246:15)
#loc135 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":234:1)
#loc136 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":249:1)
#loc141 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":235:1)
#loc142 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":237:27)
#loc143 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":237:22)
#loc144 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":237:5)
#loc145 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":239:5)
#loc146 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":240:5)
#loc147 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":240:57)
#loc148 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":241:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":244:5)
#loc150 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":245:5)
#loc151 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":245:56)
#loc152 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":246:5)
#loc153 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":248:12)
#loc154 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":248:5)
#loc155 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":196:19)
#loc156 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":123:1)
#loc157 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":198:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":191:9)
#loc159 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":191:40)
#loc160 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":125:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":125:11)
#loc162 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":135:9)
#loc163 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":135:13)
#loc164 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":136:9)
#loc165 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":136:28)
#loc166 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":137:9)
#loc167 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":137:32)
#loc168 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":138:9)
#loc169 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":138:41)
#loc170 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":127:12)
#loc171 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":127:5)
#loc172 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":128:5)
#loc173 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":128:10)
#loc174 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":139:9)
#loc175 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":174:17)
#loc176 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":174:16)
#loc177 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":148:36)
#loc178 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":148:45)
#loc179 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":148:58)
#loc180 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":148:29)
#loc181 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":148:13)
#loc182 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":148:69)
#loc183 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":149:13)
#loc184 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":152:13)
#loc185 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":149:17)
#loc186 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":149:34)
#loc187 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":150:13)
#loc188 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":151:17)
#loc189 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":153:20)
#loc190 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":153:21)
#loc191 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":153:30)
#loc192 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":153:33)
#loc193 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":153:47)
#loc194 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":153:13)
#loc195 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":153:48)
#loc196 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":154:34)
#loc197 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":154:13)
#loc198 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":155:49)
#loc199 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":155:39)
#loc200 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":155:13)
#loc201 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":155:59)
#loc202 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":156:38)
#loc203 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":156:32)
#loc204 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":156:13)
#loc205 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":156:46)
#loc206 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:13)
#loc207 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":160:13)
#loc208 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:25)
#loc209 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:58)
#loc210 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:59)
#loc211 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:68)
#loc212 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:82)
#loc213 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:17)
#loc214 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":157:88)
#loc215 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":158:13)
#loc216 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":159:17)
#loc217 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:31)
#loc218 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:46)
#loc219 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:59)
#loc220 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:77)
#loc221 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:80)
#loc222 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:26)
#loc223 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:13)
#loc224 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":164:81)
#loc225 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:13)
#loc226 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":168:13)
#loc227 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:17)
#loc228 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:31)
#loc230 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:47)
#loc231 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":165:61)
#loc232 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":166:13)
#loc233 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":167:17)
#loc234 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":170:39)
#loc235 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":170:25)
#loc236 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":170:13)
#loc237 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":172:32)
#loc238 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":172:27)
#loc239 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":172:13)
#loc240 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":172:43)
#loc241 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":175:9)
#loc242 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":178:9)
#loc243 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":175:13)
#loc244 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":175:30)
#loc245 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":176:9)
#loc246 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":177:26)
#loc247 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":177:13)
#loc248 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":186:5)
#loc249 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":186:10)
#loc250 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":189:5)
#loc251 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":197:5)
#loc252 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":189:13)
#loc253 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":189:21)
#loc254 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":189:8)
#loc255 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":190:5)
#loc256 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":193:5)
#loc257 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":195:5)
#loc258 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":191:28)
#loc259 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":191:36)
#loc260 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":192:22)
#loc261 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":192:9)
#loc262 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":196:9)
#loc263 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":201:1)
#loc264 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":217:1)
#loc265 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":203:5)
#loc266 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":203:11)
#loc267 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":214:9)
#loc268 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":214:40)
#loc269 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":205:12)
#loc270 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":205:5)
#loc271 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":206:5)
#loc272 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":206:10)
#loc273 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":209:12)
#loc274 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":209:5)
#loc275 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":210:5)
#loc276 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":210:10)
#loc277 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":214:28)
#loc278 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":214:36)
#loc279 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":215:22)
#loc280 = loc("CWE369_Divide_by_Zero__float_connect_socket_18.c":215:9)
#loc281 = loc(fused[#loc1, #loc2])
#loc282 = loc(fused[#loc3, #loc4])
#loc283 = loc(fused[#loc6, #loc7])
#loc284 = loc(fused[#loc8, #loc9])
#loc285 = loc(fused[#loc10, #loc11])
#loc286 = loc(fused[#loc12, #loc13])
#loc287 = loc(fused[#loc14, #loc15])
#loc288 = loc(fused[#loc16, #loc17])
#loc289 = loc(fused[#loc18, #loc19])
#loc290 = loc(fused[#loc20, #loc21])
#loc291 = loc(fused[#loc22, #loc23])
#loc292 = loc(fused[#loc24, #loc25])
#loc293 = loc(fused[#loc26, #loc27])
#loc294 = loc(fused[#loc28, #loc29])
#loc295 = loc(fused[#loc30, #loc31])
#loc296 = loc(fused[#loc33, #loc32])
#loc297 = loc(fused[#loc34, #loc35])
#loc298 = loc(fused[#loc36, #loc37])
#loc299 = loc(fused[#loc43, #loc44])
#loc300 = loc(fused[#loc45, #loc46])
#loc301 = loc(fused[#loc47, #loc48])
#loc302 = loc(fused[#loc49, #loc46])
#loc303 = loc(fused[#loc51, #loc52])
#loc304 = loc(fused[#loc54, #loc55])
#loc305 = loc(fused[#loc56, #loc57])
#loc306 = loc(fused[#loc60, #loc58])
#loc307 = loc(fused[#loc64, #loc65])
#loc308 = loc(fused[#loc69, #loc70])
#loc309 = loc(fused[#loc71, #loc72])
#loc310 = loc(fused[#loc74, #loc75])
#loc311 = loc(fused[#loc76, #loc77])
#loc312 = loc(fused[#loc78, #loc79])
#loc313 = loc(fused[#loc80, #loc72])
#loc314 = loc(fused[#loc88, #loc89])
#loc315 = loc(fused[#loc90, #loc91])
#loc316 = loc(fused[#loc92, #loc93])
#loc317 = loc(fused[#loc95, #loc96])
#loc318 = loc(fused[#loc97, #loc91])
#loc319 = loc(fused[#loc101, #loc99])
#loc320 = loc(fused[#loc104, #loc105])
#loc321 = loc(fused[#loc106, #loc107])
#loc322 = loc(fused[#loc108, #loc109])
#loc323 = loc(fused[#loc110, #loc107])
#loc324 = loc(fused[#loc113, #loc114])
#loc325 = loc(fused[#loc115, #loc116])
#loc326 = loc(fused[#loc119, #loc120])
#loc327 = loc(fused[#loc121, #loc122])
#loc328 = loc(fused[#loc123, #loc124])
#loc329 = loc(fused[#loc125, #loc126])
#loc330 = loc(fused[#loc127, #loc128])
#loc331 = loc(fused[#loc129, #loc130])
#loc332 = loc(fused[#loc135, #loc136])
#loc335 = loc(fused[#loc146, #loc147])
#loc336 = loc(fused[#loc150, #loc151])
#loc337 = loc(fused[#loc154, #loc153])
#loc338 = loc(fused[#loc156, #loc157])
#loc339 = loc(fused[#loc158, #loc159])
#loc340 = loc(fused[#loc160, #loc161])
#loc341 = loc(fused[#loc162, #loc163])
#loc342 = loc(fused[#loc164, #loc165])
#loc343 = loc(fused[#loc166, #loc167])
#loc344 = loc(fused[#loc168, #loc169])
#loc345 = loc(fused[#loc171, #loc170])
#loc346 = loc(fused[#loc172, #loc173])
#loc347 = loc(fused[#loc174, #loc175])
#loc348 = loc(fused[#loc181, #loc182])
#loc349 = loc(fused[#loc183, #loc184])
#loc350 = loc(fused[#loc185, #loc186])
#loc351 = loc(fused[#loc187, #loc184])
#loc352 = loc(fused[#loc189, #loc190])
#loc353 = loc(fused[#loc192, #loc193])
#loc354 = loc(fused[#loc194, #loc195])
#loc355 = loc(fused[#loc197, #loc196])
#loc356 = loc(fused[#loc200, #loc201])
#loc357 = loc(fused[#loc204, #loc205])
#loc358 = loc(fused[#loc206, #loc207])
#loc359 = loc(fused[#loc209, #loc210])
#loc360 = loc(fused[#loc211, #loc212])
#loc361 = loc(fused[#loc213, #loc214])
#loc362 = loc(fused[#loc215, #loc207])
#loc363 = loc(fused[#loc223, #loc224])
#loc364 = loc(fused[#loc225, #loc226])
#loc365 = loc(fused[#loc227, #loc228])
#loc366 = loc(fused[#loc230, #loc231])
#loc367 = loc(fused[#loc232, #loc226])
#loc368 = loc(fused[#loc236, #loc234])
#loc369 = loc(fused[#loc239, #loc240])
#loc370 = loc(fused[#loc241, #loc242])
#loc371 = loc(fused[#loc243, #loc244])
#loc372 = loc(fused[#loc245, #loc242])
#loc373 = loc(fused[#loc248, #loc249])
#loc374 = loc(fused[#loc250, #loc251])
#loc375 = loc(fused[#loc254, #loc253])
#loc376 = loc(fused[#loc255, #loc256, #loc257, #loc251])
#loc377 = loc(fused[#loc258, #loc259])
#loc378 = loc(fused[#loc263, #loc264])
#loc379 = loc(fused[#loc265, #loc266])
#loc380 = loc(fused[#loc267, #loc268])
#loc381 = loc(fused[#loc270, #loc269])
#loc382 = loc(fused[#loc271, #loc272])
#loc383 = loc(fused[#loc274, #loc273])
#loc384 = loc(fused[#loc275, #loc276])
#loc385 = loc(fused[#loc277, #loc278])
