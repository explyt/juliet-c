!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc111)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc112)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc115)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc118)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc118)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc118)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.scope {
      %13 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc111)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc24)
      cir.if %15 {
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc123)
          %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc124)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
          cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc123)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
          %23 = cir.call @getenv(%22) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
          cir.store %23, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
          cir.scope {
            %24 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc126)
            %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc39)
            cir.if %28 {
              %29 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc41)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
              %31 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc44)
              %33 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
              %34 = cir.const #cir.int<100> : !s32i loc(#loc46)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc46)
              %36 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc128)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc48)
              %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc129)
              %41 = cir.call @strncat(%32, %33, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
            } loc(#loc127)
          } loc(#loc125)
        } loc(#loc122)
      } loc(#loc121)
    } loc(#loc120)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc49)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc52)
    cir.return loc(#loc15)
  } loc(#loc116)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc130)
  cir.global "private"  external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc133)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc138)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc138)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %13 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc133)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc77)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc77)
      cir.if %15 {
        %16 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc81)
      } else {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc82)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %18 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc66)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
      } loc(#loc141)
    } loc(#loc140)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc84)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc84)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc85)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc89)
    cir.return loc(#loc68)
  } loc(#loc136)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc144)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc144)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.scope {
      %13 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc111)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc100)
      cir.if %15 {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc102)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
        %18 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc104)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc104)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
      } loc(#loc147)
    } loc(#loc146)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc105)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc105)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc106)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc106)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc110)
    cir.return loc(#loc91)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdlib.h":773:1)
#loc6 = loc("/usr/include/stdlib.h":773:50)
#loc7 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":63:41)
#loc8 = loc("/usr/include/string.h":152:1)
#loc9 = loc("/usr/include/string.h":153:29)
#loc10 = loc("/usr/include/unistd.h":605:1)
#loc11 = loc("/usr/include/unistd.h":606:14)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":75:12)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":75:38)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":53:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":76:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":55:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":55:12)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":56:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":56:28)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":57:12)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":57:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":58:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":71:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":58:8)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":59:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":60:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":70:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":62:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":62:41)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":63:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":63:53)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":62:30)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":62:37)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":63:34)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":65:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":69:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":65:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":65:32)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":65:29)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":66:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:25)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:30)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:29)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:39)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:52)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:56)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":68:64)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":75:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":75:52)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":75:66)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":75:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":121:1)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":125:1)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":123:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":123:14)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":124:5)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":124:14)
#loc59 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc60 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":91:19)
#loc64 = loc("/usr/include/string.h":149:1)
#loc65 = loc("/usr/include/string.h":150:14)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":96:22)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":83:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":102:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":85:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":85:12)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":86:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":86:28)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":87:12)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":87:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":88:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":97:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":88:8)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":89:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":92:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":94:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":91:9)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":96:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":96:16)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":101:12)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":101:25)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":101:38)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":101:52)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":101:66)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":101:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":105:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":119:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":107:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":107:12)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":108:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":108:28)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":109:12)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":109:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":110:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":114:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":110:8)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":111:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":113:9)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":113:16)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":113:22)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":118:12)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":118:25)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":118:38)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":118:52)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":118:66)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_execlp_10.c":118:5)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc8, #loc9])
#loc115 = loc(fused[#loc10, #loc11])
#loc116 = loc(fused[#loc14, #loc15])
#loc117 = loc(fused[#loc16, #loc17])
#loc118 = loc(fused[#loc18, #loc19])
#loc119 = loc(fused[#loc21, #loc20])
#loc120 = loc(fused[#loc22, #loc23])
#loc121 = loc(fused[#loc25, #loc23])
#loc122 = loc(fused[#loc26, #loc27])
#loc123 = loc(fused[#loc28, #loc29])
#loc124 = loc(fused[#loc30, #loc31])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc37, #loc38])
#loc127 = loc(fused[#loc40, #loc36])
#loc128 = loc(fused[#loc46, #loc47])
#loc129 = loc(fused[#loc46, #loc48])
#loc130 = loc(fused[#loc53, #loc54])
#loc131 = loc(fused[#loc55, #loc56])
#loc132 = loc(fused[#loc57, #loc58])
#loc133 = loc(fused[#loc59, #loc60])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc64, #loc65])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc69, #loc70])
#loc138 = loc(fused[#loc71, #loc72])
#loc139 = loc(fused[#loc74, #loc73])
#loc140 = loc(fused[#loc75, #loc76])
#loc141 = loc(fused[#loc78, #loc79, #loc80, #loc76])
#loc142 = loc(fused[#loc90, #loc91])
#loc143 = loc(fused[#loc92, #loc93])
#loc144 = loc(fused[#loc94, #loc95])
#loc145 = loc(fused[#loc97, #loc96])
#loc146 = loc(fused[#loc98, #loc99])
#loc147 = loc(fused[#loc101, #loc99])
