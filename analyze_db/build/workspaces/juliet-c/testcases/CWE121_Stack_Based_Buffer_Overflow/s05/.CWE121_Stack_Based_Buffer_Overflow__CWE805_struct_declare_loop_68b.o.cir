!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68_badData : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc111)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc112)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b_badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc114)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc116)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc118)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc19)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc120)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc21)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc22)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc121)
            cir.condition(%10) loc(#loc23)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc25)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc26)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %8 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
              %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
              cir.store %7, %11 : !s32i, !cir.ptr<!s32i> loc(#loc123)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc29)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc30)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc124)
            } loc(#loc122)
            cir.yield loc(#loc18)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc34)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc125)
            cir.yield loc(#loc119)
          } loc(#loc119)
        } loc(#loc119)
      } loc(#loc117)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc127)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc41)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc41)
          cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc129)
          cir.for : cond {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc44)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc44)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc130)
            cir.condition(%13) loc(#loc45)
          } body {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc48)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
              cir.copy %15 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
            } loc(#loc131)
            cir.yield loc(#loc40)
          } step {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc52)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc53)
            cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc132)
            cir.yield loc(#loc128)
          } loc(#loc128)
        } loc(#loc128)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc55)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!ty__twoIntsStruct>, %6 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
        cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc57)
      } loc(#loc126)
    } loc(#loc115)
    cir.return loc(#loc6)
  } loc(#loc113)
  cir.global "private" external @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68_goodG2BData : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc133)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b_goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc135)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc137)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc139)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc74)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc74)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc141)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc77)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc77)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc142)
            cir.condition(%10) loc(#loc78)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc80)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc81)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %8 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
              %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
              cir.store %7, %11 : !s32i, !cir.ptr<!s32i> loc(#loc144)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc83)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc84)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
              %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc145)
            } loc(#loc143)
            cir.yield loc(#loc73)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc86)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc87)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc146)
            cir.yield loc(#loc140)
          } loc(#loc140)
        } loc(#loc140)
      } loc(#loc138)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc148)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc94)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc94)
          cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc150)
          cir.for : cond {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc96)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc97)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc97)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc151)
            cir.condition(%13) loc(#loc98)
          } body {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
              %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc101)
              %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
              %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc103)
              %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
              cir.copy %15 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
            } loc(#loc152)
            cir.yield loc(#loc93)
          } step {
            %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc105)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc106)
            cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc153)
            cir.yield loc(#loc149)
          } loc(#loc149)
        } loc(#loc149)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc108)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!ty__twoIntsStruct>, %6 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
        cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc110)
      } loc(#loc147)
    } loc(#loc136)
    cir.return loc(#loc61)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":19:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":19:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":50:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":28:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":28:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":29:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":49:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":30:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":30:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":31:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":39:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":32:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":32:20)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":38:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:18)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:25)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:29)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":35:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":36:36)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":36:24)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":36:17)
#loc28 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":37:36)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":37:24)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":37:17)
#loc32 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:35)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":34:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":40:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":48:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":41:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":41:20)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":46:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:27)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":44:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":45:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":45:22)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":45:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":45:34)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":45:27)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:35)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":43:34)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":47:30)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":47:35)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":47:36)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":47:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":20:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":20:24)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":57:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":81:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":59:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":59:28)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":60:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":80:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":61:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":61:33)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":62:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":70:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":63:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":63:20)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":69:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:22)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:18)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:25)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:29)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":66:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":67:36)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":67:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":67:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":68:36)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":68:24)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":68:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:35)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":65:34)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":71:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":79:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":72:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":72:20)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":77:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:22)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:18)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:25)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:29)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:27)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":75:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":76:17)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":76:22)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":76:23)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":76:34)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":76:27)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:35)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":74:34)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":78:30)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":78:35)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":78:36)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_68b.c":78:13)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc20, #loc19])
#loc121 = loc(fused[#loc21, #loc22])
#loc122 = loc(fused[#loc24, #loc18])
#loc123 = loc(fused[#loc27, #loc25])
#loc124 = loc(fused[#loc31, #loc29])
#loc125 = loc(fused[#loc34, #loc33])
#loc126 = loc(fused[#loc35, #loc36])
#loc127 = loc(fused[#loc37, #loc38])
#loc128 = loc(fused[#loc39, #loc40])
#loc129 = loc(fused[#loc42, #loc41])
#loc130 = loc(fused[#loc43, #loc44])
#loc131 = loc(fused[#loc46, #loc40])
#loc132 = loc(fused[#loc53, #loc52])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc60, #loc61])
#loc135 = loc(fused[#loc62, #loc63])
#loc136 = loc(fused[#loc64, #loc65])
#loc137 = loc(fused[#loc66, #loc67])
#loc138 = loc(fused[#loc68, #loc69])
#loc139 = loc(fused[#loc70, #loc71])
#loc140 = loc(fused[#loc72, #loc73])
#loc141 = loc(fused[#loc75, #loc74])
#loc142 = loc(fused[#loc76, #loc77])
#loc143 = loc(fused[#loc79, #loc73])
#loc144 = loc(fused[#loc82, #loc80])
#loc145 = loc(fused[#loc85, #loc83])
#loc146 = loc(fused[#loc87, #loc86])
#loc147 = loc(fused[#loc88, #loc89])
#loc148 = loc(fused[#loc90, #loc91])
#loc149 = loc(fused[#loc92, #loc93])
#loc150 = loc(fused[#loc95, #loc94])
#loc151 = loc(fused[#loc96, #loc97])
#loc152 = loc(fused[#loc99, #loc93])
#loc153 = loc(fused[#loc106, #loc105])
