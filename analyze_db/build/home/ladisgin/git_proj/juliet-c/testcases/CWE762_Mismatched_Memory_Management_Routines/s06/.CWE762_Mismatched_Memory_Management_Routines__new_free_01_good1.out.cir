!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":16:9)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":16:19)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":16:24)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":46:14)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":22:9)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":55:13)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":80:10)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":80:14)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":80:20)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":80:32)
#loc71 = loc(fused[#loc3, #loc4])
#loc88 = loc(fused[#loc53, #loc54])
#loc89 = loc(fused[#loc55, #loc56])
!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass = !cir.struct<class "CWE762_Mismatched_Memory_Management_Routines__new_free_01::GoodClass" {!cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_019GoodClassC2Ec(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":16:9), %arg1: !s8i loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["letter", init] {alignment = 1 : i64} loc(#loc71)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>> loc(#loc5)
    cir.store %arg1, %1 : !s8i, !cir.ptr<!s8i> loc(#loc5)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> loc(#loc1)
    %3 = cir.const #cir.int<1> : !u64i loc(#loc72)
    %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc1)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc72)
    %6 = cir.get_member %2[0] {name = "letter"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
    %7 = cir.get_member %2[0] {name = "letter"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
    %10 = cir.cast(bitcast, %1 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc76)
    cir.libc.memcpy %11 bytes from %10 to %9 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc77)
    cir.return loc(#loc2)
  } loc(#loc70)
  cir.func private @printf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%c\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc20)
  cir.func linkonce_odr @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_019GoodClass11printLetterEv(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":46:14)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc23)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>> loc(#loc24)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> loc(#loc23)
    %2 = cir.get_global @printf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc25)
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc20)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc20)
    %5 = cir.get_member %1[0] {name = "letter"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %6 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc27)
    %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc27)
    %9 = cir.call @printf(%4, %8) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc79)
  cir.func linkonce_odr @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_019GoodClassD2Ev(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":22:9)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc28)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>> loc(#loc30)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> loc(#loc28)
    %2 = cir.get_member %1[0] {name = "letter"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc28)
    cir.return loc(#loc29)
  } loc(#loc80)
  cir.func internal private @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_01L5good1Ev() extra(#fn_attr) {
    %0 = cir.alloca !ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, ["goodClassObject", init] {alignment = 8 : i64} loc(#loc82)
    %1 = cir.const #cir.int<71> : !s8i loc(#loc36)
    cir.call @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_019GoodClassC2Ec(%0, %1) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>, !s8i) -> () loc(#loc37)
    cir.br ^bb1 loc(#loc38)
  ^bb1:  // pred: ^bb0
    cir.try_call @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_019GoodClass11printLetterEv(%0) ^bb2, ^bb3 : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>) -> () loc(#loc39)
  ^bb2:  // pred: ^bb1
    cir.br ^bb5 loc(#loc38)
  ^bb3:  // pred: ^bb1
    %exception_ptr, %type_id = cir.eh.inflight_exception cleanup loc(#loc38)
    cir.call @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_019GoodClassD2Ev(%0) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>) -> () extra(#fn_attr2) loc(#loc80)
    cir.br ^bb4(%exception_ptr, %type_id : !cir.ptr<!void>, !u32i) loc(#loc38)
  ^bb4(%2: !cir.ptr<!void> loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":55:13), %3: !u32i loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":55:13)):  // pred: ^bb3
    cir.resume %2, %3 loc(#loc38)
  ^bb5:  // pred: ^bb2
    cir.call @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_019GoodClassD2Ev(%0) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__new_free_013A3AGoodClass>) -> () extra(#fn_attr2) loc(#loc80)
    cir.return loc(#loc33)
  } loc(#loc81)
  cir.func @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_014goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_01L5good1Ev() : () -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc83)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc84)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.call @_ZN57CWE762_Mismatched_Memory_Management_Routines__new_free_014goodEv() : () -> () loc(#loc62)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.return %11 : !s32i loc(#loc90)
  } loc(#loc87)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc91)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc92)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":0:0)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":20:9)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":17:9)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":18:28)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":18:32)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":52:16)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":18:13)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:26)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:20)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:34)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:35)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:43)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:54)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:13)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":19:55)
#loc18 = loc("/usr/include/stdio.h":363:1)
#loc19 = loc("/usr/include/stdio.h":363:56)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":48:20)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":46:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":49:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":47:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":48:13)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":48:29)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":48:28)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":26:9)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":23:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":25:20)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":55:1)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":59:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":57:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":57:35)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":57:32)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":57:15)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":58:21)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":61:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":64:1)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":63:5)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":85:15)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":87:15)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":80:1)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":90:1)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":81:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":83:27)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":83:22)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":83:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":85:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":86:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":87:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":89:12)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_01_good1.cpp":89:5)
#loc66 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc67 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc68 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc69 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc70 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc6, #loc7])
#loc73 = loc(fused[#loc9, #loc7])
#loc74 = loc(fused[#loc11, #loc10])
#loc75 = loc(fused[#loc12, #loc13])
#loc76 = loc(fused[#loc14, #loc15])
#loc77 = loc(fused[#loc16, #loc17])
#loc78 = loc(fused[#loc18, #loc19])
#loc79 = loc(fused[#loc21, #loc22])
#loc80 = loc(fused[#loc28, #loc29])
#loc81 = loc(fused[#loc32, #loc33])
#loc82 = loc(fused[#loc34, #loc35])
#loc83 = loc(fused[#loc40, #loc41])
#loc84 = loc(fused[#loc43, #loc44])
#loc85 = loc(fused[#loc45, #loc46])
#loc86 = loc(fused[#loc47, #loc48])
#loc87 = loc(fused[#loc51, #loc52])
#loc90 = loc(fused[#loc65, #loc64])
#loc91 = loc(fused[#loc66, #loc67])
#loc92 = loc(fused[#loc68, #loc69])
