!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc171)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc173)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc174)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc179)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc179)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc23)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc181)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc182)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb3 loc(#loc185)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc187)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc35)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    cir.br ^bb12 loc(#loc20)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc38)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc39)
    %25 = cir.const #cir.int<1> : !u64i loc(#loc188)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc189)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc38)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb8 loc(#loc192)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc193)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc194)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc51)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb10 loc(#loc45)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc45)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc16)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc16)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc195)
  ^bb14:  // pred: ^bb13
    %36 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc196)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc196)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc54)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %39 ^bb15, ^bb16 loc(#loc197)
  ^bb15:  // pred: ^bb14
    %40 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc59)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb17 loc(#loc57)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc53)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc53)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc175)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc198)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc205)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc205)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc75)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc206)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc80)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc81)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc207)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc208)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    cir.br ^bb3 loc(#loc211)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc212)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc213)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc93)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc87)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb12 loc(#loc78)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc97)
    %25 = cir.const #cir.int<1> : !u64i loc(#loc214)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc215)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    cir.br ^bb8 loc(#loc218)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc219)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc220)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc109)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb10 loc(#loc103)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc103)
  ^bb11:  // pred: ^bb10
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    cir.br ^bb12 loc(#loc74)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc74)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc221)
  ^bb14:  // pred: ^bb13
    %38 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc222)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc222)
    %40 = cir.call %39() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc114)
    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %41 ^bb15, ^bb16 loc(#loc223)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc117)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc113)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc113)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc68)
  } loc(#loc201)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc228)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc228)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc127)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc127)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc132)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc133)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc133)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc230)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc231)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.br ^bb3 loc(#loc234)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc235)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc236)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc145)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc139)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc130)
  ^bb7:  // pred: ^bb1
    %20 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc146)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc147)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc147)
    %23 = cir.const #cir.int<1> : !u64i loc(#loc237)
    %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc238)
    %25 = cir.call @malloc(%24) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc239)
    cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.br ^bb8 loc(#loc241)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
    %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc242)
    cir.brcond %30 ^bb9, ^bb10 loc(#loc243)
  ^bb9:  // pred: ^bb8
    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc159)
    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
    cir.br ^bb10 loc(#loc153)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc153)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc126)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc126)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc244)
  ^bb14:  // pred: ^bb13
    %34 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc245)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc245)
    %36 = cir.call %35() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc162)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %37 ^bb15, ^bb16 loc(#loc246)
  ^bb15:  // pred: ^bb14
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc167)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
    cir.br ^bb17 loc(#loc165)
  ^bb16:  // pred: ^bb14
    %41 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc169)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc169)
    cir.br ^bb17 loc(#loc161)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc161)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc120)
  } loc(#loc224)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE415_Double_Free__malloc_free_char_12.c":24:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_char_12.c":53:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_char_12.c":26:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_char_12.c":26:12)
#loc13 = loc("CWE415_Double_Free__malloc_free_char_12.c":28:12)
#loc14 = loc("CWE415_Double_Free__malloc_free_char_12.c":28:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_12.c":29:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_12.c":41:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_12.c":29:8)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_12.c":29:33)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_12.c":30:5)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_12.c":35:5)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_12.c":37:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_12.c":31:24)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_12.c":31:31)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_12.c":31:35)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_12.c":31:46)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_12.c":31:47)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_12.c":31:9)
#loc28 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:9)
#loc29 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:37)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:13)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:21)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:27)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:28)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:34)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_12.c":32:33)
#loc36 = loc("CWE415_Double_Free__malloc_free_char_12.c":34:14)
#loc37 = loc("CWE415_Double_Free__malloc_free_char_12.c":34:9)
#loc38 = loc("CWE415_Double_Free__malloc_free_char_12.c":38:24)
#loc39 = loc("CWE415_Double_Free__malloc_free_char_12.c":38:31)
#loc40 = loc("CWE415_Double_Free__malloc_free_char_12.c":38:35)
#loc41 = loc("CWE415_Double_Free__malloc_free_char_12.c":38:46)
#loc42 = loc("CWE415_Double_Free__malloc_free_char_12.c":38:47)
#loc43 = loc("CWE415_Double_Free__malloc_free_char_12.c":38:9)
#loc44 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:9)
#loc45 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:37)
#loc46 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:13)
#loc47 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:21)
#loc48 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:27)
#loc49 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:28)
#loc50 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:34)
#loc51 = loc("CWE415_Double_Free__malloc_free_char_12.c":39:33)
#loc52 = loc("CWE415_Double_Free__malloc_free_char_12.c":42:5)
#loc53 = loc("CWE415_Double_Free__malloc_free_char_12.c":52:5)
#loc54 = loc("CWE415_Double_Free__malloc_free_char_12.c":42:8)
#loc55 = loc("CWE415_Double_Free__malloc_free_char_12.c":42:33)
#loc56 = loc("CWE415_Double_Free__malloc_free_char_12.c":43:5)
#loc57 = loc("CWE415_Double_Free__malloc_free_char_12.c":46:5)
#loc58 = loc("CWE415_Double_Free__malloc_free_char_12.c":48:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_char_12.c":45:9)
#loc60 = loc("CWE415_Double_Free__malloc_free_char_12.c":45:14)
#loc61 = loc("CWE415_Double_Free__malloc_free_char_12.c":127:1)
#loc62 = loc("CWE415_Double_Free__malloc_free_char_12.c":131:1)
#loc63 = loc("CWE415_Double_Free__malloc_free_char_12.c":129:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_char_12.c":129:13)
#loc65 = loc("CWE415_Double_Free__malloc_free_char_12.c":130:5)
#loc66 = loc("CWE415_Double_Free__malloc_free_char_12.c":130:13)
#loc67 = loc("CWE415_Double_Free__malloc_free_char_12.c":62:1)
#loc68 = loc("CWE415_Double_Free__malloc_free_char_12.c":93:1)
#loc69 = loc("CWE415_Double_Free__malloc_free_char_12.c":64:5)
#loc70 = loc("CWE415_Double_Free__malloc_free_char_12.c":64:12)
#loc71 = loc("CWE415_Double_Free__malloc_free_char_12.c":66:12)
#loc72 = loc("CWE415_Double_Free__malloc_free_char_12.c":66:5)
#loc73 = loc("CWE415_Double_Free__malloc_free_char_12.c":67:5)
#loc74 = loc("CWE415_Double_Free__malloc_free_char_12.c":80:5)
#loc75 = loc("CWE415_Double_Free__malloc_free_char_12.c":67:8)
#loc76 = loc("CWE415_Double_Free__malloc_free_char_12.c":67:33)
#loc77 = loc("CWE415_Double_Free__malloc_free_char_12.c":68:5)
#loc78 = loc("CWE415_Double_Free__malloc_free_char_12.c":73:5)
#loc79 = loc("CWE415_Double_Free__malloc_free_char_12.c":75:5)
#loc80 = loc("CWE415_Double_Free__malloc_free_char_12.c":69:24)
#loc81 = loc("CWE415_Double_Free__malloc_free_char_12.c":69:31)
#loc82 = loc("CWE415_Double_Free__malloc_free_char_12.c":69:35)
#loc83 = loc("CWE415_Double_Free__malloc_free_char_12.c":69:46)
#loc84 = loc("CWE415_Double_Free__malloc_free_char_12.c":69:47)
#loc85 = loc("CWE415_Double_Free__malloc_free_char_12.c":69:9)
#loc86 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:9)
#loc87 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:37)
#loc88 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:13)
#loc89 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:21)
#loc90 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:27)
#loc91 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:28)
#loc92 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:34)
#loc93 = loc("CWE415_Double_Free__malloc_free_char_12.c":70:33)
#loc94 = loc("CWE415_Double_Free__malloc_free_char_12.c":72:14)
#loc95 = loc("CWE415_Double_Free__malloc_free_char_12.c":72:9)
#loc96 = loc("CWE415_Double_Free__malloc_free_char_12.c":76:24)
#loc97 = loc("CWE415_Double_Free__malloc_free_char_12.c":76:31)
#loc98 = loc("CWE415_Double_Free__malloc_free_char_12.c":76:35)
#loc99 = loc("CWE415_Double_Free__malloc_free_char_12.c":76:46)
#loc100 = loc("CWE415_Double_Free__malloc_free_char_12.c":76:47)
#loc101 = loc("CWE415_Double_Free__malloc_free_char_12.c":76:9)
#loc102 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:9)
#loc103 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:37)
#loc104 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:13)
#loc105 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:21)
#loc106 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:27)
#loc107 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:28)
#loc108 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:34)
#loc109 = loc("CWE415_Double_Free__malloc_free_char_12.c":77:33)
#loc110 = loc("CWE415_Double_Free__malloc_free_char_12.c":79:14)
#loc111 = loc("CWE415_Double_Free__malloc_free_char_12.c":79:9)
#loc112 = loc("CWE415_Double_Free__malloc_free_char_12.c":81:5)
#loc113 = loc("CWE415_Double_Free__malloc_free_char_12.c":92:5)
#loc114 = loc("CWE415_Double_Free__malloc_free_char_12.c":81:8)
#loc115 = loc("CWE415_Double_Free__malloc_free_char_12.c":81:33)
#loc116 = loc("CWE415_Double_Free__malloc_free_char_12.c":82:5)
#loc117 = loc("CWE415_Double_Free__malloc_free_char_12.c":86:5)
#loc118 = loc("CWE415_Double_Free__malloc_free_char_12.c":88:5)
#loc119 = loc("CWE415_Double_Free__malloc_free_char_12.c":98:1)
#loc120 = loc("CWE415_Double_Free__malloc_free_char_12.c":125:1)
#loc121 = loc("CWE415_Double_Free__malloc_free_char_12.c":100:5)
#loc122 = loc("CWE415_Double_Free__malloc_free_char_12.c":100:12)
#loc123 = loc("CWE415_Double_Free__malloc_free_char_12.c":102:12)
#loc124 = loc("CWE415_Double_Free__malloc_free_char_12.c":102:5)
#loc125 = loc("CWE415_Double_Free__malloc_free_char_12.c":103:5)
#loc126 = loc("CWE415_Double_Free__malloc_free_char_12.c":114:5)
#loc127 = loc("CWE415_Double_Free__malloc_free_char_12.c":103:8)
#loc128 = loc("CWE415_Double_Free__malloc_free_char_12.c":103:33)
#loc129 = loc("CWE415_Double_Free__malloc_free_char_12.c":104:5)
#loc130 = loc("CWE415_Double_Free__malloc_free_char_12.c":108:5)
#loc131 = loc("CWE415_Double_Free__malloc_free_char_12.c":110:5)
#loc132 = loc("CWE415_Double_Free__malloc_free_char_12.c":105:24)
#loc133 = loc("CWE415_Double_Free__malloc_free_char_12.c":105:31)
#loc134 = loc("CWE415_Double_Free__malloc_free_char_12.c":105:35)
#loc135 = loc("CWE415_Double_Free__malloc_free_char_12.c":105:46)
#loc136 = loc("CWE415_Double_Free__malloc_free_char_12.c":105:47)
#loc137 = loc("CWE415_Double_Free__malloc_free_char_12.c":105:9)
#loc138 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:9)
#loc139 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:37)
#loc140 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:13)
#loc141 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:21)
#loc142 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:27)
#loc143 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:28)
#loc144 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:34)
#loc145 = loc("CWE415_Double_Free__malloc_free_char_12.c":106:33)
#loc146 = loc("CWE415_Double_Free__malloc_free_char_12.c":111:24)
#loc147 = loc("CWE415_Double_Free__malloc_free_char_12.c":111:31)
#loc148 = loc("CWE415_Double_Free__malloc_free_char_12.c":111:35)
#loc149 = loc("CWE415_Double_Free__malloc_free_char_12.c":111:46)
#loc150 = loc("CWE415_Double_Free__malloc_free_char_12.c":111:47)
#loc151 = loc("CWE415_Double_Free__malloc_free_char_12.c":111:9)
#loc152 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:9)
#loc153 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:37)
#loc154 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:13)
#loc155 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:21)
#loc156 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:27)
#loc157 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:28)
#loc158 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:34)
#loc159 = loc("CWE415_Double_Free__malloc_free_char_12.c":112:33)
#loc160 = loc("CWE415_Double_Free__malloc_free_char_12.c":115:5)
#loc161 = loc("CWE415_Double_Free__malloc_free_char_12.c":124:5)
#loc162 = loc("CWE415_Double_Free__malloc_free_char_12.c":115:8)
#loc163 = loc("CWE415_Double_Free__malloc_free_char_12.c":115:33)
#loc164 = loc("CWE415_Double_Free__malloc_free_char_12.c":116:5)
#loc165 = loc("CWE415_Double_Free__malloc_free_char_12.c":119:5)
#loc166 = loc("CWE415_Double_Free__malloc_free_char_12.c":121:5)
#loc167 = loc("CWE415_Double_Free__malloc_free_char_12.c":118:9)
#loc168 = loc("CWE415_Double_Free__malloc_free_char_12.c":118:14)
#loc169 = loc("CWE415_Double_Free__malloc_free_char_12.c":123:9)
#loc170 = loc("CWE415_Double_Free__malloc_free_char_12.c":123:14)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc14, #loc13])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc17, #loc18])
#loc180 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc181 = loc(fused[#loc24, #loc25])
#loc182 = loc(fused[#loc23, #loc25])
#loc183 = loc(fused[#loc22, #loc26])
#loc184 = loc(fused[#loc27, #loc26])
#loc185 = loc(fused[#loc28, #loc29])
#loc186 = loc(fused[#loc30, #loc31])
#loc187 = loc(fused[#loc32, #loc29])
#loc188 = loc(fused[#loc40, #loc41])
#loc189 = loc(fused[#loc39, #loc41])
#loc190 = loc(fused[#loc38, #loc42])
#loc191 = loc(fused[#loc43, #loc42])
#loc192 = loc(fused[#loc44, #loc45])
#loc193 = loc(fused[#loc46, #loc47])
#loc194 = loc(fused[#loc48, #loc45])
#loc195 = loc(fused[#loc52, #loc53])
#loc196 = loc(fused[#loc54, #loc55])
#loc197 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc198 = loc(fused[#loc61, #loc62])
#loc199 = loc(fused[#loc63, #loc64])
#loc200 = loc(fused[#loc65, #loc66])
#loc201 = loc(fused[#loc67, #loc68])
#loc202 = loc(fused[#loc69, #loc70])
#loc203 = loc(fused[#loc72, #loc71])
#loc204 = loc(fused[#loc73, #loc74])
#loc205 = loc(fused[#loc75, #loc76])
#loc206 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc207 = loc(fused[#loc82, #loc83])
#loc208 = loc(fused[#loc81, #loc83])
#loc209 = loc(fused[#loc80, #loc84])
#loc210 = loc(fused[#loc85, #loc84])
#loc211 = loc(fused[#loc86, #loc87])
#loc212 = loc(fused[#loc88, #loc89])
#loc213 = loc(fused[#loc90, #loc87])
#loc214 = loc(fused[#loc98, #loc99])
#loc215 = loc(fused[#loc97, #loc99])
#loc216 = loc(fused[#loc96, #loc100])
#loc217 = loc(fused[#loc101, #loc100])
#loc218 = loc(fused[#loc102, #loc103])
#loc219 = loc(fused[#loc104, #loc105])
#loc220 = loc(fused[#loc106, #loc103])
#loc221 = loc(fused[#loc112, #loc113])
#loc222 = loc(fused[#loc114, #loc115])
#loc223 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc224 = loc(fused[#loc119, #loc120])
#loc225 = loc(fused[#loc121, #loc122])
#loc226 = loc(fused[#loc124, #loc123])
#loc227 = loc(fused[#loc125, #loc126])
#loc228 = loc(fused[#loc127, #loc128])
#loc229 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc230 = loc(fused[#loc134, #loc135])
#loc231 = loc(fused[#loc133, #loc135])
#loc232 = loc(fused[#loc132, #loc136])
#loc233 = loc(fused[#loc137, #loc136])
#loc234 = loc(fused[#loc138, #loc139])
#loc235 = loc(fused[#loc140, #loc141])
#loc236 = loc(fused[#loc142, #loc139])
#loc237 = loc(fused[#loc148, #loc149])
#loc238 = loc(fused[#loc147, #loc149])
#loc239 = loc(fused[#loc146, #loc150])
#loc240 = loc(fused[#loc151, #loc150])
#loc241 = loc(fused[#loc152, #loc153])
#loc242 = loc(fused[#loc154, #loc155])
#loc243 = loc(fused[#loc156, #loc153])
#loc244 = loc(fused[#loc160, #loc161])
#loc245 = loc(fused[#loc162, #loc163])
#loc246 = loc(fused[#loc164, #loc165, #loc166, #loc161])
