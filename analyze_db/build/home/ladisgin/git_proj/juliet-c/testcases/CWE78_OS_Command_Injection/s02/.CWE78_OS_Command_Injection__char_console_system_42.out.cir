!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":36:25)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":36:32)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":121:10)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":121:14)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":121:20)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":121:32)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":84:29)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":84:36)
#true = #cir.bool<true> : !cir.bool
#loc165 = loc(fused[#loc14, #loc15])
#loc201 = loc(fused[#loc109, #loc110])
#loc202 = loc(fused[#loc111, #loc112])
#loc208 = loc(fused[#loc132, #loc133])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc159)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_42_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc160)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc161)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc13)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc167)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc21)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc21)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc167)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc26)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc169)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc27)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc170)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc33)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc34)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc34)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc173)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc173)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc176)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc49)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc49)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc178)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc53)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc53)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc179)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc54)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc51)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc51)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc55)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc180)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc50)
                    cir.yield %48 : !cir.bool loc(#loc50)
                  }, false {
                    %48 = cir.const #false loc(#loc50)
                    cir.yield %48 : !cir.bool loc(#loc50)
                  }) : (!cir.bool) -> !cir.bool loc(#loc50)
                  cir.yield %47 : !cir.bool loc(#loc50)
                }, false {
                  %37 = cir.const #false loc(#loc50)
                  cir.yield %37 : !cir.bool loc(#loc50)
                }) : (!cir.bool) -> !cir.bool loc(#loc50)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc57)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc57)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc60)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc182)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc61)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc183)
                } loc(#loc181)
              } loc(#loc177)
            } else {
              %29 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc62)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc63)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc63)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc65)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc66)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc184)
            } loc(#loc175)
          } loc(#loc172)
        } loc(#loc171)
      } loc(#loc168)
    } loc(#loc166)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc185)
  } loc(#loc164)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc73)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc188)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc160)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_42_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc160)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc160)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc83)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc89)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc90)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc194)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc73)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc94)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
      } loc(#loc195)
    } loc(#loc193)
    cir.return loc(#loc77)
  } loc(#loc189)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc196)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc198)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call @CWE78_OS_Command_Injection__char_console_system_42_good() : () -> () loc(#loc118)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call @CWE78_OS_Command_Injection__char_console_system_42_bad() : () -> () loc(#loc122)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %17 : !s32i loc(#loc205)
  } loc(#loc200)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc129)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc132, #loc133])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %2 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc135)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc129)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc129)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc209)
  } loc(#loc207)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc159)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc159)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc159)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %5 = cir.call @goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc146)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc152)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc153)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc215)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc155)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc156)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc158)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
      } loc(#loc216)
    } loc(#loc214)
    cir.return loc(#loc140)
  } loc(#loc210)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_42.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":95:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":95:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":69:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":69:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":57:27)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":36:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":64:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":37:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":38:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":62:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:9)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:37)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:26)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:33)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":61:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:17)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:27)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":43:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":60:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:23)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:28)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:27)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:43)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:47)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:57)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:67)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":46:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":54:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":56:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:34)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:38)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":53:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:31)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:33)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:36)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:41)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:49)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:50)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:55)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":51:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:39)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:26)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:34)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:35)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":57:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:22)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:29)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":63:12)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":63:5)
#loc69 = loc("/usr/include/stdlib.h":923:1)
#loc70 = loc("/usr/include/stdlib.h":923:41)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":75:19)
#loc74 = loc("/usr/include/stdlib.h":756:1)
#loc75 = loc("/usr/include/stdlib.h":756:70)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":66:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":78:1)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":68:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":68:12)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":70:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":70:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:22)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:12)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:26)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":77:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:16)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:9)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:25)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":74:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":75:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":76:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":76:14)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":106:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":109:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":108:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":108:13)
#loc99 = loc("/usr/include/stdlib.h":575:1)
#loc100 = loc("/usr/include/stdlib.h":575:41)
#loc101 = loc("/usr/include/time.h":76:1)
#loc102 = loc("/usr/include/time.h":76:38)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":126:15)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":128:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":131:15)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":133:15)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":121:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":136:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":122:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":124:27)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":124:22)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":124:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":126:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":127:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":127:61)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":128:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":131:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":132:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":132:60)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":133:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":135:12)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":135:5)
#loc127 = loc("/usr/include/string.h":149:1)
#loc128 = loc("/usr/include/string.h":150:14)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":87:18)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":84:1)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":89:1)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":85:1)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":87:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":87:12)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":88:12)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":88:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":92:1)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":104:1)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":94:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":94:12)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":96:12)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":96:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:26)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:12)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:30)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:5)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":103:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:16)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:9)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:25)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":100:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":101:19)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":101:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":102:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":102:14)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc12, #loc13])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc23, #loc24])
#loc169 = loc(fused[#loc25, #loc26])
#loc170 = loc(fused[#loc25, #loc27])
#loc171 = loc(fused[#loc28, #loc24])
#loc172 = loc(fused[#loc29, #loc30])
#loc173 = loc(fused[#loc34, #loc35])
#loc174 = loc(fused[#loc37, #loc38])
#loc175 = loc(fused[#loc39, #loc40, #loc41, #loc30])
#loc176 = loc(fused[#loc44, #loc45])
#loc177 = loc(fused[#loc46, #loc47])
#loc178 = loc(fused[#loc48, #loc49])
#loc179 = loc(fused[#loc52, #loc53])
#loc180 = loc(fused[#loc51, #loc55])
#loc181 = loc(fused[#loc56, #loc47])
#loc182 = loc(fused[#loc59, #loc60])
#loc183 = loc(fused[#loc58, #loc57])
#loc184 = loc(fused[#loc64, #loc63])
#loc185 = loc(fused[#loc68, #loc67])
#loc186 = loc(fused[#loc69, #loc70])
#loc187 = loc(fused[#loc71, #loc72])
#loc188 = loc(fused[#loc74, #loc75])
#loc189 = loc(fused[#loc76, #loc77])
#loc190 = loc(fused[#loc78, #loc79])
#loc191 = loc(fused[#loc81, #loc80])
#loc192 = loc(fused[#loc84, #loc85])
#loc193 = loc(fused[#loc86, #loc87])
#loc194 = loc(fused[#loc89, #loc90])
#loc195 = loc(fused[#loc91, #loc87])
#loc196 = loc(fused[#loc95, #loc96])
#loc197 = loc(fused[#loc97, #loc98])
#loc198 = loc(fused[#loc99, #loc100])
#loc199 = loc(fused[#loc101, #loc102])
#loc200 = loc(fused[#loc107, #loc108])
#loc203 = loc(fused[#loc118, #loc119])
#loc204 = loc(fused[#loc122, #loc123])
#loc205 = loc(fused[#loc126, #loc125])
#loc206 = loc(fused[#loc127, #loc128])
#loc207 = loc(fused[#loc130, #loc131])
#loc209 = loc(fused[#loc138, #loc137])
#loc210 = loc(fused[#loc139, #loc140])
#loc211 = loc(fused[#loc141, #loc142])
#loc212 = loc(fused[#loc144, #loc143])
#loc213 = loc(fused[#loc147, #loc148])
#loc214 = loc(fused[#loc149, #loc150])
#loc215 = loc(fused[#loc152, #loc153])
#loc216 = loc(fused[#loc154, #loc150])
