!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc414)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc415)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc416)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc417)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc418)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc419)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc420)
  cir.func private @close(!s32i) -> !s32i loc(#loc421)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc422)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printIntLine(!s32i) loc(#loc423)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc425)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc426)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc426)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc426)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc427)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc429)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc430)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc431)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc432)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc433)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc40)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc432)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc43)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc43)
      cir.store %13, %8 : !u64i, !cir.ptr<!u64i> loc(#loc433)
      cir.scope {
        cir.do {
          cir.scope {
            %14 = cir.const #cir.int<2> : !s32i loc(#loc49)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %16 = cir.const #cir.int<6> : !s32i loc(#loc51)
            %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
            cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc436)
            cir.scope {
              %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc57)
              %69 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc58)
              %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc438)
              cir.if %71 {
                cir.break loc(#loc60)
              } loc(#loc439)
            } loc(#loc437)
            %18 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc440)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc63)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc441)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc442)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc68)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc68)
            %23 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc443)
            %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
            %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
            %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
            %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc444)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc76)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc76)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
            %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc445)
            cir.scope {
              %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              %69 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc447)
              %70 = cir.const #cir.int<16> : !u64i loc(#loc448)
              %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc448)
              %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc89)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc449)
              cir.if %75 {
                cir.break loc(#loc91)
              } loc(#loc450)
            } loc(#loc446)
            %33 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc92)
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
            %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc94)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc95)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc451)
            %38 = cir.const #cir.int<1> : !u64i loc(#loc452)
            %39 = cir.const #cir.int<100> : !s32i loc(#loc100)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc100)
            %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc453)
            %43 = cir.const #cir.int<1> : !s32i loc(#loc102)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc102)
            %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc454)
            %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc455)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc104)
            %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc105)
            cir.store %49, %4 : !s32i, !cir.ptr<!s32i> loc(#loc456)
            cir.scope {
              %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %69 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc111)
              %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc458)
              %72 = cir.ternary(%71, true {
                %73 = cir.const #true loc(#loc112)
                cir.yield %73 : !cir.bool loc(#loc112)
              }, false {
                %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %74 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc459)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc112)
                  cir.yield %77 : !cir.bool loc(#loc112)
                }, false {
                  %77 = cir.const #false loc(#loc112)
                  cir.yield %77 : !cir.bool loc(#loc112)
                }) : (!cir.bool) -> !cir.bool loc(#loc112)
                cir.yield %76 : !cir.bool loc(#loc112)
              }) : (!cir.bool) -> !cir.bool loc(#loc112)
              cir.if %72 {
                cir.break loc(#loc116)
              } loc(#loc460)
            } loc(#loc457)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc117)
            %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc117)
            %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
            %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc120)
            %56 = cir.const #cir.int<1> : !u64i loc(#loc461)
            %57 = cir.binop(div, %55, %56) : !u64i loc(#loc462)
            %58 = cir.binop(add, %53, %57) : !u64i loc(#loc463)
            %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc123)
            cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc464)
            %60 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc124)
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
            %62 = cir.const #cir.int<13> : !s32i loc(#loc126)
            %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc124)
            cir.store %63, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc465)
            cir.scope {
              %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
              %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc131)
              cir.if %69 {
                %70 = cir.const #cir.int<0> : !s32i loc(#loc133)
                %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc133)
                %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
                cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc468)
              } loc(#loc467)
            } loc(#loc466)
            %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc136)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
            %66 = cir.const #cir.int<10> : !s32i loc(#loc138)
            %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc136)
            cir.store %67, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc469)
            cir.scope {
              %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
              %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc143)
              cir.if %69 {
                %70 = cir.const #cir.int<0> : !s32i loc(#loc145)
                %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc145)
                %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
                cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc472)
              } loc(#loc471)
            } loc(#loc470)
          } loc(#loc435)
          cir.yield loc(#loc46)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc148)
          cir.condition(%15) loc(#loc148)
        } loc(#loc434)
      } loc(#loc434)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc152)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc474)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc155)
        } loc(#loc475)
      } loc(#loc473)
    } loc(#loc428)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc477)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc478)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc477)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc478)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc480)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc481)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc482)
        cir.scope {
          %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc170)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
          %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc170)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc172)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc484)
          cir.if %17 {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc174)
            cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc486)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc178)
              cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc488)
              cir.for : cond {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc489)
                cir.condition(%23) loc(#loc182)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                  %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc185)
                  cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc491)
                } loc(#loc490)
                cir.yield loc(#loc177)
              } step {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc187)
                cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc492)
                cir.yield loc(#loc487)
              } loc(#loc487)
            } loc(#loc487)
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc189)
          } loc(#loc485)
        } loc(#loc483)
      } loc(#loc479)
    } loc(#loc476)
    cir.return loc(#loc24)
  } loc(#loc424)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc494)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc192)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc495)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc194)
    cir.return loc(#loc191)
  } loc(#loc493)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc496)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc198)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc498)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc499)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc499)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc499)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc500)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc207)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc198)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc198)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc207)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc502)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc503)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc502)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc503)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc505)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc506)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc507)
        cir.scope {
          %16 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc223)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
          %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc225)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc225)
          %20 = cir.call @__isoc99_sscanf(%17, %19, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc223)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc226)
          %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc509)
          cir.if %22 {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc228)
            cir.store %23, %15 : !s32i, !cir.ptr<!s32i> loc(#loc511)
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc232)
              cir.store %25, %13 : !s32i, !cir.ptr<!s32i> loc(#loc513)
              cir.for : cond {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                %27 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc514)
                cir.condition(%28) loc(#loc236)
              } body {
                cir.scope {
                  %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                  %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc239)
                  cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc516)
                } loc(#loc515)
                cir.yield loc(#loc231)
              } step {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc241)
                cir.store %27, %13 : !s32i, !cir.ptr<!s32i> loc(#loc517)
                cir.yield loc(#loc512)
              } loc(#loc512)
            } loc(#loc512)
            %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc242)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc243)
          } loc(#loc510)
        } loc(#loc508)
      } loc(#loc504)
    } loc(#loc501)
    cir.return loc(#loc200)
  } loc(#loc497)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc519)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc520)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc520)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc520)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc521)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc523)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc524)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc525)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc526)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc527)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc261)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc261)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc526)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc264)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
      %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc264)
      cir.store %13, %8 : !u64i, !cir.ptr<!u64i> loc(#loc527)
      cir.scope {
        cir.do {
          cir.scope {
            %14 = cir.const #cir.int<2> : !s32i loc(#loc270)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc271)
            %16 = cir.const #cir.int<6> : !s32i loc(#loc272)
            %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc273)
            cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc530)
            cir.scope {
              %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              %69 = cir.const #cir.int<1> : !s32i loc(#loc279)
              %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc279)
              %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc532)
              cir.if %71 {
                cir.break loc(#loc281)
              } loc(#loc533)
            } loc(#loc531)
            %18 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc534)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc284)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc535)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc536)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc289)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc289)
            %23 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc537)
            %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc291)
            %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc291)
            %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc292)
            %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc538)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc295)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc295)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc296)
            %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc539)
            cir.scope {
              %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc301)
              %69 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc541)
              %70 = cir.const #cir.int<16> : !u64i loc(#loc542)
              %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc542)
              %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc306)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc307)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc307)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc543)
              cir.if %75 {
                cir.break loc(#loc309)
              } loc(#loc544)
            } loc(#loc540)
            %33 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc310)
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc311)
            %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc312)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc313)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc545)
            %38 = cir.const #cir.int<1> : !u64i loc(#loc546)
            %39 = cir.const #cir.int<100> : !s32i loc(#loc318)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc318)
            %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc319)
            %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc547)
            %43 = cir.const #cir.int<1> : !s32i loc(#loc320)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc320)
            %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc548)
            %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc549)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc322)
            %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc323)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc323)
            cir.store %49, %4 : !s32i, !cir.ptr<!s32i> loc(#loc550)
            cir.scope {
              %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc328)
              %69 = cir.const #cir.int<1> : !s32i loc(#loc329)
              %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc329)
              %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc552)
              %72 = cir.ternary(%71, true {
                %73 = cir.const #true loc(#loc330)
                cir.yield %73 : !cir.bool loc(#loc330)
              }, false {
                %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc331)
                %74 = cir.const #cir.int<0> : !s32i loc(#loc332)
                %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc553)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc330)
                  cir.yield %77 : !cir.bool loc(#loc330)
                }, false {
                  %77 = cir.const #false loc(#loc330)
                  cir.yield %77 : !cir.bool loc(#loc330)
                }) : (!cir.bool) -> !cir.bool loc(#loc330)
                cir.yield %76 : !cir.bool loc(#loc330)
              }) : (!cir.bool) -> !cir.bool loc(#loc330)
              cir.if %72 {
                cir.break loc(#loc334)
              } loc(#loc554)
            } loc(#loc551)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc335)
            %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc335)
            %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc336)
            %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc337)
            %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc338)
            %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc338)
            %56 = cir.const #cir.int<1> : !u64i loc(#loc555)
            %57 = cir.binop(div, %55, %56) : !u64i loc(#loc556)
            %58 = cir.binop(add, %53, %57) : !u64i loc(#loc557)
            %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc341)
            cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc558)
            %60 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc342)
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc343)
            %62 = cir.const #cir.int<13> : !s32i loc(#loc344)
            %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc342)
            cir.store %63, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc559)
            cir.scope {
              %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc349)
              %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc349)
              cir.if %69 {
                %70 = cir.const #cir.int<0> : !s32i loc(#loc351)
                %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc351)
                %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc352)
                cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc562)
              } loc(#loc561)
            } loc(#loc560)
            %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc354)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc355)
            %66 = cir.const #cir.int<10> : !s32i loc(#loc356)
            %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc354)
            cir.store %67, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc563)
            cir.scope {
              %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc361)
              %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc361)
              cir.if %69 {
                %70 = cir.const #cir.int<0> : !s32i loc(#loc363)
                %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc363)
                %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc364)
                cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc566)
              } loc(#loc565)
            } loc(#loc564)
          } loc(#loc529)
          cir.yield loc(#loc267)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc366)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc366)
          cir.condition(%15) loc(#loc366)
        } loc(#loc528)
      } loc(#loc528)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc369)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc370)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc370)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc568)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc372)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc373)
        } loc(#loc569)
      } loc(#loc567)
    } loc(#loc522)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc571)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc572)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc377)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc571)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc379)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc572)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc574)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc575)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc576)
        cir.scope {
          %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc388)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc389)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc390)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc390)
          %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc388)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc391)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc578)
          cir.if %17 {
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc395)
              %19 = cir.const #cir.int<10000> : !s32i loc(#loc396)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc581)
              cir.if %20 {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc398)
                cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc583)
                cir.scope {
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc402)
                  cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc585)
                  cir.for : cond {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc404)
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc405)
                    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc586)
                    cir.condition(%26) loc(#loc406)
                  } body {
                    cir.scope {
                      %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc408)
                      %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc409)
                      cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc588)
                    } loc(#loc587)
                    cir.yield loc(#loc401)
                  } step {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc411)
                    cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc589)
                    cir.yield loc(#loc584)
                  } loc(#loc584)
                } loc(#loc584)
                %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc412)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc413)
              } loc(#loc582)
            } loc(#loc580)
          } loc(#loc579)
        } loc(#loc577)
      } loc(#loc573)
    } loc(#loc570)
    cir.return loc(#loc245)
  } loc(#loc518)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:49)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":246:1)
#loc15 = loc("/usr/include/string.h":247:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":468:1)
#loc19 = loc("/usr/include/stdio.h":468:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:30)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":49:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":139:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":51:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":51:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":52:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":52:28)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":53:12)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":53:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":54:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":120:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":59:9)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":59:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":60:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":60:28)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":61:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":61:15)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":62:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":62:32)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:37)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:26)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:33)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":64:9)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":109:17)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":65:9)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":108:9)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:36)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:45)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:58)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:29)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:13)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:69)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":75:13)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":78:13)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":75:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":75:34)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":76:13)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":77:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:20)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:21)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:30)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:33)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:47)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:13)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:48)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":80:34)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":80:13)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:39)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:13)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:59)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:38)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:46)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:13)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":86:13)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:25)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:58)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:59)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:68)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:82)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:17)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:88)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":84:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":85:17)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:31)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:55)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:62)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:60)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:46)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:69)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:72)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:83)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:88)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:94)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:104)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:105)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:108)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:26)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:13)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:109)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:13)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":94:13)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:31)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:44)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:47)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:61)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":92:13)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":93:17)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:57)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:13)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:18)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:28)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:41)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:52)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:53)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:23)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:30)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:36)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:13)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:40)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":99:13)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":102:13)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":99:17)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":100:13)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":101:28)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":101:18)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":101:17)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:23)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:30)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:36)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:40)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":104:13)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":107:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":104:17)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":105:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":106:28)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":106:18)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":106:17)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":109:16)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":110:9)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":113:9)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":110:13)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":110:30)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":111:9)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":112:26)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":112:13)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":121:5)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":138:5)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":122:9)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":122:27)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":123:9)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":123:23)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":124:9)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":137:9)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:13)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:17)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:20)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:23)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":136:13)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:17)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:24)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:43)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":127:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":129:31)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":129:17)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:17)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":134:17)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:26)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:22)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:29)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:33)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:31)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":131:17)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":133:32)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":133:21)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:37)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:36)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":135:30)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":135:17)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":269:1)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":273:1)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":271:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":271:13)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":272:5)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":272:13)
#loc196 = loc("/usr/include/string.h":141:1)
#loc197 = loc("/usr/include/string.h":142:14)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":152:18)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":146:1)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":171:1)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":148:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":148:12)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":149:5)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":149:28)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":150:12)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":150:5)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":152:5)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":152:12)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":153:5)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":170:5)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":154:9)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":154:27)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":155:9)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":155:23)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":156:9)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":169:9)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:13)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:17)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:20)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:23)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:13)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":168:13)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:17)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:24)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:30)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:43)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":159:13)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":161:31)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":161:17)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:17)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":166:17)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:26)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:22)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:29)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:33)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:31)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":163:17)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":165:32)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":165:21)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:37)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:36)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":167:30)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":167:17)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":174:1)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":267:1)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":176:5)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":176:12)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":177:5)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":177:28)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":178:12)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":178:5)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":179:5)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":245:5)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":184:9)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":184:13)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":185:9)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":185:28)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":186:9)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":186:15)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":187:9)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":187:32)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:9)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:37)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:26)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:33)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":189:9)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":234:17)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":190:9)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":233:9)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:36)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:45)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:58)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:29)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:69)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":200:13)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":203:13)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":200:17)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":200:34)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":201:13)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":202:17)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:20)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:21)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:30)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:33)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:47)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:13)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:48)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":205:34)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":205:13)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:49)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:39)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:13)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:59)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:38)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:32)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:13)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:46)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:13)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":211:13)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:25)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:58)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:59)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:68)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:82)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:17)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:88)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":209:13)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":210:17)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:31)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:55)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:62)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:60)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:46)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:69)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:72)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:83)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:88)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:94)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:104)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:105)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:108)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:26)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:13)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:109)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:13)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":219:13)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:17)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:31)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:44)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:47)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:61)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":217:13)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":218:17)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:57)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:13)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:18)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:28)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:41)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:52)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:53)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:23)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:30)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:36)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:13)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:40)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":224:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":227:13)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":224:17)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":225:13)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":226:28)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":226:18)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":226:17)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:23)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:30)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:36)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:13)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:40)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":229:13)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":232:13)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":229:17)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":230:13)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":231:28)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":231:18)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":231:17)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":234:16)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":235:9)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":238:9)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":235:13)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":235:30)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":236:9)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":237:26)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":237:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":246:5)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":266:5)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":247:9)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":247:27)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":248:9)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":248:23)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":249:9)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":265:9)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:13)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:17)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:20)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:23)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:13)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":264:13)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:17)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:24)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:30)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:43)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":252:13)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":254:17)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":263:17)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":254:21)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":254:25)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":255:17)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":256:35)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":256:21)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:21)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":261:21)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:30)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:26)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:33)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:37)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:35)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":258:21)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":260:36)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":260:25)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:41)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:40)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":262:34)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":262:21)
#loc414 = loc(fused[#loc1, #loc2])
#loc415 = loc(fused[#loc3, #loc4])
#loc416 = loc(fused[#loc5, #loc6])
#loc417 = loc(fused[#loc8, #loc9])
#loc418 = loc(fused[#loc10, #loc11])
#loc419 = loc(fused[#loc12, #loc13])
#loc420 = loc(fused[#loc14, #loc15])
#loc421 = loc(fused[#loc16, #loc17])
#loc422 = loc(fused[#loc18, #loc19])
#loc423 = loc(fused[#loc21, #loc22])
#loc424 = loc(fused[#loc23, #loc24])
#loc425 = loc(fused[#loc25, #loc26])
#loc426 = loc(fused[#loc27, #loc28])
#loc427 = loc(fused[#loc30, #loc29])
#loc428 = loc(fused[#loc31, #loc32])
#loc429 = loc(fused[#loc33, #loc34])
#loc430 = loc(fused[#loc35, #loc36])
#loc431 = loc(fused[#loc37, #loc38])
#loc432 = loc(fused[#loc39, #loc40])
#loc433 = loc(fused[#loc41, #loc42])
#loc434 = loc(fused[#loc45, #loc46])
#loc435 = loc(fused[#loc47, #loc48])
#loc436 = loc(fused[#loc53, #loc54])
#loc437 = loc(fused[#loc55, #loc56])
#loc438 = loc(fused[#loc57, #loc58])
#loc439 = loc(fused[#loc59, #loc56])
#loc440 = loc(fused[#loc61, #loc62])
#loc441 = loc(fused[#loc64, #loc65])
#loc442 = loc(fused[#loc66, #loc67])
#loc443 = loc(fused[#loc70, #loc68])
#loc444 = loc(fused[#loc74, #loc75])
#loc445 = loc(fused[#loc79, #loc80])
#loc446 = loc(fused[#loc81, #loc82])
#loc447 = loc(fused[#loc84, #loc85])
#loc448 = loc(fused[#loc86, #loc87])
#loc449 = loc(fused[#loc88, #loc89])
#loc450 = loc(fused[#loc90, #loc82])
#loc451 = loc(fused[#loc96, #loc97])
#loc452 = loc(fused[#loc98, #loc99])
#loc453 = loc(fused[#loc100, #loc101])
#loc454 = loc(fused[#loc100, #loc102])
#loc455 = loc(fused[#loc98, #loc103])
#loc456 = loc(fused[#loc106, #loc107])
#loc457 = loc(fused[#loc108, #loc109])
#loc458 = loc(fused[#loc110, #loc111])
#loc459 = loc(fused[#loc113, #loc114])
#loc460 = loc(fused[#loc115, #loc109])
#loc461 = loc(fused[#loc121, #loc122])
#loc462 = loc(fused[#loc120, #loc122])
#loc463 = loc(fused[#loc119, #loc122])
#loc464 = loc(fused[#loc118, #loc117])
#loc465 = loc(fused[#loc127, #loc128])
#loc466 = loc(fused[#loc129, #loc130])
#loc467 = loc(fused[#loc132, #loc130])
#loc468 = loc(fused[#loc135, #loc133])
#loc469 = loc(fused[#loc139, #loc140])
#loc470 = loc(fused[#loc141, #loc142])
#loc471 = loc(fused[#loc144, #loc142])
#loc472 = loc(fused[#loc147, #loc145])
#loc473 = loc(fused[#loc149, #loc150])
#loc474 = loc(fused[#loc151, #loc152])
#loc475 = loc(fused[#loc153, #loc150])
#loc476 = loc(fused[#loc156, #loc157])
#loc477 = loc(fused[#loc158, #loc159])
#loc478 = loc(fused[#loc160, #loc161])
#loc479 = loc(fused[#loc162, #loc163])
#loc480 = loc(fused[#loc164, #loc165])
#loc481 = loc(fused[#loc164, #loc166])
#loc482 = loc(fused[#loc164, #loc167])
#loc483 = loc(fused[#loc168, #loc169])
#loc484 = loc(fused[#loc170, #loc172])
#loc485 = loc(fused[#loc173, #loc169])
#loc486 = loc(fused[#loc175, #loc174])
#loc487 = loc(fused[#loc176, #loc177])
#loc488 = loc(fused[#loc179, #loc178])
#loc489 = loc(fused[#loc180, #loc181])
#loc490 = loc(fused[#loc183, #loc177])
#loc491 = loc(fused[#loc185, #loc184])
#loc492 = loc(fused[#loc187, #loc186])
#loc493 = loc(fused[#loc190, #loc191])
#loc494 = loc(fused[#loc192, #loc193])
#loc495 = loc(fused[#loc194, #loc195])
#loc496 = loc(fused[#loc196, #loc197])
#loc497 = loc(fused[#loc199, #loc200])
#loc498 = loc(fused[#loc201, #loc202])
#loc499 = loc(fused[#loc203, #loc204])
#loc500 = loc(fused[#loc206, #loc205])
#loc501 = loc(fused[#loc209, #loc210])
#loc502 = loc(fused[#loc211, #loc212])
#loc503 = loc(fused[#loc213, #loc214])
#loc504 = loc(fused[#loc215, #loc216])
#loc505 = loc(fused[#loc217, #loc218])
#loc506 = loc(fused[#loc217, #loc219])
#loc507 = loc(fused[#loc217, #loc220])
#loc508 = loc(fused[#loc221, #loc222])
#loc509 = loc(fused[#loc223, #loc226])
#loc510 = loc(fused[#loc227, #loc222])
#loc511 = loc(fused[#loc229, #loc228])
#loc512 = loc(fused[#loc230, #loc231])
#loc513 = loc(fused[#loc233, #loc232])
#loc514 = loc(fused[#loc234, #loc235])
#loc515 = loc(fused[#loc237, #loc231])
#loc516 = loc(fused[#loc239, #loc238])
#loc517 = loc(fused[#loc241, #loc240])
#loc518 = loc(fused[#loc244, #loc245])
#loc519 = loc(fused[#loc246, #loc247])
#loc520 = loc(fused[#loc248, #loc249])
#loc521 = loc(fused[#loc251, #loc250])
#loc522 = loc(fused[#loc252, #loc253])
#loc523 = loc(fused[#loc254, #loc255])
#loc524 = loc(fused[#loc256, #loc257])
#loc525 = loc(fused[#loc258, #loc259])
#loc526 = loc(fused[#loc260, #loc261])
#loc527 = loc(fused[#loc262, #loc263])
#loc528 = loc(fused[#loc266, #loc267])
#loc529 = loc(fused[#loc268, #loc269])
#loc530 = loc(fused[#loc274, #loc275])
#loc531 = loc(fused[#loc276, #loc277])
#loc532 = loc(fused[#loc278, #loc279])
#loc533 = loc(fused[#loc280, #loc277])
#loc534 = loc(fused[#loc282, #loc283])
#loc535 = loc(fused[#loc285, #loc286])
#loc536 = loc(fused[#loc287, #loc288])
#loc537 = loc(fused[#loc290, #loc289])
#loc538 = loc(fused[#loc293, #loc294])
#loc539 = loc(fused[#loc297, #loc298])
#loc540 = loc(fused[#loc299, #loc300])
#loc541 = loc(fused[#loc302, #loc303])
#loc542 = loc(fused[#loc304, #loc305])
#loc543 = loc(fused[#loc306, #loc307])
#loc544 = loc(fused[#loc308, #loc300])
#loc545 = loc(fused[#loc314, #loc315])
#loc546 = loc(fused[#loc316, #loc317])
#loc547 = loc(fused[#loc318, #loc319])
#loc548 = loc(fused[#loc318, #loc320])
#loc549 = loc(fused[#loc316, #loc321])
#loc550 = loc(fused[#loc324, #loc325])
#loc551 = loc(fused[#loc326, #loc327])
#loc552 = loc(fused[#loc328, #loc329])
#loc553 = loc(fused[#loc331, #loc332])
#loc554 = loc(fused[#loc333, #loc327])
#loc555 = loc(fused[#loc339, #loc340])
#loc556 = loc(fused[#loc338, #loc340])
#loc557 = loc(fused[#loc337, #loc340])
#loc558 = loc(fused[#loc336, #loc335])
#loc559 = loc(fused[#loc345, #loc346])
#loc560 = loc(fused[#loc347, #loc348])
#loc561 = loc(fused[#loc350, #loc348])
#loc562 = loc(fused[#loc353, #loc351])
#loc563 = loc(fused[#loc357, #loc358])
#loc564 = loc(fused[#loc359, #loc360])
#loc565 = loc(fused[#loc362, #loc360])
#loc566 = loc(fused[#loc365, #loc363])
#loc567 = loc(fused[#loc367, #loc368])
#loc568 = loc(fused[#loc369, #loc370])
#loc569 = loc(fused[#loc371, #loc368])
#loc570 = loc(fused[#loc374, #loc375])
#loc571 = loc(fused[#loc376, #loc377])
#loc572 = loc(fused[#loc378, #loc379])
#loc573 = loc(fused[#loc380, #loc381])
#loc574 = loc(fused[#loc382, #loc383])
#loc575 = loc(fused[#loc382, #loc384])
#loc576 = loc(fused[#loc382, #loc385])
#loc577 = loc(fused[#loc386, #loc387])
#loc578 = loc(fused[#loc388, #loc391])
#loc579 = loc(fused[#loc392, #loc387])
#loc580 = loc(fused[#loc393, #loc394])
#loc581 = loc(fused[#loc395, #loc396])
#loc582 = loc(fused[#loc397, #loc394])
#loc583 = loc(fused[#loc399, #loc398])
#loc584 = loc(fused[#loc400, #loc401])
#loc585 = loc(fused[#loc403, #loc402])
#loc586 = loc(fused[#loc404, #loc405])
#loc587 = loc(fused[#loc407, #loc401])
#loc588 = loc(fused[#loc409, #loc408])
#loc589 = loc(fused[#loc411, #loc410])
