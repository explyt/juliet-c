!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":27:23)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":27:37)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":50:27)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":50:41)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":69:27)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":69:41)
#loc62 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:7)
#loc63 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:12)
#loc103 = loc(fused[#loc8, #loc9])
#loc112 = loc(fused[#loc32, #loc33])
#loc121 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc62, #loc63])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc100)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L9badSourceERj(%arg0: !cir.ptr<!u32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc101)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc102)
  cir.func private @printUnsignedLine(!u32i) loc(#loc104)
  cir.func @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc107)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc22)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc108)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L9badSourceERj(%1) : (!cir.ptr<!u32i>) -> () loc(#loc24)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc27)
    %5 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc19)
    %6 = cir.binop(mul, %4, %5) : !u32i loc(#loc110)
    cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc106)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc28)
    cir.call @printUnsignedLine(%7) : (!u32i) -> () loc(#loc29)
    cir.br ^bb2 loc(#loc26)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc17)
  } loc(#loc105)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L13goodG2BSourceERj(%arg0: !cir.ptr<!u32i> loc(fused[#loc32, #loc33])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc112)
    cir.store %arg0, %0 : !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>> loc(#loc34)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc35)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc36)
    cir.store %2, %3 : !u32i, !cir.ptr<!u32i> loc(#loc113)
    cir.return loc(#loc31)
  } loc(#loc111)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc116)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc43)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc117)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L13goodG2BSourceERj(%1) : (!cir.ptr<!u32i>) -> () loc(#loc45)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc48)
    %5 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc40)
    %6 = cir.binop(mul, %4, %5) : !u32i loc(#loc119)
    cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc115)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc49)
    cir.call @printUnsignedLine(%7) : (!u32i) -> () loc(#loc50)
    cir.br ^bb2 loc(#loc47)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc38)
  } loc(#loc114)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L13goodB2GSourceERj(%arg0: !cir.ptr<!u32i> loc(fused[#loc53, #loc54])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc121)
    cir.store %arg0, %0 : !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>> loc(#loc55)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc56)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc101)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc58)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc58)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc59)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc56)
    cir.return loc(#loc52)
  } loc(#loc120)
  cir.func linkonce_odr @_ZSt3absl(%arg0: !s64i loc(fused[#loc62, #loc63])) -> !s64i extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["__i", init] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["__retval"] {alignment = 8 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc64)
    %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc65)
    %3 = cir.abs %2 poison : !s64i loc(#loc66)
    cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc124)
    cir.return %4 : !s64i loc(#loc124)
  } loc(#loc122)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc69)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc72)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc128)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc79)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc129)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L13goodB2GSourceERj(%1) : (!cir.ptr<!u32i>) -> () loc(#loc81)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc84)
    %5 = cir.cast(integral, %4 : !u32i), !s64i loc(#loc84)
    %6 = cir.call @_ZSt3absl(%5) : (!s64i) -> !s64i loc(#loc85)
    %7 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc86)
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc87)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc87)
    %10 = cir.const #cir.int<2> : !u32i loc(#loc87)
    %11 = cir.binop(mul, %9, %10) : !u32i loc(#loc87)
    %12 = cir.const #cir.int<1> : !u32i loc(#loc87)
    %13 = cir.binop(add, %11, %12) : !u32i loc(#loc87)
    %14 = cir.cast(int_to_float, %13 : !u32i), !cir.double loc(#loc87)
    %15 = cir.call @sqrt(%14) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc86)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s64i loc(#loc86)
    %17 = cir.cmp(lt, %6, %16) : !s64i, !cir.bool loc(#loc131)
    cir.brcond %17 ^bb2, ^bb3 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc92)
    %19 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc76)
    %20 = cir.binop(mul, %18, %19) : !u32i loc(#loc133)
    cir.store %20, %0 : !u32i, !cir.ptr<!u32i> loc(#loc127)
    %21 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc93)
    cir.call @printUnsignedLine(%21) : (!u32i) -> () loc(#loc94)
    cir.br ^bb4 loc(#loc90)
  ^bb3:  // pred: ^bb1
    %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc72)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc83)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc74)
  } loc(#loc126)
  cir.func @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_434goodEv() extra(#fn_attr) {
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L7goodG2BEv() : () -> () loc(#loc98)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_43L7goodB2GEv() : () -> () loc(#loc99)
    cir.return loc(#loc97)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":30:20)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":27:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":31:1)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":28:1)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":30:5)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":30:13)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":30:27)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":33:1)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":43:1)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":40:9)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":40:38)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":35:5)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":35:18)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":36:12)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":36:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":37:5)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":38:5)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":42:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":40:31)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":41:27)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":41:9)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":50:1)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":54:1)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":51:1)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":53:12)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":53:5)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":56:1)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":66:1)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":63:9)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":63:38)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":58:5)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":58:18)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":59:12)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":59:5)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":60:5)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":61:5)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":65:5)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":63:31)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":64:27)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":64:9)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":69:1)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":73:1)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":70:1)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":72:5)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":72:13)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":72:20)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":72:27)
#loc60 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":55:3)
#loc61 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:47)
#loc64 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:17)
#loc65 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:41)
#loc66 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:26)
#loc67 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:19)
#loc68 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:44)
#loc69 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":88:19)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":75:1)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":90:1)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":83:9)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":83:38)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":77:5)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":77:18)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":78:12)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":78:5)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":79:5)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":81:5)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":89:5)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":81:19)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":81:9)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":81:33)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":81:46)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":81:54)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":82:5)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":85:5)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":87:5)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":83:31)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":84:27)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":84:9)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":88:9)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":92:1)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":96:1)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":94:5)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_43.cpp":95:5)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc6, #loc7])
#loc104 = loc(fused[#loc14, #loc15])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc20, #loc21])
#loc108 = loc(fused[#loc23, #loc22])
#loc109 = loc(fused[#loc25, #loc26])
#loc110 = loc(fused[#loc27, #loc19])
#loc111 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc36, #loc35])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc44, #loc43])
#loc118 = loc(fused[#loc46, #loc47])
#loc119 = loc(fused[#loc48, #loc40])
#loc120 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc60, #loc61])
#loc124 = loc(fused[#loc67, #loc68])
#loc125 = loc(fused[#loc70, #loc71])
#loc126 = loc(fused[#loc73, #loc74])
#loc127 = loc(fused[#loc75, #loc76])
#loc128 = loc(fused[#loc77, #loc78])
#loc129 = loc(fused[#loc80, #loc79])
#loc130 = loc(fused[#loc82, #loc83])
#loc131 = loc(fused[#loc85, #loc88])
#loc132 = loc(fused[#loc89, #loc90, #loc91, #loc83])
#loc133 = loc(fused[#loc92, #loc76])
#loc134 = loc(fused[#loc96, #loc97])
