!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc124)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc126)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc128)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc15)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc15)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc15)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %13 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %14 ^bb3, ^bb6 loc(#loc20)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc23)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc24)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc24)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc132)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc28)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc30)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc133)
    cir.br ^bb6 loc(#loc33)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc19)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc134)
  ^bb8:  // pred: ^bb7
    %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc124)
    cir.store %29, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc124)
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc36)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc36)
    cir.store %32, %2 : !u64i, !cir.ptr<!u64i> loc(#loc135)
    cir.br ^bb9 loc(#loc136)
  ^bb9:  // pred: ^bb8
    %33 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc42)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb10 loc(#loc136)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc138)
    cir.brcond %37 ^bb11, ^bb15 loc(#loc46)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc139)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    %41 = cir.load %40 : !cir.ptr<!s8i>, !s8i loc(#loc48)
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc52)
    %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc41)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %46 = cir.unary(inc, %45) : !u64i, !u64i loc(#loc54)
    cir.store %46, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb10 loc(#loc136)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc41)
  ^bb16:  // pred: ^bb15
    %47 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc55)
    %49 = cir.const #cir.int<50> : !s32i loc(#loc56)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc56)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc58)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc58)
    cir.store %48, %53 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb17 loc(#loc35)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc6)
  } loc(#loc123)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc143)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc148)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc150)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc75)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc75)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc75)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %13 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %14 ^bb3, ^bb6 loc(#loc80)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc83)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc84)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc84)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc84)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc88)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc90)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc90)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc92)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb6 loc(#loc93)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc79)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc79)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc156)
  ^bb8:  // pred: ^bb7
    %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc146)
    cir.store %29, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc146)
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc96)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc96)
    cir.store %32, %2 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb9 loc(#loc158)
  ^bb9:  // pred: ^bb8
    %33 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc102)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc159)
    cir.br ^bb10 loc(#loc158)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc160)
    cir.brcond %37 ^bb11, ^bb15 loc(#loc106)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc161)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc110)
    %41 = cir.load %40 : !cir.ptr<!s8i>, !s8i loc(#loc108)
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc112)
    %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb13 loc(#loc101)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc101)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %46 = cir.unary(inc, %45) : !u64i, !u64i loc(#loc114)
    cir.store %46, %1 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.br ^bb10 loc(#loc158)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc101)
  ^bb16:  // pred: ^bb15
    %47 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc115)
    %49 = cir.const #cir.int<50> : !s32i loc(#loc116)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc116)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc118)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %48, %53 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb17 loc(#loc95)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc66)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":47:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":36:25)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":37:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":37:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":37:19)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":25:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":26:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":26:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":27:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":27:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":28:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":34:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":28:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":29:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":31:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":31:22)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":31:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":31:31)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":31:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":31:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":32:23)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":32:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":32:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":32:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":32:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":33:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":35:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":46:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":38:19)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":38:26)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":38:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":38:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":43:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:25)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":41:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":42:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":42:28)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":42:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":42:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":42:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:35)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":40:34)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":44:22)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":44:14)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":44:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":44:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":45:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":45:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":80:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":83:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":82:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":82:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":54:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":78:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":67:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":67:25)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":68:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":68:16)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":68:19)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":56:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":56:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":57:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":57:33)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":58:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":58:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":59:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":65:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":59:11)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":60:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":62:16)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":62:22)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":62:27)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":62:30)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":62:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":62:31)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":63:22)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":63:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":63:14)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":63:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":63:18)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":64:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":66:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":77:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":69:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":69:26)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":69:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":69:30)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":74:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:18)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:14)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:21)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:25)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":72:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":73:23)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":73:28)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":73:29)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":73:18)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":73:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:35)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":71:34)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":75:22)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":75:14)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":75:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":75:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":76:19)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_16.c":76:9)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc9, #loc11])
#loc127 = loc(fused[#loc12, #loc13])
#loc128 = loc(fused[#loc14, #loc15])
#loc129 = loc(fused[#loc17, #loc16])
#loc130 = loc(fused[#loc18, #loc19])
#loc131 = loc(fused[#loc21, #loc19])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc29, #loc28])
#loc134 = loc(fused[#loc34, #loc35])
#loc135 = loc(fused[#loc38, #loc39])
#loc136 = loc(fused[#loc40, #loc41])
#loc137 = loc(fused[#loc43, #loc42])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc47, #loc41])
#loc140 = loc(fused[#loc52, #loc50])
#loc141 = loc(fused[#loc54, #loc53])
#loc142 = loc(fused[#loc58, #loc55])
#loc143 = loc(fused[#loc61, #loc62])
#loc144 = loc(fused[#loc63, #loc64])
#loc145 = loc(fused[#loc65, #loc66])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc69, #loc71])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc74, #loc75])
#loc151 = loc(fused[#loc77, #loc76])
#loc152 = loc(fused[#loc78, #loc79])
#loc153 = loc(fused[#loc81, #loc79])
#loc154 = loc(fused[#loc86, #loc87])
#loc155 = loc(fused[#loc89, #loc88])
#loc156 = loc(fused[#loc94, #loc95])
#loc157 = loc(fused[#loc98, #loc99])
#loc158 = loc(fused[#loc100, #loc101])
#loc159 = loc(fused[#loc103, #loc102])
#loc160 = loc(fused[#loc104, #loc105])
#loc161 = loc(fused[#loc107, #loc101])
#loc162 = loc(fused[#loc112, #loc110])
#loc163 = loc(fused[#loc114, #loc113])
#loc164 = loc(fused[#loc118, #loc115])
