!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":44:21)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":44:25)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:44)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":146:25)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":146:29)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":189:25)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":189:29)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:23)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc446 = loc(fused[#loc14, #loc15])
#loc518 = loc(fused[#loc198, #loc199])
#loc549 = loc(fused[#loc278, #loc279])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc440)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc441)
  cir.func private @printIntLine(!s32i) loc(#loc442)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc443)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc9)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc444)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc447)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc448)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc446)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc20)
    cir.br ^bb1 loc(#loc449)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc24)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc24)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc450)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc451)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc452)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc448)
    cir.br ^bb2 loc(#loc453)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc454)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc455)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc456)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc37)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    cir.br ^bb7 loc(#loc456)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc40)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc458)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc41)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc459)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc46)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc460)
    cir.br ^bb10 loc(#loc36)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc36)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc48)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc461)
    cir.br ^bb7 loc(#loc456)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc36)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc462)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc463)
    cir.brcond %29 ^bb15, ^bb24 loc(#loc464)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc59)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc465)
    cir.br ^bb16 loc(#loc466)
  ^bb16:  // pred: ^bb15
    %34 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc467)
    cir.br ^bb17 loc(#loc466)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc65)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc468)
    cir.brcond %37 ^bb18, ^bb22 loc(#loc66)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc469)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc70)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc71)
    cir.br ^bb20 loc(#loc61)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc61)
  ^bb21:  // pred: ^bb20
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %43 = cir.unary(inc, %42) : !s32i, !s32i loc(#loc73)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc470)
    cir.br ^bb17 loc(#loc466)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc61)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc54)
  ^bb24:  // pred: ^bb14
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc9)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb25 loc(#loc50)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc50)
  ^bb26:  // pred: ^bb25
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc75)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb27 loc(#loc22)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc13)
  } loc(#loc445)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc471)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc472)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc81)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc473)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc474)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc475)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc476)
  cir.func private @close(!s32i) -> !s32i loc(#loc477)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc479)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc480)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc481)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc482)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc483)
    %5 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc484)
    %6 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    cir.store %6, %5 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc484)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc107)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    cir.br ^bb1 loc(#loc486)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc99)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.br ^bb2 loc(#loc487)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc487)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc113)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc114)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc116)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc117)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc488)
    cir.br ^bb5 loc(#loc489)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc123)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc490)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc491)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc125)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc492)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc493)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc494)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc133)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc134)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc495)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc81)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc81)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc136)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc137)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc138)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc496)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc141)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc141)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc142)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc143)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc497)
    cir.br ^bb9 loc(#loc498)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc499)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc500)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc500)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc153)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc154)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc501)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc502)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc156)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc147)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc158)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc159)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc159)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc159)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc159)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc159)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc159)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc159)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc160)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc503)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc162)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc162)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc504)
    cir.br ^bb13 loc(#loc505)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc168)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc506)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc169)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc169)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc169)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc507)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc169)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc169)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc169)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc169)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc169)
  ^bb18(%70: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc169)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc169)
  ^bb20(%71: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc169)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc508)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc173)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc166)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc174)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc176)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc176)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc509)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc177)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc178)
    cir.store %78, %4 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    cir.br ^bb3 loc(#loc112)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc112)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc511)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc184)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc512)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc513)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc187)
    cir.br ^bb29 loc(#loc182)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc182)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc110)
  ^bb31:  // pred: ^bb30
    %85 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc188)
    %86 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.call %85(%86) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc188)
    cir.return loc(#loc93)
  } loc(#loc478)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc515)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc192)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc516)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc194)
    cir.return loc(#loc191)
  } loc(#loc514)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc198, #loc199])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc519)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc520)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc518)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.br ^bb1 loc(#loc521)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc207)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc208)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc208)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc522)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc523)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc207)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc524)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc520)
    cir.br ^bb2 loc(#loc525)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc214)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc214)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc526)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc527)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc216)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc218)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc216)
    cir.br ^bb4 loc(#loc212)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc528)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc221)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc529)
    cir.br ^bb7 loc(#loc528)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc224)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc530)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc225)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc531)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc230)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc532)
    cir.br ^bb10 loc(#loc220)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc220)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc232)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc533)
    cir.br ^bb7 loc(#loc528)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc220)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc534)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc236)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc535)
    cir.brcond %29 ^bb15, ^bb24 loc(#loc536)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<1> : !s32i loc(#loc240)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc241)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc243)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb16 loc(#loc538)
  ^bb16:  // pred: ^bb15
    %34 = cir.const #cir.int<0> : !s32i loc(#loc246)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    cir.br ^bb17 loc(#loc538)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc249)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %37 ^bb18, ^bb22 loc(#loc250)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc541)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc252)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc254)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc255)
    cir.br ^bb20 loc(#loc245)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc245)
  ^bb21:  // pred: ^bb20
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %43 = cir.unary(inc, %42) : !s32i, !s32i loc(#loc257)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.br ^bb17 loc(#loc538)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc245)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc238)
  ^bb24:  // pred: ^bb14
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc258)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc258)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc259)
    cir.br ^bb25 loc(#loc234)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc234)
  ^bb26:  // pred: ^bb25
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc260)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc260)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc261)
    cir.br ^bb27 loc(#loc206)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc197)
  } loc(#loc517)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc544)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc545)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc267)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc545)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc269)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc546)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc271)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc273)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc273)
    cir.return loc(#loc263)
  } loc(#loc543)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc275)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc278, #loc279])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc550)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc551)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc549)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb1 loc(#loc552)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc287)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc288)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc288)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc553)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc554)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc287)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc555)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc551)
    cir.br ^bb2 loc(#loc556)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc293)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc294)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc294)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc557)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc558)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc296)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc297)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc298)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc296)
    cir.br ^bb4 loc(#loc292)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc292)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc559)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc301)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    cir.br ^bb7 loc(#loc559)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc304)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc561)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc305)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc562)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc307)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc308)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc310)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc563)
    cir.br ^bb10 loc(#loc300)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc300)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc311)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc312)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb7 loc(#loc559)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc300)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc565)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc316)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc566)
    cir.brcond %29 ^bb15, ^bb20 loc(#loc317)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc319)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc567)
    cir.brcond %32 ^bb16, ^bb17 loc(#loc317)
  ^bb16:  // pred: ^bb15
    %33 = cir.const #true loc(#loc317)
    cir.br ^bb18(%33 : !cir.bool) loc(#loc317)
  ^bb17:  // pred: ^bb15
    %34 = cir.const #false loc(#loc317)
    cir.br ^bb18(%34 : !cir.bool) loc(#loc317)
  ^bb18(%35: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc317)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%35 : !cir.bool) loc(#loc317)
  ^bb20:  // pred: ^bb14
    %36 = cir.const #false loc(#loc317)
    cir.br ^bb21(%36 : !cir.bool) loc(#loc317)
  ^bb21(%37: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc317)
  ^bb22:  // pred: ^bb21
    cir.brcond %37 ^bb23, ^bb32 loc(#loc568)
  ^bb23:  // pred: ^bb22
    %38 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc325)
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc327)
    cir.store %38, %41 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    cir.br ^bb24 loc(#loc570)
  ^bb24:  // pred: ^bb23
    %42 = cir.const #cir.int<0> : !s32i loc(#loc330)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc571)
    cir.br ^bb25 loc(#loc570)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc333)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc572)
    cir.brcond %45 ^bb26, ^bb30 loc(#loc334)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc573)
  ^bb27:  // pred: ^bb26
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc336)
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc338)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc339)
    cir.br ^bb28 loc(#loc329)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc329)
  ^bb29:  // pred: ^bb28
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    %51 = cir.unary(inc, %50) : !s32i, !s32i loc(#loc341)
    cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.br ^bb25 loc(#loc570)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc329)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc322)
  ^bb32:  // pred: ^bb22
    %52 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc275)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc275)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc342)
    cir.br ^bb33 loc(#loc314)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc314)
  ^bb34:  // pred: ^bb33
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc343)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc343)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc344)
    cir.br ^bb35 loc(#loc286)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc277)
  } loc(#loc548)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc576)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc577)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc578)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc579)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc580)
    %5 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc581)
    %6 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc358)
    cir.store %6, %5 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc581)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc359)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc360)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc582)
    cir.br ^bb1 loc(#loc583)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc352)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc352)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc578)
    cir.br ^bb2 loc(#loc584)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc584)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc366)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc366)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc366)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc367)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc368)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc369)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc370)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc585)
    cir.br ^bb5 loc(#loc586)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc375)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc376)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc376)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc587)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc588)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc378)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc374)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc589)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc381)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc590)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc591)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc386)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc386)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc134)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc592)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc388)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc388)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc389)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc137)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc138)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc593)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc392)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc392)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc393)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc143)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc594)
    cir.br ^bb9 loc(#loc595)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc596)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc597)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc597)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc403)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc404)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc404)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc598)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc599)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc406)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc397)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc407)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc408)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc408)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc409)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc409)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc409)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc409)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc409)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc409)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc409)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc410)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc410)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc600)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc411)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc412)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc412)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    cir.br ^bb13 loc(#loc602)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc418)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc418)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc603)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc419)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc419)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc419)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc421)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc604)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc419)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc419)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc419)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc419)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc419)
  ^bb18(%70: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc419)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc419)
  ^bb20(%71: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc419)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc605)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc423)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc416)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc424)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc424)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc425)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc426)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc426)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc606)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc427)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc428)
    cir.store %78, %4 : !s32i, !cir.ptr<!s32i> loc(#loc607)
    cir.br ^bb3 loc(#loc365)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc365)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc608)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc434)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc434)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc609)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc610)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc436)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc437)
    cir.br ^bb29 loc(#loc432)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc432)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc363)
  ^bb31:  // pred: ^bb30
    %85 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc438)
    %86 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc439)
    cir.call %85(%86) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc438)
    cir.return loc(#loc346)
  } loc(#loc575)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":68:23)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":44:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":72:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":47:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":47:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":48:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":48:54)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":45:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":46:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":71:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":48:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":48:38)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":48:43)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":48:53)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:39)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:23)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:29)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:30)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:36)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":49:35)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":54:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:14)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:25)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:23)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":52:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":53:25)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":53:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":53:20)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":53:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":51:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":57:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":69:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":57:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":57:21)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":58:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":65:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":67:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":59:28)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":59:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":59:20)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":59:24)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":64:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:21)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:17)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:24)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:28)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:26)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":62:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":63:30)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":63:37)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":63:38)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":63:17)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:33)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":61:32)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":68:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":70:14)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":70:9)
#loc77 = loc("/usr/include/sys/socket.h":102:1)
#loc78 = loc("/usr/include/sys/socket.h":102:62)
#loc79 = loc("/usr/include/arpa/inet.h":34:1)
#loc80 = loc("/usr/include/arpa/inet.h":34:47)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":107:49)
#loc82 = loc("/usr/include/netinet/in.h":404:1)
#loc83 = loc("/usr/include/netinet/in.h":405:40)
#loc84 = loc("/usr/include/sys/socket.h":126:1)
#loc85 = loc("/usr/include/sys/socket.h":126:75)
#loc86 = loc("/usr/include/sys/socket.h":145:1)
#loc87 = loc("/usr/include/sys/socket.h":145:68)
#loc88 = loc("/usr/include/stdlib.h":105:1)
#loc89 = loc("/usr/include/stdlib.h":106:33)
#loc90 = loc("/usr/include/unistd.h":358:1)
#loc91 = loc("/usr/include/unistd.h":358:27)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":74:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":139:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":86:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":86:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":87:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":87:28)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":88:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":88:32)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":89:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":89:41)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":76:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":76:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":78:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":78:29)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":80:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":80:12)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":80:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":81:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":136:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":90:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":125:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":125:16)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":100:36)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":100:45)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":100:58)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":100:29)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":100:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":100:69)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":101:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":104:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":101:17)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":101:34)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":102:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":103:17)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":105:20)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":105:21)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":105:30)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":105:33)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":105:47)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":105:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":105:48)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":106:34)
#loc134 = loc("/usr/include/netinet/in.h":249:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":106:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":107:39)
#loc137 = loc("/usr/include/netinet/in.h":251:20)
#loc138 = loc("/usr/include/netinet/in.h":33:15)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":107:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":107:59)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":108:38)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":108:32)
#loc143 = loc("/usr/include/netinet/in.h":250:15)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":108:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":108:46)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":112:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:25)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:58)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:59)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:68)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:82)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:17)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":109:88)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":110:13)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":111:17)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:31)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:46)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:59)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:77)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:80)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:26)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":115:81)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":119:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:17)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:31)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:47)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":116:61)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":117:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":118:17)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":121:39)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":121:25)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":121:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":123:25)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":123:20)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":123:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":123:36)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":126:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":129:9)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":126:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":126:30)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":127:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":128:26)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":128:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":138:5)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":138:13)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":283:1)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":287:1)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":285:5)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":285:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":286:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":286:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":146:1)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":174:1)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":149:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":149:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":150:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":150:54)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":147:1)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":148:5)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":173:5)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":150:31)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":150:38)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":150:43)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":150:53)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:9)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:39)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:23)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:29)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:30)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:36)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":151:35)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:9)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":156:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:18)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:14)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:21)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:25)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:23)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":154:9)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":155:25)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":155:13)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":155:20)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":155:21)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:30)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":153:29)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":159:9)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":171:9)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":159:13)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":159:21)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":160:9)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":167:9)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":169:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":161:28)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":161:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":161:20)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":161:24)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:13)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":166:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:21)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:17)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:24)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:28)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:26)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":164:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":165:30)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":165:37)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":165:38)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":165:17)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:33)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":163:32)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":170:23)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":170:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":172:14)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":172:9)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":176:1)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":186:1)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":178:5)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":178:9)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":179:5)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":179:29)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":181:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":181:12)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":181:5)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":184:12)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":184:5)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":185:5)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":185:13)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":212:23)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":189:1)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":216:1)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":192:9)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":192:13)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":193:9)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":193:54)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":190:1)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":191:5)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":215:5)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":193:31)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":193:38)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":193:43)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":193:53)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:9)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:39)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:13)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:23)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:29)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:30)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:36)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":194:35)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:9)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":199:9)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:18)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:14)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:21)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:25)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:23)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":197:9)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":198:25)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":198:13)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":198:20)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":198:21)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:30)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":196:29)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:9)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":213:9)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:13)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:21)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:26)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:34)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":201:36)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":202:9)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":209:9)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":211:9)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":203:28)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":203:13)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":203:20)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":203:24)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:13)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":208:13)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:21)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:17)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:24)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:28)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:26)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":206:13)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":207:30)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":207:37)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":207:38)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":207:17)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:33)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":205:32)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":212:13)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":214:14)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":214:9)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":218:1)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":281:1)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":229:9)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":229:13)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":230:9)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":230:28)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":231:9)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":231:32)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":232:9)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":232:41)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":220:5)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":220:9)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":221:5)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":221:29)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":223:13)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":223:12)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":223:5)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":224:5)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":279:5)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":233:9)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":268:17)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":268:16)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":243:36)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":243:45)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":243:58)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":243:29)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":243:13)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":243:69)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":244:13)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":247:13)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":244:17)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":244:34)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":245:13)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":246:17)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":248:20)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":248:21)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":248:30)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":248:33)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":248:47)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":248:13)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":248:48)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":249:34)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":249:13)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":250:49)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":250:39)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":250:13)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":250:59)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":251:38)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":251:32)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":251:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":251:46)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:13)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":255:13)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:25)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:58)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:59)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:68)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:82)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:17)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":252:88)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":253:13)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":254:17)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:31)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:46)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:59)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:77)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:80)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:26)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:13)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":258:81)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:13)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":262:13)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:17)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:31)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:47)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":259:61)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":260:13)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":261:17)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":264:39)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":264:25)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":264:13)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":266:25)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":266:20)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":266:13)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":266:36)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":269:9)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":272:9)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":269:13)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":269:30)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":270:9)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":271:26)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":271:13)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":280:5)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_44.c":280:13)
#loc440 = loc(fused[#loc1, #loc2])
#loc441 = loc(fused[#loc3, #loc4])
#loc442 = loc(fused[#loc5, #loc6])
#loc443 = loc(fused[#loc7, #loc8])
#loc444 = loc(fused[#loc10, #loc11])
#loc445 = loc(fused[#loc12, #loc13])
#loc447 = loc(fused[#loc16, #loc17])
#loc448 = loc(fused[#loc18, #loc19])
#loc449 = loc(fused[#loc21, #loc22])
#loc450 = loc(fused[#loc25, #loc26])
#loc451 = loc(fused[#loc24, #loc26])
#loc452 = loc(fused[#loc23, #loc19])
#loc453 = loc(fused[#loc27, #loc28])
#loc454 = loc(fused[#loc29, #loc30])
#loc455 = loc(fused[#loc31, #loc28])
#loc456 = loc(fused[#loc35, #loc36])
#loc457 = loc(fused[#loc38, #loc37])
#loc458 = loc(fused[#loc39, #loc40])
#loc459 = loc(fused[#loc42, #loc36])
#loc460 = loc(fused[#loc44, #loc43])
#loc461 = loc(fused[#loc48, #loc47])
#loc462 = loc(fused[#loc49, #loc50])
#loc463 = loc(fused[#loc51, #loc52])
#loc464 = loc(fused[#loc53, #loc54, #loc55, #loc50])
#loc465 = loc(fused[#loc57, #loc56])
#loc466 = loc(fused[#loc60, #loc61])
#loc467 = loc(fused[#loc63, #loc62])
#loc468 = loc(fused[#loc64, #loc65])
#loc469 = loc(fused[#loc67, #loc61])
#loc470 = loc(fused[#loc73, #loc72])
#loc471 = loc(fused[#loc77, #loc78])
#loc472 = loc(fused[#loc79, #loc80])
#loc473 = loc(fused[#loc82, #loc83])
#loc474 = loc(fused[#loc84, #loc85])
#loc475 = loc(fused[#loc86, #loc87])
#loc476 = loc(fused[#loc88, #loc89])
#loc477 = loc(fused[#loc90, #loc91])
#loc478 = loc(fused[#loc92, #loc93])
#loc479 = loc(fused[#loc94, #loc95])
#loc480 = loc(fused[#loc96, #loc97])
#loc481 = loc(fused[#loc98, #loc99])
#loc482 = loc(fused[#loc100, #loc101])
#loc483 = loc(fused[#loc102, #loc103])
#loc484 = loc(fused[#loc104, #loc105])
#loc485 = loc(fused[#loc108, #loc106])
#loc486 = loc(fused[#loc109, #loc110])
#loc487 = loc(fused[#loc111, #loc112])
#loc488 = loc(fused[#loc118, #loc119])
#loc489 = loc(fused[#loc120, #loc121])
#loc490 = loc(fused[#loc122, #loc123])
#loc491 = loc(fused[#loc124, #loc121])
#loc492 = loc(fused[#loc126, #loc127])
#loc493 = loc(fused[#loc129, #loc130])
#loc494 = loc(fused[#loc131, #loc132])
#loc495 = loc(fused[#loc135, #loc133])
#loc496 = loc(fused[#loc139, #loc140])
#loc497 = loc(fused[#loc144, #loc145])
#loc498 = loc(fused[#loc146, #loc147])
#loc499 = loc(fused[#loc149, #loc150])
#loc500 = loc(fused[#loc151, #loc152])
#loc501 = loc(fused[#loc153, #loc154])
#loc502 = loc(fused[#loc155, #loc147])
#loc503 = loc(fused[#loc159, #loc160])
#loc504 = loc(fused[#loc163, #loc164])
#loc505 = loc(fused[#loc165, #loc166])
#loc506 = loc(fused[#loc167, #loc168])
#loc507 = loc(fused[#loc170, #loc171])
#loc508 = loc(fused[#loc172, #loc166])
#loc509 = loc(fused[#loc176, #loc174])
#loc510 = loc(fused[#loc179, #loc180])
#loc511 = loc(fused[#loc181, #loc182])
#loc512 = loc(fused[#loc183, #loc184])
#loc513 = loc(fused[#loc185, #loc182])
#loc514 = loc(fused[#loc190, #loc191])
#loc515 = loc(fused[#loc192, #loc193])
#loc516 = loc(fused[#loc194, #loc195])
#loc517 = loc(fused[#loc196, #loc197])
#loc519 = loc(fused[#loc200, #loc201])
#loc520 = loc(fused[#loc202, #loc203])
#loc521 = loc(fused[#loc205, #loc206])
#loc522 = loc(fused[#loc209, #loc210])
#loc523 = loc(fused[#loc208, #loc210])
#loc524 = loc(fused[#loc207, #loc203])
#loc525 = loc(fused[#loc211, #loc212])
#loc526 = loc(fused[#loc213, #loc214])
#loc527 = loc(fused[#loc215, #loc212])
#loc528 = loc(fused[#loc219, #loc220])
#loc529 = loc(fused[#loc222, #loc221])
#loc530 = loc(fused[#loc223, #loc224])
#loc531 = loc(fused[#loc226, #loc220])
#loc532 = loc(fused[#loc228, #loc227])
#loc533 = loc(fused[#loc232, #loc231])
#loc534 = loc(fused[#loc233, #loc234])
#loc535 = loc(fused[#loc235, #loc236])
#loc536 = loc(fused[#loc237, #loc238, #loc239, #loc234])
#loc537 = loc(fused[#loc241, #loc240])
#loc538 = loc(fused[#loc244, #loc245])
#loc539 = loc(fused[#loc247, #loc246])
#loc540 = loc(fused[#loc248, #loc249])
#loc541 = loc(fused[#loc251, #loc245])
#loc542 = loc(fused[#loc257, #loc256])
#loc543 = loc(fused[#loc262, #loc263])
#loc544 = loc(fused[#loc264, #loc265])
#loc545 = loc(fused[#loc266, #loc267])
#loc546 = loc(fused[#loc270, #loc268])
#loc547 = loc(fused[#loc272, #loc271])
#loc548 = loc(fused[#loc276, #loc277])
#loc550 = loc(fused[#loc280, #loc281])
#loc551 = loc(fused[#loc282, #loc283])
#loc552 = loc(fused[#loc285, #loc286])
#loc553 = loc(fused[#loc289, #loc290])
#loc554 = loc(fused[#loc288, #loc290])
#loc555 = loc(fused[#loc287, #loc283])
#loc556 = loc(fused[#loc291, #loc292])
#loc557 = loc(fused[#loc293, #loc294])
#loc558 = loc(fused[#loc295, #loc292])
#loc559 = loc(fused[#loc299, #loc300])
#loc560 = loc(fused[#loc302, #loc301])
#loc561 = loc(fused[#loc303, #loc304])
#loc562 = loc(fused[#loc306, #loc300])
#loc563 = loc(fused[#loc308, #loc307])
#loc564 = loc(fused[#loc312, #loc311])
#loc565 = loc(fused[#loc313, #loc314])
#loc566 = loc(fused[#loc315, #loc316])
#loc567 = loc(fused[#loc318, #loc320])
#loc568 = loc(fused[#loc321, #loc322, #loc323, #loc314])
#loc569 = loc(fused[#loc325, #loc324])
#loc570 = loc(fused[#loc328, #loc329])
#loc571 = loc(fused[#loc331, #loc330])
#loc572 = loc(fused[#loc332, #loc333])
#loc573 = loc(fused[#loc335, #loc329])
#loc574 = loc(fused[#loc341, #loc340])
#loc575 = loc(fused[#loc345, #loc346])
#loc576 = loc(fused[#loc347, #loc348])
#loc577 = loc(fused[#loc349, #loc350])
#loc578 = loc(fused[#loc351, #loc352])
#loc579 = loc(fused[#loc353, #loc354])
#loc580 = loc(fused[#loc355, #loc356])
#loc581 = loc(fused[#loc357, #loc358])
#loc582 = loc(fused[#loc361, #loc359])
#loc583 = loc(fused[#loc362, #loc363])
#loc584 = loc(fused[#loc364, #loc365])
#loc585 = loc(fused[#loc371, #loc372])
#loc586 = loc(fused[#loc373, #loc374])
#loc587 = loc(fused[#loc375, #loc376])
#loc588 = loc(fused[#loc377, #loc374])
#loc589 = loc(fused[#loc379, #loc380])
#loc590 = loc(fused[#loc382, #loc383])
#loc591 = loc(fused[#loc384, #loc385])
#loc592 = loc(fused[#loc387, #loc386])
#loc593 = loc(fused[#loc390, #loc391])
#loc594 = loc(fused[#loc394, #loc395])
#loc595 = loc(fused[#loc396, #loc397])
#loc596 = loc(fused[#loc399, #loc400])
#loc597 = loc(fused[#loc401, #loc402])
#loc598 = loc(fused[#loc403, #loc404])
#loc599 = loc(fused[#loc405, #loc397])
#loc600 = loc(fused[#loc409, #loc410])
#loc601 = loc(fused[#loc413, #loc414])
#loc602 = loc(fused[#loc415, #loc416])
#loc603 = loc(fused[#loc417, #loc418])
#loc604 = loc(fused[#loc420, #loc421])
#loc605 = loc(fused[#loc422, #loc416])
#loc606 = loc(fused[#loc426, #loc424])
#loc607 = loc(fused[#loc429, #loc430])
#loc608 = loc(fused[#loc431, #loc432])
#loc609 = loc(fused[#loc433, #loc434])
#loc610 = loc(fused[#loc435, #loc432])
