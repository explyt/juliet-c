!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc116)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc118)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc119)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc120)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc121)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc122)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc121)
    cir.store %2, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc19)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %12 = cir.const #cir.int<64> : !s32i loc(#loc25)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc125)
    %14 = cir.const #cir.int<256> : !s32i loc(#loc26)
    %15 = cir.const #cir.int<128> : !s32i loc(#loc27)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc126)
    %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc28)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc32)
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %21 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    cir.store %20, %21 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb2 loc(#loc22)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc11)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc40)
    cir.br ^bb4 loc(#loc37)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc7)
  } loc(#loc117)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc136)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc137)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc138)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
    cir.store %2, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc138)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc61)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc47)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %12 = cir.const #cir.int<64> : !s32i loc(#loc67)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc141)
    %14 = cir.const #cir.int<256> : !s32i loc(#loc68)
    %15 = cir.const #cir.int<128> : !s32i loc(#loc69)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc142)
    %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc70)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %19 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb2 loc(#loc64)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // pred: ^bb2
    %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc80)
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc49)
  } loc(#loc133)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc148)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc149)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc150)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc151)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    cir.store %2, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc94)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc99)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc100)
    %12 = cir.const #cir.int<64> : !s32i loc(#loc101)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc154)
    %14 = cir.const #cir.int<256> : !s32i loc(#loc102)
    %15 = cir.const #cir.int<128> : !s32i loc(#loc103)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc155)
    %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc104)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc108)
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %21 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    cir.store %20, %21 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc158)
  ^bb3:  // pred: ^bb2
    %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc82)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_32.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:21)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":31:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":49:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":38:9)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":38:21)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":45:9)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":45:21)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":33:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":33:9)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":34:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":34:22)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":35:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":35:22)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":36:13)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":36:12)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":36:5)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":37:5)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":43:5)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":38:20)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:43)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:50)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:59)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:67)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:16)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:9)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":39:75)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":41:15)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":41:9)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":42:21)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":42:10)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":42:9)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":44:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":48:5)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":45:20)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":47:15)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":47:9)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":97:1)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":101:1)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":99:5)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":99:13)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":100:5)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":100:13)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:21)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":56:1)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":73:1)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":63:9)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":63:21)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":69:9)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":69:21)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":58:5)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":58:9)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":59:5)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":59:22)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":60:5)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":60:22)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":61:13)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":61:12)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":61:5)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":62:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":67:5)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":63:20)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:44)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:51)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:60)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:68)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:16)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:9)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":65:76)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":66:21)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":66:10)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":66:9)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":68:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":72:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":69:20)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":71:15)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":71:9)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":76:1)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":95:1)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":83:9)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":83:21)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":90:9)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":90:21)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":78:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":78:9)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":79:5)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":79:22)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":80:5)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":80:22)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":81:13)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":81:12)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":81:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":82:5)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":88:5)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":83:20)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:21)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:43)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:50)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:59)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:67)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:16)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:9)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":84:75)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":86:15)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":86:9)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":87:21)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":87:10)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":87:9)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":89:5)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":94:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_32.c":90:20)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc4, #loc5])
#loc117 = loc(fused[#loc6, #loc7])
#loc118 = loc(fused[#loc8, #loc9])
#loc119 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc12, #loc13])
#loc121 = loc(fused[#loc14, #loc15])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc20, #loc18])
#loc124 = loc(fused[#loc21, #loc22])
#loc125 = loc(fused[#loc24, #loc25])
#loc126 = loc(fused[#loc26, #loc27])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc35, #loc33])
#loc129 = loc(fused[#loc36, #loc37])
#loc130 = loc(fused[#loc41, #loc42])
#loc131 = loc(fused[#loc43, #loc44])
#loc132 = loc(fused[#loc45, #loc46])
#loc133 = loc(fused[#loc48, #loc49])
#loc134 = loc(fused[#loc50, #loc51])
#loc135 = loc(fused[#loc52, #loc53])
#loc136 = loc(fused[#loc54, #loc55])
#loc137 = loc(fused[#loc56, #loc57])
#loc138 = loc(fused[#loc58, #loc59])
#loc139 = loc(fused[#loc62, #loc60])
#loc140 = loc(fused[#loc63, #loc64])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc68, #loc69])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc75, #loc73])
#loc145 = loc(fused[#loc76, #loc77])
#loc146 = loc(fused[#loc81, #loc82])
#loc147 = loc(fused[#loc83, #loc84])
#loc148 = loc(fused[#loc85, #loc86])
#loc149 = loc(fused[#loc87, #loc88])
#loc150 = loc(fused[#loc89, #loc90])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc95, #loc93])
#loc153 = loc(fused[#loc96, #loc97])
#loc154 = loc(fused[#loc100, #loc101])
#loc155 = loc(fused[#loc102, #loc103])
#loc156 = loc(fused[#loc105, #loc106])
#loc157 = loc(fused[#loc111, #loc109])
#loc158 = loc(fused[#loc112, #loc113])
