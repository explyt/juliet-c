!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc158)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc159)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc160)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_143badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc163)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc165)
      cir.if %5 {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc167)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc21)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc167)
        cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc20)
        cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc168)
      } loc(#loc166)
    } loc(#loc164)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc170)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc28)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc29)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc28)
      } loc(#loc171)
    } loc(#loc169)
    cir.return loc(#loc9)
  } loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc32)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc173)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc176)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc178)
      cir.if %5 {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc180)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc48)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc180)
        cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc47)
        cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc181)
      } loc(#loc179)
    } loc(#loc177)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc53)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc183)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc58)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc48)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc36)
  } loc(#loc174)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc187)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc68)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc189)
      cir.if %5 {
        %6 = cir.const #cir.int<8> : !u64i loc(#loc191)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc72)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc191)
        cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc71)
        cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc192)
      } loc(#loc190)
    } loc(#loc188)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc77)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc194)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc79)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc72)
      } loc(#loc195)
    } loc(#loc193)
    cir.return loc(#loc60)
  } loc(#loc185)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc196)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc197)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc200)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc93)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc202)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc100)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc100)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc204)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc205)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc99)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc206)
        cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc207)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc107)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc108)
          %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc209)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc112)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc110)
          } loc(#loc210)
        } loc(#loc208)
      } loc(#loc203)
    } loc(#loc201)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc116)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc212)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc118)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc119)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc119)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc118)
      } loc(#loc213)
    } loc(#loc211)
    cir.return loc(#loc85)
  } loc(#loc198)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc124)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc216)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc129)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc218)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc131)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc132)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc132)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc220)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc221)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc131)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc222)
        cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc223)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc139)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc140)
          %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc225)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc142)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc144)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc142)
          } loc(#loc226)
        } loc(#loc224)
      } loc(#loc219)
    } loc(#loc217)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc158)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc147)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc148)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc228)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc150)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc151)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc151)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc150)
      } loc(#loc229)
    } loc(#loc227)
    cir.return loc(#loc121)
  } loc(#loc214)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_144goodEv() extra(#fn_attr2) {
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodB2G1Ev() : () -> () loc(#loc154)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodB2G2Ev() : () -> () loc(#loc155)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodG2B1Ev() : () -> () loc(#loc156)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_14L8goodG2B2Ev() : () -> () loc(#loc157)
    cir.return loc(#loc153)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":24:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":40:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":26:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":26:20)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":28:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":28:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":29:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":33:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":29:8)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":29:20)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":30:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":32:16)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":32:20)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":24:6)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":32:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":34:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":39:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":34:8)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":34:20)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":35:5)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":38:9)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":38:14)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":60:19)
#loc33 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc34 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":47:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":67:1)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":49:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":49:20)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":51:12)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":51:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":52:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":56:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":52:8)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":52:20)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":53:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":55:16)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":55:20)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":47:13)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":55:9)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":57:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":66:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":57:8)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":57:20)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":58:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":61:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":63:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":60:9)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":65:16)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":70:1)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":85:1)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":72:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":72:20)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":74:12)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":74:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":75:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":79:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":75:8)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":75:20)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":76:5)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":78:16)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":78:20)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":70:13)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":78:9)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":80:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":84:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":80:8)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":80:20)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":81:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":83:16)
#loc80 = loc("/usr/include/stdlib.h":672:1)
#loc81 = loc("/usr/include/stdlib.h":672:45)
#loc82 = loc("/usr/include/stdlib.h":756:1)
#loc83 = loc("/usr/include/stdlib.h":756:70)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":88:1)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":110:1)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":90:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":90:20)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":92:12)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":92:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":93:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":103:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":93:8)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":93:20)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":94:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":97:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":99:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":96:19)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":96:9)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":101:32)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":101:39)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":101:43)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":101:62)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":101:63)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":101:9)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:9)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:37)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:13)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:21)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:27)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:28)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:34)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":102:33)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":104:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":109:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":104:8)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":104:20)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":105:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":108:9)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":108:14)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":113:1)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":130:1)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":115:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":115:20)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":117:12)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":117:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":118:5)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":123:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":118:8)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":118:20)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":119:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":121:32)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":121:39)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":121:43)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":121:62)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":121:63)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":121:9)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:9)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:37)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:13)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:21)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:27)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:28)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:34)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":122:33)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":124:5)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":129:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":124:8)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":124:20)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":125:5)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":128:9)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":128:14)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":132:1)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":138:1)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":134:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":135:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":136:5)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_14.cpp":137:5)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc6, #loc7])
#loc161 = loc(fused[#loc8, #loc9])
#loc162 = loc(fused[#loc10, #loc11])
#loc163 = loc(fused[#loc13, #loc12])
#loc164 = loc(fused[#loc14, #loc15])
#loc165 = loc(fused[#loc16, #loc17])
#loc166 = loc(fused[#loc18, #loc15])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc22, #loc20])
#loc169 = loc(fused[#loc23, #loc24])
#loc170 = loc(fused[#loc25, #loc26])
#loc171 = loc(fused[#loc27, #loc24])
#loc172 = loc(fused[#loc30, #loc31])
#loc173 = loc(fused[#loc33, #loc34])
#loc174 = loc(fused[#loc35, #loc36])
#loc175 = loc(fused[#loc37, #loc38])
#loc176 = loc(fused[#loc40, #loc39])
#loc177 = loc(fused[#loc41, #loc42])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc45, #loc42])
#loc180 = loc(fused[#loc46, #loc47])
#loc181 = loc(fused[#loc49, #loc47])
#loc182 = loc(fused[#loc50, #loc51])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc185 = loc(fused[#loc59, #loc60])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc64, #loc63])
#loc188 = loc(fused[#loc65, #loc66])
#loc189 = loc(fused[#loc67, #loc68])
#loc190 = loc(fused[#loc69, #loc66])
#loc191 = loc(fused[#loc70, #loc71])
#loc192 = loc(fused[#loc73, #loc71])
#loc193 = loc(fused[#loc74, #loc75])
#loc194 = loc(fused[#loc76, #loc77])
#loc195 = loc(fused[#loc78, #loc75])
#loc196 = loc(fused[#loc80, #loc81])
#loc197 = loc(fused[#loc82, #loc83])
#loc198 = loc(fused[#loc84, #loc85])
#loc199 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc89, #loc88])
#loc201 = loc(fused[#loc90, #loc91])
#loc202 = loc(fused[#loc92, #loc93])
#loc203 = loc(fused[#loc94, #loc95, #loc96, #loc91])
#loc204 = loc(fused[#loc101, #loc102])
#loc205 = loc(fused[#loc100, #loc102])
#loc206 = loc(fused[#loc99, #loc103])
#loc207 = loc(fused[#loc104, #loc103])
#loc208 = loc(fused[#loc105, #loc106])
#loc209 = loc(fused[#loc107, #loc108])
#loc210 = loc(fused[#loc109, #loc106])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc117, #loc114])
#loc214 = loc(fused[#loc120, #loc121])
#loc215 = loc(fused[#loc122, #loc123])
#loc216 = loc(fused[#loc125, #loc124])
#loc217 = loc(fused[#loc126, #loc127])
#loc218 = loc(fused[#loc128, #loc129])
#loc219 = loc(fused[#loc130, #loc127])
#loc220 = loc(fused[#loc133, #loc134])
#loc221 = loc(fused[#loc132, #loc134])
#loc222 = loc(fused[#loc131, #loc135])
#loc223 = loc(fused[#loc136, #loc135])
#loc224 = loc(fused[#loc137, #loc138])
#loc225 = loc(fused[#loc139, #loc140])
#loc226 = loc(fused[#loc141, #loc138])
#loc227 = loc(fused[#loc145, #loc146])
#loc228 = loc(fused[#loc147, #loc148])
#loc229 = loc(fused[#loc149, #loc146])
#loc230 = loc(fused[#loc152, #loc153])
