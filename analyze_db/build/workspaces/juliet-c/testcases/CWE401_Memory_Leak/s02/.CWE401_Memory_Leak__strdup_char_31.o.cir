!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodB2G.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc80)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_31_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc81)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc83)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc85)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc81)
      %3 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_31_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc81)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc81)
      %4 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc17)
      %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc17)
      cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc22)
    } loc(#loc87)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc90)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    } loc(#loc89)
    cir.return loc(#loc10)
  } loc(#loc84)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc93)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc92)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc37)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc44)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc44)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc44)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc44)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc44)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc46)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc37)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc46)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc101)
      %16 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc102)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
      %18 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      cir.store %18, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc39)
  } loc(#loc96)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc103)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc80)
      %3 = cir.get_global @__const.goodB2G.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc80)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc80)
      %4 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc66)
      %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc67)
      %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc66)
      cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    } loc(#loc107)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc110)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
      %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc78)
      %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
      cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc78)
    } loc(#loc109)
    cir.return loc(#loc59)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_31.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_31.c":73:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_31.c":73:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_31.c":29:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_31.c":29:27)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_31.c":24:1)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_31.c":42:1)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_31.c":26:5)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_31.c":26:12)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_31.c":27:12)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_31.c":27:5)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_31.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_31.c":34:5)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_31.c":31:16)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_31.c":31:23)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_31.c":31:9)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_31.c":31:31)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_31.c":33:19)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_31.c":33:9)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_31.c":35:5)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_31.c":41:5)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_31.c":36:9)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_31.c":36:27)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_31.c":37:9)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_31.c":37:23)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_31.c":87:1)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_31.c":91:1)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_31.c":89:5)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_31.c":89:13)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_31.c":90:5)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_31.c":90:13)
#loc35 = loc("/usr/include/string.h":141:1)
#loc36 = loc("/usr/include/string.h":142:14)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_31.c":56:18)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_31.c":49:1)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_31.c":65:1)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_31.c":51:5)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_31.c":51:12)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_31.c":52:12)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_31.c":52:5)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_31.c":54:20)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_31.c":54:5)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_31.c":56:5)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_31.c":56:12)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_31.c":57:15)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_31.c":57:5)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_31.c":58:5)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_31.c":64:5)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_31.c":59:9)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_31.c":59:27)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_31.c":60:9)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_31.c":60:23)
#loc56 = loc("/usr/include/stdlib.h":687:1)
#loc57 = loc("/usr/include/stdlib.h":687:32)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_31.c":68:1)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_31.c":85:1)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_31.c":70:5)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_31.c":70:12)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_31.c":71:12)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_31.c":71:5)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_31.c":72:5)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_31.c":78:5)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_31.c":75:16)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_31.c":75:23)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_31.c":75:9)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_31.c":75:31)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_31.c":77:19)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_31.c":77:9)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_31.c":79:5)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_31.c":84:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_31.c":80:9)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_31.c":80:27)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_31.c":81:9)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_31.c":81:23)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_31.c":83:9)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_31.c":83:14)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc11, #loc12])
#loc86 = loc(fused[#loc14, #loc13])
#loc87 = loc(fused[#loc15, #loc16])
#loc88 = loc(fused[#loc19, #loc20])
#loc89 = loc(fused[#loc23, #loc24])
#loc90 = loc(fused[#loc25, #loc26])
#loc91 = loc(fused[#loc27, #loc28])
#loc92 = loc(fused[#loc29, #loc30])
#loc93 = loc(fused[#loc31, #loc32])
#loc94 = loc(fused[#loc33, #loc34])
#loc95 = loc(fused[#loc35, #loc36])
#loc96 = loc(fused[#loc38, #loc39])
#loc97 = loc(fused[#loc40, #loc41])
#loc98 = loc(fused[#loc43, #loc42])
#loc99 = loc(fused[#loc45, #loc44])
#loc100 = loc(fused[#loc50, #loc51])
#loc101 = loc(fused[#loc52, #loc53])
#loc102 = loc(fused[#loc54, #loc55])
#loc103 = loc(fused[#loc56, #loc57])
#loc104 = loc(fused[#loc58, #loc59])
#loc105 = loc(fused[#loc60, #loc61])
#loc106 = loc(fused[#loc63, #loc62])
#loc107 = loc(fused[#loc64, #loc65])
#loc108 = loc(fused[#loc68, #loc69])
#loc109 = loc(fused[#loc72, #loc73])
#loc110 = loc(fused[#loc74, #loc75])
#loc111 = loc(fused[#loc76, #loc77])
