!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printUnsignedLine(!u32i) loc(#loc89)
  cir.func no_proto  @CWE191_Integer_Underflow__unsigned_int_min_sub_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc91)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc7)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc92)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%4) loc(#loc11)
      } do {
        %3 = cir.const #cir.int<0> : !s32i loc(#loc12)
        %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc12)
        cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc94)
        cir.break loc(#loc14)
      } loc(#loc93)
    } loc(#loc93)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%4) loc(#loc17)
      } do {
        cir.scope {
          %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc97)
          %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc22)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc21)
          %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc21)
          %7 = cir.binop(sub, %4, %6) : !u32i loc(#loc98)
          cir.store %7, %3 : !u32i, !cir.ptr<!u32i> loc(#loc97)
          %8 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc23)
          cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc24)
        } loc(#loc96)
        cir.break loc(#loc25)
      } loc(#loc95)
    } loc(#loc95)
    cir.return loc(#loc4)
  } loc(#loc90)
  cir.func no_proto  @CWE191_Integer_Underflow__unsigned_int_min_sub_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc100)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc99)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc39)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc105)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc43)
        cir.condition(%4) loc(#loc43)
      } do {
        %3 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc44)
        cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc107)
        cir.break loc(#loc46)
      } loc(#loc106)
    } loc(#loc106)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc49)
        cir.condition(%4) loc(#loc49)
      } do {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc52)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc53)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc53)
          %6 = cir.cmp(gt, %3, %5) : !u32i, !s32i loc(#loc110)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc54)
          cir.if %7 {
            %8 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc112)
            %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc60)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc59)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc59)
            %12 = cir.binop(sub, %9, %11) : !u32i loc(#loc113)
            cir.store %12, %8 : !u32i, !cir.ptr<!u32i> loc(#loc112)
            %13 = cir.load %8 : !cir.ptr<!u32i>, !u32i loc(#loc61)
            cir.call @printUnsignedLine(%13) : (!u32i) -> () loc(#loc62)
          } else {
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc34)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc34)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc63)
          } loc(#loc111)
        } loc(#loc109)
        cir.break loc(#loc64)
      } loc(#loc108)
    } loc(#loc108)
    cir.return loc(#loc36)
  } loc(#loc103)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc69)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc116)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc73)
        cir.condition(%4) loc(#loc73)
      } do {
        %3 = cir.const #cir.int<2> : !s32i loc(#loc74)
        %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc75)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc75)
        cir.store %5, %0 : !u32i, !cir.ptr<!u32i> loc(#loc118)
        cir.break loc(#loc77)
      } loc(#loc117)
    } loc(#loc117)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc80)
        cir.condition(%4) loc(#loc80)
      } do {
        cir.scope {
          %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc121)
          %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc85)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc84)
          %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc84)
          %7 = cir.binop(sub, %4, %6) : !u32i loc(#loc122)
          cir.store %7, %3 : !u32i, !cir.ptr<!u32i> loc(#loc121)
          %8 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc86)
          cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc87)
        } loc(#loc120)
        cir.break loc(#loc88)
      } loc(#loc119)
    } loc(#loc119)
    cir.return loc(#loc66)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc3 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":41:1)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":24:5)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":24:18)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":25:12)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":25:5)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":26:5)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":31:5)
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":26:11)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":29:16)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":29:9)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":30:9)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":32:5)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":40:5)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":32:11)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":34:9)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":38:9)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":36:13)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":36:42)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":36:35)
#loc23 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":37:31)
#loc24 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":37:13)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":39:9)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":96:1)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":100:1)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":98:5)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":98:13)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":99:5)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":99:13)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":68:23)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":48:1)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":72:1)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":50:5)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":50:18)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":51:12)
#loc40 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":51:5)
#loc41 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":52:5)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":57:5)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":52:11)
#loc44 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":55:16)
#loc45 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":55:9)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":56:9)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":58:5)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":71:5)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":58:11)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":61:9)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":69:9)
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":61:13)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":61:20)
#loc54 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":61:18)
#loc55 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":62:9)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":65:9)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":67:9)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":63:13)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":63:42)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":63:35)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":64:31)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":64:13)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":68:13)
#loc64 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":70:9)
#loc65 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":75:1)
#loc66 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":94:1)
#loc67 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":77:5)
#loc68 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":77:18)
#loc69 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":78:12)
#loc70 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":78:5)
#loc71 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":79:5)
#loc72 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":84:5)
#loc73 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":79:11)
#loc74 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":82:17)
#loc75 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":82:16)
#loc76 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":82:9)
#loc77 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":83:9)
#loc78 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":85:5)
#loc79 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":93:5)
#loc80 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":85:11)
#loc81 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":87:9)
#loc82 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":91:9)
#loc83 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":89:13)
#loc84 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":89:42)
#loc85 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":89:35)
#loc86 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":90:31)
#loc87 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":90:13)
#loc88 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_16.c":92:9)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc8, #loc7])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc13, #loc12])
#loc95 = loc(fused[#loc15, #loc16])
#loc96 = loc(fused[#loc18, #loc19])
#loc97 = loc(fused[#loc20, #loc21])
#loc98 = loc(fused[#loc22, #loc21])
#loc99 = loc(fused[#loc26, #loc27])
#loc100 = loc(fused[#loc28, #loc29])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc35, #loc36])
#loc104 = loc(fused[#loc37, #loc38])
#loc105 = loc(fused[#loc40, #loc39])
#loc106 = loc(fused[#loc41, #loc42])
#loc107 = loc(fused[#loc45, #loc44])
#loc108 = loc(fused[#loc47, #loc48])
#loc109 = loc(fused[#loc50, #loc51])
#loc110 = loc(fused[#loc52, #loc53])
#loc111 = loc(fused[#loc55, #loc56, #loc57, #loc51])
#loc112 = loc(fused[#loc58, #loc59])
#loc113 = loc(fused[#loc60, #loc59])
#loc114 = loc(fused[#loc65, #loc66])
#loc115 = loc(fused[#loc67, #loc68])
#loc116 = loc(fused[#loc70, #loc69])
#loc117 = loc(fused[#loc71, #loc72])
#loc118 = loc(fused[#loc76, #loc74])
#loc119 = loc(fused[#loc78, #loc79])
#loc120 = loc(fused[#loc81, #loc82])
#loc121 = loc(fused[#loc83, #loc84])
#loc122 = loc(fused[#loc85, #loc84])
