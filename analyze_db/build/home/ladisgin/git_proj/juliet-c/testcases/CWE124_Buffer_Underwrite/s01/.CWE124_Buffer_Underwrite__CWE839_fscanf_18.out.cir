!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":139:10)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":139:14)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":139:20)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":139:32)
#true = #cir.bool<true> : !cir.bool
#loc207 = loc(fused[#loc70, #loc71])
#loc208 = loc(fused[#loc72, #loc73])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc181)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc183)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fscanf_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc187)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc188)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc20)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.goto "source" loc(#loc190)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc24)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc25)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc25)
    cir.goto "sink" loc(#loc191)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc29)
    %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc188)
    cir.store %11, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc188)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %13 = cir.const #cir.int<10> : !s32i loc(#loc33)
      %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc193)
      cir.if %14 {
        %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
        %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc39)
        %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc39)
        cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc195)
        cir.scope {
          %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
          cir.store %19, %1 : !s32i, !cir.ptr<!s32i> loc(#loc197)
          cir.for : cond {
            %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %21 = cir.const #cir.int<10> : !s32i loc(#loc45)
            %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc198)
            cir.condition(%22) loc(#loc46)
          } body {
            cir.scope {
              %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
              %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc49)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc49)
              %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc49)
              cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc50)
            } loc(#loc199)
            cir.yield loc(#loc41)
          } step {
            %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
            %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc52)
            cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc200)
            cir.yield loc(#loc196)
          } loc(#loc196)
        } loc(#loc196)
      } else {
        %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } loc(#loc194)
    } loc(#loc192)
    cir.return loc(#loc12)
  } loc(#loc185)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fscanf_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc201)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc204)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc77)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fscanf_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fscanf_18_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fscanf_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fscanf_18_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.return %17 : !s32i loc(#loc211)
  } loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc214)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc215)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc98)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.goto "source" loc(#loc217)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc102)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc103)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc105)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc105)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc103)
    cir.goto "sink" loc(#loc218)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc108)
    %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc215)
    cir.store %11, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc215)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc112)
      %14 = cir.cmp(ge, %12, %13) : !s32i, !cir.bool loc(#loc220)
      %15 = cir.ternary(%14, true {
        %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %17 = cir.const #cir.int<10> : !s32i loc(#loc115)
        %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc221)
        %19 = cir.ternary(%18, true {
          %20 = cir.const #true loc(#loc113)
          cir.yield %20 : !cir.bool loc(#loc113)
        }, false {
          %20 = cir.const #false loc(#loc113)
          cir.yield %20 : !cir.bool loc(#loc113)
        }) : (!cir.bool) -> !cir.bool loc(#loc113)
        cir.yield %19 : !cir.bool loc(#loc113)
      }, false {
        %16 = cir.const #false loc(#loc113)
        cir.yield %16 : !cir.bool loc(#loc113)
      }) : (!cir.bool) -> !cir.bool loc(#loc113)
      cir.if %15 {
        %16 = cir.const #cir.int<1> : !s32i loc(#loc120)
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc122)
        %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc122)
        cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc223)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc125)
          cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc225)
          cir.for : cond {
            %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %22 = cir.const #cir.int<10> : !s32i loc(#loc128)
            %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc226)
            cir.condition(%23) loc(#loc129)
          } body {
            cir.scope {
              %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc132)
              %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc132)
              %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc133)
            } loc(#loc227)
            cir.yield loc(#loc124)
          } step {
            %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc135)
            cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc228)
            cir.yield loc(#loc224)
          } loc(#loc224)
        } loc(#loc224)
      } else {
        %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc88)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc136)
      } loc(#loc222)
    } loc(#loc219)
    cir.return loc(#loc90)
  } loc(#loc212)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc231)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc232)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc146)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.goto "source" loc(#loc234)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc150)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc151)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.goto "sink" loc(#loc236)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc155)
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc232)
    cir.store %6, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc232)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc159)
      %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc238)
      cir.if %9 {
        %10 = cir.const #cir.int<1> : !s32i loc(#loc163)
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
        %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc165)
        %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc165)
        cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc240)
        cir.scope {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc168)
          cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc242)
          cir.for : cond {
            %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc170)
            %16 = cir.const #cir.int<10> : !s32i loc(#loc171)
            %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc243)
            cir.condition(%17) loc(#loc172)
          } body {
            cir.scope {
              %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc175)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc175)
              %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc175)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc176)
            } loc(#loc244)
            cir.yield loc(#loc167)
          } step {
            %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
            %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc178)
            cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc245)
            cir.yield loc(#loc241)
          } loc(#loc241)
        } loc(#loc241)
      } else {
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc179)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc180)
      } loc(#loc239)
    } loc(#loc237)
    cir.return loc(#loc138)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":30:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":49:23)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":22:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":52:1)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":24:5)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":24:9)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":34:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":34:13)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":35:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":35:30)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":26:13)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":26:12)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":26:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":27:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":27:10)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":28:1)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":30:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":30:12)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":31:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":31:10)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":32:1)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":38:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":50:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":38:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":38:20)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":39:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":46:9)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":48:9)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":40:28)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":40:20)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":40:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":45:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:21)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:24)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:28)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:26)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":43:13)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":44:37)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":44:30)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":44:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:33)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":42:32)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":49:13)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":124:1)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":128:1)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":126:5)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":126:13)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":127:5)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":127:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":144:15)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":146:15)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":149:15)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":151:15)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":139:1)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":154:1)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":140:1)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":142:27)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":142:22)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":142:5)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":144:5)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":145:5)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":145:53)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":146:5)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":149:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":150:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":150:52)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":151:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":153:12)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":153:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":85:23)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":59:1)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":88:1)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":61:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":61:9)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":71:9)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":71:13)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":72:9)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":72:30)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":63:13)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":63:12)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":63:5)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":64:5)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":64:10)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":65:1)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":67:5)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":67:12)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":67:19)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":68:5)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":68:10)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":69:1)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":74:9)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":86:9)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":74:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":74:21)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":74:23)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":74:26)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":74:34)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":74:36)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":75:9)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":82:9)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":84:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":76:28)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":76:20)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":76:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":81:13)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:21)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:17)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:24)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:28)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:26)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":79:13)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":80:37)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":80:30)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":80:17)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:33)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":78:32)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":85:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":91:1)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":122:1)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":93:5)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":93:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":104:9)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":104:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":105:9)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":105:30)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":95:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":95:12)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":95:5)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":96:5)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":96:10)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":97:1)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":100:12)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":100:5)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":101:5)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":101:10)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":102:1)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":108:9)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":120:9)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":108:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":108:20)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":109:9)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":116:9)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":118:9)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":110:28)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":110:20)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":110:13)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:13)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":115:13)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:21)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:17)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:24)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:28)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:26)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":113:13)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":114:37)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":114:30)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":114:17)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:33)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":112:32)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":119:23)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_18.c":119:13)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc6, #loc7])
#loc184 = loc(fused[#loc8, #loc9])
#loc185 = loc(fused[#loc11, #loc12])
#loc186 = loc(fused[#loc13, #loc14])
#loc187 = loc(fused[#loc15, #loc16])
#loc188 = loc(fused[#loc17, #loc18])
#loc189 = loc(fused[#loc21, #loc19])
#loc190 = loc(fused[#loc22, #loc23])
#loc191 = loc(fused[#loc27, #loc28])
#loc192 = loc(fused[#loc30, #loc31])
#loc193 = loc(fused[#loc32, #loc33])
#loc194 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc195 = loc(fused[#loc39, #loc37])
#loc196 = loc(fused[#loc40, #loc41])
#loc197 = loc(fused[#loc43, #loc42])
#loc198 = loc(fused[#loc44, #loc45])
#loc199 = loc(fused[#loc47, #loc41])
#loc200 = loc(fused[#loc52, #loc51])
#loc201 = loc(fused[#loc54, #loc55])
#loc202 = loc(fused[#loc56, #loc57])
#loc203 = loc(fused[#loc58, #loc59])
#loc204 = loc(fused[#loc60, #loc61])
#loc205 = loc(fused[#loc62, #loc63])
#loc206 = loc(fused[#loc68, #loc69])
#loc209 = loc(fused[#loc79, #loc80])
#loc210 = loc(fused[#loc83, #loc84])
#loc211 = loc(fused[#loc87, #loc86])
#loc212 = loc(fused[#loc89, #loc90])
#loc213 = loc(fused[#loc91, #loc92])
#loc214 = loc(fused[#loc93, #loc94])
#loc215 = loc(fused[#loc95, #loc96])
#loc216 = loc(fused[#loc99, #loc97])
#loc217 = loc(fused[#loc100, #loc101])
#loc218 = loc(fused[#loc106, #loc107])
#loc219 = loc(fused[#loc109, #loc110])
#loc220 = loc(fused[#loc111, #loc112])
#loc221 = loc(fused[#loc114, #loc116])
#loc222 = loc(fused[#loc117, #loc118, #loc119, #loc110])
#loc223 = loc(fused[#loc122, #loc120])
#loc224 = loc(fused[#loc123, #loc124])
#loc225 = loc(fused[#loc126, #loc125])
#loc226 = loc(fused[#loc127, #loc128])
#loc227 = loc(fused[#loc130, #loc124])
#loc228 = loc(fused[#loc135, #loc134])
#loc229 = loc(fused[#loc137, #loc138])
#loc230 = loc(fused[#loc139, #loc140])
#loc231 = loc(fused[#loc141, #loc142])
#loc232 = loc(fused[#loc143, #loc144])
#loc233 = loc(fused[#loc147, #loc145])
#loc234 = loc(fused[#loc148, #loc149])
#loc235 = loc(fused[#loc152, #loc151])
#loc236 = loc(fused[#loc153, #loc154])
#loc237 = loc(fused[#loc156, #loc157])
#loc238 = loc(fused[#loc158, #loc159])
#loc239 = loc(fused[#loc160, #loc161, #loc162, #loc157])
#loc240 = loc(fused[#loc165, #loc163])
#loc241 = loc(fused[#loc166, #loc167])
#loc242 = loc(fused[#loc169, #loc168])
#loc243 = loc(fused[#loc170, #loc171])
#loc244 = loc(fused[#loc173, #loc167])
#loc245 = loc(fused[#loc178, #loc177])
