!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc144)
  cir.global "private" internal dsolocal @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7badDataE = #cir.int<0> : !u64i {alignment = 8 : i64} loc(#loc145)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc146)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7badDataE : !cir.ptr<!u64i> loc(#loc145)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc16)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc150)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc152)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc23)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc154)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc155)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc29)
          %8 = cir.call @_Znam(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc30)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
          cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc34)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc37)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          cir.delete.array %16 : <!s8i> loc(#loc38)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc156)
      } loc(#loc153)
    } loc(#loc151)
    cir.return loc(#loc14)
  } loc(#loc149)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_453badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc44)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc161)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc46)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc46)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %6 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7badDataE : !cir.ptr<!u64i> loc(#loc145)
    cir.store %5, %6 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7badSinkEv() : () -> () loc(#loc51)
    cir.return loc(#loc41)
  } loc(#loc159)
  cir.global "private" internal dsolocal @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodG2BDataE = #cir.int<0> : !u64i {alignment = 8 : i64} loc(#loc164)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodG2BDataE : !cir.ptr<!u64i> loc(#loc164)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc166)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc168)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc170)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc171)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc70)
          %8 = cir.call @_Znam(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc71)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
          cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc75)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc77)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc77)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc75)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
          cir.delete.array %16 : <!s8i> loc(#loc80)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc81)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc81)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc82)
        } loc(#loc172)
      } loc(#loc169)
    } loc(#loc167)
    cir.return loc(#loc55)
  } loc(#loc165)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc87)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc89)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc89)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %6 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodG2BDataE : !cir.ptr<!u64i> loc(#loc164)
    cir.store %5, %6 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodG2BSinkEv() : () -> () loc(#loc93)
    cir.return loc(#loc84)
  } loc(#loc175)
  cir.global "private" internal dsolocal @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodB2GDataE = #cir.int<0> : !u64i {alignment = 8 : i64} loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc96)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodB2GSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodB2GDataE : !cir.ptr<!u64i> loc(#loc180)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc184)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc107)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc186)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc187)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc111)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc112)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc112)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc188)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc110)
            cir.yield %13 : !cir.bool loc(#loc110)
          }, false {
            %13 = cir.const #false loc(#loc110)
            cir.yield %13 : !cir.bool loc(#loc110)
          }) : (!cir.bool) -> !cir.bool loc(#loc110)
          cir.yield %12 : !cir.bool loc(#loc110)
        }, false {
          %8 = cir.const #false loc(#loc110)
          cir.yield %8 : !cir.bool loc(#loc110)
        }) : (!cir.bool) -> !cir.bool loc(#loc110)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc116)
          %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc117)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
          cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc121)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc123)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc123)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc125)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          cir.delete.array %17 : <!s8i> loc(#loc126)
        } else {
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc96)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc96)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc127)
        } loc(#loc189)
      } loc(#loc185)
    } loc(#loc183)
    cir.return loc(#loc98)
  } loc(#loc181)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc132)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc134)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc134)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %6 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodB2GDataE : !cir.ptr<!u64i> loc(#loc180)
    cir.store %5, %6 : !u64i, !cir.ptr<!u64i> loc(#loc196)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L11goodB2GSinkEv() : () -> () loc(#loc139)
    cir.return loc(#loc129)
  } loc(#loc192)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_454goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7goodG2BEv() : () -> () loc(#loc142)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45L7goodB2GEv() : () -> () loc(#loc143)
    cir.return loc(#loc141)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":29:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":29:15)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":47:30)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":53:23)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":35:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":56:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":37:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":37:19)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":38:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":55:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":39:9)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":39:16)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":43:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":54:9)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":43:13)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":43:20)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":43:39)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":44:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":50:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":52:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":45:33)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":35:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":45:24)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":45:37)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":45:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":47:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":47:20)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":48:23)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":48:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":49:23)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":53:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":58:1)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":67:1)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":60:5)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":60:12)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":62:12)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":62:5)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":64:12)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":64:5)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":64:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":65:15)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":65:5)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":66:5)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":30:1)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":30:15)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":74:1)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":95:1)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":76:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":76:19)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":77:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":94:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":78:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":78:16)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":82:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":93:9)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":82:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":82:20)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":82:39)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":83:9)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":89:9)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":91:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":84:33)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":74:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":84:24)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":84:37)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":84:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":86:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":86:20)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":86:30)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":87:23)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":87:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":88:23)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":92:23)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":92:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":97:1)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":106:1)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":99:5)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":99:12)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":101:12)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":101:5)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":103:12)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":103:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":104:19)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":104:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":105:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":31:1)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":31:15)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":127:23)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":109:1)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":130:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":111:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":111:19)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":112:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":129:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":113:9)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":113:16)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":117:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":128:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":117:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":117:20)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":117:39)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":117:41)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":117:44)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":117:51)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":118:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":124:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":126:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":119:33)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":109:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":119:24)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":119:37)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":119:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":121:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":121:20)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":121:30)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":122:23)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":122:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":123:23)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":127:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":132:1)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":141:1)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":134:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":134:12)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":136:12)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":136:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":138:12)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":138:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":138:17)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":139:19)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":139:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":140:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":143:1)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":147:1)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":145:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_45.cpp":146:5)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc10, #loc11])
#loc149 = loc(fused[#loc13, #loc14])
#loc150 = loc(fused[#loc15, #loc16])
#loc151 = loc(fused[#loc17, #loc18])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc21, #loc22])
#loc154 = loc(fused[#loc24, #loc25])
#loc155 = loc(fused[#loc23, #loc25])
#loc156 = loc(fused[#loc26, #loc27, #loc28, #loc22])
#loc157 = loc(fused[#loc31, #loc32])
#loc158 = loc(fused[#loc33, #loc32])
#loc159 = loc(fused[#loc40, #loc41])
#loc160 = loc(fused[#loc42, #loc43])
#loc161 = loc(fused[#loc45, #loc44])
#loc162 = loc(fused[#loc47, #loc48])
#loc163 = loc(fused[#loc50, #loc49])
#loc164 = loc(fused[#loc52, #loc53])
#loc165 = loc(fused[#loc54, #loc55])
#loc166 = loc(fused[#loc56, #loc57])
#loc167 = loc(fused[#loc58, #loc59])
#loc168 = loc(fused[#loc60, #loc61])
#loc169 = loc(fused[#loc62, #loc63])
#loc170 = loc(fused[#loc65, #loc66])
#loc171 = loc(fused[#loc64, #loc66])
#loc172 = loc(fused[#loc67, #loc68, #loc69, #loc63])
#loc173 = loc(fused[#loc72, #loc73])
#loc174 = loc(fused[#loc74, #loc73])
#loc175 = loc(fused[#loc83, #loc84])
#loc176 = loc(fused[#loc85, #loc86])
#loc177 = loc(fused[#loc88, #loc87])
#loc178 = loc(fused[#loc90, #loc89])
#loc179 = loc(fused[#loc92, #loc91])
#loc180 = loc(fused[#loc94, #loc95])
#loc181 = loc(fused[#loc97, #loc98])
#loc182 = loc(fused[#loc99, #loc100])
#loc183 = loc(fused[#loc101, #loc102])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc105, #loc106])
#loc186 = loc(fused[#loc108, #loc109])
#loc187 = loc(fused[#loc107, #loc109])
#loc188 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc113, #loc114, #loc115, #loc106])
#loc190 = loc(fused[#loc118, #loc119])
#loc191 = loc(fused[#loc120, #loc119])
#loc192 = loc(fused[#loc128, #loc129])
#loc193 = loc(fused[#loc130, #loc131])
#loc194 = loc(fused[#loc133, #loc132])
#loc195 = loc(fused[#loc135, #loc136])
#loc196 = loc(fused[#loc138, #loc137])
#loc197 = loc(fused[#loc140, #loc141])
