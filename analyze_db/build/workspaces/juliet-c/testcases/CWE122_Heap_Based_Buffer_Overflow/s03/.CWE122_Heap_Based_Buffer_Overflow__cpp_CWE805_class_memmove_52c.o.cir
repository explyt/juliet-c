!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":26:16)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":26:31)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":51:20)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":51:35)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc89 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc48, #loc49])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc87)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_529badSink_cEP12TwoIntsClass(%arg0: !cir.ptr<!ty_TwoIntsClass> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty_TwoIntsClass x 100>, !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>, ["source"] {alignment = 16 : i64} loc(#loc90)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc91)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
    cir.store %arg0, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc11)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc93)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc94)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc95)
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc20)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc96)
    cir.brcond %8 ^bb5, ^bb9 loc(#loc96)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!ty_TwoIntsClass>, %10 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty_TwoIntsClass>, %15 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc32)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc100)
    cir.br ^bb4 loc(#loc94)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc15)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc33)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc34)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc34)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc35)
    %27 = cir.const #cir.int<8> : !u64i loc(#loc101)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc102)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc103)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty_TwoIntsClass>, %30 : !s32i), !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
    %32 = cir.get_member %31[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc44)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
    cir.delete.array %34 : <!ty_TwoIntsClass> loc(#loc45)
    cir.br ^bb12 loc(#loc13)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc4)
  } loc(#loc88)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_5213goodG2BSink_cEP12TwoIntsClass(%arg0: !cir.ptr<!ty_TwoIntsClass> loc(fused[#loc48, #loc49])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty_TwoIntsClass x 100>, !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>, ["source"] {alignment = 16 : i64} loc(#loc106)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
    cir.store %arg0, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc54)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc109)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc110)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc61)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc111)
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc64)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc112)
    cir.brcond %8 ^bb5, ^bb9 loc(#loc112)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!ty_TwoIntsClass>, %10 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty_TwoIntsClass>, %15 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    cir.br ^bb7 loc(#loc60)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc60)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc73)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc116)
    cir.br ^bb4 loc(#loc110)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc60)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc74)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc75)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc76)
    %27 = cir.const #cir.int<8> : !u64i loc(#loc117)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc118)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc119)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty_TwoIntsClass>, %30 : !s32i), !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
    %32 = cir.get_member %31[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc85)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
    cir.delete.array %34 : <!ty_TwoIntsClass> loc(#loc86)
    cir.br ^bb12 loc(#loc56)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc47)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":26:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":44:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":29:9)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":29:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":31:13)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":31:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":27:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":28:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":43:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":30:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":38:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":33:13)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":37:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":33:22)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":33:18)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":33:25)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":33:29)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":34:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":35:36)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":35:24)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":35:17)
#loc26 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":36:36)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":36:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":36:17)
#loc30 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":33:35)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":33:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":40:17)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":40:23)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":40:31)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":40:35)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":40:54)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":40:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":40:55)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":41:22)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":41:27)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":41:28)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":41:30)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":42:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":51:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":69:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":54:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":54:32)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":56:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":56:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":52:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":53:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":68:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":55:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":63:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":58:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":62:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":58:22)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":58:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":58:25)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":58:29)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":59:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":60:36)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":60:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":60:17)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":61:36)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":61:24)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":61:17)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":58:35)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":58:34)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":65:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":65:23)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":65:31)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":65:35)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":65:54)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":65:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":65:55)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":66:22)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":66:27)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":66:28)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":66:30)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":66:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_52c.cpp":67:19)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc7, #loc8])
#loc91 = loc(fused[#loc9, #loc10])
#loc92 = loc(fused[#loc12, #loc13])
#loc93 = loc(fused[#loc14, #loc15])
#loc94 = loc(fused[#loc16, #loc17])
#loc95 = loc(fused[#loc19, #loc18])
#loc96 = loc(fused[#loc20, #loc21])
#loc97 = loc(fused[#loc22, #loc17])
#loc98 = loc(fused[#loc25, #loc23])
#loc99 = loc(fused[#loc29, #loc27])
#loc100 = loc(fused[#loc32, #loc31])
#loc101 = loc(fused[#loc36, #loc37])
#loc102 = loc(fused[#loc35, #loc37])
#loc103 = loc(fused[#loc38, #loc39])
#loc104 = loc(fused[#loc46, #loc47])
#loc106 = loc(fused[#loc50, #loc51])
#loc107 = loc(fused[#loc52, #loc53])
#loc108 = loc(fused[#loc55, #loc56])
#loc109 = loc(fused[#loc57, #loc58])
#loc110 = loc(fused[#loc59, #loc60])
#loc111 = loc(fused[#loc62, #loc61])
#loc112 = loc(fused[#loc63, #loc64])
#loc113 = loc(fused[#loc65, #loc60])
#loc114 = loc(fused[#loc68, #loc66])
#loc115 = loc(fused[#loc71, #loc69])
#loc116 = loc(fused[#loc73, #loc72])
#loc117 = loc(fused[#loc77, #loc78])
#loc118 = loc(fused[#loc76, #loc78])
#loc119 = loc(fused[#loc79, #loc80])
