!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":91:10)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":91:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":91:20)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":91:32)
#loc147 = loc(fused[#loc100, #loc101])
#loc148 = loc(fused[#loc102, #loc103])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc12)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %13 = cir.const #cir.int<65> : !s8i loc(#loc18)
    %14 = cir.cast(integral, %13 : !s8i), !s32i loc(#loc18)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc19)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %18 bytes from %12 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc124)
    %19 = cir.const #cir.int<0> : !s8i loc(#loc23)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc25)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc125)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc129)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc129)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc129)
        %30 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc36)
        %31 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
        %34 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
        %36 = cir.call @strncat(%31, %32, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
        %37 = cir.const #cir.int<0> : !s8i loc(#loc41)
        %38 = cir.const #cir.int<50> : !s32i loc(#loc42)
        %39 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc42)
        %41 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
        %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc44)
        cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc130)
        %43 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } loc(#loc128)
    } loc(#loc126)
    cir.return loc(#loc8)
  } loc(#loc119)
  cir.func internal private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc134)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc54)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc54)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc54)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc54)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %13 = cir.const #cir.int<65> : !s8i loc(#loc58)
    %14 = cir.cast(integral, %13 : !s8i), !s32i loc(#loc58)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc59)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc59)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc59)
    cir.libc.memset %18 bytes from %12 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc136)
    %19 = cir.const #cir.int<0> : !s8i loc(#loc63)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc65)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc65)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc137)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc141)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc141)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc141)
        %30 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc76)
        %31 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc77)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
        %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc79)
        %34 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc79)
        %36 = cir.call @strncat(%31, %32, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
        %37 = cir.const #cir.int<0> : !s8i loc(#loc81)
        %38 = cir.const #cir.int<50> : !s32i loc(#loc82)
        %39 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc82)
        %41 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
        %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc84)
        cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc142)
        %43 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
        cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc48)
  } loc(#loc131)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc144)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc97)
  cir.func @main(%arg0: !s32i loc(fused[#loc100, #loc101]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc104)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc106)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc106)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc107)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_334goodEv() : () -> () loc(#loc109)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc95)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc96)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_333badEv() : () -> () loc(#loc112)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc97)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc114)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.return %15 : !s32i loc(#loc149)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":152:1)
#loc2 = loc("/usr/include/string.h":153:29)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":26:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":45:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":28:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":28:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":29:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":29:23)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":30:33)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":31:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":33:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":33:18)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":33:23)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":33:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":33:28)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":34:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":34:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":34:10)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":34:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":34:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":35:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":44:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":36:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":36:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":37:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":43:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":38:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":38:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":40:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":40:21)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":40:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":40:33)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":40:40)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":41:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":41:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":41:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":41:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":42:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":42:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":52:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":71:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":54:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":54:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":55:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":55:23)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":56:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":56:33)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":57:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":57:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":59:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":59:18)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":59:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":59:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":59:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":59:27)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":60:18)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":60:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":60:10)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":60:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":60:14)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":61:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":70:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":62:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":62:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":63:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":69:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":64:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":64:29)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":66:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":66:21)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":66:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":66:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":66:40)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":67:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":67:18)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":67:21)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":67:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":68:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":68:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":73:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":76:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":75:5)
#loc90 = loc("/usr/include/stdlib.h":575:1)
#loc91 = loc("/usr/include/stdlib.h":575:41)
#loc92 = loc("/usr/include/time.h":76:1)
#loc93 = loc("/usr/include/time.h":76:38)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":96:15)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":98:15)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":101:15)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":103:15)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":91:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":106:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":92:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":94:27)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":94:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":94:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":96:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":97:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":98:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":101:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":102:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":103:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":105:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_33.cpp":105:5)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc9, #loc10])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc13, #loc14])
#loc123 = loc(fused[#loc16, #loc15])
#loc124 = loc(fused[#loc21, #loc22])
#loc125 = loc(fused[#loc24, #loc23])
#loc126 = loc(fused[#loc28, #loc29])
#loc127 = loc(fused[#loc30, #loc31])
#loc128 = loc(fused[#loc32, #loc33])
#loc129 = loc(fused[#loc34, #loc35])
#loc130 = loc(fused[#loc44, #loc41])
#loc131 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc49, #loc50])
#loc133 = loc(fused[#loc51, #loc52])
#loc134 = loc(fused[#loc53, #loc54])
#loc135 = loc(fused[#loc56, #loc55])
#loc136 = loc(fused[#loc61, #loc62])
#loc137 = loc(fused[#loc64, #loc63])
#loc138 = loc(fused[#loc68, #loc69])
#loc139 = loc(fused[#loc70, #loc71])
#loc140 = loc(fused[#loc72, #loc73])
#loc141 = loc(fused[#loc74, #loc75])
#loc142 = loc(fused[#loc84, #loc81])
#loc143 = loc(fused[#loc87, #loc88])
#loc144 = loc(fused[#loc90, #loc91])
#loc145 = loc(fused[#loc92, #loc93])
#loc146 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc115, #loc114])
