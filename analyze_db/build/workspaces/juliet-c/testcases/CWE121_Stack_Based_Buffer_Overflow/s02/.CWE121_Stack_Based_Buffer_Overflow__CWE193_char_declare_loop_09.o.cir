!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc163)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc164)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc165)
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc166)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc165)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc173)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc166)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc30)
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc179)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc165)
    cir.copy %15 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc165)
    %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc36)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
    %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc36)
    cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc180)
    cir.br ^bb6 loc(#loc181)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb7 loc(#loc181)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc46)
    %25 = cir.binop(add, %22, %24) : !u64i loc(#loc183)
    %26 = cir.cmp(lt, %21, %25) : !u64i, !cir.bool loc(#loc184)
    cir.brcond %26 ^bb8, ^bb12 loc(#loc47)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc185)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc50)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc50)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc53)
    cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc186)
    cir.br ^bb10 loc(#loc41)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc41)
  ^bb11:  // pred: ^bb10
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc56)
    cir.store %35, %1 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb7 loc(#loc181)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb14 loc(#loc35)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc14)
  } loc(#loc169)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc189)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc190)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc188)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc164)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc196)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc191)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc81)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb4 loc(#loc83)
  ^bb3:  // pred: ^bb1
    %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc86)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc88)
    %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc91)
    cir.store %13, %16 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc80)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc164)
    cir.copy %17 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc164)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc94)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc95)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc94)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb7 loc(#loc204)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc100)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    cir.br ^bb8 loc(#loc204)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc104)
    %27 = cir.binop(add, %24, %26) : !u64i loc(#loc206)
    %28 = cir.cmp(lt, %23, %27) : !u64i, !cir.bool loc(#loc207)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc105)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc208)
  ^bb10:  // pred: ^bb9
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc108)
    %32 = cir.load %31 : !cir.ptr<!s8i>, !s8i loc(#loc108)
    %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc111)
    cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc209)
    cir.br ^bb11 loc(#loc99)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc99)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc114)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb8 loc(#loc204)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc99)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb15 loc(#loc93)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc69)
  } loc(#loc192)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc163)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc215)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc166)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc132)
    cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc134)
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc137)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc220)
    cir.br ^bb3 loc(#loc129)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc221)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc163)
    cir.copy %15 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc163)
    %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc140)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc141)
    %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc140)
    cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb6 loc(#loc223)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc146)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc224)
    cir.br ^bb7 loc(#loc223)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc150)
    %25 = cir.binop(add, %22, %24) : !u64i loc(#loc225)
    %26 = cir.cmp(lt, %21, %25) : !u64i, !cir.bool loc(#loc226)
    cir.brcond %26 ^bb8, ^bb12 loc(#loc151)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc227)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc154)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc154)
    %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc154)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc157)
    cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc228)
    cir.br ^bb10 loc(#loc145)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc145)
  ^bb11:  // pred: ^bb10
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc159)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc160)
    cir.store %35, %1 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb7 loc(#loc223)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc145)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.br ^bb14 loc(#loc139)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc118)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":104:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":104:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":77:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":77:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":41:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":41:29)
#loc7 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc8 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":28:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":52:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":42:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":42:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":42:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":30:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":30:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":31:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":31:26)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":32:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":32:29)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":33:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":39:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":33:8)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":34:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":37:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":37:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":38:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":38:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":38:14)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":38:15)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":40:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":51:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":43:21)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":43:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":43:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":43:34)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":49:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:25)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:37)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":47:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":48:30)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":48:23)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":48:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":48:18)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":48:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":48:31)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:41)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":46:40)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":50:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":50:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":117:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":121:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":119:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":119:14)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":120:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":120:14)
#loc65 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc66 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":67:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":59:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":88:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":78:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":78:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":78:19)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":61:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":61:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":62:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":62:26)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":63:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":63:29)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":64:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":75:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":64:8)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":65:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":68:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":70:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":67:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":73:16)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":73:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":74:19)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":74:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":74:14)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":74:15)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":76:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":87:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":79:21)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":79:28)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":79:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":79:34)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":85:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:18)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:21)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:25)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:37)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:23)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":83:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":84:30)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":84:23)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":84:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":84:18)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":84:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":84:31)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:41)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":82:40)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":86:19)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":86:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":91:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":115:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":105:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":105:16)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":105:19)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":93:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":93:12)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":94:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":94:26)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":95:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":95:29)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":96:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":102:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":96:8)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":97:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":100:16)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":100:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":101:19)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":101:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":101:14)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":101:15)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":103:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":114:5)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":106:21)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":106:28)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":106:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":106:34)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":112:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:18)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:14)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:21)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:25)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:37)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:23)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":110:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":111:30)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":111:23)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":111:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":111:18)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":111:19)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":111:31)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:41)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":109:40)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":113:19)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_09.c":113:9)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc11, #loc12])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc15, #loc17])
#loc172 = loc(fused[#loc18, #loc19])
#loc173 = loc(fused[#loc20, #loc21])
#loc174 = loc(fused[#loc22, #loc23])
#loc175 = loc(fused[#loc24, #loc25])
#loc176 = loc(fused[#loc27, #loc25])
#loc177 = loc(fused[#loc29, #loc28])
#loc178 = loc(fused[#loc31, #loc30])
#loc179 = loc(fused[#loc34, #loc35])
#loc180 = loc(fused[#loc38, #loc39])
#loc181 = loc(fused[#loc40, #loc41])
#loc182 = loc(fused[#loc43, #loc42])
#loc183 = loc(fused[#loc45, #loc46])
#loc184 = loc(fused[#loc44, #loc46])
#loc185 = loc(fused[#loc48, #loc41])
#loc186 = loc(fused[#loc51, #loc54])
#loc187 = loc(fused[#loc56, #loc55])
#loc188 = loc(fused[#loc59, #loc60])
#loc189 = loc(fused[#loc61, #loc62])
#loc190 = loc(fused[#loc63, #loc64])
#loc191 = loc(fused[#loc65, #loc66])
#loc192 = loc(fused[#loc68, #loc69])
#loc193 = loc(fused[#loc70, #loc71])
#loc194 = loc(fused[#loc70, #loc72])
#loc195 = loc(fused[#loc73, #loc74])
#loc196 = loc(fused[#loc75, #loc76])
#loc197 = loc(fused[#loc77, #loc78])
#loc198 = loc(fused[#loc79, #loc80])
#loc199 = loc(fused[#loc82, #loc83, #loc84, #loc80])
#loc200 = loc(fused[#loc87, #loc86])
#loc201 = loc(fused[#loc89, #loc88])
#loc202 = loc(fused[#loc92, #loc93])
#loc203 = loc(fused[#loc96, #loc97])
#loc204 = loc(fused[#loc98, #loc99])
#loc205 = loc(fused[#loc101, #loc100])
#loc206 = loc(fused[#loc103, #loc104])
#loc207 = loc(fused[#loc102, #loc104])
#loc208 = loc(fused[#loc106, #loc99])
#loc209 = loc(fused[#loc109, #loc112])
#loc210 = loc(fused[#loc114, #loc113])
#loc211 = loc(fused[#loc117, #loc118])
#loc212 = loc(fused[#loc119, #loc120])
#loc213 = loc(fused[#loc119, #loc121])
#loc214 = loc(fused[#loc122, #loc123])
#loc215 = loc(fused[#loc124, #loc125])
#loc216 = loc(fused[#loc126, #loc127])
#loc217 = loc(fused[#loc128, #loc129])
#loc218 = loc(fused[#loc131, #loc129])
#loc219 = loc(fused[#loc133, #loc132])
#loc220 = loc(fused[#loc135, #loc134])
#loc221 = loc(fused[#loc138, #loc139])
#loc222 = loc(fused[#loc142, #loc143])
#loc223 = loc(fused[#loc144, #loc145])
#loc224 = loc(fused[#loc147, #loc146])
#loc225 = loc(fused[#loc149, #loc150])
#loc226 = loc(fused[#loc148, #loc150])
#loc227 = loc(fused[#loc152, #loc145])
#loc228 = loc(fused[#loc155, #loc158])
#loc229 = loc(fused[#loc160, #loc159])
