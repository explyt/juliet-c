!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc174)
  cir.func private  @printIntLine(!s32i) loc(#loc175)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_pointer_10_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
      cir.if %3 {
      } loc(#loc179)
    } loc(#loc178)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc17)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc18)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc19)
      } loc(#loc181)
    } loc(#loc180)
    cir.return loc(#loc6)
  } loc(#loc176)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_pointer_10_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc21)
  } loc(#loc182)
  cir.global "private"  external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc187)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc189)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc190)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc45)
      cir.if %3 {
      } loc(#loc194)
    } loc(#loc193)
    cir.scope {
      %1 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc187)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc49)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc54)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc197)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc54)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc198)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc62)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !s32i loc(#loc201)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc63)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc66)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc67)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc65)
          } loc(#loc202)
        } loc(#loc200)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc68)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
        cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc203)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
        %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc73)
      } loc(#loc196)
    } loc(#loc195)
    cir.return loc(#loc40)
  } loc(#loc191)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc80)
      cir.if %3 {
      } loc(#loc207)
    } loc(#loc206)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc84)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc210)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc86)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc211)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc94)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !s32i loc(#loc214)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc95)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc97)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc98)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc99)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc97)
          } loc(#loc215)
        } loc(#loc213)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc100)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
        cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc216)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
        %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc104)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc105)
      } loc(#loc209)
    } loc(#loc208)
    cir.return loc(#loc75)
  } loc(#loc204)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    cir.scope {
      %1 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc187)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc112)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc117)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc118)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc221)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc118)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc222)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc223)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc126)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !s32i loc(#loc225)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc127)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc130)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc131)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc129)
          } loc(#loc226)
        } loc(#loc224)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc132)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
        cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc227)
      } loc(#loc220)
    } loc(#loc219)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc137)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc141)
      } loc(#loc229)
    } loc(#loc228)
    cir.return loc(#loc107)
  } loc(#loc217)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc148)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc150)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc234)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc150)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc235)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc236)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc158)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !s32i loc(#loc238)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc159)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc161)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc162)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc163)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc161)
          } loc(#loc239)
        } loc(#loc237)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc164)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
        cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc240)
      } loc(#loc233)
    } loc(#loc232)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc169)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc172)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc173)
      } loc(#loc242)
    } loc(#loc241)
    cir.return loc(#loc143)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":24:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":37:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":26:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":26:11)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":27:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":31:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":27:8)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":28:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":32:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":36:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":32:8)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":33:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":35:23)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":35:22)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":35:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":131:1)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":137:1)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":133:5)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":133:14)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":134:5)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":134:14)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":135:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":135:14)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":136:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":136:14)
#loc30 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc31 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":55:19)
#loc35 = loc("/usr/include/stdlib.h":672:1)
#loc36 = loc("/usr/include/stdlib.h":672:45)
#loc37 = loc("/usr/include/stdlib.h":756:1)
#loc38 = loc("/usr/include/stdlib.h":756:70)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":44:1)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":66:1)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":46:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":46:11)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":47:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":51:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":47:8)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":48:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":52:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":65:5)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":52:8)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":53:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":56:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":58:5)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":55:9)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":61:23)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":61:30)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":61:40)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":61:41)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":61:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:9)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:37)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:13)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:21)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:18)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:27)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:28)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:34)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":62:33)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":63:17)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":63:10)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":63:9)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":64:23)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":64:22)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":64:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":69:1)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":86:1)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":71:5)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":71:11)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":72:5)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":76:5)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":72:8)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":73:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":77:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":85:5)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":77:8)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":78:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":81:23)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":81:30)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":81:40)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":81:41)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":81:9)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:9)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:37)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:13)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:21)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:18)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:27)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:28)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:34)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":82:33)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":83:17)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":83:10)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":83:9)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":84:23)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":84:22)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":84:9)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":89:1)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":110:1)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":91:5)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":91:11)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":92:5)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":104:5)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":92:8)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":93:5)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":96:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":98:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":95:19)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":95:9)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":101:23)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":101:30)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":101:40)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":101:41)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":101:9)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:9)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:37)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:13)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:21)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:18)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:27)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:28)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:34)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":102:33)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":103:17)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":103:10)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":103:9)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":105:5)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":109:5)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":105:8)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":106:5)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":108:23)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":108:22)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":108:9)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":113:1)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":129:1)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":115:5)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":115:11)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":116:5)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":123:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":116:8)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":117:5)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":120:23)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":120:30)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":120:40)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":120:41)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":120:9)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:9)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:37)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:13)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:21)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:18)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:27)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:28)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:34)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":121:33)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":122:17)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":122:10)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":122:9)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":124:5)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":128:5)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":124:8)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":125:5)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":127:23)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":127:22)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_10.c":127:9)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc176 = loc(fused[#loc5, #loc6])
#loc177 = loc(fused[#loc7, #loc8])
#loc178 = loc(fused[#loc9, #loc10])
#loc179 = loc(fused[#loc12, #loc10])
#loc180 = loc(fused[#loc13, #loc14])
#loc181 = loc(fused[#loc16, #loc14])
#loc182 = loc(fused[#loc20, #loc21])
#loc183 = loc(fused[#loc22, #loc23])
#loc184 = loc(fused[#loc24, #loc25])
#loc185 = loc(fused[#loc26, #loc27])
#loc186 = loc(fused[#loc28, #loc29])
#loc187 = loc(fused[#loc30, #loc31])
#loc188 = loc(fused[#loc32, #loc33])
#loc189 = loc(fused[#loc35, #loc36])
#loc190 = loc(fused[#loc37, #loc38])
#loc191 = loc(fused[#loc39, #loc40])
#loc192 = loc(fused[#loc41, #loc42])
#loc193 = loc(fused[#loc43, #loc44])
#loc194 = loc(fused[#loc46, #loc44])
#loc195 = loc(fused[#loc47, #loc48])
#loc196 = loc(fused[#loc50, #loc51, #loc52, #loc48])
#loc197 = loc(fused[#loc55, #loc56])
#loc198 = loc(fused[#loc54, #loc57])
#loc199 = loc(fused[#loc58, #loc57])
#loc200 = loc(fused[#loc59, #loc60])
#loc201 = loc(fused[#loc61, #loc62])
#loc202 = loc(fused[#loc64, #loc60])
#loc203 = loc(fused[#loc70, #loc68])
#loc204 = loc(fused[#loc74, #loc75])
#loc205 = loc(fused[#loc76, #loc77])
#loc206 = loc(fused[#loc78, #loc79])
#loc207 = loc(fused[#loc81, #loc79])
#loc208 = loc(fused[#loc82, #loc83])
#loc209 = loc(fused[#loc85, #loc83])
#loc210 = loc(fused[#loc87, #loc88])
#loc211 = loc(fused[#loc86, #loc89])
#loc212 = loc(fused[#loc90, #loc89])
#loc213 = loc(fused[#loc91, #loc92])
#loc214 = loc(fused[#loc93, #loc94])
#loc215 = loc(fused[#loc96, #loc92])
#loc216 = loc(fused[#loc102, #loc100])
#loc217 = loc(fused[#loc106, #loc107])
#loc218 = loc(fused[#loc108, #loc109])
#loc219 = loc(fused[#loc110, #loc111])
#loc220 = loc(fused[#loc113, #loc114, #loc115, #loc111])
#loc221 = loc(fused[#loc119, #loc120])
#loc222 = loc(fused[#loc118, #loc121])
#loc223 = loc(fused[#loc122, #loc121])
#loc224 = loc(fused[#loc123, #loc124])
#loc225 = loc(fused[#loc125, #loc126])
#loc226 = loc(fused[#loc128, #loc124])
#loc227 = loc(fused[#loc134, #loc132])
#loc228 = loc(fused[#loc135, #loc136])
#loc229 = loc(fused[#loc138, #loc136])
#loc230 = loc(fused[#loc142, #loc143])
#loc231 = loc(fused[#loc144, #loc145])
#loc232 = loc(fused[#loc146, #loc147])
#loc233 = loc(fused[#loc149, #loc147])
#loc234 = loc(fused[#loc151, #loc152])
#loc235 = loc(fused[#loc150, #loc153])
#loc236 = loc(fused[#loc154, #loc153])
#loc237 = loc(fused[#loc155, #loc156])
#loc238 = loc(fused[#loc157, #loc158])
#loc239 = loc(fused[#loc160, #loc156])
#loc240 = loc(fused[#loc166, #loc164])
#loc241 = loc(fused[#loc167, #loc168])
#loc242 = loc(fused[#loc170, #loc168])
