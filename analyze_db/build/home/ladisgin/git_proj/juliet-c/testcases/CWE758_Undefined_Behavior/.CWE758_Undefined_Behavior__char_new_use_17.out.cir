!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc79 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":79:10)
#loc80 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":79:14)
#loc81 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":79:20)
#loc82 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":79:32)
#loc127 = loc(fused[#loc79, #loc80])
#loc128 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_new_use_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc95)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc96)
  cir.func private @printHexCharLine(!s8i) loc(#loc97)
  cir.func @_ZN42CWE758_Undefined_Behavior__char_new_use_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc99)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc13)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc101)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc102)
        cir.condition(%4) loc(#loc102)
      } body {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc104)
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc105)
          %4 = cir.const #cir.int<1> : !u64i loc(#loc106)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc104)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
          cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
          %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
          %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc24)
          cir.store %8, %3 : !s8i, !cir.ptr<!s8i> loc(#loc105)
          %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
          cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc26)
          %11 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc27)
          cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc28)
        } loc(#loc103)
        cir.yield loc(#loc12)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc30)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
        cir.yield loc(#loc100)
      } loc(#loc100)
    } loc(#loc100)
    cir.return loc(#loc8)
  } loc(#loc98)
  cir.func internal private @_ZN42CWE758_Undefined_Behavior__char_new_use_17L5good1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc109)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc37)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc112)
        cir.condition(%4) loc(#loc112)
      } body {
        cir.scope {
          %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc114)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc115)
          %4 = cir.const #cir.int<5> : !s32i loc(#loc47)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc47)
          cir.store %5, %2 : !s8i, !cir.ptr<!s8i> loc(#loc116)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc117)
          %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc115)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
          cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
          %9 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc50)
          %10 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
          cir.store %9, %10 : !s8i, !cir.ptr<!s8i> loc(#loc118)
          cir.scope {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc120)
            %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc57)
            cir.store %15, %13 : !s8i, !cir.ptr<!s8i> loc(#loc120)
            %16 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc58)
            cir.call @printHexCharLine(%16) : (!s8i) -> () loc(#loc59)
          } loc(#loc119)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
          cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
        } loc(#loc113)
        cir.yield loc(#loc36)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc63)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
        cir.yield loc(#loc110)
      } loc(#loc110)
    } loc(#loc110)
    cir.return loc(#loc32)
  } loc(#loc108)
  cir.func @_ZN42CWE758_Undefined_Behavior__char_new_use_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE758_Undefined_Behavior__char_new_use_17L5good1Ev() : () -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc122)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc123)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.call @_ZN42CWE758_Undefined_Behavior__char_new_use_174goodEv() : () -> () loc(#loc88)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.call @_ZN42CWE758_Undefined_Behavior__char_new_use_173badEv() : () -> () loc(#loc91)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.return %15 : !s32i loc(#loc129)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_new_use_17.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc7 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":23:1)
#loc8 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":35:1)
#loc9 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":25:5)
#loc10 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":25:9)
#loc11 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":26:5)
#loc12 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":34:5)
#loc13 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":26:13)
#loc14 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":26:9)
#loc15 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":26:16)
#loc16 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":26:20)
#loc17 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":28:9)
#loc18 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":33:9)
#loc19 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":29:13)
#loc20 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":29:34)
#loc21 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":30:13)
#loc22 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":30:26)
#loc23 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":29:30)
#loc24 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":30:25)
#loc25 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":31:20)
#loc26 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":23:6)
#loc27 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":32:30)
#loc28 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":32:13)
#loc29 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":26:24)
#loc30 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":26:23)
#loc31 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":42:1)
#loc32 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":59:1)
#loc33 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":44:5)
#loc34 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":44:9)
#loc35 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":45:5)
#loc36 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":58:5)
#loc37 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":45:13)
#loc38 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":45:9)
#loc39 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":45:16)
#loc40 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":45:20)
#loc41 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":47:9)
#loc42 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":57:9)
#loc43 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":48:13)
#loc44 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":48:18)
#loc45 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":50:13)
#loc46 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":50:34)
#loc47 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":49:20)
#loc48 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":49:13)
#loc49 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":50:30)
#loc50 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":51:24)
#loc51 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":51:14)
#loc52 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":51:13)
#loc53 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":52:13)
#loc54 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":55:13)
#loc55 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":53:17)
#loc56 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":53:30)
#loc57 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":53:29)
#loc58 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":54:34)
#loc59 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":54:17)
#loc60 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":56:20)
#loc61 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":42:13)
#loc62 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":45:24)
#loc63 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":45:23)
#loc64 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":61:1)
#loc65 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":64:1)
#loc66 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":63:5)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc72 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc73 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":84:15)
#loc74 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":86:15)
#loc75 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":89:15)
#loc76 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":91:15)
#loc77 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":79:1)
#loc78 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":94:1)
#loc83 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":80:1)
#loc84 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":82:27)
#loc85 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":82:22)
#loc86 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":82:5)
#loc87 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":84:5)
#loc88 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":85:5)
#loc89 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":86:5)
#loc90 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":89:5)
#loc91 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":90:5)
#loc92 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":91:5)
#loc93 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":93:12)
#loc94 = loc("CWE758_Undefined_Behavior__char_new_use_17.cpp":93:5)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc11, #loc12])
#loc101 = loc(fused[#loc14, #loc13])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc17, #loc18])
#loc104 = loc(fused[#loc19, #loc20])
#loc105 = loc(fused[#loc21, #loc22])
#loc106 = loc(fused[#loc23, #loc20])
#loc107 = loc(fused[#loc30, #loc29])
#loc108 = loc(fused[#loc31, #loc32])
#loc109 = loc(fused[#loc33, #loc34])
#loc110 = loc(fused[#loc35, #loc36])
#loc111 = loc(fused[#loc38, #loc37])
#loc112 = loc(fused[#loc39, #loc40])
#loc113 = loc(fused[#loc41, #loc42])
#loc114 = loc(fused[#loc43, #loc44])
#loc115 = loc(fused[#loc45, #loc46])
#loc116 = loc(fused[#loc48, #loc47])
#loc117 = loc(fused[#loc49, #loc46])
#loc118 = loc(fused[#loc52, #loc50])
#loc119 = loc(fused[#loc53, #loc54])
#loc120 = loc(fused[#loc55, #loc56])
#loc121 = loc(fused[#loc63, #loc62])
#loc122 = loc(fused[#loc64, #loc65])
#loc123 = loc(fused[#loc67, #loc68])
#loc124 = loc(fused[#loc69, #loc70])
#loc125 = loc(fused[#loc71, #loc72])
#loc126 = loc(fused[#loc77, #loc78])
#loc129 = loc(fused[#loc94, #loc93])
