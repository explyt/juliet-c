!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc98)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc99)
  cir.func private @printIntLine(!s32i) loc(#loc100)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc101)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc104)
    cir.scope {
      %7 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc18)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc106)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc109)
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc110)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc111)
          %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc30)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc111)
          cir.call @_ZN12TwoIntsClassC2Ev(%14) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc28)
          cir.store %14, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc110)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc31)
          %16 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc112)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc34)
          %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
          %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc113)
          %21 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
          cir.store %21, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc114)
        } loc(#loc108)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc116)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc117)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc116)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc117)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc42)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc116)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc44)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc118)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc46)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc119)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc120)
        } loc(#loc115)
      } loc(#loc107)
    } loc(#loc105)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc50)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc52)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc53)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc54)
    cir.return loc(#loc11)
  } loc(#loc102)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc59)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc123)
    cir.scope {
      %7 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc63)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc125)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc128)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc129)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc128)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc129)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc71)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc128)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc73)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc130)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc75)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc131)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc132)
        } loc(#loc127)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc134)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc135)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc134)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc135)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc82)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc134)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc84)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc136)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc86)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc138)
        } loc(#loc133)
      } loc(#loc126)
    } loc(#loc124)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc92)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc93)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc93)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc94)
    cir.return loc(#loc56)
  } loc(#loc121)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12L7goodG2BEv() : () -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":26:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":54:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":28:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":28:20)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":29:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":29:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":30:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":50:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":30:8)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":30:33)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":31:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":40:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":42:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":32:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":39:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":34:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":34:45)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":35:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":35:53)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":35:41)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":35:45)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":36:34)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":36:13)
#loc33 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":37:34)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":37:13)
#loc36 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":38:20)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":38:13)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":43:9)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":49:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":45:13)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":45:45)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":45:41)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":46:34)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":46:13)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":47:34)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":47:13)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":48:20)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":48:13)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":51:18)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":51:24)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":51:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":53:12)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":26:6)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":62:1)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":89:1)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":64:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":64:20)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":65:12)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":65:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":66:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":85:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":66:8)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":66:33)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":67:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":75:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":77:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":68:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":74:9)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":70:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":70:45)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":70:41)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":71:34)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":71:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":72:34)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":72:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":73:20)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":73:13)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":78:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":84:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":80:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":80:45)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":80:41)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":81:34)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":81:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":82:34)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":82:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":83:20)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":83:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":86:18)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":86:24)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":86:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":88:12)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":62:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":91:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":94:1)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_12.cpp":93:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc4, #loc5])
#loc100 = loc(fused[#loc6, #loc7])
#loc101 = loc(fused[#loc8, #loc9])
#loc102 = loc(fused[#loc10, #loc11])
#loc103 = loc(fused[#loc12, #loc13])
#loc104 = loc(fused[#loc15, #loc14])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc20, #loc21, #loc22, #loc17])
#loc108 = loc(fused[#loc23, #loc24])
#loc109 = loc(fused[#loc25, #loc26])
#loc110 = loc(fused[#loc27, #loc28])
#loc111 = loc(fused[#loc29, #loc28])
#loc112 = loc(fused[#loc32, #loc31])
#loc113 = loc(fused[#loc35, #loc34])
#loc114 = loc(fused[#loc38, #loc37])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc43, #loc42])
#loc118 = loc(fused[#loc45, #loc44])
#loc119 = loc(fused[#loc47, #loc46])
#loc120 = loc(fused[#loc49, #loc48])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc60, #loc59])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc63, #loc64])
#loc126 = loc(fused[#loc65, #loc66, #loc67, #loc62])
#loc127 = loc(fused[#loc68, #loc69])
#loc128 = loc(fused[#loc70, #loc71])
#loc129 = loc(fused[#loc72, #loc71])
#loc130 = loc(fused[#loc74, #loc73])
#loc131 = loc(fused[#loc76, #loc75])
#loc132 = loc(fused[#loc78, #loc77])
#loc133 = loc(fused[#loc79, #loc80])
#loc134 = loc(fused[#loc81, #loc82])
#loc135 = loc(fused[#loc83, #loc82])
#loc136 = loc(fused[#loc85, #loc84])
#loc137 = loc(fused[#loc87, #loc86])
#loc138 = loc(fused[#loc89, #loc88])
#loc139 = loc(fused[#loc95, #loc96])
