!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":27:23)
#loc9 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":27:30)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":51:27)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":51:34)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":71:27)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":71:34)
#loc64 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:8)
#loc65 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:14)
#loc102 = loc(fused[#loc8, #loc9])
#loc111 = loc(fused[#loc33, #loc34])
#loc120 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc64, #loc65])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc99)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L9badSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc102)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc101)
  cir.func private @printIntLine(!s32i) loc(#loc103)
  cir.func @_ZN38CWE369_Divide_by_Zero__float_fscanf_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc20)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc106)
    cir.call @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L9badSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc22)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc108)
      %3 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc27)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc28)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc28)
      %6 = cir.binop(div, %3, %5) : !cir.double loc(#loc109)
      %7 = cir.cast(float_to_int, %6 : !cir.double), !s32i loc(#loc109)
      cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc108)
      %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc30)
    } loc(#loc107)
    cir.return loc(#loc17)
  } loc(#loc104)
  cir.func internal private @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L13goodG2BSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc33, #loc34])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc111)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc35)
    %1 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc36)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc37)
    cir.store %1, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc112)
    cir.return loc(#loc32)
  } loc(#loc110)
  cir.func internal private @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc42)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc115)
    cir.call @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L13goodG2BSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc44)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc117)
      %3 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc49)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc50)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc50)
      %6 = cir.binop(div, %3, %5) : !cir.double loc(#loc118)
      %7 = cir.cast(float_to_int, %6 : !cir.double), !s32i loc(#loc118)
      cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc117)
      %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc52)
    } loc(#loc116)
    cir.return loc(#loc39)
  } loc(#loc113)
  cir.func internal private @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L13goodB2GSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc55, #loc56])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc57)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc58)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc60)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc60)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc61)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc58)
    cir.return loc(#loc54)
  } loc(#loc119)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc64, #loc65])) -> !cir.float extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc66)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc67)
    %3 = cir.fabs %2 : !cir.float loc(#loc67)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc123)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc123)
    cir.return %4 : !cir.float loc(#loc123)
  } loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc72)
  cir.func internal private @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc77)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc127)
    cir.call @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L13goodB2GSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc79)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc82)
      %3 = cir.call @_ZSt4fabsf(%2) : (!cir.float) -> !cir.float loc(#loc83)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc83)
      %5 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc84)
      %6 = cir.cmp(gt, %4, %5) : !cir.double, !cir.bool loc(#loc129)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc131)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc90)
        %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc91)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc91)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc132)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc132)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc131)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc93)
      } else {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc72)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc72)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      } loc(#loc130)
    } loc(#loc128)
    cir.return loc(#loc74)
  } loc(#loc125)
  cir.func @_ZN38CWE369_Divide_by_Zero__float_fscanf_434goodEv() extra(#fn_attr) {
    cir.call @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L7goodG2BEv() : () -> () loc(#loc97)
    cir.call @_ZN38CWE369_Divide_by_Zero__float_fscanf_43L7goodB2GEv() : () -> () loc(#loc98)
    cir.return loc(#loc96)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":30:20)
#loc6 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":27:1)
#loc7 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":31:1)
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":28:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":30:5)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":30:13)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":30:27)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":33:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":44:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":35:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":35:11)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":37:12)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":37:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":38:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":39:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":43:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":41:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":41:40)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":41:28)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":41:36)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":42:22)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":42:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":51:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":55:1)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":52:1)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":54:12)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":54:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":57:1)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":68:1)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":59:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":59:11)
#loc42 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":61:12)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":61:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":62:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":63:5)
#loc46 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":67:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":65:9)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":65:40)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":65:28)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":65:36)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":66:22)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":66:9)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":71:1)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":75:1)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":72:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":74:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":74:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":74:20)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":74:27)
#loc62 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":233:3)
#loc63 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:34)
#loc66 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:3)
#loc67 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:28)
#loc68 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:5)
#loc69 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:31)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":91:19)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":77:1)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":93:1)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":79:5)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":79:11)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":81:12)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":81:5)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":82:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":84:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":92:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":84:13)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":84:8)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":84:21)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":85:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":88:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":90:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":86:9)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":86:40)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":86:28)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":86:36)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":87:22)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":87:9)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":91:9)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":95:1)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":99:1)
#loc97 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":97:5)
#loc98 = loc("CWE369_Divide_by_Zero__float_fscanf_43.cpp":98:5)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc6, #loc7])
#loc103 = loc(fused[#loc14, #loc15])
#loc104 = loc(fused[#loc16, #loc17])
#loc105 = loc(fused[#loc18, #loc19])
#loc106 = loc(fused[#loc21, #loc20])
#loc107 = loc(fused[#loc23, #loc24])
#loc108 = loc(fused[#loc25, #loc26])
#loc109 = loc(fused[#loc27, #loc28])
#loc110 = loc(fused[#loc31, #loc32])
#loc112 = loc(fused[#loc37, #loc36])
#loc113 = loc(fused[#loc38, #loc39])
#loc114 = loc(fused[#loc40, #loc41])
#loc115 = loc(fused[#loc43, #loc42])
#loc116 = loc(fused[#loc45, #loc46])
#loc117 = loc(fused[#loc47, #loc48])
#loc118 = loc(fused[#loc49, #loc50])
#loc119 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc62, #loc63])
#loc123 = loc(fused[#loc68, #loc69])
#loc124 = loc(fused[#loc70, #loc71])
#loc125 = loc(fused[#loc73, #loc74])
#loc126 = loc(fused[#loc75, #loc76])
#loc127 = loc(fused[#loc78, #loc77])
#loc128 = loc(fused[#loc80, #loc81])
#loc129 = loc(fused[#loc83, #loc84])
#loc130 = loc(fused[#loc85, #loc86, #loc87, #loc81])
#loc131 = loc(fused[#loc88, #loc89])
#loc132 = loc(fused[#loc90, #loc91])
#loc133 = loc(fused[#loc95, #loc96])
