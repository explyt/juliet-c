!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:37)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc173)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc174)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_11_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc175)
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc176)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc177)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc178)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc20)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc182)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc175)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_11_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc175)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc175)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc189)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc189)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc35)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc35)
    cir.brcond %9 ^bb2, ^bb26 loc(#loc190)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc191)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc40)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb4 loc(#loc192)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc44)
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %16 = cir.binop(sub, %14, %15) : !u64i loc(#loc193)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc46)
    %19 = cir.cmp(gt, %16, %18) : !u64i, !cir.bool loc(#loc194)
    cir.brcond %19 ^bb5, ^bb23 loc(#loc195)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc53)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc197)
    %27 = cir.cast(integral, %26 : !u64i), !s32i loc(#loc197)
    %28 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc179)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
    %30 = cir.call @fgets(%22, %27, %29) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc56)
    %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
    %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc198)
    cir.brcond %33 ^bb7, ^bb20 loc(#loc199)
  ^bb7:  // pred: ^bb6
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc61)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc61)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    cir.br ^bb8 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc68)
    %40 = cir.cmp(gt, %37, %39) : !u64i, !cir.bool loc(#loc202)
    cir.brcond %40 ^bb9, ^bb14 loc(#loc69)
  ^bb9:  // pred: ^bb8
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %42 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc72)
    %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc203)
    %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc73)
    %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc70)
    %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc70)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc74)
    %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc204)
    cir.brcond %50 ^bb10, ^bb11 loc(#loc69)
  ^bb10:  // pred: ^bb9
    %51 = cir.const #true loc(#loc69)
    cir.br ^bb12(%51 : !cir.bool) loc(#loc69)
  ^bb11:  // pred: ^bb9
    %52 = cir.const #false loc(#loc69)
    cir.br ^bb12(%52 : !cir.bool) loc(#loc69)
  ^bb12(%53: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:37)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc69)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%53 : !cir.bool) loc(#loc69)
  ^bb14:  // pred: ^bb8
    %54 = cir.const #false loc(#loc69)
    cir.br ^bb15(%54 : !cir.bool) loc(#loc69)
  ^bb15(%55: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:37)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc69)
  ^bb16:  // pred: ^bb15
    cir.brcond %55 ^bb17, ^bb18 loc(#loc205)
  ^bb17:  // pred: ^bb16
    %56 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc76)
    %58 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %59 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc79)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc206)
    %63 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %57, %63 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    cir.br ^bb18 loc(#loc66)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc66)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc59)
  ^bb20:  // pred: ^bb6
    %64 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
    %65 = cir.cast(array_to_ptrdecay, %64 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %67 = cir.cast(integral, %66 : !s32i), !s8i loc(#loc82)
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %69 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc84)
    %70 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %69 : !u64i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %67, %70 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    cir.br ^bb21 loc(#loc49)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc49)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc43)
  ^bb23:  // 2 preds: ^bb4, ^bb22
    cir.br ^bb24 loc(#loc43)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc39)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc34)
  ^bb26:  // 2 preds: ^bb1, ^bb25
    cir.br ^bb27 loc(#loc34)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc209)
  ^bb28:  // pred: ^bb27
    %71 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %72 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc20)
    %73 = cir.cast(array_to_ptrdecay, %72 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc20)
    %74 = cir.call @popen(%71, %73) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc89)
    cir.store %74, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc210)
    cir.br ^bb29 loc(#loc211)
  ^bb29:  // pred: ^bb28
    %75 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
    %76 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %77 = cir.cast(bitcast, %76 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc95)
    %78 = cir.cmp(ne, %75, %77) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc212)
    cir.brcond %78 ^bb30, ^bb31 loc(#loc213)
  ^bb30:  // pred: ^bb29
    %79 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
    %80 = cir.call @pclose(%79) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc98)
    cir.br ^bb31 loc(#loc93)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc93)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc87)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc24)
  } loc(#loc183)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    cir.return loc(#loc100)
  } loc(#loc214)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc107)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc110)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc174)
    %3 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc224)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc121)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb4 loc(#loc124)
  ^bb3:  // pred: ^bb1
    %11 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc127)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc110)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc110)
    %15 = cir.call @strcat(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc120)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc226)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc132)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc132)
    %19 = cir.call @popen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc133)
    cir.store %19, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc227)
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc138)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc139)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc229)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc230)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
    %25 = cir.call @pclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc142)
    cir.br ^bb9 loc(#loc137)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc137)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc130)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc112)
  } loc(#loc219)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc173)
    %3 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc173)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc173)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc236)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc236)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc153)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc153)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc237)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc156)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc158)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc158)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc238)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc162)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc162)
    %17 = cir.call @popen(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc163)
    cir.store %17, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc239)
    cir.br ^bb6 loc(#loc240)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc168)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc169)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc241)
    cir.brcond %21 ^bb7, ^bb8 loc(#loc242)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc171)
    %23 = cir.call @pclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc172)
    cir.br ^bb8 loc(#loc167)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc167)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc160)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc144)
  } loc(#loc231)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_11.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":118:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":118:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":91:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":91:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":42:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":42:26)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":65:31)
#loc18 = loc("/usr/include/stdio.h":893:1)
#loc19 = loc("/usr/include/stdio.h":894:3)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":75:28)
#loc21 = loc("/usr/include/stdio.h":887:1)
#loc22 = loc("/usr/include/stdio.h":887:36)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":39:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":81:1)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":48:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":48:41)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":73:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":73:15)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":41:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":41:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":43:12)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":43:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":44:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":71:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":44:8)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":44:26)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":45:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":46:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":70:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":48:30)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":48:37)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":50:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":69:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":50:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":50:21)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":50:31)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":51:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":68:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:27)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:32)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:31)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:47)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:51)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:61)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":53:71)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":54:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":62:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":64:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":57:31)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":57:38)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":57:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":57:42)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":61:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:25)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:35)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:40)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:45)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:53)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:54)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":58:59)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":59:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":60:43)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":60:25)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":60:30)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":60:38)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":60:39)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":65:21)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":67:37)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":67:21)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":67:26)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":67:33)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":72:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":80:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":75:22)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":75:16)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":75:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":75:31)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":76:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":79:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":76:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":76:21)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":77:9)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":78:20)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":78:13)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":136:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":140:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":138:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":138:14)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":139:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":139:14)
#loc105 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc106 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":96:19)
#loc108 = loc("/usr/include/string.h":149:1)
#loc109 = loc("/usr/include/string.h":150:14)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":101:22)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":88:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":112:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":104:9)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":104:15)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":90:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":90:12)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":92:12)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":92:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":93:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":102:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":93:8)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":93:27)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":94:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":97:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":99:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":96:9)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":101:9)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":101:16)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":103:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":111:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":106:22)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":106:28)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":106:16)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":106:9)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":106:31)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":107:9)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":110:9)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":107:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":107:21)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":108:9)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":109:20)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":109:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":115:1)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":134:1)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":126:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":126:15)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":117:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":117:12)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":119:12)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":119:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":120:5)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":124:5)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":120:8)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":120:26)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":121:5)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":123:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":123:16)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":123:22)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":125:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":133:5)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":128:22)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":128:28)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":128:16)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":128:9)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":128:31)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":129:9)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":132:9)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":129:13)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":129:21)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":130:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":131:20)
#loc172 = loc("CWE78_OS_Command_Injection__char_console_popen_11.c":131:13)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc5, #loc6])
#loc176 = loc(fused[#loc7, #loc8])
#loc177 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc11, #loc12])
#loc179 = loc(fused[#loc13, #loc14])
#loc180 = loc(fused[#loc15, #loc16])
#loc181 = loc(fused[#loc18, #loc19])
#loc182 = loc(fused[#loc21, #loc22])
#loc183 = loc(fused[#loc23, #loc24])
#loc184 = loc(fused[#loc25, #loc26])
#loc185 = loc(fused[#loc27, #loc28])
#loc186 = loc(fused[#loc29, #loc30])
#loc187 = loc(fused[#loc32, #loc31])
#loc188 = loc(fused[#loc33, #loc34])
#loc189 = loc(fused[#loc35, #loc36])
#loc190 = loc(fused[#loc37, #loc34])
#loc191 = loc(fused[#loc38, #loc39])
#loc192 = loc(fused[#loc42, #loc43])
#loc193 = loc(fused[#loc44, #loc45])
#loc194 = loc(fused[#loc44, #loc46])
#loc195 = loc(fused[#loc47, #loc43])
#loc196 = loc(fused[#loc48, #loc49])
#loc197 = loc(fused[#loc53, #loc54])
#loc198 = loc(fused[#loc56, #loc57])
#loc199 = loc(fused[#loc58, #loc59, #loc60, #loc49])
#loc200 = loc(fused[#loc63, #loc64])
#loc201 = loc(fused[#loc65, #loc66])
#loc202 = loc(fused[#loc67, #loc68])
#loc203 = loc(fused[#loc71, #loc72])
#loc204 = loc(fused[#loc70, #loc74])
#loc205 = loc(fused[#loc75, #loc66])
#loc206 = loc(fused[#loc78, #loc79])
#loc207 = loc(fused[#loc77, #loc76])
#loc208 = loc(fused[#loc83, #loc82])
#loc209 = loc(fused[#loc86, #loc87])
#loc210 = loc(fused[#loc90, #loc91])
#loc211 = loc(fused[#loc92, #loc93])
#loc212 = loc(fused[#loc94, #loc95])
#loc213 = loc(fused[#loc96, #loc93])
#loc214 = loc(fused[#loc99, #loc100])
#loc215 = loc(fused[#loc101, #loc102])
#loc216 = loc(fused[#loc103, #loc104])
#loc217 = loc(fused[#loc105, #loc106])
#loc218 = loc(fused[#loc108, #loc109])
#loc219 = loc(fused[#loc111, #loc112])
#loc220 = loc(fused[#loc113, #loc114])
#loc221 = loc(fused[#loc115, #loc116])
#loc222 = loc(fused[#loc118, #loc117])
#loc223 = loc(fused[#loc119, #loc120])
#loc224 = loc(fused[#loc121, #loc122])
#loc225 = loc(fused[#loc123, #loc124, #loc125, #loc120])
#loc226 = loc(fused[#loc129, #loc130])
#loc227 = loc(fused[#loc134, #loc135])
#loc228 = loc(fused[#loc136, #loc137])
#loc229 = loc(fused[#loc138, #loc139])
#loc230 = loc(fused[#loc140, #loc137])
#loc231 = loc(fused[#loc143, #loc144])
#loc232 = loc(fused[#loc145, #loc146])
#loc233 = loc(fused[#loc147, #loc148])
#loc234 = loc(fused[#loc150, #loc149])
#loc235 = loc(fused[#loc151, #loc152])
#loc236 = loc(fused[#loc153, #loc154])
#loc237 = loc(fused[#loc155, #loc152])
#loc238 = loc(fused[#loc159, #loc160])
#loc239 = loc(fused[#loc164, #loc165])
#loc240 = loc(fused[#loc166, #loc167])
#loc241 = loc(fused[#loc168, #loc169])
#loc242 = loc(fused[#loc170, #loc167])
