!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc116 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:44)
#loc158 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":156:10)
#loc159 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":156:14)
#loc160 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":156:20)
#loc161 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":156:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc248 = loc(fused[#loc158, #loc159])
#loc249 = loc(fused[#loc160, #loc161])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc187)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc188)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc189)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc190)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc191)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc192)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc193)
  cir.func private @close(!s32i) -> !s32i loc(#loc194)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"CWE617_Reachable_Assertion__listen_socket_01.c\00" : !cir.array<!s8i x 47>> : !cir.array<!s8i x 47> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"void CWE617_Reachable_Assertion__listen_socket_01_bad()\00" : !cir.array<!s8i x 56>> : !cir.array<!s8i x 56> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc199)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc200)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc201)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc35)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc27)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc29)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb2 loc(#loc205)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc205)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc41)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc44)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb5 loc(#loc207)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc51)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc208)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc209)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc53)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc210)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc211)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc212)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc61)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc213)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc64)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc214)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc68)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc68)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc69)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc215)
    cir.br ^bb9 loc(#loc216)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc217)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc218)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc218)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc80)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc81)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc220)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc83)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc74)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc221)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc87)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc88)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc89)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc222)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc223)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc91)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc85)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc93)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc94)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc95)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb17 loc(#loc225)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc101)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc227)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc103)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc99)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc106)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc106)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc106)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc106)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc106)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc106)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc106)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc107)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc228)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc109)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb21 loc(#loc230)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc115)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc116)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc116)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc116)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc232)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc116)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc116)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc116)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc116)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc116)
  ^bb26(%84: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc116)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc116)
  ^bb28(%85: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc116)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc233)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc120)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc113)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc121)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc234)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc125)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb3 loc(#loc40)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc40)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc236)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc131)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc238)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc134)
    cir.br ^bb37 loc(#loc129)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc129)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc239)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc138)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc240)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc241)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc141)
    cir.br ^bb41 loc(#loc136)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc136)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc38)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc19)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc19)
  ^bb45:  // pred: ^bb44
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %106 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %107 = cir.cmp(gt, %105, %106) : !s32i, !cir.bool loc(#loc19)
    cir.brcond %107 ^bb46, ^bb47 loc(#loc19)
  ^bb46:  // pred: ^bb45
    cir.br ^bb48 loc(#loc19)
  ^bb47:  // pred: ^bb45
    %108 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc19)
    %109 = cir.cast(array_to_ptrdecay, %108 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc19)
    %110 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc19)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc19)
    %112 = cir.const #cir.int<122> : !s32i loc(#loc19)
    %113 = cir.cast(integral, %112 : !s32i), !u32i loc(#loc19)
    %114 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 56>> loc(#loc19)
    %115 = cir.cast(array_to_ptrdecay, %114 : !cir.ptr<!cir.array<!s8i x 56>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @__assert_fail(%109, %111, %113, %115) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc19)
    cir.br ^bb48 loc(#loc19)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc19)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc19)
  ^bb50:  // pred: ^bb49
    cir.return loc(#loc21)
  } loc(#loc196)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc144)
    cir.return loc(#loc143)
  } loc(#loc242)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc244)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc245)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc155)
  cir.func @main(%arg0: !s32i loc(fused[#loc158, #loc159]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc160, #loc161])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc248)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc249)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc157)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc162)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc163)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc164)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc164)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc165)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc152)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    %8 = cir.get_global @CWE617_Reachable_Assertion__listen_socket_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call @CWE617_Reachable_Assertion__listen_socket_01_good() : () -> () loc(#loc167)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc153)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc154)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    %13 = cir.get_global @CWE617_Reachable_Assertion__listen_socket_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call @CWE617_Reachable_Assertion__listen_socket_01_bad() : () -> () loc(#loc171)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc155)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.return %17 : !s32i loc(#loc252)
  } loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"void goodG2B()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc176)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc182)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc184)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc184)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc176)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc176)
    %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc176)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc176)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc176)
  ^bb4:  // pred: ^bb2
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc176)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc176)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc176)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc176)
    %14 = cir.const #cir.int<138> : !s32i loc(#loc176)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc176)
    %16 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc176)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @__assert_fail(%11, %13, %15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc176)
    cir.br ^bb5 loc(#loc176)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc176)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc176)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc178)
  } loc(#loc253)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_01.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/assert.h":67:1)
#loc18 = loc("/usr/include/assert.h":69:43)
#loc19 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":122:5)
#loc20 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":47:1)
#loc21 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":123:1)
#loc22 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":57:9)
#loc23 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":57:13)
#loc24 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":58:9)
#loc25 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":58:28)
#loc26 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":59:9)
#loc27 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":59:31)
#loc28 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":60:9)
#loc29 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":60:31)
#loc30 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":61:9)
#loc31 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":61:41)
#loc32 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":49:5)
#loc33 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":49:9)
#loc34 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":51:13)
#loc35 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":51:12)
#loc36 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":51:5)
#loc37 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":52:5)
#loc38 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":120:5)
#loc39 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":62:9)
#loc40 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":105:17)
#loc41 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":105:16)
#loc42 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":72:35)
#loc43 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":72:44)
#loc44 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":72:57)
#loc45 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":72:28)
#loc46 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":72:13)
#loc47 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":72:68)
#loc48 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":73:13)
#loc49 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":76:13)
#loc50 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":73:17)
#loc51 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":73:33)
#loc52 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":74:13)
#loc53 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":75:17)
#loc54 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":77:20)
#loc55 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":77:21)
#loc56 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":77:30)
#loc57 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":77:33)
#loc58 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":77:47)
#loc59 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":77:13)
#loc60 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":77:48)
#loc61 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":78:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":78:13)
#loc64 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":79:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":79:13)
#loc68 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":80:38)
#loc69 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":80:32)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":80:13)
#loc72 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":80:46)
#loc73 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:13)
#loc74 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":84:13)
#loc75 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:22)
#loc76 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:54)
#loc77 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:55)
#loc78 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:64)
#loc79 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:78)
#loc80 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:17)
#loc81 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":81:84)
#loc82 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":82:13)
#loc83 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":83:17)
#loc84 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":85:13)
#loc85 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":88:13)
#loc86 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":85:24)
#loc87 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":85:38)
#loc88 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":85:17)
#loc89 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":85:57)
#loc90 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":86:13)
#loc91 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":87:17)
#loc92 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":89:35)
#loc93 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":89:49)
#loc94 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":89:55)
#loc95 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":89:28)
#loc96 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":89:13)
#loc97 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":89:59)
#loc98 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":90:13)
#loc99 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":93:13)
#loc100 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":90:17)
#loc101 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":90:33)
#loc102 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":91:13)
#loc103 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":92:17)
#loc104 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:31)
#loc105 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:45)
#loc106 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:58)
#loc107 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:76)
#loc108 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:79)
#loc109 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:26)
#loc110 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:13)
#loc111 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":95:80)
#loc112 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:13)
#loc113 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":99:13)
#loc114 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:17)
#loc115 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:31)
#loc117 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:47)
#loc118 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":96:61)
#loc119 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":97:13)
#loc120 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":98:17)
#loc121 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":101:39)
#loc122 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":101:25)
#loc123 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":101:13)
#loc124 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":103:25)
#loc125 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":103:20)
#loc126 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":103:13)
#loc127 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":103:36)
#loc128 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":106:9)
#loc129 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":109:9)
#loc130 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":106:13)
#loc131 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":106:29)
#loc132 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":107:9)
#loc133 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":108:26)
#loc134 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":108:13)
#loc135 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":110:9)
#loc136 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":113:9)
#loc137 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":110:13)
#loc138 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":110:29)
#loc139 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":111:9)
#loc140 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":112:26)
#loc141 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":112:13)
#loc142 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":141:1)
#loc143 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":144:1)
#loc144 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":143:5)
#loc145 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":143:13)
#loc146 = loc("/usr/include/stdlib.h":575:1)
#loc147 = loc("/usr/include/stdlib.h":575:41)
#loc148 = loc("/usr/include/time.h":76:1)
#loc149 = loc("/usr/include/time.h":76:38)
#loc150 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc151 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc152 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":161:15)
#loc153 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":163:15)
#loc154 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":166:15)
#loc155 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":168:15)
#loc156 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":156:1)
#loc157 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":171:1)
#loc162 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":157:1)
#loc163 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":159:27)
#loc164 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":159:22)
#loc165 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":159:5)
#loc166 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":161:5)
#loc167 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":162:5)
#loc168 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":162:55)
#loc169 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":163:5)
#loc170 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":166:5)
#loc171 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":167:5)
#loc172 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":167:54)
#loc173 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":168:5)
#loc174 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":170:12)
#loc175 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":170:5)
#loc176 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":138:5)
#loc177 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":130:1)
#loc178 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":139:1)
#loc179 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":132:5)
#loc180 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":132:9)
#loc181 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":134:13)
#loc182 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":134:12)
#loc183 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":134:5)
#loc184 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":136:12)
#loc185 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":136:25)
#loc186 = loc("CWE617_Reachable_Assertion__listen_socket_01.c":136:5)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc15, #loc16])
#loc195 = loc(fused[#loc17, #loc18])
#loc196 = loc(fused[#loc20, #loc21])
#loc197 = loc(fused[#loc22, #loc23])
#loc198 = loc(fused[#loc24, #loc25])
#loc199 = loc(fused[#loc26, #loc27])
#loc200 = loc(fused[#loc28, #loc29])
#loc201 = loc(fused[#loc30, #loc31])
#loc202 = loc(fused[#loc32, #loc33])
#loc203 = loc(fused[#loc36, #loc34])
#loc204 = loc(fused[#loc37, #loc38])
#loc205 = loc(fused[#loc39, #loc40])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc48, #loc49])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc49])
#loc210 = loc(fused[#loc54, #loc55])
#loc211 = loc(fused[#loc57, #loc58])
#loc212 = loc(fused[#loc59, #loc60])
#loc213 = loc(fused[#loc63, #loc61])
#loc214 = loc(fused[#loc67, #loc64])
#loc215 = loc(fused[#loc71, #loc72])
#loc216 = loc(fused[#loc73, #loc74])
#loc217 = loc(fused[#loc76, #loc77])
#loc218 = loc(fused[#loc78, #loc79])
#loc219 = loc(fused[#loc80, #loc81])
#loc220 = loc(fused[#loc82, #loc74])
#loc221 = loc(fused[#loc84, #loc85])
#loc222 = loc(fused[#loc88, #loc89])
#loc223 = loc(fused[#loc90, #loc85])
#loc224 = loc(fused[#loc96, #loc97])
#loc225 = loc(fused[#loc98, #loc99])
#loc226 = loc(fused[#loc100, #loc101])
#loc227 = loc(fused[#loc102, #loc99])
#loc228 = loc(fused[#loc106, #loc107])
#loc229 = loc(fused[#loc110, #loc111])
#loc230 = loc(fused[#loc112, #loc113])
#loc231 = loc(fused[#loc114, #loc115])
#loc232 = loc(fused[#loc117, #loc118])
#loc233 = loc(fused[#loc119, #loc113])
#loc234 = loc(fused[#loc123, #loc121])
#loc235 = loc(fused[#loc126, #loc127])
#loc236 = loc(fused[#loc128, #loc129])
#loc237 = loc(fused[#loc130, #loc131])
#loc238 = loc(fused[#loc132, #loc129])
#loc239 = loc(fused[#loc135, #loc136])
#loc240 = loc(fused[#loc137, #loc138])
#loc241 = loc(fused[#loc139, #loc136])
#loc242 = loc(fused[#loc142, #loc143])
#loc243 = loc(fused[#loc144, #loc145])
#loc244 = loc(fused[#loc146, #loc147])
#loc245 = loc(fused[#loc148, #loc149])
#loc246 = loc(fused[#loc150, #loc151])
#loc247 = loc(fused[#loc156, #loc157])
#loc250 = loc(fused[#loc167, #loc168])
#loc251 = loc(fused[#loc171, #loc172])
#loc252 = loc(fused[#loc175, #loc174])
#loc253 = loc(fused[#loc177, #loc178])
#loc254 = loc(fused[#loc179, #loc180])
#loc255 = loc(fused[#loc183, #loc181])
#loc256 = loc(fused[#loc186, #loc185])
