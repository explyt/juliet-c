!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":44:22)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":44:26)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":161:26)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":161:30)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":131:26)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":131:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc317 = loc(fused[#loc18, #loc19])
#loc367 = loc(fused[#loc151, #loc152])
#loc413 = loc(fused[#loc275, #loc276])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc309)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc311)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc312)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc313)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc314)
  cir.func private @close(!s32i) -> !s32i loc(#loc315)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc18, #loc19])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc317)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc20)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc319)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc320)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc321)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc322)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc28)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc321)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc37)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc38)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc325)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc44)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc327)
              cir.if %55 {
                cir.break loc(#loc46)
              } loc(#loc328)
            } loc(#loc326)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc329)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc330)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc331)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc54)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc54)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc332)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc57)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc333)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc62)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc62)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc63)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc334)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc336)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc337)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc337)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc74)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc75)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc338)
              cir.if %59 {
                cir.break loc(#loc77)
              } loc(#loc339)
            } loc(#loc335)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc79)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc80)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc80)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc80)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc80)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc80)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc80)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc81)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc340)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc82)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc83)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc83)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc341)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc89)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc343)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc90)
                cir.yield %57 : !cir.bool loc(#loc90)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc344)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc90)
                  cir.yield %61 : !cir.bool loc(#loc90)
                }, false {
                  %61 = cir.const #false loc(#loc90)
                  cir.yield %61 : !cir.bool loc(#loc90)
                }) : (!cir.bool) -> !cir.bool loc(#loc90)
                cir.yield %60 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.if %56 {
                cir.break loc(#loc94)
              } loc(#loc345)
            } loc(#loc342)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc95)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc346)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc99)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
          } loc(#loc324)
          cir.yield loc(#loc32)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc102)
          cir.condition(%11) loc(#loc102)
        } loc(#loc323)
      } loc(#loc323)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc106)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc349)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc109)
        } loc(#loc350)
      } loc(#loc348)
    } loc(#loc318)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    cir.return %3 : !s32i loc(#loc351)
  } loc(#loc316)
  cir.func private @printIntLine(!s32i) loc(#loc352)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc353)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc116)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc122)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc125)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc359)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc359)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc359)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %8 = cir.const #cir.int<10> : !s32i loc(#loc135)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc361)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc140)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc140)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc141)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc116)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc116)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc142)
        } loc(#loc362)
      } loc(#loc360)
    } loc(#loc358)
    cir.return loc(#loc118)
  } loc(#loc354)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc364)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc145)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc365)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc147)
    cir.return loc(#loc144)
  } loc(#loc363)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc151, #loc152])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc367)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc150)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc369)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc370)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc371)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc372)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc161)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc161)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc371)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc168)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc169)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc170)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc171)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc375)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc176)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc177)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc177)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc377)
              cir.if %55 {
                cir.break loc(#loc179)
              } loc(#loc378)
            } loc(#loc376)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc379)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc182)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc380)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc381)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc187)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc187)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc382)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc189)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc189)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc190)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc383)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc193)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc193)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc194)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc384)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc199)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc386)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc387)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc387)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc204)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc205)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc205)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc388)
              cir.if %59 {
                cir.break loc(#loc207)
              } loc(#loc389)
            } loc(#loc385)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc208)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc209)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc209)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc210)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc210)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc210)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc210)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc210)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc210)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc210)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc211)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc211)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc390)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc212)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc213)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc213)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc391)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc219)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc219)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc393)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc220)
                cir.yield %57 : !cir.bool loc(#loc220)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc221)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc222)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc394)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc220)
                  cir.yield %61 : !cir.bool loc(#loc220)
                }, false {
                  %61 = cir.const #false loc(#loc220)
                  cir.yield %61 : !cir.bool loc(#loc220)
                }) : (!cir.bool) -> !cir.bool loc(#loc220)
                cir.yield %60 : !cir.bool loc(#loc220)
              }) : (!cir.bool) -> !cir.bool loc(#loc220)
              cir.if %56 {
                cir.break loc(#loc224)
              } loc(#loc395)
            } loc(#loc392)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc225)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc225)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc226)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc227)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc227)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc396)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc228)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc229)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc397)
          } loc(#loc374)
          cir.yield loc(#loc165)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc232)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc232)
          cir.condition(%11) loc(#loc232)
        } loc(#loc373)
      } loc(#loc373)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc235)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc236)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc236)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc399)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc238)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc239)
        } loc(#loc400)
      } loc(#loc398)
    } loc(#loc368)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    cir.return %3 : !s32i loc(#loc401)
  } loc(#loc366)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc242)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc248)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc251)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc407)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc407)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc407)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc261)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc409)
        %10 = cir.ternary(%9, true {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc264)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc410)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc262)
            cir.yield %15 : !cir.bool loc(#loc262)
          }, false {
            %15 = cir.const #false loc(#loc262)
            cir.yield %15 : !cir.bool loc(#loc262)
          }) : (!cir.bool) -> !cir.bool loc(#loc262)
          cir.yield %14 : !cir.bool loc(#loc262)
        }, false {
          %11 = cir.const #false loc(#loc262)
          cir.yield %11 : !cir.bool loc(#loc262)
        }) : (!cir.bool) -> !cir.bool loc(#loc262)
        cir.if %10 {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
          %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc270)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc270)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc270)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc271)
        } else {
          %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc242)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc242)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc272)
        } loc(#loc411)
      } loc(#loc408)
    } loc(#loc406)
    cir.return loc(#loc244)
  } loc(#loc402)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc275, #loc276])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc413)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc274)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc278)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc415)
    cir.return %4 : !s32i loc(#loc415)
  } loc(#loc412)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc417)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc287)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc290)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc421)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc421)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc421)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc299)
        %8 = cir.const #cir.int<10> : !s32i loc(#loc300)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc423)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc305)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc305)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc306)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc307)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc307)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc308)
        } loc(#loc424)
      } loc(#loc422)
    } loc(#loc420)
    cir.return loc(#loc283)
  } loc(#loc416)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_42.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":72:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":44:1)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":103:1)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":45:1)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":46:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":101:5)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":51:9)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":51:13)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":52:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":52:28)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":53:9)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":53:32)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":54:9)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":54:41)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":55:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":90:17)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":56:9)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":89:9)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":65:36)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":65:45)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":65:58)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":65:29)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":65:13)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":65:69)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":66:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":69:13)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":66:17)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":66:34)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":67:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":68:17)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":70:20)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":70:21)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":70:30)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":70:33)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":70:47)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":70:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":70:48)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":71:34)
#loc55 = loc("/usr/include/netinet/in.h":249:5)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":71:13)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":72:39)
#loc58 = loc("/usr/include/netinet/in.h":251:20)
#loc59 = loc("/usr/include/netinet/in.h":33:15)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":72:13)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":72:59)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":73:38)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":73:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":73:13)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":73:46)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:13)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":77:13)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:25)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:58)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:59)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:68)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:82)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:17)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":74:88)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":75:13)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":76:17)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:31)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:46)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:59)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:77)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:80)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:26)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:13)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":80:81)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":81:13)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":84:13)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":81:17)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":81:31)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":81:44)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":81:47)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":81:61)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":82:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":83:17)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":86:39)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":86:25)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":86:13)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":88:25)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":88:20)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":88:13)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":88:36)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":90:16)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":91:9)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":94:9)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":91:13)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":91:30)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":92:9)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":93:26)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":93:13)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":102:12)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":102:5)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc113 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc114 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc115 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":121:23)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":105:1)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":124:1)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":107:5)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":107:9)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":109:13)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":109:12)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":109:5)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":110:22)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":110:12)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":110:5)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":110:26)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":111:5)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":123:5)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":112:9)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":112:30)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":115:9)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":122:9)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":115:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":115:20)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":116:9)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":118:9)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":120:9)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":117:33)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":117:26)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":117:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":121:13)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":242:1)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":246:1)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":244:5)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":244:13)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":245:5)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":245:13)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":161:1)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":220:1)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":162:1)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":163:5)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":218:5)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":168:9)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":168:13)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":169:9)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":169:28)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":170:9)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":170:32)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":171:9)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":171:41)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":172:9)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":207:17)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":173:9)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":206:9)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":182:36)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":182:45)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":182:58)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":182:29)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":182:13)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":182:69)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":183:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":186:13)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":183:17)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":183:34)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":184:13)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":185:17)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":187:20)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":187:21)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":187:30)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":187:33)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":187:47)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":187:13)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":187:48)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":188:34)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":188:13)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":189:49)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":189:39)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":189:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":189:59)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":190:38)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":190:32)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":190:13)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":190:46)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:13)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":194:13)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:25)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:58)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:59)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:68)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:82)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:17)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":191:88)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":192:13)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":193:17)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:31)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:46)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:59)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:77)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:80)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:26)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:13)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":197:81)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":198:13)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":201:13)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":198:17)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":198:31)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":198:44)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":198:47)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":198:61)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":199:13)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":200:17)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":203:39)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":203:25)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":203:13)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":205:25)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":205:20)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":205:13)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":205:36)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":207:16)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":208:9)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":211:9)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":208:13)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":208:30)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":209:9)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":210:26)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":210:13)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":219:12)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":219:5)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":237:23)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":222:1)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":240:1)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":224:5)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":224:9)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":226:13)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":226:12)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":226:5)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":227:26)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":227:12)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":227:5)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":227:30)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":228:5)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":239:5)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":229:9)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":229:30)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":231:9)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":238:9)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":231:13)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":231:21)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":231:23)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":231:26)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":231:34)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":231:36)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":232:9)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":234:9)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":236:9)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":233:33)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":233:26)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":233:13)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":237:13)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":131:1)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":137:1)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":132:1)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":135:12)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":135:5)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":136:12)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":136:5)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":139:1)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":158:1)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":141:5)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":141:9)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":143:13)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":143:12)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":143:5)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":144:26)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":144:12)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":144:5)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":144:30)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":145:5)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":157:5)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":146:9)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":146:30)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":149:9)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":156:9)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":149:13)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":149:20)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":150:9)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":152:9)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":154:9)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":151:33)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":151:26)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":151:13)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":155:23)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_42.c":155:13)
#loc309 = loc(fused[#loc1, #loc2])
#loc310 = loc(fused[#loc3, #loc4])
#loc311 = loc(fused[#loc6, #loc7])
#loc312 = loc(fused[#loc8, #loc9])
#loc313 = loc(fused[#loc10, #loc11])
#loc314 = loc(fused[#loc12, #loc13])
#loc315 = loc(fused[#loc14, #loc15])
#loc316 = loc(fused[#loc16, #loc17])
#loc318 = loc(fused[#loc21, #loc22])
#loc319 = loc(fused[#loc23, #loc24])
#loc320 = loc(fused[#loc25, #loc26])
#loc321 = loc(fused[#loc27, #loc28])
#loc322 = loc(fused[#loc29, #loc30])
#loc323 = loc(fused[#loc31, #loc32])
#loc324 = loc(fused[#loc33, #loc34])
#loc325 = loc(fused[#loc39, #loc40])
#loc326 = loc(fused[#loc41, #loc42])
#loc327 = loc(fused[#loc43, #loc44])
#loc328 = loc(fused[#loc45, #loc42])
#loc329 = loc(fused[#loc47, #loc48])
#loc330 = loc(fused[#loc50, #loc51])
#loc331 = loc(fused[#loc52, #loc53])
#loc332 = loc(fused[#loc56, #loc54])
#loc333 = loc(fused[#loc60, #loc61])
#loc334 = loc(fused[#loc65, #loc66])
#loc335 = loc(fused[#loc67, #loc68])
#loc336 = loc(fused[#loc70, #loc71])
#loc337 = loc(fused[#loc72, #loc73])
#loc338 = loc(fused[#loc74, #loc75])
#loc339 = loc(fused[#loc76, #loc68])
#loc340 = loc(fused[#loc80, #loc81])
#loc341 = loc(fused[#loc84, #loc85])
#loc342 = loc(fused[#loc86, #loc87])
#loc343 = loc(fused[#loc88, #loc89])
#loc344 = loc(fused[#loc91, #loc92])
#loc345 = loc(fused[#loc93, #loc87])
#loc346 = loc(fused[#loc97, #loc95])
#loc347 = loc(fused[#loc100, #loc101])
#loc348 = loc(fused[#loc103, #loc104])
#loc349 = loc(fused[#loc105, #loc106])
#loc350 = loc(fused[#loc107, #loc104])
#loc351 = loc(fused[#loc111, #loc110])
#loc352 = loc(fused[#loc112, #loc113])
#loc353 = loc(fused[#loc114, #loc115])
#loc354 = loc(fused[#loc117, #loc118])
#loc355 = loc(fused[#loc119, #loc120])
#loc356 = loc(fused[#loc123, #loc121])
#loc357 = loc(fused[#loc126, #loc127])
#loc358 = loc(fused[#loc128, #loc129])
#loc359 = loc(fused[#loc130, #loc131])
#loc360 = loc(fused[#loc132, #loc133])
#loc361 = loc(fused[#loc134, #loc135])
#loc362 = loc(fused[#loc136, #loc137, #loc138, #loc133])
#loc363 = loc(fused[#loc143, #loc144])
#loc364 = loc(fused[#loc145, #loc146])
#loc365 = loc(fused[#loc147, #loc148])
#loc366 = loc(fused[#loc149, #loc150])
#loc368 = loc(fused[#loc154, #loc155])
#loc369 = loc(fused[#loc156, #loc157])
#loc370 = loc(fused[#loc158, #loc159])
#loc371 = loc(fused[#loc160, #loc161])
#loc372 = loc(fused[#loc162, #loc163])
#loc373 = loc(fused[#loc164, #loc165])
#loc374 = loc(fused[#loc166, #loc167])
#loc375 = loc(fused[#loc172, #loc173])
#loc376 = loc(fused[#loc174, #loc175])
#loc377 = loc(fused[#loc176, #loc177])
#loc378 = loc(fused[#loc178, #loc175])
#loc379 = loc(fused[#loc180, #loc181])
#loc380 = loc(fused[#loc183, #loc184])
#loc381 = loc(fused[#loc185, #loc186])
#loc382 = loc(fused[#loc188, #loc187])
#loc383 = loc(fused[#loc191, #loc192])
#loc384 = loc(fused[#loc195, #loc196])
#loc385 = loc(fused[#loc197, #loc198])
#loc386 = loc(fused[#loc200, #loc201])
#loc387 = loc(fused[#loc202, #loc203])
#loc388 = loc(fused[#loc204, #loc205])
#loc389 = loc(fused[#loc206, #loc198])
#loc390 = loc(fused[#loc210, #loc211])
#loc391 = loc(fused[#loc214, #loc215])
#loc392 = loc(fused[#loc216, #loc217])
#loc393 = loc(fused[#loc218, #loc219])
#loc394 = loc(fused[#loc221, #loc222])
#loc395 = loc(fused[#loc223, #loc217])
#loc396 = loc(fused[#loc227, #loc225])
#loc397 = loc(fused[#loc230, #loc231])
#loc398 = loc(fused[#loc233, #loc234])
#loc399 = loc(fused[#loc235, #loc236])
#loc400 = loc(fused[#loc237, #loc234])
#loc401 = loc(fused[#loc241, #loc240])
#loc402 = loc(fused[#loc243, #loc244])
#loc403 = loc(fused[#loc245, #loc246])
#loc404 = loc(fused[#loc249, #loc247])
#loc405 = loc(fused[#loc252, #loc253])
#loc406 = loc(fused[#loc254, #loc255])
#loc407 = loc(fused[#loc256, #loc257])
#loc408 = loc(fused[#loc258, #loc259])
#loc409 = loc(fused[#loc260, #loc261])
#loc410 = loc(fused[#loc263, #loc265])
#loc411 = loc(fused[#loc266, #loc267, #loc268, #loc259])
#loc412 = loc(fused[#loc273, #loc274])
#loc414 = loc(fused[#loc279, #loc278])
#loc415 = loc(fused[#loc281, #loc280])
#loc416 = loc(fused[#loc282, #loc283])
#loc417 = loc(fused[#loc284, #loc285])
#loc418 = loc(fused[#loc288, #loc286])
#loc419 = loc(fused[#loc291, #loc292])
#loc420 = loc(fused[#loc293, #loc294])
#loc421 = loc(fused[#loc295, #loc296])
#loc422 = loc(fused[#loc297, #loc298])
#loc423 = loc(fused[#loc299, #loc300])
#loc424 = loc(fused[#loc301, #loc302, #loc303, #loc298])
