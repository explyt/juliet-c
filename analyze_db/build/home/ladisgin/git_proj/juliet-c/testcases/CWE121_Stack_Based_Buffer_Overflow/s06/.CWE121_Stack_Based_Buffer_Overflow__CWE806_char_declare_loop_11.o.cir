!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc187)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc191)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc193)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc195)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc198)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc198)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc26)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc27)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc27)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc31)
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc33)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc202)
  ^bb5:  // pred: ^bb4
    %24 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc191)
    cir.store %24, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc191)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb6 loc(#loc204)
  ^bb6:  // pred: ^bb5
    %28 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc44)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    cir.br ^bb7 loc(#loc204)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %32 = cir.cmp(lt, %30, %31) : !u64i, !cir.bool loc(#loc206)
    cir.brcond %32 ^bb8, ^bb12 loc(#loc48)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc207)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc50)
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc54)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc56)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc209)
    cir.br ^bb7 loc(#loc204)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc43)
  ^bb13:  // pred: ^bb12
    %42 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc57)
    %44 = cir.const #cir.int<50> : !s32i loc(#loc58)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc58)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc60)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb14 loc(#loc37)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc8)
  } loc(#loc190)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc211)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc216)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc218)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc220)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc223)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc223)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc87)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc87)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb4 loc(#loc90)
  ^bb3:  // pred: ^bb1
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc94)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc95)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc95)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc95)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc99)
    %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %22 = cir.const #cir.int<50> : !s32i loc(#loc101)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc101)
    %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc226)
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc227)
  ^bb6:  // pred: ^bb5
    %26 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc216)
    cir.store %26, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc216)
    %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc106)
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc106)
    cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    cir.br ^bb7 loc(#loc229)
  ^bb7:  // pred: ^bb6
    %30 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc112)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc230)
    cir.br ^bb8 loc(#loc229)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc114)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %34 = cir.cmp(lt, %32, %33) : !u64i, !cir.bool loc(#loc231)
    cir.brcond %34 ^bb9, ^bb13 loc(#loc116)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc232)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc119)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc120)
    %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc118)
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc122)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc233)
    cir.br ^bb11 loc(#loc111)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc111)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc124)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb8 loc(#loc229)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc111)
  ^bb14:  // pred: ^bb13
    %44 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc125)
    %46 = cir.const #cir.int<50> : !s32i loc(#loc126)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc126)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc128)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc235)
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb15 loc(#loc105)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc73)
  } loc(#loc215)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc237)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc239)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc241)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc244)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc244)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc146)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc146)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc149)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc150)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc151)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc151)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc151)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc246)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc155)
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc157)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc157)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc159)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc248)
  ^bb5:  // pred: ^bb4
    %24 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc237)
    cir.store %24, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc237)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc162)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc162)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb6 loc(#loc250)
  ^bb6:  // pred: ^bb5
    %28 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc168)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc251)
    cir.br ^bb7 loc(#loc250)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc170)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc171)
    %32 = cir.cmp(lt, %30, %31) : !u64i, !cir.bool loc(#loc252)
    cir.brcond %32 ^bb8, ^bb12 loc(#loc172)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc253)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc176)
    %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc174)
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc178)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc178)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc254)
    cir.br ^bb10 loc(#loc167)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc167)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc180)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb7 loc(#loc250)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc167)
  ^bb13:  // pred: ^bb12
    %42 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc181)
    %44 = cir.const #cir.int<50> : !s32i loc(#loc182)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc182)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc184)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc184)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc256)
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    cir.br ^bb14 loc(#loc161)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc132)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":46:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":35:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":35:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":36:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":36:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":36:19)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":25:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":25:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":26:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":26:24)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":27:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":27:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":28:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":28:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":28:26)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":29:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":31:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":31:22)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":31:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":31:31)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":31:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":31:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":32:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":32:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":32:14)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":32:18)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":32:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":34:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":45:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":37:19)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":37:26)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":37:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":37:30)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":42:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:21)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:25)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":40:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":41:23)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":41:28)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":41:29)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":41:18)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":41:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:35)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":39:34)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":43:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":43:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":43:17)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":43:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":44:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":44:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":109:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":113:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":111:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":111:14)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":112:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":112:14)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":61:19)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":53:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":81:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":70:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":70:25)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":71:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":71:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":71:19)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":55:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":55:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":56:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":56:24)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":57:12)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":57:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":58:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":68:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":58:8)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":58:27)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":59:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":62:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":64:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":61:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":66:16)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":66:22)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":66:27)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":66:30)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":66:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":66:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":67:22)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":67:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":67:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":67:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":67:18)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":69:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":80:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":72:19)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":72:26)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":72:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":72:30)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":77:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:18)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:14)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:21)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:25)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:23)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":75:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":76:23)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":76:28)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":76:29)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":76:18)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":76:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:35)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":74:34)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":78:22)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":78:14)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":78:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":78:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":79:19)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":79:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":84:1)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":107:1)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":96:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":96:25)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":97:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":97:16)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":97:19)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":86:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":86:12)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":87:5)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":87:24)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":88:12)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":88:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":89:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":94:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":89:8)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":89:26)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":90:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":92:16)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":92:22)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":92:27)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":92:30)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":92:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":92:31)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":93:22)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":93:9)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":93:14)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":93:17)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":93:18)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":95:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":106:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":98:19)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":98:26)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":98:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":98:30)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":103:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:18)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:14)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:21)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:25)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:23)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":101:9)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":102:23)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":102:28)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":102:29)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":102:18)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":102:13)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:35)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":100:34)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":104:22)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":104:14)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":104:17)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":104:9)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":105:19)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_11.c":105:9)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc11, #loc13])
#loc194 = loc(fused[#loc14, #loc15])
#loc195 = loc(fused[#loc16, #loc17])
#loc196 = loc(fused[#loc19, #loc18])
#loc197 = loc(fused[#loc20, #loc21])
#loc198 = loc(fused[#loc22, #loc23])
#loc199 = loc(fused[#loc24, #loc21])
#loc200 = loc(fused[#loc29, #loc30])
#loc201 = loc(fused[#loc32, #loc31])
#loc202 = loc(fused[#loc36, #loc37])
#loc203 = loc(fused[#loc40, #loc41])
#loc204 = loc(fused[#loc42, #loc43])
#loc205 = loc(fused[#loc45, #loc44])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc49, #loc43])
#loc208 = loc(fused[#loc54, #loc52])
#loc209 = loc(fused[#loc56, #loc55])
#loc210 = loc(fused[#loc60, #loc57])
#loc211 = loc(fused[#loc63, #loc64])
#loc212 = loc(fused[#loc65, #loc66])
#loc213 = loc(fused[#loc67, #loc68])
#loc214 = loc(fused[#loc69, #loc70])
#loc215 = loc(fused[#loc72, #loc73])
#loc216 = loc(fused[#loc74, #loc75])
#loc217 = loc(fused[#loc76, #loc77])
#loc218 = loc(fused[#loc76, #loc78])
#loc219 = loc(fused[#loc79, #loc80])
#loc220 = loc(fused[#loc81, #loc82])
#loc221 = loc(fused[#loc84, #loc83])
#loc222 = loc(fused[#loc85, #loc86])
#loc223 = loc(fused[#loc87, #loc88])
#loc224 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc225 = loc(fused[#loc97, #loc98])
#loc226 = loc(fused[#loc100, #loc99])
#loc227 = loc(fused[#loc104, #loc105])
#loc228 = loc(fused[#loc108, #loc109])
#loc229 = loc(fused[#loc110, #loc111])
#loc230 = loc(fused[#loc113, #loc112])
#loc231 = loc(fused[#loc114, #loc115])
#loc232 = loc(fused[#loc117, #loc111])
#loc233 = loc(fused[#loc122, #loc120])
#loc234 = loc(fused[#loc124, #loc123])
#loc235 = loc(fused[#loc128, #loc125])
#loc236 = loc(fused[#loc131, #loc132])
#loc237 = loc(fused[#loc133, #loc134])
#loc238 = loc(fused[#loc135, #loc136])
#loc239 = loc(fused[#loc135, #loc137])
#loc240 = loc(fused[#loc138, #loc139])
#loc241 = loc(fused[#loc140, #loc141])
#loc242 = loc(fused[#loc143, #loc142])
#loc243 = loc(fused[#loc144, #loc145])
#loc244 = loc(fused[#loc146, #loc147])
#loc245 = loc(fused[#loc148, #loc145])
#loc246 = loc(fused[#loc153, #loc154])
#loc247 = loc(fused[#loc156, #loc155])
#loc248 = loc(fused[#loc160, #loc161])
#loc249 = loc(fused[#loc164, #loc165])
#loc250 = loc(fused[#loc166, #loc167])
#loc251 = loc(fused[#loc169, #loc168])
#loc252 = loc(fused[#loc170, #loc171])
#loc253 = loc(fused[#loc173, #loc167])
#loc254 = loc(fused[#loc178, #loc176])
#loc255 = loc(fused[#loc180, #loc179])
#loc256 = loc(fused[#loc184, #loc181])
