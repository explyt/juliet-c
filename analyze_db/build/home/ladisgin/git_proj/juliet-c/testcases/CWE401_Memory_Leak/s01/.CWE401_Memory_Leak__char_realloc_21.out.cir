!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE401_Memory_Leak__char_realloc_21.c":27:21)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_21.c":27:28)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_21.c":151:10)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_21.c":151:14)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_21.c":151:20)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_21.c":151:32)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_21.c":60:26)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_21.c":60:33)
#loc139 = loc("CWE401_Memory_Leak__char_realloc_21.c":89:26)
#loc140 = loc("CWE401_Memory_Leak__char_realloc_21.c":89:33)
#loc182 = loc("CWE401_Memory_Leak__char_realloc_21.c":113:25)
#loc183 = loc("CWE401_Memory_Leak__char_realloc_21.c":113:32)
#loc212 = loc(fused[#loc14, #loc15])
#loc233 = loc(fused[#loc68, #loc69])
#loc234 = loc(fused[#loc70, #loc71])
#loc241 = loc(fused[#loc93, #loc94])
#loc257 = loc(fused[#loc139, #loc140])
#loc273 = loc(fused[#loc182, #loc183])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc207)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc209)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc210)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc212)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc210)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc214)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc13)
  } loc(#loc211)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc27)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc29)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc218)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc219)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc220)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc223)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb3 loc(#loc35)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc35)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %24 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc210)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @badSink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.return loc(#loc22)
  } loc(#loc215)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc51)
  } loc(#loc226)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc230)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE401_Memory_Leak__char_realloc_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call @CWE401_Memory_Leak__char_realloc_21_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE401_Memory_Leak__char_realloc_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call @CWE401_Memory_Leak__char_realloc_21_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    cir.return %17 : !s32i loc(#loc237)
  } loc(#loc232)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc239)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc93, #loc94])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc241)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc238)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc243)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb4 loc(#loc100)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc103)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc97)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc92)
  } loc(#loc240)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc245)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc109)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc111)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc113)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc247)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc248)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc249)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    cir.br ^bb1 loc(#loc251)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc252)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc253)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc125)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
    cir.br ^bb3 loc(#loc119)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc119)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc127)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc127)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %24 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc238)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @goodB2G1Sink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.return loc(#loc106)
  } loc(#loc244)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc255)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc139, #loc140])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc257)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.br ^bb1 loc(#loc258)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc255)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc144)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc146)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
    cir.br ^bb3 loc(#loc143)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc138)
  } loc(#loc256)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc152)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc154)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc156)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc156)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc263)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc264)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc265)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc268)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc269)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc166)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc168)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc162)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc170)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc170)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %24 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc255)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.call @goodB2G2Sink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.return loc(#loc149)
  } loc(#loc260)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc271)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc182, #loc183])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc273)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb1 loc(#loc274)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc271)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc275)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc186)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc181)
  } loc(#loc272)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc277)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc193)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc195)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc195)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc195)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc195)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc195)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc195)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc197)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc199)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc199)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc197)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %16 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc271)
    cir.store %15, %16 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
    cir.call @goodG2BSink(%17) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.return loc(#loc190)
  } loc(#loc276)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_21.c":44:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_21.c":25:1)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_21.c":25:24)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_21.c":27:1)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_21.c":34:1)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_21.c":28:1)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_21.c":29:5)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_21.c":33:5)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_21.c":29:8)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_21.c":30:5)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_21.c":36:1)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_21.c":48:1)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_21.c":38:5)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_21.c":38:12)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_21.c":39:12)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_21.c":39:5)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:20)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:28)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:34)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:38)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:49)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:50)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:5)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:5)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:33)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:9)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:17)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:23)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:24)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:30)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:29)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_21.c":44:12)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_21.c":44:5)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_21.c":45:15)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_21.c":45:5)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_21.c":46:17)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_21.c":46:5)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_21.c":47:13)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_21.c":47:5)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_21.c":135:1)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_21.c":140:1)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_21.c":137:5)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_21.c":137:14)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_21.c":138:5)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_21.c":138:14)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_21.c":139:5)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_21.c":139:13)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_21.c":156:15)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_21.c":158:15)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_21.c":161:15)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_21.c":163:15)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_21.c":151:1)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_21.c":166:1)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_21.c":152:1)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_21.c":154:27)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_21.c":154:22)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_21.c":154:5)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_21.c":156:5)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_21.c":157:5)
#loc78 = loc("CWE401_Memory_Leak__char_realloc_21.c":157:46)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_21.c":158:5)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_21.c":161:5)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_21.c":162:5)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_21.c":162:45)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_21.c":163:5)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_21.c":165:12)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_21.c":165:5)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_21.c":55:1)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_21.c":55:29)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_21.c":65:19)
#loc89 = loc("/usr/include/stdlib.h":687:1)
#loc90 = loc("/usr/include/stdlib.h":687:32)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_21.c":60:1)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_21.c":72:1)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_21.c":61:1)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_21.c":62:5)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_21.c":71:5)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_21.c":62:8)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_21.c":63:5)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_21.c":66:5)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_21.c":68:5)
#loc102 = loc("CWE401_Memory_Leak__char_realloc_21.c":65:9)
#loc103 = loc("CWE401_Memory_Leak__char_realloc_21.c":70:9)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_21.c":70:14)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_21.c":74:1)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_21.c":86:1)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_21.c":76:5)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_21.c":76:12)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_21.c":77:12)
#loc110 = loc("CWE401_Memory_Leak__char_realloc_21.c":77:5)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:20)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:28)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:34)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:38)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:49)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:50)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:5)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:5)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:33)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:9)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:17)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:23)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:24)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:30)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:29)
#loc126 = loc("CWE401_Memory_Leak__char_realloc_21.c":82:12)
#loc127 = loc("CWE401_Memory_Leak__char_realloc_21.c":82:18)
#loc128 = loc("CWE401_Memory_Leak__char_realloc_21.c":82:5)
#loc129 = loc("CWE401_Memory_Leak__char_realloc_21.c":83:15)
#loc130 = loc("CWE401_Memory_Leak__char_realloc_21.c":83:5)
#loc131 = loc("CWE401_Memory_Leak__char_realloc_21.c":84:22)
#loc132 = loc("CWE401_Memory_Leak__char_realloc_21.c":84:5)
#loc133 = loc("CWE401_Memory_Leak__char_realloc_21.c":85:18)
#loc134 = loc("CWE401_Memory_Leak__char_realloc_21.c":85:5)
#loc135 = loc("CWE401_Memory_Leak__char_realloc_21.c":56:1)
#loc136 = loc("CWE401_Memory_Leak__char_realloc_21.c":56:29)
#loc137 = loc("CWE401_Memory_Leak__char_realloc_21.c":89:1)
#loc138 = loc("CWE401_Memory_Leak__char_realloc_21.c":96:1)
#loc141 = loc("CWE401_Memory_Leak__char_realloc_21.c":90:1)
#loc142 = loc("CWE401_Memory_Leak__char_realloc_21.c":91:5)
#loc143 = loc("CWE401_Memory_Leak__char_realloc_21.c":95:5)
#loc144 = loc("CWE401_Memory_Leak__char_realloc_21.c":91:8)
#loc145 = loc("CWE401_Memory_Leak__char_realloc_21.c":92:5)
#loc146 = loc("CWE401_Memory_Leak__char_realloc_21.c":94:9)
#loc147 = loc("CWE401_Memory_Leak__char_realloc_21.c":94:14)
#loc148 = loc("CWE401_Memory_Leak__char_realloc_21.c":98:1)
#loc149 = loc("CWE401_Memory_Leak__char_realloc_21.c":110:1)
#loc150 = loc("CWE401_Memory_Leak__char_realloc_21.c":100:5)
#loc151 = loc("CWE401_Memory_Leak__char_realloc_21.c":100:12)
#loc152 = loc("CWE401_Memory_Leak__char_realloc_21.c":101:12)
#loc153 = loc("CWE401_Memory_Leak__char_realloc_21.c":101:5)
#loc154 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:20)
#loc155 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:28)
#loc156 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:34)
#loc157 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:38)
#loc158 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:49)
#loc159 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:50)
#loc160 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:5)
#loc161 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:5)
#loc162 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:33)
#loc163 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:9)
#loc164 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:17)
#loc165 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:23)
#loc166 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:24)
#loc167 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:30)
#loc168 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:29)
#loc169 = loc("CWE401_Memory_Leak__char_realloc_21.c":106:12)
#loc170 = loc("CWE401_Memory_Leak__char_realloc_21.c":106:18)
#loc171 = loc("CWE401_Memory_Leak__char_realloc_21.c":106:5)
#loc172 = loc("CWE401_Memory_Leak__char_realloc_21.c":107:15)
#loc173 = loc("CWE401_Memory_Leak__char_realloc_21.c":107:5)
#loc174 = loc("CWE401_Memory_Leak__char_realloc_21.c":108:22)
#loc175 = loc("CWE401_Memory_Leak__char_realloc_21.c":108:5)
#loc176 = loc("CWE401_Memory_Leak__char_realloc_21.c":109:18)
#loc177 = loc("CWE401_Memory_Leak__char_realloc_21.c":109:5)
#loc178 = loc("CWE401_Memory_Leak__char_realloc_21.c":57:1)
#loc179 = loc("CWE401_Memory_Leak__char_realloc_21.c":57:28)
#loc180 = loc("CWE401_Memory_Leak__char_realloc_21.c":113:1)
#loc181 = loc("CWE401_Memory_Leak__char_realloc_21.c":120:1)
#loc184 = loc("CWE401_Memory_Leak__char_realloc_21.c":114:1)
#loc185 = loc("CWE401_Memory_Leak__char_realloc_21.c":115:5)
#loc186 = loc("CWE401_Memory_Leak__char_realloc_21.c":119:5)
#loc187 = loc("CWE401_Memory_Leak__char_realloc_21.c":115:8)
#loc188 = loc("CWE401_Memory_Leak__char_realloc_21.c":116:5)
#loc189 = loc("CWE401_Memory_Leak__char_realloc_21.c":122:1)
#loc190 = loc("CWE401_Memory_Leak__char_realloc_21.c":133:1)
#loc191 = loc("CWE401_Memory_Leak__char_realloc_21.c":124:5)
#loc192 = loc("CWE401_Memory_Leak__char_realloc_21.c":124:12)
#loc193 = loc("CWE401_Memory_Leak__char_realloc_21.c":125:12)
#loc194 = loc("CWE401_Memory_Leak__char_realloc_21.c":125:5)
#loc195 = loc("CWE401_Memory_Leak__char_realloc_21.c":127:20)
#loc196 = loc("CWE401_Memory_Leak__char_realloc_21.c":127:5)
#loc197 = loc("CWE401_Memory_Leak__char_realloc_21.c":129:5)
#loc198 = loc("CWE401_Memory_Leak__char_realloc_21.c":129:12)
#loc199 = loc("CWE401_Memory_Leak__char_realloc_21.c":129:18)
#loc200 = loc("CWE401_Memory_Leak__char_realloc_21.c":130:15)
#loc201 = loc("CWE401_Memory_Leak__char_realloc_21.c":130:5)
#loc202 = loc("CWE401_Memory_Leak__char_realloc_21.c":131:21)
#loc203 = loc("CWE401_Memory_Leak__char_realloc_21.c":131:5)
#loc204 = loc("CWE401_Memory_Leak__char_realloc_21.c":132:17)
#loc205 = loc("CWE401_Memory_Leak__char_realloc_21.c":132:5)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc208 = loc(fused[#loc5, #loc6])
#loc209 = loc(fused[#loc8, #loc9])
#loc210 = loc(fused[#loc10, #loc11])
#loc211 = loc(fused[#loc12, #loc13])
#loc213 = loc(fused[#loc17, #loc18])
#loc214 = loc(fused[#loc20, #loc18])
#loc215 = loc(fused[#loc21, #loc22])
#loc216 = loc(fused[#loc23, #loc24])
#loc217 = loc(fused[#loc26, #loc25])
#loc218 = loc(fused[#loc30, #loc31])
#loc219 = loc(fused[#loc29, #loc31])
#loc220 = loc(fused[#loc27, #loc32])
#loc221 = loc(fused[#loc33, #loc32])
#loc222 = loc(fused[#loc34, #loc35])
#loc223 = loc(fused[#loc36, #loc37])
#loc224 = loc(fused[#loc38, #loc35])
#loc225 = loc(fused[#loc47, #loc46])
#loc226 = loc(fused[#loc50, #loc51])
#loc227 = loc(fused[#loc52, #loc53])
#loc228 = loc(fused[#loc54, #loc55])
#loc229 = loc(fused[#loc56, #loc57])
#loc230 = loc(fused[#loc58, #loc59])
#loc231 = loc(fused[#loc60, #loc61])
#loc232 = loc(fused[#loc66, #loc67])
#loc235 = loc(fused[#loc77, #loc78])
#loc236 = loc(fused[#loc81, #loc82])
#loc237 = loc(fused[#loc85, #loc84])
#loc238 = loc(fused[#loc86, #loc87])
#loc239 = loc(fused[#loc89, #loc90])
#loc240 = loc(fused[#loc91, #loc92])
#loc242 = loc(fused[#loc96, #loc97])
#loc243 = loc(fused[#loc99, #loc100, #loc101, #loc97])
#loc244 = loc(fused[#loc105, #loc106])
#loc245 = loc(fused[#loc107, #loc108])
#loc246 = loc(fused[#loc110, #loc109])
#loc247 = loc(fused[#loc114, #loc115])
#loc248 = loc(fused[#loc113, #loc115])
#loc249 = loc(fused[#loc111, #loc116])
#loc250 = loc(fused[#loc117, #loc116])
#loc251 = loc(fused[#loc118, #loc119])
#loc252 = loc(fused[#loc120, #loc121])
#loc253 = loc(fused[#loc122, #loc119])
#loc254 = loc(fused[#loc132, #loc131])
#loc255 = loc(fused[#loc135, #loc136])
#loc256 = loc(fused[#loc137, #loc138])
#loc258 = loc(fused[#loc142, #loc143])
#loc259 = loc(fused[#loc145, #loc143])
#loc260 = loc(fused[#loc148, #loc149])
#loc261 = loc(fused[#loc150, #loc151])
#loc262 = loc(fused[#loc153, #loc152])
#loc263 = loc(fused[#loc157, #loc158])
#loc264 = loc(fused[#loc156, #loc158])
#loc265 = loc(fused[#loc154, #loc159])
#loc266 = loc(fused[#loc160, #loc159])
#loc267 = loc(fused[#loc161, #loc162])
#loc268 = loc(fused[#loc163, #loc164])
#loc269 = loc(fused[#loc165, #loc162])
#loc270 = loc(fused[#loc175, #loc174])
#loc271 = loc(fused[#loc178, #loc179])
#loc272 = loc(fused[#loc180, #loc181])
#loc274 = loc(fused[#loc185, #loc186])
#loc275 = loc(fused[#loc188, #loc186])
#loc276 = loc(fused[#loc189, #loc190])
#loc277 = loc(fused[#loc191, #loc192])
#loc278 = loc(fused[#loc194, #loc193])
#loc279 = loc(fused[#loc196, #loc195])
#loc280 = loc(fused[#loc203, #loc202])
