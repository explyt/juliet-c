!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":127:10)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":127:14)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":127:20)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":127:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc177 = loc(fused[#loc122, #loc123])
#loc178 = loc(fused[#loc124, #loc125])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printIntLine(!s32i) loc(#loc139)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc140)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_153badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc143)
    cir.scope {
      %7 = cir.const #cir.int<6> : !s32i loc(#loc17)
      cir.switch (%7 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %8 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc146)
            %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc147)
            %10 = cir.const #cir.int<8> : !u64i loc(#loc148)
            %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc26)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc148)
            cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc24)
            cir.store %13, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc147)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc27)
            %15 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
            %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
            cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc149)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc30)
            %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
            %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc150)
            %20 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
            cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc151)
          } loc(#loc145)
          cir.break loc(#loc35)
        } loc(#loc18)
        cir.case(default, []) {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc37)
          cir.break loc(#loc38)
        } loc(#loc36)
        cir.yield loc(#loc15)
      } loc(#loc15)
    } loc(#loc144)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc41)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc42)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc43)
    cir.return loc(#loc10)
  } loc(#loc141)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc152)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc50)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc155)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc54)
      cir.switch (%7 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc57)
          cir.break loc(#loc58)
        } loc(#loc55)
        cir.case(default, []) {
          cir.scope {
            %8 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc158)
            %9 = cir.const #cir.int<8> : !u64i loc(#loc159)
            %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc158)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc159)
            cir.call @_ZN12TwoIntsClassC2Ev(%11) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc63)
            cir.store %11, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc158)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc65)
            %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
            cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc160)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
            %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc161)
            %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
            cir.store %18, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc162)
          } loc(#loc157)
          cir.break loc(#loc71)
        } loc(#loc59)
        cir.yield loc(#loc52)
      } loc(#loc52)
    } loc(#loc156)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc74)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc75)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc76)
    cir.return loc(#loc47)
  } loc(#loc153)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc165)
    cir.scope {
      %7 = cir.const #cir.int<6> : !s32i loc(#loc85)
      cir.switch (%7 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %8 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc168)
            %9 = cir.const #cir.int<8> : !u64i loc(#loc169)
            %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc168)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc169)
            cir.call @_ZN12TwoIntsClassC2Ev(%11) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc90)
            cir.store %11, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc168)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc92)
            %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc93)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
            cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc170)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc94)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
            %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc171)
            %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc96)
            cir.store %18, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc172)
          } loc(#loc167)
          cir.break loc(#loc98)
        } loc(#loc86)
        cir.case(default, []) {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          cir.break loc(#loc102)
        } loc(#loc99)
        cir.yield loc(#loc83)
      } loc(#loc83)
    } loc(#loc166)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc103)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc105)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc106)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc107)
    cir.return loc(#loc78)
  } loc(#loc163)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_154goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B1Ev() : () -> () loc(#loc110)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15L8goodG2B2Ev() : () -> () loc(#loc111)
    cir.return loc(#loc109)
  } loc(#loc173)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc174)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc119)
  cir.func @main(%arg0: !s32i loc(fused[#loc122, #loc123]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc124, #loc125])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc121)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc126)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc127)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc128)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc128)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc129)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc116)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_154goodEv() : () -> () loc(#loc131)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc117)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc118)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_153badEv() : () -> () loc(#loc134)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc119)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc136)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.return %15 : !s32i loc(#loc179)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":44:19)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":26:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":50:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":28:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":28:20)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":29:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":29:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":30:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":46:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":30:12)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":32:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":33:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":40:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":35:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":35:41)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:49)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:37)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":36:41)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":37:30)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":37:9)
#loc29 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":38:30)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":38:9)
#loc32 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":39:16)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":39:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":41:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":42:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":44:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":45:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":47:18)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":47:24)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":47:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":49:12)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":26:6)
#loc44 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc45 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":57:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":80:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":59:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":59:20)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":60:12)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":60:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":61:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":76:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":61:12)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":63:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":65:19)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":65:9)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":66:9)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":67:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":68:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":74:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":70:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":70:41)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":70:37)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":71:30)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":71:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":72:30)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":72:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":73:16)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":73:9)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":75:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":77:18)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":77:24)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":77:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":79:12)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":57:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":83:1)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":106:1)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":85:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":85:20)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":86:12)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":86:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":87:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":102:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":87:12)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":89:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":90:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":96:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":92:9)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":92:41)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":92:37)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":93:30)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":93:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":94:30)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":94:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":95:16)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":95:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":97:5)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":98:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":100:19)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":100:9)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":101:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":103:18)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":103:24)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":103:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":105:12)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":83:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":108:1)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":112:1)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":110:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":111:5)
#loc112 = loc("/usr/include/stdlib.h":575:1)
#loc113 = loc("/usr/include/stdlib.h":575:41)
#loc114 = loc("/usr/include/time.h":76:1)
#loc115 = loc("/usr/include/time.h":76:38)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":132:15)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":134:15)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":137:15)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":139:15)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":127:1)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":142:1)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":128:1)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":130:27)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":130:22)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":130:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":132:5)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":133:5)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":134:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":137:5)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":138:5)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":139:5)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":141:12)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_15.cpp":141:5)
#loc138 = loc(fused[#loc2, #loc3])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc9, #loc10])
#loc142 = loc(fused[#loc11, #loc12])
#loc143 = loc(fused[#loc14, #loc13])
#loc144 = loc(fused[#loc15, #loc16])
#loc145 = loc(fused[#loc19, #loc20])
#loc146 = loc(fused[#loc21, #loc22])
#loc147 = loc(fused[#loc23, #loc24])
#loc148 = loc(fused[#loc25, #loc24])
#loc149 = loc(fused[#loc28, #loc27])
#loc150 = loc(fused[#loc31, #loc30])
#loc151 = loc(fused[#loc34, #loc33])
#loc152 = loc(fused[#loc44, #loc45])
#loc153 = loc(fused[#loc46, #loc47])
#loc154 = loc(fused[#loc48, #loc49])
#loc155 = loc(fused[#loc51, #loc50])
#loc156 = loc(fused[#loc52, #loc53])
#loc157 = loc(fused[#loc60, #loc61])
#loc158 = loc(fused[#loc62, #loc63])
#loc159 = loc(fused[#loc64, #loc63])
#loc160 = loc(fused[#loc66, #loc65])
#loc161 = loc(fused[#loc68, #loc67])
#loc162 = loc(fused[#loc70, #loc69])
#loc163 = loc(fused[#loc77, #loc78])
#loc164 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc82, #loc81])
#loc166 = loc(fused[#loc83, #loc84])
#loc167 = loc(fused[#loc87, #loc88])
#loc168 = loc(fused[#loc89, #loc90])
#loc169 = loc(fused[#loc91, #loc90])
#loc170 = loc(fused[#loc93, #loc92])
#loc171 = loc(fused[#loc95, #loc94])
#loc172 = loc(fused[#loc97, #loc96])
#loc173 = loc(fused[#loc108, #loc109])
#loc174 = loc(fused[#loc112, #loc113])
#loc175 = loc(fused[#loc114, #loc115])
#loc176 = loc(fused[#loc120, #loc121])
#loc179 = loc(fused[#loc137, #loc136])
