!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":79:10)
#loc62 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":79:14)
#loc63 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":79:20)
#loc64 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":79:32)
#loc136 = loc(fused[#loc61, #loc62])
#loc137 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_cpy_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc124)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc15)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc125)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc19)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc21)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc126)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %25 = cir.const #cir.int<8> : !s32i loc(#loc25)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc25)
    %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %27, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc30)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc31)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %33 = cir.binop(mul, %31, %32) nsw : !s32i loc(#loc32)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc32)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc32)
    cir.libc.memset %36 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc129)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc37)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %41 = cir.binop(mul, %39, %40) nsw : !s32i loc(#loc38)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc38)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc41)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %38, %45 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    %46 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc43)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %49 = cir.call @strcpy(%47, %48) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
    %50 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb2 loc(#loc29)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc121)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_cpy_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc131)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc133)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE127_Buffer_Underread__char_alloca_cpy_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call @CWE127_Buffer_Underread__char_alloca_cpy_01_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE127_Buffer_Underread__char_alloca_cpy_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE127_Buffer_Underread__char_alloca_cpy_01_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.return %17 : !s32i loc(#loc140)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc86)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc86)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc86)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc86)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc88)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc89)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc89)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc93)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc95)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc97)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc102)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %27 = cir.const #cir.int<67> : !s32i loc(#loc103)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc105)
    %30 = cir.binop(mul, %28, %29) nsw : !s32i loc(#loc104)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc104)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc104)
    cir.libc.memset %33 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc109)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %38 = cir.binop(mul, %36, %37) nsw : !s32i loc(#loc110)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc110)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc113)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %35, %42 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    %43 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc114)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc115)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %46 = cir.call @strcpy(%44, %45) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb2 loc(#loc101)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc80)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_01.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":23:1)
#loc6 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":39:1)
#loc7 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":32:9)
#loc8 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":32:24)
#loc9 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":25:5)
#loc10 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":25:12)
#loc11 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":26:5)
#loc12 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":26:33)
#loc13 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":27:12)
#loc14 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":27:24)
#loc15 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":27:29)
#loc16 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":27:33)
#loc17 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":27:5)
#loc18 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":27:34)
#loc19 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":28:25)
#loc20 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":28:5)
#loc21 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":28:16)
#loc22 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":28:20)
#loc23 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":28:21)
#loc24 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":30:12)
#loc25 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":30:25)
#loc26 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":30:23)
#loc27 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":30:5)
#loc28 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":31:5)
#loc29 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":38:5)
#loc30 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":33:16)
#loc31 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":33:22)
#loc32 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":33:27)
#loc33 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":33:31)
#loc34 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":33:33)
#loc35 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":33:9)
#loc36 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":33:34)
#loc37 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":34:25)
#loc38 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":34:14)
#loc39 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":34:18)
#loc40 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":34:20)
#loc41 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":34:9)
#loc42 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":36:9)
#loc43 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":36:16)
#loc44 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":36:22)
#loc45 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":37:19)
#loc46 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":37:9)
#loc47 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":64:1)
#loc48 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":67:1)
#loc49 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":66:5)
#loc50 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":66:13)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":84:15)
#loc56 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":86:15)
#loc57 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":89:15)
#loc58 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":91:15)
#loc59 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":79:1)
#loc60 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":94:1)
#loc65 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":80:1)
#loc66 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":82:27)
#loc67 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":82:22)
#loc68 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":82:5)
#loc69 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":84:5)
#loc70 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":85:5)
#loc71 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":85:54)
#loc72 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":86:5)
#loc73 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":89:5)
#loc74 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":90:5)
#loc75 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":90:53)
#loc76 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":91:5)
#loc77 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":93:12)
#loc78 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":93:5)
#loc79 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":46:1)
#loc80 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":62:1)
#loc81 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":55:9)
#loc82 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":55:24)
#loc83 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":48:5)
#loc84 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":48:12)
#loc85 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":49:5)
#loc86 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":49:33)
#loc87 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":50:12)
#loc88 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":50:24)
#loc89 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":50:29)
#loc90 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":50:33)
#loc91 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":50:5)
#loc92 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":50:34)
#loc93 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":51:25)
#loc94 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":51:5)
#loc95 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":51:16)
#loc96 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":51:20)
#loc97 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":51:21)
#loc98 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":53:12)
#loc99 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":53:5)
#loc100 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":54:5)
#loc101 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":61:5)
#loc102 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":56:16)
#loc103 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":56:22)
#loc104 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":56:27)
#loc105 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":56:31)
#loc106 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":56:33)
#loc107 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":56:9)
#loc108 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":56:34)
#loc109 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":57:25)
#loc110 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":57:14)
#loc111 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":57:18)
#loc112 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":57:20)
#loc113 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":57:9)
#loc114 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":59:9)
#loc115 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":59:16)
#loc116 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":59:22)
#loc117 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":60:19)
#loc118 = loc("CWE127_Buffer_Underread__char_alloca_cpy_01.c":60:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc20, #loc19])
#loc127 = loc(fused[#loc27, #loc25])
#loc128 = loc(fused[#loc28, #loc29])
#loc129 = loc(fused[#loc35, #loc36])
#loc130 = loc(fused[#loc41, #loc37])
#loc131 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc49, #loc50])
#loc133 = loc(fused[#loc51, #loc52])
#loc134 = loc(fused[#loc53, #loc54])
#loc135 = loc(fused[#loc59, #loc60])
#loc138 = loc(fused[#loc70, #loc71])
#loc139 = loc(fused[#loc74, #loc75])
#loc140 = loc(fused[#loc78, #loc77])
#loc141 = loc(fused[#loc79, #loc80])
#loc142 = loc(fused[#loc81, #loc82])
#loc143 = loc(fused[#loc83, #loc84])
#loc144 = loc(fused[#loc85, #loc86])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc94, #loc93])
#loc147 = loc(fused[#loc99, #loc98])
#loc148 = loc(fused[#loc100, #loc101])
#loc149 = loc(fused[#loc107, #loc108])
#loc150 = loc(fused[#loc113, #loc109])
