!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc120)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc121)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc124)
  cir.func private @printIntLine(!s32i) loc(#loc125)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc130)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc130)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc130)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc28)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc28)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc28)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc28)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc28)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc28)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc28)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc28)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc121)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
        %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc132)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc36)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc133)
      } loc(#loc131)
    } loc(#loc129)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc136)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc137)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc138)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc47)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc139)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc140)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc141)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc51)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc52)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc142)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc58)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc145)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc61)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc146)
          cir.condition(%24) loc(#loc146)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc63)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc65)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc66)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc148)
          } loc(#loc147)
          cir.yield loc(#loc57)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc67)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc68)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc149)
          cir.yield loc(#loc144)
        } loc(#loc144)
      } loc(#loc144)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc70)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc71)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc69)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc72)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
      cir.delete.array %18 : <!s32i> loc(#loc73)
    } loc(#loc135)
    cir.return loc(#loc15)
  } loc(#loc126)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc79)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc81)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc155)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc156)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc157)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc90)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc158)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc159)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc160)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc94)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc95)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc161)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc101)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc101)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc164)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc103)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc104)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc165)
          cir.condition(%25) loc(#loc165)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc106)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc109)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc167)
          } loc(#loc166)
          cir.yield loc(#loc100)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc110)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc111)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc168)
          cir.yield loc(#loc163)
        } loc(#loc163)
      } loc(#loc163)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc113)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc114)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc112)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc115)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
      cir.delete.array %19 : <!s32i> loc(#loc116)
    } loc(#loc154)
    cir.return loc(#loc75)
  } loc(#loc150)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":41:23)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":26:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":57:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":28:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":30:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":30:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":30:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":31:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":43:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":32:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":32:45)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":34:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":42:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":34:19)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":34:32)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":34:49)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":34:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":34:59)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":35:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":38:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":40:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":37:25)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":37:20)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":37:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":37:36)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":41:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":44:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":56:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":45:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":45:16)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":45:26)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":46:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":46:14)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":48:21)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":48:28)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":48:38)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":48:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":49:37)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":26:6)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":49:28)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":49:46)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":49:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":50:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":53:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":50:18)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":50:14)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":50:21)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":50:33)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":51:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":52:29)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":52:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":52:24)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":52:25)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":50:40)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":50:39)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":54:22)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":54:33)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":54:34)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":54:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":55:19)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":64:1)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":84:1)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":66:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":66:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":68:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":68:12)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":68:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":70:12)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":70:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":71:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":83:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":72:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":72:16)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":72:26)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":73:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":73:14)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":75:21)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":75:28)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":75:38)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":75:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":76:37)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":64:13)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":76:28)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":76:46)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":76:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":77:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":80:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":77:18)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":77:14)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":77:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":77:33)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":78:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":79:29)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":79:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":79:24)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":79:25)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":77:40)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":77:39)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":81:22)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":81:33)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":81:34)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":81:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":82:19)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":86:1)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":89:1)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_01.cpp":88:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc12, #loc13])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc16, #loc17])
#loc128 = loc(fused[#loc20, #loc18])
#loc129 = loc(fused[#loc21, #loc22])
#loc130 = loc(fused[#loc23, #loc24])
#loc131 = loc(fused[#loc25, #loc26])
#loc132 = loc(fused[#loc30, #loc31])
#loc133 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc134 = loc(fused[#loc37, #loc38])
#loc135 = loc(fused[#loc40, #loc41])
#loc136 = loc(fused[#loc42, #loc43])
#loc137 = loc(fused[#loc42, #loc44])
#loc138 = loc(fused[#loc45, #loc46])
#loc139 = loc(fused[#loc48, #loc49])
#loc140 = loc(fused[#loc47, #loc49])
#loc141 = loc(fused[#loc50, #loc49])
#loc142 = loc(fused[#loc53, #loc54])
#loc143 = loc(fused[#loc55, #loc54])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc59, #loc58])
#loc146 = loc(fused[#loc60, #loc61])
#loc147 = loc(fused[#loc62, #loc57])
#loc148 = loc(fused[#loc64, #loc63])
#loc149 = loc(fused[#loc68, #loc67])
#loc150 = loc(fused[#loc74, #loc75])
#loc151 = loc(fused[#loc76, #loc77])
#loc152 = loc(fused[#loc80, #loc78])
#loc153 = loc(fused[#loc82, #loc81])
#loc154 = loc(fused[#loc83, #loc84])
#loc155 = loc(fused[#loc85, #loc86])
#loc156 = loc(fused[#loc85, #loc87])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc90, #loc92])
#loc160 = loc(fused[#loc93, #loc92])
#loc161 = loc(fused[#loc96, #loc97])
#loc162 = loc(fused[#loc98, #loc97])
#loc163 = loc(fused[#loc99, #loc100])
#loc164 = loc(fused[#loc102, #loc101])
#loc165 = loc(fused[#loc103, #loc104])
#loc166 = loc(fused[#loc105, #loc100])
#loc167 = loc(fused[#loc107, #loc106])
#loc168 = loc(fused[#loc111, #loc110])
#loc169 = loc(fused[#loc117, #loc118])
