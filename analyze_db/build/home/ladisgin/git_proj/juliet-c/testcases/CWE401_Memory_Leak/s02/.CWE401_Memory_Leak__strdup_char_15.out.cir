!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:10)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:14)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:20)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:32)
#loc225 = loc(fused[#loc61, #loc62])
#loc226 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodB2G2.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc205)
  cir.global "private" constant cir_private @__const.goodB2G1.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc206)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_15_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc207)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc20)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc18)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc214)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_15_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc207)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc207)
    %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc24)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc25)
    %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc30)
  ^bb7:  // pred: ^bb2
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc11)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc19)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc216)
  ^bb10:  // pred: ^bb9
    %11 = cir.const #cir.int<7> : !s32i loc(#loc35)
    cir.br ^bb11 loc(#loc33)
  ^bb11:  // pred: ^bb10
    cir.switch.flat %11 : !s32i, ^bb14 [
      7: ^bb13
    ] loc(#loc33)
  ^bb12:  // no predecessors
    cir.br ^bb13 loc(#loc36)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb15 loc(#loc37)
  ^bb14:  // pred: ^bb11
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb15 loc(#loc40)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc34)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc13)
  } loc(#loc210)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc42)
  } loc(#loc217)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc222)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE401_Memory_Leak__strdup_char_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call @CWE401_Memory_Leak__strdup_char_15_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE401_Memory_Leak__strdup_char_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call @CWE401_Memory_Leak__strdup_char_15_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    cir.return %17 : !s32i loc(#loc229)
  } loc(#loc224)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc230)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc85)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc89)
    cir.br ^bb2 loc(#loc87)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc87)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc235)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @__const.goodB2G1.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc206)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc206)
    %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc93)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc94)
    %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb6 loc(#loc92)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc99)
  ^bb7:  // pred: ^bb2
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc88)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc237)
  ^bb10:  // pred: ^bb9
    %11 = cir.const #cir.int<8> : !s32i loc(#loc105)
    cir.br ^bb11 loc(#loc103)
  ^bb11:  // pred: ^bb10
    cir.switch.flat %11 : !s32i, ^bb14 [
      7: ^bb13
    ] loc(#loc103)
  ^bb12:  // no predecessors
    cir.br ^bb13 loc(#loc106)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb15 loc(#loc109)
  ^bb14:  // pred: ^bb11
    %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc110)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb15 loc(#loc112)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc104)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc82)
  } loc(#loc231)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc117)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc121)
    cir.br ^bb2 loc(#loc119)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc119)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc242)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @__const.goodB2G2.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc205)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc205)
    %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc125)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc126)
    %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb6 loc(#loc124)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc131)
  ^bb7:  // pred: ^bb2
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc132)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.br ^bb8 loc(#loc134)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc120)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc244)
  ^bb10:  // pred: ^bb9
    %11 = cir.const #cir.int<7> : !s32i loc(#loc137)
    cir.br ^bb11 loc(#loc135)
  ^bb11:  // pred: ^bb10
    cir.switch.flat %11 : !s32i, ^bb14 [
      7: ^bb13
    ] loc(#loc135)
  ^bb12:  // no predecessors
    cir.br ^bb13 loc(#loc138)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc139)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
    cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc139)
    cir.br ^bb15 loc(#loc141)
  ^bb14:  // pred: ^bb11
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc142)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.br ^bb15 loc(#loc144)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc136)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc114)
  } loc(#loc238)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc147)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc152)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc156)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc154)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc157)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.br ^bb6 loc(#loc160)
  ^bb5:  // pred: ^bb2
    %5 = cir.const #cir.int<100> : !s32i loc(#loc161)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc161)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc161)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc161)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc161)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc161)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc163)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc147)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc147)
    %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc163)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb6 loc(#loc167)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc155)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc251)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<7> : !s32i loc(#loc170)
    cir.br ^bb9 loc(#loc168)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %18 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc168)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc171)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb13 loc(#loc172)
  ^bb12:  // pred: ^bb9
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc173)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    cir.br ^bb13 loc(#loc175)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc169)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc149)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc180)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc184)
    cir.br ^bb2 loc(#loc182)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc182)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc185)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.const #cir.int<100> : !s32i loc(#loc186)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc186)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc186)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc186)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc186)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc186)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc188)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc190)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc190)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc188)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.br ^bb6 loc(#loc193)
  ^bb5:  // pred: ^bb2
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc194)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    cir.br ^bb6 loc(#loc196)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc183)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc257)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<7> : !s32i loc(#loc199)
    cir.br ^bb9 loc(#loc197)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %18 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc197)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc200)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb13 loc(#loc201)
  ^bb12:  // pred: ^bb9
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.br ^bb13 loc(#loc204)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc198)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc177)
  } loc(#loc252)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_15.c":105:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_15.c":105:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_15.c":71:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_15.c":71:27)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_15.c":32:9)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_15.c":32:27)
#loc7 = loc("/usr/include/string.h":187:1)
#loc8 = loc("/usr/include/string.h":188:35)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_15.c":41:19)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_15.c":24:1)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_15.c":56:1)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_15.c":26:5)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_15.c":26:12)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_15.c":27:12)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_15.c":27:5)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_15.c":28:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_15.c":43:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_15.c":28:12)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_15.c":30:5)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_15.c":31:5)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_15.c":37:5)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:16)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:23)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:9)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:31)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_15.c":36:19)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_15.c":36:9)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_15.c":38:5)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_15.c":41:9)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_15.c":42:9)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_15.c":44:5)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_15.c":55:5)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_15.c":44:12)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_15.c":46:5)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_15.c":50:9)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_15.c":53:19)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_15.c":53:9)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_15.c":54:9)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_15.c":196:1)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_15.c":202:1)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_15.c":198:5)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_15.c":198:14)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_15.c":199:5)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_15.c":199:14)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_15.c":200:5)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_15.c":200:14)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_15.c":201:5)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_15.c":201:14)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_15.c":218:15)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_15.c":220:15)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_15.c":223:15)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_15.c":225:15)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:1)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_15.c":228:1)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_15.c":214:1)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_15.c":216:27)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_15.c":216:22)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_15.c":216:5)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_15.c":218:5)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_15.c":219:5)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_15.c":219:45)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_15.c":220:5)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_15.c":223:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_15.c":224:5)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_15.c":224:44)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_15.c":225:5)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_15.c":227:12)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_15.c":227:5)
#loc79 = loc("/usr/include/stdlib.h":687:1)
#loc80 = loc("/usr/include/stdlib.h":687:32)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_15.c":63:1)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_15.c":94:1)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_15.c":65:5)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_15.c":65:12)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_15.c":66:12)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_15.c":66:5)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_15.c":67:5)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_15.c":82:5)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_15.c":67:12)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_15.c":69:5)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_15.c":70:5)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_15.c":76:5)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:16)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:23)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:9)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:31)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_15.c":75:19)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_15.c":75:9)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_15.c":77:5)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_15.c":80:19)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_15.c":80:9)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_15.c":81:9)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_15.c":83:5)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_15.c":93:5)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_15.c":83:12)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_15.c":85:5)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_15.c":87:19)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_15.c":87:9)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_15.c":88:9)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_15.c":91:9)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_15.c":91:14)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_15.c":92:9)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_15.c":97:1)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_15.c":128:1)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_15.c":99:5)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_15.c":99:12)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_15.c":100:12)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_15.c":100:5)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_15.c":101:5)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_15.c":116:5)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_15.c":101:12)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_15.c":103:5)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_15.c":104:5)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_15.c":110:5)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:16)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:23)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:9)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:31)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_15.c":109:19)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_15.c":109:9)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_15.c":111:5)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_15.c":114:19)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_15.c":114:9)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_15.c":115:9)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_15.c":117:5)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_15.c":127:5)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_15.c":117:12)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_15.c":119:5)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_15.c":121:9)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_15.c":121:14)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_15.c":122:9)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_15.c":125:19)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_15.c":125:9)
#loc144 = loc("CWE401_Memory_Leak__strdup_char_15.c":126:9)
#loc145 = loc("/usr/include/string.h":141:1)
#loc146 = loc("/usr/include/string.h":142:14)
#loc147 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:22)
#loc148 = loc("CWE401_Memory_Leak__strdup_char_15.c":131:1)
#loc149 = loc("CWE401_Memory_Leak__strdup_char_15.c":161:1)
#loc150 = loc("CWE401_Memory_Leak__strdup_char_15.c":133:5)
#loc151 = loc("CWE401_Memory_Leak__strdup_char_15.c":133:12)
#loc152 = loc("CWE401_Memory_Leak__strdup_char_15.c":134:12)
#loc153 = loc("CWE401_Memory_Leak__strdup_char_15.c":134:5)
#loc154 = loc("CWE401_Memory_Leak__strdup_char_15.c":135:5)
#loc155 = loc("CWE401_Memory_Leak__strdup_char_15.c":148:5)
#loc156 = loc("CWE401_Memory_Leak__strdup_char_15.c":135:12)
#loc157 = loc("CWE401_Memory_Leak__strdup_char_15.c":137:5)
#loc158 = loc("CWE401_Memory_Leak__strdup_char_15.c":139:19)
#loc159 = loc("CWE401_Memory_Leak__strdup_char_15.c":139:9)
#loc160 = loc("CWE401_Memory_Leak__strdup_char_15.c":140:9)
#loc161 = loc("CWE401_Memory_Leak__strdup_char_15.c":143:24)
#loc162 = loc("CWE401_Memory_Leak__strdup_char_15.c":143:9)
#loc163 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:9)
#loc164 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:16)
#loc165 = loc("CWE401_Memory_Leak__strdup_char_15.c":146:19)
#loc166 = loc("CWE401_Memory_Leak__strdup_char_15.c":146:9)
#loc167 = loc("CWE401_Memory_Leak__strdup_char_15.c":147:9)
#loc168 = loc("CWE401_Memory_Leak__strdup_char_15.c":149:5)
#loc169 = loc("CWE401_Memory_Leak__strdup_char_15.c":160:5)
#loc170 = loc("CWE401_Memory_Leak__strdup_char_15.c":149:12)
#loc171 = loc("CWE401_Memory_Leak__strdup_char_15.c":151:5)
#loc172 = loc("CWE401_Memory_Leak__strdup_char_15.c":155:9)
#loc173 = loc("CWE401_Memory_Leak__strdup_char_15.c":158:19)
#loc174 = loc("CWE401_Memory_Leak__strdup_char_15.c":158:9)
#loc175 = loc("CWE401_Memory_Leak__strdup_char_15.c":159:9)
#loc176 = loc("CWE401_Memory_Leak__strdup_char_15.c":164:1)
#loc177 = loc("CWE401_Memory_Leak__strdup_char_15.c":194:1)
#loc178 = loc("CWE401_Memory_Leak__strdup_char_15.c":166:5)
#loc179 = loc("CWE401_Memory_Leak__strdup_char_15.c":166:12)
#loc180 = loc("CWE401_Memory_Leak__strdup_char_15.c":167:12)
#loc181 = loc("CWE401_Memory_Leak__strdup_char_15.c":167:5)
#loc182 = loc("CWE401_Memory_Leak__strdup_char_15.c":168:5)
#loc183 = loc("CWE401_Memory_Leak__strdup_char_15.c":181:5)
#loc184 = loc("CWE401_Memory_Leak__strdup_char_15.c":168:12)
#loc185 = loc("CWE401_Memory_Leak__strdup_char_15.c":170:5)
#loc186 = loc("CWE401_Memory_Leak__strdup_char_15.c":172:24)
#loc187 = loc("CWE401_Memory_Leak__strdup_char_15.c":172:9)
#loc188 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:9)
#loc189 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:16)
#loc190 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:22)
#loc191 = loc("CWE401_Memory_Leak__strdup_char_15.c":175:19)
#loc192 = loc("CWE401_Memory_Leak__strdup_char_15.c":175:9)
#loc193 = loc("CWE401_Memory_Leak__strdup_char_15.c":176:9)
#loc194 = loc("CWE401_Memory_Leak__strdup_char_15.c":179:19)
#loc195 = loc("CWE401_Memory_Leak__strdup_char_15.c":179:9)
#loc196 = loc("CWE401_Memory_Leak__strdup_char_15.c":180:9)
#loc197 = loc("CWE401_Memory_Leak__strdup_char_15.c":182:5)
#loc198 = loc("CWE401_Memory_Leak__strdup_char_15.c":193:5)
#loc199 = loc("CWE401_Memory_Leak__strdup_char_15.c":182:12)
#loc200 = loc("CWE401_Memory_Leak__strdup_char_15.c":184:5)
#loc201 = loc("CWE401_Memory_Leak__strdup_char_15.c":188:9)
#loc202 = loc("CWE401_Memory_Leak__strdup_char_15.c":191:19)
#loc203 = loc("CWE401_Memory_Leak__strdup_char_15.c":191:9)
#loc204 = loc("CWE401_Memory_Leak__strdup_char_15.c":192:9)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc9, #loc10])
#loc210 = loc(fused[#loc12, #loc13])
#loc211 = loc(fused[#loc14, #loc15])
#loc212 = loc(fused[#loc17, #loc16])
#loc213 = loc(fused[#loc18, #loc19])
#loc214 = loc(fused[#loc22, #loc23])
#loc215 = loc(fused[#loc26, #loc27])
#loc216 = loc(fused[#loc33, #loc34])
#loc217 = loc(fused[#loc41, #loc42])
#loc218 = loc(fused[#loc43, #loc44])
#loc219 = loc(fused[#loc45, #loc46])
#loc220 = loc(fused[#loc47, #loc48])
#loc221 = loc(fused[#loc49, #loc50])
#loc222 = loc(fused[#loc51, #loc52])
#loc223 = loc(fused[#loc53, #loc54])
#loc224 = loc(fused[#loc59, #loc60])
#loc227 = loc(fused[#loc70, #loc71])
#loc228 = loc(fused[#loc74, #loc75])
#loc229 = loc(fused[#loc78, #loc77])
#loc230 = loc(fused[#loc79, #loc80])
#loc231 = loc(fused[#loc81, #loc82])
#loc232 = loc(fused[#loc83, #loc84])
#loc233 = loc(fused[#loc86, #loc85])
#loc234 = loc(fused[#loc87, #loc88])
#loc235 = loc(fused[#loc91, #loc92])
#loc236 = loc(fused[#loc95, #loc96])
#loc237 = loc(fused[#loc103, #loc104])
#loc238 = loc(fused[#loc113, #loc114])
#loc239 = loc(fused[#loc115, #loc116])
#loc240 = loc(fused[#loc118, #loc117])
#loc241 = loc(fused[#loc119, #loc120])
#loc242 = loc(fused[#loc123, #loc124])
#loc243 = loc(fused[#loc127, #loc128])
#loc244 = loc(fused[#loc135, #loc136])
#loc245 = loc(fused[#loc145, #loc146])
#loc246 = loc(fused[#loc148, #loc149])
#loc247 = loc(fused[#loc150, #loc151])
#loc248 = loc(fused[#loc153, #loc152])
#loc249 = loc(fused[#loc154, #loc155])
#loc250 = loc(fused[#loc162, #loc161])
#loc251 = loc(fused[#loc168, #loc169])
#loc252 = loc(fused[#loc176, #loc177])
#loc253 = loc(fused[#loc178, #loc179])
#loc254 = loc(fused[#loc181, #loc180])
#loc255 = loc(fused[#loc182, #loc183])
#loc256 = loc(fused[#loc187, #loc186])
#loc257 = loc(fused[#loc197, #loc198])
