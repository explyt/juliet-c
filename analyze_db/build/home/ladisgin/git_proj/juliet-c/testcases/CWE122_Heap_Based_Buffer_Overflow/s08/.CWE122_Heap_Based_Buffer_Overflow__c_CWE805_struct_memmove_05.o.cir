!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc210)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc211)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc212)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc213)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc214)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc216)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc219)
    cir.br ^bb1 loc(#loc220)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc210)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc25)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc26)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc26)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc222)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc223)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
    cir.store %13, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc225)
    cir.br ^bb3 loc(#loc226)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc227)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc228)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc38)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb5 loc(#loc32)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc229)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc230)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc231)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc45)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.br ^bb12 loc(#loc231)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc48)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc233)
    cir.brcond %26 ^bb13, ^bb17 loc(#loc49)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc234)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb15 loc(#loc44)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc44)
  ^bb16:  // pred: ^bb15
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc60)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc237)
    cir.br ^bb12 loc(#loc231)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc44)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc42)
  ^bb19:  // pred: ^bb18
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc61)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc62)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc63)
    %45 = cir.const #cir.int<8> : !u64i loc(#loc238)
    %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc239)
    cir.libc.memmove %46 bytes from %42 to %40 : !cir.ptr<!void>, !u64i loc(#loc240)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %48 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    cir.call @printStructLine(%49) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc71)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc72)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    cir.br ^bb20 loc(#loc40)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc12)
  } loc(#loc215)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc75)
  } loc(#loc241)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc244)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc84)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc247)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc248)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc250)
    cir.br ^bb1 loc(#loc251)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc244)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc252)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb8 loc(#loc99)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc103)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc253)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc254)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc255)
    cir.store %15, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc256)
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc258)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc259)
  ^bb5:  // pred: ^bb4
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc115)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb6 loc(#loc109)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc96)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc260)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc261)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc262)
  ^bb12:  // pred: ^bb11
    %23 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc122)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc263)
    cir.br ^bb13 loc(#loc262)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc125)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc264)
    cir.brcond %28 ^bb14, ^bb18 loc(#loc126)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc265)
  ^bb15:  // pred: ^bb14
    %29 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %33 = cir.get_member %32[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %35 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %38 = cir.get_member %37[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %34, %38 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb16 loc(#loc121)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc121)
  ^bb17:  // pred: ^bb16
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc135)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc268)
    cir.br ^bb13 loc(#loc262)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc121)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc119)
  ^bb20:  // pred: ^bb19
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc136)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc137)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc138)
    %47 = cir.const #cir.int<8> : !u64i loc(#loc269)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc270)
    cir.libc.memmove %48 bytes from %44 to %42 : !cir.ptr<!void>, !u64i loc(#loc271)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    cir.call @printStructLine(%51) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc146)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc147)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
    cir.br ^bb21 loc(#loc117)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc86)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc273)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc276)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc210)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc278)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc163)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc164)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc279)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc280)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc281)
    cir.store %13, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc282)
    cir.br ^bb3 loc(#loc283)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc284)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc285)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc176)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc170)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc160)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc160)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc286)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc287)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc288)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc183)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc289)
    cir.br ^bb12 loc(#loc288)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc186)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc186)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc290)
    cir.brcond %26 ^bb13, ^bb17 loc(#loc187)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc291)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc190)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc193)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc58)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb15 loc(#loc182)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc182)
  ^bb16:  // pred: ^bb15
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc196)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc294)
    cir.br ^bb12 loc(#loc288)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc182)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc180)
  ^bb19:  // pred: ^bb18
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc197)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc197)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc198)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc199)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc199)
    %45 = cir.const #cir.int<8> : !u64i loc(#loc295)
    %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc296)
    cir.libc.memmove %46 bytes from %42 to %40 : !cir.ptr<!void>, !u64i loc(#loc297)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc204)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %48 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc206)
    cir.call @printStructLine(%49) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc207)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc208)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc208)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc209)
    cir.br ^bb20 loc(#loc178)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc150)
  } loc(#loc272)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":23:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":23:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":28:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":54:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":39:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":39:33)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":41:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":41:20)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":30:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":30:21)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":31:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":31:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":32:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":37:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":32:8)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":33:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":35:33)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":35:40)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":35:43)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":35:63)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":35:64)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":35:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:37)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:21)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:27)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:28)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:34)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":36:33)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":38:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":53:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":40:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":48:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":47:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:18)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:25)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:27)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":44:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":45:36)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":45:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":45:17)
#loc54 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":46:36)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":46:24)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":46:17)
#loc58 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:35)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":43:34)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":50:17)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":50:23)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":50:31)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":50:35)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":50:55)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":50:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":50:56)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":51:26)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":51:31)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":51:32)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":51:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":52:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":52:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":123:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":127:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":125:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":125:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":126:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":126:14)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":24:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":24:26)
#loc82 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc83 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":68:19)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":61:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":92:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":77:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":77:33)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":79:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":79:20)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":63:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":63:21)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":64:12)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":64:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":65:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":75:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":65:8)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":66:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":69:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":71:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":68:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":73:33)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":73:40)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":73:44)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":73:64)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":73:65)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":73:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:37)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:21)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:27)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:28)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:34)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":74:33)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":76:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":91:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":78:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":86:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":85:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:22)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:18)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:25)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:29)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:27)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":82:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":83:36)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":83:24)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":83:17)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":84:36)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":84:24)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":84:17)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:35)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":81:34)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":88:17)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":88:23)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":88:31)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":88:35)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":88:55)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":88:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":88:56)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":89:26)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":89:31)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":89:32)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":89:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":90:14)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":90:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":95:1)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":121:1)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":106:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":106:33)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":108:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":108:20)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":97:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":97:21)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":98:12)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":98:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":99:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":104:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":99:8)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":100:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":102:33)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":102:40)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":102:44)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":102:64)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":102:65)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":102:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:9)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:37)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:13)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:21)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:27)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:28)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:34)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":103:33)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":105:5)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":120:5)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":107:9)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":115:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":114:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:22)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:18)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:25)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:29)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:27)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":111:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":112:36)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":112:24)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":112:17)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":113:36)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":113:24)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":113:17)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:35)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":110:34)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":117:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":117:23)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":117:31)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":117:35)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":117:55)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":117:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":117:56)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":118:26)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":118:31)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":118:32)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":118:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":119:14)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_05.c":119:9)
#loc210 = loc(fused[#loc1, #loc2])
#loc211 = loc(fused[#loc3, #loc4])
#loc212 = loc(fused[#loc5, #loc6])
#loc213 = loc(fused[#loc7, #loc8])
#loc214 = loc(fused[#loc9, #loc10])
#loc215 = loc(fused[#loc11, #loc12])
#loc216 = loc(fused[#loc13, #loc14])
#loc217 = loc(fused[#loc15, #loc16])
#loc218 = loc(fused[#loc17, #loc18])
#loc219 = loc(fused[#loc20, #loc19])
#loc220 = loc(fused[#loc21, #loc22])
#loc221 = loc(fused[#loc24, #loc22])
#loc222 = loc(fused[#loc27, #loc28])
#loc223 = loc(fused[#loc26, #loc28])
#loc224 = loc(fused[#loc25, #loc29])
#loc225 = loc(fused[#loc30, #loc29])
#loc226 = loc(fused[#loc31, #loc32])
#loc227 = loc(fused[#loc33, #loc34])
#loc228 = loc(fused[#loc35, #loc32])
#loc229 = loc(fused[#loc39, #loc40])
#loc230 = loc(fused[#loc41, #loc42])
#loc231 = loc(fused[#loc43, #loc44])
#loc232 = loc(fused[#loc46, #loc45])
#loc233 = loc(fused[#loc47, #loc48])
#loc234 = loc(fused[#loc50, #loc44])
#loc235 = loc(fused[#loc53, #loc51])
#loc236 = loc(fused[#loc57, #loc55])
#loc237 = loc(fused[#loc60, #loc59])
#loc238 = loc(fused[#loc64, #loc65])
#loc239 = loc(fused[#loc63, #loc65])
#loc240 = loc(fused[#loc66, #loc67])
#loc241 = loc(fused[#loc74, #loc75])
#loc242 = loc(fused[#loc76, #loc77])
#loc243 = loc(fused[#loc78, #loc79])
#loc244 = loc(fused[#loc80, #loc81])
#loc245 = loc(fused[#loc82, #loc83])
#loc246 = loc(fused[#loc85, #loc86])
#loc247 = loc(fused[#loc87, #loc88])
#loc248 = loc(fused[#loc89, #loc90])
#loc249 = loc(fused[#loc91, #loc92])
#loc250 = loc(fused[#loc94, #loc93])
#loc251 = loc(fused[#loc95, #loc96])
#loc252 = loc(fused[#loc98, #loc99, #loc100, #loc96])
#loc253 = loc(fused[#loc104, #loc105])
#loc254 = loc(fused[#loc103, #loc105])
#loc255 = loc(fused[#loc102, #loc106])
#loc256 = loc(fused[#loc107, #loc106])
#loc257 = loc(fused[#loc108, #loc109])
#loc258 = loc(fused[#loc110, #loc111])
#loc259 = loc(fused[#loc112, #loc109])
#loc260 = loc(fused[#loc116, #loc117])
#loc261 = loc(fused[#loc118, #loc119])
#loc262 = loc(fused[#loc120, #loc121])
#loc263 = loc(fused[#loc123, #loc122])
#loc264 = loc(fused[#loc124, #loc125])
#loc265 = loc(fused[#loc127, #loc121])
#loc266 = loc(fused[#loc130, #loc128])
#loc267 = loc(fused[#loc133, #loc131])
#loc268 = loc(fused[#loc135, #loc134])
#loc269 = loc(fused[#loc139, #loc140])
#loc270 = loc(fused[#loc138, #loc140])
#loc271 = loc(fused[#loc141, #loc142])
#loc272 = loc(fused[#loc149, #loc150])
#loc273 = loc(fused[#loc151, #loc152])
#loc274 = loc(fused[#loc153, #loc154])
#loc275 = loc(fused[#loc155, #loc156])
#loc276 = loc(fused[#loc158, #loc157])
#loc277 = loc(fused[#loc159, #loc160])
#loc278 = loc(fused[#loc162, #loc160])
#loc279 = loc(fused[#loc165, #loc166])
#loc280 = loc(fused[#loc164, #loc166])
#loc281 = loc(fused[#loc163, #loc167])
#loc282 = loc(fused[#loc168, #loc167])
#loc283 = loc(fused[#loc169, #loc170])
#loc284 = loc(fused[#loc171, #loc172])
#loc285 = loc(fused[#loc173, #loc170])
#loc286 = loc(fused[#loc177, #loc178])
#loc287 = loc(fused[#loc179, #loc180])
#loc288 = loc(fused[#loc181, #loc182])
#loc289 = loc(fused[#loc184, #loc183])
#loc290 = loc(fused[#loc185, #loc186])
#loc291 = loc(fused[#loc188, #loc182])
#loc292 = loc(fused[#loc191, #loc189])
#loc293 = loc(fused[#loc194, #loc192])
#loc294 = loc(fused[#loc196, #loc195])
#loc295 = loc(fused[#loc200, #loc201])
#loc296 = loc(fused[#loc199, #loc201])
#loc297 = loc(fused[#loc202, #loc203])
