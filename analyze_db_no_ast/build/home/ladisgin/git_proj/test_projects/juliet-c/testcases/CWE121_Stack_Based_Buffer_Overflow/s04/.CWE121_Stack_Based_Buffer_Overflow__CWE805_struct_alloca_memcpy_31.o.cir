!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc111)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc115)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc114)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc115)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc116)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc118)
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
      cir.store %20, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
      %21 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc119)
      cir.scope {
        %22 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc121)
        cir.scope {
          %34 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc123)
          cir.scope {
            %35 = cir.const #cir.int<0> : !s32i loc(#loc29)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc29)
            cir.store %36, %34 : !u64i, !cir.ptr<!u64i> loc(#loc125)
            cir.for : cond {
              %37 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %38 = cir.const #cir.int<100> : !s32i loc(#loc32)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc32)
              %40 = cir.cmp(lt, %37, %39) : !u64i, !s32i loc(#loc126)
              %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc33)
              cir.condition(%41) loc(#loc33)
            } body {
              cir.scope {
                %37 = cir.const #cir.int<0> : !s32i loc(#loc35)
                %38 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc36)
                %39 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
                cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc128)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc39)
                %43 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc40)
                %44 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %46 = cir.get_member %45[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc129)
              } loc(#loc127)
              cir.yield loc(#loc28)
            } step {
              %37 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc44)
              cir.store %38, %34 : !u64i, !cir.ptr<!u64i> loc(#loc130)
              cir.yield loc(#loc124)
            } loc(#loc124)
          } loc(#loc124)
        } loc(#loc122)
        %23 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
        %25 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc46)
        %27 = cir.const #cir.int<100> : !s32i loc(#loc47)
        %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc47)
        %29 = cir.const #cir.int<8> : !u64i loc(#loc131)
        %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc132)
        cir.libc.memcpy %30 bytes from %26 to %24 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc133)
        %31 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
        %32 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %33 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %32 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
        cir.call @printStructLine(%33) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc55)
      } loc(#loc120)
    } loc(#loc117)
    cir.return loc(#loc4)
  } loc(#loc112)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc134)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc65)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc65)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc65)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc65)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
    %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc139)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc67)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc67)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc67)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc67)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc67)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.store %16, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc139)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc140)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc142)
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
      cir.store %20, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc142)
      %21 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
      cir.scope {
        %22 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc145)
        cir.scope {
          %34 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
          cir.scope {
            %35 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc86)
            cir.store %36, %34 : !u64i, !cir.ptr<!u64i> loc(#loc149)
            cir.for : cond {
              %37 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc88)
              %38 = cir.const #cir.int<100> : !s32i loc(#loc89)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc89)
              %40 = cir.cmp(lt, %37, %39) : !u64i, !s32i loc(#loc150)
              %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc90)
              cir.condition(%41) loc(#loc90)
            } body {
              cir.scope {
                %37 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %38 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc93)
                %39 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
                %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
                %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
                cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc152)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc95)
                %43 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc96)
                %44 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
                %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
                %46 = cir.get_member %45[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc153)
              } loc(#loc151)
              cir.yield loc(#loc85)
            } step {
              %37 = cir.load %34 : !cir.ptr<!u64i>, !u64i loc(#loc98)
              %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc99)
              cir.store %38, %34 : !u64i, !cir.ptr<!u64i> loc(#loc154)
              cir.yield loc(#loc148)
            } loc(#loc148)
          } loc(#loc148)
        } loc(#loc146)
        %23 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc100)
        %25 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc101)
        %27 = cir.const #cir.int<100> : !s32i loc(#loc102)
        %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc102)
        %29 = cir.const #cir.int<8> : !u64i loc(#loc155)
        %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc156)
        cir.libc.memcpy %30 bytes from %26 to %24 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc157)
        %31 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
        %32 = cir.const #cir.int<0> : !s32i loc(#loc108)
        %33 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %32 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
        cir.call @printStructLine(%33) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc110)
      } loc(#loc144)
    } loc(#loc141)
    cir.return loc(#loc61)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":48:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":23:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":24:54)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":25:55)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":28:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":28:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":47:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":30:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":30:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":31:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":31:32)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":32:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":46:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":33:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":33:37)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":34:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":42:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":35:17)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":35:24)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":41:17)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:31)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":38:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":39:40)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":39:28)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":39:21)
#loc38 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":40:40)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":40:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":40:21)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:39)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":37:38)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":44:20)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":44:26)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":44:34)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":44:38)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":44:58)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":44:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":44:59)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":45:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":45:35)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":45:36)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":45:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":83:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":86:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":85:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":85:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":55:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":81:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":57:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":57:21)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":58:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":58:54)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":59:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":59:55)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":61:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":61:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":62:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":80:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":63:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":63:36)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":64:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":64:32)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":65:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":79:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":66:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":66:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":67:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":75:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":68:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":68:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":74:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:26)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:22)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:29)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:33)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:31)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":71:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":72:40)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":72:28)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":72:21)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":73:40)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":73:28)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":73:21)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:39)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":70:38)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":77:20)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":77:26)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":77:34)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":77:38)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":77:58)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":77:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":77:59)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":78:30)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":78:35)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":78:36)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_31.c":78:13)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc12, #loc11])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc21, #loc22])
#loc122 = loc(fused[#loc23, #loc24])
#loc123 = loc(fused[#loc25, #loc26])
#loc124 = loc(fused[#loc27, #loc28])
#loc125 = loc(fused[#loc30, #loc29])
#loc126 = loc(fused[#loc31, #loc32])
#loc127 = loc(fused[#loc34, #loc28])
#loc128 = loc(fused[#loc37, #loc35])
#loc129 = loc(fused[#loc41, #loc39])
#loc130 = loc(fused[#loc44, #loc43])
#loc131 = loc(fused[#loc48, #loc49])
#loc132 = loc(fused[#loc47, #loc49])
#loc133 = loc(fused[#loc50, #loc51])
#loc134 = loc(fused[#loc56, #loc57])
#loc135 = loc(fused[#loc58, #loc59])
#loc136 = loc(fused[#loc60, #loc61])
#loc137 = loc(fused[#loc62, #loc63])
#loc138 = loc(fused[#loc64, #loc65])
#loc139 = loc(fused[#loc66, #loc67])
#loc140 = loc(fused[#loc69, #loc68])
#loc141 = loc(fused[#loc70, #loc71])
#loc142 = loc(fused[#loc72, #loc73])
#loc143 = loc(fused[#loc74, #loc75])
#loc144 = loc(fused[#loc76, #loc77])
#loc145 = loc(fused[#loc78, #loc79])
#loc146 = loc(fused[#loc80, #loc81])
#loc147 = loc(fused[#loc82, #loc83])
#loc148 = loc(fused[#loc84, #loc85])
#loc149 = loc(fused[#loc87, #loc86])
#loc150 = loc(fused[#loc88, #loc89])
#loc151 = loc(fused[#loc91, #loc85])
#loc152 = loc(fused[#loc94, #loc92])
#loc153 = loc(fused[#loc97, #loc95])
#loc154 = loc(fused[#loc99, #loc98])
#loc155 = loc(fused[#loc103, #loc104])
#loc156 = loc(fused[#loc102, #loc104])
#loc157 = loc(fused[#loc105, #loc106])
