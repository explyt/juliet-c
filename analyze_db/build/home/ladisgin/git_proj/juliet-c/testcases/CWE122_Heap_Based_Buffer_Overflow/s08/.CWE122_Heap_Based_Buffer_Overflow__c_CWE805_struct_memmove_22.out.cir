!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":128:10)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":128:14)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":128:20)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":128:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc234 = loc(fused[#loc82, #loc83])
#loc235 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc202)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_badSource(!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc203)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc204)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc205)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc207)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc210)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_badGlobal : !cir.ptr<!s32i> loc(#loc202)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    %7 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_badSource(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %7, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc214)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc215)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb4 loc(#loc215)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc34)
    %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc217)
    cir.brcond %13 ^bb5, ^bb9 loc(#loc35)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc46)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc221)
    cir.br ^bb4 loc(#loc215)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc30)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc48)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc49)
    %32 = cir.const #cir.int<8> : !u64i loc(#loc222)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc223)
    cir.libc.memmove %33 bytes from %29 to %27 : !cir.ptr<!void>, !u64i loc(#loc224)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %35 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    cir.call @printStructLine(%36) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc57)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc58)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc10)
  } loc(#loc206)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc225)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc226)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc65)
  } loc(#loc227)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc230)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc231)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    cir.return %17 : !s32i loc(#loc238)
  } loc(#loc233)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B1Source(!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc239)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc241)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc244)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc225)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %7 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B1Source(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %7, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc248)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc249)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc124)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc250)
    cir.br ^bb4 loc(#loc249)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc127)
    %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc251)
    cir.brcond %13 ^bb5, ^bb9 loc(#loc128)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc252)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc137)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb4 loc(#loc249)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc123)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc121)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc138)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc139)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc140)
    %32 = cir.const #cir.int<8> : !u64i loc(#loc256)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc257)
    cir.libc.memmove %33 bytes from %29 to %27 : !cir.ptr<!void>, !u64i loc(#loc258)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %35 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    cir.call @printStructLine(%36) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc148)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc149)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
    cir.br ^bb12 loc(#loc119)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc103)
  } loc(#loc240)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B2Source(!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc259)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc261)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc262)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc264)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc226)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
    %7 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B2Source(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
    cir.store %7, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc268)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc269)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc175)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb4 loc(#loc269)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc178)
    %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc271)
    cir.brcond %13 ^bb5, ^bb9 loc(#loc179)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc272)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc182)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb7 loc(#loc174)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc174)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc187)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc188)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc275)
    cir.br ^bb4 loc(#loc269)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc174)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc172)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc189)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc190)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc191)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc191)
    %32 = cir.const #cir.int<8> : !u64i loc(#loc276)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc277)
    cir.libc.memmove %33 bytes from %29 to %27 : !cir.ptr<!void>, !u64i loc(#loc278)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %35 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    cir.call @printStructLine(%36) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc199)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc200)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc200)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc201)
    cir.br ^bb12 loc(#loc170)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc154)
  } loc(#loc260)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":22:79)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":24:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":24:109)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":26:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":48:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":33:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":33:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":35:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":35:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":28:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":28:21)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":29:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":29:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":30:79)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":30:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":31:84)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":31:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":31:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":31:88)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":32:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":47:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":34:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":42:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":41:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:22)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:18)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:25)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:27)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":38:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":39:36)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":39:24)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":39:17)
#loc40 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":40:36)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":40:24)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":40:17)
#loc44 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:35)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":37:34)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":44:17)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":44:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":44:31)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":44:35)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":44:55)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":44:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":44:56)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":45:26)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":45:31)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":45:32)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":45:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":46:14)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":46:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":55:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":55:84)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":56:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":56:84)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":112:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":116:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":114:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":114:14)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":115:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":115:14)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":133:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":135:15)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":138:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":140:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":128:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":143:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":129:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":131:27)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":131:22)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":131:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":133:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":134:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":134:72)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":135:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":138:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":139:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":139:71)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":140:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":142:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":142:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":59:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":59:114)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":61:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":83:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":68:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":68:33)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":70:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":70:20)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":63:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":63:21)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":64:12)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":64:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":65:84)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":65:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":66:89)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":66:12)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":66:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":66:93)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":67:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":82:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":69:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":77:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":76:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:22)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:18)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:25)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:29)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:27)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":73:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":74:36)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":74:24)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":74:17)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":75:36)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":75:24)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":75:17)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:35)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":72:34)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":79:17)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":79:23)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":79:31)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":79:35)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":79:55)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":79:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":79:56)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":80:26)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":80:31)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":80:32)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":80:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":81:14)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":81:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":86:1)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":86:114)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":88:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":110:1)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":95:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":95:33)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":97:13)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":97:20)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":90:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":90:21)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":91:12)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":91:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":92:84)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":92:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":93:89)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":93:12)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":93:5)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":93:93)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":94:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":109:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":96:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":104:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":103:13)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:22)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:18)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:25)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:29)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:27)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":100:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":101:36)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":101:24)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":101:17)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":102:36)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":102:24)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":102:17)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:35)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":99:34)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":106:17)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":106:23)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":106:31)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":106:35)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":106:55)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":106:9)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":106:56)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":107:26)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":107:31)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":107:32)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":107:9)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":108:14)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22a.c":108:9)
#loc202 = loc(fused[#loc1, #loc2])
#loc203 = loc(fused[#loc3, #loc4])
#loc204 = loc(fused[#loc5, #loc6])
#loc205 = loc(fused[#loc7, #loc8])
#loc206 = loc(fused[#loc9, #loc10])
#loc207 = loc(fused[#loc11, #loc12])
#loc208 = loc(fused[#loc13, #loc14])
#loc209 = loc(fused[#loc15, #loc16])
#loc210 = loc(fused[#loc18, #loc17])
#loc211 = loc(fused[#loc20, #loc19])
#loc212 = loc(fused[#loc23, #loc24])
#loc213 = loc(fused[#loc25, #loc26])
#loc214 = loc(fused[#loc27, #loc28])
#loc215 = loc(fused[#loc29, #loc30])
#loc216 = loc(fused[#loc32, #loc31])
#loc217 = loc(fused[#loc33, #loc34])
#loc218 = loc(fused[#loc36, #loc30])
#loc219 = loc(fused[#loc39, #loc37])
#loc220 = loc(fused[#loc43, #loc41])
#loc221 = loc(fused[#loc46, #loc45])
#loc222 = loc(fused[#loc50, #loc51])
#loc223 = loc(fused[#loc49, #loc51])
#loc224 = loc(fused[#loc52, #loc53])
#loc225 = loc(fused[#loc60, #loc61])
#loc226 = loc(fused[#loc62, #loc63])
#loc227 = loc(fused[#loc64, #loc65])
#loc228 = loc(fused[#loc66, #loc67])
#loc229 = loc(fused[#loc68, #loc69])
#loc230 = loc(fused[#loc70, #loc71])
#loc231 = loc(fused[#loc72, #loc73])
#loc232 = loc(fused[#loc74, #loc75])
#loc233 = loc(fused[#loc80, #loc81])
#loc236 = loc(fused[#loc91, #loc92])
#loc237 = loc(fused[#loc95, #loc96])
#loc238 = loc(fused[#loc99, #loc98])
#loc239 = loc(fused[#loc100, #loc101])
#loc240 = loc(fused[#loc102, #loc103])
#loc241 = loc(fused[#loc104, #loc105])
#loc242 = loc(fused[#loc106, #loc107])
#loc243 = loc(fused[#loc108, #loc109])
#loc244 = loc(fused[#loc111, #loc110])
#loc245 = loc(fused[#loc113, #loc112])
#loc246 = loc(fused[#loc116, #loc117])
#loc247 = loc(fused[#loc118, #loc119])
#loc248 = loc(fused[#loc120, #loc121])
#loc249 = loc(fused[#loc122, #loc123])
#loc250 = loc(fused[#loc125, #loc124])
#loc251 = loc(fused[#loc126, #loc127])
#loc252 = loc(fused[#loc129, #loc123])
#loc253 = loc(fused[#loc132, #loc130])
#loc254 = loc(fused[#loc135, #loc133])
#loc255 = loc(fused[#loc137, #loc136])
#loc256 = loc(fused[#loc141, #loc142])
#loc257 = loc(fused[#loc140, #loc142])
#loc258 = loc(fused[#loc143, #loc144])
#loc259 = loc(fused[#loc151, #loc152])
#loc260 = loc(fused[#loc153, #loc154])
#loc261 = loc(fused[#loc155, #loc156])
#loc262 = loc(fused[#loc157, #loc158])
#loc263 = loc(fused[#loc159, #loc160])
#loc264 = loc(fused[#loc162, #loc161])
#loc265 = loc(fused[#loc164, #loc163])
#loc266 = loc(fused[#loc167, #loc168])
#loc267 = loc(fused[#loc169, #loc170])
#loc268 = loc(fused[#loc171, #loc172])
#loc269 = loc(fused[#loc173, #loc174])
#loc270 = loc(fused[#loc176, #loc175])
#loc271 = loc(fused[#loc177, #loc178])
#loc272 = loc(fused[#loc180, #loc174])
#loc273 = loc(fused[#loc183, #loc181])
#loc274 = loc(fused[#loc186, #loc184])
#loc275 = loc(fused[#loc188, #loc187])
#loc276 = loc(fused[#loc192, #loc193])
#loc277 = loc(fused[#loc191, #loc193])
#loc278 = loc(fused[#loc194, #loc195])
