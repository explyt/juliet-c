!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc18 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":49:23)
#loc19 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":49:30)
#loc127 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":127:27)
#loc128 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":127:34)
#loc149 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":147:27)
#loc150 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":147:34)
#loc238 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":238:8)
#loc239 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":238:14)
#loc283 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":244:10)
#loc284 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":244:14)
#loc285 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":244:20)
#loc286 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":244:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc307 = loc(fused[#loc18, #loc19])
#loc347 = loc(fused[#loc127, #loc128])
#loc356 = loc(fused[#loc149, #loc150])
#loc389 = loc(fused[#loc238, #loc239])
#loc404 = loc(fused[#loc283, #loc284])
#loc405 = loc(fused[#loc285, #loc286])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc299)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc301)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc302)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc303)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc304)
  cir.func private @close(!s32i) -> !s32i loc(#loc305)
  cir.func internal private @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L9badSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc18, #loc19])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc307)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc20)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc309)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc310)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc311)
      %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc312)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc28)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc311)
      cir.scope {
        cir.do {
          %7 = cir.const #cir.int<2> : !s32i loc(#loc33)
          %8 = cir.const #cir.int<1> : !u32i loc(#loc34)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc34)
          %10 = cir.const #cir.int<6> : !u32i loc(#loc35)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc35)
          %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc36)
          cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc314)
          cir.scope {
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc42)
            %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc316)
            cir.if %49 {
              cir.break loc(#loc44)
            } loc(#loc317)
          } loc(#loc315)
          %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc318)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc319)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc320)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc52)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc52)
          %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc321)
          %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc55)
          %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc322)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc60)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc60)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc61)
          %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc323)
          cir.scope {
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %47 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc325)
            %48 = cir.const #cir.int<16> : !u64i loc(#loc326)
            %49 = cir.cast(integral, %48 : !u64i), !u32i loc(#loc326)
            %50 = cir.call @connect(%46, %47, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc72)
            %51 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc73)
            %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc327)
            cir.if %53 {
              cir.break loc(#loc75)
            } loc(#loc328)
          } loc(#loc324)
          %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc77)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
          %31 = cir.const #cir.int<20> : !s32i loc(#loc78)
          %32 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc78)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc78)
          %35 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %36 = cir.call @recv(%28, %30, %34, %35) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc81)
          %37 = cir.cast(integral, %36 : !s64i), !s32i loc(#loc81)
          cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc329)
          cir.scope {
            %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc87)
            %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc331)
            %50 = cir.ternary(%49, true {
              %51 = cir.const #true loc(#loc88)
              cir.yield %51 : !cir.bool loc(#loc88)
            }, false {
              %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %53 = cir.cmp(eq, %51, %52) : !s32i, !cir.bool loc(#loc332)
              %54 = cir.ternary(%53, true {
                %55 = cir.const #true loc(#loc88)
                cir.yield %55 : !cir.bool loc(#loc88)
              }, false {
                %55 = cir.const #false loc(#loc88)
                cir.yield %55 : !cir.bool loc(#loc88)
              }) : (!cir.bool) -> !cir.bool loc(#loc88)
              cir.yield %54 : !cir.bool loc(#loc88)
            }) : (!cir.bool) -> !cir.bool loc(#loc88)
            cir.if %50 {
              cir.break loc(#loc92)
            } loc(#loc333)
          } loc(#loc330)
          %38 = cir.const #cir.int<0> : !s8i loc(#loc93)
          %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc95)
          %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc95)
          cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc334)
          %42 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc96)
          %43 = cir.call @atof(%42) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc97)
          %44 = cir.cast(floating, %43 : !cir.double), !cir.float loc(#loc97)
          %45 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc98)
          cir.store %44, %45 : !cir.float, !cir.ptr<!cir.float> loc(#loc335)
          cir.yield loc(#loc32)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc100)
          cir.condition(%8) loc(#loc100)
        } loc(#loc313)
      } loc(#loc313)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc104)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc337)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc107)
        } loc(#loc338)
      } loc(#loc336)
    } loc(#loc308)
    cir.return loc(#loc17)
  } loc(#loc306)
  cir.func private @printIntLine(!s32i) loc(#loc339)
  cir.func @_ZN46CWE369_Divide_by_Zero__float_connect_socket_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc114)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc342)
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L9badSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc116)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc344)
      %3 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc121)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc122)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc122)
      %6 = cir.binop(div, %3, %5) : !cir.double loc(#loc345)
      %7 = cir.cast(float_to_int, %6 : !cir.double), !s32i loc(#loc345)
      cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc344)
      %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc124)
    } loc(#loc343)
    cir.return loc(#loc111)
  } loc(#loc340)
  cir.func internal private @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L13goodG2BSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc127, #loc128])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc347)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc129)
    %1 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc130)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc131)
    cir.store %1, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc348)
    cir.return loc(#loc126)
  } loc(#loc346)
  cir.func internal private @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc136)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc351)
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L13goodG2BSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc138)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc353)
      %3 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc143)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc144)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc144)
      %6 = cir.binop(div, %3, %5) : !cir.double loc(#loc354)
      %7 = cir.cast(float_to_int, %6 : !cir.double), !s32i loc(#loc354)
      cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc353)
      %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc146)
    } loc(#loc352)
    cir.return loc(#loc133)
  } loc(#loc349)
  cir.func internal private @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L13goodB2GSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc149, #loc150])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc356)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc151)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc358)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc359)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc360)
      %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc361)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc159)
      %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc159)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc360)
      cir.scope {
        cir.do {
          %7 = cir.const #cir.int<2> : !s32i loc(#loc164)
          %8 = cir.const #cir.int<1> : !u32i loc(#loc165)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc165)
          %10 = cir.const #cir.int<6> : !u32i loc(#loc166)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc166)
          %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc167)
          cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc363)
          cir.scope {
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc173)
            %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc173)
            %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc365)
            cir.if %49 {
              cir.break loc(#loc175)
            } loc(#loc366)
          } loc(#loc364)
          %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc367)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc178)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc368)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc369)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc183)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc183)
          %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc370)
          %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc185)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc185)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc186)
          %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc371)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc189)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc189)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc190)
          %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc372)
          cir.scope {
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc195)
            %47 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc374)
            %48 = cir.const #cir.int<16> : !u64i loc(#loc375)
            %49 = cir.cast(integral, %48 : !u64i), !u32i loc(#loc375)
            %50 = cir.call @connect(%46, %47, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc200)
            %51 = cir.const #cir.int<1> : !s32i loc(#loc201)
            %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc201)
            %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc376)
            cir.if %53 {
              cir.break loc(#loc203)
            } loc(#loc377)
          } loc(#loc373)
          %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc204)
          %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc205)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc205)
          %31 = cir.const #cir.int<20> : !s32i loc(#loc206)
          %32 = cir.const #cir.int<1> : !s32i loc(#loc207)
          %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc206)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc206)
          %35 = cir.const #cir.int<0> : !s32i loc(#loc208)
          %36 = cir.call @recv(%28, %30, %34, %35) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc209)
          %37 = cir.cast(integral, %36 : !s64i), !s32i loc(#loc209)
          cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc378)
          cir.scope {
            %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc215)
            %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc215)
            %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc380)
            %50 = cir.ternary(%49, true {
              %51 = cir.const #true loc(#loc216)
              cir.yield %51 : !cir.bool loc(#loc216)
            }, false {
              %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc217)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc218)
              %53 = cir.cmp(eq, %51, %52) : !s32i, !cir.bool loc(#loc381)
              %54 = cir.ternary(%53, true {
                %55 = cir.const #true loc(#loc216)
                cir.yield %55 : !cir.bool loc(#loc216)
              }, false {
                %55 = cir.const #false loc(#loc216)
                cir.yield %55 : !cir.bool loc(#loc216)
              }) : (!cir.bool) -> !cir.bool loc(#loc216)
              cir.yield %54 : !cir.bool loc(#loc216)
            }) : (!cir.bool) -> !cir.bool loc(#loc216)
            cir.if %50 {
              cir.break loc(#loc220)
            } loc(#loc382)
          } loc(#loc379)
          %38 = cir.const #cir.int<0> : !s8i loc(#loc221)
          %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc222)
          %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc223)
          %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc223)
          cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc383)
          %42 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc224)
          %43 = cir.call @atof(%42) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc225)
          %44 = cir.cast(floating, %43 : !cir.double), !cir.float loc(#loc225)
          %45 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc226)
          cir.store %44, %45 : !cir.float, !cir.ptr<!cir.float> loc(#loc384)
          cir.yield loc(#loc163)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc228)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc228)
          cir.condition(%8) loc(#loc228)
        } loc(#loc362)
      } loc(#loc362)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc231)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc232)
        %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc232)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc386)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc234)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc235)
        } loc(#loc387)
      } loc(#loc385)
    } loc(#loc357)
    cir.return loc(#loc148)
  } loc(#loc355)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc238, #loc239])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc389)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc237)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc240)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc241)
    %3 = cir.fabs %2 : !cir.float loc(#loc241)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc390)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc390)
    cir.return %4 : !cir.float loc(#loc390)
  } loc(#loc388)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc244)
  cir.func internal private @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc392)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc249)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc393)
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L13goodB2GSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc251)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc254)
      %3 = cir.call @_ZSt4fabsf(%2) : (!cir.float) -> !cir.float loc(#loc255)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc255)
      %5 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc256)
      %6 = cir.cmp(gt, %4, %5) : !cir.double, !cir.bool loc(#loc395)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc397)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc262)
        %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc263)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc263)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc398)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc398)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc397)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc264)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc265)
      } else {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc244)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc244)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc266)
      } loc(#loc396)
    } loc(#loc394)
    cir.return loc(#loc246)
  } loc(#loc391)
  cir.func @_ZN46CWE369_Divide_by_Zero__float_connect_socket_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L7goodG2BEv() : () -> () loc(#loc269)
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_43L7goodB2GEv() : () -> () loc(#loc270)
    cir.return loc(#loc268)
  } loc(#loc399)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc400)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc401)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc402)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc277)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc280)
  cir.func @main(%arg0: !s32i loc(fused[#loc283, #loc284]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc285, #loc286])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc404)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc405)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc282)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc287)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc288)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc289)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc289)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc290)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc277)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc277)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc291)
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_434goodEv() : () -> () loc(#loc292)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc278)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc278)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc293)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc279)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc279)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc294)
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_433badEv() : () -> () loc(#loc295)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc280)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc280)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc296)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc297)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc406)
    cir.return %15 : !s32i loc(#loc406)
  } loc(#loc403)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_43.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":76:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":102:1)
#loc13 = loc("/usr/include/stdlib.h":103:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":49:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":107:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":50:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":51:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":106:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":56:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":56:13)
#loc25 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":57:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":57:28)
#loc27 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":58:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":58:32)
#loc29 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":59:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":59:41)
#loc31 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":60:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":95:17)
#loc33 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":69:36)
#loc34 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":69:45)
#loc35 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":69:58)
#loc36 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":69:29)
#loc37 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":69:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":69:69)
#loc39 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":70:13)
#loc40 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":73:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":70:17)
#loc42 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":70:34)
#loc43 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":71:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":72:17)
#loc45 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":74:20)
#loc46 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":74:21)
#loc47 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":74:30)
#loc48 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":74:33)
#loc49 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":74:47)
#loc50 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":74:13)
#loc51 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":74:48)
#loc52 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":75:34)
#loc53 = loc("/usr/include/netinet/in.h":249:5)
#loc54 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":75:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":76:39)
#loc56 = loc("/usr/include/netinet/in.h":251:20)
#loc57 = loc("/usr/include/netinet/in.h":33:15)
#loc58 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":76:13)
#loc59 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":76:59)
#loc60 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":77:38)
#loc61 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":77:32)
#loc62 = loc("/usr/include/netinet/in.h":250:15)
#loc63 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":77:13)
#loc64 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":77:46)
#loc65 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:13)
#loc66 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":81:13)
#loc67 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:25)
#loc68 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:58)
#loc69 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:59)
#loc70 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:68)
#loc71 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:82)
#loc72 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:17)
#loc73 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":78:88)
#loc74 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":79:13)
#loc75 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":80:17)
#loc76 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:31)
#loc77 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:46)
#loc78 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:59)
#loc79 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:77)
#loc80 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:80)
#loc81 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:26)
#loc82 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:13)
#loc83 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":85:81)
#loc84 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":86:13)
#loc85 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":89:13)
#loc86 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":86:17)
#loc87 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":86:31)
#loc88 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":86:44)
#loc89 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":86:47)
#loc90 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":86:61)
#loc91 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":87:13)
#loc92 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":88:17)
#loc93 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":91:39)
#loc94 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":91:25)
#loc95 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":91:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":93:32)
#loc97 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":93:27)
#loc98 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":93:13)
#loc99 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":93:43)
#loc100 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":95:16)
#loc101 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":96:9)
#loc102 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":99:9)
#loc103 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":96:13)
#loc104 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":96:30)
#loc105 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":97:9)
#loc106 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":98:26)
#loc107 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":98:13)
#loc108 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc109 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc110 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":109:1)
#loc111 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":120:1)
#loc112 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":111:5)
#loc113 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":111:11)
#loc114 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":113:12)
#loc115 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":113:5)
#loc116 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":114:5)
#loc117 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":115:5)
#loc118 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":119:5)
#loc119 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":117:9)
#loc120 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":117:40)
#loc121 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":117:28)
#loc122 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":117:36)
#loc123 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":118:22)
#loc124 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":118:9)
#loc125 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":127:1)
#loc126 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":131:1)
#loc129 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":128:1)
#loc130 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":130:12)
#loc131 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":130:5)
#loc132 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":133:1)
#loc133 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":144:1)
#loc134 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":135:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":135:11)
#loc136 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":137:12)
#loc137 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":137:5)
#loc138 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":138:5)
#loc139 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":139:5)
#loc140 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":143:5)
#loc141 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":141:9)
#loc142 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":141:40)
#loc143 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":141:28)
#loc144 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":141:36)
#loc145 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":142:22)
#loc146 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":142:9)
#loc147 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":147:1)
#loc148 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":205:1)
#loc151 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":148:1)
#loc152 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":149:5)
#loc153 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":204:5)
#loc154 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":154:9)
#loc155 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":154:13)
#loc156 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":155:9)
#loc157 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":155:28)
#loc158 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":156:9)
#loc159 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":156:32)
#loc160 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":157:9)
#loc161 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":157:41)
#loc162 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":158:9)
#loc163 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":193:17)
#loc164 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":167:36)
#loc165 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":167:45)
#loc166 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":167:58)
#loc167 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":167:29)
#loc168 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":167:13)
#loc169 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":167:69)
#loc170 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":168:13)
#loc171 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":171:13)
#loc172 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":168:17)
#loc173 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":168:34)
#loc174 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":169:13)
#loc175 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":170:17)
#loc176 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":172:20)
#loc177 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":172:21)
#loc178 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":172:30)
#loc179 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":172:33)
#loc180 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":172:47)
#loc181 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":172:13)
#loc182 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":172:48)
#loc183 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":173:34)
#loc184 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":173:13)
#loc185 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":174:49)
#loc186 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":174:39)
#loc187 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":174:13)
#loc188 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":174:59)
#loc189 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":175:38)
#loc190 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":175:32)
#loc191 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":175:13)
#loc192 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":175:46)
#loc193 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:13)
#loc194 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":179:13)
#loc195 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:25)
#loc196 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:58)
#loc197 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:59)
#loc198 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:68)
#loc199 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:82)
#loc200 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:17)
#loc201 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":176:88)
#loc202 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":177:13)
#loc203 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":178:17)
#loc204 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:31)
#loc205 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:46)
#loc206 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:59)
#loc207 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:77)
#loc208 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:80)
#loc209 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:26)
#loc210 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:13)
#loc211 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":183:81)
#loc212 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":184:13)
#loc213 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":187:13)
#loc214 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":184:17)
#loc215 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":184:31)
#loc216 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":184:44)
#loc217 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":184:47)
#loc218 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":184:61)
#loc219 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":185:13)
#loc220 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":186:17)
#loc221 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":189:39)
#loc222 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":189:25)
#loc223 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":189:13)
#loc224 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":191:32)
#loc225 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":191:27)
#loc226 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":191:13)
#loc227 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":191:43)
#loc228 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":193:16)
#loc229 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":194:9)
#loc230 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":197:9)
#loc231 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":194:13)
#loc232 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":194:30)
#loc233 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":195:9)
#loc234 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":196:26)
#loc235 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":196:13)
#loc236 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":237:3)
#loc237 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:34)
#loc240 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:3)
#loc241 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:28)
#loc242 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:5)
#loc243 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:31)
#loc244 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":221:19)
#loc245 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":207:1)
#loc246 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":223:1)
#loc247 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":209:5)
#loc248 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":209:11)
#loc249 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":211:12)
#loc250 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":211:5)
#loc251 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":212:5)
#loc252 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":214:5)
#loc253 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":222:5)
#loc254 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":214:13)
#loc255 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":214:8)
#loc256 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":214:21)
#loc257 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":215:5)
#loc258 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":218:5)
#loc259 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":220:5)
#loc260 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":216:9)
#loc261 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":216:40)
#loc262 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":216:28)
#loc263 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":216:36)
#loc264 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":217:22)
#loc265 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":217:9)
#loc266 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":221:9)
#loc267 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":225:1)
#loc268 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":229:1)
#loc269 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":227:5)
#loc270 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":228:5)
#loc271 = loc("/usr/include/stdlib.h":575:1)
#loc272 = loc("/usr/include/stdlib.h":575:41)
#loc273 = loc("/usr/include/time.h":76:1)
#loc274 = loc("/usr/include/time.h":76:38)
#loc275 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc276 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc277 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":249:15)
#loc278 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":251:15)
#loc279 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":254:15)
#loc280 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":256:15)
#loc281 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":244:1)
#loc282 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":259:1)
#loc287 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":245:1)
#loc288 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":247:27)
#loc289 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":247:22)
#loc290 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":247:5)
#loc291 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":249:5)
#loc292 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":250:5)
#loc293 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":251:5)
#loc294 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":254:5)
#loc295 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":255:5)
#loc296 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":256:5)
#loc297 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":258:12)
#loc298 = loc("CWE369_Divide_by_Zero__float_connect_socket_43.cpp":258:5)
#loc299 = loc(fused[#loc1, #loc2])
#loc300 = loc(fused[#loc3, #loc4])
#loc301 = loc(fused[#loc6, #loc7])
#loc302 = loc(fused[#loc8, #loc9])
#loc303 = loc(fused[#loc10, #loc11])
#loc304 = loc(fused[#loc12, #loc13])
#loc305 = loc(fused[#loc14, #loc15])
#loc306 = loc(fused[#loc16, #loc17])
#loc308 = loc(fused[#loc21, #loc22])
#loc309 = loc(fused[#loc23, #loc24])
#loc310 = loc(fused[#loc25, #loc26])
#loc311 = loc(fused[#loc27, #loc28])
#loc312 = loc(fused[#loc29, #loc30])
#loc313 = loc(fused[#loc31, #loc32])
#loc314 = loc(fused[#loc37, #loc38])
#loc315 = loc(fused[#loc39, #loc40])
#loc316 = loc(fused[#loc41, #loc42])
#loc317 = loc(fused[#loc43, #loc40])
#loc318 = loc(fused[#loc45, #loc46])
#loc319 = loc(fused[#loc48, #loc49])
#loc320 = loc(fused[#loc50, #loc51])
#loc321 = loc(fused[#loc54, #loc52])
#loc322 = loc(fused[#loc58, #loc59])
#loc323 = loc(fused[#loc63, #loc64])
#loc324 = loc(fused[#loc65, #loc66])
#loc325 = loc(fused[#loc68, #loc69])
#loc326 = loc(fused[#loc70, #loc71])
#loc327 = loc(fused[#loc72, #loc73])
#loc328 = loc(fused[#loc74, #loc66])
#loc329 = loc(fused[#loc82, #loc83])
#loc330 = loc(fused[#loc84, #loc85])
#loc331 = loc(fused[#loc86, #loc87])
#loc332 = loc(fused[#loc89, #loc90])
#loc333 = loc(fused[#loc91, #loc85])
#loc334 = loc(fused[#loc95, #loc93])
#loc335 = loc(fused[#loc98, #loc99])
#loc336 = loc(fused[#loc101, #loc102])
#loc337 = loc(fused[#loc103, #loc104])
#loc338 = loc(fused[#loc105, #loc102])
#loc339 = loc(fused[#loc108, #loc109])
#loc340 = loc(fused[#loc110, #loc111])
#loc341 = loc(fused[#loc112, #loc113])
#loc342 = loc(fused[#loc115, #loc114])
#loc343 = loc(fused[#loc117, #loc118])
#loc344 = loc(fused[#loc119, #loc120])
#loc345 = loc(fused[#loc121, #loc122])
#loc346 = loc(fused[#loc125, #loc126])
#loc348 = loc(fused[#loc131, #loc130])
#loc349 = loc(fused[#loc132, #loc133])
#loc350 = loc(fused[#loc134, #loc135])
#loc351 = loc(fused[#loc137, #loc136])
#loc352 = loc(fused[#loc139, #loc140])
#loc353 = loc(fused[#loc141, #loc142])
#loc354 = loc(fused[#loc143, #loc144])
#loc355 = loc(fused[#loc147, #loc148])
#loc357 = loc(fused[#loc152, #loc153])
#loc358 = loc(fused[#loc154, #loc155])
#loc359 = loc(fused[#loc156, #loc157])
#loc360 = loc(fused[#loc158, #loc159])
#loc361 = loc(fused[#loc160, #loc161])
#loc362 = loc(fused[#loc162, #loc163])
#loc363 = loc(fused[#loc168, #loc169])
#loc364 = loc(fused[#loc170, #loc171])
#loc365 = loc(fused[#loc172, #loc173])
#loc366 = loc(fused[#loc174, #loc171])
#loc367 = loc(fused[#loc176, #loc177])
#loc368 = loc(fused[#loc179, #loc180])
#loc369 = loc(fused[#loc181, #loc182])
#loc370 = loc(fused[#loc184, #loc183])
#loc371 = loc(fused[#loc187, #loc188])
#loc372 = loc(fused[#loc191, #loc192])
#loc373 = loc(fused[#loc193, #loc194])
#loc374 = loc(fused[#loc196, #loc197])
#loc375 = loc(fused[#loc198, #loc199])
#loc376 = loc(fused[#loc200, #loc201])
#loc377 = loc(fused[#loc202, #loc194])
#loc378 = loc(fused[#loc210, #loc211])
#loc379 = loc(fused[#loc212, #loc213])
#loc380 = loc(fused[#loc214, #loc215])
#loc381 = loc(fused[#loc217, #loc218])
#loc382 = loc(fused[#loc219, #loc213])
#loc383 = loc(fused[#loc223, #loc221])
#loc384 = loc(fused[#loc226, #loc227])
#loc385 = loc(fused[#loc229, #loc230])
#loc386 = loc(fused[#loc231, #loc232])
#loc387 = loc(fused[#loc233, #loc230])
#loc388 = loc(fused[#loc236, #loc237])
#loc390 = loc(fused[#loc242, #loc243])
#loc391 = loc(fused[#loc245, #loc246])
#loc392 = loc(fused[#loc247, #loc248])
#loc393 = loc(fused[#loc250, #loc249])
#loc394 = loc(fused[#loc252, #loc253])
#loc395 = loc(fused[#loc255, #loc256])
#loc396 = loc(fused[#loc257, #loc258, #loc259, #loc253])
#loc397 = loc(fused[#loc260, #loc261])
#loc398 = loc(fused[#loc262, #loc263])
#loc399 = loc(fused[#loc267, #loc268])
#loc400 = loc(fused[#loc271, #loc272])
#loc401 = loc(fused[#loc273, #loc274])
#loc402 = loc(fused[#loc275, #loc276])
#loc403 = loc(fused[#loc281, #loc282])
#loc406 = loc(fused[#loc298, #loc297])
