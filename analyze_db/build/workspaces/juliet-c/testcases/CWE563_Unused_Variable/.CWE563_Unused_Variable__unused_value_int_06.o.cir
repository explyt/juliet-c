!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_int_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc123)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_int_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc9)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc10)
    %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc127)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<5> : !s32i loc(#loc12)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb3 loc(#loc8)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc131)
    cir.brcond %7 ^bb6, ^bb7 loc(#loc132)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<10> : !s32i loc(#loc19)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc22)
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc124)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_int_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc136)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc138)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc24)
  } loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc42)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc43)
    %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc143)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<5> : !s32i loc(#loc45)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb3 loc(#loc41)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc146)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<5> : !s32i loc(#loc49)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc147)
    cir.brcond %7 ^bb6, ^bb7 loc(#loc148)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb8 loc(#loc52)
  ^bb7:  // pred: ^bb5
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc56)
    cir.br ^bb8 loc(#loc48)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc48)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc37)
  } loc(#loc140)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc63)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc64)
    %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<5> : !s32i loc(#loc66)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.br ^bb3 loc(#loc62)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<5> : !s32i loc(#loc70)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc71)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %7 ^bb6, ^bb7 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc74)
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc58)
  } loc(#loc149)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc81)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc82)
    %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc161)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc162)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb4 loc(#loc84)
  ^bb3:  // pred: ^bb1
    %6 = cir.const #cir.int<5> : !s32i loc(#loc88)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc91)
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc80)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc164)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc165)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc166)
  ^bb7:  // pred: ^bb6
    %11 = cir.const #cir.int<10> : !s32i loc(#loc97)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc100)
    cir.br ^bb8 loc(#loc93)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc93)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc76)
  } loc(#loc158)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc107)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc108)
    %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<5> : !s32i loc(#loc110)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc113)
    cir.br ^bb3 loc(#loc106)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<5> : !s32i loc(#loc116)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc117)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<10> : !s32i loc(#loc119)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc122)
    cir.br ^bb7 loc(#loc115)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc115)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc102)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_int_06.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE563_Unused_Variable__unused_value_int_06.c":29:1)
#loc4 = loc("CWE563_Unused_Variable__unused_value_int_06.c":43:1)
#loc5 = loc("CWE563_Unused_Variable__unused_value_int_06.c":31:5)
#loc6 = loc("CWE563_Unused_Variable__unused_value_int_06.c":31:9)
#loc7 = loc("CWE563_Unused_Variable__unused_value_int_06.c":32:5)
#loc8 = loc("CWE563_Unused_Variable__unused_value_int_06.c":36:5)
#loc9 = loc("CWE563_Unused_Variable__unused_value_int_06.c":32:8)
#loc10 = loc("CWE563_Unused_Variable__unused_value_int_06.c":32:27)
#loc11 = loc("CWE563_Unused_Variable__unused_value_int_06.c":33:5)
#loc12 = loc("CWE563_Unused_Variable__unused_value_int_06.c":35:16)
#loc13 = loc("CWE563_Unused_Variable__unused_value_int_06.c":35:9)
#loc14 = loc("CWE563_Unused_Variable__unused_value_int_06.c":37:5)
#loc15 = loc("CWE563_Unused_Variable__unused_value_int_06.c":42:5)
#loc16 = loc("CWE563_Unused_Variable__unused_value_int_06.c":37:8)
#loc17 = loc("CWE563_Unused_Variable__unused_value_int_06.c":37:27)
#loc18 = loc("CWE563_Unused_Variable__unused_value_int_06.c":38:5)
#loc19 = loc("CWE563_Unused_Variable__unused_value_int_06.c":40:16)
#loc20 = loc("CWE563_Unused_Variable__unused_value_int_06.c":40:9)
#loc21 = loc("CWE563_Unused_Variable__unused_value_int_06.c":41:22)
#loc22 = loc("CWE563_Unused_Variable__unused_value_int_06.c":41:9)
#loc23 = loc("CWE563_Unused_Variable__unused_value_int_06.c":127:1)
#loc24 = loc("CWE563_Unused_Variable__unused_value_int_06.c":133:1)
#loc25 = loc("CWE563_Unused_Variable__unused_value_int_06.c":129:5)
#loc26 = loc("CWE563_Unused_Variable__unused_value_int_06.c":129:14)
#loc27 = loc("CWE563_Unused_Variable__unused_value_int_06.c":130:5)
#loc28 = loc("CWE563_Unused_Variable__unused_value_int_06.c":130:14)
#loc29 = loc("CWE563_Unused_Variable__unused_value_int_06.c":131:5)
#loc30 = loc("CWE563_Unused_Variable__unused_value_int_06.c":131:14)
#loc31 = loc("CWE563_Unused_Variable__unused_value_int_06.c":132:5)
#loc32 = loc("CWE563_Unused_Variable__unused_value_int_06.c":132:14)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE563_Unused_Variable__unused_value_int_06.c":61:19)
#loc36 = loc("CWE563_Unused_Variable__unused_value_int_06.c":50:1)
#loc37 = loc("CWE563_Unused_Variable__unused_value_int_06.c":68:1)
#loc38 = loc("CWE563_Unused_Variable__unused_value_int_06.c":52:5)
#loc39 = loc("CWE563_Unused_Variable__unused_value_int_06.c":52:9)
#loc40 = loc("CWE563_Unused_Variable__unused_value_int_06.c":53:5)
#loc41 = loc("CWE563_Unused_Variable__unused_value_int_06.c":57:5)
#loc42 = loc("CWE563_Unused_Variable__unused_value_int_06.c":53:8)
#loc43 = loc("CWE563_Unused_Variable__unused_value_int_06.c":53:27)
#loc44 = loc("CWE563_Unused_Variable__unused_value_int_06.c":54:5)
#loc45 = loc("CWE563_Unused_Variable__unused_value_int_06.c":56:16)
#loc46 = loc("CWE563_Unused_Variable__unused_value_int_06.c":56:9)
#loc47 = loc("CWE563_Unused_Variable__unused_value_int_06.c":58:5)
#loc48 = loc("CWE563_Unused_Variable__unused_value_int_06.c":67:5)
#loc49 = loc("CWE563_Unused_Variable__unused_value_int_06.c":58:8)
#loc50 = loc("CWE563_Unused_Variable__unused_value_int_06.c":58:27)
#loc51 = loc("CWE563_Unused_Variable__unused_value_int_06.c":59:5)
#loc52 = loc("CWE563_Unused_Variable__unused_value_int_06.c":62:5)
#loc53 = loc("CWE563_Unused_Variable__unused_value_int_06.c":64:5)
#loc54 = loc("CWE563_Unused_Variable__unused_value_int_06.c":61:9)
#loc55 = loc("CWE563_Unused_Variable__unused_value_int_06.c":66:22)
#loc56 = loc("CWE563_Unused_Variable__unused_value_int_06.c":66:9)
#loc57 = loc("CWE563_Unused_Variable__unused_value_int_06.c":71:1)
#loc58 = loc("CWE563_Unused_Variable__unused_value_int_06.c":84:1)
#loc59 = loc("CWE563_Unused_Variable__unused_value_int_06.c":73:5)
#loc60 = loc("CWE563_Unused_Variable__unused_value_int_06.c":73:9)
#loc61 = loc("CWE563_Unused_Variable__unused_value_int_06.c":74:5)
#loc62 = loc("CWE563_Unused_Variable__unused_value_int_06.c":78:5)
#loc63 = loc("CWE563_Unused_Variable__unused_value_int_06.c":74:8)
#loc64 = loc("CWE563_Unused_Variable__unused_value_int_06.c":74:27)
#loc65 = loc("CWE563_Unused_Variable__unused_value_int_06.c":75:5)
#loc66 = loc("CWE563_Unused_Variable__unused_value_int_06.c":77:16)
#loc67 = loc("CWE563_Unused_Variable__unused_value_int_06.c":77:9)
#loc68 = loc("CWE563_Unused_Variable__unused_value_int_06.c":79:5)
#loc69 = loc("CWE563_Unused_Variable__unused_value_int_06.c":83:5)
#loc70 = loc("CWE563_Unused_Variable__unused_value_int_06.c":79:8)
#loc71 = loc("CWE563_Unused_Variable__unused_value_int_06.c":79:27)
#loc72 = loc("CWE563_Unused_Variable__unused_value_int_06.c":80:5)
#loc73 = loc("CWE563_Unused_Variable__unused_value_int_06.c":82:22)
#loc74 = loc("CWE563_Unused_Variable__unused_value_int_06.c":82:9)
#loc75 = loc("CWE563_Unused_Variable__unused_value_int_06.c":87:1)
#loc76 = loc("CWE563_Unused_Variable__unused_value_int_06.c":107:1)
#loc77 = loc("CWE563_Unused_Variable__unused_value_int_06.c":89:5)
#loc78 = loc("CWE563_Unused_Variable__unused_value_int_06.c":89:9)
#loc79 = loc("CWE563_Unused_Variable__unused_value_int_06.c":90:5)
#loc80 = loc("CWE563_Unused_Variable__unused_value_int_06.c":100:5)
#loc81 = loc("CWE563_Unused_Variable__unused_value_int_06.c":90:8)
#loc82 = loc("CWE563_Unused_Variable__unused_value_int_06.c":90:27)
#loc83 = loc("CWE563_Unused_Variable__unused_value_int_06.c":91:5)
#loc84 = loc("CWE563_Unused_Variable__unused_value_int_06.c":94:5)
#loc85 = loc("CWE563_Unused_Variable__unused_value_int_06.c":96:5)
#loc86 = loc("CWE563_Unused_Variable__unused_value_int_06.c":93:19)
#loc87 = loc("CWE563_Unused_Variable__unused_value_int_06.c":93:9)
#loc88 = loc("CWE563_Unused_Variable__unused_value_int_06.c":98:16)
#loc89 = loc("CWE563_Unused_Variable__unused_value_int_06.c":98:9)
#loc90 = loc("CWE563_Unused_Variable__unused_value_int_06.c":99:22)
#loc91 = loc("CWE563_Unused_Variable__unused_value_int_06.c":99:9)
#loc92 = loc("CWE563_Unused_Variable__unused_value_int_06.c":101:5)
#loc93 = loc("CWE563_Unused_Variable__unused_value_int_06.c":106:5)
#loc94 = loc("CWE563_Unused_Variable__unused_value_int_06.c":101:8)
#loc95 = loc("CWE563_Unused_Variable__unused_value_int_06.c":101:27)
#loc96 = loc("CWE563_Unused_Variable__unused_value_int_06.c":102:5)
#loc97 = loc("CWE563_Unused_Variable__unused_value_int_06.c":104:16)
#loc98 = loc("CWE563_Unused_Variable__unused_value_int_06.c":104:9)
#loc99 = loc("CWE563_Unused_Variable__unused_value_int_06.c":105:22)
#loc100 = loc("CWE563_Unused_Variable__unused_value_int_06.c":105:9)
#loc101 = loc("CWE563_Unused_Variable__unused_value_int_06.c":110:1)
#loc102 = loc("CWE563_Unused_Variable__unused_value_int_06.c":125:1)
#loc103 = loc("CWE563_Unused_Variable__unused_value_int_06.c":112:5)
#loc104 = loc("CWE563_Unused_Variable__unused_value_int_06.c":112:9)
#loc105 = loc("CWE563_Unused_Variable__unused_value_int_06.c":113:5)
#loc106 = loc("CWE563_Unused_Variable__unused_value_int_06.c":118:5)
#loc107 = loc("CWE563_Unused_Variable__unused_value_int_06.c":113:8)
#loc108 = loc("CWE563_Unused_Variable__unused_value_int_06.c":113:27)
#loc109 = loc("CWE563_Unused_Variable__unused_value_int_06.c":114:5)
#loc110 = loc("CWE563_Unused_Variable__unused_value_int_06.c":116:16)
#loc111 = loc("CWE563_Unused_Variable__unused_value_int_06.c":116:9)
#loc112 = loc("CWE563_Unused_Variable__unused_value_int_06.c":117:22)
#loc113 = loc("CWE563_Unused_Variable__unused_value_int_06.c":117:9)
#loc114 = loc("CWE563_Unused_Variable__unused_value_int_06.c":119:5)
#loc115 = loc("CWE563_Unused_Variable__unused_value_int_06.c":124:5)
#loc116 = loc("CWE563_Unused_Variable__unused_value_int_06.c":119:8)
#loc117 = loc("CWE563_Unused_Variable__unused_value_int_06.c":119:27)
#loc118 = loc("CWE563_Unused_Variable__unused_value_int_06.c":120:5)
#loc119 = loc("CWE563_Unused_Variable__unused_value_int_06.c":122:16)
#loc120 = loc("CWE563_Unused_Variable__unused_value_int_06.c":122:9)
#loc121 = loc("CWE563_Unused_Variable__unused_value_int_06.c":123:22)
#loc122 = loc("CWE563_Unused_Variable__unused_value_int_06.c":123:9)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc11, #loc8])
#loc129 = loc(fused[#loc13, #loc12])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc18, #loc15])
#loc133 = loc(fused[#loc20, #loc19])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc25, #loc26])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc31, #loc32])
#loc139 = loc(fused[#loc33, #loc34])
#loc140 = loc(fused[#loc36, #loc37])
#loc141 = loc(fused[#loc38, #loc39])
#loc142 = loc(fused[#loc40, #loc41])
#loc143 = loc(fused[#loc42, #loc43])
#loc144 = loc(fused[#loc44, #loc41])
#loc145 = loc(fused[#loc46, #loc45])
#loc146 = loc(fused[#loc47, #loc48])
#loc147 = loc(fused[#loc49, #loc50])
#loc148 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc149 = loc(fused[#loc57, #loc58])
#loc150 = loc(fused[#loc59, #loc60])
#loc151 = loc(fused[#loc61, #loc62])
#loc152 = loc(fused[#loc63, #loc64])
#loc153 = loc(fused[#loc65, #loc62])
#loc154 = loc(fused[#loc67, #loc66])
#loc155 = loc(fused[#loc68, #loc69])
#loc156 = loc(fused[#loc70, #loc71])
#loc157 = loc(fused[#loc72, #loc69])
#loc158 = loc(fused[#loc75, #loc76])
#loc159 = loc(fused[#loc77, #loc78])
#loc160 = loc(fused[#loc79, #loc80])
#loc161 = loc(fused[#loc81, #loc82])
#loc162 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc163 = loc(fused[#loc89, #loc88])
#loc164 = loc(fused[#loc92, #loc93])
#loc165 = loc(fused[#loc94, #loc95])
#loc166 = loc(fused[#loc96, #loc93])
#loc167 = loc(fused[#loc98, #loc97])
#loc168 = loc(fused[#loc101, #loc102])
#loc169 = loc(fused[#loc103, #loc104])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc107, #loc108])
#loc172 = loc(fused[#loc109, #loc106])
#loc173 = loc(fused[#loc111, #loc110])
#loc174 = loc(fused[#loc114, #loc115])
#loc175 = loc(fused[#loc116, #loc117])
#loc176 = loc(fused[#loc118, #loc115])
#loc177 = loc(fused[#loc120, #loc119])
