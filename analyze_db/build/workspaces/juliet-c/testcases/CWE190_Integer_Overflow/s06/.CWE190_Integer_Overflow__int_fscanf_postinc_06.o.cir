!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fscanf_postinc_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc174)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc176)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_postinc_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc181)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc19)
      } loc(#loc182)
    } loc(#loc180)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc24)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc184)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc187)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc31)
          cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc187)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc33)
        } loc(#loc186)
      } loc(#loc185)
    } loc(#loc183)
    cir.return loc(#loc9)
  } loc(#loc177)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_postinc_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc190)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc191)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc192)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc193)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc189)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc56)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc57)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc199)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc59)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc61)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc61)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc59)
      } loc(#loc200)
    } loc(#loc198)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc64)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc65)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc202)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc73)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc205)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc207)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %10 = cir.unary(inc, %9) nsw : !s32i, !s32i loc(#loc80)
            cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc207)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc82)
          } else {
            %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc47)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc47)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc83)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc203)
    } loc(#loc201)
    cir.return loc(#loc49)
  } loc(#loc195)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc92)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc93)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc213)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc95)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc97)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc97)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc95)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc100)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc101)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc216)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc106)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc219)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc221)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %10 = cir.unary(inc, %9) nsw : !s32i, !s32i loc(#loc113)
            cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc221)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc115)
          } else {
            %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc116)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc116)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          } loc(#loc220)
        } loc(#loc218)
      } loc(#loc217)
    } loc(#loc215)
    cir.return loc(#loc85)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc127)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc227)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc133)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
      } loc(#loc228)
    } loc(#loc226)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc137)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc138)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc231)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc234)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc145)
          cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc234)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc147)
        } loc(#loc233)
      } loc(#loc232)
    } loc(#loc230)
    cir.return loc(#loc119)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc156)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc157)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc240)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc159)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc242)
      } loc(#loc241)
    } loc(#loc239)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc163)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc164)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc244)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc247)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
          %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc171)
          cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc247)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc172)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc173)
        } loc(#loc246)
      } loc(#loc245)
    } loc(#loc243)
    cir.return loc(#loc149)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fscanf_postinc_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":35:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":27:1)
#loc9 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":46:1)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":29:5)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":29:9)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":31:12)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":31:5)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":32:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":36:5)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":32:8)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":32:27)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":33:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":35:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":35:16)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":37:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":45:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":37:8)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":37:27)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":38:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":39:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":44:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":42:13)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":42:26)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":41:17)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":41:13)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":43:26)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":43:13)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":160:1)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":166:1)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":162:5)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":162:14)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":163:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":163:14)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":164:5)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":164:14)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":165:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":165:14)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":66:19)
#loc47 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":79:23)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":53:1)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":82:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":55:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":55:9)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":57:12)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":57:5)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":58:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":62:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":58:8)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":58:27)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":59:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":61:9)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":61:16)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":61:23)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":63:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":81:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":63:8)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":63:27)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":64:5)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":67:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":69:5)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":66:9)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":71:9)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":80:9)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":71:13)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":71:20)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":72:9)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":76:9)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":78:9)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":74:13)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":74:26)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":73:17)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":73:13)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":75:26)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":75:13)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":79:13)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":85:1)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":109:1)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":87:5)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":87:9)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":89:12)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":89:5)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":90:5)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":94:5)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":90:8)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":90:27)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":91:5)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":93:9)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":93:16)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":93:23)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":95:5)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":108:5)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":95:8)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":95:27)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":96:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":98:9)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":107:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":98:13)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":98:20)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":99:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":103:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":105:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":101:13)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":101:26)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":100:17)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":100:13)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":102:26)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":102:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":106:23)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":106:13)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":112:1)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":136:1)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":114:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":114:9)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":116:12)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":116:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":117:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":126:5)
#loc126 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":117:8)
#loc127 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":117:27)
#loc128 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":118:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":121:5)
#loc130 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":123:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":120:19)
#loc132 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":120:9)
#loc133 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":125:16)
#loc134 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":125:9)
#loc135 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":127:5)
#loc136 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":135:5)
#loc137 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":127:8)
#loc138 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":127:27)
#loc139 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":128:5)
#loc140 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":129:9)
#loc141 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":134:9)
#loc142 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":132:13)
#loc143 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":132:26)
#loc144 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":131:17)
#loc145 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":131:13)
#loc146 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":133:26)
#loc147 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":133:13)
#loc148 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":139:1)
#loc149 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":158:1)
#loc150 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":141:5)
#loc151 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":141:9)
#loc152 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":143:12)
#loc153 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":143:5)
#loc154 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":144:5)
#loc155 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":148:5)
#loc156 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":144:8)
#loc157 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":144:27)
#loc158 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":145:5)
#loc159 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":147:16)
#loc160 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":147:9)
#loc161 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":149:5)
#loc162 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":157:5)
#loc163 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":149:8)
#loc164 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":149:27)
#loc165 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":150:5)
#loc166 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":151:9)
#loc167 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":156:9)
#loc168 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":154:13)
#loc169 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":154:26)
#loc170 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":153:17)
#loc171 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":153:13)
#loc172 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":155:26)
#loc173 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_06.c":155:13)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc176 = loc(fused[#loc6, #loc7])
#loc177 = loc(fused[#loc8, #loc9])
#loc178 = loc(fused[#loc10, #loc11])
#loc179 = loc(fused[#loc13, #loc12])
#loc180 = loc(fused[#loc14, #loc15])
#loc181 = loc(fused[#loc16, #loc17])
#loc182 = loc(fused[#loc18, #loc15])
#loc183 = loc(fused[#loc21, #loc22])
#loc184 = loc(fused[#loc23, #loc24])
#loc185 = loc(fused[#loc25, #loc22])
#loc186 = loc(fused[#loc26, #loc27])
#loc187 = loc(fused[#loc28, #loc29])
#loc188 = loc(fused[#loc31, #loc30])
#loc189 = loc(fused[#loc34, #loc35])
#loc190 = loc(fused[#loc36, #loc37])
#loc191 = loc(fused[#loc38, #loc39])
#loc192 = loc(fused[#loc40, #loc41])
#loc193 = loc(fused[#loc42, #loc43])
#loc194 = loc(fused[#loc44, #loc45])
#loc195 = loc(fused[#loc48, #loc49])
#loc196 = loc(fused[#loc50, #loc51])
#loc197 = loc(fused[#loc53, #loc52])
#loc198 = loc(fused[#loc54, #loc55])
#loc199 = loc(fused[#loc56, #loc57])
#loc200 = loc(fused[#loc58, #loc55])
#loc201 = loc(fused[#loc62, #loc63])
#loc202 = loc(fused[#loc64, #loc65])
#loc203 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc204 = loc(fused[#loc70, #loc71])
#loc205 = loc(fused[#loc72, #loc73])
#loc206 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc207 = loc(fused[#loc77, #loc78])
#loc208 = loc(fused[#loc80, #loc79])
#loc209 = loc(fused[#loc84, #loc85])
#loc210 = loc(fused[#loc86, #loc87])
#loc211 = loc(fused[#loc89, #loc88])
#loc212 = loc(fused[#loc90, #loc91])
#loc213 = loc(fused[#loc92, #loc93])
#loc214 = loc(fused[#loc94, #loc91])
#loc215 = loc(fused[#loc98, #loc99])
#loc216 = loc(fused[#loc100, #loc101])
#loc217 = loc(fused[#loc102, #loc99])
#loc218 = loc(fused[#loc103, #loc104])
#loc219 = loc(fused[#loc105, #loc106])
#loc220 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc221 = loc(fused[#loc110, #loc111])
#loc222 = loc(fused[#loc113, #loc112])
#loc223 = loc(fused[#loc118, #loc119])
#loc224 = loc(fused[#loc120, #loc121])
#loc225 = loc(fused[#loc123, #loc122])
#loc226 = loc(fused[#loc124, #loc125])
#loc227 = loc(fused[#loc126, #loc127])
#loc228 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc229 = loc(fused[#loc134, #loc133])
#loc230 = loc(fused[#loc135, #loc136])
#loc231 = loc(fused[#loc137, #loc138])
#loc232 = loc(fused[#loc139, #loc136])
#loc233 = loc(fused[#loc140, #loc141])
#loc234 = loc(fused[#loc142, #loc143])
#loc235 = loc(fused[#loc145, #loc144])
#loc236 = loc(fused[#loc148, #loc149])
#loc237 = loc(fused[#loc150, #loc151])
#loc238 = loc(fused[#loc153, #loc152])
#loc239 = loc(fused[#loc154, #loc155])
#loc240 = loc(fused[#loc156, #loc157])
#loc241 = loc(fused[#loc158, #loc155])
#loc242 = loc(fused[#loc160, #loc159])
#loc243 = loc(fused[#loc161, #loc162])
#loc244 = loc(fused[#loc163, #loc164])
#loc245 = loc(fused[#loc165, #loc162])
#loc246 = loc(fused[#loc166, #loc167])
#loc247 = loc(fused[#loc168, #loc169])
#loc248 = loc(fused[#loc171, #loc170])
