!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc169)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc170)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc171)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc172)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc174)
  cir.func no_proto  @CWE401_Memory_Leak__char_realloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc179)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc179)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc27)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc29)
        %11 = cir.const #cir.int<1> : !u64i loc(#loc181)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc182)
        %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
        cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
        cir.scope {
          %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc186)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc38)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc42)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
          } loc(#loc187)
        } loc(#loc185)
        %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc43)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
        %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc47)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc47)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc47)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc47)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc47)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc47)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc49)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc51)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc51)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } loc(#loc180)
    } loc(#loc178)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc190)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc190)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc56)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc56)
      cir.if %5 {
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
      } loc(#loc191)
    } loc(#loc189)
    cir.return loc(#loc15)
  } loc(#loc175)
  cir.func no_proto  @CWE401_Memory_Leak__char_realloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc192)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc199)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc199)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc77)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc77)
      cir.if %5 {
        %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc82)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc84)
        %11 = cir.const #cir.int<1> : !u64i loc(#loc201)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc202)
        %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc203)
        cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
        cir.scope {
          %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc206)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc93)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc97)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
          } loc(#loc207)
        } loc(#loc205)
        %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc98)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc100)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc100)
        %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc103)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc105)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc105)
        %11 = cir.const #cir.int<1> : !u64i loc(#loc208)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc209)
        %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
        cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
        cir.scope {
          %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc213)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc114)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc116)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc117)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc118)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
          } loc(#loc214)
        } loc(#loc212)
        %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc119)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc121)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc121)
        %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc123)
      } loc(#loc200)
    } loc(#loc198)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc216)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc216)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc126)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc126)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc131)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc133)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
      } loc(#loc217)
    } loc(#loc215)
    cir.return loc(#loc70)
  } loc(#loc195)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc139)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc222)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc222)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc143)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc143)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc148)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc148)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc148)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc148)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc148)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc148)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc150)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc152)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc152)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc154)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc155)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc155)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc155)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc155)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc155)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc155)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc157)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc159)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc159)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc161)
      } loc(#loc223)
    } loc(#loc221)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc227)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc227)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc164)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc164)
      cir.if %5 {
      } else {
      } loc(#loc228)
    } loc(#loc226)
    cir.return loc(#loc136)
  } loc(#loc218)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":683:1)
#loc4 = loc("/usr/include/stdlib.h":684:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__char_realloc_12.c":34:22)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE401_Memory_Leak__char_realloc_12.c":24:1)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_12.c":55:1)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_12.c":26:5)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_12.c":26:12)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_12.c":27:12)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_12.c":27:5)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_12.c":28:5)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_12.c":44:5)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_12.c":28:8)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_12.c":28:33)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_12.c":29:5)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_12.c":36:5)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_12.c":38:5)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:24)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:32)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:38)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:42)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:53)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:54)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_12.c":31:9)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:9)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:37)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:13)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:21)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:18)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:27)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:28)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:34)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_12.c":32:33)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_12.c":34:9)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_12.c":34:16)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_12.c":35:19)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_12.c":35:9)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_12.c":40:24)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_12.c":40:9)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_12.c":42:9)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_12.c":42:16)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_12.c":42:22)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_12.c":43:19)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_12.c":43:9)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_12.c":45:5)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_12.c":54:5)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_12.c":45:8)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_12.c":45:33)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_12.c":46:5)
#loc59 = loc("CWE401_Memory_Leak__char_realloc_12.c":49:5)
#loc60 = loc("CWE401_Memory_Leak__char_realloc_12.c":51:5)
#loc61 = loc("CWE401_Memory_Leak__char_realloc_12.c":53:9)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_12.c":53:14)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_12.c":133:1)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_12.c":137:1)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_12.c":135:5)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_12.c":135:13)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_12.c":136:5)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_12.c":136:13)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_12.c":64:1)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_12.c":96:1)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_12.c":66:5)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_12.c":66:12)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_12.c":67:12)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_12.c":67:5)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_12.c":68:5)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_12.c":85:5)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_12.c":68:8)
#loc78 = loc("CWE401_Memory_Leak__char_realloc_12.c":68:33)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_12.c":69:5)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_12.c":76:5)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_12.c":78:5)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:24)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:32)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:38)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:42)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:53)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:54)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_12.c":71:9)
#loc89 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:9)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:37)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:13)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:21)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:18)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:27)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:28)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:34)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_12.c":72:33)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_12.c":74:9)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_12.c":74:16)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_12.c":74:22)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_12.c":75:19)
#loc102 = loc("CWE401_Memory_Leak__char_realloc_12.c":75:9)
#loc103 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:24)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:32)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:38)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:42)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:53)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:54)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_12.c":80:9)
#loc110 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:9)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:37)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:13)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:21)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:18)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:27)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:28)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:34)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_12.c":81:33)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_12.c":83:9)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_12.c":83:16)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_12.c":83:22)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_12.c":84:19)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_12.c":84:9)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_12.c":86:5)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_12.c":95:5)
#loc126 = loc("CWE401_Memory_Leak__char_realloc_12.c":86:8)
#loc127 = loc("CWE401_Memory_Leak__char_realloc_12.c":86:33)
#loc128 = loc("CWE401_Memory_Leak__char_realloc_12.c":87:5)
#loc129 = loc("CWE401_Memory_Leak__char_realloc_12.c":90:5)
#loc130 = loc("CWE401_Memory_Leak__char_realloc_12.c":92:5)
#loc131 = loc("CWE401_Memory_Leak__char_realloc_12.c":89:9)
#loc132 = loc("CWE401_Memory_Leak__char_realloc_12.c":89:14)
#loc133 = loc("CWE401_Memory_Leak__char_realloc_12.c":94:9)
#loc134 = loc("CWE401_Memory_Leak__char_realloc_12.c":94:14)
#loc135 = loc("CWE401_Memory_Leak__char_realloc_12.c":101:1)
#loc136 = loc("CWE401_Memory_Leak__char_realloc_12.c":131:1)
#loc137 = loc("CWE401_Memory_Leak__char_realloc_12.c":103:5)
#loc138 = loc("CWE401_Memory_Leak__char_realloc_12.c":103:12)
#loc139 = loc("CWE401_Memory_Leak__char_realloc_12.c":104:12)
#loc140 = loc("CWE401_Memory_Leak__char_realloc_12.c":104:5)
#loc141 = loc("CWE401_Memory_Leak__char_realloc_12.c":105:5)
#loc142 = loc("CWE401_Memory_Leak__char_realloc_12.c":120:5)
#loc143 = loc("CWE401_Memory_Leak__char_realloc_12.c":105:8)
#loc144 = loc("CWE401_Memory_Leak__char_realloc_12.c":105:33)
#loc145 = loc("CWE401_Memory_Leak__char_realloc_12.c":106:5)
#loc146 = loc("CWE401_Memory_Leak__char_realloc_12.c":112:5)
#loc147 = loc("CWE401_Memory_Leak__char_realloc_12.c":114:5)
#loc148 = loc("CWE401_Memory_Leak__char_realloc_12.c":108:24)
#loc149 = loc("CWE401_Memory_Leak__char_realloc_12.c":108:9)
#loc150 = loc("CWE401_Memory_Leak__char_realloc_12.c":110:9)
#loc151 = loc("CWE401_Memory_Leak__char_realloc_12.c":110:16)
#loc152 = loc("CWE401_Memory_Leak__char_realloc_12.c":110:22)
#loc153 = loc("CWE401_Memory_Leak__char_realloc_12.c":111:19)
#loc154 = loc("CWE401_Memory_Leak__char_realloc_12.c":111:9)
#loc155 = loc("CWE401_Memory_Leak__char_realloc_12.c":116:24)
#loc156 = loc("CWE401_Memory_Leak__char_realloc_12.c":116:9)
#loc157 = loc("CWE401_Memory_Leak__char_realloc_12.c":118:9)
#loc158 = loc("CWE401_Memory_Leak__char_realloc_12.c":118:16)
#loc159 = loc("CWE401_Memory_Leak__char_realloc_12.c":118:22)
#loc160 = loc("CWE401_Memory_Leak__char_realloc_12.c":119:19)
#loc161 = loc("CWE401_Memory_Leak__char_realloc_12.c":119:9)
#loc162 = loc("CWE401_Memory_Leak__char_realloc_12.c":121:5)
#loc163 = loc("CWE401_Memory_Leak__char_realloc_12.c":130:5)
#loc164 = loc("CWE401_Memory_Leak__char_realloc_12.c":121:8)
#loc165 = loc("CWE401_Memory_Leak__char_realloc_12.c":121:33)
#loc166 = loc("CWE401_Memory_Leak__char_realloc_12.c":122:5)
#loc167 = loc("CWE401_Memory_Leak__char_realloc_12.c":125:5)
#loc168 = loc("CWE401_Memory_Leak__char_realloc_12.c":127:5)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc10, #loc11])
#loc174 = loc(fused[#loc12, #loc13])
#loc175 = loc(fused[#loc14, #loc15])
#loc176 = loc(fused[#loc16, #loc17])
#loc177 = loc(fused[#loc19, #loc18])
#loc178 = loc(fused[#loc20, #loc21])
#loc179 = loc(fused[#loc22, #loc23])
#loc180 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc181 = loc(fused[#loc30, #loc31])
#loc182 = loc(fused[#loc29, #loc31])
#loc183 = loc(fused[#loc27, #loc32])
#loc184 = loc(fused[#loc33, #loc32])
#loc185 = loc(fused[#loc34, #loc35])
#loc186 = loc(fused[#loc36, #loc37])
#loc187 = loc(fused[#loc39, #loc35])
#loc188 = loc(fused[#loc48, #loc47])
#loc189 = loc(fused[#loc54, #loc55])
#loc190 = loc(fused[#loc56, #loc57])
#loc191 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc192 = loc(fused[#loc63, #loc64])
#loc193 = loc(fused[#loc65, #loc66])
#loc194 = loc(fused[#loc67, #loc68])
#loc195 = loc(fused[#loc69, #loc70])
#loc196 = loc(fused[#loc71, #loc72])
#loc197 = loc(fused[#loc74, #loc73])
#loc198 = loc(fused[#loc75, #loc76])
#loc199 = loc(fused[#loc77, #loc78])
#loc200 = loc(fused[#loc79, #loc80, #loc81, #loc76])
#loc201 = loc(fused[#loc85, #loc86])
#loc202 = loc(fused[#loc84, #loc86])
#loc203 = loc(fused[#loc82, #loc87])
#loc204 = loc(fused[#loc88, #loc87])
#loc205 = loc(fused[#loc89, #loc90])
#loc206 = loc(fused[#loc91, #loc92])
#loc207 = loc(fused[#loc94, #loc90])
#loc208 = loc(fused[#loc106, #loc107])
#loc209 = loc(fused[#loc105, #loc107])
#loc210 = loc(fused[#loc103, #loc108])
#loc211 = loc(fused[#loc109, #loc108])
#loc212 = loc(fused[#loc110, #loc111])
#loc213 = loc(fused[#loc112, #loc113])
#loc214 = loc(fused[#loc115, #loc111])
#loc215 = loc(fused[#loc124, #loc125])
#loc216 = loc(fused[#loc126, #loc127])
#loc217 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc218 = loc(fused[#loc135, #loc136])
#loc219 = loc(fused[#loc137, #loc138])
#loc220 = loc(fused[#loc140, #loc139])
#loc221 = loc(fused[#loc141, #loc142])
#loc222 = loc(fused[#loc143, #loc144])
#loc223 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc224 = loc(fused[#loc149, #loc148])
#loc225 = loc(fused[#loc156, #loc155])
#loc226 = loc(fused[#loc162, #loc163])
#loc227 = loc(fused[#loc164, #loc165])
#loc228 = loc(fused[#loc166, #loc167, #loc168, #loc163])
