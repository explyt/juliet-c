!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":44:67)
#loc6 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":44:73)
#loc16 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":56:71)
#loc17 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":56:77)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":64:71)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":64:77)
#loc49 = loc(fused[#loc5, #loc6])
#loc53 = loc(fused[#loc16, #loc17])
#loc58 = loc(fused[#loc30, #loc31])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc47)
  cir.func @CWE369_Divide_by_Zero__int_connect_socket_modulo_63b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc49)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc51)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc48)
  cir.func @CWE369_Divide_by_Zero__int_connect_socket_modulo_63b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc16, #loc17])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc53)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc55)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc24)
    cir.return loc(#loc15)
  } loc(#loc52)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc27)
  cir.func @CWE369_Divide_by_Zero__int_connect_socket_modulo_63b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc30, #loc31])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc58)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc34)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc61)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc62)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc63)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc45)
    cir.br ^bb4 loc(#loc41)
  ^bb3:  // pred: ^bb1
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc27)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb4 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc29)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":44:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":49:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":46:5)
#loc8 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":46:17)
#loc9 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":45:1)
#loc10 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":46:16)
#loc11 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":48:18)
#loc12 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":48:24)
#loc13 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":48:5)
#loc14 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":56:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":61:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":58:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":58:17)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":57:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":58:16)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":60:18)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":60:24)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":60:5)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":74:19)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":64:1)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":76:1)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":66:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":66:17)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":65:1)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":66:16)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":68:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":75:5)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":68:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":68:17)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":69:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":71:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":73:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":70:22)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":70:28)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":70:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_63b.c":74:9)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc3, #loc4])
#loc50 = loc(fused[#loc7, #loc8])
#loc51 = loc(fused[#loc11, #loc12])
#loc52 = loc(fused[#loc14, #loc15])
#loc54 = loc(fused[#loc18, #loc19])
#loc55 = loc(fused[#loc22, #loc23])
#loc56 = loc(fused[#loc25, #loc26])
#loc57 = loc(fused[#loc28, #loc29])
#loc59 = loc(fused[#loc32, #loc33])
#loc60 = loc(fused[#loc36, #loc37])
#loc61 = loc(fused[#loc38, #loc39])
#loc62 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc63 = loc(fused[#loc43, #loc44])
