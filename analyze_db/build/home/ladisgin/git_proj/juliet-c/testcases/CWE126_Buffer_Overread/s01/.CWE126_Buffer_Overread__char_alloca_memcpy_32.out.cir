!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":106:10)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":106:14)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":106:20)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":106:32)
#loc222 = loc(fused[#loc96, #loc97])
#loc223 = loc(fused[#loc98, #loc99])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc191)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc196)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc198)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc199)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc200)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc198)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc199)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc20)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc20)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc20)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
    %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc201)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %14, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc22)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc22)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc22)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc22)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc22)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %21, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc24)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc25)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc25)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc25)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc202)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc29)
    %31 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc31)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc31)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    %36 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %38 = cir.const #cir.int<65> : !s32i loc(#loc35)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc36)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc36)
    cir.libc.memset %42 bytes from %37 set to %38 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc40)
    %45 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc42)
    %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc205)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %50 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %51 = cir.load %50 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.store %51, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    %52 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.store %52, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %54 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
    cir.store %53, %54 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    cir.br ^bb2 loc(#loc46)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc209)
  ^bb3:  // pred: ^bb2
    %55 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %56 = cir.load %55 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %56, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.br ^bb4 loc(#loc210)
  ^bb4:  // pred: ^bb3
    %57 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %59 = cir.const #cir.int<67> : !s32i loc(#loc59)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc60)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc60)
    cir.libc.memset %63 bytes from %58 set to %59 : !cir.ptr<!void>, !s32i, !u64i loc(#loc211)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc64)
    %66 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %68 = cir.binop(sub, %66, %67) nsw : !s32i loc(#loc65)
    %69 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %70 = cir.ptr_stride(%69 : !cir.ptr<!s8i>, %68 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %65, %70 : !s8i, !cir.ptr<!s8i> loc(#loc212)
    %71 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %72 = cir.cast(bitcast, %71 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    %73 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %74 = cir.cast(bitcast, %73 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
    %75 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc70)
    %76 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    %77 = cir.call @strlen(%76) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc70)
    %78 = cir.const #cir.int<1> : !u64i loc(#loc213)
    %79 = cir.binop(mul, %77, %78) : !u64i loc(#loc214)
    cir.libc.memcpy %79 bytes from %74 to %72 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc215)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc76)
    %82 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %84 = cir.binop(sub, %82, %83) nsw : !s32i loc(#loc77)
    %85 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc79)
    cir.store %81, %86 : !s8i, !cir.ptr<!s8i> loc(#loc216)
    %87 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%87) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb5 loc(#loc57)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc193)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc83)
  } loc(#loc217)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc219)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc93)
  cir.func @main(%arg0: !s32i loc(fused[#loc96, #loc97]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc98, #loc99])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc102)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc102)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc103)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call @CWE126_Buffer_Overread__char_alloca_memcpy_32_good() : () -> () loc(#loc105)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc92)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call @CWE126_Buffer_Overread__char_alloca_memcpy_32_bad() : () -> () loc(#loc109)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    cir.return %17 : !s32i loc(#loc226)
  } loc(#loc221)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc229)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc230)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc232)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc233)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc234)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc232)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc233)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc129)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc129)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc129)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc129)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc129)
    %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc235)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc129)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc129)
    cir.store %14, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc131)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc131)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc131)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc131)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc131)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %21, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc133)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc134)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc134)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc134)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc138)
    %31 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc140)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc140)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    %36 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
    %38 = cir.const #cir.int<65> : !s32i loc(#loc144)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc145)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc145)
    cir.libc.memset %42 bytes from %37 set to %38 : !cir.ptr<!void>, !s32i, !u64i loc(#loc238)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc149)
    %45 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc151)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc151)
    %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc153)
    cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %50 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %51 = cir.load %50 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    cir.store %51, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    %52 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.store %52, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %54 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.store %53, %54 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.br ^bb2 loc(#loc155)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc243)
  ^bb3:  // pred: ^bb2
    %55 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %56 = cir.load %55 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    cir.store %56, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.br ^bb4 loc(#loc244)
  ^bb4:  // pred: ^bb3
    %57 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc167)
    %59 = cir.const #cir.int<67> : !s32i loc(#loc168)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc169)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc169)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc169)
    cir.libc.memset %63 bytes from %58 set to %59 : !cir.ptr<!void>, !s32i, !u64i loc(#loc245)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc173)
    %66 = cir.const #cir.int<100> : !s32i loc(#loc174)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %68 = cir.binop(sub, %66, %67) nsw : !s32i loc(#loc174)
    %69 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc176)
    %70 = cir.ptr_stride(%69 : !cir.ptr<!s8i>, %68 : !s32i), !cir.ptr<!s8i> loc(#loc176)
    cir.store %65, %70 : !s8i, !cir.ptr<!s8i> loc(#loc246)
    %71 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
    %72 = cir.cast(bitcast, %71 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
    %73 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    %74 = cir.cast(bitcast, %73 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
    %75 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc179)
    %76 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
    %77 = cir.call @strlen(%76) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
    %78 = cir.const #cir.int<1> : !u64i loc(#loc247)
    %79 = cir.binop(mul, %77, %78) : !u64i loc(#loc248)
    cir.libc.memcpy %79 bytes from %74 to %72 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc249)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc185)
    %82 = cir.const #cir.int<100> : !s32i loc(#loc186)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %84 = cir.binop(sub, %82, %83) nsw : !s32i loc(#loc186)
    %85 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc188)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc188)
    cir.store %81, %86 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    %87 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%87) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc163)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc115)
  } loc(#loc227)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":53:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":35:9)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":35:24)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":41:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":41:24)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":43:13)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":43:26)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":26:25)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":27:25)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":28:36)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":29:5)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":29:37)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":30:12)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":30:27)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":30:32)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":30:35)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":30:5)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":30:36)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":31:27)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":31:5)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":31:19)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":31:22)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":31:23)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":32:12)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":32:28)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":32:33)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":32:37)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":32:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":32:38)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":33:29)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":33:5)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":33:20)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":33:24)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":33:25)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":34:5)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":39:5)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":35:23)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":37:16)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":37:9)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":38:21)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":38:10)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":38:9)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":40:5)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":52:5)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":41:23)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":42:9)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":51:9)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":44:20)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":44:26)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":44:31)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":44:35)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":44:13)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":44:36)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":45:27)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":45:18)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":45:22)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":45:13)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:20)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:26)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:32)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:39)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:45)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:56)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:13)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":48:57)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":49:27)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":49:18)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":49:22)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":49:13)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":50:23)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":50:13)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":92:1)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":95:1)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":94:5)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":94:13)
#loc86 = loc("/usr/include/stdlib.h":575:1)
#loc87 = loc("/usr/include/stdlib.h":575:41)
#loc88 = loc("/usr/include/time.h":76:1)
#loc89 = loc("/usr/include/time.h":76:38)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":111:15)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":113:15)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":116:15)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":118:15)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":106:1)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":121:1)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":107:1)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":109:27)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":109:22)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":109:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":111:5)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":112:5)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":112:56)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":113:5)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":116:5)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":117:5)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":117:55)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":118:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":120:12)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":120:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":60:1)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":90:1)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":72:9)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":72:24)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":78:9)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":78:24)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":80:13)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":80:26)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":62:5)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":62:12)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":63:5)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":63:25)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":64:5)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":64:25)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":65:5)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":65:36)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":66:5)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":66:37)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":67:12)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":67:27)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":67:32)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":67:35)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":67:5)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":67:36)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":68:27)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":68:5)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":68:19)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":68:22)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":68:23)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":69:12)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":69:28)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":69:33)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":69:37)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":69:5)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":69:38)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":70:29)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":70:5)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":70:20)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":70:24)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":70:25)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":71:5)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":76:5)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":72:23)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":74:16)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":74:9)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":75:21)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":75:10)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":75:9)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":77:5)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":89:5)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":78:23)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":79:9)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":88:9)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":81:20)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":81:26)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":81:31)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":81:35)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":81:13)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":81:36)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":82:27)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":82:18)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":82:22)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":82:13)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:20)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:26)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:32)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:39)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:45)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:56)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:13)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":85:57)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":86:27)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":86:18)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":86:22)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":86:13)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":87:23)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_32.c":87:13)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc3, #loc4])
#loc193 = loc(fused[#loc5, #loc6])
#loc194 = loc(fused[#loc7, #loc8])
#loc195 = loc(fused[#loc9, #loc10])
#loc196 = loc(fused[#loc11, #loc12])
#loc197 = loc(fused[#loc13, #loc14])
#loc198 = loc(fused[#loc15, #loc16])
#loc199 = loc(fused[#loc17, #loc18])
#loc200 = loc(fused[#loc19, #loc20])
#loc201 = loc(fused[#loc21, #loc22])
#loc202 = loc(fused[#loc27, #loc28])
#loc203 = loc(fused[#loc30, #loc29])
#loc204 = loc(fused[#loc38, #loc39])
#loc205 = loc(fused[#loc41, #loc40])
#loc206 = loc(fused[#loc45, #loc46])
#loc207 = loc(fused[#loc49, #loc48])
#loc208 = loc(fused[#loc52, #loc50])
#loc209 = loc(fused[#loc53, #loc54])
#loc210 = loc(fused[#loc56, #loc57])
#loc211 = loc(fused[#loc62, #loc63])
#loc212 = loc(fused[#loc67, #loc64])
#loc213 = loc(fused[#loc72, #loc73])
#loc214 = loc(fused[#loc70, #loc73])
#loc215 = loc(fused[#loc74, #loc75])
#loc216 = loc(fused[#loc79, #loc76])
#loc217 = loc(fused[#loc82, #loc83])
#loc218 = loc(fused[#loc84, #loc85])
#loc219 = loc(fused[#loc86, #loc87])
#loc220 = loc(fused[#loc88, #loc89])
#loc221 = loc(fused[#loc94, #loc95])
#loc224 = loc(fused[#loc105, #loc106])
#loc225 = loc(fused[#loc109, #loc110])
#loc226 = loc(fused[#loc113, #loc112])
#loc227 = loc(fused[#loc114, #loc115])
#loc228 = loc(fused[#loc116, #loc117])
#loc229 = loc(fused[#loc118, #loc119])
#loc230 = loc(fused[#loc120, #loc121])
#loc231 = loc(fused[#loc122, #loc123])
#loc232 = loc(fused[#loc124, #loc125])
#loc233 = loc(fused[#loc126, #loc127])
#loc234 = loc(fused[#loc128, #loc129])
#loc235 = loc(fused[#loc130, #loc131])
#loc236 = loc(fused[#loc136, #loc137])
#loc237 = loc(fused[#loc139, #loc138])
#loc238 = loc(fused[#loc147, #loc148])
#loc239 = loc(fused[#loc150, #loc149])
#loc240 = loc(fused[#loc154, #loc155])
#loc241 = loc(fused[#loc158, #loc157])
#loc242 = loc(fused[#loc161, #loc159])
#loc243 = loc(fused[#loc162, #loc163])
#loc244 = loc(fused[#loc165, #loc166])
#loc245 = loc(fused[#loc171, #loc172])
#loc246 = loc(fused[#loc176, #loc173])
#loc247 = loc(fused[#loc181, #loc182])
#loc248 = loc(fused[#loc179, #loc182])
#loc249 = loc(fused[#loc183, #loc184])
#loc250 = loc(fused[#loc188, #loc185])
