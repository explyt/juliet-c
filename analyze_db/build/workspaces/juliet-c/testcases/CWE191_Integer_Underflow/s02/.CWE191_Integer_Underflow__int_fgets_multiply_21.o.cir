!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":27:21)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":27:25)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":72:26)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":72:30)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":120:26)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":120:30)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":163:25)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":163:29)
#loc239 = loc(fused[#loc16, #loc17])
#loc262 = loc(fused[#loc76, #loc77])
#loc285 = loc(fused[#loc140, #loc141])
#loc308 = loc(fused[#loc202, #loc203])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc232)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc233)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc234)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc236)
  cir.func private @printIntLine(!s32i) loc(#loc237)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc239)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc18)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc236)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc243)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc245)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc29)
            %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc30)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc245)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc31)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc32)
          } loc(#loc244)
        } loc(#loc242)
      } loc(#loc241)
    } loc(#loc240)
    cir.return loc(#loc15)
  } loc(#loc238)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc247)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc37)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc250)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc250)
      cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc250)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
        %8 = cir.const #cir.int<3> : !s32i loc(#loc46)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc46)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc46)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc46)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc46)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc46)
        %14 = cir.binop(add, %11, %13) : !u64i loc(#loc46)
        %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc46)
        %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
        %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
        %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
        %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc252)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc53)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc54)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc57)
        } loc(#loc253)
      } loc(#loc251)
    } loc(#loc249)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc236)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.call @badSink(%4) : (!s32i) -> () loc(#loc61)
    cir.return loc(#loc34)
  } loc(#loc246)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc257)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc258)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc66)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc259)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc68)
    cir.return loc(#loc63)
  } loc(#loc256)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc73)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc76, #loc77])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc262)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc260)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc81)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc85)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc89)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc266)
          cir.if %6 {
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc94)
              %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc94)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc94)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc95)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc269)
              %14 = cir.cmp(gt, %7, %13) : !s32i, !cir.bool loc(#loc270)
              cir.if %14 {
                %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc272)
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc101)
                %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc102)
                cir.store %18, %15 : !s32i, !cir.ptr<!s32i> loc(#loc272)
                %19 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc104)
              } else {
                %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc73)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc73)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc105)
              } loc(#loc271)
            } loc(#loc268)
          } loc(#loc267)
        } loc(#loc265)
      } loc(#loc264)
    } loc(#loc263)
    cir.return loc(#loc75)
  } loc(#loc261)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc110)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc277)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc277)
      cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc277)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
        %8 = cir.const #cir.int<3> : !s32i loc(#loc119)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc119)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc119)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc119)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc119)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc119)
        %14 = cir.binop(add, %11, %13) : !u64i loc(#loc119)
        %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc119)
        %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
        %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
        %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc121)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
        %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc279)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc127)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc130)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc130)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc131)
        } loc(#loc280)
      } loc(#loc278)
    } loc(#loc276)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc260)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call @goodB2G1Sink(%4) : (!s32i) -> () loc(#loc135)
    cir.return loc(#loc107)
  } loc(#loc273)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc283)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc140, #loc141])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc285)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc283)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc145)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc145)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc150)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc289)
          cir.if %6 {
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc155)
              %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc155)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc155)
              %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc155)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc156)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc292)
              %14 = cir.cmp(gt, %7, %13) : !s32i, !cir.bool loc(#loc293)
              cir.if %14 {
                %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc295)
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc162)
                %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc163)
                cir.store %18, %15 : !s32i, !cir.ptr<!s32i> loc(#loc295)
                %19 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc165)
              } else {
                %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc166)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc166)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc167)
              } loc(#loc294)
            } loc(#loc291)
          } loc(#loc290)
        } loc(#loc288)
      } loc(#loc287)
    } loc(#loc286)
    cir.return loc(#loc139)
  } loc(#loc284)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc297)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc300)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc300)
      cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc300)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc180)
        %8 = cir.const #cir.int<3> : !s32i loc(#loc181)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc181)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc181)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc181)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc181)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc181)
        %14 = cir.binop(add, %11, %13) : !u64i loc(#loc181)
        %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc181)
        %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
        %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc182)
        %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc183)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc184)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
        %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc302)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc188)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc189)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc192)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc192)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc193)
        } loc(#loc303)
      } loc(#loc301)
    } loc(#loc299)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc283)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.call @goodB2G2Sink(%4) : (!s32i) -> () loc(#loc197)
    cir.return loc(#loc169)
  } loc(#loc296)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc306)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc202, #loc203])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc308)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc306)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc207)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc212)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc312)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc314)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc215)
            %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc216)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc314)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc217)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc218)
          } loc(#loc313)
        } loc(#loc311)
      } loc(#loc310)
    } loc(#loc309)
    cir.return loc(#loc201)
  } loc(#loc307)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc316)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc223)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc225)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc226)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc228)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc306)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc231)
    cir.return loc(#loc220)
  } loc(#loc315)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":55:23)
#loc10 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":25:1)
#loc11 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":25:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":27:1)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":38:1)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":28:1)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":29:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":37:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":29:8)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":30:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":31:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":36:9)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":31:12)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":31:19)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":32:9)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":34:13)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":34:33)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":34:26)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":35:26)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":35:13)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":40:1)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":60:1)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":42:5)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":42:9)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":44:12)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":44:5)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":45:5)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":57:5)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":46:9)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":46:45)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":48:9)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":56:9)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":48:19)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":48:32)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":48:49)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":48:13)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":48:59)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":49:9)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":52:9)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":54:9)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":51:25)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":51:20)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":51:13)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":51:36)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":55:13)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":58:17)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":58:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":59:13)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":59:5)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":187:1)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":192:1)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":189:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":189:14)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":190:5)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":190:14)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":191:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":191:13)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":67:1)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":67:29)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":77:19)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":91:27)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":72:1)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":95:1)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":73:1)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":74:5)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":94:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":74:8)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":75:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":78:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":80:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":77:9)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":81:9)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":93:9)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":81:12)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":81:19)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":82:9)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":84:13)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":92:13)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":84:17)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":84:25)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":84:33)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":84:34)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":85:13)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":88:13)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":90:13)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":86:17)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":86:37)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":86:30)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":87:30)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":87:17)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":91:17)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":97:1)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":117:1)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":99:5)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":99:9)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":101:12)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":101:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":102:5)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":114:5)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":103:9)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":103:45)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":105:9)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":113:9)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":105:19)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":105:32)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":105:49)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":105:13)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":105:59)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":106:9)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":109:9)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":111:9)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":108:25)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":108:20)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":108:13)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":108:36)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":112:23)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":112:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":115:22)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":115:5)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":116:18)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":116:5)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":68:1)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":68:29)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":120:1)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":138:1)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":121:1)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":122:5)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":137:5)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":122:8)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":123:5)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":124:9)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":136:9)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":124:12)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":124:19)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":125:9)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":127:13)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":135:13)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":127:17)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":127:25)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":127:33)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":127:34)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":128:13)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":131:13)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":133:13)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":129:17)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":129:37)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":129:30)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":130:30)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":130:17)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":134:27)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":134:17)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":140:1)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":160:1)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":142:5)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":142:9)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":144:12)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":144:5)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":145:5)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":157:5)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":146:9)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":146:45)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":148:9)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":156:9)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":148:19)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":148:32)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":148:49)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":148:13)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":148:59)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":149:9)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":152:9)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":154:9)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":151:25)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":151:20)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":151:13)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":151:36)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":155:23)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":155:13)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":158:22)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":158:5)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":159:18)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":159:5)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":69:1)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":69:28)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":163:1)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":174:1)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":164:1)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":165:5)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":173:5)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":165:8)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":166:5)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":167:9)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":172:9)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":167:12)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":167:19)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":168:9)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":170:13)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":170:33)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":170:26)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":171:26)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":171:13)
#loc219 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":176:1)
#loc220 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":185:1)
#loc221 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":178:5)
#loc222 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":178:9)
#loc223 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":180:12)
#loc224 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":180:5)
#loc225 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":182:13)
#loc226 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":182:12)
#loc227 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":182:5)
#loc228 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":183:21)
#loc229 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":183:5)
#loc230 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":184:17)
#loc231 = loc("CWE191_Integer_Underflow__int_fgets_multiply_21.c":184:5)
#loc232 = loc(fused[#loc1, #loc2])
#loc233 = loc(fused[#loc3, #loc4])
#loc234 = loc(fused[#loc5, #loc6])
#loc235 = loc(fused[#loc7, #loc8])
#loc236 = loc(fused[#loc10, #loc11])
#loc237 = loc(fused[#loc12, #loc13])
#loc238 = loc(fused[#loc14, #loc15])
#loc240 = loc(fused[#loc19, #loc20])
#loc241 = loc(fused[#loc22, #loc20])
#loc242 = loc(fused[#loc23, #loc24])
#loc243 = loc(fused[#loc25, #loc26])
#loc244 = loc(fused[#loc27, #loc24])
#loc245 = loc(fused[#loc28, #loc29])
#loc246 = loc(fused[#loc33, #loc34])
#loc247 = loc(fused[#loc35, #loc36])
#loc248 = loc(fused[#loc38, #loc37])
#loc249 = loc(fused[#loc39, #loc40])
#loc250 = loc(fused[#loc41, #loc42])
#loc251 = loc(fused[#loc43, #loc44])
#loc252 = loc(fused[#loc48, #loc49])
#loc253 = loc(fused[#loc50, #loc51, #loc52, #loc44])
#loc254 = loc(fused[#loc55, #loc56])
#loc255 = loc(fused[#loc59, #loc58])
#loc256 = loc(fused[#loc62, #loc63])
#loc257 = loc(fused[#loc64, #loc65])
#loc258 = loc(fused[#loc66, #loc67])
#loc259 = loc(fused[#loc68, #loc69])
#loc260 = loc(fused[#loc70, #loc71])
#loc261 = loc(fused[#loc74, #loc75])
#loc263 = loc(fused[#loc79, #loc80])
#loc264 = loc(fused[#loc82, #loc83, #loc84, #loc80])
#loc265 = loc(fused[#loc86, #loc87])
#loc266 = loc(fused[#loc88, #loc89])
#loc267 = loc(fused[#loc90, #loc87])
#loc268 = loc(fused[#loc91, #loc92])
#loc269 = loc(fused[#loc94, #loc95])
#loc270 = loc(fused[#loc93, #loc96])
#loc271 = loc(fused[#loc97, #loc98, #loc99, #loc92])
#loc272 = loc(fused[#loc100, #loc101])
#loc273 = loc(fused[#loc106, #loc107])
#loc274 = loc(fused[#loc108, #loc109])
#loc275 = loc(fused[#loc111, #loc110])
#loc276 = loc(fused[#loc112, #loc113])
#loc277 = loc(fused[#loc114, #loc115])
#loc278 = loc(fused[#loc116, #loc117])
#loc279 = loc(fused[#loc121, #loc122])
#loc280 = loc(fused[#loc123, #loc124, #loc125, #loc117])
#loc281 = loc(fused[#loc128, #loc129])
#loc282 = loc(fused[#loc133, #loc132])
#loc283 = loc(fused[#loc136, #loc137])
#loc284 = loc(fused[#loc138, #loc139])
#loc286 = loc(fused[#loc143, #loc144])
#loc287 = loc(fused[#loc146, #loc144])
#loc288 = loc(fused[#loc147, #loc148])
#loc289 = loc(fused[#loc149, #loc150])
#loc290 = loc(fused[#loc151, #loc148])
#loc291 = loc(fused[#loc152, #loc153])
#loc292 = loc(fused[#loc155, #loc156])
#loc293 = loc(fused[#loc154, #loc157])
#loc294 = loc(fused[#loc158, #loc159, #loc160, #loc153])
#loc295 = loc(fused[#loc161, #loc162])
#loc296 = loc(fused[#loc168, #loc169])
#loc297 = loc(fused[#loc170, #loc171])
#loc298 = loc(fused[#loc173, #loc172])
#loc299 = loc(fused[#loc174, #loc175])
#loc300 = loc(fused[#loc176, #loc177])
#loc301 = loc(fused[#loc178, #loc179])
#loc302 = loc(fused[#loc183, #loc184])
#loc303 = loc(fused[#loc185, #loc186, #loc187, #loc179])
#loc304 = loc(fused[#loc190, #loc191])
#loc305 = loc(fused[#loc195, #loc194])
#loc306 = loc(fused[#loc198, #loc199])
#loc307 = loc(fused[#loc200, #loc201])
#loc309 = loc(fused[#loc205, #loc206])
#loc310 = loc(fused[#loc208, #loc206])
#loc311 = loc(fused[#loc209, #loc210])
#loc312 = loc(fused[#loc211, #loc212])
#loc313 = loc(fused[#loc213, #loc210])
#loc314 = loc(fused[#loc214, #loc215])
#loc315 = loc(fused[#loc219, #loc220])
#loc316 = loc(fused[#loc221, #loc222])
#loc317 = loc(fused[#loc224, #loc223])
#loc318 = loc(fused[#loc227, #loc225])
#loc319 = loc(fused[#loc229, #loc228])
