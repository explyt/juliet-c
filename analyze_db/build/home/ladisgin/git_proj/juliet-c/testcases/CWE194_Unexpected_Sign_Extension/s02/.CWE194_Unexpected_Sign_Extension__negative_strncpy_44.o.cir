!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":21:21)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":21:27)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":57:25)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":57:31)
#loc108 = loc(fused[#loc7, #loc8])
#loc126 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.func internal private @badSink(%arg0: !s16i loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc109)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc110)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc108)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc13)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc110)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc110)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc17)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc18)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc18)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc112)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc22)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc23)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc113)
    cir.br ^bb2 loc(#loc114)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc28)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc28)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc115)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc116)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc31)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %25 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc34)
    %26 = cir.cast(integral, %25 : !s16i), !u64i loc(#loc34)
    %27 = cir.call @strncpy(%23, %24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc35)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc36)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc117)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc107)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_strncpy_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc45)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc120)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc46)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc121)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc49)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc49)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc122)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc51)
    %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc52)
    cir.call %8(%9) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc51)
    cir.return loc(#loc41)
  } loc(#loc118)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_strncpy_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc123)
  cir.func internal private @goodG2BSink(%arg0: !s16i loc(fused[#loc59, #loc60])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc127)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc128)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc126)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc65)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc128)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc69)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc70)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc70)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc130)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc74)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc75)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc77)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc80)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc80)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc133)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc83)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    %25 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc86)
    %26 = cir.cast(integral, %25 : !s16i), !u64i loc(#loc86)
    %27 = cir.call @strncpy(%23, %24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc87)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc88)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    cir.br ^bb4 loc(#loc79)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc58)
  } loc(#loc125)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc97)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc138)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc98)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc139)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc100)
    %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc100)
    cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc140)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc103)
    %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc104)
    cir.call %9(%10) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc103)
    cir.return loc(#loc93)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":21:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":37:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":24:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":24:24)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":25:9)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":25:26)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":22:1)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":23:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":36:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":26:16)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":26:24)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":26:29)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":26:33)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":26:9)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":26:34)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":27:25)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":27:16)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":27:20)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":27:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":28:9)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":34:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":28:13)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":28:20)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":29:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":32:13)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":32:21)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":32:27)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":32:35)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":33:26)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":33:18)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":33:13)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":35:19)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":35:9)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":39:1)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":50:1)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":41:5)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":41:11)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":43:5)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":43:31)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":45:12)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":45:5)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":47:13)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":47:12)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":47:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":49:5)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":49:13)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":86:1)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":89:1)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":88:5)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":88:13)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":57:1)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":73:1)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":60:9)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":60:24)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":61:9)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":61:26)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":58:1)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":59:5)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":72:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":62:16)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":62:24)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":62:29)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":62:33)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":62:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":62:34)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":63:25)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":63:16)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":63:20)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":63:9)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":64:9)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":70:9)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":64:13)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":64:20)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":65:9)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":68:13)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":68:21)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":68:27)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":68:35)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":69:26)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":69:18)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":69:13)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":71:19)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":71:9)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":75:1)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":84:1)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":77:5)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":77:11)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":78:5)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":78:31)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":80:12)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":80:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":82:12)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":82:16)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":82:5)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":83:5)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_44.c":83:13)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc14, #loc15])
#loc112 = loc(fused[#loc20, #loc21])
#loc113 = loc(fused[#loc25, #loc22])
#loc114 = loc(fused[#loc26, #loc27])
#loc115 = loc(fused[#loc28, #loc29])
#loc116 = loc(fused[#loc30, #loc27])
#loc117 = loc(fused[#loc37, #loc35])
#loc118 = loc(fused[#loc40, #loc41])
#loc119 = loc(fused[#loc42, #loc43])
#loc120 = loc(fused[#loc44, #loc45])
#loc121 = loc(fused[#loc47, #loc46])
#loc122 = loc(fused[#loc50, #loc48])
#loc123 = loc(fused[#loc53, #loc54])
#loc124 = loc(fused[#loc55, #loc56])
#loc125 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc61, #loc62])
#loc128 = loc(fused[#loc63, #loc64])
#loc129 = loc(fused[#loc66, #loc67])
#loc130 = loc(fused[#loc72, #loc73])
#loc131 = loc(fused[#loc77, #loc74])
#loc132 = loc(fused[#loc78, #loc79])
#loc133 = loc(fused[#loc80, #loc81])
#loc134 = loc(fused[#loc82, #loc79])
#loc135 = loc(fused[#loc89, #loc87])
#loc136 = loc(fused[#loc92, #loc93])
#loc137 = loc(fused[#loc94, #loc95])
#loc138 = loc(fused[#loc96, #loc97])
#loc139 = loc(fused[#loc99, #loc98])
#loc140 = loc(fused[#loc102, #loc101])
