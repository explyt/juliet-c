!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc225)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc226)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc227)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc228)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc229)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc230)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc231)
  cir.func private @close(!s32i) -> !s32i loc(#loc232)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc233)
  cir.func private @printIntLine(!s32i) loc(#loc234)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc238)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc239)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc240)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc241)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc242)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc243)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc244)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc41)
    cir.store %10, %8 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.br ^bb1 loc(#loc246)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc28)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc30)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb2 loc(#loc247)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc247)
  ^bb3:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %16 ^bb4, ^bb35 loc(#loc47)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc248)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %18 = cir.const #cir.int<1> : !u32i loc(#loc51)
    %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc51)
    %20 = cir.const #cir.int<6> : !u32i loc(#loc52)
    %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc52)
    %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb6 loc(#loc250)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc59)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc251)
    cir.brcond %26 ^bb7, ^bb8 loc(#loc252)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc61)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc253)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc254)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc69)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc256)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc72)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc257)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc76)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc76)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc258)
    cir.br ^bb10 loc(#loc259)
  ^bb10:  // pred: ^bb9
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc260)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc261)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc261)
    %45 = cir.call @bind(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc89)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc262)
    cir.brcond %48 ^bb11, ^bb12 loc(#loc263)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc91)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc82)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc264)
  ^bb14:  // pred: ^bb13
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %50 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %51 = cir.call @listen(%49, %50) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc97)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc265)
    cir.brcond %54 ^bb15, ^bb16 loc(#loc266)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc99)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc93)
  ^bb17:  // pred: ^bb16
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
    %58 = cir.call @accept(%55, %56, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
    cir.store %58, %3 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb18 loc(#loc268)
  ^bb18:  // pred: ^bb17
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc109)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %62 ^bb19, ^bb20 loc(#loc270)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc111)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc107)
  ^bb21:  // pred: ^bb20
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %64 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %66 = cir.const #cir.int<3> : !s32i loc(#loc114)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc114)
    %68 = cir.const #cir.int<4> : !u64i loc(#loc114)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc114)
    %70 = cir.const #cir.int<2> : !s32i loc(#loc114)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc114)
    %72 = cir.binop(add, %69, %71) : !u64i loc(#loc114)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc115)
    %75 = cir.binop(sub, %72, %74) : !u64i loc(#loc271)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %77 = cir.call @recv(%63, %65, %75, %76) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
    %78 = cir.cast(integral, %77 : !s64i), !s32i loc(#loc117)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb22 loc(#loc273)
  ^bb22:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc123)
    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %82 ^bb23, ^bb24 loc(#loc124)
  ^bb23:  // pred: ^bb22
    %83 = cir.const #true loc(#loc124)
    cir.br ^bb29(%83 : !cir.bool) loc(#loc124)
  ^bb24:  // pred: ^bb22
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %85 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %86 ^bb25, ^bb26 loc(#loc124)
  ^bb25:  // pred: ^bb24
    %87 = cir.const #true loc(#loc124)
    cir.br ^bb27(%87 : !cir.bool) loc(#loc124)
  ^bb26:  // pred: ^bb24
    %88 = cir.const #false loc(#loc124)
    cir.br ^bb27(%88 : !cir.bool) loc(#loc124)
  ^bb27(%89: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc124)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%89 : !cir.bool) loc(#loc124)
  ^bb29(%90: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc124)
  ^bb30:  // pred: ^bb29
    cir.brcond %90 ^bb31, ^bb32 loc(#loc276)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc128)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc121)
  ^bb33:  // pred: ^bb32
    %91 = cir.const #cir.int<0> : !s8i loc(#loc129)
    %92 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
    %94 = cir.ptr_stride(%93 : !cir.ptr<!s8i>, %92 : !s32i), !cir.ptr<!s8i> loc(#loc131)
    cir.store %91, %94 : !s8i, !cir.ptr<!s8i> loc(#loc277)
    %95 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
    %96 = cir.call @atoi(%95) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc133)
    cir.store %96, %8 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb34 loc(#loc49)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc46)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc46)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc279)
  ^bb37:  // pred: ^bb36
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %99 = cir.unary(minus, %98) nsw : !s32i, !s32i loc(#loc139)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc280)
    cir.brcond %100 ^bb38, ^bb39 loc(#loc281)
  ^bb38:  // pred: ^bb37
    %101 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc142)
    cir.br ^bb39 loc(#loc137)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc137)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc282)
  ^bb41:  // pred: ^bb40
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %105 = cir.unary(minus, %104) nsw : !s32i, !s32i loc(#loc146)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc283)
    cir.brcond %106 ^bb42, ^bb43 loc(#loc284)
  ^bb42:  // pred: ^bb41
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc149)
    cir.br ^bb43 loc(#loc144)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc144)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc44)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc285)
  ^bb46:  // pred: ^bb45
    %109 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %110 = cir.cast(integral, %109 : !s32i), !u64i loc(#loc152)
    %111 = cir.const #cir.int<4> : !u64i loc(#loc286)
    %112 = cir.binop(mul, %110, %111) : !u64i loc(#loc287)
    cir.store %112, %5 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    %113 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %114 = cir.call @_Znam(%113) : (!u64i) -> !cir.ptr<!void> loc(#loc157)
    %115 = cir.cast(bitcast, %114 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
    %116 = cir.cast(bitcast, %115 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc289)
    cir.store %116, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc290)
    cir.br ^bb47 loc(#loc291)
  ^bb47:  // pred: ^bb46
    %117 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %118 = cir.cast(integral, %117 : !s32i), !u64i loc(#loc163)
    cir.store %118, %6 : !u64i, !cir.ptr<!u64i> loc(#loc292)
    cir.br ^bb48 loc(#loc291)
  ^bb48:  // 2 preds: ^bb47, ^bb52
    %119 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %120 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %121 = cir.cast(integral, %120 : !s32i), !u64i loc(#loc166)
    %122 = cir.cmp(lt, %119, %121) : !u64i, !cir.bool loc(#loc293)
    cir.brcond %122 ^bb49, ^bb53 loc(#loc293)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc294)
  ^bb50:  // pred: ^bb49
    %123 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %124 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
    %125 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc170)
    %126 = cir.ptr_stride(%124 : !cir.ptr<!s32i>, %125 : !u64i), !cir.ptr<!s32i> loc(#loc171)
    cir.store %123, %126 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb51 loc(#loc162)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc162)
  ^bb52:  // pred: ^bb51
    %127 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %128 = cir.unary(inc, %127) : !u64i, !u64i loc(#loc173)
    cir.store %128, %6 : !u64i, !cir.ptr<!u64i> loc(#loc296)
    cir.br ^bb48 loc(#loc291)
  ^bb53:  // pred: ^bb48
    cir.br ^bb54 loc(#loc162)
  ^bb54:  // pred: ^bb53
    %129 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
    %130 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %131 = cir.ptr_stride(%129 : !cir.ptr<!s32i>, %130 : !s32i), !cir.ptr<!s32i> loc(#loc176)
    %132 = cir.load %131 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.call @printIntLine(%132) : (!s32i) -> () loc(#loc177)
    %133 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
    cir.delete.array %133 : <!s32i> loc(#loc178)
    cir.br ^bb55 loc(#loc151)
  ^bb55:  // pred: ^bb54
    cir.return loc(#loc22)
  } loc(#loc235)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc299)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc300)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc301)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc189)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc191)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb1 loc(#loc304)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc195)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc305)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc306)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc307)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc199)
    %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc200)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc308)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc308)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc309)
    cir.br ^bb2 loc(#loc310)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc206)
    cir.store %16, %1 : !u64i, !cir.ptr<!u64i> loc(#loc311)
    cir.br ^bb3 loc(#loc310)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc208)
    %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc209)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc312)
    cir.brcond %20 ^bb4, ^bb8 loc(#loc312)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc313)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc212)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc213)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc214)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb6 loc(#loc205)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc205)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc215)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc216)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc315)
    cir.br ^bb3 loc(#loc310)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc205)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc218)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc219)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc220)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
    cir.delete.array %31 : <!s32i> loc(#loc221)
    cir.br ^bb10 loc(#loc194)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc180)
  } loc(#loc297)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01L7goodG2BEv() : () -> () loc(#loc224)
    cir.return loc(#loc223)
  } loc(#loc316)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":46:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":133:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":56:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":56:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":57:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":57:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":58:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":58:31)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":59:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":59:31)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":60:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":60:41)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":121:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":121:16)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":121:26)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":122:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":122:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":48:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":48:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":50:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":50:12)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":50:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":51:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":119:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":61:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":104:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":104:16)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":62:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":103:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":71:35)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":71:44)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":71:57)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":71:28)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":71:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":71:68)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":72:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":75:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":72:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":72:33)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":73:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":74:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":76:20)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":76:21)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":76:30)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":76:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":76:47)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":76:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":76:48)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":77:34)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":77:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":78:39)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":78:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":79:38)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":79:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":79:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":79:46)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":83:13)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:22)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:54)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:55)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:64)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:78)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":80:84)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":81:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":82:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":84:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":87:13)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":84:24)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":84:38)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":84:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":84:57)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":85:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":86:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":88:35)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":88:49)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":88:55)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":88:28)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":88:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":88:59)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":89:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":92:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":89:17)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":89:33)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":90:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":91:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:31)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:45)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:58)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:76)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:79)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:26)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":94:80)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":98:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:17)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:31)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:47)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":95:61)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":96:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":97:17)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":100:39)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":100:25)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":100:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":102:25)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":102:20)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":102:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":102:36)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":105:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":108:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":105:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":105:29)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":106:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":107:26)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":107:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":109:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":112:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":109:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":109:29)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":110:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":111:26)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":111:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":120:5)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":132:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":124:21)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":124:28)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":124:38)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":124:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":125:37)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":46:6)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":125:28)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":125:46)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":125:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":126:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":129:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":126:18)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":126:14)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":126:21)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":126:33)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":127:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":128:29)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":128:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":128:24)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":128:25)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":126:40)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":126:39)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":130:22)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":130:33)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":130:34)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":130:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":131:19)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":140:1)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":160:1)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":148:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":148:16)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":148:26)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":149:9)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":149:14)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":142:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":142:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":144:13)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":144:12)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":144:5)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":146:12)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":146:5)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":147:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":159:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":151:21)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":151:28)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":151:38)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":151:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":152:37)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":140:13)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":152:28)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":152:46)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":152:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":153:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":156:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":153:18)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":153:14)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":153:21)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":153:33)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":154:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":155:29)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":155:13)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":155:24)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":155:25)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":153:40)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":153:39)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":157:22)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":157:33)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":157:34)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":157:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":158:19)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":162:1)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":165:1)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_01.cpp":164:5)
#loc225 = loc(fused[#loc1, #loc2])
#loc226 = loc(fused[#loc3, #loc4])
#loc227 = loc(fused[#loc5, #loc6])
#loc228 = loc(fused[#loc7, #loc8])
#loc229 = loc(fused[#loc9, #loc10])
#loc230 = loc(fused[#loc11, #loc12])
#loc231 = loc(fused[#loc13, #loc14])
#loc232 = loc(fused[#loc15, #loc16])
#loc233 = loc(fused[#loc17, #loc18])
#loc234 = loc(fused[#loc19, #loc20])
#loc235 = loc(fused[#loc21, #loc22])
#loc236 = loc(fused[#loc23, #loc24])
#loc237 = loc(fused[#loc25, #loc26])
#loc238 = loc(fused[#loc27, #loc28])
#loc239 = loc(fused[#loc29, #loc30])
#loc240 = loc(fused[#loc31, #loc32])
#loc241 = loc(fused[#loc33, #loc34])
#loc242 = loc(fused[#loc33, #loc35])
#loc243 = loc(fused[#loc36, #loc37])
#loc244 = loc(fused[#loc38, #loc39])
#loc245 = loc(fused[#loc42, #loc40])
#loc246 = loc(fused[#loc43, #loc44])
#loc247 = loc(fused[#loc45, #loc46])
#loc248 = loc(fused[#loc48, #loc49])
#loc249 = loc(fused[#loc54, #loc55])
#loc250 = loc(fused[#loc56, #loc57])
#loc251 = loc(fused[#loc58, #loc59])
#loc252 = loc(fused[#loc60, #loc57])
#loc253 = loc(fused[#loc62, #loc63])
#loc254 = loc(fused[#loc65, #loc66])
#loc255 = loc(fused[#loc67, #loc68])
#loc256 = loc(fused[#loc71, #loc69])
#loc257 = loc(fused[#loc75, #loc72])
#loc258 = loc(fused[#loc79, #loc80])
#loc259 = loc(fused[#loc81, #loc82])
#loc260 = loc(fused[#loc84, #loc85])
#loc261 = loc(fused[#loc86, #loc87])
#loc262 = loc(fused[#loc88, #loc89])
#loc263 = loc(fused[#loc90, #loc82])
#loc264 = loc(fused[#loc92, #loc93])
#loc265 = loc(fused[#loc96, #loc97])
#loc266 = loc(fused[#loc98, #loc93])
#loc267 = loc(fused[#loc104, #loc105])
#loc268 = loc(fused[#loc106, #loc107])
#loc269 = loc(fused[#loc108, #loc109])
#loc270 = loc(fused[#loc110, #loc107])
#loc271 = loc(fused[#loc114, #loc115])
#loc272 = loc(fused[#loc118, #loc119])
#loc273 = loc(fused[#loc120, #loc121])
#loc274 = loc(fused[#loc122, #loc123])
#loc275 = loc(fused[#loc125, #loc126])
#loc276 = loc(fused[#loc127, #loc121])
#loc277 = loc(fused[#loc131, #loc129])
#loc278 = loc(fused[#loc134, #loc135])
#loc279 = loc(fused[#loc136, #loc137])
#loc280 = loc(fused[#loc138, #loc139])
#loc281 = loc(fused[#loc140, #loc137])
#loc282 = loc(fused[#loc143, #loc144])
#loc283 = loc(fused[#loc145, #loc146])
#loc284 = loc(fused[#loc147, #loc144])
#loc285 = loc(fused[#loc150, #loc151])
#loc286 = loc(fused[#loc153, #loc154])
#loc287 = loc(fused[#loc152, #loc154])
#loc288 = loc(fused[#loc155, #loc154])
#loc289 = loc(fused[#loc158, #loc159])
#loc290 = loc(fused[#loc160, #loc159])
#loc291 = loc(fused[#loc161, #loc162])
#loc292 = loc(fused[#loc164, #loc163])
#loc293 = loc(fused[#loc165, #loc166])
#loc294 = loc(fused[#loc167, #loc162])
#loc295 = loc(fused[#loc169, #loc168])
#loc296 = loc(fused[#loc173, #loc172])
#loc297 = loc(fused[#loc179, #loc180])
#loc298 = loc(fused[#loc181, #loc182])
#loc299 = loc(fused[#loc181, #loc183])
#loc300 = loc(fused[#loc184, #loc185])
#loc301 = loc(fused[#loc186, #loc187])
#loc302 = loc(fused[#loc190, #loc188])
#loc303 = loc(fused[#loc192, #loc191])
#loc304 = loc(fused[#loc193, #loc194])
#loc305 = loc(fused[#loc196, #loc197])
#loc306 = loc(fused[#loc195, #loc197])
#loc307 = loc(fused[#loc198, #loc197])
#loc308 = loc(fused[#loc201, #loc202])
#loc309 = loc(fused[#loc203, #loc202])
#loc310 = loc(fused[#loc204, #loc205])
#loc311 = loc(fused[#loc207, #loc206])
#loc312 = loc(fused[#loc208, #loc209])
#loc313 = loc(fused[#loc210, #loc205])
#loc314 = loc(fused[#loc212, #loc211])
#loc315 = loc(fused[#loc216, #loc215])
#loc316 = loc(fused[#loc222, #loc223])
