!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":76:10)
#loc42 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":76:14)
#loc43 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":76:20)
#loc44 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":76:32)
#loc97 = loc(fused[#loc41, #loc42])
#loc98 = loc(fused[#loc43, #loc44])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_large_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc81)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_large_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc83)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc8)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc84)
    %4 = cir.const #cir.int<127> : !s32i loc(#loc10)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc10)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc10)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc85)
    cir.scope {
      %8 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc87)
      %9 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc88)
      %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc16)
      cir.store %10, %8 : !s16i, !cir.ptr<!s16i> loc(#loc87)
      %11 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc18)
      cir.store %11, %9 : !s16i, !cir.ptr<!s16i> loc(#loc88)
      cir.scope {
        %12 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc90)
        %13 = cir.load %9 : !cir.ptr<!s16i>, !s16i loc(#loc22)
        %14 = cir.cast(integral, %13 : !s16i), !s8i loc(#loc22)
        cir.store %14, %12 : !s8i, !cir.ptr<!s8i> loc(#loc90)
        %15 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc23)
        cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc24)
      } loc(#loc89)
    } loc(#loc86)
    cir.return loc(#loc4)
  } loc(#loc82)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_large_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc92)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc26)
  } loc(#loc91)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc93)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc94)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE197_Numeric_Truncation_Error__short_large_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call @CWE197_Numeric_Truncation_Error__short_large_31_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE197_Numeric_Truncation_Error__short_large_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc100)
    cir.call @CWE197_Numeric_Truncation_Error__short_large_31_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    cir.return %17 : !s32i loc(#loc101)
  } loc(#loc96)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc103)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc64)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc64)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc104)
    %4 = cir.const #cir.int<127> : !s32i loc(#loc66)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc67)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc66)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc66)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc105)
    cir.scope {
      %8 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc107)
      %9 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc108)
      %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc72)
      cir.store %10, %8 : !s16i, !cir.ptr<!s16i> loc(#loc107)
      %11 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc74)
      cir.store %11, %9 : !s16i, !cir.ptr<!s16i> loc(#loc108)
      cir.scope {
        %12 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc110)
        %13 = cir.load %9 : !cir.ptr<!s16i>, !s16i loc(#loc78)
        %14 = cir.cast(integral, %13 : !s16i), !s8i loc(#loc78)
        cir.store %14, %12 : !s8i, !cir.ptr<!s8i> loc(#loc110)
        %15 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc79)
        cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc80)
      } loc(#loc109)
    } loc(#loc106)
    cir.return loc(#loc60)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_large_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":21:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":37:1)
#loc5 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":23:5)
#loc6 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":23:11)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":25:13)
#loc8 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":25:12)
#loc9 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":25:5)
#loc10 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":27:12)
#loc11 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":27:23)
#loc12 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":27:5)
#loc13 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":28:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":36:5)
#loc15 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":29:9)
#loc16 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":29:26)
#loc17 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":30:9)
#loc18 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":30:22)
#loc19 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":31:9)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":35:9)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":33:13)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":33:35)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":34:30)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":34:13)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":62:1)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":65:1)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":64:5)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":64:13)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":81:15)
#loc36 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":83:15)
#loc37 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":86:15)
#loc38 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":88:15)
#loc39 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":76:1)
#loc40 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":91:1)
#loc45 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":77:1)
#loc46 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":79:27)
#loc47 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":79:22)
#loc48 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":79:5)
#loc49 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":81:5)
#loc50 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":82:5)
#loc51 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":82:58)
#loc52 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":83:5)
#loc53 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":86:5)
#loc54 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":87:5)
#loc55 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":87:57)
#loc56 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":88:5)
#loc57 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":90:12)
#loc58 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":90:5)
#loc59 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":44:1)
#loc60 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":60:1)
#loc61 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":46:5)
#loc62 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":46:11)
#loc63 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":48:13)
#loc64 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":48:12)
#loc65 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":48:5)
#loc66 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":50:12)
#loc67 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":50:21)
#loc68 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":50:5)
#loc69 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":51:5)
#loc70 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":59:5)
#loc71 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":52:9)
#loc72 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":52:26)
#loc73 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":53:9)
#loc74 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":53:22)
#loc75 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":54:9)
#loc76 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":58:9)
#loc77 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":56:13)
#loc78 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":56:35)
#loc79 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":57:30)
#loc80 = loc("CWE197_Numeric_Truncation_Error__short_large_31.c":57:13)
#loc81 = loc(fused[#loc1, #loc2])
#loc82 = loc(fused[#loc3, #loc4])
#loc83 = loc(fused[#loc5, #loc6])
#loc84 = loc(fused[#loc9, #loc7])
#loc85 = loc(fused[#loc12, #loc11])
#loc86 = loc(fused[#loc13, #loc14])
#loc87 = loc(fused[#loc15, #loc16])
#loc88 = loc(fused[#loc17, #loc18])
#loc89 = loc(fused[#loc19, #loc20])
#loc90 = loc(fused[#loc21, #loc22])
#loc91 = loc(fused[#loc25, #loc26])
#loc92 = loc(fused[#loc27, #loc28])
#loc93 = loc(fused[#loc29, #loc30])
#loc94 = loc(fused[#loc31, #loc32])
#loc95 = loc(fused[#loc33, #loc34])
#loc96 = loc(fused[#loc39, #loc40])
#loc99 = loc(fused[#loc50, #loc51])
#loc100 = loc(fused[#loc54, #loc55])
#loc101 = loc(fused[#loc58, #loc57])
#loc102 = loc(fused[#loc59, #loc60])
#loc103 = loc(fused[#loc61, #loc62])
#loc104 = loc(fused[#loc65, #loc63])
#loc105 = loc(fused[#loc68, #loc67])
#loc106 = loc(fused[#loc69, #loc70])
#loc107 = loc(fused[#loc71, #loc72])
#loc108 = loc(fused[#loc73, #loc74])
#loc109 = loc(fused[#loc75, #loc76])
#loc110 = loc(fused[#loc77, #loc78])
