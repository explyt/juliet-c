!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_add_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc120)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc122)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_add_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc125)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc126)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc127)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc128)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc129)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc22)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc11)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc121)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc27)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    cir.store %15, %16 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.br ^bb2 loc(#loc25)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc133)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %21 = cir.binop(add, %19, %20) nsw : !s32i loc(#loc37)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc39)
    cir.br ^bb5 loc(#loc36)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc123)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_add_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc140)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc141)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc142)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc143)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc144)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc65)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %11 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb2 loc(#loc63)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // pred: ^bb2
    %12 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %16 = cir.binop(add, %14, %15) nsw : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc77)
    cir.br ^bb5 loc(#loc74)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc47)
  } loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc154)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc155)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc156)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc157)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc158)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc100)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc121)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc102)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc102)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc100)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    cir.store %15, %16 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb2 loc(#loc98)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %20 = cir.const #cir.int<2147483647> : !s32i loc(#loc112)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc165)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %24 = cir.binop(add, %22, %23) nsw : !s32i loc(#loc116)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc118)
    cir.br ^bb7 loc(#loc114)
  ^bb6:  // pred: ^bb4
    %26 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc80)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb7 loc(#loc110)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc110)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc107)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc82)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_add_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":32:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":22:1)
#loc9 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":43:1)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":30:9)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":30:21)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":36:9)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":36:21)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":39:13)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":39:33)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":24:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":24:9)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":25:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":25:22)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":26:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":26:22)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":28:12)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":28:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":29:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":34:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":30:20)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":32:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":32:16)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":33:21)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":33:10)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":33:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":35:5)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":42:5)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":36:20)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":37:9)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":41:9)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":39:26)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":40:26)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":40:13)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":102:1)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":106:1)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":104:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":104:13)
#loc44 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":105:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":105:13)
#loc46 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":50:1)
#loc47 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":71:1)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":58:9)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":58:21)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":64:9)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":64:21)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":67:13)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":67:33)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":52:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":52:9)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":53:5)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":53:22)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":54:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":54:22)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":56:12)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":56:5)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":57:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":62:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":58:20)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":60:16)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":60:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":61:21)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":61:10)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":61:9)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":63:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":70:5)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":64:20)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":65:9)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":69:9)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":67:26)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":68:26)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":68:13)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":97:23)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":74:1)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":100:1)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":82:9)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":82:21)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":88:9)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":88:21)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":92:13)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":92:33)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":76:5)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":76:9)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":77:5)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":77:22)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":78:5)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":78:22)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":80:12)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":80:5)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":81:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":86:5)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":82:20)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":84:9)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":84:16)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":84:23)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":85:21)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":85:10)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":85:9)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":87:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":99:5)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":88:20)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":90:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":98:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":90:13)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":90:20)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":91:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":94:9)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":96:9)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":92:26)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":93:26)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":93:13)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_add_32.c":97:13)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc6, #loc7])
#loc123 = loc(fused[#loc8, #loc9])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc12, #loc13])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc16, #loc17])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc23, #loc22])
#loc131 = loc(fused[#loc24, #loc25])
#loc132 = loc(fused[#loc31, #loc29])
#loc133 = loc(fused[#loc32, #loc33])
#loc134 = loc(fused[#loc35, #loc36])
#loc135 = loc(fused[#loc40, #loc41])
#loc136 = loc(fused[#loc42, #loc43])
#loc137 = loc(fused[#loc44, #loc45])
#loc138 = loc(fused[#loc46, #loc47])
#loc139 = loc(fused[#loc48, #loc49])
#loc140 = loc(fused[#loc50, #loc51])
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc54, #loc55])
#loc143 = loc(fused[#loc56, #loc57])
#loc144 = loc(fused[#loc58, #loc59])
#loc145 = loc(fused[#loc61, #loc60])
#loc146 = loc(fused[#loc62, #loc63])
#loc147 = loc(fused[#loc66, #loc65])
#loc148 = loc(fused[#loc69, #loc67])
#loc149 = loc(fused[#loc70, #loc71])
#loc150 = loc(fused[#loc73, #loc74])
#loc151 = loc(fused[#loc78, #loc79])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc87, #loc88])
#loc156 = loc(fused[#loc89, #loc90])
#loc157 = loc(fused[#loc91, #loc92])
#loc158 = loc(fused[#loc93, #loc94])
#loc159 = loc(fused[#loc96, #loc95])
#loc160 = loc(fused[#loc97, #loc98])
#loc161 = loc(fused[#loc105, #loc103])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc109, #loc110])
#loc164 = loc(fused[#loc111, #loc112])
#loc165 = loc(fused[#loc113, #loc114, #loc115, #loc110])
