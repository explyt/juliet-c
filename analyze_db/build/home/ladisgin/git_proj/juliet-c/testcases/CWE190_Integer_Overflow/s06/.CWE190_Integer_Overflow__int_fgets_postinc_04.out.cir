!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":213:10)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":213:14)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":213:20)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":213:32)
#loc274 = loc(fused[#loc73, #loc74])
#loc275 = loc(fused[#loc75, #loc76])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc245)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc246)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc247)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc249)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc256)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc256)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc256)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc29)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc29)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc29)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc29)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc29)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc29)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc29)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc31)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc40)
            } loc(#loc259)
          } loc(#loc257)
        } loc(#loc255)
      } loc(#loc254)
    } loc(#loc253)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc43)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc264)
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
          %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc50)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc264)
          %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc52)
        } loc(#loc263)
      } loc(#loc262)
    } loc(#loc261)
    cir.return loc(#loc13)
  } loc(#loc250)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc54)
  } loc(#loc266)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc271)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc275)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc80)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_fgets_postinc_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc276)
    cir.call @CWE190_Integer_Overflow__int_fgets_postinc_04_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_fgets_postinc_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc277)
    cir.call @CWE190_Integer_Overflow__int_fgets_postinc_04_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    cir.return %17 : !s32i loc(#loc278)
  } loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc92)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc101)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc101)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc285)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc285)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc285)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc110)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc110)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc110)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc110)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc110)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc110)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc110)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc110)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc111)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc112)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc287)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc118)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc121)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc121)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc122)
            } loc(#loc288)
          } loc(#loc286)
        } loc(#loc284)
      } loc(#loc283)
    } loc(#loc282)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc125)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc133)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc293)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc295)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %9 = cir.unary(inc, %8) : !s32i, !s32i loc(#loc140)
            cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc295)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc142)
          } else {
            %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc92)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc92)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          } loc(#loc294)
        } loc(#loc292)
      } loc(#loc291)
    } loc(#loc290)
    cir.return loc(#loc94)
  } loc(#loc279)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc148)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc152)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc152)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc303)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc303)
          cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc303)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc160)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc161)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc161)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc161)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc161)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc161)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc161)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc161)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc161)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc162)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc163)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc305)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc168)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc169)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc172)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc172)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc173)
            } loc(#loc306)
          } loc(#loc304)
        } loc(#loc302)
      } loc(#loc301)
    } loc(#loc300)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc176)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc176)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc181)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc311)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc313)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %9 = cir.unary(inc, %8) : !s32i, !s32i loc(#loc188)
            cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc314)
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc190)
          } else {
            %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc191)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc191)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc192)
          } loc(#loc312)
        } loc(#loc310)
      } loc(#loc309)
    } loc(#loc308)
    cir.return loc(#loc145)
  } loc(#loc297)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc316)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc197)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc201)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc201)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc205)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc205)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc206)
      } else {
        %4 = cir.const #cir.int<2> : !s32i loc(#loc207)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
      } loc(#loc319)
    } loc(#loc318)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc211)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc211)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc324)
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
          %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc218)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc325)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc324)
          %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc219)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc220)
        } loc(#loc323)
      } loc(#loc322)
    } loc(#loc321)
    cir.return loc(#loc194)
  } loc(#loc315)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc327)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc225)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc229)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc229)
      cir.if %3 {
        %4 = cir.const #cir.int<2> : !s32i loc(#loc231)
        cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
      } loc(#loc330)
    } loc(#loc329)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc235)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc235)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc335)
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
          %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc242)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc240)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc335)
          %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
          cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc244)
        } loc(#loc334)
      } loc(#loc333)
    } loc(#loc332)
    cir.return loc(#loc222)
  } loc(#loc326)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":47:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":30:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":60:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":32:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":32:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":34:12)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":34:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":35:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":50:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":35:8)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":36:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":37:9)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":49:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":38:13)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":38:49)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":40:13)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":48:13)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":40:23)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":40:36)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":40:53)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":40:17)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":40:63)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":41:13)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":44:13)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":46:13)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":43:29)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":43:24)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":43:17)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":43:40)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":47:17)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":51:5)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":59:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":51:8)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":52:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":53:9)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":58:9)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":56:13)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":56:26)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":55:17)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":55:13)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":57:26)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":57:13)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":196:1)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":202:1)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":198:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":198:14)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":199:5)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":199:14)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":200:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":200:14)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":201:5)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":201:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":218:15)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":220:15)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":223:15)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":225:15)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":213:1)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":228:1)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":214:1)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":216:27)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":216:22)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":216:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":218:5)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":219:5)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":219:56)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":220:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":223:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":224:5)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":224:55)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":225:5)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":227:12)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":227:5)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":91:19)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":104:23)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":67:1)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":107:1)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":69:5)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":69:9)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":71:12)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":71:5)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":72:5)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":87:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":72:8)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":73:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":74:9)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":86:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":75:13)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":75:49)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":77:13)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":85:13)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":77:23)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":77:36)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":77:53)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":77:17)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":77:63)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":78:13)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":81:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":83:13)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":80:29)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":80:24)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":80:17)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":80:40)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":84:27)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":84:17)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":88:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":106:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":88:8)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":89:5)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":92:5)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":94:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":91:9)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":96:9)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":105:9)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":96:13)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":96:20)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":97:9)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":101:9)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":103:9)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":99:13)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":99:26)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":98:17)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":98:13)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":100:26)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":100:13)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":104:13)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":110:1)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":145:1)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":112:5)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":112:9)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":114:12)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":114:5)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":115:5)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":130:5)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":115:8)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":116:5)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":117:9)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":129:9)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":118:13)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":118:49)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":120:13)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":128:13)
#loc160 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":120:23)
#loc161 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":120:36)
#loc162 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":120:53)
#loc163 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":120:17)
#loc164 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":120:63)
#loc165 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":121:13)
#loc166 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":124:13)
#loc167 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":126:13)
#loc168 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":123:29)
#loc169 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":123:24)
#loc170 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":123:17)
#loc171 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":123:40)
#loc172 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":127:27)
#loc173 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":127:17)
#loc174 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":131:5)
#loc175 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":144:5)
#loc176 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":131:8)
#loc177 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":132:5)
#loc178 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":134:9)
#loc179 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":143:9)
#loc180 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":134:13)
#loc181 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":134:20)
#loc182 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":135:9)
#loc183 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":139:9)
#loc184 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":141:9)
#loc185 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":137:13)
#loc186 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":137:26)
#loc187 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":136:17)
#loc188 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":136:13)
#loc189 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":138:26)
#loc190 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":138:13)
#loc191 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":142:23)
#loc192 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":142:13)
#loc193 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":148:1)
#loc194 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":172:1)
#loc195 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":150:5)
#loc196 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":150:9)
#loc197 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":152:12)
#loc198 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":152:5)
#loc199 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":153:5)
#loc200 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":162:5)
#loc201 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":153:8)
#loc202 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":154:5)
#loc203 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":157:5)
#loc204 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":159:5)
#loc205 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":156:19)
#loc206 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":156:9)
#loc207 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":161:16)
#loc208 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":161:9)
#loc209 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":163:5)
#loc210 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":171:5)
#loc211 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":163:8)
#loc212 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":164:5)
#loc213 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":165:9)
#loc214 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":170:9)
#loc215 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":168:13)
#loc216 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":168:26)
#loc217 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":167:17)
#loc218 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":167:13)
#loc219 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":169:26)
#loc220 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":169:13)
#loc221 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":175:1)
#loc222 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":194:1)
#loc223 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":177:5)
#loc224 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":177:9)
#loc225 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":179:12)
#loc226 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":179:5)
#loc227 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":180:5)
#loc228 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":184:5)
#loc229 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":180:8)
#loc230 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":181:5)
#loc231 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":183:16)
#loc232 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":183:9)
#loc233 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":185:5)
#loc234 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":193:5)
#loc235 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":185:8)
#loc236 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":186:5)
#loc237 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":187:9)
#loc238 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":192:9)
#loc239 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":190:13)
#loc240 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":190:26)
#loc241 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":189:17)
#loc242 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":189:13)
#loc243 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":191:26)
#loc244 = loc("CWE190_Integer_Overflow__int_fgets_postinc_04.c":191:13)
#loc245 = loc(fused[#loc1, #loc2])
#loc246 = loc(fused[#loc3, #loc4])
#loc247 = loc(fused[#loc5, #loc6])
#loc248 = loc(fused[#loc7, #loc8])
#loc249 = loc(fused[#loc10, #loc11])
#loc250 = loc(fused[#loc12, #loc13])
#loc251 = loc(fused[#loc14, #loc15])
#loc252 = loc(fused[#loc17, #loc16])
#loc253 = loc(fused[#loc18, #loc19])
#loc254 = loc(fused[#loc21, #loc19])
#loc255 = loc(fused[#loc22, #loc23])
#loc256 = loc(fused[#loc24, #loc25])
#loc257 = loc(fused[#loc26, #loc27])
#loc258 = loc(fused[#loc31, #loc32])
#loc259 = loc(fused[#loc33, #loc34, #loc35, #loc27])
#loc260 = loc(fused[#loc38, #loc39])
#loc261 = loc(fused[#loc41, #loc42])
#loc262 = loc(fused[#loc44, #loc42])
#loc263 = loc(fused[#loc45, #loc46])
#loc264 = loc(fused[#loc47, #loc48])
#loc265 = loc(fused[#loc50, #loc49])
#loc266 = loc(fused[#loc53, #loc54])
#loc267 = loc(fused[#loc55, #loc56])
#loc268 = loc(fused[#loc57, #loc58])
#loc269 = loc(fused[#loc59, #loc60])
#loc270 = loc(fused[#loc61, #loc62])
#loc271 = loc(fused[#loc63, #loc64])
#loc272 = loc(fused[#loc65, #loc66])
#loc273 = loc(fused[#loc71, #loc72])
#loc276 = loc(fused[#loc82, #loc83])
#loc277 = loc(fused[#loc86, #loc87])
#loc278 = loc(fused[#loc90, #loc89])
#loc279 = loc(fused[#loc93, #loc94])
#loc280 = loc(fused[#loc95, #loc96])
#loc281 = loc(fused[#loc98, #loc97])
#loc282 = loc(fused[#loc99, #loc100])
#loc283 = loc(fused[#loc102, #loc100])
#loc284 = loc(fused[#loc103, #loc104])
#loc285 = loc(fused[#loc105, #loc106])
#loc286 = loc(fused[#loc107, #loc108])
#loc287 = loc(fused[#loc112, #loc113])
#loc288 = loc(fused[#loc114, #loc115, #loc116, #loc108])
#loc289 = loc(fused[#loc119, #loc120])
#loc290 = loc(fused[#loc123, #loc124])
#loc291 = loc(fused[#loc126, #loc127, #loc128, #loc124])
#loc292 = loc(fused[#loc130, #loc131])
#loc293 = loc(fused[#loc132, #loc133])
#loc294 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc295 = loc(fused[#loc137, #loc138])
#loc296 = loc(fused[#loc140, #loc139])
#loc297 = loc(fused[#loc144, #loc145])
#loc298 = loc(fused[#loc146, #loc147])
#loc299 = loc(fused[#loc149, #loc148])
#loc300 = loc(fused[#loc150, #loc151])
#loc301 = loc(fused[#loc153, #loc151])
#loc302 = loc(fused[#loc154, #loc155])
#loc303 = loc(fused[#loc156, #loc157])
#loc304 = loc(fused[#loc158, #loc159])
#loc305 = loc(fused[#loc163, #loc164])
#loc306 = loc(fused[#loc165, #loc166, #loc167, #loc159])
#loc307 = loc(fused[#loc170, #loc171])
#loc308 = loc(fused[#loc174, #loc175])
#loc309 = loc(fused[#loc177, #loc175])
#loc310 = loc(fused[#loc178, #loc179])
#loc311 = loc(fused[#loc180, #loc181])
#loc312 = loc(fused[#loc182, #loc183, #loc184, #loc179])
#loc313 = loc(fused[#loc185, #loc186])
#loc314 = loc(fused[#loc188, #loc187])
#loc315 = loc(fused[#loc193, #loc194])
#loc316 = loc(fused[#loc195, #loc196])
#loc317 = loc(fused[#loc198, #loc197])
#loc318 = loc(fused[#loc199, #loc200])
#loc319 = loc(fused[#loc202, #loc203, #loc204, #loc200])
#loc320 = loc(fused[#loc208, #loc207])
#loc321 = loc(fused[#loc209, #loc210])
#loc322 = loc(fused[#loc212, #loc210])
#loc323 = loc(fused[#loc213, #loc214])
#loc324 = loc(fused[#loc215, #loc216])
#loc325 = loc(fused[#loc218, #loc217])
#loc326 = loc(fused[#loc221, #loc222])
#loc327 = loc(fused[#loc223, #loc224])
#loc328 = loc(fused[#loc226, #loc225])
#loc329 = loc(fused[#loc227, #loc228])
#loc330 = loc(fused[#loc230, #loc228])
#loc331 = loc(fused[#loc232, #loc231])
#loc332 = loc(fused[#loc233, #loc234])
#loc333 = loc(fused[#loc236, #loc234])
#loc334 = loc(fused[#loc237, #loc238])
#loc335 = loc(fused[#loc239, #loc240])
#loc336 = loc(fused[#loc242, #loc241])
