!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc181 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":153:10)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":153:14)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":153:20)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":153:32)
#true = #cir.bool<true> : !cir.bool
#loc268 = loc(fused[#loc181, #loc182])
#loc269 = loc(fused[#loc183, #loc184])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc197)
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc198)
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_113badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc199)
  cir.func private @globalReturnsTrue() -> !s32i loc(#loc200)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc201)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc202)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc20)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc206)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_113badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc199)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_113badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc199)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc199)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.scope {
      %4 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc31)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc211)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc214)
          %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
          cir.store %9, %6 : !u64i, !cir.ptr<!u64i> loc(#loc214)
          cir.scope {
            %10 = cir.const #cir.int<4096> : !s32i loc(#loc42)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc42)
            %12 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc216)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc44)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc217)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
                %18 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc49)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc50)
                %20 = cir.const #cir.int<4096> : !s32i loc(#loc51)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc51)
                %22 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc220)
                %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc220)
                %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
                %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc55)
                %29 = cir.cmp(ne, %27, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc221)
                cir.if %29 {
                  %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
                  %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                  %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
                  cir.store %32, %6 : !u64i, !cir.ptr<!u64i> loc(#loc223)
                  cir.scope {
                    %33 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                    %34 = cir.const #cir.int<0> : !s32i loc(#loc66)
                    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc66)
                    %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc225)
                    %37 = cir.ternary(%36, true {
                      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                      %39 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                      %40 = cir.const #cir.int<1> : !s32i loc(#loc70)
                      %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc70)
                      %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc226)
                      %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                      %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc68)
                      %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc68)
                      %46 = cir.const #cir.int<10> : !s8i loc(#loc72)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc72)
                      %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc227)
                      %49 = cir.ternary(%48, true {
                        %50 = cir.const #true loc(#loc67)
                        cir.yield %50 : !cir.bool loc(#loc67)
                      }, false {
                        %50 = cir.const #false loc(#loc67)
                        cir.yield %50 : !cir.bool loc(#loc67)
                      }) : (!cir.bool) -> !cir.bool loc(#loc67)
                      cir.yield %49 : !cir.bool loc(#loc67)
                    }, false {
                      %38 = cir.const #false loc(#loc67)
                      cir.yield %38 : !cir.bool loc(#loc67)
                    }) : (!cir.bool) -> !cir.bool loc(#loc67)
                    cir.if %37 {
                      %38 = cir.const #cir.int<0> : !s8i loc(#loc74)
                      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                      %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc77)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc77)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc229)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                      cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc230)
                    } loc(#loc228)
                  } loc(#loc224)
                } else {
                  %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc79)
                  %32 = cir.const #cir.int<0> : !s8i loc(#loc80)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
                  %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc82)
                  %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc83)
                  cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc231)
                } loc(#loc222)
              } loc(#loc219)
            } loc(#loc218)
          } loc(#loc215)
        } loc(#loc213)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc233)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc87)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc88)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc20)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc20)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc88)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc234)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc95)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc236)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc98)
        } loc(#loc237)
      } loc(#loc235)
    } loc(#loc232)
    cir.return loc(#loc24)
  } loc(#loc207)
  cir.func private @globalReturnsFalse() -> !s32i loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc101)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc104)
  cir.func internal private @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc198)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc198)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc198)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.scope {
      %4 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc113)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc244)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc119)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
        %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc104)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc104)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
      } loc(#loc245)
    } loc(#loc243)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc247)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc124)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc247)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc125)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc127)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc127)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc125)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc132)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc133)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc250)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc136)
        } loc(#loc251)
      } loc(#loc249)
    } loc(#loc246)
    cir.return loc(#loc106)
  } loc(#loc240)
  cir.func internal private @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc197)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc197)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc197)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc141)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.scope {
      %4 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc145)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc256)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc148)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
        %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc150)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc150)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc148)
      } loc(#loc257)
    } loc(#loc255)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc259)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc154)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc259)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc155)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc157)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc157)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc155)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc260)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc162)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc163)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc262)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc165)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc166)
        } loc(#loc263)
      } loc(#loc261)
    } loc(#loc258)
    cir.return loc(#loc138)
  } loc(#loc252)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_114goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B1Ev() : () -> () loc(#loc169)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_11L8goodG2B2Ev() : () -> () loc(#loc170)
    cir.return loc(#loc168)
  } loc(#loc264)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc265)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc178)
  cir.func @main(%arg0: !s32i loc(fused[#loc181, #loc182]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc183, #loc184])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc180)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc185)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc186)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc187)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc187)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc188)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc175)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_114goodEv() : () -> () loc(#loc190)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc176)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc177)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_113badEv() : () -> () loc(#loc193)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc178)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc195)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.return %15 : !s32i loc(#loc270)
  } loc(#loc267)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":116:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":116:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":89:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":89:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":40:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":40:37)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":63:31)
#loc18 = loc("/usr/include/stdio.h":264:1)
#loc19 = loc("/usr/include/stdio.h":266:3)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":73:29)
#loc21 = loc("/usr/include/stdio.h":184:1)
#loc22 = loc("/usr/include/stdio.h":184:36)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":37:1)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":79:1)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":39:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":39:12)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":41:12)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":41:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":42:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":69:5)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":42:8)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":42:26)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":43:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":44:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":68:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":46:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":46:41)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":46:30)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":46:37)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":48:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":67:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":48:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":48:30)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":48:40)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":49:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":66:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:27)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:32)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:31)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:47)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:60)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:70)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:21)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":51:80)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":52:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":60:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":62:17)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":55:31)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":55:38)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":55:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":55:42)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":59:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:25)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:35)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:37)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:40)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:45)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:53)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:54)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":56:59)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":57:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":58:43)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":58:25)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":58:30)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":58:38)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":58:39)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":63:21)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":65:37)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":65:21)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":65:26)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":65:33)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":70:5)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":78:5)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":71:9)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":71:23)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":73:17)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":73:23)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":73:9)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":73:34)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":74:9)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":77:9)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":74:13)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":74:22)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":75:9)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":76:20)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":76:13)
#loc99 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc100 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":94:19)
#loc102 = loc("/usr/include/string.h":149:1)
#loc103 = loc("/usr/include/string.h":150:14)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":99:22)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":86:1)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":110:1)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":88:5)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":88:12)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":90:12)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":90:5)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":91:5)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":100:5)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":91:8)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":91:27)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":92:5)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":95:5)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":97:5)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":94:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":99:9)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":99:16)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":101:5)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":109:5)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":102:9)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":102:23)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":104:17)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":104:23)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":104:29)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":104:9)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":104:34)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":105:9)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":108:9)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":105:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":105:22)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":106:9)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":107:20)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":107:13)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":113:1)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":132:1)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":115:5)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":115:12)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":117:12)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":117:5)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":118:5)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":122:5)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":118:8)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":118:26)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":119:5)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":121:9)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":121:16)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":121:22)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":123:5)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":131:5)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":124:9)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":124:23)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":126:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":126:23)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":126:29)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":126:9)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":126:34)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":127:9)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":130:9)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":127:13)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":127:22)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":128:9)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":129:20)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":129:13)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":134:1)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":138:1)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":136:5)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":137:5)
#loc171 = loc("/usr/include/stdlib.h":575:1)
#loc172 = loc("/usr/include/stdlib.h":575:41)
#loc173 = loc("/usr/include/time.h":76:1)
#loc174 = loc("/usr/include/time.h":76:38)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":158:15)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":160:15)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":163:15)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":165:15)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":153:1)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":168:1)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":154:1)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":156:27)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":156:22)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":156:5)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":158:5)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":159:5)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":160:5)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":163:5)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":164:5)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":165:5)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":167:12)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_11.cpp":167:5)
#loc197 = loc(fused[#loc1, #loc2])
#loc198 = loc(fused[#loc3, #loc4])
#loc199 = loc(fused[#loc5, #loc6])
#loc200 = loc(fused[#loc7, #loc8])
#loc201 = loc(fused[#loc9, #loc10])
#loc202 = loc(fused[#loc11, #loc12])
#loc203 = loc(fused[#loc13, #loc14])
#loc204 = loc(fused[#loc15, #loc16])
#loc205 = loc(fused[#loc18, #loc19])
#loc206 = loc(fused[#loc21, #loc22])
#loc207 = loc(fused[#loc23, #loc24])
#loc208 = loc(fused[#loc25, #loc26])
#loc209 = loc(fused[#loc28, #loc27])
#loc210 = loc(fused[#loc29, #loc30])
#loc211 = loc(fused[#loc31, #loc32])
#loc212 = loc(fused[#loc33, #loc30])
#loc213 = loc(fused[#loc34, #loc35])
#loc214 = loc(fused[#loc36, #loc37])
#loc215 = loc(fused[#loc40, #loc41])
#loc216 = loc(fused[#loc42, #loc43])
#loc217 = loc(fused[#loc42, #loc44])
#loc218 = loc(fused[#loc45, #loc41])
#loc219 = loc(fused[#loc46, #loc47])
#loc220 = loc(fused[#loc51, #loc52])
#loc221 = loc(fused[#loc54, #loc55])
#loc222 = loc(fused[#loc56, #loc57, #loc58, #loc47])
#loc223 = loc(fused[#loc61, #loc62])
#loc224 = loc(fused[#loc63, #loc64])
#loc225 = loc(fused[#loc65, #loc66])
#loc226 = loc(fused[#loc69, #loc70])
#loc227 = loc(fused[#loc68, #loc72])
#loc228 = loc(fused[#loc73, #loc64])
#loc229 = loc(fused[#loc76, #loc77])
#loc230 = loc(fused[#loc75, #loc74])
#loc231 = loc(fused[#loc81, #loc80])
#loc232 = loc(fused[#loc84, #loc85])
#loc233 = loc(fused[#loc86, #loc87])
#loc234 = loc(fused[#loc90, #loc91])
#loc235 = loc(fused[#loc92, #loc93])
#loc236 = loc(fused[#loc94, #loc95])
#loc237 = loc(fused[#loc96, #loc93])
#loc238 = loc(fused[#loc99, #loc100])
#loc239 = loc(fused[#loc102, #loc103])
#loc240 = loc(fused[#loc105, #loc106])
#loc241 = loc(fused[#loc107, #loc108])
#loc242 = loc(fused[#loc110, #loc109])
#loc243 = loc(fused[#loc111, #loc112])
#loc244 = loc(fused[#loc113, #loc114])
#loc245 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc246 = loc(fused[#loc121, #loc122])
#loc247 = loc(fused[#loc123, #loc124])
#loc248 = loc(fused[#loc128, #loc129])
#loc249 = loc(fused[#loc130, #loc131])
#loc250 = loc(fused[#loc132, #loc133])
#loc251 = loc(fused[#loc134, #loc131])
#loc252 = loc(fused[#loc137, #loc138])
#loc253 = loc(fused[#loc139, #loc140])
#loc254 = loc(fused[#loc142, #loc141])
#loc255 = loc(fused[#loc143, #loc144])
#loc256 = loc(fused[#loc145, #loc146])
#loc257 = loc(fused[#loc147, #loc144])
#loc258 = loc(fused[#loc151, #loc152])
#loc259 = loc(fused[#loc153, #loc154])
#loc260 = loc(fused[#loc158, #loc159])
#loc261 = loc(fused[#loc160, #loc161])
#loc262 = loc(fused[#loc162, #loc163])
#loc263 = loc(fused[#loc164, #loc161])
#loc264 = loc(fused[#loc167, #loc168])
#loc265 = loc(fused[#loc171, #loc172])
#loc266 = loc(fused[#loc173, #loc174])
#loc267 = loc(fused[#loc179, #loc180])
#loc270 = loc(fused[#loc196, #loc195])
