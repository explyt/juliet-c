!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":25:79)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":25:86)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":47:83)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":47:90)
#loc93 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc49, #loc50])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc95)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc96)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc15)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc16)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc16)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc97)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc20)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc20)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc21)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc98)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc26)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc100)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc29)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc29)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc101)
          cir.condition(%30) loc(#loc30)
        } body {
          cir.scope {
            %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc33)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc33)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc36)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc103)
          } loc(#loc102)
          cir.yield loc(#loc25)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc39)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc104)
          cir.yield loc(#loc99)
        } loc(#loc99)
      } loc(#loc99)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc40)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc42)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc105)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc94)
    cir.return loc(#loc4)
  } loc(#loc92)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc49, #loc50])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc107)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc109)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc110)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc59)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc60)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc60)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc60)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc111)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc64)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc64)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc65)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc65)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc67)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc112)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc70)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc70)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc114)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc72)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc73)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc73)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc115)
          cir.condition(%30) loc(#loc74)
        } body {
          cir.scope {
            %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc77)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc77)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
            %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc80)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc117)
          } loc(#loc116)
          cir.yield loc(#loc69)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc82)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc83)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc118)
          cir.yield loc(#loc113)
        } loc(#loc113)
      } loc(#loc113)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc84)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc84)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc86)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc87)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc86)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc88)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc119)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    } loc(#loc108)
    cir.return loc(#loc48)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":25:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":40:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":26:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":27:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":39:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":28:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":28:16)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":29:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":29:24)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":30:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":30:24)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":30:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":30:33)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":30:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":30:34)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":31:25)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":31:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":31:20)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":31:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":36:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:18)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:21)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:25)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":34:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":35:30)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":35:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":35:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":35:18)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":35:19)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":35:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:31)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":33:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":37:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":37:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":37:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":37:18)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":37:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":38:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":38:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":47:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":62:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":48:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":49:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":61:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":50:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":50:16)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":51:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":51:24)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":52:16)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":52:24)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":52:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":52:33)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":52:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":52:34)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":53:25)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":53:16)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":53:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":53:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":58:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:18)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:21)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:25)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":56:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":57:30)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":57:23)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":57:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":57:18)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":57:19)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":57:31)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:31)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":55:30)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":59:23)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":59:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":59:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":59:18)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":59:19)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":60:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_54e.c":60:9)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc8, #loc9])
#loc95 = loc(fused[#loc10, #loc11])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc18, #loc19])
#loc98 = loc(fused[#loc23, #loc20])
#loc99 = loc(fused[#loc24, #loc25])
#loc100 = loc(fused[#loc27, #loc26])
#loc101 = loc(fused[#loc28, #loc29])
#loc102 = loc(fused[#loc31, #loc25])
#loc103 = loc(fused[#loc34, #loc37])
#loc104 = loc(fused[#loc39, #loc38])
#loc105 = loc(fused[#loc41, #loc40])
#loc106 = loc(fused[#loc47, #loc48])
#loc108 = loc(fused[#loc52, #loc53])
#loc109 = loc(fused[#loc54, #loc55])
#loc110 = loc(fused[#loc56, #loc57])
#loc111 = loc(fused[#loc62, #loc63])
#loc112 = loc(fused[#loc67, #loc64])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc71, #loc70])
#loc115 = loc(fused[#loc72, #loc73])
#loc116 = loc(fused[#loc75, #loc69])
#loc117 = loc(fused[#loc78, #loc81])
#loc118 = loc(fused[#loc83, #loc82])
#loc119 = loc(fused[#loc85, #loc84])
