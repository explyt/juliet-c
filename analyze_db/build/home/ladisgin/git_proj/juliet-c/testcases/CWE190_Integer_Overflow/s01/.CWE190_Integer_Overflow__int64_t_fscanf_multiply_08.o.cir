!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc203)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc205)
  cir.func private @printLongLongLine(!s64i) loc(#loc206)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc212)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc213)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc204)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc205)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc205)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc22)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc214)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc215)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %14 ^bb6, ^bb11 loc(#loc216)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc217)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc31)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc32)
    %18 = cir.cmp(gt, %15, %17) : !s64i, !cir.bool loc(#loc218)
    cir.brcond %18 ^bb8, ^bb9 loc(#loc219)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc34)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc12)
    %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc12)
    %22 = cir.binop(mul, %19, %21) nsw : !s64i loc(#loc34)
    cir.store %22, %0 : !s64i, !cir.ptr<!s64i> loc(#loc208)
    %23 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc35)
    cir.call @printLongLongLine(%23) : (!s64i) -> () loc(#loc36)
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc30)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc25)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc25)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc10)
  } loc(#loc207)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc38)
  } loc(#loc220)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    cir.return %2 : !s32i loc(#loc226)
  } loc(#loc225)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc61)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc231)
    cir.br ^bb1 loc(#loc232)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc233)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc65)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc234)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc68)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc204)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc235)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc235)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc68)
    cir.br ^bb3 loc(#loc64)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc236)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc237)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc238)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb17 loc(#loc77)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc239)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc82)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc83)
    %20 = cir.cmp(gt, %17, %19) : !s64i, !cir.bool loc(#loc240)
    cir.brcond %20 ^bb9, ^bb15 loc(#loc241)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc242)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc87)
    %22 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc88)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %24 = cir.cast(integral, %23 : !s32i), !s64i loc(#loc89)
    %25 = cir.binop(div, %22, %24) : !s64i loc(#loc243)
    %26 = cir.cmp(lt, %21, %25) : !s64i, !cir.bool loc(#loc244)
    cir.brcond %26 ^bb11, ^bb12 loc(#loc245)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc94)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %29 = cir.cast(integral, %28 : !s32i), !s64i loc(#loc58)
    %30 = cir.binop(mul, %27, %29) nsw : !s64i loc(#loc94)
    cir.store %30, %0 : !s64i, !cir.ptr<!s64i> loc(#loc229)
    %31 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc95)
    cir.call @printLongLongLine(%31) : (!s64i) -> () loc(#loc96)
    cir.br ^bb13 loc(#loc92)
  ^bb12:  // pred: ^bb10
    %32 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc54)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb13 loc(#loc86)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc86)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc81)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc81)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc73)
  ^bb17:  // 2 preds: ^bb6, ^bb16
    cir.br ^bb18 loc(#loc73)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc56)
  } loc(#loc228)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    cir.return %2 : !s32i loc(#loc247)
  } loc(#loc246)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc108)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc251)
    cir.br ^bb1 loc(#loc252)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc253)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc112)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc254)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc115)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc204)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc255)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc255)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc115)
    cir.br ^bb3 loc(#loc111)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc256)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc257)
    %13 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc121)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %14 ^bb6, ^bb16 loc(#loc258)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc259)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc126)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc127)
    %18 = cir.cmp(gt, %15, %17) : !s64i, !cir.bool loc(#loc260)
    cir.brcond %18 ^bb8, ^bb14 loc(#loc261)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc262)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc131)
    %20 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc132)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc133)
    %23 = cir.binop(div, %20, %22) : !s64i loc(#loc263)
    %24 = cir.cmp(lt, %19, %23) : !s64i, !cir.bool loc(#loc264)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc265)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc138)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc105)
    %27 = cir.cast(integral, %26 : !s32i), !s64i loc(#loc105)
    %28 = cir.binop(mul, %25, %27) nsw : !s64i loc(#loc138)
    cir.store %28, %0 : !s64i, !cir.ptr<!s64i> loc(#loc249)
    %29 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc139)
    cir.call @printLongLongLine(%29) : (!s64i) -> () loc(#loc140)
    cir.br ^bb12 loc(#loc136)
  ^bb11:  // pred: ^bb9
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc141)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb12 loc(#loc130)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc130)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc125)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc125)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc120)
  ^bb16:  // 2 preds: ^bb5, ^bb15
    cir.br ^bb17 loc(#loc120)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc103)
  } loc(#loc248)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc149)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc271)
    %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc153)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc153)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc272)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.br ^bb4 loc(#loc156)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc160)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc160)
    cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc273)
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc152)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc274)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc275)
    %11 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc164)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %12 ^bb7, ^bb12 loc(#loc276)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc277)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc169)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc170)
    %16 = cir.cmp(gt, %13, %15) : !s64i, !cir.bool loc(#loc278)
    cir.brcond %16 ^bb9, ^bb10 loc(#loc279)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc172)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc146)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc146)
    %20 = cir.binop(mul, %17, %19) nsw : !s64i loc(#loc172)
    cir.store %20, %0 : !s64i, !cir.ptr<!s64i> loc(#loc267)
    %21 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc173)
    cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc174)
    cir.br ^bb10 loc(#loc168)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc168)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc163)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc163)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc144)
  } loc(#loc266)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc181)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc285)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc185)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc185)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc286)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc188)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc188)
    cir.store %7, %1 : !s64i, !cir.ptr<!s64i> loc(#loc287)
    cir.br ^bb3 loc(#loc184)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc288)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc289)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc192)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc192)
    cir.brcond %10 ^bb6, ^bb11 loc(#loc290)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc291)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc197)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc198)
    %14 = cir.cmp(gt, %11, %13) : !s64i, !cir.bool loc(#loc292)
    cir.brcond %14 ^bb8, ^bb9 loc(#loc293)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc200)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc178)
    %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc178)
    %18 = cir.binop(mul, %15, %17) nsw : !s64i loc(#loc200)
    cir.store %18, %0 : !s64i, !cir.ptr<!s64i> loc(#loc281)
    %19 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc201)
    cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc202)
    cir.br ^bb9 loc(#loc196)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc196)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc191)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc191)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc176)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":43:24)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":43:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":36:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":54:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":50:13)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":50:37)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":38:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":38:13)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":39:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":39:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":40:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":44:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":40:8)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":40:26)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":41:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":43:9)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":43:17)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":45:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":53:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":45:8)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":45:26)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":46:5)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":47:9)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":52:9)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":47:12)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":47:19)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":48:9)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":50:30)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":51:31)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":51:13)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":168:1)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":174:1)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":170:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":170:14)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":171:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":171:14)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":172:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":172:14)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":173:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":173:14)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":24:1)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":27:1)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":26:12)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":26:5)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":73:19)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":87:27)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":61:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":91:1)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":82:17)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":82:41)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":63:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":63:13)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":64:12)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":64:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":65:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":69:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":65:8)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":65:26)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":66:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":68:9)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":68:17)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":68:24)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":68:28)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":70:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":90:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":70:8)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":70:27)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":71:5)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":74:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":76:5)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":73:9)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":77:9)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":89:9)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":77:12)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":77:19)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":78:9)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":80:13)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":88:13)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":80:17)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":80:25)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":80:35)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":80:36)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":81:13)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":84:13)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":86:13)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":82:34)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":83:35)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":83:17)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":87:17)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":29:1)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":32:1)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":31:12)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":31:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":94:1)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":119:1)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":110:17)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":110:41)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":96:5)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":96:13)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":97:12)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":97:5)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":98:5)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":102:5)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":98:8)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":98:26)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":99:5)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":101:9)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":101:17)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":101:24)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":101:28)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":103:5)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":118:5)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":103:8)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":103:26)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":104:5)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":105:9)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":117:9)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":105:12)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":105:19)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":106:9)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":108:13)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":116:13)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":108:17)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":108:25)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":108:35)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":108:36)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":109:13)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":112:13)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":114:13)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":110:34)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":111:35)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":111:17)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":115:27)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":115:17)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":122:1)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":145:1)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":141:13)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":141:37)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":124:5)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":124:13)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":125:12)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":125:5)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":126:5)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":135:5)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":126:8)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":126:27)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":127:5)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":130:5)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":132:5)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":129:19)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":129:9)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":134:16)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":134:9)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":136:5)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":144:5)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":136:8)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":136:26)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":137:5)
#loc167 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":138:9)
#loc168 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":143:9)
#loc169 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":138:12)
#loc170 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":138:19)
#loc171 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":139:9)
#loc172 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":141:30)
#loc173 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":142:31)
#loc174 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":142:13)
#loc175 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":148:1)
#loc176 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":166:1)
#loc177 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":162:13)
#loc178 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":162:37)
#loc179 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":150:5)
#loc180 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":150:13)
#loc181 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":151:12)
#loc182 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":151:5)
#loc183 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":152:5)
#loc184 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":156:5)
#loc185 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":152:8)
#loc186 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":152:26)
#loc187 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":153:5)
#loc188 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":155:16)
#loc189 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":155:9)
#loc190 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":157:5)
#loc191 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":165:5)
#loc192 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":157:8)
#loc193 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":157:26)
#loc194 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":158:5)
#loc195 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":159:9)
#loc196 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":164:9)
#loc197 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":159:12)
#loc198 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":159:19)
#loc199 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":160:9)
#loc200 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":162:30)
#loc201 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":163:31)
#loc202 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_08.c":163:13)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc205 = loc(fused[#loc5, #loc6])
#loc206 = loc(fused[#loc7, #loc8])
#loc207 = loc(fused[#loc9, #loc10])
#loc208 = loc(fused[#loc11, #loc12])
#loc209 = loc(fused[#loc13, #loc14])
#loc210 = loc(fused[#loc16, #loc15])
#loc211 = loc(fused[#loc17, #loc18])
#loc212 = loc(fused[#loc19, #loc20])
#loc213 = loc(fused[#loc21, #loc18])
#loc214 = loc(fused[#loc24, #loc25])
#loc215 = loc(fused[#loc26, #loc27])
#loc216 = loc(fused[#loc28, #loc25])
#loc217 = loc(fused[#loc29, #loc30])
#loc218 = loc(fused[#loc31, #loc32])
#loc219 = loc(fused[#loc33, #loc30])
#loc220 = loc(fused[#loc37, #loc38])
#loc221 = loc(fused[#loc39, #loc40])
#loc222 = loc(fused[#loc41, #loc42])
#loc223 = loc(fused[#loc43, #loc44])
#loc224 = loc(fused[#loc45, #loc46])
#loc225 = loc(fused[#loc47, #loc48])
#loc226 = loc(fused[#loc50, #loc49])
#loc227 = loc(fused[#loc51, #loc52])
#loc228 = loc(fused[#loc55, #loc56])
#loc229 = loc(fused[#loc57, #loc58])
#loc230 = loc(fused[#loc59, #loc60])
#loc231 = loc(fused[#loc62, #loc61])
#loc232 = loc(fused[#loc63, #loc64])
#loc233 = loc(fused[#loc65, #loc66])
#loc234 = loc(fused[#loc67, #loc64])
#loc235 = loc(fused[#loc70, #loc71])
#loc236 = loc(fused[#loc72, #loc73])
#loc237 = loc(fused[#loc74, #loc75])
#loc238 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc239 = loc(fused[#loc80, #loc81])
#loc240 = loc(fused[#loc82, #loc83])
#loc241 = loc(fused[#loc84, #loc81])
#loc242 = loc(fused[#loc85, #loc86])
#loc243 = loc(fused[#loc88, #loc89])
#loc244 = loc(fused[#loc87, #loc90])
#loc245 = loc(fused[#loc91, #loc92, #loc93, #loc86])
#loc246 = loc(fused[#loc98, #loc99])
#loc247 = loc(fused[#loc101, #loc100])
#loc248 = loc(fused[#loc102, #loc103])
#loc249 = loc(fused[#loc104, #loc105])
#loc250 = loc(fused[#loc106, #loc107])
#loc251 = loc(fused[#loc109, #loc108])
#loc252 = loc(fused[#loc110, #loc111])
#loc253 = loc(fused[#loc112, #loc113])
#loc254 = loc(fused[#loc114, #loc111])
#loc255 = loc(fused[#loc117, #loc118])
#loc256 = loc(fused[#loc119, #loc120])
#loc257 = loc(fused[#loc121, #loc122])
#loc258 = loc(fused[#loc123, #loc120])
#loc259 = loc(fused[#loc124, #loc125])
#loc260 = loc(fused[#loc126, #loc127])
#loc261 = loc(fused[#loc128, #loc125])
#loc262 = loc(fused[#loc129, #loc130])
#loc263 = loc(fused[#loc132, #loc133])
#loc264 = loc(fused[#loc131, #loc134])
#loc265 = loc(fused[#loc135, #loc136, #loc137, #loc130])
#loc266 = loc(fused[#loc143, #loc144])
#loc267 = loc(fused[#loc145, #loc146])
#loc268 = loc(fused[#loc147, #loc148])
#loc269 = loc(fused[#loc150, #loc149])
#loc270 = loc(fused[#loc151, #loc152])
#loc271 = loc(fused[#loc153, #loc154])
#loc272 = loc(fused[#loc155, #loc156, #loc157, #loc152])
#loc273 = loc(fused[#loc161, #loc160])
#loc274 = loc(fused[#loc162, #loc163])
#loc275 = loc(fused[#loc164, #loc165])
#loc276 = loc(fused[#loc166, #loc163])
#loc277 = loc(fused[#loc167, #loc168])
#loc278 = loc(fused[#loc169, #loc170])
#loc279 = loc(fused[#loc171, #loc168])
#loc280 = loc(fused[#loc175, #loc176])
#loc281 = loc(fused[#loc177, #loc178])
#loc282 = loc(fused[#loc179, #loc180])
#loc283 = loc(fused[#loc182, #loc181])
#loc284 = loc(fused[#loc183, #loc184])
#loc285 = loc(fused[#loc185, #loc186])
#loc286 = loc(fused[#loc187, #loc184])
#loc287 = loc(fused[#loc189, #loc188])
#loc288 = loc(fused[#loc190, #loc191])
#loc289 = loc(fused[#loc192, #loc193])
#loc290 = loc(fused[#loc194, #loc191])
#loc291 = loc(fused[#loc195, #loc196])
#loc292 = loc(fused[#loc197, #loc198])
#loc293 = loc(fused[#loc199, #loc196])
