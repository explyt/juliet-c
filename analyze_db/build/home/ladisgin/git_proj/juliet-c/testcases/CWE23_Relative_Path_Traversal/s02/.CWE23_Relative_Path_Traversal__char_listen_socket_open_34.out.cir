!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc266 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":211:10)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":211:14)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":211:20)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":211:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc388 = loc(fused[#loc266, #loc267])
#loc389 = loc(fused[#loc268, #loc269])
!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType = !cir.struct<union "CWE23_Relative_Path_Traversal__char_listen_socket_open_34::unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_34L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc282)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_343badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc283)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc284)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc289)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc290)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc291)
  cir.func private @close(!s32i) -> !s32i loc(#loc292)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc293)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_343badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc295)
    %1 = cir.alloca !ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc296)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc283)
    %3 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_343badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc283)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc283)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc299)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc300)
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc301)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc302)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc303)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc304)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc42)
      cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc302)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc44)
      cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc303)
      %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc47)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc47)
      cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc304)
      cir.scope {
        cir.do {
          %20 = cir.const #cir.int<2> : !s32i loc(#loc51)
          %21 = cir.const #cir.int<1> : !u32i loc(#loc52)
          %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc52)
          %23 = cir.const #cir.int<6> : !u32i loc(#loc53)
          %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc53)
          %25 = cir.call @socket(%20, %22, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
          cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc306)
          cir.scope {
            %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc60)
            %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc60)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc308)
            cir.if %81 {
              cir.break loc(#loc62)
            } loc(#loc309)
          } loc(#loc307)
          %26 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc310)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc65)
          %28 = cir.const #cir.int<16> : !u64i loc(#loc311)
          cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc312)
          %29 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc70)
          %31 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc313)
          %32 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc73)
          %34 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
          %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
          cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc314)
          %36 = cir.const #cir.int<27015> : !s32i loc(#loc77)
          %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc77)
          %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc78)
          %39 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
          cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc315)
          cir.scope {
            %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %79 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc317)
            %80 = cir.const #cir.int<16> : !u64i loc(#loc318)
            %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc318)
            %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc89)
            %83 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc90)
            %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc319)
            cir.if %85 {
              cir.break loc(#loc92)
            } loc(#loc320)
          } loc(#loc316)
          cir.scope {
            %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %79 = cir.const #cir.int<5> : !s32i loc(#loc96)
            %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc97)
            %81 = cir.const #cir.int<1> : !s32i loc(#loc98)
            %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc98)
            %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc322)
            cir.if %83 {
              cir.break loc(#loc100)
            } loc(#loc323)
          } loc(#loc321)
          %40 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %41 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc102)
          %42 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc103)
          %43 = cir.call @accept(%40, %41, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc104)
          cir.store %43, %11 : !s32i, !cir.ptr<!s32i> loc(#loc324)
          cir.scope {
            %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc110)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc326)
            cir.if %81 {
              cir.break loc(#loc112)
            } loc(#loc327)
          } loc(#loc325)
          %44 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc113)
          %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
          %46 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc115)
          %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc116)
          %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc328)
          %49 = cir.const #cir.int<1> : !u64i loc(#loc329)
          %50 = cir.const #cir.int<4096> : !s32i loc(#loc121)
          %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc121)
          %52 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc122)
          %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc330)
          %54 = cir.const #cir.int<1> : !s32i loc(#loc123)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc123)
          %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc331)
          %57 = cir.binop(mul, %49, %56) : !u64i loc(#loc332)
          %58 = cir.const #cir.int<0> : !s32i loc(#loc125)
          %59 = cir.call @recv(%44, %48, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc126)
          %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc126)
          cir.store %60, %7 : !s32i, !cir.ptr<!s32i> loc(#loc333)
          cir.scope {
            %78 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc132)
            %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc132)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc335)
            %82 = cir.ternary(%81, true {
              %83 = cir.const #true loc(#loc133)
              cir.yield %83 : !cir.bool loc(#loc133)
            }, false {
              %83 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %84 = cir.const #cir.int<0> : !s32i loc(#loc135)
              %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc336)
              %86 = cir.ternary(%85, true {
                %87 = cir.const #true loc(#loc133)
                cir.yield %87 : !cir.bool loc(#loc133)
              }, false {
                %87 = cir.const #false loc(#loc133)
                cir.yield %87 : !cir.bool loc(#loc133)
              }) : (!cir.bool) -> !cir.bool loc(#loc133)
              cir.yield %86 : !cir.bool loc(#loc133)
            }) : (!cir.bool) -> !cir.bool loc(#loc133)
            cir.if %82 {
              cir.break loc(#loc137)
            } loc(#loc337)
          } loc(#loc334)
          %61 = cir.const #cir.int<0> : !s8i loc(#loc138)
          %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
          %63 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc140)
          %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc141)
          %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc141)
          %66 = cir.const #cir.int<1> : !u64i loc(#loc338)
          %67 = cir.binop(div, %65, %66) : !u64i loc(#loc339)
          %68 = cir.binop(add, %63, %67) : !u64i loc(#loc340)
          %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc144)
          cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc341)
          %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
          %71 = cir.const #cir.int<13> : !s8i loc(#loc146)
          %72 = cir.cast(integral, %71 : !s8i), !s32i loc(#loc146)
          %73 = cir.call @strchr(%70, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
          cir.store %73, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
          cir.scope {
            %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
            %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc152)
            cir.if %79 {
              %80 = cir.const #cir.int<0> : !s8i loc(#loc154)
              %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
              cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc345)
            } loc(#loc344)
          } loc(#loc343)
          %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
          %75 = cir.const #cir.int<10> : !s8i loc(#loc158)
          %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc158)
          %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
          cir.store %77, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
          cir.scope {
            %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
            %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
            cir.if %79 {
              %80 = cir.const #cir.int<0> : !s8i loc(#loc166)
              %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
              cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc349)
            } loc(#loc348)
          } loc(#loc347)
          cir.yield loc(#loc50)
        } while {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc169)
          %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc169)
          cir.condition(%21) loc(#loc169)
        } loc(#loc305)
      } loc(#loc305)
      cir.scope {
        %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc172)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc173)
        %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc351)
        cir.if %23 {
          %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc352)
      } loc(#loc350)
      cir.scope {
        %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc180)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc180)
        %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc354)
        cir.if %23 {
          %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc182)
          %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc183)
        } loc(#loc355)
      } loc(#loc353)
    } loc(#loc298)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc358)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
      cir.store %9, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc358)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc360)
        %11 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc197)
        %13 = cir.const #cir.int<64> : !s32i loc(#loc198)
        %14 = cir.binop(or, %12, %13) : !s32i loc(#loc361)
        %15 = cir.const #cir.int<256> : !s32i loc(#loc199)
        %16 = cir.const #cir.int<128> : !s32i loc(#loc200)
        %17 = cir.binop(or, %15, %16) : !s32i loc(#loc362)
        %18 = cir.call @open(%11, %14, %17) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc201)
        cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc363)
        cir.scope {
          %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc206)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc207)
          %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc208)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc365)
          cir.if %22 {
            %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc210)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc211)
          } loc(#loc366)
        } loc(#loc364)
      } loc(#loc359)
    } loc(#loc357)
    cir.return loc(#loc26)
  } loc(#loc294)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc214)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_34L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc369)
    %1 = cir.alloca !ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc370)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc282)
    %3 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_34L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc282)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc282)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc221)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc371)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc223)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc214)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc214)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc372)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc374)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc374)
      cir.scope {
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc376)
        %16 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
        %17 = cir.const #cir.int<2> : !s32i loc(#loc236)
        %18 = cir.const #cir.int<64> : !s32i loc(#loc237)
        %19 = cir.binop(or, %17, %18) : !s32i loc(#loc377)
        %20 = cir.const #cir.int<256> : !s32i loc(#loc238)
        %21 = cir.const #cir.int<128> : !s32i loc(#loc239)
        %22 = cir.binop(or, %20, %21) : !s32i loc(#loc378)
        %23 = cir.call @open(%16, %19, %22) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc240)
        cir.store %23, %15 : !s32i, !cir.ptr<!s32i> loc(#loc379)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc245)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc246)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc247)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc381)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc249)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc250)
          } loc(#loc382)
        } loc(#loc380)
      } loc(#loc375)
    } loc(#loc373)
    cir.return loc(#loc216)
  } loc(#loc368)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_344goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_34L7goodG2BEv() : () -> () loc(#loc253)
    cir.return loc(#loc252)
  } loc(#loc383)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc384)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc385)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc263)
  cir.func @main(%arg0: !s32i loc(fused[#loc266, #loc267]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc268, #loc269])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc388)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc389)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc265)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc270)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc271)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc272)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc272)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc273)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc260)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc260)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc274)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_344goodEv() : () -> () loc(#loc275)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc261)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc261)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc276)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc262)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc277)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_343badEv() : () -> () loc(#loc278)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc263)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc263)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc280)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    cir.return %15 : !s32i loc(#loc390)
  } loc(#loc387)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":175:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":175:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":70:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":70:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/fcntl.h":209:1)
#loc24 = loc("/usr/include/fcntl.h":209:56)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":66:1)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":164:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":68:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":68:12)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":69:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":69:15)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":71:12)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":71:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":72:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":150:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":77:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":77:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":78:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":78:28)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":79:9)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":79:15)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":80:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":80:31)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":81:9)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":81:31)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":82:9)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":82:37)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":82:26)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":82:33)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":83:9)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":135:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":93:35)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":93:44)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":93:57)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":93:28)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":93:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":93:68)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":94:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":97:13)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":94:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":94:33)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":95:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":96:17)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":98:20)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":98:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":98:30)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":98:33)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":98:47)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":98:13)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":98:48)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":99:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":99:13)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":100:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":100:13)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":101:38)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":101:32)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":101:13)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":101:46)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":105:13)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:22)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:54)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:55)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:64)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:78)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":102:84)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":103:13)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":104:17)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":106:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":109:13)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":106:24)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":106:38)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":106:17)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":106:57)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":107:13)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":108:17)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":110:35)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":110:49)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":110:55)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":110:28)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":110:13)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":110:59)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":111:13)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":114:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":111:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":111:33)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":112:13)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":113:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:31)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:54)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:61)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:59)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:45)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:68)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:71)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:82)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:87)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:102)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:112)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:113)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:116)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:26)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:13)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":116:117)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":117:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":120:13)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":117:17)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":117:31)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":117:44)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":117:47)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":117:61)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":118:13)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":119:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":122:57)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":122:13)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":122:18)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":122:28)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":122:41)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":122:52)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":122:53)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":124:30)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":124:36)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":124:23)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":124:13)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":124:40)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":125:13)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":128:13)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":125:17)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":126:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":127:28)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":127:18)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":127:17)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":129:30)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":129:36)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":129:23)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":129:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":129:40)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":130:13)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":133:13)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":130:17)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":131:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":132:28)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":132:18)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":132:17)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":135:16)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":136:9)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":139:9)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":136:13)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":136:29)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":137:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":138:26)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":138:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":140:9)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":143:9)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":140:13)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":140:29)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":141:9)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":142:26)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":142:13)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":151:26)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":60:12)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":151:5)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":152:5)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":163:5)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":153:9)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":153:31)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":61:12)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":154:9)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":162:9)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":155:13)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":155:17)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:29)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:35)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:42)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:51)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:59)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:24)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:13)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":157:67)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":158:13)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":161:13)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":158:17)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":158:30)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":158:29)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":159:13)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":160:23)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":160:17)
#loc212 = loc("/usr/include/string.h":149:1)
#loc213 = loc("/usr/include/string.h":150:14)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":178:18)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":171:1)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":192:1)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":173:5)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":173:12)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":174:5)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":174:15)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":176:12)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":176:5)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":178:5)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":178:12)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":179:26)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":179:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":180:5)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":191:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":181:9)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":181:31)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":182:9)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":190:9)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":183:13)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":183:17)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:29)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:35)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:42)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:51)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:59)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:24)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:13)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":185:67)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":186:13)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":189:13)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":186:17)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":186:30)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":186:29)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":187:13)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":188:23)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":188:17)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":194:1)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":197:1)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":196:5)
#loc254 = loc("/usr/include/stdlib.h":575:1)
#loc255 = loc("/usr/include/stdlib.h":575:41)
#loc256 = loc("/usr/include/time.h":76:1)
#loc257 = loc("/usr/include/time.h":76:38)
#loc258 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc259 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":216:15)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":218:15)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":221:15)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":223:15)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":211:1)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":226:1)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":212:1)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":214:27)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":214:22)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":214:5)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":216:5)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":217:5)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":218:5)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":221:5)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":222:5)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":223:5)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":225:12)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_34.cpp":225:5)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc5, #loc6])
#loc285 = loc(fused[#loc7, #loc8])
#loc286 = loc(fused[#loc9, #loc10])
#loc287 = loc(fused[#loc11, #loc12])
#loc288 = loc(fused[#loc13, #loc14])
#loc289 = loc(fused[#loc15, #loc16])
#loc290 = loc(fused[#loc17, #loc18])
#loc291 = loc(fused[#loc19, #loc20])
#loc292 = loc(fused[#loc21, #loc22])
#loc293 = loc(fused[#loc23, #loc24])
#loc294 = loc(fused[#loc25, #loc26])
#loc295 = loc(fused[#loc27, #loc28])
#loc296 = loc(fused[#loc29, #loc30])
#loc297 = loc(fused[#loc32, #loc31])
#loc298 = loc(fused[#loc33, #loc34])
#loc299 = loc(fused[#loc35, #loc36])
#loc300 = loc(fused[#loc37, #loc38])
#loc301 = loc(fused[#loc39, #loc40])
#loc302 = loc(fused[#loc41, #loc42])
#loc303 = loc(fused[#loc43, #loc44])
#loc304 = loc(fused[#loc45, #loc46])
#loc305 = loc(fused[#loc49, #loc50])
#loc306 = loc(fused[#loc55, #loc56])
#loc307 = loc(fused[#loc57, #loc58])
#loc308 = loc(fused[#loc59, #loc60])
#loc309 = loc(fused[#loc61, #loc58])
#loc310 = loc(fused[#loc63, #loc64])
#loc311 = loc(fused[#loc66, #loc67])
#loc312 = loc(fused[#loc68, #loc69])
#loc313 = loc(fused[#loc72, #loc70])
#loc314 = loc(fused[#loc76, #loc73])
#loc315 = loc(fused[#loc80, #loc81])
#loc316 = loc(fused[#loc82, #loc83])
#loc317 = loc(fused[#loc85, #loc86])
#loc318 = loc(fused[#loc87, #loc88])
#loc319 = loc(fused[#loc89, #loc90])
#loc320 = loc(fused[#loc91, #loc83])
#loc321 = loc(fused[#loc93, #loc94])
#loc322 = loc(fused[#loc97, #loc98])
#loc323 = loc(fused[#loc99, #loc94])
#loc324 = loc(fused[#loc105, #loc106])
#loc325 = loc(fused[#loc107, #loc108])
#loc326 = loc(fused[#loc109, #loc110])
#loc327 = loc(fused[#loc111, #loc108])
#loc328 = loc(fused[#loc117, #loc118])
#loc329 = loc(fused[#loc119, #loc120])
#loc330 = loc(fused[#loc121, #loc122])
#loc331 = loc(fused[#loc121, #loc123])
#loc332 = loc(fused[#loc119, #loc124])
#loc333 = loc(fused[#loc127, #loc128])
#loc334 = loc(fused[#loc129, #loc130])
#loc335 = loc(fused[#loc131, #loc132])
#loc336 = loc(fused[#loc134, #loc135])
#loc337 = loc(fused[#loc136, #loc130])
#loc338 = loc(fused[#loc142, #loc143])
#loc339 = loc(fused[#loc141, #loc143])
#loc340 = loc(fused[#loc140, #loc143])
#loc341 = loc(fused[#loc139, #loc138])
#loc342 = loc(fused[#loc148, #loc149])
#loc343 = loc(fused[#loc150, #loc151])
#loc344 = loc(fused[#loc153, #loc151])
#loc345 = loc(fused[#loc156, #loc154])
#loc346 = loc(fused[#loc160, #loc161])
#loc347 = loc(fused[#loc162, #loc163])
#loc348 = loc(fused[#loc165, #loc163])
#loc349 = loc(fused[#loc168, #loc166])
#loc350 = loc(fused[#loc170, #loc171])
#loc351 = loc(fused[#loc172, #loc173])
#loc352 = loc(fused[#loc174, #loc171])
#loc353 = loc(fused[#loc177, #loc178])
#loc354 = loc(fused[#loc179, #loc180])
#loc355 = loc(fused[#loc181, #loc178])
#loc356 = loc(fused[#loc186, #loc184])
#loc357 = loc(fused[#loc187, #loc188])
#loc358 = loc(fused[#loc189, #loc190])
#loc359 = loc(fused[#loc192, #loc193])
#loc360 = loc(fused[#loc194, #loc195])
#loc361 = loc(fused[#loc197, #loc198])
#loc362 = loc(fused[#loc199, #loc200])
#loc363 = loc(fused[#loc202, #loc203])
#loc364 = loc(fused[#loc204, #loc205])
#loc365 = loc(fused[#loc206, #loc207])
#loc366 = loc(fused[#loc209, #loc205])
#loc367 = loc(fused[#loc212, #loc213])
#loc368 = loc(fused[#loc215, #loc216])
#loc369 = loc(fused[#loc217, #loc218])
#loc370 = loc(fused[#loc219, #loc220])
#loc371 = loc(fused[#loc222, #loc221])
#loc372 = loc(fused[#loc226, #loc225])
#loc373 = loc(fused[#loc227, #loc228])
#loc374 = loc(fused[#loc229, #loc230])
#loc375 = loc(fused[#loc231, #loc232])
#loc376 = loc(fused[#loc233, #loc234])
#loc377 = loc(fused[#loc236, #loc237])
#loc378 = loc(fused[#loc238, #loc239])
#loc379 = loc(fused[#loc241, #loc242])
#loc380 = loc(fused[#loc243, #loc244])
#loc381 = loc(fused[#loc245, #loc246])
#loc382 = loc(fused[#loc248, #loc244])
#loc383 = loc(fused[#loc251, #loc252])
#loc384 = loc(fused[#loc254, #loc255])
#loc385 = loc(fused[#loc256, #loc257])
#loc386 = loc(fused[#loc258, #loc259])
#loc387 = loc(fused[#loc264, #loc265])
#loc390 = loc(fused[#loc281, #loc280])
