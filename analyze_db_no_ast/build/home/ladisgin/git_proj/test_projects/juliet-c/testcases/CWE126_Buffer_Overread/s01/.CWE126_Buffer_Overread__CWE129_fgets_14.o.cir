!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalFive : !s32i {alignment = 4 : i64} loc(#loc288)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc289)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc290)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc292)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @printIntLine(!s32i) loc(#loc293)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc295)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc298)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc26)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc301)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc301)
          cir.store %9, %8 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc301)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
            %11 = cir.const #cir.int<3> : !s32i loc(#loc35)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc35)
            %13 = cir.const #cir.int<4> : !u64i loc(#loc35)
            %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc35)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
            %17 = cir.binop(add, %14, %16) : !u64i loc(#loc35)
            %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc35)
            %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc290)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
            %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc303)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc39)
            cir.if %25 {
              %26 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
              %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
              cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
            } else {
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc47)
            } loc(#loc304)
          } loc(#loc302)
        } loc(#loc300)
      } loc(#loc299)
    } loc(#loc297)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc50)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc51)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc307)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc52)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc310)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc310)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc310)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc61)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc312)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc62)
            cir.if %13 {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc67)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc67)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc67)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc68)
            } else {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc14)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
            } loc(#loc313)
          } loc(#loc311)
        } loc(#loc309)
      } loc(#loc308)
    } loc(#loc306)
    cir.return loc(#loc16)
  } loc(#loc294)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc315)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc316)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc317)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc318)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc71)
  } loc(#loc314)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc87)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc92)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc323)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc93)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc326)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc326)
          cir.store %9, %8 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc326)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
            %11 = cir.const #cir.int<3> : !s32i loc(#loc102)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc102)
            %13 = cir.const #cir.int<4> : !u64i loc(#loc102)
            %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc102)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc102)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc102)
            %17 = cir.binop(add, %14, %16) : !u64i loc(#loc102)
            %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc102)
            %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc290)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
            %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc104)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc328)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc106)
            cir.if %25 {
              %26 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
              %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc111)
              cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc330)
            } else {
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc115)
            } loc(#loc329)
          } loc(#loc327)
        } loc(#loc325)
      } loc(#loc324)
    } loc(#loc322)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc119)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc332)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc120)
      cir.if %7 {
        %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc335)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc335)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc335)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc337)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc133)
            %14 = cir.ternary(%13, true {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc136)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc338)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc138)
              %19 = cir.ternary(%18, true {
                %20 = cir.const #true loc(#loc134)
                cir.yield %20 : !cir.bool loc(#loc134)
              }, false {
                %20 = cir.const #false loc(#loc134)
                cir.yield %20 : !cir.bool loc(#loc134)
              }) : (!cir.bool) -> !cir.bool loc(#loc134)
              cir.yield %19 : !cir.bool loc(#loc134)
            }, false {
              %15 = cir.const #false loc(#loc134)
              cir.yield %15 : !cir.bool loc(#loc134)
            }) : (!cir.bool) -> !cir.bool loc(#loc134)
            cir.if %14 {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc143)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc143)
              %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc144)
            } else {
              %15 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc81)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc81)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc145)
            } loc(#loc339)
          } loc(#loc336)
        } loc(#loc334)
      } loc(#loc333)
    } loc(#loc331)
    cir.return loc(#loc83)
  } loc(#loc319)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc151)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc156)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc344)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc157)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc347)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc347)
          cir.store %9, %8 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc347)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc165)
            %11 = cir.const #cir.int<3> : !s32i loc(#loc166)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc166)
            %13 = cir.const #cir.int<4> : !u64i loc(#loc166)
            %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc166)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc166)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc166)
            %17 = cir.binop(add, %14, %16) : !u64i loc(#loc166)
            %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc166)
            %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc290)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc167)
            %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc168)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc349)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc170)
            cir.if %25 {
              %26 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc174)
              %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc175)
              cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
            } else {
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc178)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc178)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc179)
            } loc(#loc350)
          } loc(#loc348)
        } loc(#loc346)
      } loc(#loc345)
    } loc(#loc343)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc182)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc183)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc353)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc184)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc356)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc356)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc356)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc193)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc358)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc194)
            %14 = cir.ternary(%13, true {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc197)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc359)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc199)
              %19 = cir.ternary(%18, true {
                %20 = cir.const #true loc(#loc195)
                cir.yield %20 : !cir.bool loc(#loc195)
              }, false {
                %20 = cir.const #false loc(#loc195)
                cir.yield %20 : !cir.bool loc(#loc195)
              }) : (!cir.bool) -> !cir.bool loc(#loc195)
              cir.yield %19 : !cir.bool loc(#loc195)
            }, false {
              %15 = cir.const #false loc(#loc195)
              cir.yield %15 : !cir.bool loc(#loc195)
            }) : (!cir.bool) -> !cir.bool loc(#loc195)
            cir.if %14 {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc204)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc204)
              %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc204)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc205)
            } else {
              %15 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc206)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc206)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc207)
            } loc(#loc360)
          } loc(#loc357)
        } loc(#loc355)
      } loc(#loc354)
    } loc(#loc352)
    cir.return loc(#loc147)
  } loc(#loc340)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc213)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc217)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc218)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc365)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc219)
      cir.if %7 {
        %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc223)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc223)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc224)
      } else {
        %8 = cir.const #cir.int<7> : !s32i loc(#loc225)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc367)
      } loc(#loc366)
    } loc(#loc364)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc229)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc230)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc369)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc231)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc372)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc372)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc372)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc240)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc374)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc241)
            cir.if %13 {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc246)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc246)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc246)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc247)
            } else {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc248)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc248)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc249)
            } loc(#loc375)
          } loc(#loc373)
        } loc(#loc371)
      } loc(#loc370)
    } loc(#loc368)
    cir.return loc(#loc209)
  } loc(#loc361)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc377)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc254)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc255)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc260)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc380)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc261)
      cir.if %7 {
        %8 = cir.const #cir.int<7> : !s32i loc(#loc263)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc382)
      } loc(#loc381)
    } loc(#loc379)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc288)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc267)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc268)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc384)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc269)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc387)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc387)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc387)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc278)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc389)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc279)
            cir.if %13 {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc283)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc284)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc284)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc284)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc285)
            } else {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc286)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc286)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc287)
            } loc(#loc390)
          } loc(#loc388)
        } loc(#loc386)
      } loc(#loc385)
    } loc(#loc383)
    cir.return loc(#loc251)
  } loc(#loc376)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":57:27)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":24:1)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":61:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":26:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":26:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":28:13)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":28:12)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":28:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":44:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":29:8)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":29:20)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":29:18)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":30:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":31:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":43:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":32:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":32:49)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":34:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":42:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":34:23)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":34:36)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":34:53)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":34:17)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":34:63)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":34:60)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":35:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":38:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":40:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":37:29)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":37:24)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":37:17)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":37:40)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":41:17)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":45:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":60:5)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":45:8)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":45:20)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":45:18)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":46:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":47:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":59:9)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":48:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":48:34)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":51:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":58:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":51:17)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":51:25)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":51:22)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":52:13)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":54:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":56:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":53:37)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":53:30)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":53:17)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":57:17)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":215:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":221:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":217:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":217:14)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":218:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":218:14)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":219:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":219:14)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":220:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":220:14)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":92:19)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":105:27)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":68:1)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":109:1)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":70:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":70:9)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":72:13)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":72:12)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":72:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":73:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":88:5)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":73:8)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":73:20)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":73:18)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":74:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":75:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":87:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":76:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":76:49)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":78:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":86:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":78:23)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":78:36)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":78:53)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":78:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":78:63)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":78:60)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":79:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":82:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":84:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":81:29)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":81:24)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":81:17)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":81:40)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":85:27)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":85:17)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":89:5)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":108:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":89:8)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":89:20)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":89:18)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":90:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":93:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":95:5)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":92:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":96:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":107:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":97:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":97:34)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":106:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:17)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:25)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:22)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:27)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:30)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:38)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:40)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":99:35)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":100:13)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":102:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":104:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":101:37)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":101:30)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":101:17)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":105:17)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":112:1)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":148:1)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":114:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":114:9)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":116:13)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":116:12)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":116:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":117:5)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":132:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":117:8)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":117:20)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":117:18)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":118:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":119:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":131:9)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":120:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":120:49)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":122:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":130:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":122:23)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":122:36)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":122:53)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":122:17)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":122:63)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":122:60)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":123:13)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":126:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":128:13)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":125:29)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":125:24)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":125:17)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":125:40)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":129:27)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":129:17)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":133:5)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":147:5)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":133:8)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":133:20)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":133:18)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":134:5)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":135:9)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":146:9)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":136:13)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":136:34)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:13)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":145:13)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:17)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:25)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:22)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:27)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:30)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:38)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:40)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":138:35)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":139:13)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":141:13)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":143:13)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":140:37)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":140:30)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":140:17)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":144:27)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":144:17)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":151:1)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":183:1)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":153:5)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":153:9)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":155:13)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":155:12)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":155:5)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":156:5)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":166:5)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":156:8)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":156:20)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":156:18)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":157:5)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":160:5)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":162:5)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":159:19)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":159:9)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":165:16)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":165:9)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":167:5)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":182:5)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":167:8)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":167:20)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":167:18)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":168:5)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":169:9)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":181:9)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":170:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":170:34)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":173:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":180:13)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":173:17)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":173:25)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":173:22)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":174:13)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":176:13)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":178:13)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":175:37)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":175:30)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":175:17)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":179:27)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":179:17)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":186:1)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":213:1)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":188:5)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":188:9)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":190:13)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":190:12)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":190:5)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":191:5)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":196:5)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":191:8)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":191:20)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":191:18)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":192:5)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":195:16)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":195:9)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":197:5)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":212:5)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":197:8)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":197:20)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":197:18)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":198:5)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":199:9)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":211:9)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":200:13)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":200:34)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":203:13)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":210:13)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":203:17)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":203:25)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":203:22)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":204:13)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":206:13)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":208:13)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":205:37)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":205:30)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":205:17)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":209:27)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_fgets_14.c":209:17)
#loc288 = loc(fused[#loc1, #loc2])
#loc289 = loc(fused[#loc3, #loc4])
#loc290 = loc(fused[#loc5, #loc6])
#loc291 = loc(fused[#loc7, #loc8])
#loc292 = loc(fused[#loc9, #loc10])
#loc293 = loc(fused[#loc12, #loc13])
#loc294 = loc(fused[#loc15, #loc16])
#loc295 = loc(fused[#loc17, #loc18])
#loc296 = loc(fused[#loc21, #loc19])
#loc297 = loc(fused[#loc22, #loc23])
#loc298 = loc(fused[#loc24, #loc25])
#loc299 = loc(fused[#loc27, #loc23])
#loc300 = loc(fused[#loc28, #loc29])
#loc301 = loc(fused[#loc30, #loc31])
#loc302 = loc(fused[#loc32, #loc33])
#loc303 = loc(fused[#loc37, #loc38])
#loc304 = loc(fused[#loc40, #loc41, #loc42, #loc33])
#loc305 = loc(fused[#loc45, #loc46])
#loc306 = loc(fused[#loc48, #loc49])
#loc307 = loc(fused[#loc50, #loc51])
#loc308 = loc(fused[#loc53, #loc49])
#loc309 = loc(fused[#loc54, #loc55])
#loc310 = loc(fused[#loc56, #loc57])
#loc311 = loc(fused[#loc58, #loc59])
#loc312 = loc(fused[#loc60, #loc61])
#loc313 = loc(fused[#loc63, #loc64, #loc65, #loc59])
#loc314 = loc(fused[#loc70, #loc71])
#loc315 = loc(fused[#loc72, #loc73])
#loc316 = loc(fused[#loc74, #loc75])
#loc317 = loc(fused[#loc76, #loc77])
#loc318 = loc(fused[#loc78, #loc79])
#loc319 = loc(fused[#loc82, #loc83])
#loc320 = loc(fused[#loc84, #loc85])
#loc321 = loc(fused[#loc88, #loc86])
#loc322 = loc(fused[#loc89, #loc90])
#loc323 = loc(fused[#loc91, #loc92])
#loc324 = loc(fused[#loc94, #loc90])
#loc325 = loc(fused[#loc95, #loc96])
#loc326 = loc(fused[#loc97, #loc98])
#loc327 = loc(fused[#loc99, #loc100])
#loc328 = loc(fused[#loc104, #loc105])
#loc329 = loc(fused[#loc107, #loc108, #loc109, #loc100])
#loc330 = loc(fused[#loc112, #loc113])
#loc331 = loc(fused[#loc116, #loc117])
#loc332 = loc(fused[#loc118, #loc119])
#loc333 = loc(fused[#loc121, #loc122, #loc123, #loc117])
#loc334 = loc(fused[#loc125, #loc126])
#loc335 = loc(fused[#loc127, #loc128])
#loc336 = loc(fused[#loc129, #loc130])
#loc337 = loc(fused[#loc131, #loc132])
#loc338 = loc(fused[#loc135, #loc137])
#loc339 = loc(fused[#loc139, #loc140, #loc141, #loc130])
#loc340 = loc(fused[#loc146, #loc147])
#loc341 = loc(fused[#loc148, #loc149])
#loc342 = loc(fused[#loc152, #loc150])
#loc343 = loc(fused[#loc153, #loc154])
#loc344 = loc(fused[#loc155, #loc156])
#loc345 = loc(fused[#loc158, #loc154])
#loc346 = loc(fused[#loc159, #loc160])
#loc347 = loc(fused[#loc161, #loc162])
#loc348 = loc(fused[#loc163, #loc164])
#loc349 = loc(fused[#loc168, #loc169])
#loc350 = loc(fused[#loc171, #loc172, #loc173, #loc164])
#loc351 = loc(fused[#loc176, #loc177])
#loc352 = loc(fused[#loc180, #loc181])
#loc353 = loc(fused[#loc182, #loc183])
#loc354 = loc(fused[#loc185, #loc181])
#loc355 = loc(fused[#loc186, #loc187])
#loc356 = loc(fused[#loc188, #loc189])
#loc357 = loc(fused[#loc190, #loc191])
#loc358 = loc(fused[#loc192, #loc193])
#loc359 = loc(fused[#loc196, #loc198])
#loc360 = loc(fused[#loc200, #loc201, #loc202, #loc191])
#loc361 = loc(fused[#loc208, #loc209])
#loc362 = loc(fused[#loc210, #loc211])
#loc363 = loc(fused[#loc214, #loc212])
#loc364 = loc(fused[#loc215, #loc216])
#loc365 = loc(fused[#loc217, #loc218])
#loc366 = loc(fused[#loc220, #loc221, #loc222, #loc216])
#loc367 = loc(fused[#loc226, #loc225])
#loc368 = loc(fused[#loc227, #loc228])
#loc369 = loc(fused[#loc229, #loc230])
#loc370 = loc(fused[#loc232, #loc228])
#loc371 = loc(fused[#loc233, #loc234])
#loc372 = loc(fused[#loc235, #loc236])
#loc373 = loc(fused[#loc237, #loc238])
#loc374 = loc(fused[#loc239, #loc240])
#loc375 = loc(fused[#loc242, #loc243, #loc244, #loc238])
#loc376 = loc(fused[#loc250, #loc251])
#loc377 = loc(fused[#loc252, #loc253])
#loc378 = loc(fused[#loc256, #loc254])
#loc379 = loc(fused[#loc257, #loc258])
#loc380 = loc(fused[#loc259, #loc260])
#loc381 = loc(fused[#loc262, #loc258])
#loc382 = loc(fused[#loc264, #loc263])
#loc383 = loc(fused[#loc265, #loc266])
#loc384 = loc(fused[#loc267, #loc268])
#loc385 = loc(fused[#loc270, #loc266])
#loc386 = loc(fused[#loc271, #loc272])
#loc387 = loc(fused[#loc273, #loc274])
#loc388 = loc(fused[#loc275, #loc276])
#loc389 = loc(fused[#loc277, #loc278])
#loc390 = loc(fused[#loc280, #loc281, #loc282, #loc276])
