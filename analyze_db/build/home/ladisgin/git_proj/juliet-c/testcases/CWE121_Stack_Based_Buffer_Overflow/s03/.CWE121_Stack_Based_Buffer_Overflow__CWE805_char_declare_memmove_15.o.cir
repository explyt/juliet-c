!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc163)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc20)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc167)
    cir.br ^bb6 loc(#loc24)
  ^bb5:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc168)
  ^bb8:  // pred: ^bb7
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc30)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc31)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc31)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc35)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc36)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc41)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc171)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc172)
    cir.libc.memmove %34 bytes from %30 to %28 : !cir.ptr<!void>, !u64i loc(#loc173)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc46)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc48)
    %41 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc5)
  } loc(#loc160)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc181)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc71)
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc69)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb6 loc(#loc75)
  ^bb5:  // pred: ^bb2
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc78)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    cir.br ^bb6 loc(#loc82)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc70)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc186)
  ^bb8:  // pred: ^bb7
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc86)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc87)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc87)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc91)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc92)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc97)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc189)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc190)
    cir.libc.memmove %34 bytes from %30 to %28 : !cir.ptr<!void>, !u64i loc(#loc191)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc102)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc104)
    %41 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb9 loc(#loc84)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc60)
  } loc(#loc178)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc196)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc121)
    cir.br ^bb2 loc(#loc119)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc119)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc125)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc200)
    cir.br ^bb6 loc(#loc129)
  ^bb5:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    cir.br ^bb6 loc(#loc132)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc120)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc136)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc137)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc137)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc202)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc141)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc142)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc142)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc144)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc147)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc147)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc204)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc205)
    cir.libc.memmove %34 bytes from %30 to %28 : !cir.ptr<!void>, !u64i loc(#loc206)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc152)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc154)
    %41 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb9 loc(#loc134)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc110)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":38:19)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":23:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":50:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":42:9)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":42:24)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":25:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":25:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":26:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":26:26)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":27:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":27:28)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":28:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":40:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":28:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":33:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":33:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":34:19)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":34:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":34:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":34:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":35:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":39:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":41:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":49:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":43:16)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":43:24)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":43:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":43:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":43:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":43:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":44:25)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":44:16)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":44:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":44:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":46:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":46:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":46:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":46:35)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":46:46)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":46:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":46:47)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":47:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":47:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":47:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":47:18)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":47:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":48:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":48:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":114:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":118:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":116:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":116:14)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":117:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":117:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":57:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":83:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":75:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":75:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":59:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":59:12)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":60:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":60:26)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":61:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":61:28)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":62:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":73:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":62:12)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":64:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":66:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":66:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":67:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":70:16)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":70:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":71:19)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":71:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":71:14)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":71:15)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":72:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":74:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":82:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":76:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":76:24)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":76:29)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":76:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":76:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":76:34)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":77:25)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":77:16)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":77:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":77:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":79:17)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":79:23)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":79:31)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":79:35)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":79:46)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":79:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":79:47)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":80:23)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":80:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":80:14)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":80:18)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":80:19)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":81:19)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":81:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":86:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":112:1)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":104:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":104:24)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":88:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":88:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":89:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":89:26)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":90:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":90:28)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":91:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":102:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":91:12)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":93:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":95:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":95:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":96:19)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":96:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":96:14)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":96:15)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":97:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":100:19)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":100:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":101:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":103:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":111:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":105:16)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":105:24)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":105:29)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":105:33)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":105:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":105:34)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":106:25)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":106:16)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":106:20)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":106:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":108:17)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":108:23)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":108:31)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":108:35)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":108:46)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":108:9)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":108:47)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":109:23)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":109:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":109:14)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":109:18)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":109:19)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":110:19)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_15.c":110:9)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc4, #loc5])
#loc161 = loc(fused[#loc6, #loc7])
#loc162 = loc(fused[#loc8, #loc9])
#loc163 = loc(fused[#loc10, #loc11])
#loc164 = loc(fused[#loc12, #loc13])
#loc165 = loc(fused[#loc14, #loc15])
#loc166 = loc(fused[#loc19, #loc18])
#loc167 = loc(fused[#loc21, #loc20])
#loc168 = loc(fused[#loc27, #loc28])
#loc169 = loc(fused[#loc33, #loc34])
#loc170 = loc(fused[#loc38, #loc35])
#loc171 = loc(fused[#loc42, #loc43])
#loc172 = loc(fused[#loc41, #loc43])
#loc173 = loc(fused[#loc44, #loc45])
#loc174 = loc(fused[#loc47, #loc46])
#loc175 = loc(fused[#loc53, #loc54])
#loc176 = loc(fused[#loc55, #loc56])
#loc177 = loc(fused[#loc57, #loc58])
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc61, #loc62])
#loc180 = loc(fused[#loc63, #loc64])
#loc181 = loc(fused[#loc65, #loc66])
#loc182 = loc(fused[#loc67, #loc68])
#loc183 = loc(fused[#loc69, #loc70])
#loc184 = loc(fused[#loc77, #loc76])
#loc185 = loc(fused[#loc79, #loc78])
#loc186 = loc(fused[#loc83, #loc84])
#loc187 = loc(fused[#loc89, #loc90])
#loc188 = loc(fused[#loc94, #loc91])
#loc189 = loc(fused[#loc98, #loc99])
#loc190 = loc(fused[#loc97, #loc99])
#loc191 = loc(fused[#loc100, #loc101])
#loc192 = loc(fused[#loc103, #loc102])
#loc193 = loc(fused[#loc109, #loc110])
#loc194 = loc(fused[#loc111, #loc112])
#loc195 = loc(fused[#loc113, #loc114])
#loc196 = loc(fused[#loc115, #loc116])
#loc197 = loc(fused[#loc117, #loc118])
#loc198 = loc(fused[#loc119, #loc120])
#loc199 = loc(fused[#loc124, #loc123])
#loc200 = loc(fused[#loc126, #loc125])
#loc201 = loc(fused[#loc133, #loc134])
#loc202 = loc(fused[#loc139, #loc140])
#loc203 = loc(fused[#loc144, #loc141])
#loc204 = loc(fused[#loc148, #loc149])
#loc205 = loc(fused[#loc147, #loc149])
#loc206 = loc(fused[#loc150, #loc151])
#loc207 = loc(fused[#loc153, #loc152])
