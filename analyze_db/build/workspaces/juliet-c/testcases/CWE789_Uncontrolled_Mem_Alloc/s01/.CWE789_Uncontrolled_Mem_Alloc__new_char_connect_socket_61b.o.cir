!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":53:18)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":53:25)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":119:22)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":119:29)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":127:22)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":127:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc226 = loc(fused[#loc18, #loc19])
#loc262 = loc(fused[#loc116, #loc117])
#loc266 = loc(fused[#loc125, #loc126])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc220)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc222)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc223)
  cir.func private @close(!s32i) -> !s32i loc(#loc224)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_619badSourceEm(%arg0: !u64i loc(fused[#loc18, #loc19])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc17)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc20)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc228)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc229)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc230)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc231)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc28)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc230)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %11 = cir.const #cir.int<1> : !u32i loc(#loc36)
            %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc36)
            %13 = cir.const #cir.int<6> : !u32i loc(#loc37)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc37)
            %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc38)
            cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc234)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc44)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc236)
              cir.if %59 {
                cir.break loc(#loc46)
              } loc(#loc237)
            } loc(#loc235)
            %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc238)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc239)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc240)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc54)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc54)
            %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc241)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc57)
            %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc242)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc62)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc62)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc63)
            %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc243)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %57 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc245)
              %58 = cir.const #cir.int<16> : !u64i loc(#loc246)
              %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc246)
              %60 = cir.call @connect(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc74)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc75)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc247)
              cir.if %63 {
                cir.break loc(#loc77)
              } loc(#loc248)
            } loc(#loc244)
            %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc79)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc80)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc80)
            %36 = cir.const #cir.int<8> : !u64i loc(#loc80)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc80)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc80)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc80)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc81)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc249)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc82)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc83)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc83)
            cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc250)
            cir.scope {
              %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc89)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc252)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc90)
                cir.yield %61 : !cir.bool loc(#loc90)
              }, false {
                %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %62 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc253)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc90)
                  cir.yield %65 : !cir.bool loc(#loc90)
                }, false {
                  %65 = cir.const #false loc(#loc90)
                  cir.yield %65 : !cir.bool loc(#loc90)
                }) : (!cir.bool) -> !cir.bool loc(#loc90)
                cir.yield %64 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.if %60 {
                cir.break loc(#loc94)
              } loc(#loc254)
            } loc(#loc251)
            %47 = cir.const #cir.int<0> : !s8i loc(#loc95)
            %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc97)
            %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc255)
            %51 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc98)
            %52 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc99)
            %53 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc101)
            %55 = cir.call @__isoc23_strtoul(%52, %53, %54) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc98)
            cir.store %55, %0 : !u64i, !cir.ptr<!u64i> loc(#loc256)
          } loc(#loc233)
          cir.yield loc(#loc32)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc104)
          cir.condition(%11) loc(#loc104)
        } loc(#loc232)
      } loc(#loc232)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc107)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc108)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc108)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc258)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc111)
        } loc(#loc259)
      } loc(#loc257)
    } loc(#loc227)
    %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    cir.store %2, %1 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    %3 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc260)
    cir.return %3 : !u64i loc(#loc260)
  } loc(#loc225)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_6113goodG2BSourceEm(%arg0: !u64i loc(fused[#loc116, #loc117])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc118)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc119)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc119)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc263)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc264)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc264)
    cir.return %5 : !u64i loc(#loc264)
  } loc(#loc261)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_6113goodB2GSourceEm(%arg0: !u64i loc(fused[#loc125, #loc126])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc124)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc127)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc268)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc269)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc270)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc271)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc135)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc270)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc142)
            %11 = cir.const #cir.int<1> : !u32i loc(#loc143)
            %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc143)
            %13 = cir.const #cir.int<6> : !u32i loc(#loc144)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc144)
            %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc145)
            cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc274)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc151)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc151)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc276)
              cir.if %59 {
                cir.break loc(#loc153)
              } loc(#loc277)
            } loc(#loc275)
            %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc278)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc156)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc279)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc280)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc161)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc161)
            %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc281)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc163)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc163)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc164)
            %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc282)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc167)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc167)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc168)
            %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc283)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %57 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc285)
              %58 = cir.const #cir.int<16> : !u64i loc(#loc286)
              %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc286)
              %60 = cir.call @connect(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc178)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc179)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc179)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc287)
              cir.if %63 {
                cir.break loc(#loc181)
              } loc(#loc288)
            } loc(#loc284)
            %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc183)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc184)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc184)
            %36 = cir.const #cir.int<8> : !u64i loc(#loc184)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc184)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc184)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc184)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc184)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc185)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc185)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc289)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc186)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc187)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc187)
            cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc290)
            cir.scope {
              %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc192)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc193)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc193)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc292)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc194)
                cir.yield %61 : !cir.bool loc(#loc194)
              }, false {
                %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                %62 = cir.const #cir.int<0> : !s32i loc(#loc196)
                %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc293)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc194)
                  cir.yield %65 : !cir.bool loc(#loc194)
                }, false {
                  %65 = cir.const #false loc(#loc194)
                  cir.yield %65 : !cir.bool loc(#loc194)
                }) : (!cir.bool) -> !cir.bool loc(#loc194)
                cir.yield %64 : !cir.bool loc(#loc194)
              }) : (!cir.bool) -> !cir.bool loc(#loc194)
              cir.if %60 {
                cir.break loc(#loc198)
              } loc(#loc294)
            } loc(#loc291)
            %47 = cir.const #cir.int<0> : !s8i loc(#loc199)
            %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc200)
            %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc201)
            %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc201)
            cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc295)
            %51 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc202)
            %52 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc203)
            %53 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc205)
            %55 = cir.call @__isoc23_strtoul(%52, %53, %54) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc202)
            cir.store %55, %0 : !u64i, !cir.ptr<!u64i> loc(#loc296)
          } loc(#loc273)
          cir.yield loc(#loc139)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc208)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc208)
          cir.condition(%11) loc(#loc208)
        } loc(#loc272)
      } loc(#loc272)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc211)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc212)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc212)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc298)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc214)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc215)
        } loc(#loc299)
      } loc(#loc297)
    } loc(#loc267)
    %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc216)
    cir.store %2, %1 : !u64i, !cir.ptr<!u64i> loc(#loc300)
    %3 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc300)
    cir.return %3 : !u64i loc(#loc300)
  } loc(#loc265)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":81:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":53:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":112:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":54:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":55:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":110:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":60:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":60:13)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":61:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":61:28)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":62:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":62:32)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":63:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":63:41)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":64:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":99:17)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":65:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":98:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":74:36)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":74:45)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":74:58)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":74:29)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":74:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":74:69)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":75:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":78:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":75:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":75:34)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":76:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":77:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":79:20)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":79:21)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":79:30)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":79:33)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":79:47)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":79:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":79:48)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":80:34)
#loc55 = loc("/usr/include/netinet/in.h":249:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":80:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":81:39)
#loc58 = loc("/usr/include/netinet/in.h":251:20)
#loc59 = loc("/usr/include/netinet/in.h":33:15)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":81:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":81:59)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":82:38)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":82:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":82:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":82:46)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":86:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:25)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:58)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:59)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:68)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:82)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":83:88)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":84:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":85:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:31)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:46)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:59)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:77)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:80)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:26)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":89:81)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":90:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":93:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":90:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":90:31)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":90:44)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":90:47)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":90:61)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":91:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":92:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":95:39)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":95:25)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":95:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":97:20)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":97:28)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":97:41)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":97:47)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":97:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":97:48)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":99:16)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":100:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":103:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":100:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":100:30)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":101:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":102:26)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":102:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":111:12)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":111:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":119:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":124:1)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":120:1)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":122:12)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":122:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":123:12)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":123:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":127:1)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":186:1)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":128:1)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":129:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":184:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":134:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":134:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":135:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":135:28)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":136:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":136:32)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":137:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":137:41)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":138:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":173:17)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":139:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":172:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":148:36)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":148:45)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":148:58)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":148:29)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":148:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":148:69)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":149:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":152:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":149:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":149:34)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":150:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":151:17)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":153:20)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":153:21)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":153:30)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":153:33)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":153:47)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":153:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":153:48)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":154:34)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":154:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":155:49)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":155:39)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":155:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":155:59)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":156:38)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":156:32)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":156:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":156:46)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":160:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:25)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:58)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:59)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:68)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:82)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:17)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":157:88)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":158:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":159:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:31)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:46)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:59)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:77)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:80)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:26)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":163:81)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":164:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":167:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":164:17)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":164:31)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":164:44)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":164:47)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":164:61)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":165:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":166:17)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":169:39)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":169:25)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":169:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":171:20)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":171:28)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":171:41)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":171:47)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":171:13)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":171:48)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":173:16)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":174:9)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":177:9)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":174:13)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":174:30)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":175:9)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":176:26)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":176:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":185:12)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_61b.cpp":185:5)
#loc218 = loc(fused[#loc1, #loc2])
#loc219 = loc(fused[#loc3, #loc4])
#loc220 = loc(fused[#loc6, #loc7])
#loc221 = loc(fused[#loc8, #loc9])
#loc222 = loc(fused[#loc10, #loc11])
#loc223 = loc(fused[#loc12, #loc13])
#loc224 = loc(fused[#loc14, #loc15])
#loc225 = loc(fused[#loc16, #loc17])
#loc227 = loc(fused[#loc21, #loc22])
#loc228 = loc(fused[#loc23, #loc24])
#loc229 = loc(fused[#loc25, #loc26])
#loc230 = loc(fused[#loc27, #loc28])
#loc231 = loc(fused[#loc29, #loc30])
#loc232 = loc(fused[#loc31, #loc32])
#loc233 = loc(fused[#loc33, #loc34])
#loc234 = loc(fused[#loc39, #loc40])
#loc235 = loc(fused[#loc41, #loc42])
#loc236 = loc(fused[#loc43, #loc44])
#loc237 = loc(fused[#loc45, #loc42])
#loc238 = loc(fused[#loc47, #loc48])
#loc239 = loc(fused[#loc50, #loc51])
#loc240 = loc(fused[#loc52, #loc53])
#loc241 = loc(fused[#loc56, #loc54])
#loc242 = loc(fused[#loc60, #loc61])
#loc243 = loc(fused[#loc65, #loc66])
#loc244 = loc(fused[#loc67, #loc68])
#loc245 = loc(fused[#loc70, #loc71])
#loc246 = loc(fused[#loc72, #loc73])
#loc247 = loc(fused[#loc74, #loc75])
#loc248 = loc(fused[#loc76, #loc68])
#loc249 = loc(fused[#loc80, #loc81])
#loc250 = loc(fused[#loc84, #loc85])
#loc251 = loc(fused[#loc86, #loc87])
#loc252 = loc(fused[#loc88, #loc89])
#loc253 = loc(fused[#loc91, #loc92])
#loc254 = loc(fused[#loc93, #loc87])
#loc255 = loc(fused[#loc97, #loc95])
#loc256 = loc(fused[#loc102, #loc103])
#loc257 = loc(fused[#loc105, #loc106])
#loc258 = loc(fused[#loc107, #loc108])
#loc259 = loc(fused[#loc109, #loc106])
#loc260 = loc(fused[#loc113, #loc112])
#loc261 = loc(fused[#loc114, #loc115])
#loc263 = loc(fused[#loc120, #loc119])
#loc264 = loc(fused[#loc122, #loc121])
#loc265 = loc(fused[#loc123, #loc124])
#loc267 = loc(fused[#loc128, #loc129])
#loc268 = loc(fused[#loc130, #loc131])
#loc269 = loc(fused[#loc132, #loc133])
#loc270 = loc(fused[#loc134, #loc135])
#loc271 = loc(fused[#loc136, #loc137])
#loc272 = loc(fused[#loc138, #loc139])
#loc273 = loc(fused[#loc140, #loc141])
#loc274 = loc(fused[#loc146, #loc147])
#loc275 = loc(fused[#loc148, #loc149])
#loc276 = loc(fused[#loc150, #loc151])
#loc277 = loc(fused[#loc152, #loc149])
#loc278 = loc(fused[#loc154, #loc155])
#loc279 = loc(fused[#loc157, #loc158])
#loc280 = loc(fused[#loc159, #loc160])
#loc281 = loc(fused[#loc162, #loc161])
#loc282 = loc(fused[#loc165, #loc166])
#loc283 = loc(fused[#loc169, #loc170])
#loc284 = loc(fused[#loc171, #loc172])
#loc285 = loc(fused[#loc174, #loc175])
#loc286 = loc(fused[#loc176, #loc177])
#loc287 = loc(fused[#loc178, #loc179])
#loc288 = loc(fused[#loc180, #loc172])
#loc289 = loc(fused[#loc184, #loc185])
#loc290 = loc(fused[#loc188, #loc189])
#loc291 = loc(fused[#loc190, #loc191])
#loc292 = loc(fused[#loc192, #loc193])
#loc293 = loc(fused[#loc195, #loc196])
#loc294 = loc(fused[#loc197, #loc191])
#loc295 = loc(fused[#loc201, #loc199])
#loc296 = loc(fused[#loc206, #loc207])
#loc297 = loc(fused[#loc209, #loc210])
#loc298 = loc(fused[#loc211, #loc212])
#loc299 = loc(fused[#loc213, #loc210])
#loc300 = loc(fused[#loc217, #loc216])
