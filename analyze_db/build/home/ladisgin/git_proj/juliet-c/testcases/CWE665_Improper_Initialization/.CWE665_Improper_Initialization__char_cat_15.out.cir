!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE665_Improper_Initialization__char_cat_15.c":123:10)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_15.c":123:14)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_15.c":123:20)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_15.c":123:32)
#loc172 = loc(fused[#loc57, #loc58])
#loc173 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc159)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.break loc(#loc18)
        } loc(#loc17)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc20)
          cir.break loc(#loc21)
        } loc(#loc19)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc161)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc163)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc27)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc28)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc28)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc28)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc32)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc32)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc33)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc35)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc165)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc36)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    } loc(#loc162)
    cir.return loc(#loc7)
  } loc(#loc157)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc166)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc169)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc173)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc64)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_cat_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE665_Improper_Initialization__char_cat_15_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_cat_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call @CWE665_Improper_Initialization__char_cat_15_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.return %17 : !s32i loc(#loc176)
  } loc(#loc171)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc179)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc85)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          cir.break loc(#loc89)
        } loc(#loc86)
        cir.case(default, []) {
          %4 = cir.const #cir.int<0> : !s32i loc(#loc91)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc91)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc94)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc182)
          cir.break loc(#loc95)
        } loc(#loc90)
        cir.yield loc(#loc83)
      } loc(#loc83)
    } loc(#loc181)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc184)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc101)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc102)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc103)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc102)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc102)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc106)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc106)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc107)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc108)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc107)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc109)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc186)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc110)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    } loc(#loc183)
    cir.return loc(#loc76)
  } loc(#loc177)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc189)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc125)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc127)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc130)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc192)
          cir.break loc(#loc131)
        } loc(#loc126)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc133)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc133)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc134)
          cir.break loc(#loc135)
        } loc(#loc132)
        cir.yield loc(#loc123)
      } loc(#loc123)
    } loc(#loc191)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc194)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc141)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc142)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc143)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc142)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc142)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc146)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc146)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc147)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc148)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc147)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc149)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc196)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc150)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    } loc(#loc193)
    cir.return loc(#loc116)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE665_Improper_Initialization__char_cat_15.c":36:19)
#loc4 = loc("/usr/include/string.h":149:1)
#loc5 = loc("/usr/include/string.h":150:14)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_15.c":23:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_15.c":47:1)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_15.c":25:5)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_15.c":25:12)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_15.c":26:5)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_15.c":26:24)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_15.c":27:12)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_15.c":27:5)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_15.c":28:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_15.c":38:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_15.c":28:12)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_15.c":30:5)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_15.c":33:9)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_15.c":34:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_15.c":36:9)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_15.c":37:9)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_15.c":39:5)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_15.c":46:5)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_15.c":40:9)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_15.c":40:24)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:16)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:24)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:29)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:33)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:9)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:34)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:25)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:16)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:20)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:9)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_15.c":44:9)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_15.c":44:16)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_15.c":44:22)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_15.c":45:19)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_15.c":45:9)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_15.c":107:1)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_15.c":111:1)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_15.c":109:5)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_15.c":109:14)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_15.c":110:5)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_15.c":110:14)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_15.c":128:15)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_15.c":130:15)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_15.c":133:15)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_15.c":135:15)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_15.c":123:1)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_15.c":138:1)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_15.c":124:1)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_15.c":126:27)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_15.c":126:22)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_15.c":126:5)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_15.c":128:5)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_15.c":129:5)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_15.c":129:54)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_15.c":130:5)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_15.c":133:5)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_15.c":134:5)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_15.c":134:53)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_15.c":135:5)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_15.c":137:12)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_15.c":137:5)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_15.c":54:1)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_15.c":78:1)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_15.c":56:5)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_15.c":56:12)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_15.c":57:5)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_15.c":57:24)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_15.c":58:12)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_15.c":58:5)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_15.c":59:5)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_15.c":69:5)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_15.c":59:12)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_15.c":61:5)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_15.c":63:19)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_15.c":63:9)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_15.c":64:9)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_15.c":65:5)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:19)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:9)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:14)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:15)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_15.c":68:9)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_15.c":70:5)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_15.c":77:5)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_15.c":71:9)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_15.c":71:24)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:16)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:24)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:29)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:33)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:9)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:34)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:25)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:16)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:20)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:9)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_15.c":75:9)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_15.c":75:16)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_15.c":75:22)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_15.c":76:19)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_15.c":76:9)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_15.c":81:1)
#loc116 = loc("CWE665_Improper_Initialization__char_cat_15.c":105:1)
#loc117 = loc("CWE665_Improper_Initialization__char_cat_15.c":83:5)
#loc118 = loc("CWE665_Improper_Initialization__char_cat_15.c":83:12)
#loc119 = loc("CWE665_Improper_Initialization__char_cat_15.c":84:5)
#loc120 = loc("CWE665_Improper_Initialization__char_cat_15.c":84:24)
#loc121 = loc("CWE665_Improper_Initialization__char_cat_15.c":85:12)
#loc122 = loc("CWE665_Improper_Initialization__char_cat_15.c":85:5)
#loc123 = loc("CWE665_Improper_Initialization__char_cat_15.c":86:5)
#loc124 = loc("CWE665_Improper_Initialization__char_cat_15.c":96:5)
#loc125 = loc("CWE665_Improper_Initialization__char_cat_15.c":86:12)
#loc126 = loc("CWE665_Improper_Initialization__char_cat_15.c":88:5)
#loc127 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:19)
#loc128 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:9)
#loc129 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:14)
#loc130 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:15)
#loc131 = loc("CWE665_Improper_Initialization__char_cat_15.c":91:9)
#loc132 = loc("CWE665_Improper_Initialization__char_cat_15.c":92:5)
#loc133 = loc("CWE665_Improper_Initialization__char_cat_15.c":94:19)
#loc134 = loc("CWE665_Improper_Initialization__char_cat_15.c":94:9)
#loc135 = loc("CWE665_Improper_Initialization__char_cat_15.c":95:9)
#loc136 = loc("CWE665_Improper_Initialization__char_cat_15.c":97:5)
#loc137 = loc("CWE665_Improper_Initialization__char_cat_15.c":104:5)
#loc138 = loc("CWE665_Improper_Initialization__char_cat_15.c":98:9)
#loc139 = loc("CWE665_Improper_Initialization__char_cat_15.c":98:24)
#loc140 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:16)
#loc141 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:24)
#loc142 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:29)
#loc143 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:33)
#loc144 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:9)
#loc145 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:34)
#loc146 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:25)
#loc147 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:16)
#loc148 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:20)
#loc149 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:9)
#loc150 = loc("CWE665_Improper_Initialization__char_cat_15.c":102:9)
#loc151 = loc("CWE665_Improper_Initialization__char_cat_15.c":102:16)
#loc152 = loc("CWE665_Improper_Initialization__char_cat_15.c":102:22)
#loc153 = loc("CWE665_Improper_Initialization__char_cat_15.c":103:19)
#loc154 = loc("CWE665_Improper_Initialization__char_cat_15.c":103:9)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc4, #loc5])
#loc157 = loc(fused[#loc6, #loc7])
#loc158 = loc(fused[#loc8, #loc9])
#loc159 = loc(fused[#loc10, #loc11])
#loc160 = loc(fused[#loc13, #loc12])
#loc161 = loc(fused[#loc14, #loc15])
#loc162 = loc(fused[#loc22, #loc23])
#loc163 = loc(fused[#loc24, #loc25])
#loc164 = loc(fused[#loc30, #loc31])
#loc165 = loc(fused[#loc35, #loc32])
#loc166 = loc(fused[#loc41, #loc42])
#loc167 = loc(fused[#loc43, #loc44])
#loc168 = loc(fused[#loc45, #loc46])
#loc169 = loc(fused[#loc47, #loc48])
#loc170 = loc(fused[#loc49, #loc50])
#loc171 = loc(fused[#loc55, #loc56])
#loc174 = loc(fused[#loc66, #loc67])
#loc175 = loc(fused[#loc70, #loc71])
#loc176 = loc(fused[#loc74, #loc73])
#loc177 = loc(fused[#loc75, #loc76])
#loc178 = loc(fused[#loc77, #loc78])
#loc179 = loc(fused[#loc79, #loc80])
#loc180 = loc(fused[#loc82, #loc81])
#loc181 = loc(fused[#loc83, #loc84])
#loc182 = loc(fused[#loc92, #loc91])
#loc183 = loc(fused[#loc96, #loc97])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc104, #loc105])
#loc186 = loc(fused[#loc109, #loc106])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc117, #loc118])
#loc189 = loc(fused[#loc119, #loc120])
#loc190 = loc(fused[#loc122, #loc121])
#loc191 = loc(fused[#loc123, #loc124])
#loc192 = loc(fused[#loc128, #loc127])
#loc193 = loc(fused[#loc136, #loc137])
#loc194 = loc(fused[#loc138, #loc139])
#loc195 = loc(fused[#loc144, #loc145])
#loc196 = loc(fused[#loc149, #loc146])
