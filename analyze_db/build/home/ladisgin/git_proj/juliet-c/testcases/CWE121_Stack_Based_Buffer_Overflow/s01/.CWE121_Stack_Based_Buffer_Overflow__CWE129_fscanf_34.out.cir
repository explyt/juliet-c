!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":147:10)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":147:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":147:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":147:32)
#true = #cir.bool<true> : !cir.bool
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType" {!s32i, !s32i}>
#loc224 = loc(fused[#loc76, #loc77])
#loc225 = loc(fused[#loc78, #loc79])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc195)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc197)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc201)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc18)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc20)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.scope {
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc205)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc29)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      cir.store %14, %12 : !s32i, !cir.ptr<!s32i> loc(#loc205)
      cir.scope {
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc207)
        %16 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc208)
        %17 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc208)
        cir.store %17, %16 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc208)
        cir.scope {
          %18 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc38)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc39)
          %20 = cir.cmp(ge, %18, %19) : !s32i, !cir.bool loc(#loc210)
          cir.if %20 {
            %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %22 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %23 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
            %24 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc212)
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc48)
              cir.store %25, %15 : !s32i, !cir.ptr<!s32i> loc(#loc214)
              cir.for : cond {
                %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                %27 = cir.const #cir.int<10> : !s32i loc(#loc51)
                %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc215)
                cir.condition(%28) loc(#loc52)
              } body {
                cir.scope {
                  %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                  %27 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc55)
                  %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc55)
                  %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                  cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc56)
                } loc(#loc216)
                cir.yield loc(#loc47)
              } step {
                %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc58)
                cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc217)
                cir.yield loc(#loc213)
              } loc(#loc213)
            } loc(#loc213)
          } else {
            %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          } loc(#loc211)
        } loc(#loc209)
      } loc(#loc206)
    } loc(#loc204)
    cir.return loc(#loc12)
  } loc(#loc199)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc218)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc221)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc83)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.return %17 : !s32i loc(#loc228)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc231)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc101)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc103)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc236)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc29)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc236)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc238)
        %11 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc239)
        %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc239)
        cir.store %12, %11 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc239)
        cir.scope {
          %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc120)
          %15 = cir.cmp(ge, %13, %14) : !s32i, !cir.bool loc(#loc241)
          cir.if %15 {
            %16 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %18 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc126)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc126)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc243)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc129)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc245)
              cir.for : cond {
                %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %22 = cir.const #cir.int<10> : !s32i loc(#loc132)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc246)
                cir.condition(%23) loc(#loc133)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc135)
                  %22 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc136)
                  %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                  cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc137)
                } loc(#loc247)
                cir.yield loc(#loc128)
              } step {
                %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc138)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc139)
                cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc248)
                cir.yield loc(#loc244)
              } loc(#loc244)
            } loc(#loc244)
          } else {
            %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc140)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc140)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc141)
          } loc(#loc242)
        } loc(#loc240)
      } loc(#loc237)
    } loc(#loc235)
    cir.return loc(#loc95)
  } loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc142)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc251)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc150)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc152)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc153)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc154)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc154)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc152)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.scope {
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc255)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc29)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      cir.store %14, %12 : !s32i, !cir.ptr<!s32i> loc(#loc255)
      cir.scope {
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc257)
        %16 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc258)
        %17 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc258)
        cir.store %17, %16 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc258)
        cir.scope {
          %18 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc169)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc170)
          %20 = cir.cmp(ge, %18, %19) : !s32i, !cir.bool loc(#loc260)
          %21 = cir.ternary(%20, true {
            %22 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %23 = cir.const #cir.int<10> : !s32i loc(#loc173)
            %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc261)
            %25 = cir.ternary(%24, true {
              %26 = cir.const #true loc(#loc171)
              cir.yield %26 : !cir.bool loc(#loc171)
            }, false {
              %26 = cir.const #false loc(#loc171)
              cir.yield %26 : !cir.bool loc(#loc171)
            }) : (!cir.bool) -> !cir.bool loc(#loc171)
            cir.yield %25 : !cir.bool loc(#loc171)
          }, false {
            %22 = cir.const #false loc(#loc171)
            cir.yield %22 : !cir.bool loc(#loc171)
          }) : (!cir.bool) -> !cir.bool loc(#loc171)
          cir.if %21 {
            %22 = cir.const #cir.int<1> : !s32i loc(#loc178)
            %23 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc179)
            %24 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc180)
            %25 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc180)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc263)
            cir.scope {
              %26 = cir.const #cir.int<0> : !s32i loc(#loc183)
              cir.store %26, %15 : !s32i, !cir.ptr<!s32i> loc(#loc265)
              cir.for : cond {
                %27 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                %28 = cir.const #cir.int<10> : !s32i loc(#loc186)
                %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc266)
                cir.condition(%29) loc(#loc187)
              } body {
                cir.scope {
                  %27 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                  %28 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc190)
                  %29 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc190)
                  %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                  cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc191)
                } loc(#loc267)
                cir.yield loc(#loc182)
              } step {
                %27 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc192)
                %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc193)
                cir.store %28, %15 : !s32i, !cir.ptr<!s32i> loc(#loc268)
                cir.yield loc(#loc264)
              } loc(#loc264)
            } loc(#loc264)
          } else {
            %22 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc142)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc142)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc194)
          } loc(#loc262)
        } loc(#loc259)
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc144)
  } loc(#loc249)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":35:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":55:27)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":59:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":30:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":31:68)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":33:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":33:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":35:12)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":36:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":22:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":36:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":37:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":58:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":38:28)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":23:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":39:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":57:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":40:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":40:17)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":41:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":41:34)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":44:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":56:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":44:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":44:25)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":45:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":52:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":54:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":46:32)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":46:24)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":46:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":51:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:25)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:21)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:28)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:32)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":49:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":50:41)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":50:34)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":50:21)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:37)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":48:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":55:17)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":133:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":137:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":135:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":135:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":136:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":136:13)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":152:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":154:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":157:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":159:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":147:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":162:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":148:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":150:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":150:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":150:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":152:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":153:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":153:63)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":154:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":157:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":158:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":158:62)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":159:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":161:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":161:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":66:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":98:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":68:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":68:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":69:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":69:68)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":71:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":71:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":71:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":74:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":74:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":75:26)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":75:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":76:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":97:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":77:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":77:28)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":78:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":96:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":79:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":79:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":80:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":80:34)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":83:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":95:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":83:17)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":83:25)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":84:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":91:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":93:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":85:32)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":85:24)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":85:17)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":90:17)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:25)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:28)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:32)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:30)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":88:17)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":89:41)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":89:34)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":89:21)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:37)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":87:36)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":94:27)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":94:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":127:27)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":101:1)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":131:1)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":103:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":103:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":104:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":104:68)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":106:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":106:12)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":106:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":108:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":108:12)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":108:19)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":109:26)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":109:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":110:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":130:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":111:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":111:28)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":112:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":129:9)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":113:13)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":113:17)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":114:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":114:34)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":116:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":128:13)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":116:17)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":116:25)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":116:27)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":116:30)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":116:38)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":116:40)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":117:13)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":124:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":126:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":118:32)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":118:24)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":118:17)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:17)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":123:17)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:25)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:21)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:28)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:32)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:30)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":121:17)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":122:41)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":122:34)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":122:21)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:37)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":120:36)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_34.c":127:17)
#loc195 = loc(fused[#loc1, #loc2])
#loc196 = loc(fused[#loc3, #loc4])
#loc197 = loc(fused[#loc6, #loc7])
#loc198 = loc(fused[#loc8, #loc9])
#loc199 = loc(fused[#loc11, #loc12])
#loc200 = loc(fused[#loc13, #loc14])
#loc201 = loc(fused[#loc15, #loc16])
#loc202 = loc(fused[#loc19, #loc17])
#loc203 = loc(fused[#loc24, #loc22])
#loc204 = loc(fused[#loc25, #loc26])
#loc205 = loc(fused[#loc27, #loc28])
#loc206 = loc(fused[#loc30, #loc31])
#loc207 = loc(fused[#loc32, #loc33])
#loc208 = loc(fused[#loc34, #loc35])
#loc209 = loc(fused[#loc36, #loc37])
#loc210 = loc(fused[#loc38, #loc39])
#loc211 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc212 = loc(fused[#loc45, #loc43])
#loc213 = loc(fused[#loc46, #loc47])
#loc214 = loc(fused[#loc49, #loc48])
#loc215 = loc(fused[#loc50, #loc51])
#loc216 = loc(fused[#loc53, #loc47])
#loc217 = loc(fused[#loc58, #loc57])
#loc218 = loc(fused[#loc60, #loc61])
#loc219 = loc(fused[#loc62, #loc63])
#loc220 = loc(fused[#loc64, #loc65])
#loc221 = loc(fused[#loc66, #loc67])
#loc222 = loc(fused[#loc68, #loc69])
#loc223 = loc(fused[#loc74, #loc75])
#loc226 = loc(fused[#loc85, #loc86])
#loc227 = loc(fused[#loc89, #loc90])
#loc228 = loc(fused[#loc93, #loc92])
#loc229 = loc(fused[#loc94, #loc95])
#loc230 = loc(fused[#loc96, #loc97])
#loc231 = loc(fused[#loc98, #loc99])
#loc232 = loc(fused[#loc102, #loc100])
#loc233 = loc(fused[#loc104, #loc103])
#loc234 = loc(fused[#loc106, #loc105])
#loc235 = loc(fused[#loc107, #loc108])
#loc236 = loc(fused[#loc109, #loc110])
#loc237 = loc(fused[#loc111, #loc112])
#loc238 = loc(fused[#loc113, #loc114])
#loc239 = loc(fused[#loc115, #loc116])
#loc240 = loc(fused[#loc117, #loc118])
#loc241 = loc(fused[#loc119, #loc120])
#loc242 = loc(fused[#loc121, #loc122, #loc123, #loc118])
#loc243 = loc(fused[#loc126, #loc124])
#loc244 = loc(fused[#loc127, #loc128])
#loc245 = loc(fused[#loc130, #loc129])
#loc246 = loc(fused[#loc131, #loc132])
#loc247 = loc(fused[#loc134, #loc128])
#loc248 = loc(fused[#loc139, #loc138])
#loc249 = loc(fused[#loc143, #loc144])
#loc250 = loc(fused[#loc145, #loc146])
#loc251 = loc(fused[#loc147, #loc148])
#loc252 = loc(fused[#loc151, #loc149])
#loc253 = loc(fused[#loc156, #loc155])
#loc254 = loc(fused[#loc157, #loc158])
#loc255 = loc(fused[#loc159, #loc160])
#loc256 = loc(fused[#loc161, #loc162])
#loc257 = loc(fused[#loc163, #loc164])
#loc258 = loc(fused[#loc165, #loc166])
#loc259 = loc(fused[#loc167, #loc168])
#loc260 = loc(fused[#loc169, #loc170])
#loc261 = loc(fused[#loc172, #loc174])
#loc262 = loc(fused[#loc175, #loc176, #loc177, #loc168])
#loc263 = loc(fused[#loc180, #loc178])
#loc264 = loc(fused[#loc181, #loc182])
#loc265 = loc(fused[#loc184, #loc183])
#loc266 = loc(fused[#loc185, #loc186])
#loc267 = loc(fused[#loc188, #loc182])
#loc268 = loc(fused[#loc193, #loc192])
