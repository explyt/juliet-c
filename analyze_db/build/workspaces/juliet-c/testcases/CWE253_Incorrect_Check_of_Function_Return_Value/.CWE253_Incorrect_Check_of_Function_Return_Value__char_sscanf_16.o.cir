!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc58)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc60)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %2 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %3 ^bb3, ^bb12 loc(#loc16)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc61)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc62)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc58)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc58)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    cir.br ^bb6 loc(#loc63)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc22)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc22)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc64)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc65)
  ^bb7:  // pred: ^bb6
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc27)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc15)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc15)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc9)
  } loc(#loc57)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc67)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc29)
  } loc(#loc66)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc69)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc70)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %2 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc40)
    cir.brcond %3 ^bb3, ^bb12 loc(#loc40)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc69)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc69)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc46)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc47)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc47)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc48)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc50)
    %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc75)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc76)
  ^bb7:  // pred: ^bb6
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc45)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc54)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc39)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc33)
  } loc(#loc68)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":37:24)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":37:36)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":39:27)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":26:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":44:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":33:13)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":33:36)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":34:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":34:27)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":28:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":43:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":28:11)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":29:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":30:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":41:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":37:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":40:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":37:17)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":37:46)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":37:55)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":38:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":39:17)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":42:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":70:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":73:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":72:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":72:11)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":51:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":68:1)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":58:13)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":58:36)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":59:13)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":59:27)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":53:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":67:5)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":53:11)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":54:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":55:9)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":65:9)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":61:13)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":64:13)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":61:17)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":61:24)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":61:36)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":61:46)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":61:55)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":62:13)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":63:27)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":63:17)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_16.c":66:9)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc5, #loc6])
#loc57 = loc(fused[#loc8, #loc9])
#loc58 = loc(fused[#loc10, #loc11])
#loc59 = loc(fused[#loc12, #loc13])
#loc60 = loc(fused[#loc14, #loc15])
#loc61 = loc(fused[#loc17, #loc15])
#loc62 = loc(fused[#loc18, #loc19])
#loc63 = loc(fused[#loc20, #loc21])
#loc64 = loc(fused[#loc22, #loc24])
#loc65 = loc(fused[#loc25, #loc21])
#loc66 = loc(fused[#loc28, #loc29])
#loc67 = loc(fused[#loc30, #loc31])
#loc68 = loc(fused[#loc32, #loc33])
#loc69 = loc(fused[#loc34, #loc35])
#loc70 = loc(fused[#loc36, #loc37])
#loc71 = loc(fused[#loc38, #loc39])
#loc72 = loc(fused[#loc41, #loc39])
#loc73 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc44, #loc45])
#loc75 = loc(fused[#loc46, #loc50])
#loc76 = loc(fused[#loc51, #loc45])
