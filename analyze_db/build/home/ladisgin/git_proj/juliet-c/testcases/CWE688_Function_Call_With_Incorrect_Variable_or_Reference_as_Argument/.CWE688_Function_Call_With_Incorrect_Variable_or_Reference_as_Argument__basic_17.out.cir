!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc45 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":71:10)
#loc46 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":71:14)
#loc47 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":71:20)
#loc48 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":71:32)
#loc106 = loc(fused[#loc45, #loc46])
#loc107 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc92)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc95)
        cir.condition(%4) loc(#loc16)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc98)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc99)
            %4 = cir.const #cir.int<5> : !s32i loc(#loc23)
            cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc99)
            %5 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
            %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
            %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc26)
            %10 = cir.call @sprintf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc24)
            %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc28)
          } loc(#loc97)
        } loc(#loc96)
        cir.yield loc(#loc11)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc30)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
        cir.yield loc(#loc93)
      } loc(#loc93)
    } loc(#loc93)
    cir.return loc(#loc7)
  } loc(#loc91)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc102)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc101)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc103)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc52)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.return %17 : !s32i loc(#loc110)
  } loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc112)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc70)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc115)
        cir.condition(%4) loc(#loc74)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc118)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc119)
            %4 = cir.const #cir.int<5> : !s32i loc(#loc81)
            cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc119)
            %5 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc82)
            %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
            %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc63)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc63)
            %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %10 = cir.call @sprintf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
            %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc86)
          } loc(#loc117)
        } loc(#loc116)
        cir.yield loc(#loc69)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc88)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
        cir.yield loc(#loc113)
      } loc(#loc113)
    } loc(#loc113)
    cir.return loc(#loc65)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":365:1)
#loc2 = loc("/usr/include/stdio.h":366:45)
#loc3 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":31:27)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":22:1)
#loc7 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":35:1)
#loc8 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":24:5)
#loc9 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":24:9)
#loc10 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:5)
#loc11 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":34:5)
#loc12 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:13)
#loc13 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:9)
#loc14 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:16)
#loc15 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:20)
#loc16 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:18)
#loc17 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":26:5)
#loc18 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":27:9)
#loc19 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":33:9)
#loc20 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":28:13)
#loc21 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":28:32)
#loc22 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":29:13)
#loc23 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":29:27)
#loc24 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":31:13)
#loc25 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":31:21)
#loc26 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":31:33)
#loc27 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":32:23)
#loc28 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":32:13)
#loc29 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:24)
#loc30 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":25:23)
#loc31 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":57:1)
#loc32 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":60:1)
#loc33 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":59:5)
#loc34 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":59:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":76:15)
#loc40 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":78:15)
#loc41 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":81:15)
#loc42 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":83:15)
#loc43 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":71:1)
#loc44 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":86:1)
#loc49 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":72:1)
#loc50 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":74:27)
#loc51 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":74:22)
#loc52 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":74:5)
#loc53 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":76:5)
#loc54 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":77:5)
#loc55 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":77:90)
#loc56 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":78:5)
#loc57 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":81:5)
#loc58 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":82:5)
#loc59 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":82:89)
#loc60 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":83:5)
#loc61 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":85:12)
#loc62 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":85:5)
#loc63 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":51:27)
#loc64 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":42:1)
#loc65 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":55:1)
#loc66 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":44:5)
#loc67 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":44:9)
#loc68 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:5)
#loc69 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":54:5)
#loc70 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:13)
#loc71 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:9)
#loc72 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:16)
#loc73 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:20)
#loc74 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:18)
#loc75 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":46:5)
#loc76 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":47:9)
#loc77 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":53:9)
#loc78 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":48:13)
#loc79 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":48:32)
#loc80 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":49:13)
#loc81 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":49:27)
#loc82 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":51:13)
#loc83 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":51:21)
#loc84 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":51:33)
#loc85 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":52:23)
#loc86 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":52:13)
#loc87 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:24)
#loc88 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_17.c":45:23)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc4, #loc5])
#loc91 = loc(fused[#loc6, #loc7])
#loc92 = loc(fused[#loc8, #loc9])
#loc93 = loc(fused[#loc10, #loc11])
#loc94 = loc(fused[#loc13, #loc12])
#loc95 = loc(fused[#loc14, #loc15])
#loc96 = loc(fused[#loc17, #loc11])
#loc97 = loc(fused[#loc18, #loc19])
#loc98 = loc(fused[#loc20, #loc21])
#loc99 = loc(fused[#loc22, #loc23])
#loc100 = loc(fused[#loc30, #loc29])
#loc101 = loc(fused[#loc31, #loc32])
#loc102 = loc(fused[#loc33, #loc34])
#loc103 = loc(fused[#loc35, #loc36])
#loc104 = loc(fused[#loc37, #loc38])
#loc105 = loc(fused[#loc43, #loc44])
#loc108 = loc(fused[#loc54, #loc55])
#loc109 = loc(fused[#loc58, #loc59])
#loc110 = loc(fused[#loc62, #loc61])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc66, #loc67])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc71, #loc70])
#loc115 = loc(fused[#loc72, #loc73])
#loc116 = loc(fused[#loc75, #loc69])
#loc117 = loc(fused[#loc76, #loc77])
#loc118 = loc(fused[#loc78, #loc79])
#loc119 = loc(fused[#loc80, #loc81])
#loc120 = loc(fused[#loc88, #loc87])
