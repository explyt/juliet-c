!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":196:10)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":196:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":196:20)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":196:32)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:23)
#true = #cir.bool<true> : !cir.bool
#loc353 = loc(fused[#loc58, #loc59])
#loc354 = loc(fused[#loc60, #loc61])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc331)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc332)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc333)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc335)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc337)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc19)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb1 loc(#loc340)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc337)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc337)
    cir.br ^bb2 loc(#loc341)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc26)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc26)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc26)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc26)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc26)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc26)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc26)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc342)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc343)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb5 loc(#loc31)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %25 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_badData : !cir.ptr<!s32i> loc(#loc335)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    %26 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc346)
    cir.call %26() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc336)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc348)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc347)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc350)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc351)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc354)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc355)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc356)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    cir.return %17 : !s32i loc(#loc357)
  } loc(#loc352)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc358)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc359)
  cir.func private @printIntLine(!s32i) loc(#loc360)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc82)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc361)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc363)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc364)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc365)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_badData : !cir.ptr<!s32i> loc(#loc335)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb1 loc(#loc366)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc95)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc96)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc96)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc367)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc368)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc369)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc364)
    cir.br ^bb2 loc(#loc370)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc102)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc371)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc372)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc106)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc373)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb7 loc(#loc373)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc112)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc375)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc113)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc376)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc118)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb10 loc(#loc108)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc120)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb7 loc(#loc373)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc108)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc379)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc380)
    cir.brcond %31 ^bb15, ^bb24 loc(#loc381)
  ^bb15:  // pred: ^bb14
    %32 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc131)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.br ^bb16 loc(#loc383)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    cir.br ^bb17 loc(#loc383)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %38 = cir.const #cir.int<10> : !s32i loc(#loc137)
    %39 = cir.cmp(lt, %37, %38) : !s32i, !cir.bool loc(#loc385)
    cir.brcond %39 ^bb18, ^bb22 loc(#loc138)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc386)
  ^bb19:  // pred: ^bb18
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc142)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc143)
    cir.br ^bb20 loc(#loc133)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc133)
  ^bb21:  // pred: ^bb20
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %45 = cir.unary(inc, %44) : !s32i, !s32i loc(#loc145)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.br ^bb17 loc(#loc383)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc133)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc126)
  ^bb24:  // pred: ^bb14
    %46 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc82)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.br ^bb25 loc(#loc122)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc122)
  ^bb26:  // pred: ^bb25
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc147)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
    cir.br ^bb27 loc(#loc94)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc86)
  } loc(#loc362)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc388)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc390)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc158)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc388)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc394)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    cir.return loc(#loc152)
  } loc(#loc389)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc397)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc398)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc388)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb1 loc(#loc399)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc174)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc175)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc175)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc400)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc401)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc402)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc397)
    cir.br ^bb2 loc(#loc403)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc181)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc181)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc404)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc405)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc183)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc185)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc183)
    cir.br ^bb4 loc(#loc179)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc179)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc406)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc407)
    cir.br ^bb7 loc(#loc406)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc191)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc192)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc409)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc195)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc197)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb10 loc(#loc187)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc187)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc199)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb7 loc(#loc406)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc187)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc412)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %31 ^bb15, ^bb24 loc(#loc414)
  ^bb15:  // pred: ^bb14
    %32 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc208)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc210)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    cir.br ^bb16 loc(#loc416)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc213)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb17 loc(#loc416)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %38 = cir.const #cir.int<10> : !s32i loc(#loc216)
    %39 = cir.cmp(lt, %37, %38) : !s32i, !cir.bool loc(#loc418)
    cir.brcond %39 ^bb18, ^bb22 loc(#loc217)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc419)
  ^bb19:  // pred: ^bb18
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc219)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc221)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc222)
    cir.br ^bb20 loc(#loc212)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc212)
  ^bb21:  // pred: ^bb20
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %45 = cir.unary(inc, %44) : !s32i, !s32i loc(#loc224)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    cir.br ^bb17 loc(#loc416)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc212)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc205)
  ^bb24:  // pred: ^bb14
    %46 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc225)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc225)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    cir.br ^bb25 loc(#loc201)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc201)
  ^bb26:  // pred: ^bb25
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc227)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc228)
    cir.br ^bb27 loc(#loc173)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc165)
  } loc(#loc395)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc421)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc423)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc424)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc238)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.br ^bb1 loc(#loc426)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc423)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc423)
    cir.br ^bb2 loc(#loc427)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc244)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc245)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc245)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc245)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc245)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc245)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc245)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc245)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc245)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc246)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc247)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc248)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc248)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc428)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc429)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc252)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc253)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.br ^bb5 loc(#loc250)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc256)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc256)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc257)
    cir.br ^bb5 loc(#loc243)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc243)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc241)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %25 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_goodB2GData : !cir.ptr<!s32i> loc(#loc421)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    %26 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc432)
    cir.call %26() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc260)
    cir.return loc(#loc232)
  } loc(#loc422)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc262)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc435)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc436)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45_goodB2GData : !cir.ptr<!s32i> loc(#loc421)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.br ^bb1 loc(#loc437)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc273)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc274)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc274)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc438)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc439)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc273)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc440)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc435)
    cir.br ^bb2 loc(#loc441)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc279)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc280)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc280)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc442)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc443)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc282)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc283)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc284)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc282)
    cir.br ^bb4 loc(#loc278)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc278)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc444)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc287)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.br ^bb7 loc(#loc444)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc290)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc446)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc291)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc447)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc293)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc294)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc296)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc448)
    cir.br ^bb10 loc(#loc286)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc286)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc298)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.br ^bb7 loc(#loc444)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc286)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc450)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc302)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc451)
    cir.brcond %31 ^bb15, ^bb20 loc(#loc303)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc305)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc452)
    cir.brcond %34 ^bb16, ^bb17 loc(#loc303)
  ^bb16:  // pred: ^bb15
    %35 = cir.const #true loc(#loc303)
    cir.br ^bb18(%35 : !cir.bool) loc(#loc303)
  ^bb17:  // pred: ^bb15
    %36 = cir.const #false loc(#loc303)
    cir.br ^bb18(%36 : !cir.bool) loc(#loc303)
  ^bb18(%37: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc303)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%37 : !cir.bool) loc(#loc303)
  ^bb20:  // pred: ^bb14
    %38 = cir.const #false loc(#loc303)
    cir.br ^bb21(%38 : !cir.bool) loc(#loc303)
  ^bb21(%39: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc303)
  ^bb22:  // pred: ^bb21
    cir.brcond %39 ^bb23, ^bb32 loc(#loc453)
  ^bb23:  // pred: ^bb22
    %40 = cir.const #cir.int<1> : !s32i loc(#loc310)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc311)
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc313)
    cir.store %40, %43 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    cir.br ^bb24 loc(#loc455)
  ^bb24:  // pred: ^bb23
    %44 = cir.const #cir.int<0> : !s32i loc(#loc316)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    cir.br ^bb25 loc(#loc455)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc319)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc457)
    cir.brcond %47 ^bb26, ^bb30 loc(#loc320)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc458)
  ^bb27:  // pred: ^bb26
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc322)
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!s32i>, %49 : !s32i), !cir.ptr<!s32i> loc(#loc324)
    %51 = cir.load %50 : !cir.ptr<!s32i>, !s32i loc(#loc322)
    cir.call @printIntLine(%51) : (!s32i) -> () loc(#loc325)
    cir.br ^bb28 loc(#loc315)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc315)
  ^bb29:  // pred: ^bb28
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %53 = cir.unary(inc, %52) : !s32i, !s32i loc(#loc327)
    cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc459)
    cir.br ^bb25 loc(#loc455)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc315)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc308)
  ^bb32:  // pred: ^bb22
    %54 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc262)
    %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc328)
    cir.br ^bb33 loc(#loc300)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc300)
  ^bb34:  // pred: ^bb33
    %56 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc329)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc329)
    cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc330)
    cir.br ^bb35 loc(#loc272)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc264)
  } loc(#loc433)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":74:23)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":22:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":22:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":59:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":79:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":65:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":65:45)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":61:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":61:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":63:13)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":63:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":63:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":64:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":76:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":67:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":75:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":67:19)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":67:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":67:49)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":67:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":67:59)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":68:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":71:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":73:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":70:25)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":70:20)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":70:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":70:36)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":74:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":77:68)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":77:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":78:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":78:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":182:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":186:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":184:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":184:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":185:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":185:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":201:15)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":203:15)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":206:15)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":208:15)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":196:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":211:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":197:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":199:27)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":199:22)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":199:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":201:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":202:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":202:63)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":203:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":206:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":207:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":207:62)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":208:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":210:12)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":210:5)
#loc76 = loc("/usr/include/stdlib.h":672:1)
#loc77 = loc("/usr/include/stdlib.h":672:45)
#loc78 = loc("/usr/include/stdlib.h":756:1)
#loc79 = loc("/usr/include/stdlib.h":756:70)
#loc80 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc81 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":53:23)
#loc83 = loc("/usr/include/stdlib.h":687:1)
#loc84 = loc("/usr/include/stdlib.h":687:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":28:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":57:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":32:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":32:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":33:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":33:54)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":30:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":30:16)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":31:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":56:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":33:31)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":33:38)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":33:43)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":33:53)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:39)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:23)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:29)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:30)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:36)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":34:35)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":39:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:18)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:21)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:25)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:23)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":37:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":38:25)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":38:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":38:20)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":38:21)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:30)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":36:29)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":42:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":54:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":42:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":42:21)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":43:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":50:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":52:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":44:28)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":44:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":44:20)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":44:24)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":49:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:21)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:17)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:24)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:28)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:26)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":47:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":48:30)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":48:37)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":48:38)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":48:17)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:33)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":46:32)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":53:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":55:14)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":55:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":23:1)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":23:12)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":117:1)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":127:1)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":119:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":119:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":121:13)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":121:12)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":121:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":124:12)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":124:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":125:72)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":125:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":126:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":126:17)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":86:1)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":115:1)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":90:9)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":90:13)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":91:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":91:54)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":88:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":88:16)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":89:5)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":114:5)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":91:31)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":91:38)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":91:43)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":91:53)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:9)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:39)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:23)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:29)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:30)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:36)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":92:35)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":97:9)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:18)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:14)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:21)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:25)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:23)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":95:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":96:25)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":96:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":96:20)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":96:21)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:30)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":94:29)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":100:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":112:9)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":100:13)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":100:21)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":101:9)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":108:9)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":110:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":102:28)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":102:13)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":102:20)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":102:24)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:13)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":107:13)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:21)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:17)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:24)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:28)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:26)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":105:13)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":106:30)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":106:37)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":106:38)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":106:17)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:33)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":104:32)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":111:23)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":111:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":113:14)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":113:9)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":24:1)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":24:12)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":160:1)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":180:1)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":166:9)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":166:45)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":162:5)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":162:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":164:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":164:12)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":164:5)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":165:5)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":177:5)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":168:9)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":176:9)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":168:19)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":168:32)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":168:49)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":168:13)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":168:59)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":169:9)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":172:9)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":174:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":171:25)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":171:20)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":171:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":171:36)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":175:23)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":175:13)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":178:72)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":178:5)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":179:5)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":179:17)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":154:23)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":130:1)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":158:1)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":134:9)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":134:13)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":135:9)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":135:54)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":132:5)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":132:16)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":133:5)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":157:5)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":135:31)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":135:38)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":135:43)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":135:53)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:9)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:39)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:23)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:29)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:30)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:36)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":136:35)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:9)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":141:9)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:18)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:14)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:21)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:25)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:23)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":139:9)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":140:25)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":140:13)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":140:20)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":140:21)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:30)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":138:29)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:9)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":155:9)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:13)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:21)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:26)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:34)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":143:36)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":144:9)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":151:9)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":153:9)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":145:28)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":145:13)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":145:20)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":145:24)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:13)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":150:13)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:21)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:17)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:24)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:28)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:26)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":148:13)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":149:30)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":149:37)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":149:38)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":149:17)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:33)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":147:32)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":154:13)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":156:14)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_45.c":156:9)
#loc331 = loc(fused[#loc1, #loc2])
#loc332 = loc(fused[#loc3, #loc4])
#loc333 = loc(fused[#loc5, #loc6])
#loc334 = loc(fused[#loc7, #loc8])
#loc335 = loc(fused[#loc10, #loc11])
#loc336 = loc(fused[#loc12, #loc13])
#loc337 = loc(fused[#loc14, #loc15])
#loc338 = loc(fused[#loc16, #loc17])
#loc339 = loc(fused[#loc20, #loc18])
#loc340 = loc(fused[#loc21, #loc22])
#loc341 = loc(fused[#loc23, #loc24])
#loc342 = loc(fused[#loc28, #loc29])
#loc343 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc344 = loc(fused[#loc35, #loc36])
#loc345 = loc(fused[#loc39, #loc38])
#loc346 = loc(fused[#loc40, #loc41])
#loc347 = loc(fused[#loc42, #loc43])
#loc348 = loc(fused[#loc44, #loc45])
#loc349 = loc(fused[#loc46, #loc47])
#loc350 = loc(fused[#loc48, #loc49])
#loc351 = loc(fused[#loc50, #loc51])
#loc352 = loc(fused[#loc56, #loc57])
#loc355 = loc(fused[#loc67, #loc68])
#loc356 = loc(fused[#loc71, #loc72])
#loc357 = loc(fused[#loc75, #loc74])
#loc358 = loc(fused[#loc76, #loc77])
#loc359 = loc(fused[#loc78, #loc79])
#loc360 = loc(fused[#loc80, #loc81])
#loc361 = loc(fused[#loc83, #loc84])
#loc362 = loc(fused[#loc85, #loc86])
#loc363 = loc(fused[#loc87, #loc88])
#loc364 = loc(fused[#loc89, #loc90])
#loc365 = loc(fused[#loc91, #loc92])
#loc366 = loc(fused[#loc93, #loc94])
#loc367 = loc(fused[#loc97, #loc98])
#loc368 = loc(fused[#loc96, #loc98])
#loc369 = loc(fused[#loc95, #loc90])
#loc370 = loc(fused[#loc99, #loc100])
#loc371 = loc(fused[#loc101, #loc102])
#loc372 = loc(fused[#loc103, #loc100])
#loc373 = loc(fused[#loc107, #loc108])
#loc374 = loc(fused[#loc110, #loc109])
#loc375 = loc(fused[#loc111, #loc112])
#loc376 = loc(fused[#loc114, #loc108])
#loc377 = loc(fused[#loc116, #loc115])
#loc378 = loc(fused[#loc120, #loc119])
#loc379 = loc(fused[#loc121, #loc122])
#loc380 = loc(fused[#loc123, #loc124])
#loc381 = loc(fused[#loc125, #loc126, #loc127, #loc122])
#loc382 = loc(fused[#loc129, #loc128])
#loc383 = loc(fused[#loc132, #loc133])
#loc384 = loc(fused[#loc135, #loc134])
#loc385 = loc(fused[#loc136, #loc137])
#loc386 = loc(fused[#loc139, #loc133])
#loc387 = loc(fused[#loc145, #loc144])
#loc388 = loc(fused[#loc149, #loc150])
#loc389 = loc(fused[#loc151, #loc152])
#loc390 = loc(fused[#loc153, #loc154])
#loc391 = loc(fused[#loc157, #loc155])
#loc392 = loc(fused[#loc159, #loc158])
#loc393 = loc(fused[#loc161, #loc160])
#loc394 = loc(fused[#loc162, #loc163])
#loc395 = loc(fused[#loc164, #loc165])
#loc396 = loc(fused[#loc166, #loc167])
#loc397 = loc(fused[#loc168, #loc169])
#loc398 = loc(fused[#loc170, #loc171])
#loc399 = loc(fused[#loc172, #loc173])
#loc400 = loc(fused[#loc176, #loc177])
#loc401 = loc(fused[#loc175, #loc177])
#loc402 = loc(fused[#loc174, #loc169])
#loc403 = loc(fused[#loc178, #loc179])
#loc404 = loc(fused[#loc180, #loc181])
#loc405 = loc(fused[#loc182, #loc179])
#loc406 = loc(fused[#loc186, #loc187])
#loc407 = loc(fused[#loc189, #loc188])
#loc408 = loc(fused[#loc190, #loc191])
#loc409 = loc(fused[#loc193, #loc187])
#loc410 = loc(fused[#loc195, #loc194])
#loc411 = loc(fused[#loc199, #loc198])
#loc412 = loc(fused[#loc200, #loc201])
#loc413 = loc(fused[#loc202, #loc203])
#loc414 = loc(fused[#loc204, #loc205, #loc206, #loc201])
#loc415 = loc(fused[#loc208, #loc207])
#loc416 = loc(fused[#loc211, #loc212])
#loc417 = loc(fused[#loc214, #loc213])
#loc418 = loc(fused[#loc215, #loc216])
#loc419 = loc(fused[#loc218, #loc212])
#loc420 = loc(fused[#loc224, #loc223])
#loc421 = loc(fused[#loc229, #loc230])
#loc422 = loc(fused[#loc231, #loc232])
#loc423 = loc(fused[#loc233, #loc234])
#loc424 = loc(fused[#loc235, #loc236])
#loc425 = loc(fused[#loc239, #loc237])
#loc426 = loc(fused[#loc240, #loc241])
#loc427 = loc(fused[#loc242, #loc243])
#loc428 = loc(fused[#loc247, #loc248])
#loc429 = loc(fused[#loc249, #loc250, #loc251, #loc243])
#loc430 = loc(fused[#loc254, #loc255])
#loc431 = loc(fused[#loc259, #loc258])
#loc432 = loc(fused[#loc260, #loc261])
#loc433 = loc(fused[#loc263, #loc264])
#loc434 = loc(fused[#loc265, #loc266])
#loc435 = loc(fused[#loc267, #loc268])
#loc436 = loc(fused[#loc269, #loc270])
#loc437 = loc(fused[#loc271, #loc272])
#loc438 = loc(fused[#loc275, #loc276])
#loc439 = loc(fused[#loc274, #loc276])
#loc440 = loc(fused[#loc273, #loc268])
#loc441 = loc(fused[#loc277, #loc278])
#loc442 = loc(fused[#loc279, #loc280])
#loc443 = loc(fused[#loc281, #loc278])
#loc444 = loc(fused[#loc285, #loc286])
#loc445 = loc(fused[#loc288, #loc287])
#loc446 = loc(fused[#loc289, #loc290])
#loc447 = loc(fused[#loc292, #loc286])
#loc448 = loc(fused[#loc294, #loc293])
#loc449 = loc(fused[#loc298, #loc297])
#loc450 = loc(fused[#loc299, #loc300])
#loc451 = loc(fused[#loc301, #loc302])
#loc452 = loc(fused[#loc304, #loc306])
#loc453 = loc(fused[#loc307, #loc308, #loc309, #loc300])
#loc454 = loc(fused[#loc311, #loc310])
#loc455 = loc(fused[#loc314, #loc315])
#loc456 = loc(fused[#loc317, #loc316])
#loc457 = loc(fused[#loc318, #loc319])
#loc458 = loc(fused[#loc321, #loc315])
#loc459 = loc(fused[#loc327, #loc326])
