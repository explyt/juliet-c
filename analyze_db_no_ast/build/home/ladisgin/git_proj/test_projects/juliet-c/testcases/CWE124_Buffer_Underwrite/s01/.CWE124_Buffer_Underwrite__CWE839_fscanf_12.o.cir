!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc302)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc303)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc304)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printIntLine(!s32i) loc(#loc305)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc306)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fscanf_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc308)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc311)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc311)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc28)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc304)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc28)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc30)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
      } loc(#loc312)
    } loc(#loc310)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc315)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc315)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc34)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc34)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc318)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc319)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc319)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc319)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc48)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc321)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc49)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc55)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc55)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc323)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc58)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc325)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc60)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc61)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc326)
                  %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc62)
                  cir.condition(%22) loc(#loc62)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc65)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc65)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc65)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc66)
                  } loc(#loc327)
                  cir.yield loc(#loc57)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc68)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc328)
                  cir.yield loc(#loc324)
                } loc(#loc324)
              } loc(#loc324)
            } else {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
            } loc(#loc322)
          } loc(#loc320)
        } loc(#loc317)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc330)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc331)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc331)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc331)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc79)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc333)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc80)
            %14 = cir.ternary(%13, true {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc83)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc334)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc85)
              %19 = cir.ternary(%18, true {
                %20 = cir.const #true loc(#loc81)
                cir.yield %20 : !cir.bool loc(#loc81)
              }, false {
                %20 = cir.const #false loc(#loc81)
                cir.yield %20 : !cir.bool loc(#loc81)
              }) : (!cir.bool) -> !cir.bool loc(#loc81)
              cir.yield %19 : !cir.bool loc(#loc81)
            }, false {
              %15 = cir.const #false loc(#loc81)
              cir.yield %15 : !cir.bool loc(#loc81)
            }) : (!cir.bool) -> !cir.bool loc(#loc81)
            cir.if %14 {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %17 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc91)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc91)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc336)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc94)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc338)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                  %21 = cir.const #cir.int<10> : !s32i loc(#loc97)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !s32i loc(#loc339)
                  %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc98)
                  cir.condition(%23) loc(#loc98)
                } body {
                  cir.scope {
                    %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc101)
                    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc101)
                    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc102)
                  } loc(#loc340)
                  cir.yield loc(#loc93)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc104)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc341)
                  cir.yield loc(#loc337)
                } loc(#loc337)
              } loc(#loc337)
            } else {
              %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc13)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc105)
            } loc(#loc335)
          } loc(#loc332)
        } loc(#loc329)
      } loc(#loc316)
    } loc(#loc314)
    cir.return loc(#loc15)
  } loc(#loc307)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fscanf_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc343)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc108)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc344)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc110)
    cir.return loc(#loc107)
  } loc(#loc342)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc346)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc117)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc349)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc349)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc121)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc121)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc126)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc304)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc128)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc128)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc126)
      } else {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc129)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc304)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc131)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc131)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc129)
      } loc(#loc350)
    } loc(#loc348)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc352)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc352)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc134)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc134)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc355)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc356)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc356)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc356)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc148)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc358)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc149)
            %14 = cir.ternary(%13, true {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc152)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc359)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc154)
              %19 = cir.ternary(%18, true {
                %20 = cir.const #true loc(#loc150)
                cir.yield %20 : !cir.bool loc(#loc150)
              }, false {
                %20 = cir.const #false loc(#loc150)
                cir.yield %20 : !cir.bool loc(#loc150)
              }) : (!cir.bool) -> !cir.bool loc(#loc150)
              cir.yield %19 : !cir.bool loc(#loc150)
            }, false {
              %15 = cir.const #false loc(#loc150)
              cir.yield %15 : !cir.bool loc(#loc150)
            }) : (!cir.bool) -> !cir.bool loc(#loc150)
            cir.if %14 {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc158)
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
              %17 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc160)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc160)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc361)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc163)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc363)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                  %21 = cir.const #cir.int<10> : !s32i loc(#loc166)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !s32i loc(#loc364)
                  %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc167)
                  cir.condition(%23) loc(#loc167)
                } body {
                  cir.scope {
                    %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc169)
                    %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc170)
                    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc170)
                    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc171)
                  } loc(#loc365)
                  cir.yield loc(#loc162)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc172)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc173)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc366)
                  cir.yield loc(#loc362)
                } loc(#loc362)
              } loc(#loc362)
            } else {
              %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc174)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc174)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc175)
            } loc(#loc360)
          } loc(#loc357)
        } loc(#loc354)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc368)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc369)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc369)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc369)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc185)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc371)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc186)
            %14 = cir.ternary(%13, true {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc189)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc372)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc191)
              %19 = cir.ternary(%18, true {
                %20 = cir.const #true loc(#loc187)
                cir.yield %20 : !cir.bool loc(#loc187)
              }, false {
                %20 = cir.const #false loc(#loc187)
                cir.yield %20 : !cir.bool loc(#loc187)
              }) : (!cir.bool) -> !cir.bool loc(#loc187)
              cir.yield %19 : !cir.bool loc(#loc187)
            }, false {
              %15 = cir.const #false loc(#loc187)
              cir.yield %15 : !cir.bool loc(#loc187)
            }) : (!cir.bool) -> !cir.bool loc(#loc187)
            cir.if %14 {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc195)
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %17 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc197)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc197)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc374)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc200)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc376)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc202)
                  %21 = cir.const #cir.int<10> : !s32i loc(#loc203)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !s32i loc(#loc377)
                  %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc204)
                  cir.condition(%23) loc(#loc204)
                } body {
                  cir.scope {
                    %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc206)
                    %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc207)
                    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc207)
                    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc208)
                  } loc(#loc378)
                  cir.yield loc(#loc199)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc210)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc379)
                  cir.yield loc(#loc375)
                } loc(#loc375)
              } loc(#loc375)
            } else {
              %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc211)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc211)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc212)
            } loc(#loc373)
          } loc(#loc370)
        } loc(#loc367)
      } loc(#loc353)
    } loc(#loc351)
    cir.return loc(#loc113)
  } loc(#loc345)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc381)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc218)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc384)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc384)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc222)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc222)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc227)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc229)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc387)
      } loc(#loc385)
    } loc(#loc383)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc389)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc389)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc233)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc233)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc392)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc393)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc393)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc393)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc247)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc395)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc248)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc252)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc253)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc254)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc254)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc397)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc257)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc399)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc260)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc400)
                  %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc261)
                  cir.condition(%22) loc(#loc261)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc264)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc264)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc265)
                  } loc(#loc401)
                  cir.yield loc(#loc256)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc267)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc402)
                  cir.yield loc(#loc398)
                } loc(#loc398)
              } loc(#loc398)
            } else {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc268)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc268)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc269)
            } loc(#loc396)
          } loc(#loc394)
        } loc(#loc391)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc404)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc405)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc405)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc405)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc279)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc407)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc280)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc284)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc286)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc286)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc409)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc289)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc411)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc292)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc412)
                  %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc293)
                  cir.condition(%22) loc(#loc293)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc296)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc296)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc296)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc297)
                  } loc(#loc413)
                  cir.yield loc(#loc288)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc298)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc299)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc414)
                  cir.yield loc(#loc410)
                } loc(#loc410)
              } loc(#loc410)
            } else {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc300)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc300)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc301)
            } loc(#loc408)
          } loc(#loc406)
        } loc(#loc403)
      } loc(#loc390)
    } loc(#loc388)
    cir.return loc(#loc214)
  } loc(#loc380)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":30:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":56:27)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":77:27)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":22:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":81:1)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":24:5)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":24:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":26:13)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":26:12)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":26:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":27:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":37:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":27:8)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":27:33)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":28:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":31:5)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":33:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":30:9)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":30:16)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":36:16)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":36:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":38:5)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":80:5)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":38:8)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":38:33)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":39:5)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":59:5)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":61:5)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":40:9)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":58:9)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":41:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":41:17)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":42:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":42:34)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":45:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":57:13)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":45:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":45:24)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":45:22)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":46:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":53:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":55:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":47:32)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":47:24)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":47:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:17)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":52:17)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:25)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:21)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:28)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:32)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:30)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":50:17)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":51:41)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":51:34)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":51:21)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:37)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":49:36)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":56:17)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":62:9)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":79:9)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":63:13)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":63:17)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":64:13)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":64:34)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:13)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":78:13)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:25)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:22)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:27)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:30)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:38)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:40)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":66:35)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":67:13)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":74:13)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":76:13)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":68:32)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":68:24)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":68:17)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:17)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":73:17)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:25)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:21)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:28)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:32)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:30)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":71:17)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":72:41)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":72:34)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":72:21)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:37)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":70:36)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":77:17)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":215:1)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":219:1)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":217:5)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":217:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":218:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":218:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":90:1)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":147:1)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":92:5)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":92:9)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":94:13)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":94:12)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":94:5)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":95:5)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":104:5)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":95:8)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":95:33)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":96:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":99:5)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":101:5)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":98:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":98:16)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":98:23)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":103:9)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":103:16)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":103:23)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":105:5)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":146:5)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":105:8)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":105:33)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":106:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":125:5)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":127:5)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":107:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":124:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":108:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":108:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":109:13)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":109:34)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":123:13)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:17)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:25)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:22)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:27)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:30)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:38)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:40)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":111:35)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":112:13)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":119:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":121:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":113:32)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":113:24)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":113:17)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:17)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":118:17)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:25)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:21)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:28)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:32)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:30)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":116:17)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":117:41)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":117:34)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":117:21)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:37)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":115:36)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":122:27)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":122:17)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":128:9)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":145:9)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":129:13)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":129:17)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":130:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":130:34)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":144:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:17)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:25)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:22)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:27)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:30)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:38)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:40)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":132:35)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":133:13)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":140:13)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":142:13)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":134:32)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":134:24)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":134:17)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:17)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":139:17)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:25)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:21)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:28)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:32)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:30)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":137:17)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":138:41)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":138:34)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":138:21)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:37)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":136:36)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":143:27)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":143:17)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":152:1)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":213:1)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":154:5)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":154:9)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":156:13)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":156:12)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":156:5)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":157:5)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":168:5)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":157:8)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":157:33)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":158:5)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":162:5)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":164:5)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":161:16)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":161:9)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":167:16)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":167:9)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":169:5)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":212:5)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":169:8)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":169:33)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":170:5)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":190:5)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":192:5)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":171:9)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":189:9)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":172:13)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":172:17)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":173:13)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":173:34)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":176:13)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":188:13)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":176:17)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":176:24)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":176:22)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":177:13)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":184:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":186:13)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":178:32)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":178:24)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":178:17)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:17)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":183:17)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:25)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:21)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:28)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:32)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:30)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":181:17)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":182:41)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":182:34)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":182:21)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:37)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":180:36)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":187:27)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":187:17)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":193:9)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":211:9)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":194:13)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":194:17)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":195:13)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":195:34)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":198:13)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":210:13)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":198:17)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":198:24)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":198:22)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":199:13)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":206:13)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":208:13)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":200:32)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":200:24)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":200:17)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:17)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":205:17)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:25)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:21)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:28)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:32)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:30)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":203:17)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":204:41)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":204:34)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":204:21)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:37)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":202:36)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":209:27)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_12.c":209:17)
#loc302 = loc(fused[#loc1, #loc2])
#loc303 = loc(fused[#loc3, #loc4])
#loc304 = loc(fused[#loc5, #loc6])
#loc305 = loc(fused[#loc8, #loc9])
#loc306 = loc(fused[#loc10, #loc11])
#loc307 = loc(fused[#loc14, #loc15])
#loc308 = loc(fused[#loc16, #loc17])
#loc309 = loc(fused[#loc20, #loc18])
#loc310 = loc(fused[#loc21, #loc22])
#loc311 = loc(fused[#loc23, #loc24])
#loc312 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc313 = loc(fused[#loc31, #loc30])
#loc314 = loc(fused[#loc32, #loc33])
#loc315 = loc(fused[#loc34, #loc35])
#loc316 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc317 = loc(fused[#loc39, #loc40])
#loc318 = loc(fused[#loc41, #loc42])
#loc319 = loc(fused[#loc43, #loc44])
#loc320 = loc(fused[#loc45, #loc46])
#loc321 = loc(fused[#loc47, #loc48])
#loc322 = loc(fused[#loc50, #loc51, #loc52, #loc46])
#loc323 = loc(fused[#loc55, #loc53])
#loc324 = loc(fused[#loc56, #loc57])
#loc325 = loc(fused[#loc59, #loc58])
#loc326 = loc(fused[#loc60, #loc61])
#loc327 = loc(fused[#loc63, #loc57])
#loc328 = loc(fused[#loc68, #loc67])
#loc329 = loc(fused[#loc70, #loc71])
#loc330 = loc(fused[#loc72, #loc73])
#loc331 = loc(fused[#loc74, #loc75])
#loc332 = loc(fused[#loc76, #loc77])
#loc333 = loc(fused[#loc78, #loc79])
#loc334 = loc(fused[#loc82, #loc84])
#loc335 = loc(fused[#loc86, #loc87, #loc88, #loc77])
#loc336 = loc(fused[#loc91, #loc89])
#loc337 = loc(fused[#loc92, #loc93])
#loc338 = loc(fused[#loc95, #loc94])
#loc339 = loc(fused[#loc96, #loc97])
#loc340 = loc(fused[#loc99, #loc93])
#loc341 = loc(fused[#loc104, #loc103])
#loc342 = loc(fused[#loc106, #loc107])
#loc343 = loc(fused[#loc108, #loc109])
#loc344 = loc(fused[#loc110, #loc111])
#loc345 = loc(fused[#loc112, #loc113])
#loc346 = loc(fused[#loc114, #loc115])
#loc347 = loc(fused[#loc118, #loc116])
#loc348 = loc(fused[#loc119, #loc120])
#loc349 = loc(fused[#loc121, #loc122])
#loc350 = loc(fused[#loc123, #loc124, #loc125, #loc120])
#loc351 = loc(fused[#loc132, #loc133])
#loc352 = loc(fused[#loc134, #loc135])
#loc353 = loc(fused[#loc136, #loc137, #loc138, #loc133])
#loc354 = loc(fused[#loc139, #loc140])
#loc355 = loc(fused[#loc141, #loc142])
#loc356 = loc(fused[#loc143, #loc144])
#loc357 = loc(fused[#loc145, #loc146])
#loc358 = loc(fused[#loc147, #loc148])
#loc359 = loc(fused[#loc151, #loc153])
#loc360 = loc(fused[#loc155, #loc156, #loc157, #loc146])
#loc361 = loc(fused[#loc160, #loc158])
#loc362 = loc(fused[#loc161, #loc162])
#loc363 = loc(fused[#loc164, #loc163])
#loc364 = loc(fused[#loc165, #loc166])
#loc365 = loc(fused[#loc168, #loc162])
#loc366 = loc(fused[#loc173, #loc172])
#loc367 = loc(fused[#loc176, #loc177])
#loc368 = loc(fused[#loc178, #loc179])
#loc369 = loc(fused[#loc180, #loc181])
#loc370 = loc(fused[#loc182, #loc183])
#loc371 = loc(fused[#loc184, #loc185])
#loc372 = loc(fused[#loc188, #loc190])
#loc373 = loc(fused[#loc192, #loc193, #loc194, #loc183])
#loc374 = loc(fused[#loc197, #loc195])
#loc375 = loc(fused[#loc198, #loc199])
#loc376 = loc(fused[#loc201, #loc200])
#loc377 = loc(fused[#loc202, #loc203])
#loc378 = loc(fused[#loc205, #loc199])
#loc379 = loc(fused[#loc210, #loc209])
#loc380 = loc(fused[#loc213, #loc214])
#loc381 = loc(fused[#loc215, #loc216])
#loc382 = loc(fused[#loc219, #loc217])
#loc383 = loc(fused[#loc220, #loc221])
#loc384 = loc(fused[#loc222, #loc223])
#loc385 = loc(fused[#loc224, #loc225, #loc226, #loc221])
#loc386 = loc(fused[#loc228, #loc227])
#loc387 = loc(fused[#loc230, #loc229])
#loc388 = loc(fused[#loc231, #loc232])
#loc389 = loc(fused[#loc233, #loc234])
#loc390 = loc(fused[#loc235, #loc236, #loc237, #loc232])
#loc391 = loc(fused[#loc238, #loc239])
#loc392 = loc(fused[#loc240, #loc241])
#loc393 = loc(fused[#loc242, #loc243])
#loc394 = loc(fused[#loc244, #loc245])
#loc395 = loc(fused[#loc246, #loc247])
#loc396 = loc(fused[#loc249, #loc250, #loc251, #loc245])
#loc397 = loc(fused[#loc254, #loc252])
#loc398 = loc(fused[#loc255, #loc256])
#loc399 = loc(fused[#loc258, #loc257])
#loc400 = loc(fused[#loc259, #loc260])
#loc401 = loc(fused[#loc262, #loc256])
#loc402 = loc(fused[#loc267, #loc266])
#loc403 = loc(fused[#loc270, #loc271])
#loc404 = loc(fused[#loc272, #loc273])
#loc405 = loc(fused[#loc274, #loc275])
#loc406 = loc(fused[#loc276, #loc277])
#loc407 = loc(fused[#loc278, #loc279])
#loc408 = loc(fused[#loc281, #loc282, #loc283, #loc277])
#loc409 = loc(fused[#loc286, #loc284])
#loc410 = loc(fused[#loc287, #loc288])
#loc411 = loc(fused[#loc290, #loc289])
#loc412 = loc(fused[#loc291, #loc292])
#loc413 = loc(fused[#loc294, #loc288])
#loc414 = loc(fused[#loc299, #loc298])
