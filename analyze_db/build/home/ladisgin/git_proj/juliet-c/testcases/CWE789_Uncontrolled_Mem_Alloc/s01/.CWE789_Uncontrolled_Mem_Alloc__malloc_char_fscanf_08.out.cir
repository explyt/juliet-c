!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":246:10)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":246:14)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":246:20)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":246:32)
#true = #cir.bool<true> : !cir.bool
#loc380 = loc(fused[#loc89, #loc90])
#loc381 = loc(fused[#loc91, #loc92])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc343)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc344)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc345)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc346)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc347)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc348)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc349)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc351)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc22)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc352)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc354)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc26)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc344)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc29)
      } loc(#loc355)
    } loc(#loc353)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc357)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc33)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc360)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc362)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc363)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc48)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc365)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc366)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc367)
              cir.store %15, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
              cir.scope {
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc370)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc61)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
                } loc(#loc371)
              } loc(#loc369)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc62)
              %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc12)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc12)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc62)
              %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc65)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc66)
              %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc68)
            } loc(#loc364)
          } loc(#loc361)
        } loc(#loc359)
      } loc(#loc358)
    } loc(#loc356)
    cir.return loc(#loc19)
  } loc(#loc350)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc373)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc374)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc376)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc70)
  } loc(#loc372)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc377)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc86)
  cir.func @main(%arg0: !s32i loc(fused[#loc89, #loc90]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc91, #loc92])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc381)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc88)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc93)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc94)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc95)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc95)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc96)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc83)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc382)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_good() : () -> () loc(#loc98)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc84)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc85)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc383)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_bad() : () -> () loc(#loc102)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc86)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    cir.return %17 : !s32i loc(#loc384)
  } loc(#loc379)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc109)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    cir.return %2 : !s32i loc(#loc386)
  } loc(#loc385)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc112)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc388)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc117)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc389)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc391)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc121)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc121)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc124)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc344)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc126)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc126)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc124)
      } loc(#loc392)
    } loc(#loc390)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc394)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc129)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc129)
      cir.if %5 {
        %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc111)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc111)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc397)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc399)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc400)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc145)
              %12 = cir.const #cir.int<100> : !s32i loc(#loc146)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc146)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc401)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc144)
                cir.yield %16 : !cir.bool loc(#loc144)
              }, false {
                %16 = cir.const #false loc(#loc144)
                cir.yield %16 : !cir.bool loc(#loc144)
              }) : (!cir.bool) -> !cir.bool loc(#loc144)
              cir.yield %15 : !cir.bool loc(#loc144)
            }, false {
              %11 = cir.const #false loc(#loc144)
              cir.yield %11 : !cir.bool loc(#loc144)
            }) : (!cir.bool) -> !cir.bool loc(#loc144)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc150)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc151)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc403)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc404)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc405)
              cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc406)
              cir.scope {
                %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc408)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc161)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc162)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc163)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
                } loc(#loc409)
              } loc(#loc407)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc164)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc166)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc166)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc164)
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc168)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc169)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc169)
            } else {
              %11 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc112)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc112)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc171)
            } loc(#loc402)
          } loc(#loc398)
        } loc(#loc396)
      } loc(#loc395)
    } loc(#loc393)
    cir.return loc(#loc114)
  } loc(#loc387)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc411)
    cir.return %2 : !s32i loc(#loc411)
  } loc(#loc410)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc413)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc180)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc414)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc416)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc184)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc184)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc187)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc344)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc189)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc189)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc187)
      } loc(#loc417)
    } loc(#loc415)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc419)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc192)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc192)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc422)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc201)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc424)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc425)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc205)
              %12 = cir.const #cir.int<100> : !s32i loc(#loc206)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc206)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc426)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc204)
                cir.yield %16 : !cir.bool loc(#loc204)
              }, false {
                %16 = cir.const #false loc(#loc204)
                cir.yield %16 : !cir.bool loc(#loc204)
              }) : (!cir.bool) -> !cir.bool loc(#loc204)
              cir.yield %15 : !cir.bool loc(#loc204)
            }, false {
              %11 = cir.const #false loc(#loc204)
              cir.yield %11 : !cir.bool loc(#loc204)
            }) : (!cir.bool) -> !cir.bool loc(#loc204)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc210)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc211)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc428)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc429)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc210)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc430)
              cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc431)
              cir.scope {
                %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc219)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc219)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc433)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc221)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc222)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc223)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc221)
                } loc(#loc434)
              } loc(#loc432)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc224)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc226)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc226)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc224)
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc228)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc229)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc230)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc229)
            } else {
              %11 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc231)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc231)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc232)
            } loc(#loc427)
          } loc(#loc423)
        } loc(#loc421)
      } loc(#loc420)
    } loc(#loc418)
    cir.return loc(#loc177)
  } loc(#loc412)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc436)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc237)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc237)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc437)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc439)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc241)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc241)
      cir.if %5 {
        %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc246)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc246)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc247)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc248)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc248)
        cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc441)
      } loc(#loc440)
    } loc(#loc438)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc443)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc252)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc252)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc446)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc261)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc448)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc449)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc267)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc268)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc451)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc452)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc267)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc453)
              cir.store %15, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc454)
              cir.scope {
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc276)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc276)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc456)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc278)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc279)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc280)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc278)
                } loc(#loc457)
              } loc(#loc455)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc281)
              %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc282)
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc283)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc283)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc281)
              %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc285)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc286)
              %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc287)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc287)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc286)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc288)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc288)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc289)
            } loc(#loc450)
          } loc(#loc447)
        } loc(#loc445)
      } loc(#loc444)
    } loc(#loc442)
    cir.return loc(#loc234)
  } loc(#loc435)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc459)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc294)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc294)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc460)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc462)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc298)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc298)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc301)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc301)
        cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc464)
      } loc(#loc463)
    } loc(#loc461)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc466)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc305)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc305)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc469)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc314)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc471)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc472)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc320)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc321)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc474)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc475)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc320)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc476)
              cir.store %15, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc477)
              cir.scope {
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc328)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc329)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc329)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc479)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc331)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc332)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc333)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc331)
                } loc(#loc480)
              } loc(#loc478)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc334)
              %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc335)
              %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc336)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc336)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc334)
              %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc337)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc338)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc339)
              %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc340)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc340)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc339)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc341)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc341)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc342)
            } loc(#loc473)
          } loc(#loc470)
        } loc(#loc468)
      } loc(#loc467)
    } loc(#loc465)
    cir.return loc(#loc291)
  } loc(#loc458)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":49:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("/usr/include/string.h":141:1)
#loc11 = loc("/usr/include/string.h":142:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":63:34)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":69:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":41:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":73:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":43:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":43:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":45:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":45:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":46:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":50:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":46:8)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":46:26)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":47:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":49:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":49:16)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":51:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":72:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":51:8)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":51:26)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":52:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":53:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":71:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":54:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":54:20)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":70:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:24)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:43)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":59:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":66:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":68:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:36)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:43)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:48)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:59)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:60)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:49)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:21)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:33)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:39)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:40)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:46)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:45)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":63:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":63:24)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":64:27)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":64:17)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":65:17)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":65:22)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":69:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":229:1)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":235:1)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":231:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":231:14)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":232:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":232:14)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":233:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":233:14)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":234:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":234:14)
#loc79 = loc("/usr/include/stdlib.h":575:1)
#loc80 = loc("/usr/include/stdlib.h":575:41)
#loc81 = loc("/usr/include/time.h":76:1)
#loc82 = loc("/usr/include/time.h":76:38)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":251:15)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":253:15)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":256:15)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":258:15)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":246:1)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":261:1)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":247:1)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":249:27)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":249:22)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":249:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":251:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":252:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":252:63)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":253:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":256:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":257:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":257:62)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":258:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":260:12)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":260:5)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":29:1)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":32:1)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":31:12)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":31:5)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":93:19)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":113:27)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":80:1)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":117:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":82:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":82:12)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":84:12)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":84:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":85:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":89:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":85:8)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":85:26)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":86:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":88:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":88:16)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":88:23)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":90:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":116:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":90:8)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":90:27)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":91:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":94:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":96:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":93:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":97:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":115:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":98:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":98:20)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":114:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:24)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:43)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:45)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:48)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:55)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":103:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":110:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":112:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:36)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:43)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:48)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:59)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:60)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:49)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:21)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:33)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:39)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:40)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:46)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:45)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":107:17)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":107:24)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":107:34)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":108:27)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":108:17)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":109:17)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":109:22)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":113:17)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":34:1)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":37:1)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":36:12)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":36:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":120:1)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":152:1)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":122:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":122:12)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":124:12)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":124:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":125:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":129:5)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":125:8)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":125:26)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":126:5)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":128:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":128:16)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":128:23)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":130:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":151:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":130:8)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":130:26)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":131:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":132:9)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":150:9)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":133:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":133:20)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:13)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":149:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:17)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:24)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:43)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:45)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:48)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:55)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":138:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":145:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":147:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:36)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:43)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:48)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:59)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:60)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:17)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:49)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:21)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:33)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:39)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:40)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:46)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:45)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":142:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":142:24)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":142:34)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":143:27)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":143:17)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":144:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":144:22)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":148:27)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":148:17)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":155:1)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":192:1)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":157:5)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":157:12)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":159:12)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":159:5)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":160:5)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":169:5)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":160:8)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":160:27)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":161:5)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":164:5)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":166:5)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":163:19)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":163:9)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":168:16)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":168:9)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":170:5)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":191:5)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":170:8)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":170:26)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":171:5)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":172:9)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":190:9)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":173:13)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":173:20)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":189:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:17)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:24)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:43)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":178:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":185:13)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":187:13)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:36)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:43)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:48)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:59)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:60)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:17)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:17)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:49)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:21)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:33)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:39)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:40)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:46)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:45)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":182:17)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":182:24)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":182:34)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":183:27)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":183:17)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":184:17)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":184:22)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":188:27)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":188:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":195:1)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":227:1)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":197:5)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":197:12)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":199:12)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":199:5)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":200:5)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":204:5)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":200:8)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":200:26)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":201:5)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":203:16)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":203:9)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":205:5)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":226:5)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":205:8)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":205:26)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":206:5)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":207:9)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":225:9)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":208:13)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":208:20)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:13)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":224:13)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:17)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:24)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:43)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":213:13)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":220:13)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":222:13)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:36)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:43)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:48)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:59)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:60)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:17)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:17)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:49)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:21)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:33)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:39)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:40)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:46)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:45)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":217:17)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":217:24)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":217:34)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":218:27)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":218:17)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":219:17)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":219:22)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":223:27)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":223:17)
#loc343 = loc(fused[#loc1, #loc2])
#loc344 = loc(fused[#loc3, #loc4])
#loc345 = loc(fused[#loc6, #loc7])
#loc346 = loc(fused[#loc8, #loc9])
#loc347 = loc(fused[#loc10, #loc11])
#loc348 = loc(fused[#loc13, #loc14])
#loc349 = loc(fused[#loc15, #loc16])
#loc350 = loc(fused[#loc18, #loc19])
#loc351 = loc(fused[#loc20, #loc21])
#loc352 = loc(fused[#loc23, #loc22])
#loc353 = loc(fused[#loc24, #loc25])
#loc354 = loc(fused[#loc26, #loc27])
#loc355 = loc(fused[#loc28, #loc25])
#loc356 = loc(fused[#loc31, #loc32])
#loc357 = loc(fused[#loc33, #loc34])
#loc358 = loc(fused[#loc35, #loc32])
#loc359 = loc(fused[#loc36, #loc37])
#loc360 = loc(fused[#loc38, #loc39])
#loc361 = loc(fused[#loc40, #loc41])
#loc362 = loc(fused[#loc43, #loc44])
#loc363 = loc(fused[#loc42, #loc44])
#loc364 = loc(fused[#loc45, #loc46, #loc47, #loc41])
#loc365 = loc(fused[#loc50, #loc51])
#loc366 = loc(fused[#loc49, #loc51])
#loc367 = loc(fused[#loc48, #loc52])
#loc368 = loc(fused[#loc53, #loc52])
#loc369 = loc(fused[#loc54, #loc55])
#loc370 = loc(fused[#loc56, #loc57])
#loc371 = loc(fused[#loc58, #loc55])
#loc372 = loc(fused[#loc69, #loc70])
#loc373 = loc(fused[#loc71, #loc72])
#loc374 = loc(fused[#loc73, #loc74])
#loc375 = loc(fused[#loc75, #loc76])
#loc376 = loc(fused[#loc77, #loc78])
#loc377 = loc(fused[#loc79, #loc80])
#loc378 = loc(fused[#loc81, #loc82])
#loc379 = loc(fused[#loc87, #loc88])
#loc382 = loc(fused[#loc98, #loc99])
#loc383 = loc(fused[#loc102, #loc103])
#loc384 = loc(fused[#loc106, #loc105])
#loc385 = loc(fused[#loc107, #loc108])
#loc386 = loc(fused[#loc110, #loc109])
#loc387 = loc(fused[#loc113, #loc114])
#loc388 = loc(fused[#loc115, #loc116])
#loc389 = loc(fused[#loc118, #loc117])
#loc390 = loc(fused[#loc119, #loc120])
#loc391 = loc(fused[#loc121, #loc122])
#loc392 = loc(fused[#loc123, #loc120])
#loc393 = loc(fused[#loc127, #loc128])
#loc394 = loc(fused[#loc129, #loc130])
#loc395 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc396 = loc(fused[#loc135, #loc136])
#loc397 = loc(fused[#loc137, #loc138])
#loc398 = loc(fused[#loc139, #loc140])
#loc399 = loc(fused[#loc142, #loc143])
#loc400 = loc(fused[#loc141, #loc143])
#loc401 = loc(fused[#loc145, #loc146])
#loc402 = loc(fused[#loc147, #loc148, #loc149, #loc140])
#loc403 = loc(fused[#loc152, #loc153])
#loc404 = loc(fused[#loc151, #loc153])
#loc405 = loc(fused[#loc150, #loc154])
#loc406 = loc(fused[#loc155, #loc154])
#loc407 = loc(fused[#loc156, #loc157])
#loc408 = loc(fused[#loc158, #loc159])
#loc409 = loc(fused[#loc160, #loc157])
#loc410 = loc(fused[#loc172, #loc173])
#loc411 = loc(fused[#loc175, #loc174])
#loc412 = loc(fused[#loc176, #loc177])
#loc413 = loc(fused[#loc178, #loc179])
#loc414 = loc(fused[#loc181, #loc180])
#loc415 = loc(fused[#loc182, #loc183])
#loc416 = loc(fused[#loc184, #loc185])
#loc417 = loc(fused[#loc186, #loc183])
#loc418 = loc(fused[#loc190, #loc191])
#loc419 = loc(fused[#loc192, #loc193])
#loc420 = loc(fused[#loc194, #loc191])
#loc421 = loc(fused[#loc195, #loc196])
#loc422 = loc(fused[#loc197, #loc198])
#loc423 = loc(fused[#loc199, #loc200])
#loc424 = loc(fused[#loc202, #loc203])
#loc425 = loc(fused[#loc201, #loc203])
#loc426 = loc(fused[#loc205, #loc206])
#loc427 = loc(fused[#loc207, #loc208, #loc209, #loc200])
#loc428 = loc(fused[#loc212, #loc213])
#loc429 = loc(fused[#loc211, #loc213])
#loc430 = loc(fused[#loc210, #loc214])
#loc431 = loc(fused[#loc215, #loc214])
#loc432 = loc(fused[#loc216, #loc217])
#loc433 = loc(fused[#loc218, #loc219])
#loc434 = loc(fused[#loc220, #loc217])
#loc435 = loc(fused[#loc233, #loc234])
#loc436 = loc(fused[#loc235, #loc236])
#loc437 = loc(fused[#loc238, #loc237])
#loc438 = loc(fused[#loc239, #loc240])
#loc439 = loc(fused[#loc241, #loc242])
#loc440 = loc(fused[#loc243, #loc244, #loc245, #loc240])
#loc441 = loc(fused[#loc249, #loc248])
#loc442 = loc(fused[#loc250, #loc251])
#loc443 = loc(fused[#loc252, #loc253])
#loc444 = loc(fused[#loc254, #loc251])
#loc445 = loc(fused[#loc255, #loc256])
#loc446 = loc(fused[#loc257, #loc258])
#loc447 = loc(fused[#loc259, #loc260])
#loc448 = loc(fused[#loc262, #loc263])
#loc449 = loc(fused[#loc261, #loc263])
#loc450 = loc(fused[#loc264, #loc265, #loc266, #loc260])
#loc451 = loc(fused[#loc269, #loc270])
#loc452 = loc(fused[#loc268, #loc270])
#loc453 = loc(fused[#loc267, #loc271])
#loc454 = loc(fused[#loc272, #loc271])
#loc455 = loc(fused[#loc273, #loc274])
#loc456 = loc(fused[#loc275, #loc276])
#loc457 = loc(fused[#loc277, #loc274])
#loc458 = loc(fused[#loc290, #loc291])
#loc459 = loc(fused[#loc292, #loc293])
#loc460 = loc(fused[#loc295, #loc294])
#loc461 = loc(fused[#loc296, #loc297])
#loc462 = loc(fused[#loc298, #loc299])
#loc463 = loc(fused[#loc300, #loc297])
#loc464 = loc(fused[#loc302, #loc301])
#loc465 = loc(fused[#loc303, #loc304])
#loc466 = loc(fused[#loc305, #loc306])
#loc467 = loc(fused[#loc307, #loc304])
#loc468 = loc(fused[#loc308, #loc309])
#loc469 = loc(fused[#loc310, #loc311])
#loc470 = loc(fused[#loc312, #loc313])
#loc471 = loc(fused[#loc315, #loc316])
#loc472 = loc(fused[#loc314, #loc316])
#loc473 = loc(fused[#loc317, #loc318, #loc319, #loc313])
#loc474 = loc(fused[#loc322, #loc323])
#loc475 = loc(fused[#loc321, #loc323])
#loc476 = loc(fused[#loc320, #loc324])
#loc477 = loc(fused[#loc325, #loc324])
#loc478 = loc(fused[#loc326, #loc327])
#loc479 = loc(fused[#loc328, #loc329])
#loc480 = loc(fused[#loc330, #loc327])
