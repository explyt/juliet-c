!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":91:10)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":91:14)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":91:20)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":91:32)
#loc133 = loc(fused[#loc56, #loc57])
#loc134 = loc(fused[#loc58, #loc59])
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc8)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc8)
        cir.condition(%1) loc(#loc8)
      } do {
        cir.scope {
          %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc115)
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
          %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
          %4 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc13)
          cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc116)
          %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc13)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc15)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc17)
          %8 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc18)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc118)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc21)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc21)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
          %14 = cir.const #cir.int<32> : !u64i loc(#loc119)
          cir.libc.memmove %14 bytes from %13 to %10 : !cir.ptr<!void>, !u64i loc(#loc120)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc26)
          %17 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc18)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc121)
          %19 = cir.const #cir.int<1> : !u64i loc(#loc122)
          %20 = cir.binop(div, %18, %19) : !u64i loc(#loc123)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc31)
          %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc124)
          %24 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc33)
          %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc34)
          cir.store %16, %25 : !s8i, !cir.ptr<!s8i> loc(#loc125)
          %26 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc18)
          %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
          cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc37)
          %28 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc13)
          %29 = cir.load %28 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc38)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
          cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc40)
        } loc(#loc114)
        cir.break loc(#loc41)
      } loc(#loc113)
    } loc(#loc113)
    cir.return loc(#loc5)
  } loc(#loc112)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc43)
  } loc(#loc128)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc130)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %17 : !s32i loc(#loc137)
  } loc(#loc132)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc78)
        cir.condition(%1) loc(#loc78)
      } do {
        cir.scope {
          %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc141)
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc83)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc83)
          %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
          %4 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc13)
          cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc142)
          %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc13)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc85)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
          %8 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc18)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc90)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc90)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
          %14 = cir.const #cir.int<16> : !u64i loc(#loc145)
          cir.libc.memmove %14 bytes from %13 to %10 : !cir.ptr<!void>, !u64i loc(#loc146)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc95)
          %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc95)
          %17 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc18)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc147)
          %19 = cir.const #cir.int<1> : !u64i loc(#loc148)
          %20 = cir.binop(div, %18, %19) : !u64i loc(#loc149)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc100)
          %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc150)
          %24 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc102)
          %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc103)
          cir.store %16, %25 : !s8i, !cir.ptr<!s8i> loc(#loc151)
          %26 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc18)
          %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc106)
          %28 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc13)
          %29 = cir.load %28 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc107)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc153)
          cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc109)
        } loc(#loc140)
        cir.break loc(#loc110)
      } loc(#loc139)
    } loc(#loc139)
    cir.return loc(#loc75)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":40:49)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":34:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":51:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":36:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":50:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":36:11)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":38:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":48:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":39:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":39:22)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":28:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":40:13)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":42:46)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":42:31)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":42:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":27:10)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":44:21)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":44:36)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":44:47)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":44:56)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":44:77)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":44:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":44:78)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:91)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:39)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:70)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:72)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:83)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:86)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:38)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":45:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":46:31)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":46:46)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":46:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":47:46)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":47:31)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":47:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":49:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":77:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":80:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":79:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":79:11)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":96:15)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":98:15)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":101:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":103:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":91:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":106:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":92:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":94:27)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":94:22)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":94:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":96:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":97:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":97:75)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":98:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":101:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":102:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":102:74)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":103:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":105:12)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":105:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":58:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":75:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":60:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":74:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":60:11)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":62:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":72:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":63:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":63:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":64:49)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":64:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":66:46)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":66:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":66:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":68:21)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":68:36)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":68:47)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":68:56)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":68:87)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":68:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":68:88)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:91)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:39)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:70)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:72)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:83)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:86)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:38)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":69:28)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":70:31)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":70:46)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":70:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":71:46)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":71:31)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":71:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_16.c":73:9)
#loc111 = loc(fused[#loc2, #loc3])
#loc112 = loc(fused[#loc4, #loc5])
#loc113 = loc(fused[#loc6, #loc7])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc11, #loc12])
#loc116 = loc(fused[#loc14, #loc1])
#loc117 = loc(fused[#loc16, #loc15])
#loc118 = loc(fused[#loc19, #loc20])
#loc119 = loc(fused[#loc22, #loc23])
#loc120 = loc(fused[#loc24, #loc25])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc29, #loc30])
#loc123 = loc(fused[#loc27, #loc30])
#loc124 = loc(fused[#loc32, #loc31])
#loc125 = loc(fused[#loc33, #loc26])
#loc126 = loc(fused[#loc35, #loc36])
#loc127 = loc(fused[#loc39, #loc38])
#loc128 = loc(fused[#loc42, #loc43])
#loc129 = loc(fused[#loc44, #loc45])
#loc130 = loc(fused[#loc46, #loc47])
#loc131 = loc(fused[#loc48, #loc49])
#loc132 = loc(fused[#loc54, #loc55])
#loc135 = loc(fused[#loc65, #loc66])
#loc136 = loc(fused[#loc69, #loc70])
#loc137 = loc(fused[#loc73, #loc72])
#loc138 = loc(fused[#loc74, #loc75])
#loc139 = loc(fused[#loc76, #loc77])
#loc140 = loc(fused[#loc79, #loc80])
#loc141 = loc(fused[#loc81, #loc82])
#loc142 = loc(fused[#loc84, #loc83])
#loc143 = loc(fused[#loc86, #loc85])
#loc144 = loc(fused[#loc88, #loc89])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc96, #loc97])
#loc148 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc96, #loc99])
#loc150 = loc(fused[#loc101, #loc100])
#loc151 = loc(fused[#loc102, #loc95])
#loc152 = loc(fused[#loc104, #loc105])
#loc153 = loc(fused[#loc108, #loc107])
