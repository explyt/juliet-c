!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":25:59)
#loc8 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":25:63)
#loc30 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":48:64)
#loc31 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":48:68)
#loc58 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":72:64)
#loc59 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":72:68)
#loc84 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":91:63)
#loc85 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":91:67)
#loc102 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc30, #loc31])
#loc121 = loc(fused[#loc58, #loc59])
#loc131 = loc(fused[#loc84, #loc85])
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_min_postdec_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @CWE191_Integer_Underflow__int_min_postdec_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc99)
  cir.func private @printIntLine(!s32i) loc(#loc100)
  cir.func @CWE191_Integer_Underflow__int_min_postdec_22_badSink(%arg0: !s32i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc11)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE191_Integer_Underflow__int_min_postdec_22_badGlobal : !cir.ptr<!s32i> loc(#loc99)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc105)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc106)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %6 = cir.unary(dec, %5) nsw : !s32i, !s32i loc(#loc19)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc21)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc101)
  cir.global "private" external @CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc108)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc27)
  cir.func @CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Sink(%arg0: !s32i loc(fused[#loc30, #loc31])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc111)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc34)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE191_Integer_Underflow__int_min_postdec_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc108)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc114)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb9 loc(#loc39)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc45)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc45)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc45)
    %12 = cir.cmp(gt, %7, %11) : !s32i, !cir.bool loc(#loc116)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc117)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %14 = cir.unary(dec, %13) nsw : !s32i, !s32i loc(#loc50)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc52)
    cir.br ^bb7 loc(#loc47)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc27)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb7 loc(#loc43)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc36)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc29)
  } loc(#loc110)
  cir.global "private" external @CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc119)
  cir.func @CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Sink(%arg0: !s32i loc(fused[#loc58, #loc59])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc121)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE191_Integer_Underflow__int_min_postdec_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc119)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %4 ^bb2, ^bb8 loc(#loc124)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc70)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc70)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc70)
    %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %10 ^bb4, ^bb5 loc(#loc127)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %12 = cir.unary(dec, %11) nsw : !s32i, !s32i loc(#loc75)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc77)
    cir.br ^bb6 loc(#loc72)
  ^bb5:  // pred: ^bb3
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc78)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc68)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc64)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc57)
  } loc(#loc120)
  cir.global "private" external @CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc129)
  cir.func @CWE191_Integer_Underflow__int_min_postdec_22_goodG2BSink(%arg0: !s32i loc(fused[#loc84, #loc85])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc132)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc131)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE191_Integer_Underflow__int_min_postdec_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc129)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc134)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %6 = cir.unary(dec, %5) nsw : !s32i, !s32i loc(#loc96)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc98)
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc90)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc83)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_min_postdec_22b.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":23:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":25:1)
#loc6 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":36:1)
#loc9 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":32:13)
#loc10 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":32:26)
#loc11 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":26:1)
#loc12 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":27:5)
#loc13 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":35:5)
#loc14 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":27:8)
#loc15 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":28:5)
#loc16 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":29:9)
#loc17 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":34:9)
#loc18 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":31:17)
#loc19 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":31:13)
#loc20 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":33:26)
#loc21 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":33:13)
#loc22 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":43:1)
#loc23 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":43:12)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":53:19)
#loc27 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":66:23)
#loc28 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":48:1)
#loc29 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":69:1)
#loc32 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":61:13)
#loc33 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":61:26)
#loc34 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":49:1)
#loc35 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":50:5)
#loc36 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":68:5)
#loc37 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":50:8)
#loc38 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":51:5)
#loc39 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":54:5)
#loc40 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":56:5)
#loc41 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":53:9)
#loc42 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":58:9)
#loc43 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":67:9)
#loc44 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":58:13)
#loc45 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":58:20)
#loc46 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":59:9)
#loc47 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":63:9)
#loc48 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":65:9)
#loc49 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":60:17)
#loc50 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":60:13)
#loc51 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":62:26)
#loc52 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":62:13)
#loc53 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":66:13)
#loc54 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":44:1)
#loc55 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":44:12)
#loc56 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":72:1)
#loc57 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":88:1)
#loc60 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":80:13)
#loc61 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":80:26)
#loc62 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":73:1)
#loc63 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":74:5)
#loc64 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":87:5)
#loc65 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":74:8)
#loc66 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":75:5)
#loc67 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":77:9)
#loc68 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":86:9)
#loc69 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":77:13)
#loc70 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":77:20)
#loc71 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":78:9)
#loc72 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":82:9)
#loc73 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":84:9)
#loc74 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":79:17)
#loc75 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":79:13)
#loc76 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":81:26)
#loc77 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":81:13)
#loc78 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":85:23)
#loc79 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":85:13)
#loc80 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":45:1)
#loc81 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":45:12)
#loc82 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":91:1)
#loc83 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":102:1)
#loc86 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":98:13)
#loc87 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":98:26)
#loc88 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":92:1)
#loc89 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":93:5)
#loc90 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":101:5)
#loc91 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":93:8)
#loc92 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":94:5)
#loc93 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":95:9)
#loc94 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":100:9)
#loc95 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":97:17)
#loc96 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":97:13)
#loc97 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":99:26)
#loc98 = loc("CWE191_Integer_Underflow__int_min_postdec_22b.c":99:13)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc12, #loc13])
#loc105 = loc(fused[#loc15, #loc13])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc19, #loc18])
#loc108 = loc(fused[#loc22, #loc23])
#loc109 = loc(fused[#loc24, #loc25])
#loc110 = loc(fused[#loc28, #loc29])
#loc112 = loc(fused[#loc32, #loc33])
#loc113 = loc(fused[#loc35, #loc36])
#loc114 = loc(fused[#loc38, #loc39, #loc40, #loc36])
#loc115 = loc(fused[#loc42, #loc43])
#loc116 = loc(fused[#loc44, #loc45])
#loc117 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc118 = loc(fused[#loc50, #loc49])
#loc119 = loc(fused[#loc54, #loc55])
#loc120 = loc(fused[#loc56, #loc57])
#loc122 = loc(fused[#loc60, #loc61])
#loc123 = loc(fused[#loc63, #loc64])
#loc124 = loc(fused[#loc66, #loc64])
#loc125 = loc(fused[#loc67, #loc68])
#loc126 = loc(fused[#loc69, #loc70])
#loc127 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc128 = loc(fused[#loc75, #loc74])
#loc129 = loc(fused[#loc80, #loc81])
#loc130 = loc(fused[#loc82, #loc83])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc89, #loc90])
#loc134 = loc(fused[#loc92, #loc90])
#loc135 = loc(fused[#loc93, #loc94])
#loc136 = loc(fused[#loc96, #loc95])
