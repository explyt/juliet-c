!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc91 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":99:10)
#loc92 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":99:14)
#loc93 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":99:20)
#loc94 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":99:32)
#loc211 = loc(fused[#loc91, #loc92])
#loc212 = loc(fused[#loc93, #loc94])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc181)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_loop_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc185)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc186)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc19)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc20)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc22)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc24)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc25)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc25)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc29)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc30)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.scope {
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc193)
      %33 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc194)
      %34 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc195)
      %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
      %37 = cir.const #cir.int<67> : !s32i loc(#loc43)
      %38 = cir.const #cir.int<100> : !s32i loc(#loc44)
      %39 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc44)
      %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc44)
      cir.libc.memset %41 bytes from %36 set to %37 : !cir.ptr<!void>, !s32i, !u64i loc(#loc196)
      %42 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc48)
      %44 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %45 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc49)
      %47 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc51)
      cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc197)
      %49 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
      %50 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
      %51 = cir.call @strlen(%50) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
      cir.store %51, %33 : !u64i, !cir.ptr<!u64i> loc(#loc198)
      cir.scope {
        %60 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc58)
        cir.store %61, %32 : !u64i, !cir.ptr<!u64i> loc(#loc200)
        cir.for : cond {
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %63 = cir.load %33 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %64 = cir.cmp(lt, %62, %63) : !u64i, !cir.bool loc(#loc201)
          cir.condition(%64) loc(#loc62)
        } body {
          cir.scope {
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
            %63 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc65)
            %64 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc66)
            %65 = cir.load %64 : !cir.ptr<!s8i>, !s8i loc(#loc64)
            %66 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc67)
            %67 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
            %68 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc68)
            cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc203)
          } loc(#loc202)
          cir.yield loc(#loc57)
        } step {
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc69)
          %63 = cir.unary(inc, %62) : !u64i, !u64i loc(#loc70)
          cir.store %63, %32 : !u64i, !cir.ptr<!u64i> loc(#loc204)
          cir.yield loc(#loc199)
        } loc(#loc199)
      } loc(#loc199)
      %52 = cir.const #cir.int<0> : !s32i loc(#loc71)
      %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc71)
      %54 = cir.const #cir.int<100> : !s32i loc(#loc72)
      %55 = cir.const #cir.int<1> : !s32i loc(#loc73)
      %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc72)
      %57 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc74)
      cir.store %53, %58 : !s8i, !cir.ptr<!s8i> loc(#loc205)
      %59 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
      cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    } loc(#loc192)
    cir.return loc(#loc6)
  } loc(#loc183)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_loop_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc206)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc208)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc88)
  cir.func @main(%arg0: !s32i loc(fused[#loc91, #loc92]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc93, #loc94])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc96)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc97)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc97)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc98)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_declare_loop_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE126_Buffer_Overread__char_declare_loop_01_good() : () -> () loc(#loc100)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc87)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_declare_loop_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE126_Buffer_Overread__char_declare_loop_01_bad() : () -> () loc(#loc104)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc218)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc219)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc117)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc118)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc119)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc119)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc119)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc220)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc123)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc124)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc124)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc126)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc221)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc128)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc129)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc129)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc133)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc134)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
    cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.scope {
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc226)
      %33 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc227)
      %34 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc228)
      %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
      %37 = cir.const #cir.int<67> : !s32i loc(#loc147)
      %38 = cir.const #cir.int<100> : !s32i loc(#loc148)
      %39 = cir.const #cir.int<1> : !s32i loc(#loc149)
      %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc148)
      %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc148)
      cir.libc.memset %41 bytes from %36 set to %37 : !cir.ptr<!void>, !s32i, !u64i loc(#loc229)
      %42 = cir.const #cir.int<0> : !s32i loc(#loc152)
      %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc152)
      %44 = cir.const #cir.int<100> : !s32i loc(#loc153)
      %45 = cir.const #cir.int<1> : !s32i loc(#loc154)
      %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc153)
      %47 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
      %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc155)
      cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc230)
      %49 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc156)
      %50 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
      %51 = cir.call @strlen(%50) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc156)
      cir.store %51, %33 : !u64i, !cir.ptr<!u64i> loc(#loc231)
      cir.scope {
        %60 = cir.const #cir.int<0> : !s32i loc(#loc162)
        %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc162)
        cir.store %61, %32 : !u64i, !cir.ptr<!u64i> loc(#loc233)
        cir.for : cond {
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc164)
          %63 = cir.load %33 : !cir.ptr<!u64i>, !u64i loc(#loc165)
          %64 = cir.cmp(lt, %62, %63) : !u64i, !cir.bool loc(#loc234)
          cir.condition(%64) loc(#loc166)
        } body {
          cir.scope {
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
            %63 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc169)
            %64 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc170)
            %65 = cir.load %64 : !cir.ptr<!s8i>, !s8i loc(#loc168)
            %66 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc171)
            %67 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
            %68 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc172)
            cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc236)
          } loc(#loc235)
          cir.yield loc(#loc161)
        } step {
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc173)
          %63 = cir.unary(inc, %62) : !u64i, !u64i loc(#loc174)
          cir.store %63, %32 : !u64i, !cir.ptr<!u64i> loc(#loc237)
          cir.yield loc(#loc232)
        } loc(#loc232)
      } loc(#loc232)
      %52 = cir.const #cir.int<0> : !s32i loc(#loc175)
      %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc175)
      %54 = cir.const #cir.int<100> : !s32i loc(#loc176)
      %55 = cir.const #cir.int<1> : !s32i loc(#loc177)
      %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc176)
      %57 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
      %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc178)
      cir.store %53, %58 : !s8i, !cir.ptr<!s8i> loc(#loc238)
      %59 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
      cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    } loc(#loc225)
    cir.return loc(#loc110)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":49:1)
#loc7 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":25:5)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":25:12)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":26:26)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":27:5)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":27:28)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":28:12)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":28:27)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":28:32)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":28:35)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":28:5)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":28:36)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":29:27)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":29:19)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":29:22)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":30:12)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":30:28)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":30:33)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":30:37)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":30:5)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":30:38)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":31:29)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":31:20)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":31:24)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":31:5)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":33:12)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":33:5)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":34:5)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":48:5)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":35:9)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":35:16)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":35:19)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":36:9)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":36:22)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":37:16)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":37:22)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":37:27)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":37:31)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":37:9)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":37:32)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":38:23)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":38:14)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":38:18)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":38:9)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":39:19)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":39:26)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":39:9)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":39:30)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:9)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":45:9)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:18)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:14)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:21)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:25)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:23)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":43:9)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":44:23)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":44:28)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":44:29)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":44:18)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":44:13)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:35)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":42:34)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":46:23)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":46:14)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":46:18)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":46:9)
#loc75 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":47:19)
#loc76 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":47:9)
#loc77 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":84:1)
#loc78 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":87:1)
#loc79 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":86:5)
#loc80 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":86:13)
#loc81 = loc("/usr/include/stdlib.h":575:1)
#loc82 = loc("/usr/include/stdlib.h":575:41)
#loc83 = loc("/usr/include/time.h":76:1)
#loc84 = loc("/usr/include/time.h":76:38)
#loc85 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":104:15)
#loc86 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":106:15)
#loc87 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":109:15)
#loc88 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":111:15)
#loc89 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":99:1)
#loc90 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":114:1)
#loc95 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":100:1)
#loc96 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":102:27)
#loc97 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":102:22)
#loc98 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":102:5)
#loc99 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":104:5)
#loc100 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":105:5)
#loc101 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":105:55)
#loc102 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":106:5)
#loc103 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":109:5)
#loc104 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":110:5)
#loc105 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":110:54)
#loc106 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":111:5)
#loc107 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":113:12)
#loc108 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":113:5)
#loc109 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":56:1)
#loc110 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":82:1)
#loc111 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":58:5)
#loc112 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":58:12)
#loc113 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":59:5)
#loc114 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":59:26)
#loc115 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":60:5)
#loc116 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":60:28)
#loc117 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":61:12)
#loc118 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":61:27)
#loc119 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":61:32)
#loc120 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":61:35)
#loc121 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":61:5)
#loc122 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":61:36)
#loc123 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":62:27)
#loc124 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":62:19)
#loc125 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":62:22)
#loc126 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":62:5)
#loc127 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":63:12)
#loc128 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":63:28)
#loc129 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":63:33)
#loc130 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":63:37)
#loc131 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":63:5)
#loc132 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":63:38)
#loc133 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":64:29)
#loc134 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":64:20)
#loc135 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":64:24)
#loc136 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":64:5)
#loc137 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":66:12)
#loc138 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":66:5)
#loc139 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":67:5)
#loc140 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":81:5)
#loc141 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":68:9)
#loc142 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":68:16)
#loc143 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":68:19)
#loc144 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":69:9)
#loc145 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":69:22)
#loc146 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":70:16)
#loc147 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":70:22)
#loc148 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":70:27)
#loc149 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":70:31)
#loc150 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":70:9)
#loc151 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":70:32)
#loc152 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":71:23)
#loc153 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":71:14)
#loc154 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":71:18)
#loc155 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":71:9)
#loc156 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":72:19)
#loc157 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":72:26)
#loc158 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":72:9)
#loc159 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":72:30)
#loc160 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:9)
#loc161 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":78:9)
#loc162 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:18)
#loc163 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:14)
#loc164 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:21)
#loc165 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:25)
#loc166 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:23)
#loc167 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":76:9)
#loc168 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":77:23)
#loc169 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":77:28)
#loc170 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":77:29)
#loc171 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":77:18)
#loc172 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":77:13)
#loc173 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:35)
#loc174 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":75:34)
#loc175 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":79:23)
#loc176 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":79:14)
#loc177 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":79:18)
#loc178 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":79:9)
#loc179 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":80:19)
#loc180 = loc("CWE126_Buffer_Overread__char_declare_loop_01.c":80:9)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc5, #loc6])
#loc184 = loc(fused[#loc7, #loc8])
#loc185 = loc(fused[#loc9, #loc10])
#loc186 = loc(fused[#loc11, #loc12])
#loc187 = loc(fused[#loc17, #loc18])
#loc188 = loc(fused[#loc22, #loc19])
#loc189 = loc(fused[#loc27, #loc28])
#loc190 = loc(fused[#loc32, #loc29])
#loc191 = loc(fused[#loc34, #loc33])
#loc192 = loc(fused[#loc35, #loc36])
#loc193 = loc(fused[#loc37, #loc38])
#loc194 = loc(fused[#loc37, #loc39])
#loc195 = loc(fused[#loc40, #loc41])
#loc196 = loc(fused[#loc46, #loc47])
#loc197 = loc(fused[#loc51, #loc48])
#loc198 = loc(fused[#loc54, #loc55])
#loc199 = loc(fused[#loc56, #loc57])
#loc200 = loc(fused[#loc59, #loc58])
#loc201 = loc(fused[#loc60, #loc61])
#loc202 = loc(fused[#loc63, #loc57])
#loc203 = loc(fused[#loc68, #loc66])
#loc204 = loc(fused[#loc70, #loc69])
#loc205 = loc(fused[#loc74, #loc71])
#loc206 = loc(fused[#loc77, #loc78])
#loc207 = loc(fused[#loc79, #loc80])
#loc208 = loc(fused[#loc81, #loc82])
#loc209 = loc(fused[#loc83, #loc84])
#loc210 = loc(fused[#loc89, #loc90])
#loc213 = loc(fused[#loc100, #loc101])
#loc214 = loc(fused[#loc104, #loc105])
#loc215 = loc(fused[#loc108, #loc107])
#loc216 = loc(fused[#loc109, #loc110])
#loc217 = loc(fused[#loc111, #loc112])
#loc218 = loc(fused[#loc113, #loc114])
#loc219 = loc(fused[#loc115, #loc116])
#loc220 = loc(fused[#loc121, #loc122])
#loc221 = loc(fused[#loc126, #loc123])
#loc222 = loc(fused[#loc131, #loc132])
#loc223 = loc(fused[#loc136, #loc133])
#loc224 = loc(fused[#loc138, #loc137])
#loc225 = loc(fused[#loc139, #loc140])
#loc226 = loc(fused[#loc141, #loc142])
#loc227 = loc(fused[#loc141, #loc143])
#loc228 = loc(fused[#loc144, #loc145])
#loc229 = loc(fused[#loc150, #loc151])
#loc230 = loc(fused[#loc155, #loc152])
#loc231 = loc(fused[#loc158, #loc159])
#loc232 = loc(fused[#loc160, #loc161])
#loc233 = loc(fused[#loc163, #loc162])
#loc234 = loc(fused[#loc164, #loc165])
#loc235 = loc(fused[#loc167, #loc161])
#loc236 = loc(fused[#loc172, #loc170])
#loc237 = loc(fused[#loc174, #loc173])
#loc238 = loc(fused[#loc178, #loc175])
