!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc61 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc97)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc98)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc101)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %1 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %2 ^bb3, ^bb6 loc(#loc11)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc103)
    cir.br ^bb6 loc(#loc15)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc10)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc10)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // 2 preds: ^bb8, ^bb12
    %4 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %5 ^bb10, ^bb13 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc105)
  ^bb11:  // pred: ^bb10
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc23)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc24)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    cir.br ^bb13 loc(#loc26)
  ^bb12:  // no predecessors
    cir.br ^bb9 loc(#loc17)
  ^bb13:  // 2 preds: ^bb9, ^bb11
    cir.br ^bb14 loc(#loc17)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc29)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc109)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %1 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %2 ^bb3, ^bb6 loc(#loc36)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc111)
    cir.br ^bb6 loc(#loc40)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc35)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc112)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc112)
  ^bb9:  // 2 preds: ^bb8, ^bb17
    %4 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %5 ^bb10, ^bb18 loc(#loc43)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc113)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc114)
  ^bb12:  // pred: ^bb11
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
    %8 = cir.cmp(ne, %6, %7) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc115)
    cir.brcond %8 ^bb13, ^bb14 loc(#loc116)
  ^bb13:  // pred: ^bb12
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc52)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc54)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc55)
    cir.call @_ZdlPv(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
    cir.br ^bb15 loc(#loc50)
  ^bb14:  // pred: ^bb12
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc29)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb15 loc(#loc46)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc46)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc58)
  ^bb17:  // no predecessors
    cir.br ^bb9 loc(#loc42)
  ^bb18:  // 2 preds: ^bb9, ^bb16
    cir.br ^bb19 loc(#loc42)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc31)
  } loc(#loc107)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc117)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc61)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc61)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
    cir.return loc(#loc61)
  } loc(#loc61)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc121)
  ^bb2:  // 2 preds: ^bb1, ^bb7
    %2 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %3 ^bb3, ^bb8 loc(#loc70)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<8> : !u64i loc(#loc124)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc119)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc124)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc65)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc119)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc79)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    cir.store %13, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc82)
  ^bb7:  // no predecessors
    cir.br ^bb2 loc(#loc69)
  ^bb8:  // 2 preds: ^bb2, ^bb6
    cir.br ^bb9 loc(#loc69)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc128)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc128)
  ^bb11:  // 2 preds: ^bb10, ^bb14
    %14 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc85)
    cir.brcond %15 ^bb12, ^bb15 loc(#loc85)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc129)
  ^bb13:  // pred: ^bb12
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc89)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc90)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb15 loc(#loc92)
  ^bb14:  // no predecessors
    cir.br ^bb11 loc(#loc84)
  ^bb15:  // 2 preds: ^bb11, ^bb13
    cir.br ^bb16 loc(#loc84)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc63)
  } loc(#loc118)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodB2GEv() : () -> () loc(#loc95)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodG2BEv() : () -> () loc(#loc96)
    cir.return loc(#loc94)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_16.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":24:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":41:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":26:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":26:20)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":27:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":32:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":27:11)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":28:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":30:16)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":30:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":31:9)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":33:5)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":40:5)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":33:11)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":34:5)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:22)
#loc21 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:28)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:9)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":38:16)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":24:6)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":39:9)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":67:23)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":48:1)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":71:1)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":50:5)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":50:20)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":51:5)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":56:5)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":51:11)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":52:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":54:16)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":54:9)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":55:9)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":57:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":70:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":57:11)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":58:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:9)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":68:9)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:13)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:21)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":61:9)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":64:9)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":66:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:26)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:32)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:13)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":63:20)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":48:13)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":67:13)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":69:9)
#loc59 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc60 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":74:1)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":96:1)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:13)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:42)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":76:5)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":76:20)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":77:5)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":87:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":77:11)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":78:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":79:9)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":85:9)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:38)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":81:31)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":81:13)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":82:31)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":82:13)
#loc79 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":84:20)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":84:13)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":86:9)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":88:5)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":95:5)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":88:11)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":89:5)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:22)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:28)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:9)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":93:16)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":74:13)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":94:9)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":98:1)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":102:1)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":100:5)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":101:5)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc12, #loc10])
#loc103 = loc(fused[#loc14, #loc13])
#loc104 = loc(fused[#loc16, #loc17])
#loc105 = loc(fused[#loc19, #loc17])
#loc106 = loc(fused[#loc27, #loc28])
#loc107 = loc(fused[#loc30, #loc31])
#loc108 = loc(fused[#loc32, #loc33])
#loc109 = loc(fused[#loc34, #loc35])
#loc110 = loc(fused[#loc37, #loc35])
#loc111 = loc(fused[#loc39, #loc38])
#loc112 = loc(fused[#loc41, #loc42])
#loc113 = loc(fused[#loc44, #loc42])
#loc114 = loc(fused[#loc45, #loc46])
#loc115 = loc(fused[#loc47, #loc48])
#loc116 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc117 = loc(fused[#loc59, #loc60])
#loc118 = loc(fused[#loc62, #loc63])
#loc119 = loc(fused[#loc64, #loc65])
#loc120 = loc(fused[#loc66, #loc67])
#loc121 = loc(fused[#loc68, #loc69])
#loc122 = loc(fused[#loc71, #loc69])
#loc123 = loc(fused[#loc72, #loc73])
#loc124 = loc(fused[#loc74, #loc65])
#loc125 = loc(fused[#loc76, #loc75])
#loc126 = loc(fused[#loc78, #loc77])
#loc127 = loc(fused[#loc81, #loc80])
#loc128 = loc(fused[#loc83, #loc84])
#loc129 = loc(fused[#loc86, #loc84])
#loc130 = loc(fused[#loc93, #loc94])
