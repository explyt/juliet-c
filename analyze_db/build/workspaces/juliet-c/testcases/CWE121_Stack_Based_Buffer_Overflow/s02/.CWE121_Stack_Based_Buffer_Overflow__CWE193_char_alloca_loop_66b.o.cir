!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":28:78)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":28:95)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":51:82)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":51:99)
#loc88 = loc(fused[#loc11, #loc12])
#loc102 = loc(fused[#loc48, #loc49])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc83)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc84)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc15)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s8i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc84)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc91)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc92)
      %9 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc84)
      cir.copy %9 to %6 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc84)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc23)
      %11 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc24)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc23)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc93)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc29)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc29)
        cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc95)
        cir.for : cond {
          %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc31)
          %17 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc32)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc33)
          %20 = cir.binop(add, %17, %19) : !u64i loc(#loc96)
          %21 = cir.cmp(lt, %16, %20) : !u64i, !cir.bool loc(#loc97)
          cir.condition(%21) loc(#loc34)
        } body {
          cir.scope {
            %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc37)
            %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc37)
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
            %21 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc40)
            cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc99)
          } loc(#loc98)
          cir.yield loc(#loc28)
        } step {
          %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc43)
          cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc100)
          cir.yield loc(#loc94)
        } loc(#loc94)
      } loc(#loc94)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    } loc(#loc90)
    cir.return loc(#loc10)
  } loc(#loc87)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s8i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc83)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc105)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc106)
      %9 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc83)
      cir.copy %9 to %6 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc83)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc60)
      %11 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc61)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc60)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc107)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc66)
        cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc109)
        cir.for : cond {
          %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc68)
          %17 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc69)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc70)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc70)
          %20 = cir.binop(add, %17, %19) : !u64i loc(#loc110)
          %21 = cir.cmp(lt, %16, %20) : !u64i, !cir.bool loc(#loc111)
          cir.condition(%21) loc(#loc71)
        } body {
          cir.scope {
            %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc73)
            %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc74)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc74)
            %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc74)
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            %21 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc77)
            cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc113)
          } loc(#loc112)
          cir.yield loc(#loc65)
        } step {
          %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc80)
          cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc114)
          cir.yield loc(#loc108)
        } loc(#loc108)
      } loc(#loc108)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    } loc(#loc104)
    cir.return loc(#loc47)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":55:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":55:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":33:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":33:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":44:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":31:30)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":29:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":31:19)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":31:29)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":43:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":34:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":34:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":34:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":35:21)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":35:28)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":35:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":35:34)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":41:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:21)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:37)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:23)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":39:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":40:30)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":40:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":40:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":40:18)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":40:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":40:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:41)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":38:40)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":42:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":42:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":51:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":66:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":53:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":53:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":52:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":53:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":53:29)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":54:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":65:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":56:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":56:16)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":56:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":57:21)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":57:28)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":57:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":57:34)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":63:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:18)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:14)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:37)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":61:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":62:30)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":62:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":62:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":62:18)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":62:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":62:31)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:41)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":60:40)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":64:19)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_66b.c":64:9)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc86 = loc(fused[#loc7, #loc8])
#loc87 = loc(fused[#loc9, #loc10])
#loc89 = loc(fused[#loc13, #loc14])
#loc90 = loc(fused[#loc18, #loc19])
#loc91 = loc(fused[#loc20, #loc21])
#loc92 = loc(fused[#loc20, #loc22])
#loc93 = loc(fused[#loc25, #loc26])
#loc94 = loc(fused[#loc27, #loc28])
#loc95 = loc(fused[#loc30, #loc29])
#loc96 = loc(fused[#loc32, #loc33])
#loc97 = loc(fused[#loc31, #loc33])
#loc98 = loc(fused[#loc35, #loc28])
#loc99 = loc(fused[#loc38, #loc41])
#loc100 = loc(fused[#loc43, #loc42])
#loc101 = loc(fused[#loc46, #loc47])
#loc103 = loc(fused[#loc50, #loc51])
#loc104 = loc(fused[#loc55, #loc56])
#loc105 = loc(fused[#loc57, #loc58])
#loc106 = loc(fused[#loc57, #loc59])
#loc107 = loc(fused[#loc62, #loc63])
#loc108 = loc(fused[#loc64, #loc65])
#loc109 = loc(fused[#loc67, #loc66])
#loc110 = loc(fused[#loc69, #loc70])
#loc111 = loc(fused[#loc68, #loc70])
#loc112 = loc(fused[#loc72, #loc65])
#loc113 = loc(fused[#loc75, #loc78])
#loc114 = loc(fused[#loc80, #loc79])
