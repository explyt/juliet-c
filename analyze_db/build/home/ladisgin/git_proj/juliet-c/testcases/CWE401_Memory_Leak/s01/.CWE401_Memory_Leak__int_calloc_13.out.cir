!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc69 = loc("CWE401_Memory_Leak__int_calloc_13.c":157:10)
#loc70 = loc("CWE401_Memory_Leak__int_calloc_13.c":157:14)
#loc71 = loc("CWE401_Memory_Leak__int_calloc_13.c":157:20)
#loc72 = loc("CWE401_Memory_Leak__int_calloc_13.c":157:32)
#loc258 = loc(fused[#loc69, #loc70])
#loc259 = loc(fused[#loc71, #loc72])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc229)
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc230)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc231)
  cir.func private @printIntLine(!s32i) loc(#loc232)
  cir.func no_proto @CWE401_Memory_Leak__int_calloc_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc235)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc237)
      cir.if %5 {
        %6 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc20)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc21)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc239)
        %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc240)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc241)
        cir.scope {
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
          %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
          %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc243)
          cir.if %23 {
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc33)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc244)
        } loc(#loc242)
        %12 = cir.const #cir.int<5> : !s32i loc(#loc34)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc37)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc245)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc40)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc38)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc41)
      } loc(#loc238)
    } loc(#loc236)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc44)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc45)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc247)
      cir.if %5 {
      } loc(#loc248)
    } loc(#loc246)
    cir.return loc(#loc10)
  } loc(#loc233)
  cir.func no_proto @CWE401_Memory_Leak__int_calloc_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc48)
  } loc(#loc249)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc254)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc255)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc66)
  cir.func @main(%arg0: !s32i loc(fused[#loc69, #loc70]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc71, #loc72])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc259)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc73)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc75)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc75)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc76)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %8 = cir.get_global @CWE401_Memory_Leak__int_calloc_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call @CWE401_Memory_Leak__int_calloc_13_good() : () -> () loc(#loc78)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %13 = cir.get_global @CWE401_Memory_Leak__int_calloc_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE401_Memory_Leak__int_calloc_13_bad() : () -> () loc(#loc82)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    cir.return %17 : !s32i loc(#loc262)
  } loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc87)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc263)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc265)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc94)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc266)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc99)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc268)
      cir.if %5 {
        %6 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc101)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc102)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc102)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc270)
        %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc271)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc272)
        cir.scope {
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
          %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc110)
          %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc274)
          cir.if %23 {
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc114)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
          } loc(#loc275)
        } loc(#loc273)
        %12 = cir.const #cir.int<5> : !s32i loc(#loc115)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc117)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc118)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc276)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc120)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc121)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc122)
      } loc(#loc269)
    } loc(#loc267)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc278)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc130)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc131)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc132)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
      } loc(#loc279)
    } loc(#loc277)
    cir.return loc(#loc91)
  } loc(#loc264)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc137)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc142)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc284)
      cir.if %5 {
        %6 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc144)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc145)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc145)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc286)
        %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc287)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc288)
        cir.scope {
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
          %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc153)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc153)
          %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc290)
          cir.if %23 {
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc155)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc156)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc157)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc155)
          } loc(#loc291)
        } loc(#loc289)
        %12 = cir.const #cir.int<5> : !s32i loc(#loc158)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc160)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc161)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc292)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc163)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc164)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc162)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc165)
      } loc(#loc285)
    } loc(#loc283)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc169)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc294)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc171)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc172)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc171)
      } loc(#loc295)
    } loc(#loc293)
    cir.return loc(#loc134)
  } loc(#loc280)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc297)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc177)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc298)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc182)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc300)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc187)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc188)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc188)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc188)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc188)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc188)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc188)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc188)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc302)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc190)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc192)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc193)
        cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc303)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc195)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc196)
        %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc194)
        cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc197)
      } loc(#loc301)
    } loc(#loc299)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc201)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc305)
      cir.if %5 {
      } loc(#loc306)
    } loc(#loc304)
    cir.return loc(#loc174)
  } loc(#loc296)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc308)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc207)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc309)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc211)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc212)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc311)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc214)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc214)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc214)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc214)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc214)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc214)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc214)
        cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc313)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc216)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc218)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc219)
        cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc314)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc220)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc221)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc222)
        %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc220)
        cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc223)
      } loc(#loc312)
    } loc(#loc310)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc229)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc227)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc316)
      cir.if %5 {
      } loc(#loc317)
    } loc(#loc315)
    cir.return loc(#loc204)
  } loc(#loc307)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdlib.h":675:1)
#loc4 = loc("/usr/include/stdlib.h":676:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE401_Memory_Leak__int_calloc_13.c":24:1)
#loc10 = loc("CWE401_Memory_Leak__int_calloc_13.c":42:1)
#loc11 = loc("CWE401_Memory_Leak__int_calloc_13.c":26:5)
#loc12 = loc("CWE401_Memory_Leak__int_calloc_13.c":26:11)
#loc13 = loc("CWE401_Memory_Leak__int_calloc_13.c":27:12)
#loc14 = loc("CWE401_Memory_Leak__int_calloc_13.c":27:5)
#loc15 = loc("CWE401_Memory_Leak__int_calloc_13.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__int_calloc_13.c":36:5)
#loc17 = loc("CWE401_Memory_Leak__int_calloc_13.c":28:8)
#loc18 = loc("CWE401_Memory_Leak__int_calloc_13.c":28:27)
#loc19 = loc("CWE401_Memory_Leak__int_calloc_13.c":29:5)
#loc20 = loc("CWE401_Memory_Leak__int_calloc_13.c":31:23)
#loc21 = loc("CWE401_Memory_Leak__int_calloc_13.c":31:30)
#loc22 = loc("CWE401_Memory_Leak__int_calloc_13.c":31:35)
#loc23 = loc("CWE401_Memory_Leak__int_calloc_13.c":31:45)
#loc24 = loc("CWE401_Memory_Leak__int_calloc_13.c":31:46)
#loc25 = loc("CWE401_Memory_Leak__int_calloc_13.c":31:9)
#loc26 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:9)
#loc27 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:37)
#loc28 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:13)
#loc29 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:21)
#loc30 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:27)
#loc31 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:28)
#loc32 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:34)
#loc33 = loc("CWE401_Memory_Leak__int_calloc_13.c":32:33)
#loc34 = loc("CWE401_Memory_Leak__int_calloc_13.c":34:19)
#loc35 = loc("CWE401_Memory_Leak__int_calloc_13.c":34:9)
#loc36 = loc("CWE401_Memory_Leak__int_calloc_13.c":34:14)
#loc37 = loc("CWE401_Memory_Leak__int_calloc_13.c":34:15)
#loc38 = loc("CWE401_Memory_Leak__int_calloc_13.c":35:22)
#loc39 = loc("CWE401_Memory_Leak__int_calloc_13.c":35:27)
#loc40 = loc("CWE401_Memory_Leak__int_calloc_13.c":35:28)
#loc41 = loc("CWE401_Memory_Leak__int_calloc_13.c":35:9)
#loc42 = loc("CWE401_Memory_Leak__int_calloc_13.c":37:5)
#loc43 = loc("CWE401_Memory_Leak__int_calloc_13.c":41:5)
#loc44 = loc("CWE401_Memory_Leak__int_calloc_13.c":37:8)
#loc45 = loc("CWE401_Memory_Leak__int_calloc_13.c":37:27)
#loc46 = loc("CWE401_Memory_Leak__int_calloc_13.c":38:5)
#loc47 = loc("CWE401_Memory_Leak__int_calloc_13.c":140:1)
#loc48 = loc("CWE401_Memory_Leak__int_calloc_13.c":146:1)
#loc49 = loc("CWE401_Memory_Leak__int_calloc_13.c":142:5)
#loc50 = loc("CWE401_Memory_Leak__int_calloc_13.c":142:14)
#loc51 = loc("CWE401_Memory_Leak__int_calloc_13.c":143:5)
#loc52 = loc("CWE401_Memory_Leak__int_calloc_13.c":143:14)
#loc53 = loc("CWE401_Memory_Leak__int_calloc_13.c":144:5)
#loc54 = loc("CWE401_Memory_Leak__int_calloc_13.c":144:14)
#loc55 = loc("CWE401_Memory_Leak__int_calloc_13.c":145:5)
#loc56 = loc("CWE401_Memory_Leak__int_calloc_13.c":145:14)
#loc57 = loc("/usr/include/stdlib.h":575:1)
#loc58 = loc("/usr/include/stdlib.h":575:41)
#loc59 = loc("/usr/include/time.h":76:1)
#loc60 = loc("/usr/include/time.h":76:38)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc63 = loc("CWE401_Memory_Leak__int_calloc_13.c":162:15)
#loc64 = loc("CWE401_Memory_Leak__int_calloc_13.c":164:15)
#loc65 = loc("CWE401_Memory_Leak__int_calloc_13.c":167:15)
#loc66 = loc("CWE401_Memory_Leak__int_calloc_13.c":169:15)
#loc67 = loc("CWE401_Memory_Leak__int_calloc_13.c":157:1)
#loc68 = loc("CWE401_Memory_Leak__int_calloc_13.c":172:1)
#loc73 = loc("CWE401_Memory_Leak__int_calloc_13.c":158:1)
#loc74 = loc("CWE401_Memory_Leak__int_calloc_13.c":160:27)
#loc75 = loc("CWE401_Memory_Leak__int_calloc_13.c":160:22)
#loc76 = loc("CWE401_Memory_Leak__int_calloc_13.c":160:5)
#loc77 = loc("CWE401_Memory_Leak__int_calloc_13.c":162:5)
#loc78 = loc("CWE401_Memory_Leak__int_calloc_13.c":163:5)
#loc79 = loc("CWE401_Memory_Leak__int_calloc_13.c":163:44)
#loc80 = loc("CWE401_Memory_Leak__int_calloc_13.c":164:5)
#loc81 = loc("CWE401_Memory_Leak__int_calloc_13.c":167:5)
#loc82 = loc("CWE401_Memory_Leak__int_calloc_13.c":168:5)
#loc83 = loc("CWE401_Memory_Leak__int_calloc_13.c":168:43)
#loc84 = loc("CWE401_Memory_Leak__int_calloc_13.c":169:5)
#loc85 = loc("CWE401_Memory_Leak__int_calloc_13.c":171:12)
#loc86 = loc("CWE401_Memory_Leak__int_calloc_13.c":171:5)
#loc87 = loc("CWE401_Memory_Leak__int_calloc_13.c":65:19)
#loc88 = loc("/usr/include/stdlib.h":687:1)
#loc89 = loc("/usr/include/stdlib.h":687:32)
#loc90 = loc("CWE401_Memory_Leak__int_calloc_13.c":49:1)
#loc91 = loc("CWE401_Memory_Leak__int_calloc_13.c":72:1)
#loc92 = loc("CWE401_Memory_Leak__int_calloc_13.c":51:5)
#loc93 = loc("CWE401_Memory_Leak__int_calloc_13.c":51:11)
#loc94 = loc("CWE401_Memory_Leak__int_calloc_13.c":52:12)
#loc95 = loc("CWE401_Memory_Leak__int_calloc_13.c":52:5)
#loc96 = loc("CWE401_Memory_Leak__int_calloc_13.c":53:5)
#loc97 = loc("CWE401_Memory_Leak__int_calloc_13.c":61:5)
#loc98 = loc("CWE401_Memory_Leak__int_calloc_13.c":53:8)
#loc99 = loc("CWE401_Memory_Leak__int_calloc_13.c":53:27)
#loc100 = loc("CWE401_Memory_Leak__int_calloc_13.c":54:5)
#loc101 = loc("CWE401_Memory_Leak__int_calloc_13.c":56:23)
#loc102 = loc("CWE401_Memory_Leak__int_calloc_13.c":56:30)
#loc103 = loc("CWE401_Memory_Leak__int_calloc_13.c":56:35)
#loc104 = loc("CWE401_Memory_Leak__int_calloc_13.c":56:45)
#loc105 = loc("CWE401_Memory_Leak__int_calloc_13.c":56:46)
#loc106 = loc("CWE401_Memory_Leak__int_calloc_13.c":56:9)
#loc107 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:9)
#loc108 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:37)
#loc109 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:13)
#loc110 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:21)
#loc111 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:27)
#loc112 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:28)
#loc113 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:34)
#loc114 = loc("CWE401_Memory_Leak__int_calloc_13.c":57:33)
#loc115 = loc("CWE401_Memory_Leak__int_calloc_13.c":59:19)
#loc116 = loc("CWE401_Memory_Leak__int_calloc_13.c":59:9)
#loc117 = loc("CWE401_Memory_Leak__int_calloc_13.c":59:14)
#loc118 = loc("CWE401_Memory_Leak__int_calloc_13.c":59:15)
#loc119 = loc("CWE401_Memory_Leak__int_calloc_13.c":60:22)
#loc120 = loc("CWE401_Memory_Leak__int_calloc_13.c":60:27)
#loc121 = loc("CWE401_Memory_Leak__int_calloc_13.c":60:28)
#loc122 = loc("CWE401_Memory_Leak__int_calloc_13.c":60:9)
#loc123 = loc("CWE401_Memory_Leak__int_calloc_13.c":62:5)
#loc124 = loc("CWE401_Memory_Leak__int_calloc_13.c":71:5)
#loc125 = loc("CWE401_Memory_Leak__int_calloc_13.c":62:8)
#loc126 = loc("CWE401_Memory_Leak__int_calloc_13.c":62:27)
#loc127 = loc("CWE401_Memory_Leak__int_calloc_13.c":63:5)
#loc128 = loc("CWE401_Memory_Leak__int_calloc_13.c":66:5)
#loc129 = loc("CWE401_Memory_Leak__int_calloc_13.c":68:5)
#loc130 = loc("CWE401_Memory_Leak__int_calloc_13.c":65:9)
#loc131 = loc("CWE401_Memory_Leak__int_calloc_13.c":70:9)
#loc132 = loc("CWE401_Memory_Leak__int_calloc_13.c":70:14)
#loc133 = loc("CWE401_Memory_Leak__int_calloc_13.c":75:1)
#loc134 = loc("CWE401_Memory_Leak__int_calloc_13.c":93:1)
#loc135 = loc("CWE401_Memory_Leak__int_calloc_13.c":77:5)
#loc136 = loc("CWE401_Memory_Leak__int_calloc_13.c":77:11)
#loc137 = loc("CWE401_Memory_Leak__int_calloc_13.c":78:12)
#loc138 = loc("CWE401_Memory_Leak__int_calloc_13.c":78:5)
#loc139 = loc("CWE401_Memory_Leak__int_calloc_13.c":79:5)
#loc140 = loc("CWE401_Memory_Leak__int_calloc_13.c":87:5)
#loc141 = loc("CWE401_Memory_Leak__int_calloc_13.c":79:8)
#loc142 = loc("CWE401_Memory_Leak__int_calloc_13.c":79:27)
#loc143 = loc("CWE401_Memory_Leak__int_calloc_13.c":80:5)
#loc144 = loc("CWE401_Memory_Leak__int_calloc_13.c":82:23)
#loc145 = loc("CWE401_Memory_Leak__int_calloc_13.c":82:30)
#loc146 = loc("CWE401_Memory_Leak__int_calloc_13.c":82:35)
#loc147 = loc("CWE401_Memory_Leak__int_calloc_13.c":82:45)
#loc148 = loc("CWE401_Memory_Leak__int_calloc_13.c":82:46)
#loc149 = loc("CWE401_Memory_Leak__int_calloc_13.c":82:9)
#loc150 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:9)
#loc151 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:37)
#loc152 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:13)
#loc153 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:21)
#loc154 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:27)
#loc155 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:28)
#loc156 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:34)
#loc157 = loc("CWE401_Memory_Leak__int_calloc_13.c":83:33)
#loc158 = loc("CWE401_Memory_Leak__int_calloc_13.c":85:19)
#loc159 = loc("CWE401_Memory_Leak__int_calloc_13.c":85:9)
#loc160 = loc("CWE401_Memory_Leak__int_calloc_13.c":85:14)
#loc161 = loc("CWE401_Memory_Leak__int_calloc_13.c":85:15)
#loc162 = loc("CWE401_Memory_Leak__int_calloc_13.c":86:22)
#loc163 = loc("CWE401_Memory_Leak__int_calloc_13.c":86:27)
#loc164 = loc("CWE401_Memory_Leak__int_calloc_13.c":86:28)
#loc165 = loc("CWE401_Memory_Leak__int_calloc_13.c":86:9)
#loc166 = loc("CWE401_Memory_Leak__int_calloc_13.c":88:5)
#loc167 = loc("CWE401_Memory_Leak__int_calloc_13.c":92:5)
#loc168 = loc("CWE401_Memory_Leak__int_calloc_13.c":88:8)
#loc169 = loc("CWE401_Memory_Leak__int_calloc_13.c":88:27)
#loc170 = loc("CWE401_Memory_Leak__int_calloc_13.c":89:5)
#loc171 = loc("CWE401_Memory_Leak__int_calloc_13.c":91:9)
#loc172 = loc("CWE401_Memory_Leak__int_calloc_13.c":91:14)
#loc173 = loc("CWE401_Memory_Leak__int_calloc_13.c":96:1)
#loc174 = loc("CWE401_Memory_Leak__int_calloc_13.c":118:1)
#loc175 = loc("CWE401_Memory_Leak__int_calloc_13.c":98:5)
#loc176 = loc("CWE401_Memory_Leak__int_calloc_13.c":98:11)
#loc177 = loc("CWE401_Memory_Leak__int_calloc_13.c":99:12)
#loc178 = loc("CWE401_Memory_Leak__int_calloc_13.c":99:5)
#loc179 = loc("CWE401_Memory_Leak__int_calloc_13.c":100:5)
#loc180 = loc("CWE401_Memory_Leak__int_calloc_13.c":112:5)
#loc181 = loc("CWE401_Memory_Leak__int_calloc_13.c":100:8)
#loc182 = loc("CWE401_Memory_Leak__int_calloc_13.c":100:27)
#loc183 = loc("CWE401_Memory_Leak__int_calloc_13.c":101:5)
#loc184 = loc("CWE401_Memory_Leak__int_calloc_13.c":104:5)
#loc185 = loc("CWE401_Memory_Leak__int_calloc_13.c":106:5)
#loc186 = loc("CWE401_Memory_Leak__int_calloc_13.c":103:19)
#loc187 = loc("CWE401_Memory_Leak__int_calloc_13.c":103:9)
#loc188 = loc("CWE401_Memory_Leak__int_calloc_13.c":108:23)
#loc189 = loc("CWE401_Memory_Leak__int_calloc_13.c":108:9)
#loc190 = loc("CWE401_Memory_Leak__int_calloc_13.c":110:19)
#loc191 = loc("CWE401_Memory_Leak__int_calloc_13.c":110:9)
#loc192 = loc("CWE401_Memory_Leak__int_calloc_13.c":110:14)
#loc193 = loc("CWE401_Memory_Leak__int_calloc_13.c":110:15)
#loc194 = loc("CWE401_Memory_Leak__int_calloc_13.c":111:22)
#loc195 = loc("CWE401_Memory_Leak__int_calloc_13.c":111:27)
#loc196 = loc("CWE401_Memory_Leak__int_calloc_13.c":111:28)
#loc197 = loc("CWE401_Memory_Leak__int_calloc_13.c":111:9)
#loc198 = loc("CWE401_Memory_Leak__int_calloc_13.c":113:5)
#loc199 = loc("CWE401_Memory_Leak__int_calloc_13.c":117:5)
#loc200 = loc("CWE401_Memory_Leak__int_calloc_13.c":113:8)
#loc201 = loc("CWE401_Memory_Leak__int_calloc_13.c":113:27)
#loc202 = loc("CWE401_Memory_Leak__int_calloc_13.c":114:5)
#loc203 = loc("CWE401_Memory_Leak__int_calloc_13.c":121:1)
#loc204 = loc("CWE401_Memory_Leak__int_calloc_13.c":138:1)
#loc205 = loc("CWE401_Memory_Leak__int_calloc_13.c":123:5)
#loc206 = loc("CWE401_Memory_Leak__int_calloc_13.c":123:11)
#loc207 = loc("CWE401_Memory_Leak__int_calloc_13.c":124:12)
#loc208 = loc("CWE401_Memory_Leak__int_calloc_13.c":124:5)
#loc209 = loc("CWE401_Memory_Leak__int_calloc_13.c":125:5)
#loc210 = loc("CWE401_Memory_Leak__int_calloc_13.c":132:5)
#loc211 = loc("CWE401_Memory_Leak__int_calloc_13.c":125:8)
#loc212 = loc("CWE401_Memory_Leak__int_calloc_13.c":125:27)
#loc213 = loc("CWE401_Memory_Leak__int_calloc_13.c":126:5)
#loc214 = loc("CWE401_Memory_Leak__int_calloc_13.c":128:23)
#loc215 = loc("CWE401_Memory_Leak__int_calloc_13.c":128:9)
#loc216 = loc("CWE401_Memory_Leak__int_calloc_13.c":130:19)
#loc217 = loc("CWE401_Memory_Leak__int_calloc_13.c":130:9)
#loc218 = loc("CWE401_Memory_Leak__int_calloc_13.c":130:14)
#loc219 = loc("CWE401_Memory_Leak__int_calloc_13.c":130:15)
#loc220 = loc("CWE401_Memory_Leak__int_calloc_13.c":131:22)
#loc221 = loc("CWE401_Memory_Leak__int_calloc_13.c":131:27)
#loc222 = loc("CWE401_Memory_Leak__int_calloc_13.c":131:28)
#loc223 = loc("CWE401_Memory_Leak__int_calloc_13.c":131:9)
#loc224 = loc("CWE401_Memory_Leak__int_calloc_13.c":133:5)
#loc225 = loc("CWE401_Memory_Leak__int_calloc_13.c":137:5)
#loc226 = loc("CWE401_Memory_Leak__int_calloc_13.c":133:8)
#loc227 = loc("CWE401_Memory_Leak__int_calloc_13.c":133:27)
#loc228 = loc("CWE401_Memory_Leak__int_calloc_13.c":134:5)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc9, #loc10])
#loc234 = loc(fused[#loc11, #loc12])
#loc235 = loc(fused[#loc14, #loc13])
#loc236 = loc(fused[#loc15, #loc16])
#loc237 = loc(fused[#loc17, #loc18])
#loc238 = loc(fused[#loc19, #loc16])
#loc239 = loc(fused[#loc22, #loc23])
#loc240 = loc(fused[#loc20, #loc24])
#loc241 = loc(fused[#loc25, #loc24])
#loc242 = loc(fused[#loc26, #loc27])
#loc243 = loc(fused[#loc28, #loc29])
#loc244 = loc(fused[#loc30, #loc27])
#loc245 = loc(fused[#loc35, #loc34])
#loc246 = loc(fused[#loc42, #loc43])
#loc247 = loc(fused[#loc44, #loc45])
#loc248 = loc(fused[#loc46, #loc43])
#loc249 = loc(fused[#loc47, #loc48])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc51, #loc52])
#loc252 = loc(fused[#loc53, #loc54])
#loc253 = loc(fused[#loc55, #loc56])
#loc254 = loc(fused[#loc57, #loc58])
#loc255 = loc(fused[#loc59, #loc60])
#loc256 = loc(fused[#loc61, #loc62])
#loc257 = loc(fused[#loc67, #loc68])
#loc260 = loc(fused[#loc78, #loc79])
#loc261 = loc(fused[#loc82, #loc83])
#loc262 = loc(fused[#loc86, #loc85])
#loc263 = loc(fused[#loc88, #loc89])
#loc264 = loc(fused[#loc90, #loc91])
#loc265 = loc(fused[#loc92, #loc93])
#loc266 = loc(fused[#loc95, #loc94])
#loc267 = loc(fused[#loc96, #loc97])
#loc268 = loc(fused[#loc98, #loc99])
#loc269 = loc(fused[#loc100, #loc97])
#loc270 = loc(fused[#loc103, #loc104])
#loc271 = loc(fused[#loc101, #loc105])
#loc272 = loc(fused[#loc106, #loc105])
#loc273 = loc(fused[#loc107, #loc108])
#loc274 = loc(fused[#loc109, #loc110])
#loc275 = loc(fused[#loc111, #loc108])
#loc276 = loc(fused[#loc116, #loc115])
#loc277 = loc(fused[#loc123, #loc124])
#loc278 = loc(fused[#loc125, #loc126])
#loc279 = loc(fused[#loc127, #loc128, #loc129, #loc124])
#loc280 = loc(fused[#loc133, #loc134])
#loc281 = loc(fused[#loc135, #loc136])
#loc282 = loc(fused[#loc138, #loc137])
#loc283 = loc(fused[#loc139, #loc140])
#loc284 = loc(fused[#loc141, #loc142])
#loc285 = loc(fused[#loc143, #loc140])
#loc286 = loc(fused[#loc146, #loc147])
#loc287 = loc(fused[#loc144, #loc148])
#loc288 = loc(fused[#loc149, #loc148])
#loc289 = loc(fused[#loc150, #loc151])
#loc290 = loc(fused[#loc152, #loc153])
#loc291 = loc(fused[#loc154, #loc151])
#loc292 = loc(fused[#loc159, #loc158])
#loc293 = loc(fused[#loc166, #loc167])
#loc294 = loc(fused[#loc168, #loc169])
#loc295 = loc(fused[#loc170, #loc167])
#loc296 = loc(fused[#loc173, #loc174])
#loc297 = loc(fused[#loc175, #loc176])
#loc298 = loc(fused[#loc178, #loc177])
#loc299 = loc(fused[#loc179, #loc180])
#loc300 = loc(fused[#loc181, #loc182])
#loc301 = loc(fused[#loc183, #loc184, #loc185, #loc180])
#loc302 = loc(fused[#loc189, #loc188])
#loc303 = loc(fused[#loc191, #loc190])
#loc304 = loc(fused[#loc198, #loc199])
#loc305 = loc(fused[#loc200, #loc201])
#loc306 = loc(fused[#loc202, #loc199])
#loc307 = loc(fused[#loc203, #loc204])
#loc308 = loc(fused[#loc205, #loc206])
#loc309 = loc(fused[#loc208, #loc207])
#loc310 = loc(fused[#loc209, #loc210])
#loc311 = loc(fused[#loc211, #loc212])
#loc312 = loc(fused[#loc213, #loc210])
#loc313 = loc(fused[#loc215, #loc214])
#loc314 = loc(fused[#loc217, #loc216])
#loc315 = loc(fused[#loc224, #loc225])
#loc316 = loc(fused[#loc226, #loc227])
#loc317 = loc(fused[#loc228, #loc225])
