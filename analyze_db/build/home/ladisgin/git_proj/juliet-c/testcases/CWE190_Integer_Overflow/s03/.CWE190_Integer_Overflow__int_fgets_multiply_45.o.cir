!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc148)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc149)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc150)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_fgets_multiply_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc152)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc154)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc155)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc154)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc154)
    cir.br ^bb2 loc(#loc158)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc24)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc25)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc25)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc25)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc25)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc25)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc25)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc149)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc160)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc33)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb5 loc(#loc30)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %24 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_45_badData : !cir.ptr<!s32i> loc(#loc152)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %25 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %25() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc13)
  } loc(#loc153)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc164)
  cir.func private @printIntLine(!s32i) loc(#loc167)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc170)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_45_badData : !cir.ptr<!s32i> loc(#loc152)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc172)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %9 = cir.binop(mul, %7, %8) nsw : !s32i loc(#loc60)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc62)
    cir.br ^bb3 loc(#loc56)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc56)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc50)
  } loc(#loc168)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc71)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData : !cir.ptr<!s32i> loc(#loc174)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc66)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_45_goodG2BData : !cir.ptr<!s32i> loc(#loc174)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc80)
    %9 = cir.binop(mul, %7, %8) nsw : !s32i loc(#loc88)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc90)
    cir.br ^bb3 loc(#loc84)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc84)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc78)
  } loc(#loc181)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc187)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc189)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc190)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc189)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc189)
    cir.br ^bb2 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc106)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc106)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc106)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc106)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc106)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc106)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc106)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc106)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc149)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc108)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc195)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc114)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb5 loc(#loc111)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc117)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %24 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData : !cir.ptr<!s32i> loc(#loc187)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %25 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %25() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc121)
    cir.return loc(#loc94)
  } loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc123)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc201)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_45_goodB2GData : !cir.ptr<!s32i> loc(#loc187)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %6 ^bb2, ^bb8 loc(#loc204)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc205)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc138)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc139)
    %10 = cir.binop(div, %8, %9) : !s32i loc(#loc206)
    %11 = cir.cmp(lt, %7, %10) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %11 ^bb4, ^bb5 loc(#loc208)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc144)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc146)
    cir.br ^bb6 loc(#loc142)
  ^bb5:  // pred: ^bb3
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc123)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    cir.br ^bb6 loc(#loc136)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc136)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc131)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc131)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc125)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":54:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":22:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":22:12)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":39:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":59:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":45:9)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":45:45)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":41:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":41:9)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":43:12)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":43:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":44:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":56:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":47:9)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":55:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":47:19)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":47:32)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":47:49)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":47:13)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":47:59)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":48:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":51:9)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":53:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":50:25)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":50:20)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":50:13)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":50:36)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":54:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":57:62)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":57:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":58:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":58:13)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":129:1)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":133:1)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":131:5)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":131:13)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":132:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":132:13)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":28:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":37:1)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":34:9)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":34:29)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":30:5)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":30:16)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":31:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":36:5)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":31:8)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":31:15)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":32:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":34:22)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":35:22)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":35:9)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":23:1)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":23:12)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":77:1)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":86:1)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":79:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":79:9)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":81:12)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":81:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":83:12)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":83:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":84:66)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":84:5)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":85:5)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":85:17)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":66:1)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":75:1)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":72:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":72:29)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":68:5)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":68:16)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":69:5)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":74:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":69:8)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":69:15)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":70:5)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":72:22)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":73:22)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":73:9)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":24:1)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":24:12)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":107:1)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":127:1)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":113:9)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":113:45)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":109:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":109:9)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":111:12)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":111:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":112:5)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":124:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":115:9)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":123:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":115:19)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":115:32)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":115:49)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":115:13)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":115:59)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":116:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":119:9)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":121:9)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":118:25)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":118:20)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":118:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":118:36)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":122:23)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":122:13)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":125:66)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":125:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":126:5)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":126:17)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":102:23)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":89:1)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":105:1)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":97:13)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":97:33)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":91:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":91:16)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":92:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":104:5)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":92:8)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":92:15)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":93:5)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":95:9)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":103:9)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":95:13)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":95:21)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":95:29)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":95:30)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":96:9)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":99:9)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":101:9)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":97:26)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":98:26)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":98:13)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_multiply_45.c":102:13)
#loc148 = loc(fused[#loc1, #loc2])
#loc149 = loc(fused[#loc3, #loc4])
#loc150 = loc(fused[#loc5, #loc6])
#loc151 = loc(fused[#loc7, #loc8])
#loc152 = loc(fused[#loc10, #loc11])
#loc153 = loc(fused[#loc12, #loc13])
#loc154 = loc(fused[#loc14, #loc15])
#loc155 = loc(fused[#loc16, #loc17])
#loc156 = loc(fused[#loc19, #loc18])
#loc157 = loc(fused[#loc20, #loc21])
#loc158 = loc(fused[#loc22, #loc23])
#loc159 = loc(fused[#loc27, #loc28])
#loc160 = loc(fused[#loc29, #loc30, #loc31, #loc23])
#loc161 = loc(fused[#loc34, #loc35])
#loc162 = loc(fused[#loc38, #loc37])
#loc163 = loc(fused[#loc39, #loc40])
#loc164 = loc(fused[#loc41, #loc42])
#loc165 = loc(fused[#loc43, #loc44])
#loc166 = loc(fused[#loc45, #loc46])
#loc167 = loc(fused[#loc47, #loc48])
#loc168 = loc(fused[#loc49, #loc50])
#loc169 = loc(fused[#loc51, #loc52])
#loc170 = loc(fused[#loc53, #loc54])
#loc171 = loc(fused[#loc55, #loc56])
#loc172 = loc(fused[#loc57, #loc58])
#loc173 = loc(fused[#loc59, #loc56])
#loc174 = loc(fused[#loc63, #loc64])
#loc175 = loc(fused[#loc65, #loc66])
#loc176 = loc(fused[#loc67, #loc68])
#loc177 = loc(fused[#loc70, #loc69])
#loc178 = loc(fused[#loc72, #loc71])
#loc179 = loc(fused[#loc74, #loc73])
#loc180 = loc(fused[#loc75, #loc76])
#loc181 = loc(fused[#loc77, #loc78])
#loc182 = loc(fused[#loc79, #loc80])
#loc183 = loc(fused[#loc81, #loc82])
#loc184 = loc(fused[#loc83, #loc84])
#loc185 = loc(fused[#loc85, #loc86])
#loc186 = loc(fused[#loc87, #loc84])
#loc187 = loc(fused[#loc91, #loc92])
#loc188 = loc(fused[#loc93, #loc94])
#loc189 = loc(fused[#loc95, #loc96])
#loc190 = loc(fused[#loc97, #loc98])
#loc191 = loc(fused[#loc100, #loc99])
#loc192 = loc(fused[#loc101, #loc102])
#loc193 = loc(fused[#loc103, #loc104])
#loc194 = loc(fused[#loc108, #loc109])
#loc195 = loc(fused[#loc110, #loc111, #loc112, #loc104])
#loc196 = loc(fused[#loc115, #loc116])
#loc197 = loc(fused[#loc120, #loc119])
#loc198 = loc(fused[#loc121, #loc122])
#loc199 = loc(fused[#loc124, #loc125])
#loc200 = loc(fused[#loc126, #loc127])
#loc201 = loc(fused[#loc128, #loc129])
#loc202 = loc(fused[#loc130, #loc131])
#loc203 = loc(fused[#loc132, #loc133])
#loc204 = loc(fused[#loc134, #loc131])
#loc205 = loc(fused[#loc135, #loc136])
#loc206 = loc(fused[#loc138, #loc139])
#loc207 = loc(fused[#loc137, #loc140])
#loc208 = loc(fused[#loc141, #loc142, #loc143, #loc136])
