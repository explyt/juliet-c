!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc1)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_63b_badSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc40)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_63_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc42)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc8)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc43)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc1)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc1)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc1)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc44)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_63b_badSink(%0) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc11)
    cir.return loc(#loc5)
  } loc(#loc41)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_63_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc46)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc14)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc47)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    cir.return loc(#loc13)
  } loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc18)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_63b_goodG2BSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc48)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc50)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc51)
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc18)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc18)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc52)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_63b_goodG2BSink(%0) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc28)
    cir.return loc(#loc22)
  } loc(#loc49)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_63b_goodB2GSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc53)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc55)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc56)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc37)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc37)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc37)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc57)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_63b_goodB2GSink(%0) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc39)
    cir.return loc(#loc32)
  } loc(#loc54)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":35:20)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":28:1)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":28:77)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":30:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":37:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":32:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":32:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":33:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":33:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":35:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":36:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":67:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":71:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":69:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":69:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":70:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":70:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":51:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":44:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":44:78)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":46:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":53:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":48:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":48:12)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":49:12)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":49:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":51:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":52:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":56:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":56:78)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":58:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":65:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":60:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":60:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":61:12)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":61:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":63:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":63:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_63a.c":64:5)
#loc40 = loc(fused[#loc2, #loc3])
#loc41 = loc(fused[#loc4, #loc5])
#loc42 = loc(fused[#loc6, #loc7])
#loc43 = loc(fused[#loc9, #loc8])
#loc44 = loc(fused[#loc10, #loc1])
#loc45 = loc(fused[#loc12, #loc13])
#loc46 = loc(fused[#loc14, #loc15])
#loc47 = loc(fused[#loc16, #loc17])
#loc48 = loc(fused[#loc19, #loc20])
#loc49 = loc(fused[#loc21, #loc22])
#loc50 = loc(fused[#loc23, #loc24])
#loc51 = loc(fused[#loc26, #loc25])
#loc52 = loc(fused[#loc27, #loc18])
#loc53 = loc(fused[#loc29, #loc30])
#loc54 = loc(fused[#loc31, #loc32])
#loc55 = loc(fused[#loc33, #loc34])
#loc56 = loc(fused[#loc36, #loc35])
#loc57 = loc(fused[#loc38, #loc37])
