!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":31:19)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":101:10)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":101:14)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":101:20)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":101:32)
#loc164 = loc(fused[#loc109, #loc110])
#loc165 = loc(fused[#loc111, #loc112])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc125)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func @_ZN49CWE194_Unexpected_Sign_Extension__rand_strncpy_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc129)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc130)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc131)
    %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc132)
    %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc133)
    cir.store %3, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc18)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc19)
    cir.store %6, %3 : !s16i, !cir.ptr<!s16i> loc(#loc134)
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc21)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %10 ^bb1, ^bb2 loc(#loc21)
  ^bb1:  // pred: ^bb0
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc21)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc21)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc21)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc21)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc21)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc21)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc21)
    cir.br ^bb3(%22 : !u32i) loc(#loc21)
  ^bb2:  // pred: ^bb0
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc21)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc21)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc21)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc21)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc21)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc21)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc21)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc21)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc21)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc21)
    cir.br ^bb3(%38 : !u32i) loc(#loc21)
  ^bb3(%39: !u32i loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":31:19)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc21)
    %41 = cir.cast(integral, %40 : !s32i), !s16i loc(#loc21)
    cir.store %41, %3 : !s16i, !cir.ptr<!s16i> loc(#loc135)
    cir.br ^bb5 loc(#loc136)
  ^bb5:  // pred: ^bb4
    %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc10)
    %43 = cir.load %42 : !cir.ptr<!s16i>, !s16i loc(#loc10)
    cir.store %43, %0 : !s16i, !cir.ptr<!s16i> loc(#loc129)
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // pred: ^bb5
    %44 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc131)
    cir.store %44, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %45 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %47 = cir.const #cir.int<65> : !s8i loc(#loc28)
    %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc28)
    %49 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc29)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %52 bytes from %46 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
    %53 = cir.const #cir.int<0> : !s8i loc(#loc33)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc34)
    %57 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %53, %58 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    cir.br ^bb7 loc(#loc140)
  ^bb7:  // pred: ^bb6
    %59 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc39)
    %60 = cir.cast(integral, %59 : !s16i), !s32i loc(#loc39)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %62 = cir.cmp(lt, %60, %61) : !s32i, !cir.bool loc(#loc141)
    cir.brcond %62 ^bb8, ^bb9 loc(#loc142)
  ^bb8:  // pred: ^bb7
    %63 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc42)
    %64 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %65 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %66 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc45)
    %67 = cir.cast(integral, %66 : !s16i), !u64i loc(#loc45)
    %68 = cir.call @strncpy(%64, %65, %67) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
    %69 = cir.const #cir.int<0> : !s8i loc(#loc46)
    %70 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc47)
    %71 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    %72 = cir.ptr_stride(%71 : !cir.ptr<!s8i>, %70 : !s16i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %69, %72 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc38)
  ^bb10:  // pred: ^bb9
    %73 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%73) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc24)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc8)
  } loc(#loc128)
  cir.func internal private @_ZN49CWE194_Unexpected_Sign_Extension__rand_strncpy_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc145)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc146)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc147)
    %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc148)
    %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc149)
    cir.store %3, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc62)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc63)
    cir.store %6, %3 : !s16i, !cir.ptr<!s16i> loc(#loc150)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc65)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc65)
    cir.store %10, %3 : !s16i, !cir.ptr<!s16i> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc54)
    %12 = cir.load %11 : !cir.ptr<!s16i>, !s16i loc(#loc54)
    cir.store %12, %0 : !s16i, !cir.ptr<!s16i> loc(#loc145)
    cir.br ^bb2 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc147)
    cir.store %13, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %16 = cir.const #cir.int<65> : !s8i loc(#loc73)
    %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc73)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc74)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc74)
    cir.libc.memset %21 bytes from %15 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %22 = cir.const #cir.int<0> : !s8i loc(#loc78)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc79)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb3 loc(#loc156)
  ^bb3:  // pred: ^bb2
    %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc84)
    %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc84)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %31 = cir.cmp(lt, %29, %30) : !s32i, !cir.bool loc(#loc157)
    cir.brcond %31 ^bb4, ^bb5 loc(#loc158)
  ^bb4:  // pred: ^bb3
    %32 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc87)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    %35 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc90)
    %36 = cir.cast(integral, %35 : !s16i), !u64i loc(#loc90)
    %37 = cir.call @strncpy(%33, %34, %36) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
    %38 = cir.const #cir.int<0> : !s8i loc(#loc91)
    %39 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc92)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s16i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    cir.br ^bb5 loc(#loc83)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc83)
  ^bb6:  // pred: ^bb5
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc52)
  } loc(#loc144)
  cir.func @_ZN49CWE194_Unexpected_Sign_Extension__rand_strncpy_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN49CWE194_Unexpected_Sign_Extension__rand_strncpy_33L7goodG2BEv() : () -> () loc(#loc98)
    cir.return loc(#loc97)
  } loc(#loc160)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc161)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.call @_ZN49CWE194_Unexpected_Sign_Extension__rand_strncpy_334goodEv() : () -> () loc(#loc118)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.call @_ZN49CWE194_Unexpected_Sign_Extension__rand_strncpy_333badEv() : () -> () loc(#loc121)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %15 : !s32i loc(#loc166)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":24:1)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":49:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":33:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":33:22)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":35:13)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":35:28)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":36:13)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":36:30)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":26:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":26:11)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":27:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":27:22)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":29:12)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":29:5)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":31:5)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":32:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":48:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":34:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":47:9)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":37:20)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":37:28)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":37:33)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":37:37)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":37:13)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":37:38)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":38:29)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":38:20)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":38:24)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":38:13)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":39:13)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":45:13)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":39:17)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":39:24)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":40:13)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":43:17)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":43:25)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":43:31)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":43:39)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":44:30)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":44:22)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":44:17)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":46:23)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":46:13)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":56:1)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":81:1)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":65:9)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":65:22)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":67:13)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":67:28)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":68:13)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":68:30)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":58:5)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":58:11)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":59:5)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":59:22)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":61:12)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":61:5)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":63:12)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":63:16)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":63:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":64:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":80:5)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":66:9)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":79:9)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":69:20)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":69:28)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":69:33)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":69:37)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":69:13)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":69:38)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":70:29)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":70:20)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":70:24)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":70:13)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":71:13)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":77:13)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":71:17)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":71:24)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":72:13)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":75:17)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":75:25)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":75:31)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":75:39)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":76:30)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":76:22)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":76:17)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":78:23)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":78:13)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":83:1)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":86:1)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":85:5)
#loc99 = loc("/usr/include/stdlib.h":575:1)
#loc100 = loc("/usr/include/stdlib.h":575:41)
#loc101 = loc("/usr/include/time.h":76:1)
#loc102 = loc("/usr/include/time.h":76:38)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":106:15)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":108:15)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":111:15)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":113:15)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":101:1)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":116:1)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":102:1)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":104:27)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":104:22)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":104:5)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":106:5)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":107:5)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":108:5)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":111:5)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":112:5)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":113:5)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":115:12)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp":115:5)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc16])
#loc133 = loc(fused[#loc17, #loc18])
#loc134 = loc(fused[#loc20, #loc19])
#loc135 = loc(fused[#loc22, #loc21])
#loc136 = loc(fused[#loc23, #loc24])
#loc137 = loc(fused[#loc25, #loc26])
#loc138 = loc(fused[#loc31, #loc32])
#loc139 = loc(fused[#loc36, #loc33])
#loc140 = loc(fused[#loc37, #loc38])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc41, #loc38])
#loc143 = loc(fused[#loc48, #loc46])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc59, #loc60])
#loc149 = loc(fused[#loc61, #loc62])
#loc150 = loc(fused[#loc64, #loc63])
#loc151 = loc(fused[#loc67, #loc66])
#loc152 = loc(fused[#loc68, #loc69])
#loc153 = loc(fused[#loc70, #loc71])
#loc154 = loc(fused[#loc76, #loc77])
#loc155 = loc(fused[#loc81, #loc78])
#loc156 = loc(fused[#loc82, #loc83])
#loc157 = loc(fused[#loc84, #loc85])
#loc158 = loc(fused[#loc86, #loc83])
#loc159 = loc(fused[#loc93, #loc91])
#loc160 = loc(fused[#loc96, #loc97])
#loc161 = loc(fused[#loc99, #loc100])
#loc162 = loc(fused[#loc101, #loc102])
#loc163 = loc(fused[#loc107, #loc108])
#loc166 = loc(fused[#loc124, #loc123])
