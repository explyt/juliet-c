!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":99:10)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":99:14)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":99:20)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":99:32)
#loc178 = loc(fused[#loc119, #loc120])
#loc179 = loc(fused[#loc121, #loc122])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc135)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc139)
  cir.func @_ZN58CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc142)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc18)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc20)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc20)
    %8 = cir.ternary(%7, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc20)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc20)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc20)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc20)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc20)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc20)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc20)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc20)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc20)
      cir.yield %21 : !u32i loc(#loc20)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc20)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc20)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc20)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc20)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc20)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc20)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc20)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc20)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc20)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc20)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc20)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc20)
      cir.yield %25 : !u32i loc(#loc20)
    }) : (!cir.bool) -> !u32i loc(#loc20)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc20)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.scope {
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc146)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc146)
      cir.scope {
        %13 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc148)
        cir.if %15 {
          %16 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc150)
          %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
          %18 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc34)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc34)
          %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
          cir.store %21, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
          cir.scope {
            %40 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %41 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
            %42 = cir.cmp(eq, %40, %41) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
            cir.if %42 {
              %43 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
              %44 = cir.const #cir.int<1> : !s32i loc(#loc41)
              %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc42)
              cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
            } loc(#loc154)
          } loc(#loc152)
          %22 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
          %24 = cir.const #cir.int<65> : !s8i loc(#loc44)
          %25 = cir.cast(integral, %24 : !s8i), !s32i loc(#loc44)
          %26 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc45)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc45)
          cir.libc.memset %29 bytes from %23 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
          %30 = cir.const #cir.int<0> : !s8i loc(#loc49)
          %31 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %32 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc51)
          %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc53)
          cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc156)
          %36 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
          cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
          %38 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
          cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
        } loc(#loc149)
      } loc(#loc147)
    } loc(#loc145)
    cir.return loc(#loc12)
  } loc(#loc140)
  cir.func internal private @_ZN58CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc159)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc63)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc65)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc67)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc163)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc163)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc76)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc77)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc165)
        cir.if %12 {
          %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc167)
          %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc81)
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc82)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc82)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
          cir.store %18, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
          cir.scope {
            %37 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
            %38 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc86)
            %39 = cir.cmp(eq, %37, %38) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
            cir.if %39 {
              %40 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc88)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc90)
              cir.call @exit(%42) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
            } loc(#loc171)
          } loc(#loc169)
          %19 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
          %21 = cir.const #cir.int<65> : !s8i loc(#loc92)
          %22 = cir.cast(integral, %21 : !s8i), !s32i loc(#loc92)
          %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc93)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc94)
          %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc93)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc93)
          cir.libc.memset %26 bytes from %20 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
          %27 = cir.const #cir.int<0> : !s8i loc(#loc97)
          %28 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
          %29 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc99)
          %30 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc99)
          %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc101)
          cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc173)
          %33 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc103)
          %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc104)
          %35 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
          cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc104)
        } loc(#loc166)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc59)
  } loc(#loc157)
  cir.func @_ZN58CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33L7goodG2BEv() : () -> () loc(#loc108)
    cir.return loc(#loc107)
  } loc(#loc174)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc175)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc126)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.call @_ZN58CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_334goodEv() : () -> () loc(#loc128)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.call @_ZN58CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_333badEv() : () -> () loc(#loc131)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %15 : !s32i loc(#loc180)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":24:1)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":48:1)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":26:5)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":26:9)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":27:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":27:20)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":29:13)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":29:12)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":29:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":31:12)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":31:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":32:5)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":47:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":33:9)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":33:20)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":35:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":46:9)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":35:13)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":35:20)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":36:9)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":39:13)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":39:52)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":39:41)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":39:48)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:13)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:47)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:17)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:31)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:37)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:38)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:44)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":40:43)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":42:20)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":42:32)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":42:37)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":42:42)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":42:13)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":42:43)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":43:34)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":43:13)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":43:24)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":43:29)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":43:30)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":44:23)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":44:13)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":45:13)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":45:18)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":55:1)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":79:1)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":57:5)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":57:9)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":58:5)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":58:20)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":60:13)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":60:12)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":60:5)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":62:12)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":62:16)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":62:5)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":63:5)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":78:5)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":64:9)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":64:20)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":66:9)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":77:9)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":66:13)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":66:20)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":67:9)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":70:13)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":70:52)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":70:41)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":70:48)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:13)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:47)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:17)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:31)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:37)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:38)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:44)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":71:43)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":73:20)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":73:32)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":73:37)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":73:42)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":73:13)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":73:43)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":74:34)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":74:13)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":74:24)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":74:29)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":74:30)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":75:23)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":75:13)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":76:13)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":76:18)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":81:1)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":84:1)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":83:5)
#loc109 = loc("/usr/include/stdlib.h":575:1)
#loc110 = loc("/usr/include/stdlib.h":575:41)
#loc111 = loc("/usr/include/time.h":76:1)
#loc112 = loc("/usr/include/time.h":76:38)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":104:15)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":106:15)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":109:15)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":111:15)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":99:1)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":114:1)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":100:1)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":102:27)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":102:22)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":102:5)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":104:5)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":105:5)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":106:5)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":109:5)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":110:5)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":111:5)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":113:12)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_33.cpp":113:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc19, #loc17])
#loc144 = loc(fused[#loc21, #loc20])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc24, #loc25])
#loc147 = loc(fused[#loc26, #loc27])
#loc148 = loc(fused[#loc28, #loc29])
#loc149 = loc(fused[#loc30, #loc27])
#loc150 = loc(fused[#loc31, #loc32])
#loc151 = loc(fused[#loc33, #loc32])
#loc152 = loc(fused[#loc35, #loc36])
#loc153 = loc(fused[#loc37, #loc38])
#loc154 = loc(fused[#loc39, #loc36])
#loc155 = loc(fused[#loc47, #loc48])
#loc156 = loc(fused[#loc50, #loc49])
#loc157 = loc(fused[#loc58, #loc59])
#loc158 = loc(fused[#loc60, #loc61])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc66, #loc64])
#loc161 = loc(fused[#loc69, #loc68])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc74, #loc75])
#loc165 = loc(fused[#loc76, #loc77])
#loc166 = loc(fused[#loc78, #loc75])
#loc167 = loc(fused[#loc79, #loc80])
#loc168 = loc(fused[#loc81, #loc80])
#loc169 = loc(fused[#loc83, #loc84])
#loc170 = loc(fused[#loc85, #loc86])
#loc171 = loc(fused[#loc87, #loc84])
#loc172 = loc(fused[#loc95, #loc96])
#loc173 = loc(fused[#loc98, #loc97])
#loc174 = loc(fused[#loc106, #loc107])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc117, #loc118])
#loc180 = loc(fused[#loc134, #loc133])
