!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc115)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_637badSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc116)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_633badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc120)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.scope {
      %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc21)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc124)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc23)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc25)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc125)
    } loc(#loc123)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc126)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc129)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc36)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc130)
    } loc(#loc128)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_637badSinkEPPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc39)
    cir.return loc(#loc8)
  } loc(#loc117)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6311goodG2BSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc132)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_63L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc136)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc50)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc137)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.scope {
      %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc60)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
      } loc(#loc141)
    } loc(#loc139)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc61)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc142)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.scope {
      %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc67)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc145)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc69)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc70)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc71)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
      } loc(#loc146)
    } loc(#loc144)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6311goodG2BSinkEPPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc74)
    cir.return loc(#loc43)
  } loc(#loc133)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6311goodB2GSinkEPPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc148)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_63L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc152)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc85)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc153)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc154)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.scope {
      %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc91)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc93)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc95)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
      } loc(#loc157)
    } loc(#loc155)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc96)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc158)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.scope {
      %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc102)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc104)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc106)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
      } loc(#loc162)
    } loc(#loc160)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_6311goodB2GSinkEPPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc109)
    cir.return loc(#loc78)
  } loc(#loc149)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_634goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_63L7goodG2BEv() : () -> () loc(#loc112)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_63L7goodB2GEv() : () -> () loc(#loc113)
    cir.return loc(#loc111)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":26:30)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":28:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":38:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":30:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":30:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":31:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":31:62)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":33:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":33:64)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":31:36)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":31:43)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":31:61)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:42)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:26)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:32)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:39)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":32:38)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":33:37)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":33:44)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":33:63)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:43)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:27)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:33)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:34)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:40)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":34:39)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":36:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":36:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":37:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":45:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":45:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":47:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":57:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":49:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":49:12)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":50:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":50:62)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":52:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":52:64)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":50:36)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":50:43)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":50:61)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:42)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:26)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:32)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:33)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:39)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":51:38)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":52:37)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":52:44)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":52:63)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:43)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:27)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:33)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:34)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:40)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":53:39)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":55:12)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":55:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":56:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":60:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":60:31)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":62:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":72:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":64:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":64:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":65:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":65:62)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":67:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":67:64)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":65:36)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":65:43)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":65:61)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:42)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:26)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:32)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:33)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:39)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":66:38)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":67:37)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":67:44)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":67:63)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:43)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:27)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:33)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:34)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:40)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":68:39)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":70:12)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":70:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":71:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":74:1)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":78:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":76:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_63a.cpp":77:5)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc11, #loc12])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc16, #loc17])
#loc122 = loc(fused[#loc15, #loc12])
#loc123 = loc(fused[#loc18, #loc19])
#loc124 = loc(fused[#loc20, #loc21])
#loc125 = loc(fused[#loc22, #loc19])
#loc126 = loc(fused[#loc27, #loc28])
#loc127 = loc(fused[#loc26, #loc14])
#loc128 = loc(fused[#loc29, #loc30])
#loc129 = loc(fused[#loc31, #loc32])
#loc130 = loc(fused[#loc33, #loc30])
#loc131 = loc(fused[#loc38, #loc37])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc42, #loc43])
#loc134 = loc(fused[#loc44, #loc45])
#loc135 = loc(fused[#loc46, #loc47])
#loc136 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc51, #loc52])
#loc138 = loc(fused[#loc50, #loc47])
#loc139 = loc(fused[#loc53, #loc54])
#loc140 = loc(fused[#loc55, #loc56])
#loc141 = loc(fused[#loc57, #loc54])
#loc142 = loc(fused[#loc62, #loc63])
#loc143 = loc(fused[#loc61, #loc49])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc66, #loc67])
#loc146 = loc(fused[#loc68, #loc65])
#loc147 = loc(fused[#loc73, #loc72])
#loc148 = loc(fused[#loc75, #loc76])
#loc149 = loc(fused[#loc77, #loc78])
#loc150 = loc(fused[#loc79, #loc80])
#loc151 = loc(fused[#loc81, #loc82])
#loc152 = loc(fused[#loc83, #loc84])
#loc153 = loc(fused[#loc86, #loc87])
#loc154 = loc(fused[#loc85, #loc82])
#loc155 = loc(fused[#loc88, #loc89])
#loc156 = loc(fused[#loc90, #loc91])
#loc157 = loc(fused[#loc92, #loc89])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc96, #loc84])
#loc160 = loc(fused[#loc99, #loc100])
#loc161 = loc(fused[#loc101, #loc102])
#loc162 = loc(fused[#loc103, #loc100])
#loc163 = loc(fused[#loc108, #loc107])
#loc164 = loc(fused[#loc110, #loc111])
