!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":24:23)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":24:28)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":57:27)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":57:32)
#loc103 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc54, #loc55])
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc101)
  cir.func internal private @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc8)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc8)
    %5 = cir.ternary(%4, true {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      cir.yield %19 : !u32i loc(#loc8)
    }, false {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      %20 = cir.unary(minus, %19) : !u32i, !u32i loc(#loc8)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc8)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc8)
      %23 = cir.binop(sub, %20, %22) : !u32i loc(#loc8)
      cir.yield %23 : !u32i loc(#loc8)
    }) : (!cir.bool) -> !u32i loc(#loc8)
    %6 = cir.cast(integral, %5 : !u32i), !s32i loc(#loc8)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.return loc(#loc4)
  } loc(#loc102)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.func @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc108)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.call @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc21)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc111)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc112)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc112)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc112)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
      %8 = cir.const #cir.int<65> : !s8i loc(#loc29)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc29)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc30)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc113)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc34)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc35)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc37)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc114)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc41)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc116)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc43)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc46)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
          %30 = cir.const #cir.int<0> : !s8i loc(#loc47)
          %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
          %32 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
          %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc49)
          cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc118)
        } loc(#loc117)
      } loc(#loc115)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    } loc(#loc110)
    cir.return loc(#loc15)
  } loc(#loc107)
  cir.func internal private @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc54, #loc55])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc56)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %3 = cir.binop(sub, %1, %2) nsw : !s32i loc(#loc57)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.return loc(#loc53)
  } loc(#loc119)
  cir.func internal private @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc65)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    cir.call @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc67)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc126)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc127)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc127)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc127)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
      %8 = cir.const #cir.int<65> : !s8i loc(#loc75)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc75)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc76)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc76)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc76)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc128)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc80)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc81)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc83)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc129)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc87)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc131)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc89)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc92)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
          %30 = cir.const #cir.int<0> : !s8i loc(#loc93)
          %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %32 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
          %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc95)
          cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc133)
        } loc(#loc132)
      } loc(#loc130)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    } loc(#loc125)
    cir.return loc(#loc61)
  } loc(#loc122)
  cir.func @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43L7goodG2BEv() : () -> () loc(#loc100)
    cir.return loc(#loc99)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":24:1)
#loc4 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":28:1)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":25:1)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":27:12)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":27:5)
#loc10 = loc("/usr/include/string.h":144:1)
#loc11 = loc("/usr/include/string.h":146:14)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":30:1)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":50:1)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":32:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":32:9)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":34:13)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":34:12)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":34:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":35:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":36:5)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":49:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":37:9)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":37:24)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":38:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":38:26)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":39:16)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":39:24)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":39:29)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":39:33)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":39:9)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":39:34)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":40:25)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":40:16)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":40:20)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":40:9)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":41:9)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":47:9)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":41:13)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":41:20)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":42:9)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":45:13)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":45:21)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":45:27)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":45:35)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":46:26)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":46:18)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":46:13)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":48:19)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":48:9)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":57:1)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":61:1)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":58:1)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":60:12)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":60:16)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":60:5)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":63:1)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":83:1)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":65:5)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":65:9)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":67:13)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":67:12)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":67:5)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":68:5)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":69:5)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":82:5)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":70:9)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":70:24)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":71:9)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":71:26)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":72:16)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":72:24)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":72:29)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":72:33)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":72:9)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":72:34)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":73:25)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":73:16)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":73:20)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":73:9)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":74:9)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":80:9)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":74:13)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":74:20)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":75:9)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":78:13)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":78:21)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":78:27)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":78:35)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":79:26)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":79:18)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":79:13)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":81:19)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":81:9)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":85:1)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":88:1)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_43.cpp":87:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc9, #loc8])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc14, #loc15])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc20, #loc18])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc24, #loc25])
#loc112 = loc(fused[#loc26, #loc27])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc37, #loc34])
#loc115 = loc(fused[#loc38, #loc39])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc42, #loc39])
#loc118 = loc(fused[#loc49, #loc47])
#loc119 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc59, #loc58])
#loc122 = loc(fused[#loc60, #loc61])
#loc123 = loc(fused[#loc62, #loc63])
#loc124 = loc(fused[#loc66, #loc64])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc72, #loc73])
#loc128 = loc(fused[#loc78, #loc79])
#loc129 = loc(fused[#loc83, #loc80])
#loc130 = loc(fused[#loc84, #loc85])
#loc131 = loc(fused[#loc86, #loc87])
#loc132 = loc(fused[#loc88, #loc85])
#loc133 = loc(fused[#loc95, #loc93])
#loc134 = loc(fused[#loc98, #loc99])
