!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc108)
  cir.func @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc112)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc113)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc8)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc114)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc18)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc116)
      cir.scope {
        %8 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc118)
        cir.scope {
          %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc120)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc29)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc29)
            cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc122)
            cir.for : cond {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %24 = cir.const #cir.int<100> : !s32i loc(#loc32)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc32)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc123)
              cir.condition(%26) loc(#loc123)
            } body {
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc34)
                %24 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc35)
                %25 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
                %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
                %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc125)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc38)
                %29 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc39)
                %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
                %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
                %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
                cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc126)
              } loc(#loc124)
              cir.yield loc(#loc28)
            } step {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc42)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc43)
              cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc127)
              cir.yield loc(#loc121)
            } loc(#loc121)
          } loc(#loc121)
        } loc(#loc119)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc44)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc46)
        %15 = cir.const #cir.int<8> : !u64i loc(#loc128)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc129)
        cir.libc.memmove %16 bytes from %12 to %10 : !cir.ptr<!void>, !u64i loc(#loc130)
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
        cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc54)
      } loc(#loc117)
    } loc(#loc115)
    cir.return loc(#loc4)
  } loc(#loc109)
  cir.func internal private @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc134)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc135)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc60)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc70)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
      cir.scope {
        %8 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc140)
        cir.scope {
          %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc142)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc81)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc81)
            cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc144)
            cir.for : cond {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc83)
              %24 = cir.const #cir.int<100> : !s32i loc(#loc84)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc84)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc145)
              cir.condition(%26) loc(#loc145)
            } body {
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc86)
                %24 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc87)
                %25 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
                %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
                %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc147)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc89)
                %29 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc90)
                %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
                %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
                %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
                cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc148)
              } loc(#loc146)
              cir.yield loc(#loc80)
            } step {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc92)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc93)
              cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc149)
              cir.yield loc(#loc143)
            } loc(#loc143)
          } loc(#loc143)
        } loc(#loc141)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc94)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc95)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc96)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc96)
        %15 = cir.const #cir.int<8> : !u64i loc(#loc150)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc151)
        cir.libc.memmove %16 bytes from %12 to %10 : !cir.ptr<!void>, !u64i loc(#loc152)
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
        cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc104)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc56)
  } loc(#loc131)
  cir.func @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_334goodEv() extra(#fn_attr) {
    cir.call @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33L7goodG2BEv() : () -> () loc(#loc107)
    cir.return loc(#loc106)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":24:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":51:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":26:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":26:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":27:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":27:32)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":28:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":28:35)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":29:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":29:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":32:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":32:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":50:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":34:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":34:32)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":35:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":49:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":36:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":36:37)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":37:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":45:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":38:17)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":38:24)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":44:17)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":41:17)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":42:40)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":42:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":42:21)
#loc37 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":43:40)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":43:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":43:21)
#loc41 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:39)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:38)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:27)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:35)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:39)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:59)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:60)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:35)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:36)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":58:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":84:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":60:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":60:21)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":61:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":61:32)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":62:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":62:35)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":63:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":63:37)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":65:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":65:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":66:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":83:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":67:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":67:32)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":68:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":82:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":69:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":69:37)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":70:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":78:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":71:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":71:24)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":77:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:29)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:33)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":74:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":75:40)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":75:28)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":75:21)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":76:40)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":76:28)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":76:21)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:39)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:38)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:21)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:27)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:35)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:39)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:59)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:60)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:30)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:35)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:36)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":86:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":89:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":88:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc14, #loc13])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc17, #loc18])
#loc117 = loc(fused[#loc19, #loc20])
#loc118 = loc(fused[#loc21, #loc22])
#loc119 = loc(fused[#loc23, #loc24])
#loc120 = loc(fused[#loc25, #loc26])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc30, #loc29])
#loc123 = loc(fused[#loc31, #loc32])
#loc124 = loc(fused[#loc33, #loc28])
#loc125 = loc(fused[#loc36, #loc34])
#loc126 = loc(fused[#loc40, #loc38])
#loc127 = loc(fused[#loc43, #loc42])
#loc128 = loc(fused[#loc47, #loc48])
#loc129 = loc(fused[#loc46, #loc48])
#loc130 = loc(fused[#loc49, #loc50])
#loc131 = loc(fused[#loc55, #loc56])
#loc132 = loc(fused[#loc57, #loc58])
#loc133 = loc(fused[#loc59, #loc60])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc63, #loc64])
#loc136 = loc(fused[#loc66, #loc65])
#loc137 = loc(fused[#loc67, #loc68])
#loc138 = loc(fused[#loc69, #loc70])
#loc139 = loc(fused[#loc71, #loc72])
#loc140 = loc(fused[#loc73, #loc74])
#loc141 = loc(fused[#loc75, #loc76])
#loc142 = loc(fused[#loc77, #loc78])
#loc143 = loc(fused[#loc79, #loc80])
#loc144 = loc(fused[#loc82, #loc81])
#loc145 = loc(fused[#loc83, #loc84])
#loc146 = loc(fused[#loc85, #loc80])
#loc147 = loc(fused[#loc88, #loc86])
#loc148 = loc(fused[#loc91, #loc89])
#loc149 = loc(fused[#loc93, #loc92])
#loc150 = loc(fused[#loc97, #loc98])
#loc151 = loc(fused[#loc96, #loc98])
#loc152 = loc(fused[#loc99, #loc100])
#loc153 = loc(fused[#loc105, #loc106])
