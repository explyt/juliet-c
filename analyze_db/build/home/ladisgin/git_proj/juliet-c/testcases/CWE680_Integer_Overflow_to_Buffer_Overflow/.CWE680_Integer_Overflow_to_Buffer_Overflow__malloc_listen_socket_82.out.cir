!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":30:7)
#loc154 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":40:7)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":162:10)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":162:14)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":162:20)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":162:32)
#loc207 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":21:7)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc279 = loc(fused[#loc189, #loc190])
#loc280 = loc(fused[#loc191, #loc192])
!ty_anon_struct = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_anon_struct1 = !cir.struct<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base = !cir.struct<class "CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82::CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad = !cir.struct<class "CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82::CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad" {!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base} #cir.record.decl.ast>
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B = !cir.struct<class "CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82::CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B" {!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc208)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc209)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc210)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc211)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc212)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc213)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc214)
  cir.func private @close(!s32i) -> !s32i loc(#loc215)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc216)
  cir.func linkonce_odr @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8271CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_badC2Ev(%arg0: !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad> loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":30:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc19)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad>> loc(#loc19)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad> loc(#loc19)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc19)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>) -> () extra(#fn_attr) loc(#loc19)
    %3 = cir.vtable.address_point(@_ZTVN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8271CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_badE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc217)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc19)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc19)
    cir.return loc(#loc19)
  } loc(#loc19)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc218)
  cir.func @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823badEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc31)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.scope {
      %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc224)
      %17 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc225)
      %18 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc226)
      %19 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc227)
      %20 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc228)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc40)
      cir.store %22, %18 : !s32i, !cir.ptr<!s32i> loc(#loc226)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc42)
      cir.store %24, %19 : !s32i, !cir.ptr<!s32i> loc(#loc227)
      cir.scope {
        cir.do {
          %25 = cir.const #cir.int<2> : !s32i loc(#loc47)
          %26 = cir.const #cir.int<1> : !u32i loc(#loc48)
          %27 = cir.cast(integral, %26 : !u32i), !s32i loc(#loc48)
          %28 = cir.const #cir.int<6> : !u32i loc(#loc49)
          %29 = cir.cast(integral, %28 : !u32i), !s32i loc(#loc49)
          %30 = cir.call @socket(%25, %27, %29) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
          cir.store %30, %18 : !s32i, !cir.ptr<!s32i> loc(#loc230)
          cir.scope {
            %71 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %72 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc56)
            %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc232)
            cir.if %74 {
              cir.break loc(#loc58)
            } loc(#loc233)
          } loc(#loc231)
          %31 = cir.cast(bitcast, %17 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc234)
          %32 = cir.const #cir.int<0> : !s32i loc(#loc61)
          %33 = cir.const #cir.int<16> : !u64i loc(#loc235)
          cir.libc.memset %33 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
          %34 = cir.const #cir.int<2> : !s32i loc(#loc66)
          %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc66)
          %36 = cir.get_member %17[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc237)
          %37 = cir.const #cir.int<0> : !s32i loc(#loc69)
          %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc69)
          %39 = cir.get_member %17[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
          %40 = cir.get_member %39[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
          cir.store %38, %40 : !u32i, !cir.ptr<!u32i> loc(#loc238)
          %41 = cir.const #cir.int<27015> : !s32i loc(#loc73)
          %42 = cir.cast(integral, %41 : !s32i), !u16i loc(#loc73)
          %43 = cir.call @htons(%42) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
          %44 = cir.get_member %17[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
          cir.store %43, %44 : !u16i, !cir.ptr<!u16i> loc(#loc239)
          cir.scope {
            %71 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %72 = cir.cast(bitcast, %17 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc241)
            %73 = cir.const #cir.int<16> : !u64i loc(#loc242)
            %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc242)
            %75 = cir.call @bind(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
            %76 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc86)
            %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc243)
            cir.if %78 {
              cir.break loc(#loc88)
            } loc(#loc244)
          } loc(#loc240)
          cir.scope {
            %71 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc91)
            %72 = cir.const #cir.int<5> : !s32i loc(#loc92)
            %73 = cir.call @listen(%71, %72) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc94)
            %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc246)
            cir.if %76 {
              cir.break loc(#loc96)
            } loc(#loc247)
          } loc(#loc245)
          %45 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %46 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
          %47 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
          %48 = cir.call @accept(%45, %46, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
          cir.store %48, %19 : !s32i, !cir.ptr<!s32i> loc(#loc248)
          cir.scope {
            %71 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            %72 = cir.const #cir.int<1> : !s32i loc(#loc106)
            %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc106)
            %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc250)
            cir.if %74 {
              cir.break loc(#loc108)
            } loc(#loc251)
          } loc(#loc249)
          %49 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          %50 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
          %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
          %52 = cir.const #cir.int<3> : !s32i loc(#loc111)
          %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc111)
          %54 = cir.const #cir.int<4> : !u64i loc(#loc111)
          %55 = cir.binop(mul, %53, %54) : !u64i loc(#loc111)
          %56 = cir.const #cir.int<2> : !s32i loc(#loc111)
          %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc111)
          %58 = cir.binop(add, %55, %57) : !u64i loc(#loc111)
          %59 = cir.const #cir.int<1> : !s32i loc(#loc112)
          %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc112)
          %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc252)
          %62 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %63 = cir.call @recv(%49, %51, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
          %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc114)
          cir.store %64, %16 : !s32i, !cir.ptr<!s32i> loc(#loc253)
          cir.scope {
            %71 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %72 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc120)
            %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc255)
            %75 = cir.ternary(%74, true {
              %76 = cir.const #true loc(#loc121)
              cir.yield %76 : !cir.bool loc(#loc121)
            }, false {
              %76 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %77 = cir.const #cir.int<0> : !s32i loc(#loc123)
              %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc256)
              %79 = cir.ternary(%78, true {
                %80 = cir.const #true loc(#loc121)
                cir.yield %80 : !cir.bool loc(#loc121)
              }, false {
                %80 = cir.const #false loc(#loc121)
                cir.yield %80 : !cir.bool loc(#loc121)
              }) : (!cir.bool) -> !cir.bool loc(#loc121)
              cir.yield %79 : !cir.bool loc(#loc121)
            }) : (!cir.bool) -> !cir.bool loc(#loc121)
            cir.if %75 {
              cir.break loc(#loc125)
            } loc(#loc257)
          } loc(#loc254)
          %65 = cir.const #cir.int<0> : !s8i loc(#loc126)
          %66 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %67 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
          %68 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %66 : !s32i), !cir.ptr<!s8i> loc(#loc128)
          cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc258)
          %69 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
          %70 = cir.call @atoi(%69) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
          cir.store %70, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
          cir.yield loc(#loc46)
        } while {
          %25 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc133)
          cir.condition(%26) loc(#loc133)
        } loc(#loc229)
      } loc(#loc229)
      cir.scope {
        %25 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc137)
        %28 = cir.cmp(ne, %25, %27) : !s32i, !cir.bool loc(#loc261)
        cir.if %28 {
          %29 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %30 = cir.call @close(%29) : (!s32i) -> !s32i loc(#loc140)
        } loc(#loc262)
      } loc(#loc260)
      cir.scope {
        %25 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc143)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc144)
        %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc144)
        %28 = cir.cmp(ne, %25, %27) : !s32i, !cir.bool loc(#loc264)
        cir.if %28 {
          %29 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %30 = cir.call @close(%29) : (!s32i) -> !s32i loc(#loc147)
        } loc(#loc265)
      } loc(#loc263)
    } loc(#loc223)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc266)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc221)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad> loc(#loc266)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8271CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_badC2Ev(%6) : (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad>) -> () extra(#fn_attr) loc(#loc29)
    %7 = cir.base_class_addr(%6 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc148)
    cir.store %7, %1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>> loc(#loc221)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc149)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>> loc(#loc149)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>> loc(#loc149)
    %12 = cir.vtable.address_point( %11 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>> loc(#loc149)
    %13 = cir.load align(8) %12 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>> loc(#loc149)
    cir.call %13(%8, %9) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i) -> () loc(#loc151)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc152)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>), !cir.ptr<!void> loc(#loc152)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
    cir.return loc(#loc25)
  } loc(#loc219)
  cir.func linkonce_odr @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8275CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2BC2Ev(%arg0: !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B> loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":40:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc154)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B>> loc(#loc154)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B> loc(#loc154)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc154)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>) -> () extra(#fn_attr) loc(#loc154)
    %3 = cir.vtable.address_point(@_ZTVN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8275CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2BE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc267)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc154)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc154)
    cir.return loc(#loc154)
  } loc(#loc154)
  cir.func internal private @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc164)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc166)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc273)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc270)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B> loc(#loc273)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8275CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2BC2Ev(%7) : (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B>) -> () extra(#fn_attr) loc(#loc162)
    %8 = cir.base_class_addr(%7 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc168)
    cir.store %8, %1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>> loc(#loc270)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc169)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>> loc(#loc169)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>> loc(#loc169)
    %13 = cir.vtable.address_point( %12 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>> loc(#loc169)
    %14 = cir.load align(8) %13 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>> loc(#loc169)
    cir.call %14(%9, %10) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i)>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !s32i) -> () loc(#loc171)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc172)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>), !cir.ptr<!void> loc(#loc172)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc173)
    cir.return loc(#loc158)
  } loc(#loc268)
  cir.func @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_824goodEv() extra(#fn_attr2) {
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82L7goodG2BEv() : () -> () loc(#loc176)
    cir.return loc(#loc175)
  } loc(#loc274)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc275)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc276)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc277)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc186)
  cir.func @main(%arg0: !s32i loc(fused[#loc189, #loc190]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc191, #loc192])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc280)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc188)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc193)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc194)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc195)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc196)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc183)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_824goodEv() : () -> () loc(#loc198)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc184)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc185)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823badEv() : () -> () loc(#loc201)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc186)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc203)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    cir.return %15 : !s32i loc(#loc281)
  } loc(#loc278)
  cir.global linkonce_odr dsolocal @_ZTVN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseE> : !cir.ptr<!u8i>, #cir.global_view<@__cxa_pure_virtual> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc282)
  cir.func linkonce_odr @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseC2Ev(%arg0: !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":21:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, ["this", init] {alignment = 8 : i64} loc(#loc207)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>> loc(#loc207)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base> loc(#loc207)
    %2 = cir.vtable.address_point(@_ZTVN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc282)
    %3 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_823A3ACWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc207)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc207)
    cir.return loc(#loc207)
  } loc(#loc207)
  cir.global "private" external @_ZTVN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8271CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_badE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc217)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc205)
  cir.global linkonce_odr comdat @_ZTSN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseE = #cir.const_array<"N67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseE" : !cir.array<!s8i x 145>> : !cir.array<!s8i x 145> {alignment = 1 : i64} loc(#loc205)
  cir.global constant external @_ZTIN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8272CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc205)
  cir.func private @__cxa_pure_virtual() loc(#loc)
  cir.global "private" external @_ZTVN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_8275CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82_goodG2BE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc267)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc18 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc20 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":30:1)
#loc21 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":34:1)
#loc22 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc23 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":47:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":124:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":49:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":49:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":121:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":121:96)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":51:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":51:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":51:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":52:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":120:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":57:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":57:13)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":58:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":58:28)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":59:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":59:31)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":60:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":60:31)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":61:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":61:41)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":62:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":105:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":72:35)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":72:44)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":72:57)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":72:28)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":72:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":72:68)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":73:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":76:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":73:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":73:33)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":74:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":75:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":77:20)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":77:21)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":77:30)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":77:33)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":77:47)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":77:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":77:48)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":78:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":78:13)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":79:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":79:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":80:38)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":80:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":80:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":80:46)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":84:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:22)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:54)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:55)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:64)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:78)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":81:84)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":82:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":83:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":85:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":88:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":85:24)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":85:38)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":85:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":85:57)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":86:13)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":87:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":89:35)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":89:49)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":89:55)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":89:28)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":89:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":89:59)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":90:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":93:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":90:17)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":90:33)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":91:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":92:17)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:31)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:45)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:58)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:76)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:79)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:26)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":95:80)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":96:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":99:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":96:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":96:31)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":96:44)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":96:47)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":96:61)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":97:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":98:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":101:39)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":101:25)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":101:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":103:25)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":103:20)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":103:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":103:36)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":105:16)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":106:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":109:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":106:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":106:29)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":107:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":108:26)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":108:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":110:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":113:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":110:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":110:29)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":111:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":112:26)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":112:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":121:92)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":122:5)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":122:24)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":122:17)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":123:12)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":47:6)
#loc155 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":40:1)
#loc156 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":44:1)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":131:1)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":141:1)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":133:5)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":133:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":138:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":138:96)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":135:13)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":135:12)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":135:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":137:12)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":137:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":138:92)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":139:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":139:24)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":139:17)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":140:12)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":131:13)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":143:1)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":146:1)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":145:5)
#loc177 = loc("/usr/include/stdlib.h":575:1)
#loc178 = loc("/usr/include/stdlib.h":575:41)
#loc179 = loc("/usr/include/time.h":76:1)
#loc180 = loc("/usr/include/time.h":76:38)
#loc181 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc182 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":167:15)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":169:15)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":172:15)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":174:15)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":162:1)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":177:1)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":163:1)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":165:27)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":165:22)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":165:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":167:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":168:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":169:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":172:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":173:5)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":174:5)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":176:12)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82a.cpp":176:5)
#loc205 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":21:1)
#loc206 = loc("./CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_82.h":26:1)
#loc208 = loc(fused[#loc1, #loc2])
#loc209 = loc(fused[#loc3, #loc4])
#loc210 = loc(fused[#loc5, #loc6])
#loc211 = loc(fused[#loc7, #loc8])
#loc212 = loc(fused[#loc9, #loc10])
#loc213 = loc(fused[#loc11, #loc12])
#loc214 = loc(fused[#loc13, #loc14])
#loc215 = loc(fused[#loc15, #loc16])
#loc216 = loc(fused[#loc17, #loc18])
#loc217 = loc(fused[#loc20, #loc21])
#loc218 = loc(fused[#loc22, #loc23])
#loc219 = loc(fused[#loc24, #loc25])
#loc220 = loc(fused[#loc26, #loc27])
#loc221 = loc(fused[#loc28, #loc29])
#loc222 = loc(fused[#loc32, #loc30])
#loc223 = loc(fused[#loc33, #loc34])
#loc224 = loc(fused[#loc35, #loc36])
#loc225 = loc(fused[#loc37, #loc38])
#loc226 = loc(fused[#loc39, #loc40])
#loc227 = loc(fused[#loc41, #loc42])
#loc228 = loc(fused[#loc43, #loc44])
#loc229 = loc(fused[#loc45, #loc46])
#loc230 = loc(fused[#loc51, #loc52])
#loc231 = loc(fused[#loc53, #loc54])
#loc232 = loc(fused[#loc55, #loc56])
#loc233 = loc(fused[#loc57, #loc54])
#loc234 = loc(fused[#loc59, #loc60])
#loc235 = loc(fused[#loc62, #loc63])
#loc236 = loc(fused[#loc64, #loc65])
#loc237 = loc(fused[#loc68, #loc66])
#loc238 = loc(fused[#loc72, #loc69])
#loc239 = loc(fused[#loc76, #loc77])
#loc240 = loc(fused[#loc78, #loc79])
#loc241 = loc(fused[#loc81, #loc82])
#loc242 = loc(fused[#loc83, #loc84])
#loc243 = loc(fused[#loc85, #loc86])
#loc244 = loc(fused[#loc87, #loc79])
#loc245 = loc(fused[#loc89, #loc90])
#loc246 = loc(fused[#loc93, #loc94])
#loc247 = loc(fused[#loc95, #loc90])
#loc248 = loc(fused[#loc101, #loc102])
#loc249 = loc(fused[#loc103, #loc104])
#loc250 = loc(fused[#loc105, #loc106])
#loc251 = loc(fused[#loc107, #loc104])
#loc252 = loc(fused[#loc111, #loc112])
#loc253 = loc(fused[#loc115, #loc116])
#loc254 = loc(fused[#loc117, #loc118])
#loc255 = loc(fused[#loc119, #loc120])
#loc256 = loc(fused[#loc122, #loc123])
#loc257 = loc(fused[#loc124, #loc118])
#loc258 = loc(fused[#loc128, #loc126])
#loc259 = loc(fused[#loc131, #loc132])
#loc260 = loc(fused[#loc134, #loc135])
#loc261 = loc(fused[#loc136, #loc137])
#loc262 = loc(fused[#loc138, #loc135])
#loc263 = loc(fused[#loc141, #loc142])
#loc264 = loc(fused[#loc143, #loc144])
#loc265 = loc(fused[#loc145, #loc142])
#loc266 = loc(fused[#loc148, #loc29])
#loc267 = loc(fused[#loc155, #loc156])
#loc268 = loc(fused[#loc157, #loc158])
#loc269 = loc(fused[#loc159, #loc160])
#loc270 = loc(fused[#loc161, #loc162])
#loc271 = loc(fused[#loc165, #loc163])
#loc272 = loc(fused[#loc167, #loc166])
#loc273 = loc(fused[#loc168, #loc162])
#loc274 = loc(fused[#loc174, #loc175])
#loc275 = loc(fused[#loc177, #loc178])
#loc276 = loc(fused[#loc179, #loc180])
#loc277 = loc(fused[#loc181, #loc182])
#loc278 = loc(fused[#loc187, #loc188])
#loc281 = loc(fused[#loc204, #loc203])
#loc282 = loc(fused[#loc205, #loc206])
