!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":94:10)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":94:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":94:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":94:32)
#loc179 = loc(fused[#loc76, #loc77])
#loc180 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc155)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc19)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc160)
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
      %20 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc163)
        %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc164)
        %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc165)
        %24 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc163)
        cir.store %24, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc163)
        %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
        %26 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
        cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc166)
        cir.scope {
          %36 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc43)
          cir.store %37, %22 : !u64i, !cir.ptr<!u64i> loc(#loc168)
          cir.for : cond {
            %38 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %39 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %40 = cir.cmp(lt, %38, %39) : !u64i, !cir.bool loc(#loc169)
            cir.condition(%40) loc(#loc47)
          } body {
            cir.scope {
              %38 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
              %39 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc51)
              %41 = cir.load %40 : !cir.ptr<!s8i>, !s8i loc(#loc49)
              %42 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc52)
              %43 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc53)
              %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc53)
              cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc171)
            } loc(#loc170)
            cir.yield loc(#loc42)
          } step {
            %38 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc54)
            %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc55)
            cir.store %39, %22 : !u64i, !cir.ptr<!u64i> loc(#loc172)
            cir.yield loc(#loc167)
          } loc(#loc167)
        } loc(#loc167)
        %28 = cir.const #cir.int<0> : !s32i loc(#loc56)
        %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc56)
        %30 = cir.const #cir.int<50> : !s32i loc(#loc57)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc57)
        %33 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc59)
        %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc59)
        cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc173)
        %35 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } loc(#loc162)
    } loc(#loc159)
    cir.return loc(#loc6)
  } loc(#loc153)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc174)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.return %17 : !s32i loc(#loc183)
  } loc(#loc178)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc186)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc103)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc104)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc104)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc104)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc188)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc108)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc110)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc110)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc191)
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
      %20 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc194)
        %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
        %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc196)
        %24 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc194)
        cir.store %24, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc194)
        %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc126)
        %26 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc126)
        cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc197)
        cir.scope {
          %36 = cir.const #cir.int<0> : !s32i loc(#loc132)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc132)
          cir.store %37, %22 : !u64i, !cir.ptr<!u64i> loc(#loc199)
          cir.for : cond {
            %38 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc134)
            %39 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc135)
            %40 = cir.cmp(lt, %38, %39) : !u64i, !cir.bool loc(#loc200)
            cir.condition(%40) loc(#loc136)
          } body {
            cir.scope {
              %38 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
              %39 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc139)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc140)
              %41 = cir.load %40 : !cir.ptr<!s8i>, !s8i loc(#loc138)
              %42 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc141)
              %43 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc142)
              %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc142)
              cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc202)
            } loc(#loc201)
            cir.yield loc(#loc131)
          } step {
            %38 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc143)
            %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc144)
            cir.store %39, %22 : !u64i, !cir.ptr<!u64i> loc(#loc203)
            cir.yield loc(#loc198)
          } loc(#loc198)
        } loc(#loc198)
        %28 = cir.const #cir.int<0> : !s32i loc(#loc145)
        %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc145)
        %30 = cir.const #cir.int<50> : !s32i loc(#loc146)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc146)
        %33 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc148)
        %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc148)
        cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc204)
        %35 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
        cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc150)
      } loc(#loc193)
    } loc(#loc190)
    cir.return loc(#loc95)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":47:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":26:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":27:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":27:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":29:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":29:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":29:23)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":29:27)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":29:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":29:28)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":30:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":30:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":30:10)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":30:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":30:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":31:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":46:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":32:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":32:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":33:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":33:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":34:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":45:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":35:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":35:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":36:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":36:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":36:23)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":37:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":37:30)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":37:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":37:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":42:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:25)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:29)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:27)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":40:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":41:27)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":41:32)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":41:33)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":41:22)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":41:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:39)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":39:38)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":43:26)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":43:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":43:21)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":43:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":44:23)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":44:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":80:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":83:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":82:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":82:13)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":99:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":101:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":104:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":106:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":94:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":109:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":95:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":97:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":97:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":97:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":99:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":100:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":100:74)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":101:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":104:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":105:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":105:73)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":106:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":108:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":108:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":54:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":78:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":56:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":56:12)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":57:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":57:24)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":58:12)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":58:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":60:12)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":60:18)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":60:23)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":60:26)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":60:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":60:27)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":61:18)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":61:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":61:10)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":61:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":61:14)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":62:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":77:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":63:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":63:27)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":64:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":64:23)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":65:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":76:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":66:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":66:29)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":67:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":67:20)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":67:23)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":68:23)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":68:30)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":68:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":68:34)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":73:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:22)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:18)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:25)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:29)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:27)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":71:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":72:27)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":72:32)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":72:33)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":72:22)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":72:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:39)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":70:38)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":74:26)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":74:18)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":74:21)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":74:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":75:23)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_31.c":75:13)
#loc151 = loc(fused[#loc1, #loc2])
#loc152 = loc(fused[#loc3, #loc4])
#loc153 = loc(fused[#loc5, #loc6])
#loc154 = loc(fused[#loc7, #loc8])
#loc155 = loc(fused[#loc9, #loc10])
#loc156 = loc(fused[#loc12, #loc11])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc20, #loc19])
#loc159 = loc(fused[#loc24, #loc25])
#loc160 = loc(fused[#loc26, #loc27])
#loc161 = loc(fused[#loc28, #loc29])
#loc162 = loc(fused[#loc30, #loc31])
#loc163 = loc(fused[#loc32, #loc33])
#loc164 = loc(fused[#loc34, #loc35])
#loc165 = loc(fused[#loc34, #loc36])
#loc166 = loc(fused[#loc39, #loc40])
#loc167 = loc(fused[#loc41, #loc42])
#loc168 = loc(fused[#loc44, #loc43])
#loc169 = loc(fused[#loc45, #loc46])
#loc170 = loc(fused[#loc48, #loc42])
#loc171 = loc(fused[#loc53, #loc51])
#loc172 = loc(fused[#loc55, #loc54])
#loc173 = loc(fused[#loc59, #loc56])
#loc174 = loc(fused[#loc62, #loc63])
#loc175 = loc(fused[#loc64, #loc65])
#loc176 = loc(fused[#loc66, #loc67])
#loc177 = loc(fused[#loc68, #loc69])
#loc178 = loc(fused[#loc74, #loc75])
#loc181 = loc(fused[#loc85, #loc86])
#loc182 = loc(fused[#loc89, #loc90])
#loc183 = loc(fused[#loc93, #loc92])
#loc184 = loc(fused[#loc94, #loc95])
#loc185 = loc(fused[#loc96, #loc97])
#loc186 = loc(fused[#loc98, #loc99])
#loc187 = loc(fused[#loc101, #loc100])
#loc188 = loc(fused[#loc106, #loc107])
#loc189 = loc(fused[#loc109, #loc108])
#loc190 = loc(fused[#loc113, #loc114])
#loc191 = loc(fused[#loc115, #loc116])
#loc192 = loc(fused[#loc117, #loc118])
#loc193 = loc(fused[#loc119, #loc120])
#loc194 = loc(fused[#loc121, #loc122])
#loc195 = loc(fused[#loc123, #loc124])
#loc196 = loc(fused[#loc123, #loc125])
#loc197 = loc(fused[#loc128, #loc129])
#loc198 = loc(fused[#loc130, #loc131])
#loc199 = loc(fused[#loc133, #loc132])
#loc200 = loc(fused[#loc134, #loc135])
#loc201 = loc(fused[#loc137, #loc131])
#loc202 = loc(fused[#loc142, #loc140])
#loc203 = loc(fused[#loc144, #loc143])
#loc204 = loc(fused[#loc148, #loc145])
