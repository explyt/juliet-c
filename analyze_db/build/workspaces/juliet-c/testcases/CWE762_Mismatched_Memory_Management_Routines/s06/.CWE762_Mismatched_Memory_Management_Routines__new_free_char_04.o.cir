!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc145)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc146)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_043badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
      cir.if %3 {
        %4 = cir.const #cir.int<1> : !u64i loc(#loc152)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
      } loc(#loc151)
    } loc(#loc150)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc23)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc155)
    } loc(#loc154)
    cir.return loc(#loc6)
  } loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc157)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc34)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc38)
      cir.if %3 {
        %4 = cir.const #cir.int<1> : !u64i loc(#loc163)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc42)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
      } loc(#loc162)
    } loc(#loc161)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc46)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc46)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
      } loc(#loc166)
    } loc(#loc165)
    cir.return loc(#loc31)
  } loc(#loc158)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc60)
      cir.if %3 {
        %4 = cir.const #cir.int<1> : !u64i loc(#loc172)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc64)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
      } loc(#loc171)
    } loc(#loc170)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc68)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc68)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
      } loc(#loc175)
    } loc(#loc174)
    cir.return loc(#loc53)
  } loc(#loc167)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc176)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc177)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc79)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc83)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc89)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc90)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc90)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc183)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc184)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc185)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc98)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc100)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc102)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
          } loc(#loc189)
        } loc(#loc187)
      } loc(#loc182)
    } loc(#loc181)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc105)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc105)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc107)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
      } loc(#loc191)
    } loc(#loc190)
    cir.return loc(#loc76)
  } loc(#loc178)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc113)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc117)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc117)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc119)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc120)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc120)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc197)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc198)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc128)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc202)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc130)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc131)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc132)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc130)
          } loc(#loc203)
        } loc(#loc201)
      } loc(#loc196)
    } loc(#loc195)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc135)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc137)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc137)
      } loc(#loc205)
    } loc(#loc204)
    cir.return loc(#loc110)
  } loc(#loc192)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_044goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodB2G1Ev() : () -> () loc(#loc141)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodB2G2Ev() : () -> () loc(#loc142)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodG2B1Ev() : () -> () loc(#loc143)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_04L8goodG2B2Ev() : () -> () loc(#loc144)
    cir.return loc(#loc140)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":31:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":47:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":33:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":33:12)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":35:12)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":35:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":36:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":40:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":36:8)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":37:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":39:16)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":39:20)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":31:6)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":39:9)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":41:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":46:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":41:8)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":42:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":45:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":45:14)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":67:19)
#loc28 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc29 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":54:1)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":74:1)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":56:5)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":56:12)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":58:12)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":58:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":59:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":63:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":59:8)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":60:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":62:16)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":62:20)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":54:13)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":62:9)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":64:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":73:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":64:8)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":65:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":68:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":70:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":67:9)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":72:16)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":77:1)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":92:1)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":79:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":79:12)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":81:12)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":81:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":82:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":86:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":82:8)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":83:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":85:16)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":85:20)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":77:13)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":85:9)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":87:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":91:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":87:8)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":88:5)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":90:16)
#loc71 = loc("/usr/include/stdlib.h":672:1)
#loc72 = loc("/usr/include/stdlib.h":672:45)
#loc73 = loc("/usr/include/stdlib.h":756:1)
#loc74 = loc("/usr/include/stdlib.h":756:70)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":95:1)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":117:1)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":97:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":97:12)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":99:12)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":99:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":100:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":110:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":100:8)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":101:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":104:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":106:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":103:19)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":103:9)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":108:24)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":108:31)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":108:35)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":108:46)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":108:47)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":108:9)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:9)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:37)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:13)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:21)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:27)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:28)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:34)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":109:33)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":111:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":116:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":111:8)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":112:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":115:9)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":115:14)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":120:1)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":137:1)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":122:5)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":122:12)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":124:12)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":124:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":125:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":130:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":125:8)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":126:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":128:24)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":128:31)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":128:35)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":128:46)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":128:47)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":128:9)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:9)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:37)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:13)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:21)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:27)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:28)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:34)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":129:33)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":131:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":136:5)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":131:8)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":132:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":135:9)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":135:14)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":139:1)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":145:1)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":141:5)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":142:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":143:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_04.cpp":144:5)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc10, #loc9])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc14, #loc12])
#loc152 = loc(fused[#loc15, #loc16])
#loc153 = loc(fused[#loc18, #loc16])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc22, #loc20])
#loc156 = loc(fused[#loc25, #loc26])
#loc157 = loc(fused[#loc28, #loc29])
#loc158 = loc(fused[#loc30, #loc31])
#loc159 = loc(fused[#loc32, #loc33])
#loc160 = loc(fused[#loc35, #loc34])
#loc161 = loc(fused[#loc36, #loc37])
#loc162 = loc(fused[#loc39, #loc37])
#loc163 = loc(fused[#loc40, #loc41])
#loc164 = loc(fused[#loc43, #loc41])
#loc165 = loc(fused[#loc44, #loc45])
#loc166 = loc(fused[#loc47, #loc48, #loc49, #loc45])
#loc167 = loc(fused[#loc52, #loc53])
#loc168 = loc(fused[#loc54, #loc55])
#loc169 = loc(fused[#loc57, #loc56])
#loc170 = loc(fused[#loc58, #loc59])
#loc171 = loc(fused[#loc61, #loc59])
#loc172 = loc(fused[#loc62, #loc63])
#loc173 = loc(fused[#loc65, #loc63])
#loc174 = loc(fused[#loc66, #loc67])
#loc175 = loc(fused[#loc69, #loc67])
#loc176 = loc(fused[#loc71, #loc72])
#loc177 = loc(fused[#loc73, #loc74])
#loc178 = loc(fused[#loc75, #loc76])
#loc179 = loc(fused[#loc77, #loc78])
#loc180 = loc(fused[#loc80, #loc79])
#loc181 = loc(fused[#loc81, #loc82])
#loc182 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc183 = loc(fused[#loc91, #loc92])
#loc184 = loc(fused[#loc90, #loc92])
#loc185 = loc(fused[#loc89, #loc93])
#loc186 = loc(fused[#loc94, #loc93])
#loc187 = loc(fused[#loc95, #loc96])
#loc188 = loc(fused[#loc97, #loc98])
#loc189 = loc(fused[#loc99, #loc96])
#loc190 = loc(fused[#loc103, #loc104])
#loc191 = loc(fused[#loc106, #loc104])
#loc192 = loc(fused[#loc109, #loc110])
#loc193 = loc(fused[#loc111, #loc112])
#loc194 = loc(fused[#loc114, #loc113])
#loc195 = loc(fused[#loc115, #loc116])
#loc196 = loc(fused[#loc118, #loc116])
#loc197 = loc(fused[#loc121, #loc122])
#loc198 = loc(fused[#loc120, #loc122])
#loc199 = loc(fused[#loc119, #loc123])
#loc200 = loc(fused[#loc124, #loc123])
#loc201 = loc(fused[#loc125, #loc126])
#loc202 = loc(fused[#loc127, #loc128])
#loc203 = loc(fused[#loc129, #loc126])
#loc204 = loc(fused[#loc133, #loc134])
#loc205 = loc(fused[#loc136, #loc134])
#loc206 = loc(fused[#loc139, #loc140])
