!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_anon2E1_ = !cir.struct<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
!ty_anon2E0_ = !cir.struct<union "anon.0" {!ty_anon2E1_, !s64i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc69)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty_anon2E0_, !cir.ptr<!ty_anon2E0_>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc71)
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %2 ^bb2, ^bb5 loc(#loc73)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc74)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<270544960> : !s32i loc(#loc13)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc13)
    %5 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc14)
    cir.store %4, %5 : !s64i, !cir.ptr<!s64i> loc(#loc75)
    %6 = cir.const #cir.int<128> : !s32i loc(#loc16)
    %7 = cir.get_member %0[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!ty_anon2E1_> loc(#loc17)
    %8 = cir.get_member %7[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1_> -> !cir.ptr<!s8i> loc(#loc18)
    %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc19)
    %10 = cir.cast(integral, %9 : !s8i), !s32i loc(#loc19)
    %11 = cir.binop(or, %10, %6) : !s32i loc(#loc76)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc76)
    cir.store %12, %8 : !s8i, !cir.ptr<!s8i> loc(#loc76)
    %13 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc14)
    %14 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc21)
    %15 = cir.cast(integral, %14 : !s64i), !s32i loc(#loc21)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc22)
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc8)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc8)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc70)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc79)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc77)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc82)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc84)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb6 loc(#loc40)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.int<270544960> : !s32i loc(#loc45)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc45)
    cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc86)
    %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc47)
    %8 = cir.unary(minus, %7) : !s64i, !s64i loc(#loc47)
    %9 = cir.const #cir.int<1> : !s64i loc(#loc47)
    %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc47)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc48)
    %12 = cir.binop(or, %11, %10) : !s64i loc(#loc87)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc87)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc50)
    %14 = cir.cast(integral, %13 : !s64i), !s32i loc(#loc50)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc51)
    cir.br ^bb5 loc(#loc44)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc33)
  } loc(#loc81)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc89)
    cir.br ^bb1 loc(#loc90)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %2 ^bb2, ^bb5 loc(#loc91)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<270544960> : !s32i loc(#loc62)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc62)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc93)
    %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc64)
    %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc64)
    %7 = cir.const #cir.int<1> : !s64i loc(#loc64)
    %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc64)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc65)
    %10 = cir.binop(or, %9, %8) : !s64i loc(#loc94)
    cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc94)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc67)
    %12 = cir.cast(integral, %11 : !s64i), !s32i loc(#loc67)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc68)
    cir.br ^bb4 loc(#loc61)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc57)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc57)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc53)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":26:1)
#loc4 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":46:1)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":31:13)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":38:15)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":28:5)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":45:5)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":28:8)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":29:5)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":30:9)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":44:9)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":39:42)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":37:22)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":39:13)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":42:55)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":36:19)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":35:60)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":42:52)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":42:13)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":43:42)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":43:13)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":97:1)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":101:1)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":99:5)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":99:11)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":100:5)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":100:11)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":58:19)
#loc32 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":53:1)
#loc33 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":75:1)
#loc34 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":63:13)
#loc35 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":63:18)
#loc36 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":55:5)
#loc37 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":74:5)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":55:8)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":56:5)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":59:5)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":61:5)
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":58:9)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":62:9)
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":73:9)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":64:26)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":64:13)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":71:27)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":71:24)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":71:13)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":72:26)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":72:13)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":78:1)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":95:1)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":83:13)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":83:18)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":80:5)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":94:5)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":80:8)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":81:5)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":82:9)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":93:9)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":84:26)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":84:13)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":91:27)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":91:24)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":91:13)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":92:26)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_04.c":92:13)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc7, #loc8])
#loc73 = loc(fused[#loc10, #loc8])
#loc74 = loc(fused[#loc11, #loc12])
#loc75 = loc(fused[#loc15, #loc13])
#loc76 = loc(fused[#loc20, #loc16])
#loc77 = loc(fused[#loc23, #loc24])
#loc78 = loc(fused[#loc25, #loc26])
#loc79 = loc(fused[#loc27, #loc28])
#loc80 = loc(fused[#loc29, #loc30])
#loc81 = loc(fused[#loc32, #loc33])
#loc82 = loc(fused[#loc34, #loc35])
#loc83 = loc(fused[#loc36, #loc37])
#loc84 = loc(fused[#loc39, #loc40, #loc41, #loc37])
#loc85 = loc(fused[#loc43, #loc44])
#loc86 = loc(fused[#loc46, #loc45])
#loc87 = loc(fused[#loc49, #loc47])
#loc88 = loc(fused[#loc52, #loc53])
#loc89 = loc(fused[#loc54, #loc55])
#loc90 = loc(fused[#loc56, #loc57])
#loc91 = loc(fused[#loc59, #loc57])
#loc92 = loc(fused[#loc60, #loc61])
#loc93 = loc(fused[#loc63, #loc62])
#loc94 = loc(fused[#loc66, #loc64])
