!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":26:22)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":26:26)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":79:27)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":79:31)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":118:27)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":118:31)
#loc255 = loc(fused[#loc14, #loc15])
#loc295 = loc(fused[#loc114, #loc115])
#loc323 = loc(fused[#loc185, #loc186])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc249)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc250)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc251)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc252)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc14, #loc15])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc256)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc255)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc13)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc18)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc249)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc258)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc259)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc256)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc256)
    cir.br ^bb4 loc(#loc260)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc28)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc28)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc28)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc28)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc28)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc28)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc261)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc262)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc36)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.br ^bb7 loc(#loc33)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc20)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.store %26, %2 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.return %27 : !s32i loc(#loc264)
  } loc(#loc254)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc265)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc266)
  cir.func private @printIntLine(!s32i) loc(#loc267)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc268)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc270)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc271)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc272)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc59)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc249)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %8 = cir.call @badSource(%7) : (!s32i) -> !s32i loc(#loc64)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb1 loc(#loc276)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc69)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc70)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc277)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc278)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc279)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc280)
    cir.br ^bb2 loc(#loc281)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc78)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc282)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc283)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc82)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc284)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc85)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    cir.br ^bb7 loc(#loc284)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc88)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc286)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc89)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc287)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc94)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb10 loc(#loc84)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc84)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc96)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc289)
    cir.br ^bb7 loc(#loc284)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc99)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc100)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc101)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb14 loc(#loc68)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc51)
  } loc(#loc269)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc107)
    cir.return loc(#loc104)
  } loc(#loc290)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc111)
  cir.func internal private @goodG2B1Source(%arg0: !s32i loc(fused[#loc114, #loc115])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc295)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc113)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.br ^bb1 loc(#loc296)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc293)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc119)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc297)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc111)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb4 loc(#loc121)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc124)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc118)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc299)
    cir.return %9 : !s32i loc(#loc299)
  } loc(#loc294)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc301)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc302)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc303)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc137)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %6 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc293)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %8 = cir.call @goodG2B1Source(%7) : (!s32i) -> !s32i loc(#loc142)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb1 loc(#loc307)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc147)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc148)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc308)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc309)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc310)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc311)
    cir.br ^bb2 loc(#loc312)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc156)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc313)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc314)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc160)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc315)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc163)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc316)
    cir.br ^bb7 loc(#loc315)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc166)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc317)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc167)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc318)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc170)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc171)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc172)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    cir.br ^bb10 loc(#loc162)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc162)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc174)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc320)
    cir.br ^bb7 loc(#loc315)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc162)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc177)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc178)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc179)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc180)
    cir.br ^bb14 loc(#loc146)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc129)
  } loc(#loc300)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc321)
  cir.func internal private @goodG2B2Source(%arg0: !s32i loc(fused[#loc185, #loc186])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc184)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb1 loc(#loc324)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc321)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc190)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc325)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<20> : !s32i loc(#loc192)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb3 loc(#loc189)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc327)
    cir.return %7 : !s32i loc(#loc327)
  } loc(#loc322)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc329)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc330)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc331)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc205)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %6 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc321)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %8 = cir.call @goodG2B2Source(%7) : (!s32i) -> !s32i loc(#loc210)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb1 loc(#loc335)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc215)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc216)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc336)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc337)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc215)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc338)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc339)
    cir.br ^bb2 loc(#loc340)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc224)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc224)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc341)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc342)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc226)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc228)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc226)
    cir.br ^bb4 loc(#loc222)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc222)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc343)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc231)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc344)
    cir.br ^bb7 loc(#loc343)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc233)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc234)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc345)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc235)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc346)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc237)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc238)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc239)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc240)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb10 loc(#loc230)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc230)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc241)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc242)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc348)
    cir.br ^bb7 loc(#loc343)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc230)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc243)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc244)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc245)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc246)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc247)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc247)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc248)
    cir.br ^bb14 loc(#loc214)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc197)
  } loc(#loc328)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":24:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":24:24)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":40:27)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":26:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":45:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":31:13)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":31:49)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":27:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":28:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":43:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":28:8)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":29:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":30:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":42:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":33:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":41:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":33:23)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":33:36)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":33:53)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":33:17)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":33:63)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":34:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":37:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":39:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":36:29)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":36:24)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":36:17)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":36:40)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":40:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":44:12)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":44:5)
#loc42 = loc("/usr/include/stdlib.h":672:1)
#loc43 = loc("/usr/include/stdlib.h":672:45)
#loc44 = loc("/usr/include/stdlib.h":756:1)
#loc45 = loc("/usr/include/stdlib.h":756:70)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc48 = loc("/usr/include/stdlib.h":687:1)
#loc49 = loc("/usr/include/stdlib.h":687:32)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":47:1)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":68:1)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":55:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":55:16)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":56:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":56:14)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":49:5)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":49:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":51:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":51:12)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":51:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":52:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":52:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":53:22)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":53:12)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":53:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":53:26)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":54:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":67:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":59:28)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":59:35)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":59:42)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":59:52)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":59:53)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":59:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:43)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:27)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:33)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:34)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:40)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":60:39)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":64:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:18)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:14)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:21)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:33)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:23)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":62:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":63:29)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":63:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":63:24)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":63:25)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:40)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":61:39)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":65:22)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":65:33)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":65:34)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":65:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":66:14)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":66:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":151:1)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":155:1)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":153:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":153:14)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":154:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":154:14)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":75:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":75:29)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":84:19)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":79:1)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":92:1)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":80:1)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":81:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":90:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":81:8)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":82:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":85:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":87:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":84:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":89:16)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":89:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":91:12)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":91:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":94:1)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":115:1)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":102:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":102:16)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":103:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":103:14)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":96:5)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":96:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":98:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":98:12)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":98:5)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":99:22)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":99:5)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":100:27)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":100:12)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":100:5)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":100:31)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":101:5)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":114:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":106:28)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":106:35)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":106:42)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":106:52)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":106:53)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":106:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:43)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:27)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:34)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:40)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":107:39)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":111:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:18)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:14)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:21)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:33)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:23)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":109:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":110:29)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":110:13)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":110:24)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":110:25)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:40)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":108:39)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":112:22)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":112:33)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":112:34)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":112:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":113:14)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":113:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":76:1)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":76:29)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":118:1)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":126:1)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":119:1)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":120:5)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":124:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":120:8)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":121:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":123:16)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":123:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":125:12)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":125:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":128:1)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":149:1)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":136:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":136:16)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":137:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":137:14)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":130:5)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":130:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":132:13)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":132:12)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":132:5)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":133:22)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":133:5)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":134:27)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":134:12)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":134:5)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":134:31)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":135:5)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":148:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":140:28)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":140:35)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":140:42)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":140:52)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":140:53)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":140:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:43)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:13)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:27)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:33)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:34)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:40)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":141:39)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:9)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":145:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:18)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:14)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:21)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:33)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:23)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":143:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":144:29)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":144:13)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":144:24)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":144:25)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:40)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":142:39)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":146:22)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":146:33)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":146:34)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":146:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":147:14)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_21.c":147:9)
#loc249 = loc(fused[#loc1, #loc2])
#loc250 = loc(fused[#loc3, #loc4])
#loc251 = loc(fused[#loc5, #loc6])
#loc252 = loc(fused[#loc7, #loc8])
#loc253 = loc(fused[#loc9, #loc10])
#loc254 = loc(fused[#loc12, #loc13])
#loc256 = loc(fused[#loc16, #loc17])
#loc257 = loc(fused[#loc19, #loc20])
#loc258 = loc(fused[#loc22, #loc20])
#loc259 = loc(fused[#loc23, #loc24])
#loc260 = loc(fused[#loc25, #loc26])
#loc261 = loc(fused[#loc30, #loc31])
#loc262 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc263 = loc(fused[#loc37, #loc38])
#loc264 = loc(fused[#loc41, #loc40])
#loc265 = loc(fused[#loc42, #loc43])
#loc266 = loc(fused[#loc44, #loc45])
#loc267 = loc(fused[#loc46, #loc47])
#loc268 = loc(fused[#loc48, #loc49])
#loc269 = loc(fused[#loc50, #loc51])
#loc270 = loc(fused[#loc52, #loc53])
#loc271 = loc(fused[#loc54, #loc55])
#loc272 = loc(fused[#loc56, #loc57])
#loc273 = loc(fused[#loc60, #loc58])
#loc274 = loc(fused[#loc62, #loc61])
#loc275 = loc(fused[#loc65, #loc66])
#loc276 = loc(fused[#loc67, #loc68])
#loc277 = loc(fused[#loc71, #loc72])
#loc278 = loc(fused[#loc70, #loc72])
#loc279 = loc(fused[#loc69, #loc73])
#loc280 = loc(fused[#loc74, #loc73])
#loc281 = loc(fused[#loc75, #loc76])
#loc282 = loc(fused[#loc77, #loc78])
#loc283 = loc(fused[#loc79, #loc76])
#loc284 = loc(fused[#loc83, #loc84])
#loc285 = loc(fused[#loc86, #loc85])
#loc286 = loc(fused[#loc87, #loc88])
#loc287 = loc(fused[#loc90, #loc84])
#loc288 = loc(fused[#loc92, #loc91])
#loc289 = loc(fused[#loc96, #loc95])
#loc290 = loc(fused[#loc103, #loc104])
#loc291 = loc(fused[#loc105, #loc106])
#loc292 = loc(fused[#loc107, #loc108])
#loc293 = loc(fused[#loc109, #loc110])
#loc294 = loc(fused[#loc112, #loc113])
#loc296 = loc(fused[#loc117, #loc118])
#loc297 = loc(fused[#loc120, #loc121, #loc122, #loc118])
#loc298 = loc(fused[#loc125, #loc124])
#loc299 = loc(fused[#loc127, #loc126])
#loc300 = loc(fused[#loc128, #loc129])
#loc301 = loc(fused[#loc130, #loc131])
#loc302 = loc(fused[#loc132, #loc133])
#loc303 = loc(fused[#loc134, #loc135])
#loc304 = loc(fused[#loc138, #loc136])
#loc305 = loc(fused[#loc140, #loc139])
#loc306 = loc(fused[#loc143, #loc144])
#loc307 = loc(fused[#loc145, #loc146])
#loc308 = loc(fused[#loc149, #loc150])
#loc309 = loc(fused[#loc148, #loc150])
#loc310 = loc(fused[#loc147, #loc151])
#loc311 = loc(fused[#loc152, #loc151])
#loc312 = loc(fused[#loc153, #loc154])
#loc313 = loc(fused[#loc155, #loc156])
#loc314 = loc(fused[#loc157, #loc154])
#loc315 = loc(fused[#loc161, #loc162])
#loc316 = loc(fused[#loc164, #loc163])
#loc317 = loc(fused[#loc165, #loc166])
#loc318 = loc(fused[#loc168, #loc162])
#loc319 = loc(fused[#loc170, #loc169])
#loc320 = loc(fused[#loc174, #loc173])
#loc321 = loc(fused[#loc181, #loc182])
#loc322 = loc(fused[#loc183, #loc184])
#loc324 = loc(fused[#loc188, #loc189])
#loc325 = loc(fused[#loc191, #loc189])
#loc326 = loc(fused[#loc193, #loc192])
#loc327 = loc(fused[#loc195, #loc194])
#loc328 = loc(fused[#loc196, #loc197])
#loc329 = loc(fused[#loc198, #loc199])
#loc330 = loc(fused[#loc200, #loc201])
#loc331 = loc(fused[#loc202, #loc203])
#loc332 = loc(fused[#loc206, #loc204])
#loc333 = loc(fused[#loc208, #loc207])
#loc334 = loc(fused[#loc211, #loc212])
#loc335 = loc(fused[#loc213, #loc214])
#loc336 = loc(fused[#loc217, #loc218])
#loc337 = loc(fused[#loc216, #loc218])
#loc338 = loc(fused[#loc215, #loc219])
#loc339 = loc(fused[#loc220, #loc219])
#loc340 = loc(fused[#loc221, #loc222])
#loc341 = loc(fused[#loc223, #loc224])
#loc342 = loc(fused[#loc225, #loc222])
#loc343 = loc(fused[#loc229, #loc230])
#loc344 = loc(fused[#loc232, #loc231])
#loc345 = loc(fused[#loc233, #loc234])
#loc346 = loc(fused[#loc236, #loc230])
#loc347 = loc(fused[#loc238, #loc237])
#loc348 = loc(fused[#loc242, #loc241])
