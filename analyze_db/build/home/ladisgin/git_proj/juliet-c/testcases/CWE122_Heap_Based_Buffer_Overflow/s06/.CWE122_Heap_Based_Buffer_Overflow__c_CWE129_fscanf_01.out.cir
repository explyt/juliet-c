!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":148:10)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":148:14)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":148:20)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":148:32)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:23)
#true = #cir.bool<true> : !cir.bool
#loc305 = loc(fused[#loc102, #loc103])
#loc306 = loc(fused[#loc104, #loc105])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc265)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc267)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc268)
  cir.func private @printIntLine(!s32i) loc(#loc269)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc271)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc273)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc275)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc26)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc28)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc266)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc28)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc32)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc33)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc278)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc279)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc32)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc280)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc274)
    cir.br ^bb2 loc(#loc281)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc39)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc282)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc283)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc43)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb4 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc284)
  ^bb6:  // pred: ^bb5
    %25 = cir.const #cir.int<0> : !s32i loc(#loc46)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb7 loc(#loc284)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc49)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc50)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc287)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc55)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb10 loc(#loc45)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc45)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %34 = cir.unary(inc, %33) : !s32i, !s32i loc(#loc57)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb7 loc(#loc284)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc45)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc290)
  ^bb14:  // pred: ^bb13
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %37 = cir.cmp(ge, %35, %36) : !s32i, !cir.bool loc(#loc291)
    cir.brcond %37 ^bb15, ^bb24 loc(#loc292)
  ^bb15:  // pred: ^bb14
    %38 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc68)
    cir.store %38, %41 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb16 loc(#loc294)
  ^bb16:  // pred: ^bb15
    %42 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb17 loc(#loc294)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc74)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %45 ^bb18, ^bb22 loc(#loc75)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc297)
  ^bb19:  // pred: ^bb18
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc79)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc80)
    cir.br ^bb20 loc(#loc70)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc70)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %51 = cir.unary(inc, %50) : !s32i, !s32i loc(#loc82)
    cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb17 loc(#loc294)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc70)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc63)
  ^bb24:  // pred: ^bb14
    %52 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb25 loc(#loc59)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc59)
  ^bb26:  // pred: ^bb25
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc84)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc85)
    cir.br ^bb27 loc(#loc31)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc18)
  } loc(#loc272)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc88)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc301)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    cir.return loc(#loc87)
  } loc(#loc299)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc302)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc99)
  cir.func @main(%arg0: !s32i loc(fused[#loc102, #loc103]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc104, #loc105])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc306)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc106)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc107)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc108)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc108)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc109)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01_good() : () -> () loc(#loc111)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc98)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01_bad() : () -> () loc(#loc115)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    cir.return %17 : !s32i loc(#loc309)
  } loc(#loc304)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc312)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc313)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc129)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc131)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc135)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc136)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc136)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc317)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc318)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc319)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc312)
    cir.br ^bb2 loc(#loc320)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc142)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc321)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc322)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc144)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc146)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc140)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc323)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc149)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb7 loc(#loc323)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc152)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %23 ^bb8, ^bb12 loc(#loc153)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc326)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc158)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb10 loc(#loc148)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc148)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc160)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb7 loc(#loc323)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc148)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc329)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %32 ^bb15, ^bb24 loc(#loc331)
  ^bb15:  // pred: ^bb14
    %33 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc171)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.br ^bb16 loc(#loc333)
  ^bb16:  // pred: ^bb15
    %37 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb17 loc(#loc333)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc177)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc335)
    cir.brcond %40 ^bb18, ^bb22 loc(#loc178)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc336)
  ^bb19:  // pred: ^bb18
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc182)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc183)
    cir.br ^bb20 loc(#loc173)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc173)
  ^bb21:  // pred: ^bb20
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc185)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb17 loc(#loc333)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc173)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc166)
  ^bb24:  // pred: ^bb14
    %47 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc186)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    cir.br ^bb25 loc(#loc162)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc162)
  ^bb26:  // pred: ^bb25
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc188)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc189)
    cir.br ^bb27 loc(#loc134)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc121)
  } loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc190)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc339)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc340)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc341)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc200)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc202)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc266)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc203)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc204)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc204)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc202)
    cir.br ^bb1 loc(#loc343)
  ^bb1:  // pred: ^bb0
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc207)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc208)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc208)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc344)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc345)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc207)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc346)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc340)
    cir.br ^bb2 loc(#loc347)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc214)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc214)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc348)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc349)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc216)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc218)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc216)
    cir.br ^bb4 loc(#loc212)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc350)
  ^bb6:  // pred: ^bb5
    %25 = cir.const #cir.int<0> : !s32i loc(#loc221)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.br ^bb7 loc(#loc350)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc224)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc225)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc353)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc230)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb10 loc(#loc220)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc220)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %34 = cir.unary(inc, %33) : !s32i, !s32i loc(#loc232)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb7 loc(#loc350)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc220)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc356)
  ^bb14:  // pred: ^bb13
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc236)
    %37 = cir.cmp(ge, %35, %36) : !s32i, !cir.bool loc(#loc357)
    cir.brcond %37 ^bb15, ^bb20 loc(#loc237)
  ^bb15:  // pred: ^bb14
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc239)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %40 ^bb16, ^bb17 loc(#loc237)
  ^bb16:  // pred: ^bb15
    %41 = cir.const #true loc(#loc237)
    cir.br ^bb18(%41 : !cir.bool) loc(#loc237)
  ^bb17:  // pred: ^bb15
    %42 = cir.const #false loc(#loc237)
    cir.br ^bb18(%42 : !cir.bool) loc(#loc237)
  ^bb18(%43: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc237)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%43 : !cir.bool) loc(#loc237)
  ^bb20:  // pred: ^bb14
    %44 = cir.const #false loc(#loc237)
    cir.br ^bb21(%44 : !cir.bool) loc(#loc237)
  ^bb21(%45: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc237)
  ^bb22:  // pred: ^bb21
    cir.brcond %45 ^bb23, ^bb32 loc(#loc359)
  ^bb23:  // pred: ^bb22
    %46 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc245)
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc247)
    cir.store %46, %49 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    cir.br ^bb24 loc(#loc361)
  ^bb24:  // pred: ^bb23
    %50 = cir.const #cir.int<0> : !s32i loc(#loc250)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb25 loc(#loc361)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %52 = cir.const #cir.int<10> : !s32i loc(#loc253)
    %53 = cir.cmp(lt, %51, %52) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %53 ^bb26, ^bb30 loc(#loc254)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc364)
  ^bb27:  // pred: ^bb26
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc256)
    %55 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s32i>, %55 : !s32i), !cir.ptr<!s32i> loc(#loc258)
    %57 = cir.load %56 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.call @printIntLine(%57) : (!s32i) -> () loc(#loc259)
    cir.br ^bb28 loc(#loc249)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc249)
  ^bb29:  // pred: ^bb28
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %59 = cir.unary(inc, %58) : !s32i, !s32i loc(#loc261)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb25 loc(#loc361)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc249)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc242)
  ^bb32:  // pred: ^bb22
    %60 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc190)
    %61 = cir.cast(array_to_ptrdecay, %60 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%61) : (!cir.ptr<!s8i>) -> () loc(#loc262)
    cir.br ^bb33 loc(#loc234)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc234)
  ^bb34:  // pred: ^bb33
    %62 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc263)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc263)
    cir.call @free(%63) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc264)
    cir.br ^bb35 loc(#loc206)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc192)
  } loc(#loc338)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":28:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":51:23)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":22:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":55:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":30:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":30:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":31:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":31:54)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":24:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":24:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":26:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":26:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":26:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":28:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":28:12)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":29:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":54:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":31:31)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":31:38)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":31:43)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":31:53)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:39)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:29)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:30)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:36)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":32:35)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":37:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:18)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:21)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:25)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:23)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":35:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":36:25)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":36:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":36:20)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":36:21)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:30)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":34:29)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":40:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":52:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":40:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":40:21)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":41:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":48:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":50:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":42:28)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":42:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":42:20)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":42:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":47:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:21)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:24)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:28)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:26)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":45:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":46:30)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":46:37)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":46:38)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":46:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:33)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":44:32)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":51:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":53:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":53:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":133:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":137:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":135:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":135:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":136:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":136:13)
#loc92 = loc("/usr/include/stdlib.h":575:1)
#loc93 = loc("/usr/include/stdlib.h":575:41)
#loc94 = loc("/usr/include/time.h":76:1)
#loc95 = loc("/usr/include/time.h":76:38)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":153:15)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":155:15)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":158:15)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":160:15)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":148:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":163:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":149:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":151:27)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":151:22)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":151:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":153:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":154:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":154:64)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":155:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":158:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":159:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":159:63)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":160:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":162:12)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":162:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":62:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":96:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":71:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":71:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":72:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":72:54)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":64:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":64:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":66:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":66:12)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":66:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":69:12)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":69:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":70:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":95:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":72:31)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":72:38)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":72:43)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":72:53)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:39)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:23)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:29)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:30)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:36)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":73:35)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":78:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:18)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:14)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:21)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:25)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:23)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":76:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":77:25)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":77:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":77:20)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":77:21)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:30)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":75:29)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":81:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":93:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":81:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":81:21)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":82:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":89:9)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":91:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":83:28)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":83:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":83:20)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":83:24)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":88:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:21)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:17)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:24)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:28)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:26)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":86:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":87:30)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":87:37)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":87:38)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":87:17)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:33)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":85:32)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":92:23)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":92:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":94:14)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":94:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":127:23)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":99:1)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":131:1)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":107:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":107:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":108:9)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":108:54)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":101:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":101:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":103:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":103:12)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":103:5)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":105:5)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":105:12)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":105:19)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":106:5)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":130:5)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":108:31)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":108:38)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":108:43)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":108:53)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:9)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:39)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:23)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:29)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:30)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:36)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":109:35)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:9)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":114:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:18)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:14)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:21)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:25)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:23)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":112:9)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":113:25)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":113:13)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":113:20)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":113:21)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:30)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":111:29)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:9)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":128:9)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:13)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:21)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:26)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:34)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":116:36)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":117:9)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":124:9)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":126:9)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":118:28)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":118:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":118:20)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":118:24)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:13)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":123:13)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:21)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:17)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:24)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:28)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:26)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":121:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":122:30)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":122:37)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":122:38)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":122:17)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:33)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":120:32)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":127:13)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":129:14)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_01.c":129:9)
#loc265 = loc(fused[#loc1, #loc2])
#loc266 = loc(fused[#loc3, #loc4])
#loc267 = loc(fused[#loc6, #loc7])
#loc268 = loc(fused[#loc8, #loc9])
#loc269 = loc(fused[#loc10, #loc11])
#loc270 = loc(fused[#loc12, #loc13])
#loc271 = loc(fused[#loc15, #loc16])
#loc272 = loc(fused[#loc17, #loc18])
#loc273 = loc(fused[#loc19, #loc20])
#loc274 = loc(fused[#loc21, #loc22])
#loc275 = loc(fused[#loc23, #loc24])
#loc276 = loc(fused[#loc27, #loc25])
#loc277 = loc(fused[#loc30, #loc31])
#loc278 = loc(fused[#loc34, #loc35])
#loc279 = loc(fused[#loc33, #loc35])
#loc280 = loc(fused[#loc32, #loc22])
#loc281 = loc(fused[#loc36, #loc37])
#loc282 = loc(fused[#loc38, #loc39])
#loc283 = loc(fused[#loc40, #loc37])
#loc284 = loc(fused[#loc44, #loc45])
#loc285 = loc(fused[#loc47, #loc46])
#loc286 = loc(fused[#loc48, #loc49])
#loc287 = loc(fused[#loc51, #loc45])
#loc288 = loc(fused[#loc53, #loc52])
#loc289 = loc(fused[#loc57, #loc56])
#loc290 = loc(fused[#loc58, #loc59])
#loc291 = loc(fused[#loc60, #loc61])
#loc292 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc293 = loc(fused[#loc66, #loc65])
#loc294 = loc(fused[#loc69, #loc70])
#loc295 = loc(fused[#loc72, #loc71])
#loc296 = loc(fused[#loc73, #loc74])
#loc297 = loc(fused[#loc76, #loc70])
#loc298 = loc(fused[#loc82, #loc81])
#loc299 = loc(fused[#loc86, #loc87])
#loc300 = loc(fused[#loc88, #loc89])
#loc301 = loc(fused[#loc90, #loc91])
#loc302 = loc(fused[#loc92, #loc93])
#loc303 = loc(fused[#loc94, #loc95])
#loc304 = loc(fused[#loc100, #loc101])
#loc307 = loc(fused[#loc111, #loc112])
#loc308 = loc(fused[#loc115, #loc116])
#loc309 = loc(fused[#loc119, #loc118])
#loc310 = loc(fused[#loc120, #loc121])
#loc311 = loc(fused[#loc122, #loc123])
#loc312 = loc(fused[#loc124, #loc125])
#loc313 = loc(fused[#loc126, #loc127])
#loc314 = loc(fused[#loc130, #loc128])
#loc315 = loc(fused[#loc132, #loc131])
#loc316 = loc(fused[#loc133, #loc134])
#loc317 = loc(fused[#loc137, #loc138])
#loc318 = loc(fused[#loc136, #loc138])
#loc319 = loc(fused[#loc135, #loc125])
#loc320 = loc(fused[#loc139, #loc140])
#loc321 = loc(fused[#loc141, #loc142])
#loc322 = loc(fused[#loc143, #loc140])
#loc323 = loc(fused[#loc147, #loc148])
#loc324 = loc(fused[#loc150, #loc149])
#loc325 = loc(fused[#loc151, #loc152])
#loc326 = loc(fused[#loc154, #loc148])
#loc327 = loc(fused[#loc156, #loc155])
#loc328 = loc(fused[#loc160, #loc159])
#loc329 = loc(fused[#loc161, #loc162])
#loc330 = loc(fused[#loc163, #loc164])
#loc331 = loc(fused[#loc165, #loc166, #loc167, #loc162])
#loc332 = loc(fused[#loc169, #loc168])
#loc333 = loc(fused[#loc172, #loc173])
#loc334 = loc(fused[#loc175, #loc174])
#loc335 = loc(fused[#loc176, #loc177])
#loc336 = loc(fused[#loc179, #loc173])
#loc337 = loc(fused[#loc185, #loc184])
#loc338 = loc(fused[#loc191, #loc192])
#loc339 = loc(fused[#loc193, #loc194])
#loc340 = loc(fused[#loc195, #loc196])
#loc341 = loc(fused[#loc197, #loc198])
#loc342 = loc(fused[#loc201, #loc199])
#loc343 = loc(fused[#loc205, #loc206])
#loc344 = loc(fused[#loc209, #loc210])
#loc345 = loc(fused[#loc208, #loc210])
#loc346 = loc(fused[#loc207, #loc196])
#loc347 = loc(fused[#loc211, #loc212])
#loc348 = loc(fused[#loc213, #loc214])
#loc349 = loc(fused[#loc215, #loc212])
#loc350 = loc(fused[#loc219, #loc220])
#loc351 = loc(fused[#loc222, #loc221])
#loc352 = loc(fused[#loc223, #loc224])
#loc353 = loc(fused[#loc226, #loc220])
#loc354 = loc(fused[#loc228, #loc227])
#loc355 = loc(fused[#loc232, #loc231])
#loc356 = loc(fused[#loc233, #loc234])
#loc357 = loc(fused[#loc235, #loc236])
#loc358 = loc(fused[#loc238, #loc240])
#loc359 = loc(fused[#loc241, #loc242, #loc243, #loc234])
#loc360 = loc(fused[#loc245, #loc244])
#loc361 = loc(fused[#loc248, #loc249])
#loc362 = loc(fused[#loc251, #loc250])
#loc363 = loc(fused[#loc252, #loc253])
#loc364 = loc(fused[#loc255, #loc249])
#loc365 = loc(fused[#loc261, #loc260])
