!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":46:23)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":46:28)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":146:27)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":146:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc260 = loc(fused[#loc19, #loc20])
#loc329 = loc(fused[#loc196, #loc197])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc251)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc252)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc253)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc254)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc255)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc256)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc257)
  cir.func private @close(!s32i) -> !s32i loc(#loc258)
  cir.func internal private @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc260)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc21)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc262)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc263)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc264)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc265)
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc266)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc29)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc264)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc31)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc265)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc38)
            %11 = cir.const #cir.int<1> : !u32i loc(#loc39)
            %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc39)
            %13 = cir.const #cir.int<6> : !u32i loc(#loc40)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc40)
            %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
            cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc269)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc47)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc271)
              cir.if %60 {
                cir.break loc(#loc49)
              } loc(#loc272)
            } loc(#loc270)
            %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc273)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc52)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc274)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc275)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc57)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc57)
            %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc276)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc60)
            %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc60)
            %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc277)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc64)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc64)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc65)
            %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc278)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %58 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc280)
              %59 = cir.const #cir.int<16> : !u64i loc(#loc281)
              %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc281)
              %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc76)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc77)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc77)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc282)
              cir.if %64 {
                cir.break loc(#loc79)
              } loc(#loc283)
            } loc(#loc279)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %58 = cir.const #cir.int<5> : !s32i loc(#loc83)
              %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc84)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc85)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc85)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc285)
              cir.if %62 {
                cir.break loc(#loc87)
              } loc(#loc286)
            } loc(#loc284)
            %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc89)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc90)
            %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc91)
            cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc287)
            cir.scope {
              %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc97)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc97)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc289)
              cir.if %60 {
                cir.break loc(#loc99)
              } loc(#loc290)
            } loc(#loc288)
            %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc102)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc102)
            %39 = cir.const #cir.int<4> : !u64i loc(#loc102)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc102)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc102)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc102)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc102)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc103)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc291)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc104)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc105)
            cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc292)
            cir.scope {
              %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc111)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc294)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc112)
                cir.yield %62 : !cir.bool loc(#loc112)
              }, false {
                %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %63 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc295)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc112)
                  cir.yield %66 : !cir.bool loc(#loc112)
                }, false {
                  %66 = cir.const #false loc(#loc112)
                  cir.yield %66 : !cir.bool loc(#loc112)
                }) : (!cir.bool) -> !cir.bool loc(#loc112)
                cir.yield %65 : !cir.bool loc(#loc112)
              }) : (!cir.bool) -> !cir.bool loc(#loc112)
              cir.if %61 {
                cir.break loc(#loc116)
              } loc(#loc296)
            } loc(#loc293)
            %50 = cir.const #cir.int<0> : !s8i loc(#loc117)
            %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
            %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc119)
            cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc297)
            %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
            %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc121)
            %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
            cir.store %55, %56 : !s32i, !cir.ptr<!s32i> loc(#loc298)
          } loc(#loc268)
          cir.yield loc(#loc35)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc124)
          cir.condition(%11) loc(#loc124)
        } loc(#loc267)
      } loc(#loc267)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc128)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc300)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc130)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc131)
        } loc(#loc301)
      } loc(#loc299)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc135)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc303)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc138)
        } loc(#loc304)
      } loc(#loc302)
    } loc(#loc261)
    cir.return loc(#loc18)
  } loc(#loc259)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc305)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc306)
  cir.func private @printIntLine(!s32i) loc(#loc307)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc308)
  cir.func @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc152)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc154)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc313)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc314)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc161)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc162)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc315)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc316)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc317)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc318)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc170)
        %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc320)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc172)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc173)
          %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc174)
          cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
        } loc(#loc321)
      } loc(#loc319)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc177)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc177)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc323)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc179)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc180)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc324)
          cir.condition(%24) loc(#loc324)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc182)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc184)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc185)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc326)
          } loc(#loc325)
          cir.yield loc(#loc176)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc186)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc187)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc327)
          cir.yield loc(#loc322)
        } loc(#loc322)
      } loc(#loc322)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc189)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc190)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc191)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc192)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc193)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
    } loc(#loc312)
    cir.return loc(#loc148)
  } loc(#loc309)
  cir.func internal private @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc196, #loc197])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc329)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc198)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc199)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    cir.return loc(#loc195)
  } loc(#loc328)
  cir.func internal private @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc332)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc206)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc208)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc335)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc336)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc215)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc216)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc337)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc338)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc215)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc339)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc340)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc224)
        %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc342)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc226)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc227)
          %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc228)
          cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc226)
        } loc(#loc343)
      } loc(#loc341)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc231)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc231)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc345)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc233)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc234)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc234)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc346)
          cir.condition(%24) loc(#loc346)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc236)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc237)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc238)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc239)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc348)
          } loc(#loc347)
          cir.yield loc(#loc230)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc240)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc241)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc349)
          cir.yield loc(#loc344)
        } loc(#loc344)
      } loc(#loc344)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc242)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc243)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc244)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc242)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc245)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc246)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc247)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc247)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc246)
    } loc(#loc334)
    cir.return loc(#loc202)
  } loc(#loc331)
  cir.func @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43L7goodG2BEv() : () -> () loc(#loc250)
    cir.return loc(#loc249)
  } loc(#loc350)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":46:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":117:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":47:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":48:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":116:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":53:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":53:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":54:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":54:28)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":55:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":55:31)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":56:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":56:31)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":57:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":57:41)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":58:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":101:17)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":59:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":100:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":68:35)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":68:44)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":68:57)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":68:28)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":68:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":68:68)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":69:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":72:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":69:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":69:33)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":70:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":71:17)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":73:20)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":73:21)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":73:30)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":73:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":73:47)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":73:13)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":73:48)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":74:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":74:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":75:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":75:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":76:38)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":76:32)
#loc66 = loc("/usr/include/netinet/in.h":250:15)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":76:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":76:46)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":80:13)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:22)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:54)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:55)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:64)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:78)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":77:84)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":78:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":79:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":81:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":84:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":81:24)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":81:38)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":81:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":81:57)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":82:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":83:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":85:35)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":85:49)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":85:55)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":85:28)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":85:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":85:59)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":86:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":89:13)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":86:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":86:33)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":87:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":88:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:31)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:45)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:58)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:76)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:79)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:26)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":91:80)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":92:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":95:13)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":92:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":92:31)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":92:44)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":92:47)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":92:61)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":93:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":94:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":97:39)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":97:25)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":97:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":99:25)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":99:20)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":99:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":99:36)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":101:16)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":102:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":105:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":102:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":102:29)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":103:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":104:26)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":104:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":106:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":109:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":106:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":106:29)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":107:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":108:26)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":108:13)
#loc139 = loc("/usr/include/stdlib.h":672:1)
#loc140 = loc("/usr/include/stdlib.h":672:45)
#loc141 = loc("/usr/include/stdlib.h":756:1)
#loc142 = loc("/usr/include/stdlib.h":756:70)
#loc143 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc144 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc145 = loc("/usr/include/stdlib.h":687:1)
#loc146 = loc("/usr/include/stdlib.h":687:32)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":119:1)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":139:1)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":121:5)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":121:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":123:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":123:12)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":123:5)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":124:5)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":125:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":138:5)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":126:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":126:16)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":127:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":127:14)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":130:28)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":130:35)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":130:42)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":130:52)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":130:53)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":130:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:43)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:27)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:33)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:34)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:40)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":131:39)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":132:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":135:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":132:18)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":132:14)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":132:21)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":132:33)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":133:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":134:29)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":134:13)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":134:24)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":134:25)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":132:40)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":132:39)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":136:22)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":136:33)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":136:34)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":136:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":137:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":137:14)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":146:1)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":150:1)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":147:1)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":149:12)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":149:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":152:1)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":172:1)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":154:5)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":154:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":156:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":156:12)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":156:5)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":157:5)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":158:5)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":171:5)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":159:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":159:16)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":160:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":160:14)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":163:28)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":163:35)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":163:42)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":163:52)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":163:53)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":163:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:43)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:13)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:27)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:33)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:34)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:40)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":164:39)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":165:9)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":168:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":165:18)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":165:14)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":165:21)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":165:33)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":166:9)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":167:29)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":167:13)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":167:24)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":167:25)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":165:40)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":165:39)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":169:22)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":169:33)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":169:34)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":169:9)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":170:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":170:14)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":174:1)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":177:1)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_43.cpp":176:5)
#loc251 = loc(fused[#loc1, #loc2])
#loc252 = loc(fused[#loc3, #loc4])
#loc253 = loc(fused[#loc5, #loc6])
#loc254 = loc(fused[#loc7, #loc8])
#loc255 = loc(fused[#loc9, #loc10])
#loc256 = loc(fused[#loc11, #loc12])
#loc257 = loc(fused[#loc13, #loc14])
#loc258 = loc(fused[#loc15, #loc16])
#loc259 = loc(fused[#loc17, #loc18])
#loc261 = loc(fused[#loc22, #loc23])
#loc262 = loc(fused[#loc24, #loc25])
#loc263 = loc(fused[#loc26, #loc27])
#loc264 = loc(fused[#loc28, #loc29])
#loc265 = loc(fused[#loc30, #loc31])
#loc266 = loc(fused[#loc32, #loc33])
#loc267 = loc(fused[#loc34, #loc35])
#loc268 = loc(fused[#loc36, #loc37])
#loc269 = loc(fused[#loc42, #loc43])
#loc270 = loc(fused[#loc44, #loc45])
#loc271 = loc(fused[#loc46, #loc47])
#loc272 = loc(fused[#loc48, #loc45])
#loc273 = loc(fused[#loc50, #loc51])
#loc274 = loc(fused[#loc53, #loc54])
#loc275 = loc(fused[#loc55, #loc56])
#loc276 = loc(fused[#loc59, #loc57])
#loc277 = loc(fused[#loc63, #loc60])
#loc278 = loc(fused[#loc67, #loc68])
#loc279 = loc(fused[#loc69, #loc70])
#loc280 = loc(fused[#loc72, #loc73])
#loc281 = loc(fused[#loc74, #loc75])
#loc282 = loc(fused[#loc76, #loc77])
#loc283 = loc(fused[#loc78, #loc70])
#loc284 = loc(fused[#loc80, #loc81])
#loc285 = loc(fused[#loc84, #loc85])
#loc286 = loc(fused[#loc86, #loc81])
#loc287 = loc(fused[#loc92, #loc93])
#loc288 = loc(fused[#loc94, #loc95])
#loc289 = loc(fused[#loc96, #loc97])
#loc290 = loc(fused[#loc98, #loc95])
#loc291 = loc(fused[#loc102, #loc103])
#loc292 = loc(fused[#loc106, #loc107])
#loc293 = loc(fused[#loc108, #loc109])
#loc294 = loc(fused[#loc110, #loc111])
#loc295 = loc(fused[#loc113, #loc114])
#loc296 = loc(fused[#loc115, #loc109])
#loc297 = loc(fused[#loc119, #loc117])
#loc298 = loc(fused[#loc122, #loc123])
#loc299 = loc(fused[#loc125, #loc126])
#loc300 = loc(fused[#loc127, #loc128])
#loc301 = loc(fused[#loc129, #loc126])
#loc302 = loc(fused[#loc132, #loc133])
#loc303 = loc(fused[#loc134, #loc135])
#loc304 = loc(fused[#loc136, #loc133])
#loc305 = loc(fused[#loc139, #loc140])
#loc306 = loc(fused[#loc141, #loc142])
#loc307 = loc(fused[#loc143, #loc144])
#loc308 = loc(fused[#loc145, #loc146])
#loc309 = loc(fused[#loc147, #loc148])
#loc310 = loc(fused[#loc149, #loc150])
#loc311 = loc(fused[#loc153, #loc151])
#loc312 = loc(fused[#loc155, #loc156])
#loc313 = loc(fused[#loc157, #loc158])
#loc314 = loc(fused[#loc159, #loc160])
#loc315 = loc(fused[#loc163, #loc164])
#loc316 = loc(fused[#loc162, #loc164])
#loc317 = loc(fused[#loc161, #loc165])
#loc318 = loc(fused[#loc166, #loc165])
#loc319 = loc(fused[#loc167, #loc168])
#loc320 = loc(fused[#loc169, #loc170])
#loc321 = loc(fused[#loc171, #loc168])
#loc322 = loc(fused[#loc175, #loc176])
#loc323 = loc(fused[#loc178, #loc177])
#loc324 = loc(fused[#loc179, #loc180])
#loc325 = loc(fused[#loc181, #loc176])
#loc326 = loc(fused[#loc183, #loc182])
#loc327 = loc(fused[#loc187, #loc186])
#loc328 = loc(fused[#loc194, #loc195])
#loc330 = loc(fused[#loc200, #loc199])
#loc331 = loc(fused[#loc201, #loc202])
#loc332 = loc(fused[#loc203, #loc204])
#loc333 = loc(fused[#loc207, #loc205])
#loc334 = loc(fused[#loc209, #loc210])
#loc335 = loc(fused[#loc211, #loc212])
#loc336 = loc(fused[#loc213, #loc214])
#loc337 = loc(fused[#loc217, #loc218])
#loc338 = loc(fused[#loc216, #loc218])
#loc339 = loc(fused[#loc215, #loc219])
#loc340 = loc(fused[#loc220, #loc219])
#loc341 = loc(fused[#loc221, #loc222])
#loc342 = loc(fused[#loc223, #loc224])
#loc343 = loc(fused[#loc225, #loc222])
#loc344 = loc(fused[#loc229, #loc230])
#loc345 = loc(fused[#loc232, #loc231])
#loc346 = loc(fused[#loc233, #loc234])
#loc347 = loc(fused[#loc235, #loc230])
#loc348 = loc(fused[#loc237, #loc236])
#loc349 = loc(fused[#loc241, #loc240])
#loc350 = loc(fused[#loc248, #loc249])
