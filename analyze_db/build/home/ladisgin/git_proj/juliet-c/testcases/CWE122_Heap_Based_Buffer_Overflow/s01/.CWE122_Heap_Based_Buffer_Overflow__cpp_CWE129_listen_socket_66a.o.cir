!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:44)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc298)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc299)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc300)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc301)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc302)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc303)
  cir.func private @close(!s32i) -> !s32i loc(#loc304)
  cir.func private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_667badSinkEPi(!cir.ptr<!s32i>) loc(#loc305)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_663badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc307)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc308)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc309)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc310)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc311)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc312)
    %6 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc313)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc36)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb1 loc(#loc315)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc26)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc28)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb2 loc(#loc316)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc316)
  ^bb3:  // pred: ^bb32
    %13 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %14 ^bb4, ^bb33 loc(#loc42)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc43)
    %16 = cir.const #cir.int<1> : !u32i loc(#loc44)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc44)
    %18 = cir.const #cir.int<6> : !u32i loc(#loc45)
    %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc45)
    %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc46)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb5 loc(#loc318)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc52)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %24 ^bb6, ^bb7 loc(#loc320)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc54)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc50)
  ^bb8:  // pred: ^bb7
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc321)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc322)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc323)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc62)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc62)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc324)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc65)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc325)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc69)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc69)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc70)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc326)
    cir.br ^bb9 loc(#loc327)
  ^bb9:  // pred: ^bb8
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc328)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc329)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc329)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc81)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc82)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %46 ^bb10, ^bb11 loc(#loc331)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc84)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc75)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc332)
  ^bb13:  // pred: ^bb12
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc88)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc89)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc90)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %52 ^bb14, ^bb15 loc(#loc334)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc92)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc86)
  ^bb16:  // pred: ^bb15
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc94)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc95)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc96)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb17 loc(#loc336)
  ^bb17:  // pred: ^bb16
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc102)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %60 ^bb18, ^bb19 loc(#loc338)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc104)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc100)
  ^bb20:  // pred: ^bb19
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc107)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc107)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc107)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc107)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc107)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc107)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc107)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc108)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc339)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc110)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc110)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb21 loc(#loc341)
  ^bb21:  // pred: ^bb20
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc116)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %80 ^bb22, ^bb23 loc(#loc117)
  ^bb22:  // pred: ^bb21
    %81 = cir.const #true loc(#loc117)
    cir.br ^bb28(%81 : !cir.bool) loc(#loc117)
  ^bb23:  // pred: ^bb21
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %84 ^bb24, ^bb25 loc(#loc117)
  ^bb24:  // pred: ^bb23
    %85 = cir.const #true loc(#loc117)
    cir.br ^bb26(%85 : !cir.bool) loc(#loc117)
  ^bb25:  // pred: ^bb23
    %86 = cir.const #false loc(#loc117)
    cir.br ^bb26(%86 : !cir.bool) loc(#loc117)
  ^bb26(%87: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc117)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%87 : !cir.bool) loc(#loc117)
  ^bb28(%88: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc117)
  ^bb29:  // pred: ^bb28
    cir.brcond %88 ^bb30, ^bb31 loc(#loc344)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc121)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc114)
  ^bb32:  // pred: ^bb31
    %89 = cir.const #cir.int<0> : !s8i loc(#loc122)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s8i>, %90 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %89, %92 : !s8i, !cir.ptr<!s8i> loc(#loc345)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
    %94 = cir.call @atoi(%93) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc126)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb3 loc(#loc41)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc41)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc347)
  ^bb35:  // pred: ^bb34
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %97 = cir.unary(minus, %96) : !s32i, !s32i loc(#loc132)
    %98 = cir.cmp(ne, %95, %97) : !s32i, !cir.bool loc(#loc348)
    cir.brcond %98 ^bb36, ^bb37 loc(#loc349)
  ^bb36:  // pred: ^bb35
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %100 = cir.call @close(%99) : (!s32i) -> !s32i loc(#loc135)
    cir.br ^bb37 loc(#loc130)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc130)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc350)
  ^bb39:  // pred: ^bb38
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %102 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %103 = cir.unary(minus, %102) : !s32i, !s32i loc(#loc139)
    %104 = cir.cmp(ne, %101, %103) : !s32i, !cir.bool loc(#loc351)
    cir.brcond %104 ^bb40, ^bb41 loc(#loc352)
  ^bb40:  // pred: ^bb39
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %106 = cir.call @close(%105) : (!s32i) -> !s32i loc(#loc142)
    cir.br ^bb41 loc(#loc137)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc137)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc39)
  ^bb43:  // pred: ^bb42
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %108 = cir.const #cir.int<2> : !s32i loc(#loc144)
    %109 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc145)
    %110 = cir.ptr_stride(%109 : !cir.ptr<!s32i>, %108 : !s32i), !cir.ptr<!s32i> loc(#loc145)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %111 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc146)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_667badSinkEPi(%111) : (!cir.ptr<!s32i>) -> () loc(#loc147)
    cir.return loc(#loc20)
  } loc(#loc306)
  cir.func private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6611goodG2BSinkEPi(!cir.ptr<!s32i>) loc(#loc354)
  cir.func internal private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc356)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc357)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc157)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc159)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc163)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc163)
    cir.store %5, %8 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc164)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6611goodG2BSinkEPi(%9) : (!cir.ptr<!s32i>) -> () loc(#loc165)
    cir.return loc(#loc151)
  } loc(#loc355)
  cir.func private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6611goodB2GSinkEPi(!cir.ptr<!s32i>) loc(#loc361)
  cir.func internal private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc363)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc364)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc365)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc366)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc367)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc368)
    %6 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc369)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc185)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.br ^bb1 loc(#loc371)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc175)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc177)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb2 loc(#loc372)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc372)
  ^bb3:  // pred: ^bb32
    %13 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc191)
    cir.brcond %14 ^bb4, ^bb33 loc(#loc191)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc192)
    %16 = cir.const #cir.int<1> : !u32i loc(#loc193)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc193)
    %18 = cir.const #cir.int<6> : !u32i loc(#loc194)
    %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc194)
    %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc195)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb5 loc(#loc374)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc201)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc375)
    cir.brcond %24 ^bb6, ^bb7 loc(#loc376)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc203)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc377)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc378)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc379)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc211)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc211)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc380)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc213)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc213)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc381)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc215)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc215)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc216)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc382)
    cir.br ^bb9 loc(#loc383)
  ^bb9:  // pred: ^bb8
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc384)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc385)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc385)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc226)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc227)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc386)
    cir.brcond %46 ^bb10, ^bb11 loc(#loc387)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc229)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc220)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc388)
  ^bb13:  // pred: ^bb12
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc233)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc234)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc235)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %52 ^bb14, ^bb15 loc(#loc390)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc237)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc231)
  ^bb16:  // pred: ^bb15
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc239)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc240)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc241)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb17 loc(#loc392)
  ^bb17:  // pred: ^bb16
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc247)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %60 ^bb18, ^bb19 loc(#loc394)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc249)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc245)
  ^bb20:  // pred: ^bb19
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc251)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc252)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc252)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc252)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc252)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc252)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc252)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc252)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc253)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc395)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc254)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc255)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc255)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb21 loc(#loc397)
  ^bb21:  // pred: ^bb20
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc261)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc398)
    cir.brcond %80 ^bb22, ^bb23 loc(#loc262)
  ^bb22:  // pred: ^bb21
    %81 = cir.const #true loc(#loc262)
    cir.br ^bb28(%81 : !cir.bool) loc(#loc262)
  ^bb23:  // pred: ^bb21
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc264)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc399)
    cir.brcond %84 ^bb24, ^bb25 loc(#loc262)
  ^bb24:  // pred: ^bb23
    %85 = cir.const #true loc(#loc262)
    cir.br ^bb26(%85 : !cir.bool) loc(#loc262)
  ^bb25:  // pred: ^bb23
    %86 = cir.const #false loc(#loc262)
    cir.br ^bb26(%86 : !cir.bool) loc(#loc262)
  ^bb26(%87: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc262)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%87 : !cir.bool) loc(#loc262)
  ^bb28(%88: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc262)
  ^bb29:  // pred: ^bb28
    cir.brcond %88 ^bb30, ^bb31 loc(#loc400)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc266)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc259)
  ^bb32:  // pred: ^bb31
    %89 = cir.const #cir.int<0> : !s8i loc(#loc267)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s8i>, %90 : !s32i), !cir.ptr<!s8i> loc(#loc269)
    cir.store %89, %92 : !s8i, !cir.ptr<!s8i> loc(#loc401)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc270)
    %94 = cir.call @atoi(%93) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc271)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.br ^bb3 loc(#loc190)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc190)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc403)
  ^bb35:  // pred: ^bb34
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc277)
    %97 = cir.unary(minus, %96) : !s32i, !s32i loc(#loc277)
    %98 = cir.cmp(ne, %95, %97) : !s32i, !cir.bool loc(#loc404)
    cir.brcond %98 ^bb36, ^bb37 loc(#loc405)
  ^bb36:  // pred: ^bb35
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %100 = cir.call @close(%99) : (!s32i) -> !s32i loc(#loc280)
    cir.br ^bb37 loc(#loc275)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc275)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc406)
  ^bb39:  // pred: ^bb38
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %102 = cir.const #cir.int<1> : !s32i loc(#loc284)
    %103 = cir.unary(minus, %102) : !s32i, !s32i loc(#loc284)
    %104 = cir.cmp(ne, %101, %103) : !s32i, !cir.bool loc(#loc407)
    cir.brcond %104 ^bb40, ^bb41 loc(#loc408)
  ^bb40:  // pred: ^bb39
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %106 = cir.call @close(%105) : (!s32i) -> !s32i loc(#loc287)
    cir.br ^bb41 loc(#loc282)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc282)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc188)
  ^bb43:  // pred: ^bb42
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %108 = cir.const #cir.int<2> : !s32i loc(#loc289)
    %109 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc290)
    %110 = cir.ptr_stride(%109 : !cir.ptr<!s32i>, %108 : !s32i), !cir.ptr<!s32i> loc(#loc290)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    %111 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc291)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6611goodB2GSinkEPi(%111) : (!cir.ptr<!s32i>) -> () loc(#loc292)
    cir.return loc(#loc169)
  } loc(#loc362)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_664goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66L7goodG2BEv() : () -> () loc(#loc295)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66L7goodB2GEv() : () -> () loc(#loc296)
    cir.return loc(#loc294)
  } loc(#loc410)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":48:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":48:29)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":50:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":128:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":61:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":61:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":62:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":62:28)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":63:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":63:31)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":64:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":64:31)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":65:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":65:41)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":52:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":52:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":53:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":53:20)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":55:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":55:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":55:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":56:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":124:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":66:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":109:17)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":109:16)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":76:35)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":76:44)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":76:57)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":76:28)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":76:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":76:68)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":77:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":80:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":77:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":77:33)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":78:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":79:17)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":81:20)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":81:21)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":81:30)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":81:33)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":81:47)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":81:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":81:48)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":82:34)
#loc63 = loc("/usr/include/netinet/in.h":249:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":82:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":83:39)
#loc66 = loc("/usr/include/netinet/in.h":251:20)
#loc67 = loc("/usr/include/netinet/in.h":33:15)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":83:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":84:38)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":84:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":84:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":84:46)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":88:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:22)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:54)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:55)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:64)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:78)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":85:84)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":86:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":87:17)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":89:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":92:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":89:24)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":89:38)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":89:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":89:57)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":90:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":91:17)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":93:35)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":93:49)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":93:55)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":93:28)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":93:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":93:59)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":94:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":97:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":94:17)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":94:33)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":95:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":96:17)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:31)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:45)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:58)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:76)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:79)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:26)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":99:80)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":103:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:17)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:31)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:47)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":100:61)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":101:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":102:17)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":105:39)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":105:25)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":105:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":107:25)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":107:20)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":107:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":107:36)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":110:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":113:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":110:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":110:29)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":111:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":112:26)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":112:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":114:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":117:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":114:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":114:29)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":115:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":116:26)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":116:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":126:20)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":126:15)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":126:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":127:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":127:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":135:1)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":135:33)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":137:1)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":148:1)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":139:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":139:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":140:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":140:20)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":142:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":142:12)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":142:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":145:12)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":145:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":146:20)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":146:15)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":146:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":147:17)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":147:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":151:1)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":151:33)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":153:1)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":230:1)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":164:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":164:13)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":165:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":165:28)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":166:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":166:31)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":167:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":167:31)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":168:9)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":168:41)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":155:5)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":155:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":156:5)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":156:20)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":158:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":158:12)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":158:5)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":159:5)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":227:5)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":169:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":212:17)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":212:16)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":179:35)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":179:44)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":179:57)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":179:28)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":179:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":179:68)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":180:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":183:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":180:17)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":180:33)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":181:13)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":182:17)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":184:20)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":184:21)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":184:30)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":184:33)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":184:47)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":184:13)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":184:48)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":185:34)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":185:13)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":186:39)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":186:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":187:38)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":187:32)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":187:13)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":187:46)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:13)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":191:13)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:22)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:54)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:55)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:64)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:78)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:17)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":188:84)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":189:13)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":190:17)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":192:13)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":195:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":192:24)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":192:38)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":192:17)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":192:57)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":193:13)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":194:17)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":196:35)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":196:49)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":196:55)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":196:28)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":196:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":196:59)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":197:13)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":200:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":197:17)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":197:33)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":198:13)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":199:17)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:31)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:45)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:58)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:76)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:79)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:26)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:13)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":202:80)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":206:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:17)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:31)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:47)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":203:61)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":204:13)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":205:17)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":208:39)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":208:25)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":208:13)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":210:25)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":210:20)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":210:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":210:36)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":213:9)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":216:9)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":213:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":213:29)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":214:9)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":215:26)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":215:13)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":217:9)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":220:9)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":217:13)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":217:29)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":218:9)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":219:26)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":219:13)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":228:20)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":228:15)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":228:5)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":229:17)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":229:5)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":232:1)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":236:1)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":234:5)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_66a.cpp":235:5)
#loc297 = loc(fused[#loc1, #loc2])
#loc298 = loc(fused[#loc3, #loc4])
#loc299 = loc(fused[#loc5, #loc6])
#loc300 = loc(fused[#loc7, #loc8])
#loc301 = loc(fused[#loc9, #loc10])
#loc302 = loc(fused[#loc11, #loc12])
#loc303 = loc(fused[#loc13, #loc14])
#loc304 = loc(fused[#loc15, #loc16])
#loc305 = loc(fused[#loc17, #loc18])
#loc306 = loc(fused[#loc19, #loc20])
#loc307 = loc(fused[#loc21, #loc22])
#loc308 = loc(fused[#loc23, #loc24])
#loc309 = loc(fused[#loc25, #loc26])
#loc310 = loc(fused[#loc27, #loc28])
#loc311 = loc(fused[#loc29, #loc30])
#loc312 = loc(fused[#loc31, #loc32])
#loc313 = loc(fused[#loc33, #loc34])
#loc314 = loc(fused[#loc37, #loc35])
#loc315 = loc(fused[#loc38, #loc39])
#loc316 = loc(fused[#loc40, #loc41])
#loc317 = loc(fused[#loc47, #loc48])
#loc318 = loc(fused[#loc49, #loc50])
#loc319 = loc(fused[#loc51, #loc52])
#loc320 = loc(fused[#loc53, #loc50])
#loc321 = loc(fused[#loc55, #loc56])
#loc322 = loc(fused[#loc58, #loc59])
#loc323 = loc(fused[#loc60, #loc61])
#loc324 = loc(fused[#loc64, #loc62])
#loc325 = loc(fused[#loc68, #loc65])
#loc326 = loc(fused[#loc72, #loc73])
#loc327 = loc(fused[#loc74, #loc75])
#loc328 = loc(fused[#loc77, #loc78])
#loc329 = loc(fused[#loc79, #loc80])
#loc330 = loc(fused[#loc81, #loc82])
#loc331 = loc(fused[#loc83, #loc75])
#loc332 = loc(fused[#loc85, #loc86])
#loc333 = loc(fused[#loc89, #loc90])
#loc334 = loc(fused[#loc91, #loc86])
#loc335 = loc(fused[#loc97, #loc98])
#loc336 = loc(fused[#loc99, #loc100])
#loc337 = loc(fused[#loc101, #loc102])
#loc338 = loc(fused[#loc103, #loc100])
#loc339 = loc(fused[#loc107, #loc108])
#loc340 = loc(fused[#loc111, #loc112])
#loc341 = loc(fused[#loc113, #loc114])
#loc342 = loc(fused[#loc115, #loc116])
#loc343 = loc(fused[#loc118, #loc119])
#loc344 = loc(fused[#loc120, #loc114])
#loc345 = loc(fused[#loc124, #loc122])
#loc346 = loc(fused[#loc127, #loc128])
#loc347 = loc(fused[#loc129, #loc130])
#loc348 = loc(fused[#loc131, #loc132])
#loc349 = loc(fused[#loc133, #loc130])
#loc350 = loc(fused[#loc136, #loc137])
#loc351 = loc(fused[#loc138, #loc139])
#loc352 = loc(fused[#loc140, #loc137])
#loc353 = loc(fused[#loc145, #loc143])
#loc354 = loc(fused[#loc148, #loc149])
#loc355 = loc(fused[#loc150, #loc151])
#loc356 = loc(fused[#loc152, #loc153])
#loc357 = loc(fused[#loc154, #loc155])
#loc358 = loc(fused[#loc158, #loc156])
#loc359 = loc(fused[#loc160, #loc159])
#loc360 = loc(fused[#loc163, #loc161])
#loc361 = loc(fused[#loc166, #loc167])
#loc362 = loc(fused[#loc168, #loc169])
#loc363 = loc(fused[#loc170, #loc171])
#loc364 = loc(fused[#loc172, #loc173])
#loc365 = loc(fused[#loc174, #loc175])
#loc366 = loc(fused[#loc176, #loc177])
#loc367 = loc(fused[#loc178, #loc179])
#loc368 = loc(fused[#loc180, #loc181])
#loc369 = loc(fused[#loc182, #loc183])
#loc370 = loc(fused[#loc186, #loc184])
#loc371 = loc(fused[#loc187, #loc188])
#loc372 = loc(fused[#loc189, #loc190])
#loc373 = loc(fused[#loc196, #loc197])
#loc374 = loc(fused[#loc198, #loc199])
#loc375 = loc(fused[#loc200, #loc201])
#loc376 = loc(fused[#loc202, #loc199])
#loc377 = loc(fused[#loc204, #loc205])
#loc378 = loc(fused[#loc207, #loc208])
#loc379 = loc(fused[#loc209, #loc210])
#loc380 = loc(fused[#loc212, #loc211])
#loc381 = loc(fused[#loc214, #loc213])
#loc382 = loc(fused[#loc217, #loc218])
#loc383 = loc(fused[#loc219, #loc220])
#loc384 = loc(fused[#loc222, #loc223])
#loc385 = loc(fused[#loc224, #loc225])
#loc386 = loc(fused[#loc226, #loc227])
#loc387 = loc(fused[#loc228, #loc220])
#loc388 = loc(fused[#loc230, #loc231])
#loc389 = loc(fused[#loc234, #loc235])
#loc390 = loc(fused[#loc236, #loc231])
#loc391 = loc(fused[#loc242, #loc243])
#loc392 = loc(fused[#loc244, #loc245])
#loc393 = loc(fused[#loc246, #loc247])
#loc394 = loc(fused[#loc248, #loc245])
#loc395 = loc(fused[#loc252, #loc253])
#loc396 = loc(fused[#loc256, #loc257])
#loc397 = loc(fused[#loc258, #loc259])
#loc398 = loc(fused[#loc260, #loc261])
#loc399 = loc(fused[#loc263, #loc264])
#loc400 = loc(fused[#loc265, #loc259])
#loc401 = loc(fused[#loc269, #loc267])
#loc402 = loc(fused[#loc272, #loc273])
#loc403 = loc(fused[#loc274, #loc275])
#loc404 = loc(fused[#loc276, #loc277])
#loc405 = loc(fused[#loc278, #loc275])
#loc406 = loc(fused[#loc281, #loc282])
#loc407 = loc(fused[#loc283, #loc284])
#loc408 = loc(fused[#loc285, #loc282])
#loc409 = loc(fused[#loc290, #loc288])
#loc410 = loc(fused[#loc293, #loc294])
