!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":22:21)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":22:25)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":40:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":112:10)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":112:14)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":112:20)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":112:32)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":72:25)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":72:29)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:23)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":93:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":49:25)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":49:29)
#true = #cir.bool<true> : !cir.bool
#loc145 = loc(fused[#loc6, #loc7])
#loc164 = loc(fused[#loc53, #loc54])
#loc165 = loc(fused[#loc55, #loc56])
#loc170 = loc(fused[#loc73, #loc74])
#loc187 = loc(fused[#loc113, #loc114])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc145)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc9)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    cir.br ^bb2 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc15)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc17)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc18)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc150)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc151)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc23)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb3 loc(#loc148)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc14)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc12)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc5)
  } loc(#loc144)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc29)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc31)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc31)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc31)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc31)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc31)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc31)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc31)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc31)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc31)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc31)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc31)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc31)
    cir.br ^bb3(%18 : !u32i) loc(#loc31)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc31)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc31)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc31)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc31)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc31)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc31)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc31)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc31)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc31)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc31)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc31)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc31)
    cir.br ^bb3(%34 : !u32i) loc(#loc31)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":40:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc31)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @badSink(%37) : (!s32i) -> () loc(#loc34)
    cir.return loc(#loc25)
  } loc(#loc153)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc160)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_41_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_41_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.return %17 : !s32i loc(#loc168)
  } loc(#loc163)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc73, #loc74])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc170)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc76)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.br ^bb2 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc174)
    cir.brcond %6 ^bb3, ^bb8 loc(#loc84)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %8 = cir.const #cir.int<20> : !s32i loc(#loc86)
    %9 = cir.cmp(le, %7, %8) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc84)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #true loc(#loc84)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc84)
  ^bb5:  // pred: ^bb3
    %11 = cir.const #false loc(#loc84)
    cir.br ^bb6(%11 : !cir.bool) loc(#loc84)
  ^bb6(%12: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%12 : !cir.bool) loc(#loc84)
  ^bb8:  // pred: ^bb2
    %13 = cir.const #false loc(#loc84)
    cir.br ^bb9(%13 : !cir.bool) loc(#loc84)
  ^bb9(%14: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc84)
  ^bb10:  // pred: ^bb9
    cir.brcond %14 ^bb11, ^bb20 loc(#loc176)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc177)
  ^bb12:  // pred: ^bb11
    %15 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc90)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb13 loc(#loc177)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc93)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc179)
    cir.brcond %20 ^bb14, ^bb18 loc(#loc94)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc180)
  ^bb15:  // pred: ^bb14
    %21 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc96)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb16 loc(#loc89)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc89)
  ^bb17:  // pred: ^bb16
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc99)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb13 loc(#loc177)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc89)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc81)
  ^bb20:  // 2 preds: ^bb10, ^bb19
    cir.br ^bb21 loc(#loc81)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc79)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc72)
  } loc(#loc169)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc105)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc107)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc107)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc107)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc107)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc107)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc107)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc107)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc107)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc107)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc107)
    cir.br ^bb3(%18 : !u32i) loc(#loc107)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc107)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc107)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc107)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc107)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc107)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc107)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc107)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc107)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc107)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc107)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc107)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc107)
    cir.br ^bb3(%34 : !u32i) loc(#loc107)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":93:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc107)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc107)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    cir.call @goodB2GSink(%37) : (!s32i) -> () loc(#loc110)
    cir.return loc(#loc101)
  } loc(#loc182)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc113, #loc114])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc187)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.br ^bb1 loc(#loc189)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc116)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    cir.br ^bb2 loc(#loc190)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc122)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc191)
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc125)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc192)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc126)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc128)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb6 loc(#loc121)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc121)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc131)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb3 loc(#loc190)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc119)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc112)
  } loc(#loc186)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc137)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc139)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc142)
    cir.return loc(#loc133)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":29:23)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":22:1)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":32:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":25:9)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":25:20)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":23:1)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":24:5)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":31:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":30:9)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:18)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:21)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:33)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:23)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":28:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":29:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:41)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":27:40)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":34:1)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":42:1)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":36:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":36:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":38:14)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":38:13)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":38:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":40:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":41:13)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":41:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":97:1)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":101:1)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":99:5)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":99:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":100:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":100:13)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":117:15)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":119:15)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":122:15)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":124:15)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":112:1)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":127:1)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":113:1)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":115:27)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":115:22)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":115:5)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":117:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":118:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":118:55)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":119:5)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":122:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":123:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":123:54)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":124:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":126:12)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":126:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":72:1)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":85:1)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":75:9)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":75:20)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":73:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":74:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":84:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":83:9)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:21)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:26)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":77:35)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":78:9)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:13)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":82:13)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:22)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:18)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:25)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:37)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:27)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":80:13)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":81:27)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":81:17)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:45)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":79:44)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":87:1)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":95:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":89:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":89:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":91:14)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":91:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":91:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":93:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":94:17)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":94:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":49:1)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":59:1)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":52:9)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":52:20)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":50:1)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":51:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":58:5)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:9)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":57:9)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:18)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:14)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:21)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:33)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:23)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":55:9)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":56:23)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":56:13)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:41)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":54:40)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":61:1)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":69:1)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":63:5)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":63:9)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":65:14)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":65:13)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":65:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":67:13)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":67:5)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":68:17)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_for_loop_41.c":68:5)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc4, #loc5])
#loc146 = loc(fused[#loc8, #loc9])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc13, #loc14])
#loc149 = loc(fused[#loc16, #loc15])
#loc150 = loc(fused[#loc17, #loc18])
#loc151 = loc(fused[#loc20, #loc14])
#loc152 = loc(fused[#loc23, #loc22])
#loc153 = loc(fused[#loc24, #loc25])
#loc154 = loc(fused[#loc26, #loc27])
#loc155 = loc(fused[#loc30, #loc28])
#loc156 = loc(fused[#loc32, #loc31])
#loc157 = loc(fused[#loc35, #loc36])
#loc158 = loc(fused[#loc37, #loc38])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc41, #loc42])
#loc161 = loc(fused[#loc43, #loc44])
#loc162 = loc(fused[#loc45, #loc46])
#loc163 = loc(fused[#loc51, #loc52])
#loc166 = loc(fused[#loc62, #loc63])
#loc167 = loc(fused[#loc66, #loc67])
#loc168 = loc(fused[#loc70, #loc69])
#loc169 = loc(fused[#loc71, #loc72])
#loc171 = loc(fused[#loc75, #loc76])
#loc172 = loc(fused[#loc78, #loc79])
#loc173 = loc(fused[#loc80, #loc81])
#loc174 = loc(fused[#loc82, #loc83])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc87, #loc81])
#loc177 = loc(fused[#loc88, #loc89])
#loc178 = loc(fused[#loc91, #loc90])
#loc179 = loc(fused[#loc92, #loc93])
#loc180 = loc(fused[#loc95, #loc89])
#loc181 = loc(fused[#loc99, #loc98])
#loc182 = loc(fused[#loc100, #loc101])
#loc183 = loc(fused[#loc102, #loc103])
#loc184 = loc(fused[#loc106, #loc104])
#loc185 = loc(fused[#loc108, #loc107])
#loc186 = loc(fused[#loc111, #loc112])
#loc188 = loc(fused[#loc115, #loc116])
#loc189 = loc(fused[#loc118, #loc119])
#loc190 = loc(fused[#loc120, #loc121])
#loc191 = loc(fused[#loc123, #loc122])
#loc192 = loc(fused[#loc124, #loc125])
#loc193 = loc(fused[#loc127, #loc121])
#loc194 = loc(fused[#loc131, #loc130])
#loc195 = loc(fused[#loc132, #loc133])
#loc196 = loc(fused[#loc134, #loc135])
#loc197 = loc(fused[#loc138, #loc136])
#loc198 = loc(fused[#loc140, #loc139])
