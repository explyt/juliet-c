!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":24:24)
#loc9 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":24:30)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":110:10)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":110:14)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":110:20)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":110:32)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":70:28)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":70:34)
#loc109 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":49:28)
#loc110 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":49:34)
#loc137 = loc(fused[#loc8, #loc9])
#loc154 = loc(fused[#loc53, #loc54])
#loc155 = loc(fused[#loc55, #loc56])
#loc160 = loc(fused[#loc73, #loc74])
#loc172 = loc(fused[#loc109, #loc110])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc134)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @badSource(%arg0: !cir.float loc(fused[#loc8, #loc9])) -> !cir.float extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc10)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc11)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc11)
    %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc13)
    cir.store %8, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc138)
    %9 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc138)
    cir.return %9 : !cir.float loc(#loc138)
  } loc(#loc136)
  cir.func private @printIntLine(!s32i) loc(#loc139)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc142)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc23)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc143)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc25)
    %4 = cir.call @badSource(%3) : (!cir.float) -> !cir.float loc(#loc26)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc31)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc32)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc32)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc146)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc146)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc34)
    cir.br ^bb2 loc(#loc30)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc18)
  } loc(#loc140)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc147)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc150)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fscanf_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call @CWE369_Divide_by_Zero__float_fscanf_42_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fscanf_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE369_Divide_by_Zero__float_fscanf_42_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %17 : !s32i loc(#loc158)
  } loc(#loc153)
  cir.func internal private @goodB2GSource(%arg0: !cir.float loc(fused[#loc73, #loc74])) -> !cir.float extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc75)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc76)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc78)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc78)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc76)
    %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc79)
    cir.store %8, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc161)
    %9 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc161)
    cir.return %9 : !cir.float loc(#loc161)
  } loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc88)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc165)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc90)
    %4 = cir.call @goodB2GSource(%3) : (!cir.float) -> !cir.float loc(#loc91)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc96)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc96)
    %7 = cir.fabs %6 : !cir.double loc(#loc96)
    %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc97)
    %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc168)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc169)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc102)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc103)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc103)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc170)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc170)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc105)
    cir.br ^bb4 loc(#loc100)
  ^bb3:  // pred: ^bb1
    %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc81)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc95)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc83)
  } loc(#loc162)
  cir.func internal private @goodG2BSource(%arg0: !cir.float loc(fused[#loc109, #loc110])) -> !cir.float extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc111)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc112)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc173)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc114)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc174)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc174)
    cir.return %4 : !cir.float loc(#loc174)
  } loc(#loc171)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc122)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc178)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc124)
    %4 = cir.call @goodG2BSource(%3) : (!cir.float) -> !cir.float loc(#loc125)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc130)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc131)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc131)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc181)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc181)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc133)
    cir.br ^bb2 loc(#loc129)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc117)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":27:20)
#loc6 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":24:1)
#loc7 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":29:1)
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":25:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":27:5)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":27:13)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":28:12)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":28:5)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":31:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":42:1)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":39:9)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":39:40)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":33:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":33:11)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":35:12)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":35:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":36:22)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":36:12)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":36:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":36:26)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":37:5)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":41:5)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":39:28)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":39:36)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":40:22)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":40:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":95:1)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":99:1)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":97:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":97:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":98:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":98:13)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":115:15)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":117:15)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":120:15)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":122:15)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":110:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":125:1)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":111:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":113:27)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":113:22)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":113:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":115:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":116:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":116:49)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":117:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":120:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":121:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":121:48)
#loc68 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":122:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":124:12)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":124:5)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":70:1)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":75:1)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":71:1)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":73:5)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":73:13)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":73:20)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":74:12)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":74:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":91:19)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":77:1)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":93:1)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":86:9)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":86:40)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":79:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":79:11)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":81:12)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":81:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":82:26)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":82:12)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":82:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":82:30)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":84:5)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":92:5)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":84:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":84:21)
#loc98 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":84:8)
#loc99 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":85:5)
#loc100 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":88:5)
#loc101 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":90:5)
#loc102 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":86:28)
#loc103 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":86:36)
#loc104 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":87:22)
#loc105 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":87:9)
#loc106 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":91:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":49:1)
#loc108 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":54:1)
#loc111 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":50:1)
#loc112 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":52:12)
#loc113 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":52:5)
#loc114 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":53:12)
#loc115 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":53:5)
#loc116 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":56:1)
#loc117 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":67:1)
#loc118 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":64:9)
#loc119 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":64:40)
#loc120 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":58:5)
#loc121 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":58:11)
#loc122 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":60:12)
#loc123 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":60:5)
#loc124 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":61:26)
#loc125 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":61:12)
#loc126 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":61:5)
#loc127 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":61:30)
#loc128 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":62:5)
#loc129 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":66:5)
#loc130 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":64:28)
#loc131 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":64:36)
#loc132 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":65:22)
#loc133 = loc("CWE369_Divide_by_Zero__float_fscanf_42.c":65:9)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc6, #loc7])
#loc138 = loc(fused[#loc14, #loc13])
#loc139 = loc(fused[#loc15, #loc16])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc21, #loc22])
#loc143 = loc(fused[#loc24, #loc23])
#loc144 = loc(fused[#loc27, #loc28])
#loc145 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc35, #loc36])
#loc148 = loc(fused[#loc37, #loc38])
#loc149 = loc(fused[#loc39, #loc40])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc43, #loc44])
#loc152 = loc(fused[#loc45, #loc46])
#loc153 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc62, #loc63])
#loc157 = loc(fused[#loc66, #loc67])
#loc158 = loc(fused[#loc70, #loc69])
#loc159 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc80, #loc79])
#loc162 = loc(fused[#loc82, #loc83])
#loc163 = loc(fused[#loc84, #loc85])
#loc164 = loc(fused[#loc86, #loc87])
#loc165 = loc(fused[#loc89, #loc88])
#loc166 = loc(fused[#loc92, #loc93])
#loc167 = loc(fused[#loc94, #loc95])
#loc168 = loc(fused[#loc98, #loc97])
#loc169 = loc(fused[#loc99, #loc100, #loc101, #loc95])
#loc170 = loc(fused[#loc102, #loc103])
#loc171 = loc(fused[#loc107, #loc108])
#loc173 = loc(fused[#loc113, #loc112])
#loc174 = loc(fused[#loc115, #loc114])
#loc175 = loc(fused[#loc116, #loc117])
#loc176 = loc(fused[#loc118, #loc119])
#loc177 = loc(fused[#loc120, #loc121])
#loc178 = loc(fused[#loc123, #loc122])
#loc179 = loc(fused[#loc126, #loc127])
#loc180 = loc(fused[#loc128, #loc129])
#loc181 = loc(fused[#loc130, #loc131])
