!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc183)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc185)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc186)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc19)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc20)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc20)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc192)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc193)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc197)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc31)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc32)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
          } loc(#loc198)
        } loc(#loc196)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc33)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
      } loc(#loc191)
    } loc(#loc190)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc37)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc39)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
      } loc(#loc200)
    } loc(#loc199)
    cir.return loc(#loc10)
  } loc(#loc187)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc203)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc204)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc205)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc42)
  } loc(#loc201)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc206)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc64)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc66)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc67)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc67)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc213)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc214)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc79)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
          } loc(#loc219)
        } loc(#loc217)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc80)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
      } loc(#loc212)
    } loc(#loc211)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc206)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc84)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } else {
      } loc(#loc221)
    } loc(#loc220)
    cir.return loc(#loc57)
  } loc(#loc208)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc97)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc100)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc100)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc227)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc228)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc232)
          cir.if %18 {
            %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc112)
            cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
          } loc(#loc233)
        } loc(#loc231)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc113)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
      } loc(#loc226)
    } loc(#loc225)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc117)
      cir.if %4 {
      } loc(#loc235)
    } loc(#loc234)
    cir.return loc(#loc90)
  } loc(#loc222)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc206)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc127)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc133)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc134)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc134)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc241)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc242)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc243)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc246)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc144)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc145)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc146)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
          } loc(#loc247)
        } loc(#loc245)
      } loc(#loc240)
    } loc(#loc239)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc149)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc151)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
      } loc(#loc249)
    } loc(#loc248)
    cir.return loc(#loc120)
  } loc(#loc236)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc157)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc161)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc163)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc164)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc164)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc255)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc256)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc174)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc175)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc176)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
          } loc(#loc261)
        } loc(#loc259)
      } loc(#loc254)
    } loc(#loc253)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc179)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc181)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc182)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc181)
      } loc(#loc263)
    } loc(#loc262)
    cir.return loc(#loc154)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE415_Double_Free__malloc_free_char_09.c":24:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_char_09.c":41:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_char_09.c":26:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_char_09.c":26:12)
#loc13 = loc("CWE415_Double_Free__malloc_free_char_09.c":28:12)
#loc14 = loc("CWE415_Double_Free__malloc_free_char_09.c":28:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_09.c":29:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_09.c":35:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_09.c":29:8)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_09.c":30:5)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_09.c":31:24)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_09.c":31:31)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_09.c":31:35)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_09.c":31:46)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_09.c":31:47)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_09.c":31:9)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:9)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:37)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:13)
#loc28 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:21)
#loc29 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:27)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:28)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:34)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_09.c":32:33)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_09.c":34:9)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_09.c":34:14)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_09.c":36:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_char_09.c":40:5)
#loc37 = loc("CWE415_Double_Free__malloc_free_char_09.c":36:8)
#loc38 = loc("CWE415_Double_Free__malloc_free_char_09.c":37:5)
#loc39 = loc("CWE415_Double_Free__malloc_free_char_09.c":39:9)
#loc40 = loc("CWE415_Double_Free__malloc_free_char_09.c":39:14)
#loc41 = loc("CWE415_Double_Free__malloc_free_char_09.c":137:1)
#loc42 = loc("CWE415_Double_Free__malloc_free_char_09.c":143:1)
#loc43 = loc("CWE415_Double_Free__malloc_free_char_09.c":139:5)
#loc44 = loc("CWE415_Double_Free__malloc_free_char_09.c":139:14)
#loc45 = loc("CWE415_Double_Free__malloc_free_char_09.c":140:5)
#loc46 = loc("CWE415_Double_Free__malloc_free_char_09.c":140:14)
#loc47 = loc("CWE415_Double_Free__malloc_free_char_09.c":141:5)
#loc48 = loc("CWE415_Double_Free__malloc_free_char_09.c":141:14)
#loc49 = loc("CWE415_Double_Free__malloc_free_char_09.c":142:5)
#loc50 = loc("CWE415_Double_Free__malloc_free_char_09.c":142:14)
#loc51 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc52 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE415_Double_Free__malloc_free_char_09.c":63:19)
#loc56 = loc("CWE415_Double_Free__malloc_free_char_09.c":48:1)
#loc57 = loc("CWE415_Double_Free__malloc_free_char_09.c":71:1)
#loc58 = loc("CWE415_Double_Free__malloc_free_char_09.c":50:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_char_09.c":50:12)
#loc60 = loc("CWE415_Double_Free__malloc_free_char_09.c":52:12)
#loc61 = loc("CWE415_Double_Free__malloc_free_char_09.c":52:5)
#loc62 = loc("CWE415_Double_Free__malloc_free_char_09.c":53:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_char_09.c":59:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_char_09.c":53:8)
#loc65 = loc("CWE415_Double_Free__malloc_free_char_09.c":54:5)
#loc66 = loc("CWE415_Double_Free__malloc_free_char_09.c":55:24)
#loc67 = loc("CWE415_Double_Free__malloc_free_char_09.c":55:31)
#loc68 = loc("CWE415_Double_Free__malloc_free_char_09.c":55:35)
#loc69 = loc("CWE415_Double_Free__malloc_free_char_09.c":55:46)
#loc70 = loc("CWE415_Double_Free__malloc_free_char_09.c":55:47)
#loc71 = loc("CWE415_Double_Free__malloc_free_char_09.c":55:9)
#loc72 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:9)
#loc73 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:37)
#loc74 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:13)
#loc75 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:21)
#loc76 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:27)
#loc77 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:28)
#loc78 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:34)
#loc79 = loc("CWE415_Double_Free__malloc_free_char_09.c":56:33)
#loc80 = loc("CWE415_Double_Free__malloc_free_char_09.c":58:9)
#loc81 = loc("CWE415_Double_Free__malloc_free_char_09.c":58:14)
#loc82 = loc("CWE415_Double_Free__malloc_free_char_09.c":60:5)
#loc83 = loc("CWE415_Double_Free__malloc_free_char_09.c":70:5)
#loc84 = loc("CWE415_Double_Free__malloc_free_char_09.c":60:8)
#loc85 = loc("CWE415_Double_Free__malloc_free_char_09.c":61:5)
#loc86 = loc("CWE415_Double_Free__malloc_free_char_09.c":64:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_char_09.c":66:5)
#loc88 = loc("CWE415_Double_Free__malloc_free_char_09.c":63:9)
#loc89 = loc("CWE415_Double_Free__malloc_free_char_09.c":74:1)
#loc90 = loc("CWE415_Double_Free__malloc_free_char_09.c":92:1)
#loc91 = loc("CWE415_Double_Free__malloc_free_char_09.c":76:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_char_09.c":76:12)
#loc93 = loc("CWE415_Double_Free__malloc_free_char_09.c":78:12)
#loc94 = loc("CWE415_Double_Free__malloc_free_char_09.c":78:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_char_09.c":79:5)
#loc96 = loc("CWE415_Double_Free__malloc_free_char_09.c":85:5)
#loc97 = loc("CWE415_Double_Free__malloc_free_char_09.c":79:8)
#loc98 = loc("CWE415_Double_Free__malloc_free_char_09.c":80:5)
#loc99 = loc("CWE415_Double_Free__malloc_free_char_09.c":81:24)
#loc100 = loc("CWE415_Double_Free__malloc_free_char_09.c":81:31)
#loc101 = loc("CWE415_Double_Free__malloc_free_char_09.c":81:35)
#loc102 = loc("CWE415_Double_Free__malloc_free_char_09.c":81:46)
#loc103 = loc("CWE415_Double_Free__malloc_free_char_09.c":81:47)
#loc104 = loc("CWE415_Double_Free__malloc_free_char_09.c":81:9)
#loc105 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:9)
#loc106 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:37)
#loc107 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:13)
#loc108 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:21)
#loc109 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:27)
#loc110 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:28)
#loc111 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:34)
#loc112 = loc("CWE415_Double_Free__malloc_free_char_09.c":82:33)
#loc113 = loc("CWE415_Double_Free__malloc_free_char_09.c":84:9)
#loc114 = loc("CWE415_Double_Free__malloc_free_char_09.c":84:14)
#loc115 = loc("CWE415_Double_Free__malloc_free_char_09.c":86:5)
#loc116 = loc("CWE415_Double_Free__malloc_free_char_09.c":91:5)
#loc117 = loc("CWE415_Double_Free__malloc_free_char_09.c":86:8)
#loc118 = loc("CWE415_Double_Free__malloc_free_char_09.c":87:5)
#loc119 = loc("CWE415_Double_Free__malloc_free_char_09.c":95:1)
#loc120 = loc("CWE415_Double_Free__malloc_free_char_09.c":116:1)
#loc121 = loc("CWE415_Double_Free__malloc_free_char_09.c":97:5)
#loc122 = loc("CWE415_Double_Free__malloc_free_char_09.c":97:12)
#loc123 = loc("CWE415_Double_Free__malloc_free_char_09.c":99:12)
#loc124 = loc("CWE415_Double_Free__malloc_free_char_09.c":99:5)
#loc125 = loc("CWE415_Double_Free__malloc_free_char_09.c":100:5)
#loc126 = loc("CWE415_Double_Free__malloc_free_char_09.c":110:5)
#loc127 = loc("CWE415_Double_Free__malloc_free_char_09.c":100:8)
#loc128 = loc("CWE415_Double_Free__malloc_free_char_09.c":101:5)
#loc129 = loc("CWE415_Double_Free__malloc_free_char_09.c":104:5)
#loc130 = loc("CWE415_Double_Free__malloc_free_char_09.c":106:5)
#loc131 = loc("CWE415_Double_Free__malloc_free_char_09.c":103:19)
#loc132 = loc("CWE415_Double_Free__malloc_free_char_09.c":103:9)
#loc133 = loc("CWE415_Double_Free__malloc_free_char_09.c":107:24)
#loc134 = loc("CWE415_Double_Free__malloc_free_char_09.c":107:31)
#loc135 = loc("CWE415_Double_Free__malloc_free_char_09.c":107:35)
#loc136 = loc("CWE415_Double_Free__malloc_free_char_09.c":107:46)
#loc137 = loc("CWE415_Double_Free__malloc_free_char_09.c":107:47)
#loc138 = loc("CWE415_Double_Free__malloc_free_char_09.c":107:9)
#loc139 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:9)
#loc140 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:37)
#loc141 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:13)
#loc142 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:21)
#loc143 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:27)
#loc144 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:28)
#loc145 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:34)
#loc146 = loc("CWE415_Double_Free__malloc_free_char_09.c":108:33)
#loc147 = loc("CWE415_Double_Free__malloc_free_char_09.c":111:5)
#loc148 = loc("CWE415_Double_Free__malloc_free_char_09.c":115:5)
#loc149 = loc("CWE415_Double_Free__malloc_free_char_09.c":111:8)
#loc150 = loc("CWE415_Double_Free__malloc_free_char_09.c":112:5)
#loc151 = loc("CWE415_Double_Free__malloc_free_char_09.c":114:9)
#loc152 = loc("CWE415_Double_Free__malloc_free_char_09.c":114:14)
#loc153 = loc("CWE415_Double_Free__malloc_free_char_09.c":119:1)
#loc154 = loc("CWE415_Double_Free__malloc_free_char_09.c":135:1)
#loc155 = loc("CWE415_Double_Free__malloc_free_char_09.c":121:5)
#loc156 = loc("CWE415_Double_Free__malloc_free_char_09.c":121:12)
#loc157 = loc("CWE415_Double_Free__malloc_free_char_09.c":123:12)
#loc158 = loc("CWE415_Double_Free__malloc_free_char_09.c":123:5)
#loc159 = loc("CWE415_Double_Free__malloc_free_char_09.c":124:5)
#loc160 = loc("CWE415_Double_Free__malloc_free_char_09.c":129:5)
#loc161 = loc("CWE415_Double_Free__malloc_free_char_09.c":124:8)
#loc162 = loc("CWE415_Double_Free__malloc_free_char_09.c":125:5)
#loc163 = loc("CWE415_Double_Free__malloc_free_char_09.c":126:24)
#loc164 = loc("CWE415_Double_Free__malloc_free_char_09.c":126:31)
#loc165 = loc("CWE415_Double_Free__malloc_free_char_09.c":126:35)
#loc166 = loc("CWE415_Double_Free__malloc_free_char_09.c":126:46)
#loc167 = loc("CWE415_Double_Free__malloc_free_char_09.c":126:47)
#loc168 = loc("CWE415_Double_Free__malloc_free_char_09.c":126:9)
#loc169 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:9)
#loc170 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:37)
#loc171 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:13)
#loc172 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:21)
#loc173 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:27)
#loc174 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:28)
#loc175 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:34)
#loc176 = loc("CWE415_Double_Free__malloc_free_char_09.c":127:33)
#loc177 = loc("CWE415_Double_Free__malloc_free_char_09.c":130:5)
#loc178 = loc("CWE415_Double_Free__malloc_free_char_09.c":134:5)
#loc179 = loc("CWE415_Double_Free__malloc_free_char_09.c":130:8)
#loc180 = loc("CWE415_Double_Free__malloc_free_char_09.c":131:5)
#loc181 = loc("CWE415_Double_Free__malloc_free_char_09.c":133:9)
#loc182 = loc("CWE415_Double_Free__malloc_free_char_09.c":133:14)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc9, #loc10])
#loc188 = loc(fused[#loc11, #loc12])
#loc189 = loc(fused[#loc14, #loc13])
#loc190 = loc(fused[#loc15, #loc16])
#loc191 = loc(fused[#loc18, #loc16])
#loc192 = loc(fused[#loc21, #loc22])
#loc193 = loc(fused[#loc20, #loc22])
#loc194 = loc(fused[#loc19, #loc23])
#loc195 = loc(fused[#loc24, #loc23])
#loc196 = loc(fused[#loc25, #loc26])
#loc197 = loc(fused[#loc27, #loc28])
#loc198 = loc(fused[#loc29, #loc26])
#loc199 = loc(fused[#loc35, #loc36])
#loc200 = loc(fused[#loc38, #loc36])
#loc201 = loc(fused[#loc41, #loc42])
#loc202 = loc(fused[#loc43, #loc44])
#loc203 = loc(fused[#loc45, #loc46])
#loc204 = loc(fused[#loc47, #loc48])
#loc205 = loc(fused[#loc49, #loc50])
#loc206 = loc(fused[#loc51, #loc52])
#loc207 = loc(fused[#loc53, #loc54])
#loc208 = loc(fused[#loc56, #loc57])
#loc209 = loc(fused[#loc58, #loc59])
#loc210 = loc(fused[#loc61, #loc60])
#loc211 = loc(fused[#loc62, #loc63])
#loc212 = loc(fused[#loc65, #loc63])
#loc213 = loc(fused[#loc68, #loc69])
#loc214 = loc(fused[#loc67, #loc69])
#loc215 = loc(fused[#loc66, #loc70])
#loc216 = loc(fused[#loc71, #loc70])
#loc217 = loc(fused[#loc72, #loc73])
#loc218 = loc(fused[#loc74, #loc75])
#loc219 = loc(fused[#loc76, #loc73])
#loc220 = loc(fused[#loc82, #loc83])
#loc221 = loc(fused[#loc85, #loc86, #loc87, #loc83])
#loc222 = loc(fused[#loc89, #loc90])
#loc223 = loc(fused[#loc91, #loc92])
#loc224 = loc(fused[#loc94, #loc93])
#loc225 = loc(fused[#loc95, #loc96])
#loc226 = loc(fused[#loc98, #loc96])
#loc227 = loc(fused[#loc101, #loc102])
#loc228 = loc(fused[#loc100, #loc102])
#loc229 = loc(fused[#loc99, #loc103])
#loc230 = loc(fused[#loc104, #loc103])
#loc231 = loc(fused[#loc105, #loc106])
#loc232 = loc(fused[#loc107, #loc108])
#loc233 = loc(fused[#loc109, #loc106])
#loc234 = loc(fused[#loc115, #loc116])
#loc235 = loc(fused[#loc118, #loc116])
#loc236 = loc(fused[#loc119, #loc120])
#loc237 = loc(fused[#loc121, #loc122])
#loc238 = loc(fused[#loc124, #loc123])
#loc239 = loc(fused[#loc125, #loc126])
#loc240 = loc(fused[#loc128, #loc129, #loc130, #loc126])
#loc241 = loc(fused[#loc135, #loc136])
#loc242 = loc(fused[#loc134, #loc136])
#loc243 = loc(fused[#loc133, #loc137])
#loc244 = loc(fused[#loc138, #loc137])
#loc245 = loc(fused[#loc139, #loc140])
#loc246 = loc(fused[#loc141, #loc142])
#loc247 = loc(fused[#loc143, #loc140])
#loc248 = loc(fused[#loc147, #loc148])
#loc249 = loc(fused[#loc150, #loc148])
#loc250 = loc(fused[#loc153, #loc154])
#loc251 = loc(fused[#loc155, #loc156])
#loc252 = loc(fused[#loc158, #loc157])
#loc253 = loc(fused[#loc159, #loc160])
#loc254 = loc(fused[#loc162, #loc160])
#loc255 = loc(fused[#loc165, #loc166])
#loc256 = loc(fused[#loc164, #loc166])
#loc257 = loc(fused[#loc163, #loc167])
#loc258 = loc(fused[#loc168, #loc167])
#loc259 = loc(fused[#loc169, #loc170])
#loc260 = loc(fused[#loc171, #loc172])
#loc261 = loc(fused[#loc173, #loc170])
#loc262 = loc(fused[#loc177, #loc178])
#loc263 = loc(fused[#loc180, #loc178])
