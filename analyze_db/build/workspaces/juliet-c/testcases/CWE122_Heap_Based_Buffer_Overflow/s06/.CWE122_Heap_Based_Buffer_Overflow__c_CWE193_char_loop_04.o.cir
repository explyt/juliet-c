!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc193)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc194)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc195)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc196)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc197)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc198)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc199)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc200)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc195)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc203)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc30)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc208)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc209)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
    cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.br ^bb3 loc(#loc212)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc213)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc214)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc41)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc43)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc215)
  ^bb9:  // pred: ^bb8
    %21 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc195)
    cir.copy %21 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc195)
    %22 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
    %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
    cir.store %24, %2 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb10 loc(#loc217)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc52)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.br ^bb11 loc(#loc217)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc56)
    %31 = cir.binop(add, %28, %30) : !u64i loc(#loc219)
    %32 = cir.cmp(lt, %27, %31) : !u64i, !cir.bool loc(#loc220)
    cir.brcond %32 ^bb12, ^bb16 loc(#loc57)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc221)
  ^bb13:  // pred: ^bb12
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc60)
    %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc60)
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    cir.br ^bb14 loc(#loc51)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc51)
  ^bb15:  // pred: ^bb14
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc66)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb11 loc(#loc217)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc51)
  ^bb17:  // pred: ^bb16
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %43 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb18 loc(#loc45)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc18)
  } loc(#loc201)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc225)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc226)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc194)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc228)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc229)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc85)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.br ^bb1 loc(#loc232)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc233)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb8 loc(#loc91)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc94)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc95)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc95)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc95)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc234)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc235)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
    cir.store %17, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    cir.br ^bb4 loc(#loc238)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc239)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc240)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc107)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc109)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc88)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc241)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc194)
    cir.copy %25 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc194)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc112)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc113)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc112)
    cir.store %28, %2 : !u64i, !cir.ptr<!u64i> loc(#loc242)
    cir.br ^bb11 loc(#loc243)
  ^bb11:  // pred: ^bb10
    %29 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc118)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.br ^bb12 loc(#loc243)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc122)
    %35 = cir.binop(add, %32, %34) : !u64i loc(#loc245)
    %36 = cir.cmp(lt, %31, %35) : !u64i, !cir.bool loc(#loc246)
    cir.brcond %36 ^bb13, ^bb17 loc(#loc123)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc247)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc126)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc126)
    %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc126)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc248)
    cir.br ^bb15 loc(#loc117)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc117)
  ^bb16:  // pred: ^bb15
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc132)
    cir.store %45, %1 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb12 loc(#loc243)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc117)
  ^bb18:  // pred: ^bb17
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc136)
    cir.br ^bb19 loc(#loc111)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc79)
  } loc(#loc227)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc193)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc252)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc253)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc144)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc256)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc150)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc151)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc151)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc151)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc257)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc258)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc259)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    cir.br ^bb3 loc(#loc261)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc161)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc262)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc263)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc163)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc165)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc163)
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc159)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc147)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc147)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc264)
  ^bb9:  // pred: ^bb8
    %23 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc193)
    cir.copy %23 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc193)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc168)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc169)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc168)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc265)
    cir.br ^bb10 loc(#loc266)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc174)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc267)
    cir.br ^bb11 loc(#loc266)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc176)
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc178)
    %33 = cir.binop(add, %30, %32) : !u64i loc(#loc268)
    %34 = cir.cmp(lt, %29, %33) : !u64i, !cir.bool loc(#loc269)
    cir.brcond %34 ^bb12, ^bb16 loc(#loc179)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc270)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc182)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc182)
    %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc182)
    %39 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc184)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc185)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc271)
    cir.br ^bb14 loc(#loc173)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc173)
  ^bb15:  // pred: ^bb14
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc187)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc188)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc272)
    cir.br ^bb11 loc(#loc266)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc173)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc191)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
    cir.br ^bb18 loc(#loc167)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc138)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":107:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":107:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":81:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":81:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":46:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":46:29)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":35:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":58:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":47:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":47:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":47:19)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":37:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":37:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":38:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":38:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":39:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":44:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":39:8)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":40:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":42:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":42:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":42:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":42:45)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":42:46)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":42:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:37)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":43:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":45:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":57:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":48:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":48:28)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":48:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":48:34)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":54:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:14)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:25)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:37)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:23)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":52:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":53:30)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":53:23)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":53:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":53:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":53:19)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":53:31)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:41)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":51:40)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":55:19)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":55:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":56:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":56:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":121:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":125:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":123:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":123:14)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":124:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":124:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":72:19)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":65:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":93:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":82:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":82:16)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":82:19)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":67:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":67:12)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":68:12)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":68:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":69:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":79:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":69:8)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":70:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":73:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":75:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":72:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:24)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:32)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:35)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:38)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:49)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:31)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:50)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":77:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:37)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:21)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:27)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:28)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:34)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":78:33)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":80:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":92:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":83:21)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":83:28)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":83:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":83:34)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":89:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:18)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:14)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:21)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:25)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:37)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:23)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":87:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":88:30)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":88:23)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":88:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":88:18)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":88:19)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":88:31)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:41)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":86:40)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":90:19)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":90:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":91:14)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":91:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":96:1)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":119:1)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":108:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":108:16)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":108:19)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":98:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":98:12)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":99:12)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":99:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":100:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":105:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":100:8)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":101:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:24)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:32)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:35)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:38)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:49)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:31)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:50)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":103:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:37)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:13)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:21)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:27)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:28)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:34)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":104:33)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":106:5)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":118:5)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":109:21)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":109:28)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":109:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":109:34)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":115:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:18)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:14)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:21)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:25)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:37)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:23)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":113:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":114:30)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":114:23)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":114:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":114:18)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":114:19)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":114:31)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:41)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":112:40)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":116:19)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":116:9)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":117:14)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_04.c":117:9)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc7, #loc8])
#loc197 = loc(fused[#loc9, #loc10])
#loc198 = loc(fused[#loc11, #loc12])
#loc199 = loc(fused[#loc13, #loc14])
#loc200 = loc(fused[#loc15, #loc16])
#loc201 = loc(fused[#loc17, #loc18])
#loc202 = loc(fused[#loc19, #loc20])
#loc203 = loc(fused[#loc19, #loc21])
#loc204 = loc(fused[#loc22, #loc23])
#loc205 = loc(fused[#loc25, #loc24])
#loc206 = loc(fused[#loc26, #loc27])
#loc207 = loc(fused[#loc29, #loc27])
#loc208 = loc(fused[#loc32, #loc33])
#loc209 = loc(fused[#loc31, #loc33])
#loc210 = loc(fused[#loc30, #loc34])
#loc211 = loc(fused[#loc35, #loc34])
#loc212 = loc(fused[#loc36, #loc37])
#loc213 = loc(fused[#loc38, #loc39])
#loc214 = loc(fused[#loc40, #loc37])
#loc215 = loc(fused[#loc44, #loc45])
#loc216 = loc(fused[#loc48, #loc49])
#loc217 = loc(fused[#loc50, #loc51])
#loc218 = loc(fused[#loc53, #loc52])
#loc219 = loc(fused[#loc55, #loc56])
#loc220 = loc(fused[#loc54, #loc56])
#loc221 = loc(fused[#loc58, #loc51])
#loc222 = loc(fused[#loc61, #loc64])
#loc223 = loc(fused[#loc66, #loc65])
#loc224 = loc(fused[#loc71, #loc72])
#loc225 = loc(fused[#loc73, #loc74])
#loc226 = loc(fused[#loc75, #loc76])
#loc227 = loc(fused[#loc78, #loc79])
#loc228 = loc(fused[#loc80, #loc81])
#loc229 = loc(fused[#loc80, #loc82])
#loc230 = loc(fused[#loc83, #loc84])
#loc231 = loc(fused[#loc86, #loc85])
#loc232 = loc(fused[#loc87, #loc88])
#loc233 = loc(fused[#loc90, #loc91, #loc92, #loc88])
#loc234 = loc(fused[#loc97, #loc98])
#loc235 = loc(fused[#loc99, #loc98])
#loc236 = loc(fused[#loc94, #loc100])
#loc237 = loc(fused[#loc101, #loc100])
#loc238 = loc(fused[#loc102, #loc103])
#loc239 = loc(fused[#loc104, #loc105])
#loc240 = loc(fused[#loc106, #loc103])
#loc241 = loc(fused[#loc110, #loc111])
#loc242 = loc(fused[#loc114, #loc115])
#loc243 = loc(fused[#loc116, #loc117])
#loc244 = loc(fused[#loc119, #loc118])
#loc245 = loc(fused[#loc121, #loc122])
#loc246 = loc(fused[#loc120, #loc122])
#loc247 = loc(fused[#loc124, #loc117])
#loc248 = loc(fused[#loc127, #loc130])
#loc249 = loc(fused[#loc132, #loc131])
#loc250 = loc(fused[#loc137, #loc138])
#loc251 = loc(fused[#loc139, #loc140])
#loc252 = loc(fused[#loc139, #loc141])
#loc253 = loc(fused[#loc142, #loc143])
#loc254 = loc(fused[#loc145, #loc144])
#loc255 = loc(fused[#loc146, #loc147])
#loc256 = loc(fused[#loc149, #loc147])
#loc257 = loc(fused[#loc153, #loc154])
#loc258 = loc(fused[#loc155, #loc154])
#loc259 = loc(fused[#loc150, #loc156])
#loc260 = loc(fused[#loc157, #loc156])
#loc261 = loc(fused[#loc158, #loc159])
#loc262 = loc(fused[#loc160, #loc161])
#loc263 = loc(fused[#loc162, #loc159])
#loc264 = loc(fused[#loc166, #loc167])
#loc265 = loc(fused[#loc170, #loc171])
#loc266 = loc(fused[#loc172, #loc173])
#loc267 = loc(fused[#loc175, #loc174])
#loc268 = loc(fused[#loc177, #loc178])
#loc269 = loc(fused[#loc176, #loc178])
#loc270 = loc(fused[#loc180, #loc173])
#loc271 = loc(fused[#loc183, #loc186])
#loc272 = loc(fused[#loc188, #loc187])
