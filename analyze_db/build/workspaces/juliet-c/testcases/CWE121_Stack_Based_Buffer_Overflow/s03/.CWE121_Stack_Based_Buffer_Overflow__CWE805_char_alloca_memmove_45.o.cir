!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc111)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc115)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc13)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc16)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc117)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %24 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %25 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc119)
    cir.call %25() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc4)
  } loc(#loc112)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc126)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc36)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc37)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc37)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc127)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc41)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc42)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc128)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc47)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc129)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc130)
      cir.libc.memmove %25 bytes from %21 to %19 : !cir.ptr<!void>, !u64i loc(#loc131)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc52)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc54)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc54)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc56)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc132)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    } loc(#loc125)
    cir.return loc(#loc28)
  } loc(#loc123)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc133)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc66)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc66)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc66)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc66)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc66)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc137)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc66)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc68)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc68)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc68)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc68)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc68)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc68)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc71)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %24 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    %25 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %25() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc77)
    cir.return loc(#loc62)
  } loc(#loc134)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc145)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc88)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc89)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc89)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc89)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc93)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc95)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc94)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc96)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc147)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc99)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc99)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc148)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc149)
      cir.libc.memmove %25 bytes from %21 to %19 : !cir.ptr<!void>, !u64i loc(#loc150)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc104)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc104)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc106)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc107)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc106)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc108)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc151)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    } loc(#loc144)
    cir.return loc(#loc80)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":21:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":21:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":40:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":51:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":42:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":42:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":43:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":43:36)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":44:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":44:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":47:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":47:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":48:15)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":48:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":48:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":48:11)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":49:81)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":49:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":50:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":50:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":84:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":87:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":86:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":86:13)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":26:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":38:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":28:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":28:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":29:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":37:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":30:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":30:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":31:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":31:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":31:29)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":31:33)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":31:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":31:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":32:25)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":32:16)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":32:20)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":32:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":34:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":34:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":34:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":34:35)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":34:46)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":34:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":34:47)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":35:23)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":35:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":35:14)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":35:18)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":35:19)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":36:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":36:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":22:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":22:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":72:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":82:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":74:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":74:12)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":75:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":75:36)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":76:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":76:37)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":78:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":78:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":79:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":79:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":79:10)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":79:11)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":80:85)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":80:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":81:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":81:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":58:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":70:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":60:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":60:19)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":61:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":69:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":62:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":62:24)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":63:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":63:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":63:29)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":63:33)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":63:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":63:34)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":64:25)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":64:16)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":64:20)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":64:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":66:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":66:23)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":66:31)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":66:35)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":66:46)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":66:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":66:47)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":67:23)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":67:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":67:14)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":67:18)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":67:19)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":68:19)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_45.c":68:9)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc12, #loc11])
#loc117 = loc(fused[#loc14, #loc13])
#loc118 = loc(fused[#loc18, #loc17])
#loc119 = loc(fused[#loc19, #loc20])
#loc120 = loc(fused[#loc21, #loc22])
#loc121 = loc(fused[#loc23, #loc24])
#loc122 = loc(fused[#loc25, #loc26])
#loc123 = loc(fused[#loc27, #loc28])
#loc124 = loc(fused[#loc29, #loc30])
#loc125 = loc(fused[#loc31, #loc32])
#loc126 = loc(fused[#loc33, #loc34])
#loc127 = loc(fused[#loc39, #loc40])
#loc128 = loc(fused[#loc44, #loc41])
#loc129 = loc(fused[#loc48, #loc49])
#loc130 = loc(fused[#loc47, #loc49])
#loc131 = loc(fused[#loc50, #loc51])
#loc132 = loc(fused[#loc53, #loc52])
#loc133 = loc(fused[#loc59, #loc60])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc63, #loc64])
#loc136 = loc(fused[#loc65, #loc66])
#loc137 = loc(fused[#loc67, #loc68])
#loc138 = loc(fused[#loc70, #loc69])
#loc139 = loc(fused[#loc72, #loc71])
#loc140 = loc(fused[#loc76, #loc75])
#loc141 = loc(fused[#loc77, #loc78])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc83, #loc84])
#loc145 = loc(fused[#loc85, #loc86])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc96, #loc93])
#loc148 = loc(fused[#loc100, #loc101])
#loc149 = loc(fused[#loc99, #loc101])
#loc150 = loc(fused[#loc102, #loc103])
#loc151 = loc(fused[#loc105, #loc104])
