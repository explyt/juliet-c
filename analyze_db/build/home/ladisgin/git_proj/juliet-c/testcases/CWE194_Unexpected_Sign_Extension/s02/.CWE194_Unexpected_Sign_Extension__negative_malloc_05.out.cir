!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":130:10)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":130:14)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":130:20)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":130:32)
#loc213 = loc(fused[#loc72, #loc73])
#loc214 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc190)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc193)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc17)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc24)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc24)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc197)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc28)
    %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc28)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc199)
    cir.brcond %13 ^bb6, ^bb11 loc(#loc200)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc31)
    %15 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc32)
    %16 = cir.cast(integral, %15 : !s16i), !u64i loc(#loc32)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.br ^bb7 loc(#loc202)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc203)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc204)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc38)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc40)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc34)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    %28 = cir.const #cir.int<65> : !s32i loc(#loc42)
    %29 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc43)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc43)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc43)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc43)
    cir.libc.memset %33 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc205)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc47)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %37 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc49)
    %38 = cir.cast(integral, %37 : !s16i), !s32i loc(#loc49)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc49)
    %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc51)
    cir.store %35, %41 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc12)
  } loc(#loc191)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc207)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc210)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_05_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_05_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.return %17 : !s32i loc(#loc217)
  } loc(#loc212)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc92)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc221)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc99)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc218)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb4 loc(#loc105)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc108)
    %12 = cir.cast(integral, %11 : !s32i), !s16i loc(#loc108)
    cir.store %12, %1 : !s16i, !cir.ptr<!s16i> loc(#loc225)
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc226)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc113)
    %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc113)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %16 ^bb7, ^bb12 loc(#loc228)
  ^bb7:  // pred: ^bb6
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
    %18 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc117)
    %19 = cir.cast(integral, %18 : !s16i), !u64i loc(#loc117)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.br ^bb8 loc(#loc230)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc231)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc232)
  ^bb9:  // pred: ^bb8
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc125)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
    cir.br ^bb10 loc(#loc119)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc119)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    %31 = cir.const #cir.int<65> : !s32i loc(#loc127)
    %32 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc128)
    %33 = cir.cast(integral, %32 : !s16i), !s32i loc(#loc128)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc128)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc128)
    cir.libc.memset %36 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc233)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc132)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %40 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc134)
    %41 = cir.cast(integral, %40 : !s16i), !s32i loc(#loc134)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc134)
    %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc234)
    %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
    cir.br ^bb12 loc(#loc112)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc112)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc94)
  } loc(#loc219)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc236)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc237)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc147)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc151)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc240)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<100> : !s32i loc(#loc153)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc153)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc153)
    cir.store %10, %1 : !s16i, !cir.ptr<!s16i> loc(#loc241)
    cir.br ^bb3 loc(#loc150)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc242)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc158)
    %12 = cir.cast(integral, %11 : !s16i), !s32i loc(#loc158)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc159)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %14 ^bb6, ^bb11 loc(#loc244)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc161)
    %16 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc162)
    %17 = cir.cast(integral, %16 : !s16i), !u64i loc(#loc162)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc245)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.br ^bb7 loc(#loc246)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc247)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc248)
  ^bb8:  // pred: ^bb7
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc168)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc170)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc168)
    cir.br ^bb9 loc(#loc164)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc164)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc171)
    %29 = cir.const #cir.int<65> : !s32i loc(#loc172)
    %30 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc173)
    %31 = cir.cast(integral, %30 : !s16i), !s32i loc(#loc173)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc173)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc173)
    cir.libc.memset %34 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc249)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc177)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    %38 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc179)
    %39 = cir.cast(integral, %38 : !s16i), !s32i loc(#loc179)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc179)
    %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc181)
    cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc184)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc185)
    cir.br ^bb11 loc(#loc157)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc157)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc142)
  } loc(#loc235)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":0:0)
#loc1 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":23:1)
#loc2 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":23:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":28:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":51:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":43:9)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":43:48)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":30:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":30:11)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":32:12)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":32:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":33:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":37:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":33:8)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":34:5)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":36:17)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":36:16)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":36:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":39:5)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":50:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":39:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":39:16)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":40:5)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":43:37)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":43:44)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:9)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:43)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:13)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:27)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:33)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:34)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:40)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":44:39)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":46:16)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":46:28)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":46:33)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":46:38)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":46:9)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":46:39)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":47:30)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":47:9)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":47:20)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":47:25)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":47:26)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":48:19)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":48:9)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":49:14)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":49:9)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":114:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":118:1)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":116:5)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":116:14)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":117:5)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":117:14)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":135:15)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":137:15)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":140:15)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":142:15)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":130:1)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":145:1)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":131:1)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":133:27)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":133:22)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":133:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":135:5)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":136:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":136:63)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":137:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":140:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":141:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":141:62)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":142:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":144:12)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":144:5)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":24:1)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":24:26)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":66:19)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":58:1)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":86:1)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":78:9)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":78:48)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":60:5)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":60:11)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":62:12)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":62:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":63:5)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":72:5)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":63:8)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":64:5)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":67:5)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":69:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":66:9)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":71:16)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":71:20)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":71:9)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":74:5)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":85:5)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":74:9)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":74:16)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":75:5)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":78:37)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":78:44)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:9)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:43)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:13)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:27)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:33)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:34)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:40)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":79:39)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":81:16)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":81:28)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":81:33)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":81:38)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":81:9)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":81:39)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":82:30)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":82:9)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":82:20)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":82:25)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":82:26)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":83:19)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":83:9)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":84:14)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":84:9)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":89:1)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":112:1)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":104:9)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":104:48)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":91:5)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":91:11)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":93:12)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":93:5)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":94:5)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":98:5)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":94:8)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":95:5)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":97:16)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":97:20)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":97:9)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":100:5)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":111:5)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":100:9)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":100:16)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":101:5)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":104:37)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":104:44)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:9)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:43)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:13)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:27)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:33)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:34)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:40)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":105:39)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":107:16)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":107:28)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":107:33)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":107:38)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":107:9)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":107:39)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":108:30)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":108:9)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":108:20)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":108:25)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":108:26)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":109:19)
#loc183 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":109:9)
#loc184 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":110:14)
#loc185 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_05.c":110:9)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc9, #loc10])
#loc191 = loc(fused[#loc11, #loc12])
#loc192 = loc(fused[#loc13, #loc14])
#loc193 = loc(fused[#loc15, #loc16])
#loc194 = loc(fused[#loc18, #loc17])
#loc195 = loc(fused[#loc19, #loc20])
#loc196 = loc(fused[#loc22, #loc20])
#loc197 = loc(fused[#loc25, #loc23])
#loc198 = loc(fused[#loc26, #loc27])
#loc199 = loc(fused[#loc28, #loc29])
#loc200 = loc(fused[#loc30, #loc27])
#loc201 = loc(fused[#loc31, #loc14])
#loc202 = loc(fused[#loc33, #loc34])
#loc203 = loc(fused[#loc35, #loc36])
#loc204 = loc(fused[#loc37, #loc34])
#loc205 = loc(fused[#loc45, #loc46])
#loc206 = loc(fused[#loc48, #loc47])
#loc207 = loc(fused[#loc56, #loc57])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc60, #loc61])
#loc210 = loc(fused[#loc62, #loc63])
#loc211 = loc(fused[#loc64, #loc65])
#loc212 = loc(fused[#loc70, #loc71])
#loc215 = loc(fused[#loc81, #loc82])
#loc216 = loc(fused[#loc85, #loc86])
#loc217 = loc(fused[#loc89, #loc88])
#loc218 = loc(fused[#loc90, #loc91])
#loc219 = loc(fused[#loc93, #loc94])
#loc220 = loc(fused[#loc95, #loc96])
#loc221 = loc(fused[#loc97, #loc98])
#loc222 = loc(fused[#loc100, #loc99])
#loc223 = loc(fused[#loc101, #loc102])
#loc224 = loc(fused[#loc104, #loc105, #loc106, #loc102])
#loc225 = loc(fused[#loc110, #loc109])
#loc226 = loc(fused[#loc111, #loc112])
#loc227 = loc(fused[#loc113, #loc114])
#loc228 = loc(fused[#loc115, #loc112])
#loc229 = loc(fused[#loc116, #loc96])
#loc230 = loc(fused[#loc118, #loc119])
#loc231 = loc(fused[#loc120, #loc121])
#loc232 = loc(fused[#loc122, #loc119])
#loc233 = loc(fused[#loc130, #loc131])
#loc234 = loc(fused[#loc133, #loc132])
#loc235 = loc(fused[#loc141, #loc142])
#loc236 = loc(fused[#loc143, #loc144])
#loc237 = loc(fused[#loc145, #loc146])
#loc238 = loc(fused[#loc148, #loc147])
#loc239 = loc(fused[#loc149, #loc150])
#loc240 = loc(fused[#loc152, #loc150])
#loc241 = loc(fused[#loc155, #loc154])
#loc242 = loc(fused[#loc156, #loc157])
#loc243 = loc(fused[#loc158, #loc159])
#loc244 = loc(fused[#loc160, #loc157])
#loc245 = loc(fused[#loc161, #loc144])
#loc246 = loc(fused[#loc163, #loc164])
#loc247 = loc(fused[#loc165, #loc166])
#loc248 = loc(fused[#loc167, #loc164])
#loc249 = loc(fused[#loc175, #loc176])
#loc250 = loc(fused[#loc178, #loc177])
