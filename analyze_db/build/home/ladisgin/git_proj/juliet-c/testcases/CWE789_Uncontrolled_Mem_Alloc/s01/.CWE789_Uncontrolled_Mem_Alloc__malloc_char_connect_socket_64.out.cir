!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":216:10)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":216:14)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":216:20)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":216:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc313 = loc(fused[#loc134, #loc135])
#loc314 = loc(fused[#loc136, #loc137])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc262)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc264)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc265)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc266)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc267)
  cir.func private @close(!s32i) -> !s32i loc(#loc268)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64b_badSink(!cir.ptr<!void>) loc(#loc269)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc271)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc22)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc272)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc274)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc275)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc276)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc277)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc31)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc276)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc38)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc39)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc279)
          cir.scope {
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc45)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc281)
            cir.if %58 {
              cir.break loc(#loc47)
            } loc(#loc282)
          } loc(#loc280)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc283)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc284)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc285)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc55)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc55)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc286)
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc58)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc287)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc63)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc63)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc64)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc288)
          cir.scope {
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc70)
            %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc290)
            %57 = cir.const #cir.int<16> : !u64i loc(#loc291)
            %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc291)
            %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc75)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc76)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc76)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc292)
            cir.if %62 {
              cir.break loc(#loc78)
            } loc(#loc293)
          } loc(#loc289)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc79)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc80)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc81)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc81)
          %34 = cir.const #cir.int<8> : !u64i loc(#loc81)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc81)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc81)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc81)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc81)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc82)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc82)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc294)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc83)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc84)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc84)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc295)
          cir.scope {
            %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc90)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc297)
            %59 = cir.ternary(%58, true {
              %60 = cir.const #true loc(#loc91)
              cir.yield %60 : !cir.bool loc(#loc91)
            }, false {
              %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %61 = cir.const #cir.int<0> : !s32i loc(#loc93)
              %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc298)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc91)
                cir.yield %64 : !cir.bool loc(#loc91)
              }, false {
                %64 = cir.const #false loc(#loc91)
                cir.yield %64 : !cir.bool loc(#loc91)
              }) : (!cir.bool) -> !cir.bool loc(#loc91)
              cir.yield %63 : !cir.bool loc(#loc91)
            }) : (!cir.bool) -> !cir.bool loc(#loc91)
            cir.if %59 {
              cir.break loc(#loc95)
            } loc(#loc299)
          } loc(#loc296)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc96)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc98)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc98)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc300)
          %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc99)
          %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc100)
          %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc99)
          cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc301)
          cir.yield loc(#loc35)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc105)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc105)
          cir.condition(%11) loc(#loc105)
        } loc(#loc278)
      } loc(#loc278)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc109)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc303)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc112)
        } loc(#loc304)
      } loc(#loc302)
    } loc(#loc273)
    %3 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc305)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64b_badSink(%3) : (!cir.ptr<!void>) -> () loc(#loc115)
    cir.return loc(#loc19)
  } loc(#loc270)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc118)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc120)
    cir.return loc(#loc117)
  } loc(#loc306)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc309)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc310)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc311)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc131)
  cir.func @main(%arg0: !s32i loc(fused[#loc134, #loc135]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc136, #loc137])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc313)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc314)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc133)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc139)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc140)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc141)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64_good : !cir.ptr<!cir.func<!void ()>> loc(#loc315)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64_good() : () -> () loc(#loc143)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc316)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64_bad() : () -> () loc(#loc147)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc131)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc317)
    cir.return %17 : !s32i loc(#loc317)
  } loc(#loc312)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc318)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc158)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc321)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc160)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc160)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc322)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc323)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64b_goodG2BSink(%5) : (!cir.ptr<!void>) -> () loc(#loc164)
    cir.return loc(#loc155)
  } loc(#loc319)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64b_goodB2GSink(!cir.ptr<!void>) loc(#loc324)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc326)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc171)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc327)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc329)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc330)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc331)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc332)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc180)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc180)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc331)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc185)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc186)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc187)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc188)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc334)
          cir.scope {
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc194)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc194)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc336)
            cir.if %58 {
              cir.break loc(#loc196)
            } loc(#loc337)
          } loc(#loc335)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc338)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc199)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc339)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc340)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc204)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc204)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc341)
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc206)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc206)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc207)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc342)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc210)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc210)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc211)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc343)
          cir.scope {
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc216)
            %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc345)
            %57 = cir.const #cir.int<16> : !u64i loc(#loc346)
            %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc346)
            %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc222)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc222)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc347)
            cir.if %62 {
              cir.break loc(#loc224)
            } loc(#loc348)
          } loc(#loc344)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc225)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc226)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc226)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc227)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc227)
          %34 = cir.const #cir.int<8> : !u64i loc(#loc227)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc227)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc227)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc227)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc227)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc228)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc228)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc349)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc229)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc230)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc230)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc350)
          cir.scope {
            %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc235)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc236)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc236)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc352)
            %59 = cir.ternary(%58, true {
              %60 = cir.const #true loc(#loc237)
              cir.yield %60 : !cir.bool loc(#loc237)
            }, false {
              %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc238)
              %61 = cir.const #cir.int<0> : !s32i loc(#loc239)
              %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc353)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc237)
                cir.yield %64 : !cir.bool loc(#loc237)
              }, false {
                %64 = cir.const #false loc(#loc237)
                cir.yield %64 : !cir.bool loc(#loc237)
              }) : (!cir.bool) -> !cir.bool loc(#loc237)
              cir.yield %63 : !cir.bool loc(#loc237)
            }) : (!cir.bool) -> !cir.bool loc(#loc237)
            cir.if %59 {
              cir.break loc(#loc241)
            } loc(#loc354)
          } loc(#loc351)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc242)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc242)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc244)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc244)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc355)
          %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc245)
          %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc246)
          %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc248)
          %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc245)
          cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc356)
          cir.yield loc(#loc184)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc251)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc251)
          cir.condition(%11) loc(#loc251)
        } loc(#loc333)
      } loc(#loc333)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc254)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc255)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc255)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc358)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc257)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc258)
        } loc(#loc359)
      } loc(#loc357)
    } loc(#loc328)
    %3 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc360)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64b_goodB2GSink(%3) : (!cir.ptr<!void>) -> () loc(#loc261)
    cir.return loc(#loc168)
  } loc(#loc325)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":84:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":181:1)
#loc13 = loc("/usr/include/stdlib.h":183:14)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":51:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":51:94)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":53:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":115:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":55:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":55:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":57:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":57:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":58:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":113:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":63:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":63:13)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":64:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":64:28)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":65:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":65:32)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":66:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":66:41)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":67:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":102:17)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":77:36)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":77:45)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":77:58)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":77:29)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":77:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":77:69)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":78:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":81:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":78:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":78:34)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":79:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":80:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":82:20)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":82:21)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":82:30)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":82:33)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":82:47)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":82:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":82:48)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":83:34)
#loc56 = loc("/usr/include/netinet/in.h":249:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":83:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":84:39)
#loc59 = loc("/usr/include/netinet/in.h":251:20)
#loc60 = loc("/usr/include/netinet/in.h":33:15)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":84:13)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":84:59)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":85:38)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":85:32)
#loc65 = loc("/usr/include/netinet/in.h":250:15)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":85:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":85:46)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":89:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:25)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:58)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:59)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:68)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:82)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:17)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":86:88)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":87:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":88:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:31)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:46)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:59)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:77)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:80)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:26)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":92:81)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":93:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":96:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":93:17)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":93:31)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":93:44)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":93:47)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":93:61)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":94:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":95:17)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":98:39)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":98:25)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":98:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":100:20)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":100:28)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":100:41)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":100:47)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":100:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":100:48)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":102:16)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":103:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":106:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":103:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":103:30)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":104:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":105:26)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":105:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":114:75)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":114:76)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":114:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":201:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":205:1)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":203:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":203:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":204:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":204:13)
#loc122 = loc("/usr/include/stdlib.h":575:1)
#loc123 = loc("/usr/include/stdlib.h":575:41)
#loc124 = loc("/usr/include/time.h":76:1)
#loc125 = loc("/usr/include/time.h":76:38)
#loc126 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc127 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":221:15)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":223:15)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":226:15)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":228:15)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":216:1)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":231:1)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":217:1)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":219:27)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":219:22)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":219:5)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":221:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":222:5)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":222:71)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":223:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":226:5)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":227:5)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":227:70)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":228:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":230:12)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":230:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":122:1)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":122:98)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":124:1)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":132:1)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":126:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":126:12)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":128:12)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":128:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":130:12)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":130:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":131:79)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":131:80)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":131:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":135:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":135:98)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":137:1)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":199:1)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":139:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":139:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":141:12)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":141:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":142:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":197:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":147:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":147:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":148:9)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":148:28)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":149:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":149:32)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":150:9)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":150:41)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":151:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":186:17)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":161:36)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":161:45)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":161:58)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":161:29)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":161:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":161:69)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":162:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":165:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":162:17)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":162:34)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":163:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":164:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":166:20)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":166:21)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":166:30)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":166:33)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":166:47)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":166:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":166:48)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":167:34)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":167:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":168:49)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":168:39)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":168:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":168:59)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":169:38)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":169:32)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":169:13)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":169:46)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:13)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":173:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:25)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:58)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:59)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:68)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:82)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:17)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":170:88)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":171:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":172:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:31)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:46)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:59)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:77)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:80)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:26)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:13)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":176:81)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":177:13)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":180:13)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":177:17)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":177:31)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":177:44)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":177:47)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":177:61)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":178:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":179:17)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":182:39)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":182:25)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":182:13)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":184:20)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":184:28)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":184:41)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":184:47)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":184:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":184:48)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":186:16)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":187:9)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":190:9)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":187:13)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":187:30)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":188:9)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":189:26)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":189:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":198:79)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":198:80)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_64a.c":198:5)
#loc262 = loc(fused[#loc1, #loc2])
#loc263 = loc(fused[#loc3, #loc4])
#loc264 = loc(fused[#loc6, #loc7])
#loc265 = loc(fused[#loc8, #loc9])
#loc266 = loc(fused[#loc10, #loc11])
#loc267 = loc(fused[#loc12, #loc13])
#loc268 = loc(fused[#loc14, #loc15])
#loc269 = loc(fused[#loc16, #loc17])
#loc270 = loc(fused[#loc18, #loc19])
#loc271 = loc(fused[#loc20, #loc21])
#loc272 = loc(fused[#loc23, #loc22])
#loc273 = loc(fused[#loc24, #loc25])
#loc274 = loc(fused[#loc26, #loc27])
#loc275 = loc(fused[#loc28, #loc29])
#loc276 = loc(fused[#loc30, #loc31])
#loc277 = loc(fused[#loc32, #loc33])
#loc278 = loc(fused[#loc34, #loc35])
#loc279 = loc(fused[#loc40, #loc41])
#loc280 = loc(fused[#loc42, #loc43])
#loc281 = loc(fused[#loc44, #loc45])
#loc282 = loc(fused[#loc46, #loc43])
#loc283 = loc(fused[#loc48, #loc49])
#loc284 = loc(fused[#loc51, #loc52])
#loc285 = loc(fused[#loc53, #loc54])
#loc286 = loc(fused[#loc57, #loc55])
#loc287 = loc(fused[#loc61, #loc62])
#loc288 = loc(fused[#loc66, #loc67])
#loc289 = loc(fused[#loc68, #loc69])
#loc290 = loc(fused[#loc71, #loc72])
#loc291 = loc(fused[#loc73, #loc74])
#loc292 = loc(fused[#loc75, #loc76])
#loc293 = loc(fused[#loc77, #loc69])
#loc294 = loc(fused[#loc81, #loc82])
#loc295 = loc(fused[#loc85, #loc86])
#loc296 = loc(fused[#loc87, #loc88])
#loc297 = loc(fused[#loc89, #loc90])
#loc298 = loc(fused[#loc92, #loc93])
#loc299 = loc(fused[#loc94, #loc88])
#loc300 = loc(fused[#loc98, #loc96])
#loc301 = loc(fused[#loc103, #loc104])
#loc302 = loc(fused[#loc106, #loc107])
#loc303 = loc(fused[#loc108, #loc109])
#loc304 = loc(fused[#loc110, #loc107])
#loc305 = loc(fused[#loc113, #loc114])
#loc306 = loc(fused[#loc116, #loc117])
#loc307 = loc(fused[#loc118, #loc119])
#loc308 = loc(fused[#loc120, #loc121])
#loc309 = loc(fused[#loc122, #loc123])
#loc310 = loc(fused[#loc124, #loc125])
#loc311 = loc(fused[#loc126, #loc127])
#loc312 = loc(fused[#loc132, #loc133])
#loc315 = loc(fused[#loc143, #loc144])
#loc316 = loc(fused[#loc147, #loc148])
#loc317 = loc(fused[#loc151, #loc150])
#loc318 = loc(fused[#loc152, #loc153])
#loc319 = loc(fused[#loc154, #loc155])
#loc320 = loc(fused[#loc156, #loc157])
#loc321 = loc(fused[#loc159, #loc158])
#loc322 = loc(fused[#loc161, #loc160])
#loc323 = loc(fused[#loc162, #loc163])
#loc324 = loc(fused[#loc165, #loc166])
#loc325 = loc(fused[#loc167, #loc168])
#loc326 = loc(fused[#loc169, #loc170])
#loc327 = loc(fused[#loc172, #loc171])
#loc328 = loc(fused[#loc173, #loc174])
#loc329 = loc(fused[#loc175, #loc176])
#loc330 = loc(fused[#loc177, #loc178])
#loc331 = loc(fused[#loc179, #loc180])
#loc332 = loc(fused[#loc181, #loc182])
#loc333 = loc(fused[#loc183, #loc184])
#loc334 = loc(fused[#loc189, #loc190])
#loc335 = loc(fused[#loc191, #loc192])
#loc336 = loc(fused[#loc193, #loc194])
#loc337 = loc(fused[#loc195, #loc192])
#loc338 = loc(fused[#loc197, #loc198])
#loc339 = loc(fused[#loc200, #loc201])
#loc340 = loc(fused[#loc202, #loc203])
#loc341 = loc(fused[#loc205, #loc204])
#loc342 = loc(fused[#loc208, #loc209])
#loc343 = loc(fused[#loc212, #loc213])
#loc344 = loc(fused[#loc214, #loc215])
#loc345 = loc(fused[#loc217, #loc218])
#loc346 = loc(fused[#loc219, #loc220])
#loc347 = loc(fused[#loc221, #loc222])
#loc348 = loc(fused[#loc223, #loc215])
#loc349 = loc(fused[#loc227, #loc228])
#loc350 = loc(fused[#loc231, #loc232])
#loc351 = loc(fused[#loc233, #loc234])
#loc352 = loc(fused[#loc235, #loc236])
#loc353 = loc(fused[#loc238, #loc239])
#loc354 = loc(fused[#loc240, #loc234])
#loc355 = loc(fused[#loc244, #loc242])
#loc356 = loc(fused[#loc249, #loc250])
#loc357 = loc(fused[#loc252, #loc253])
#loc358 = loc(fused[#loc254, #loc255])
#loc359 = loc(fused[#loc256, #loc253])
#loc360 = loc(fused[#loc259, #loc260])
