!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":214:10)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":214:14)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":214:20)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":214:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc359 = loc(fused[#loc196, #loc197])
#loc360 = loc(fused[#loc198, #loc199])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc280)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc281)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_03_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc282)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc283)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc285)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc287)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc288)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc289)
  cir.func private @close(!s32i) -> !s32i loc(#loc290)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc26)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc292)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc294)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc282)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_03_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc282)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc282)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc37)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc38)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc297)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc300)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc301)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc302)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc303)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc304)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc49)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc303)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc304)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc56)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc57)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc58)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc306)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc65)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc65)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc308)
                cir.if %74 {
                  cir.break loc(#loc67)
                } loc(#loc309)
              } loc(#loc307)
              %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc310)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc70)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc311)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc312)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc75)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc75)
              %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc313)
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
              %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
              %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc314)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc83)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc83)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc84)
              %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc315)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc317)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc318)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc318)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc96)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc96)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc319)
                cir.if %78 {
                  cir.break loc(#loc98)
                } loc(#loc320)
              } loc(#loc316)
              %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
              %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc101)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc102)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc321)
              %41 = cir.const #cir.int<1> : !u64i loc(#loc322)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc107)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc107)
              %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc108)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc323)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc109)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc109)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc324)
              %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc325)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc112)
              cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc326)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc118)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc118)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc328)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc119)
                  cir.yield %76 : !cir.bool loc(#loc119)
                }, false {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc121)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc329)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc119)
                    cir.yield %80 : !cir.bool loc(#loc119)
                  }, false {
                    %80 = cir.const #false loc(#loc119)
                    cir.yield %80 : !cir.bool loc(#loc119)
                  }) : (!cir.bool) -> !cir.bool loc(#loc119)
                  cir.yield %79 : !cir.bool loc(#loc119)
                }) : (!cir.bool) -> !cir.bool loc(#loc119)
                cir.if %75 {
                  cir.break loc(#loc123)
                } loc(#loc330)
              } loc(#loc327)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc124)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc124)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
              %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc126)
              %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc127)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc331)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc332)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc333)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc130)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc334)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc131)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc133)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
              cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc335)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc138)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc140)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc140)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc338)
                } loc(#loc337)
              } loc(#loc336)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc143)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc145)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
              cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc150)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc152)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc152)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc342)
                } loc(#loc341)
              } loc(#loc340)
              cir.yield loc(#loc55)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc155)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc155)
              cir.condition(%18) loc(#loc155)
            } loc(#loc305)
          } loc(#loc305)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc159)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc159)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc344)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc162)
            } loc(#loc345)
          } loc(#loc343)
        } loc(#loc299)
      } loc(#loc298)
    } loc(#loc296)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc347)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc26)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc26)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc168)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc174)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc350)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc177)
        } loc(#loc351)
      } loc(#loc349)
    } loc(#loc346)
    cir.return loc(#loc30)
  } loc(#loc293)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc353)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc180)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc354)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc182)
    cir.return loc(#loc179)
  } loc(#loc352)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc355)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc356)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc357)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc193)
  cir.func @main(%arg0: !s32i loc(fused[#loc196, #loc197]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc198, #loc199])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc360)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc195)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc200)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc201)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc202)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc202)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc203)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc190)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc361)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_03_good() : () -> () loc(#loc205)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc191)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc207)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc192)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc362)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_03_bad() : () -> () loc(#loc209)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc193)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc211)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc212)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    cir.return %17 : !s32i loc(#loc363)
  } loc(#loc358)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc214)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc364)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc217)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc366)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc281)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc281)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc281)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc367)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc226)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc227)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc369)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc214)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc214)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc231)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc232)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc217)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc217)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc232)
      } loc(#loc370)
    } loc(#loc368)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc372)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc239)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc239)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc240)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc373)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc245)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc246)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc246)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc375)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc248)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc249)
        } loc(#loc376)
      } loc(#loc374)
    } loc(#loc371)
    cir.return loc(#loc219)
  } loc(#loc365)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc378)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc280)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc280)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc280)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc254)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc379)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc258)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc259)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc381)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc261)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc263)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc263)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc261)
      } loc(#loc382)
    } loc(#loc380)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc384)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc268)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc269)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc269)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc270)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc385)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc275)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc276)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc276)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc387)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc278)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc279)
        } loc(#loc388)
      } loc(#loc386)
    } loc(#loc383)
    cir.return loc(#loc251)
  } loc(#loc377)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":180:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":180:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":153:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":153:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":62:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":62:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":93:53)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":126:1)
#loc17 = loc("/usr/include/sys/socket.h":126:75)
#loc18 = loc("/usr/include/sys/socket.h":145:1)
#loc19 = loc("/usr/include/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/stdio.h":893:1)
#loc25 = loc("/usr/include/stdio.h":894:3)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":137:28)
#loc27 = loc("/usr/include/stdio.h":887:1)
#loc28 = loc("/usr/include/stdio.h":887:36)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":59:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":143:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":61:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":61:12)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":63:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":63:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":64:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":133:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":64:8)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":64:11)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":65:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":66:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":132:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":71:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":71:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":72:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":72:32)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":73:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":73:19)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":74:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":74:36)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":75:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":75:41)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":75:30)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":75:37)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":76:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":121:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":86:40)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":86:49)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":86:62)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":86:33)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":86:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":86:73)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":87:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":90:17)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":87:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":87:38)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":88:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":89:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":91:24)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":91:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":91:34)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":91:37)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":91:51)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":91:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":91:52)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":92:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":92:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":93:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":93:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":93:63)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":94:42)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":94:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":94:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":94:50)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":98:17)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:29)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:62)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:63)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:72)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:86)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:21)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":95:92)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":96:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":97:21)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:35)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:59)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:66)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:64)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:50)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:73)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:76)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:87)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:92)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:98)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:108)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:109)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:112)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:30)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":102:113)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":103:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":106:17)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":103:21)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":103:35)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":103:48)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":103:51)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":103:65)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":104:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":105:21)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":108:61)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":108:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":108:22)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":108:32)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":108:45)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":108:56)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":108:57)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":110:27)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":110:34)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":110:40)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":110:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":110:44)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":111:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":114:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":111:21)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":112:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":113:32)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":113:22)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":113:21)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":115:27)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":115:34)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":115:40)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":115:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":115:44)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":116:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":119:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":116:21)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":117:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":118:32)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":118:22)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":118:21)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":121:20)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":122:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":125:13)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":122:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":122:34)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":123:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":124:30)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":124:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":134:5)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":142:5)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":135:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":135:15)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":137:22)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":137:16)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":137:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":137:31)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":138:9)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":141:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":138:13)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":138:21)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":139:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":140:20)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":140:13)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":198:1)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":202:1)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":200:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":200:14)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":201:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":201:14)
#loc184 = loc("/usr/include/stdlib.h":575:1)
#loc185 = loc("/usr/include/stdlib.h":575:41)
#loc186 = loc("/usr/include/time.h":76:1)
#loc187 = loc("/usr/include/time.h":76:38)
#loc188 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc189 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":219:15)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":221:15)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":224:15)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":226:15)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":214:1)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":229:1)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":215:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":217:27)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":217:22)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":217:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":219:5)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":220:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":220:67)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":221:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":224:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":225:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":225:66)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":226:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":228:12)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":228:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":158:19)
#loc215 = loc("/usr/include/string.h":149:1)
#loc216 = loc("/usr/include/string.h":150:14)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":163:22)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":150:1)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":174:1)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":152:5)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":152:12)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":154:12)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":154:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":155:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":164:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":155:8)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":155:11)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":156:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":159:5)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":161:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":158:9)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":163:9)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":163:16)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":165:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":173:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":166:9)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":166:15)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":168:22)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":168:28)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":168:16)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":168:9)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":168:31)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":169:9)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":172:9)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":169:13)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":169:21)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":170:9)
#loc248 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":171:20)
#loc249 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":171:13)
#loc250 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":177:1)
#loc251 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":196:1)
#loc252 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":179:5)
#loc253 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":179:12)
#loc254 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":181:12)
#loc255 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":181:5)
#loc256 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":182:5)
#loc257 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":186:5)
#loc258 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":182:8)
#loc259 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":182:11)
#loc260 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":183:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":185:9)
#loc262 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":185:16)
#loc263 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":185:22)
#loc264 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":187:5)
#loc265 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":195:5)
#loc266 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":188:9)
#loc267 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":188:15)
#loc268 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":190:22)
#loc269 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":190:28)
#loc270 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":190:16)
#loc271 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":190:9)
#loc272 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":190:31)
#loc273 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":191:9)
#loc274 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":194:9)
#loc275 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":191:13)
#loc276 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":191:21)
#loc277 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":192:9)
#loc278 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":193:20)
#loc279 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_03.c":193:13)
#loc280 = loc(fused[#loc1, #loc2])
#loc281 = loc(fused[#loc3, #loc4])
#loc282 = loc(fused[#loc5, #loc6])
#loc283 = loc(fused[#loc7, #loc8])
#loc284 = loc(fused[#loc9, #loc10])
#loc285 = loc(fused[#loc11, #loc12])
#loc286 = loc(fused[#loc14, #loc15])
#loc287 = loc(fused[#loc16, #loc17])
#loc288 = loc(fused[#loc18, #loc19])
#loc289 = loc(fused[#loc20, #loc21])
#loc290 = loc(fused[#loc22, #loc23])
#loc291 = loc(fused[#loc24, #loc25])
#loc292 = loc(fused[#loc27, #loc28])
#loc293 = loc(fused[#loc29, #loc30])
#loc294 = loc(fused[#loc31, #loc32])
#loc295 = loc(fused[#loc34, #loc33])
#loc296 = loc(fused[#loc35, #loc36])
#loc297 = loc(fused[#loc37, #loc38])
#loc298 = loc(fused[#loc39, #loc36])
#loc299 = loc(fused[#loc40, #loc41])
#loc300 = loc(fused[#loc42, #loc43])
#loc301 = loc(fused[#loc44, #loc45])
#loc302 = loc(fused[#loc46, #loc47])
#loc303 = loc(fused[#loc48, #loc49])
#loc304 = loc(fused[#loc50, #loc51])
#loc305 = loc(fused[#loc54, #loc55])
#loc306 = loc(fused[#loc60, #loc61])
#loc307 = loc(fused[#loc62, #loc63])
#loc308 = loc(fused[#loc64, #loc65])
#loc309 = loc(fused[#loc66, #loc63])
#loc310 = loc(fused[#loc68, #loc69])
#loc311 = loc(fused[#loc71, #loc72])
#loc312 = loc(fused[#loc73, #loc74])
#loc313 = loc(fused[#loc77, #loc75])
#loc314 = loc(fused[#loc81, #loc82])
#loc315 = loc(fused[#loc86, #loc87])
#loc316 = loc(fused[#loc88, #loc89])
#loc317 = loc(fused[#loc91, #loc92])
#loc318 = loc(fused[#loc93, #loc94])
#loc319 = loc(fused[#loc95, #loc96])
#loc320 = loc(fused[#loc97, #loc89])
#loc321 = loc(fused[#loc103, #loc104])
#loc322 = loc(fused[#loc105, #loc106])
#loc323 = loc(fused[#loc107, #loc108])
#loc324 = loc(fused[#loc107, #loc109])
#loc325 = loc(fused[#loc105, #loc110])
#loc326 = loc(fused[#loc113, #loc114])
#loc327 = loc(fused[#loc115, #loc116])
#loc328 = loc(fused[#loc117, #loc118])
#loc329 = loc(fused[#loc120, #loc121])
#loc330 = loc(fused[#loc122, #loc116])
#loc331 = loc(fused[#loc128, #loc129])
#loc332 = loc(fused[#loc127, #loc129])
#loc333 = loc(fused[#loc126, #loc129])
#loc334 = loc(fused[#loc125, #loc124])
#loc335 = loc(fused[#loc134, #loc135])
#loc336 = loc(fused[#loc136, #loc137])
#loc337 = loc(fused[#loc139, #loc137])
#loc338 = loc(fused[#loc142, #loc140])
#loc339 = loc(fused[#loc146, #loc147])
#loc340 = loc(fused[#loc148, #loc149])
#loc341 = loc(fused[#loc151, #loc149])
#loc342 = loc(fused[#loc154, #loc152])
#loc343 = loc(fused[#loc156, #loc157])
#loc344 = loc(fused[#loc158, #loc159])
#loc345 = loc(fused[#loc160, #loc157])
#loc346 = loc(fused[#loc163, #loc164])
#loc347 = loc(fused[#loc165, #loc166])
#loc348 = loc(fused[#loc169, #loc170])
#loc349 = loc(fused[#loc171, #loc172])
#loc350 = loc(fused[#loc173, #loc174])
#loc351 = loc(fused[#loc175, #loc172])
#loc352 = loc(fused[#loc178, #loc179])
#loc353 = loc(fused[#loc180, #loc181])
#loc354 = loc(fused[#loc182, #loc183])
#loc355 = loc(fused[#loc184, #loc185])
#loc356 = loc(fused[#loc186, #loc187])
#loc357 = loc(fused[#loc188, #loc189])
#loc358 = loc(fused[#loc194, #loc195])
#loc361 = loc(fused[#loc205, #loc206])
#loc362 = loc(fused[#loc209, #loc210])
#loc363 = loc(fused[#loc213, #loc212])
#loc364 = loc(fused[#loc215, #loc216])
#loc365 = loc(fused[#loc218, #loc219])
#loc366 = loc(fused[#loc220, #loc221])
#loc367 = loc(fused[#loc223, #loc222])
#loc368 = loc(fused[#loc224, #loc225])
#loc369 = loc(fused[#loc226, #loc227])
#loc370 = loc(fused[#loc228, #loc229, #loc230, #loc225])
#loc371 = loc(fused[#loc234, #loc235])
#loc372 = loc(fused[#loc236, #loc237])
#loc373 = loc(fused[#loc241, #loc242])
#loc374 = loc(fused[#loc243, #loc244])
#loc375 = loc(fused[#loc245, #loc246])
#loc376 = loc(fused[#loc247, #loc244])
#loc377 = loc(fused[#loc250, #loc251])
#loc378 = loc(fused[#loc252, #loc253])
#loc379 = loc(fused[#loc255, #loc254])
#loc380 = loc(fused[#loc256, #loc257])
#loc381 = loc(fused[#loc258, #loc259])
#loc382 = loc(fused[#loc260, #loc257])
#loc383 = loc(fused[#loc264, #loc265])
#loc384 = loc(fused[#loc266, #loc267])
#loc385 = loc(fused[#loc271, #loc272])
#loc386 = loc(fused[#loc273, #loc274])
#loc387 = loc(fused[#loc275, #loc276])
#loc388 = loc(fused[#loc277, #loc274])
