!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":200:10)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":200:14)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":200:20)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":200:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc373 = loc(fused[#loc227, #loc228])
#loc374 = loc(fused[#loc229, #loc230])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc283)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_system_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc284)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc285)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc286)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc287)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc290)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc291)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc292)
  cir.func private @close(!s32i) -> !s32i loc(#loc293)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc294)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc27)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc296)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc299)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc300)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc284)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc299)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc300)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_system_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc284)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc284)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc303)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc307)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc308)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc309)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc310)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc54)
        cir.store %18, %14 : !s32i, !cir.ptr<!s32i> loc(#loc308)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc56)
        cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc309)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
        %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
        cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc310)
        cir.scope {
          cir.do {
            %24 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc64)
            %26 = cir.const #cir.int<6> : !s32i loc(#loc65)
            %27 = cir.call @socket(%24, %25, %26) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
            cir.store %27, %14 : !s32i, !cir.ptr<!s32i> loc(#loc312)
            cir.scope {
              %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc72)
              %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc72)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc314)
              cir.if %84 {
                cir.break loc(#loc74)
              } loc(#loc315)
            } loc(#loc313)
            %28 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc316)
            %29 = cir.const #cir.int<0> : !s32i loc(#loc77)
            %30 = cir.const #cir.int<16> : !u64i loc(#loc317)
            cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc318)
            %31 = cir.const #cir.int<2> : !s32i loc(#loc82)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc82)
            %33 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
            cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc319)
            %34 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc85)
            %36 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
            %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
            cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc320)
            %38 = cir.const #cir.int<27015> : !s32i loc(#loc89)
            %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc89)
            %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc90)
            %41 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc321)
            cir.scope {
              %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %82 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc323)
              %83 = cir.const #cir.int<16> : !u64i loc(#loc324)
              %84 = cir.cast(integral, %83 : !u64i), !u32i loc(#loc324)
              %85 = cir.call @bind(%81, %82, %84) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc101)
              %86 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %87 = cir.unary(minus, %86) : !s32i, !s32i loc(#loc102)
              %88 = cir.cmp(eq, %85, %87) : !s32i, !cir.bool loc(#loc325)
              cir.if %88 {
                cir.break loc(#loc104)
              } loc(#loc326)
            } loc(#loc322)
            cir.scope {
              %81 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %82 = cir.const #cir.int<5> : !s32i loc(#loc108)
              %83 = cir.call @listen(%81, %82) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc109)
              %84 = cir.const #cir.int<1> : !s32i loc(#loc110)
              %85 = cir.unary(minus, %84) : !s32i, !s32i loc(#loc110)
              %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc328)
              cir.if %86 {
                cir.break loc(#loc112)
              } loc(#loc329)
            } loc(#loc327)
            %42 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %43 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc114)
            %44 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc115)
            %45 = cir.call @accept(%42, %43, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc116)
            cir.store %45, %15 : !s32i, !cir.ptr<!s32i> loc(#loc330)
            cir.scope {
              %81 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc122)
              %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc122)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc332)
              cir.if %84 {
                cir.break loc(#loc124)
              } loc(#loc333)
            } loc(#loc331)
            %46 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %47 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
            %48 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc127)
            %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc128)
            %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc334)
            %51 = cir.const #cir.int<1> : !u64i loc(#loc335)
            %52 = cir.const #cir.int<100> : !s32i loc(#loc133)
            %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc133)
            %54 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc134)
            %55 = cir.binop(sub, %53, %54) : !u64i loc(#loc336)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc135)
            %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc135)
            %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc337)
            %59 = cir.binop(mul, %51, %58) : !u64i loc(#loc338)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc137)
            %61 = cir.call @recv(%46, %50, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
            %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc138)
            cir.store %62, %11 : !s32i, !cir.ptr<!s32i> loc(#loc339)
            cir.scope {
              %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc144)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc341)
              %85 = cir.ternary(%84, true {
                %86 = cir.const #true loc(#loc145)
                cir.yield %86 : !cir.bool loc(#loc145)
              }, false {
                %86 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                %87 = cir.const #cir.int<0> : !s32i loc(#loc147)
                %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc342)
                %89 = cir.ternary(%88, true {
                  %90 = cir.const #true loc(#loc145)
                  cir.yield %90 : !cir.bool loc(#loc145)
                }, false {
                  %90 = cir.const #false loc(#loc145)
                  cir.yield %90 : !cir.bool loc(#loc145)
                }) : (!cir.bool) -> !cir.bool loc(#loc145)
                cir.yield %89 : !cir.bool loc(#loc145)
              }) : (!cir.bool) -> !cir.bool loc(#loc145)
              cir.if %85 {
                cir.break loc(#loc149)
              } loc(#loc343)
            } loc(#loc340)
            %63 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc150)
            %65 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
            %66 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %67 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc153)
            %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc153)
            %69 = cir.const #cir.int<1> : !u64i loc(#loc344)
            %70 = cir.binop(div, %68, %69) : !u64i loc(#loc345)
            %71 = cir.binop(add, %66, %70) : !u64i loc(#loc346)
            %72 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %71 : !u64i), !cir.ptr<!s8i> loc(#loc156)
            cir.store %64, %72 : !s8i, !cir.ptr<!s8i> loc(#loc347)
            %73 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc157)
            %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %75 = cir.const #cir.int<13> : !s32i loc(#loc159)
            %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
            cir.store %76, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
            cir.scope {
              %81 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
              %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
              cir.if %82 {
                %83 = cir.const #cir.int<0> : !s32i loc(#loc166)
                %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc166)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc351)
              } loc(#loc350)
            } loc(#loc349)
            %77 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc169)
            %78 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
            %79 = cir.const #cir.int<10> : !s32i loc(#loc171)
            %80 = cir.call @strchr(%78, %79) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
            cir.store %80, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
            cir.scope {
              %81 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
              %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
              cir.if %82 {
                %83 = cir.const #cir.int<0> : !s32i loc(#loc178)
                %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc178)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc355)
              } loc(#loc354)
            } loc(#loc353)
            cir.yield loc(#loc62)
          } while {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc181)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc181)
            cir.condition(%25) loc(#loc181)
          } loc(#loc311)
        } loc(#loc311)
        cir.scope {
          %24 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc185)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc185)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc357)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc188)
          } loc(#loc358)
        } loc(#loc356)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc191)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc192)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc192)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc360)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc194)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc195)
          } loc(#loc361)
        } loc(#loc359)
      } loc(#loc304)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
    } loc(#loc302)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc364)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc364)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
        %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc207)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc208)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc366)
        cir.if %12 {
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc27)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc210)
          %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc211)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc212)
          cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc211)
        } loc(#loc367)
      } loc(#loc365)
    } loc(#loc363)
    cir.return loc(#loc31)
  } loc(#loc297)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc369)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc215)
    cir.return loc(#loc214)
  } loc(#loc368)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc370)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc371)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc224)
  cir.func @main(%arg0: !s32i loc(fused[#loc227, #loc228]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc229, #loc230])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc373)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc374)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc226)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc231)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc232)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc233)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc233)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc234)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc221)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc221)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc235)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_system_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_system_32_good() : () -> () loc(#loc236)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc222)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc222)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc238)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc223)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc223)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc239)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_system_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc376)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_system_32_bad() : () -> () loc(#loc240)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc224)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc224)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc242)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc243)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc377)
    cir.return %17 : !s32i loc(#loc377)
  } loc(#loc372)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc247)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc381)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc382)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc283)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc381)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc382)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc283)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc283)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc256)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc383)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc385)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc263)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
      %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc247)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc247)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc263)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc386)
    } loc(#loc384)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc388)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc272)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc388)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
        %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc276)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc277)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc390)
        cir.if %12 {
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc279)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc279)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc280)
          %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc281)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc282)
          cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc281)
        } loc(#loc391)
      } loc(#loc389)
    } loc(#loc387)
    cir.return loc(#loc249)
  } loc(#loc379)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":167:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":167:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":61:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":61:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/stdlib.h":923:1)
#loc24 = loc("/usr/include/stdlib.h":923:41)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":151:23)
#loc28 = loc("/usr/include/stdlib.h":756:1)
#loc29 = loc("/usr/include/stdlib.h":756:70)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":56:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":155:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":58:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":58:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":59:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":59:25)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":60:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":60:25)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":62:12)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":62:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":63:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":145:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":64:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":64:24)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":64:23)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":65:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":143:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":70:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":70:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":71:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":71:32)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":72:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":72:19)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":73:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":73:35)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":74:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":74:35)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:41)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:30)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":75:37)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":76:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":128:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:39)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:48)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:61)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:32)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":86:72)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":87:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":90:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":87:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":87:37)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":88:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":89:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:24)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:34)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:37)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:51)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":91:52)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":92:38)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":92:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":93:43)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":93:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:42)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:36)
#loc91 = loc("/usr/include/netinet/in.h":250:15)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":94:50)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":98:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:26)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:58)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:59)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:68)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:82)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:21)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":95:88)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":96:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":97:21)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:17)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":102:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:28)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:42)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:21)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":99:61)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":100:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":101:21)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:39)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:53)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:59)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:32)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":103:63)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":104:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":107:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":104:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":104:37)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":105:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":106:21)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:35)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:58)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:65)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:63)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:49)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:72)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:75)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:86)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:91)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:97)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:107)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:108)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:111)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:30)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":109:112)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":113:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:21)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:35)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:48)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:51)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":110:65)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":111:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":112:21)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:61)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:22)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:32)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:45)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:56)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":115:57)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:27)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:34)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:40)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":117:44)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":118:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":121:17)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":118:21)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":119:17)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":120:32)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":120:22)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":120:21)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:27)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:34)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:40)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:17)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":122:44)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":123:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":126:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":123:21)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":124:17)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":125:32)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":125:22)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":125:21)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":128:20)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":129:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":132:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":129:17)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":129:33)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":130:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":131:30)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":131:17)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":133:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":136:13)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":133:17)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":133:33)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":134:13)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":135:30)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":135:17)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":144:21)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":144:10)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":144:9)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":146:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":154:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":147:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":147:24)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":147:23)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:9)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":153:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:20)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:13)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":149:29)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":150:9)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":151:13)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":152:13)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":152:18)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":186:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":189:1)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":188:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":188:13)
#loc217 = loc("/usr/include/stdlib.h":575:1)
#loc218 = loc("/usr/include/stdlib.h":575:41)
#loc219 = loc("/usr/include/time.h":76:1)
#loc220 = loc("/usr/include/time.h":76:38)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":205:15)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":207:15)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":210:15)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":212:15)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":200:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":215:1)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":201:1)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":203:27)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":203:22)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":203:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":205:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":206:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":206:67)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":207:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":210:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":211:5)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":211:66)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":212:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":214:12)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":214:5)
#loc245 = loc("/usr/include/string.h":149:1)
#loc246 = loc("/usr/include/string.h":150:14)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":172:22)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":162:1)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":184:1)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":164:5)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":164:12)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":165:5)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":165:25)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":166:5)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":166:25)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":168:12)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":168:5)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":169:5)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":174:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":170:9)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":170:24)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":170:23)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":172:9)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":172:16)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":173:21)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":173:10)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":173:9)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":175:5)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":183:5)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":176:9)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":176:24)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":176:23)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:9)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":182:9)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:20)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:13)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":178:29)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":179:9)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":180:23)
#loc280 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":180:13)
#loc281 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":181:13)
#loc282 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_32.c":181:18)
#loc283 = loc(fused[#loc1, #loc2])
#loc284 = loc(fused[#loc3, #loc4])
#loc285 = loc(fused[#loc5, #loc6])
#loc286 = loc(fused[#loc7, #loc8])
#loc287 = loc(fused[#loc9, #loc10])
#loc288 = loc(fused[#loc11, #loc12])
#loc289 = loc(fused[#loc13, #loc14])
#loc290 = loc(fused[#loc15, #loc16])
#loc291 = loc(fused[#loc17, #loc18])
#loc292 = loc(fused[#loc19, #loc20])
#loc293 = loc(fused[#loc21, #loc22])
#loc294 = loc(fused[#loc23, #loc24])
#loc295 = loc(fused[#loc25, #loc26])
#loc296 = loc(fused[#loc28, #loc29])
#loc297 = loc(fused[#loc30, #loc31])
#loc298 = loc(fused[#loc32, #loc33])
#loc299 = loc(fused[#loc34, #loc35])
#loc300 = loc(fused[#loc36, #loc37])
#loc301 = loc(fused[#loc39, #loc38])
#loc302 = loc(fused[#loc40, #loc41])
#loc303 = loc(fused[#loc42, #loc43])
#loc304 = loc(fused[#loc45, #loc46])
#loc305 = loc(fused[#loc47, #loc48])
#loc306 = loc(fused[#loc49, #loc50])
#loc307 = loc(fused[#loc51, #loc52])
#loc308 = loc(fused[#loc53, #loc54])
#loc309 = loc(fused[#loc55, #loc56])
#loc310 = loc(fused[#loc57, #loc58])
#loc311 = loc(fused[#loc61, #loc62])
#loc312 = loc(fused[#loc67, #loc68])
#loc313 = loc(fused[#loc69, #loc70])
#loc314 = loc(fused[#loc71, #loc72])
#loc315 = loc(fused[#loc73, #loc70])
#loc316 = loc(fused[#loc75, #loc76])
#loc317 = loc(fused[#loc78, #loc79])
#loc318 = loc(fused[#loc80, #loc81])
#loc319 = loc(fused[#loc84, #loc82])
#loc320 = loc(fused[#loc88, #loc85])
#loc321 = loc(fused[#loc92, #loc93])
#loc322 = loc(fused[#loc94, #loc95])
#loc323 = loc(fused[#loc97, #loc98])
#loc324 = loc(fused[#loc99, #loc100])
#loc325 = loc(fused[#loc101, #loc102])
#loc326 = loc(fused[#loc103, #loc95])
#loc327 = loc(fused[#loc105, #loc106])
#loc328 = loc(fused[#loc109, #loc110])
#loc329 = loc(fused[#loc111, #loc106])
#loc330 = loc(fused[#loc117, #loc118])
#loc331 = loc(fused[#loc119, #loc120])
#loc332 = loc(fused[#loc121, #loc122])
#loc333 = loc(fused[#loc123, #loc120])
#loc334 = loc(fused[#loc129, #loc130])
#loc335 = loc(fused[#loc131, #loc132])
#loc336 = loc(fused[#loc133, #loc134])
#loc337 = loc(fused[#loc133, #loc135])
#loc338 = loc(fused[#loc131, #loc136])
#loc339 = loc(fused[#loc139, #loc140])
#loc340 = loc(fused[#loc141, #loc142])
#loc341 = loc(fused[#loc143, #loc144])
#loc342 = loc(fused[#loc146, #loc147])
#loc343 = loc(fused[#loc148, #loc142])
#loc344 = loc(fused[#loc154, #loc155])
#loc345 = loc(fused[#loc153, #loc155])
#loc346 = loc(fused[#loc152, #loc155])
#loc347 = loc(fused[#loc151, #loc150])
#loc348 = loc(fused[#loc160, #loc161])
#loc349 = loc(fused[#loc162, #loc163])
#loc350 = loc(fused[#loc165, #loc163])
#loc351 = loc(fused[#loc168, #loc166])
#loc352 = loc(fused[#loc172, #loc173])
#loc353 = loc(fused[#loc174, #loc175])
#loc354 = loc(fused[#loc177, #loc175])
#loc355 = loc(fused[#loc180, #loc178])
#loc356 = loc(fused[#loc182, #loc183])
#loc357 = loc(fused[#loc184, #loc185])
#loc358 = loc(fused[#loc186, #loc183])
#loc359 = loc(fused[#loc189, #loc190])
#loc360 = loc(fused[#loc191, #loc192])
#loc361 = loc(fused[#loc193, #loc190])
#loc362 = loc(fused[#loc198, #loc196])
#loc363 = loc(fused[#loc199, #loc200])
#loc364 = loc(fused[#loc201, #loc202])
#loc365 = loc(fused[#loc204, #loc205])
#loc366 = loc(fused[#loc207, #loc208])
#loc367 = loc(fused[#loc209, #loc205])
#loc368 = loc(fused[#loc213, #loc214])
#loc369 = loc(fused[#loc215, #loc216])
#loc370 = loc(fused[#loc217, #loc218])
#loc371 = loc(fused[#loc219, #loc220])
#loc372 = loc(fused[#loc225, #loc226])
#loc375 = loc(fused[#loc236, #loc237])
#loc376 = loc(fused[#loc240, #loc241])
#loc377 = loc(fused[#loc244, #loc243])
#loc378 = loc(fused[#loc245, #loc246])
#loc379 = loc(fused[#loc248, #loc249])
#loc380 = loc(fused[#loc250, #loc251])
#loc381 = loc(fused[#loc252, #loc253])
#loc382 = loc(fused[#loc254, #loc255])
#loc383 = loc(fused[#loc257, #loc256])
#loc384 = loc(fused[#loc258, #loc259])
#loc385 = loc(fused[#loc260, #loc261])
#loc386 = loc(fused[#loc267, #loc265])
#loc387 = loc(fused[#loc268, #loc269])
#loc388 = loc(fused[#loc270, #loc271])
#loc389 = loc(fused[#loc273, #loc274])
#loc390 = loc(fused[#loc276, #loc277])
#loc391 = loc(fused[#loc278, #loc274])
