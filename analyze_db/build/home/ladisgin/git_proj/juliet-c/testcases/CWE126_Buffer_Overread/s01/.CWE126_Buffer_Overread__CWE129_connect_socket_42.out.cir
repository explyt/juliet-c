!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":44:22)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":44:26)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":257:10)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":257:14)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":257:20)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":257:32)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":161:26)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":161:30)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":131:26)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":131:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc341 = loc(fused[#loc18, #loc19])
#loc392 = loc(fused[#loc157, #loc158])
#loc393 = loc(fused[#loc159, #loc160])
#loc398 = loc(fused[#loc177, #loc178])
#loc443 = loc(fused[#loc299, #loc300])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc333)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc335)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc336)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc337)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc338)
  cir.func private @close(!s32i) -> !s32i loc(#loc339)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc18, #loc19])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc20)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc343)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc344)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc345)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc346)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc28)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc345)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc33)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc35)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc36)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc348)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc42)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc350)
            cir.if %55 {
              cir.break loc(#loc44)
            } loc(#loc351)
          } loc(#loc349)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc352)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc353)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc354)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc52)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc52)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc355)
          %20 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc55)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc356)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc60)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc60)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc61)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc357)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc359)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc360)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc360)
            %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc72)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc73)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc361)
            cir.if %59 {
              cir.break loc(#loc75)
            } loc(#loc362)
          } loc(#loc358)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc77)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc78)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc78)
          %34 = cir.const #cir.int<4> : !u64i loc(#loc78)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc78)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc78)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc78)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc78)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc79)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc363)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc81)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc81)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc364)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc87)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc366)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc88)
              cir.yield %57 : !cir.bool loc(#loc88)
            }, false {
              %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc367)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc88)
                cir.yield %61 : !cir.bool loc(#loc88)
              }, false {
                %61 = cir.const #false loc(#loc88)
                cir.yield %61 : !cir.bool loc(#loc88)
              }) : (!cir.bool) -> !cir.bool loc(#loc88)
              cir.yield %60 : !cir.bool loc(#loc88)
            }) : (!cir.bool) -> !cir.bool loc(#loc88)
            cir.if %56 {
              cir.break loc(#loc92)
            } loc(#loc368)
          } loc(#loc365)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc93)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc95)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc369)
          %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
          %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc97)
          cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
          cir.yield loc(#loc32)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc100)
          cir.condition(%11) loc(#loc100)
        } loc(#loc347)
      } loc(#loc347)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc104)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc372)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc107)
        } loc(#loc373)
      } loc(#loc371)
    } loc(#loc342)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc374)
    cir.return %3 : !s32i loc(#loc374)
  } loc(#loc340)
  cir.func private @printIntLine(!s32i) loc(#loc375)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc114)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc120)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc123)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc382)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc382)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc382)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc133)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc384)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc138)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc138)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc139)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc114)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc114)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc140)
        } loc(#loc385)
      } loc(#loc383)
    } loc(#loc381)
    cir.return loc(#loc116)
  } loc(#loc377)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc387)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc143)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc388)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc145)
    cir.return loc(#loc142)
  } loc(#loc386)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc389)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc390)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc154)
  cir.func @main(%arg0: !s32i loc(fused[#loc157, #loc158]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc159, #loc160])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc392)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc393)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc156)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc161)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc162)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc163)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc163)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc164)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc151)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc394)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_42_good() : () -> () loc(#loc166)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc152)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc153)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc395)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_42_bad() : () -> () loc(#loc170)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc154)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc173)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    cir.return %17 : !s32i loc(#loc396)
  } loc(#loc391)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc177, #loc178])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc398)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc176)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc400)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc401)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc402)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc403)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc187)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc187)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc402)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc192)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc193)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc194)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc195)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc405)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc200)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc201)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc201)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc407)
            cir.if %55 {
              cir.break loc(#loc203)
            } loc(#loc408)
          } loc(#loc406)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc409)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc206)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc410)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc411)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc211)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc211)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc412)
          %20 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc213)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc213)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc214)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc413)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc217)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc217)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc218)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc414)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc416)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc417)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc417)
            %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc228)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc229)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc229)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc418)
            cir.if %59 {
              cir.break loc(#loc231)
            } loc(#loc419)
          } loc(#loc415)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc232)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc233)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc233)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc234)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc234)
          %34 = cir.const #cir.int<4> : !u64i loc(#loc234)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc234)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc234)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc234)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc234)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc235)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc235)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc420)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc236)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc237)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc237)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc421)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc242)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc243)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc243)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc423)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc244)
              cir.yield %57 : !cir.bool loc(#loc244)
            }, false {
              %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc245)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc246)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc424)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc244)
                cir.yield %61 : !cir.bool loc(#loc244)
              }, false {
                %61 = cir.const #false loc(#loc244)
                cir.yield %61 : !cir.bool loc(#loc244)
              }) : (!cir.bool) -> !cir.bool loc(#loc244)
              cir.yield %60 : !cir.bool loc(#loc244)
            }) : (!cir.bool) -> !cir.bool loc(#loc244)
            cir.if %56 {
              cir.break loc(#loc248)
            } loc(#loc425)
          } loc(#loc422)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc249)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc249)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc250)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc251)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc251)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc426)
          %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc252)
          %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc253)
          cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc427)
          cir.yield loc(#loc191)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc256)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc256)
          cir.condition(%11) loc(#loc256)
        } loc(#loc404)
      } loc(#loc404)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc259)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc260)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc260)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc429)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc262)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc263)
        } loc(#loc430)
      } loc(#loc428)
    } loc(#loc399)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    cir.return %3 : !s32i loc(#loc431)
  } loc(#loc397)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc266)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc272)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc275)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc437)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc437)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc437)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc285)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc439)
        %10 = cir.ternary(%9, true {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc288)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc440)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc286)
            cir.yield %15 : !cir.bool loc(#loc286)
          }, false {
            %15 = cir.const #false loc(#loc286)
            cir.yield %15 : !cir.bool loc(#loc286)
          }) : (!cir.bool) -> !cir.bool loc(#loc286)
          cir.yield %14 : !cir.bool loc(#loc286)
        }, false {
          %11 = cir.const #false loc(#loc286)
          cir.yield %11 : !cir.bool loc(#loc286)
        }) : (!cir.bool) -> !cir.bool loc(#loc286)
        cir.if %10 {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
          %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc294)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc294)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc294)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc295)
        } else {
          %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc266)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc266)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc296)
        } loc(#loc441)
      } loc(#loc438)
    } loc(#loc436)
    cir.return loc(#loc268)
  } loc(#loc432)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc299, #loc300])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc443)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc298)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc302)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc445)
    cir.return %4 : !s32i loc(#loc445)
  } loc(#loc442)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc447)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc310)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc311)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc448)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc314)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc451)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc451)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc451)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc323)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc324)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc453)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc328)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc329)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc329)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc329)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc330)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc331)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc331)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc332)
        } loc(#loc454)
      } loc(#loc452)
    } loc(#loc450)
    cir.return loc(#loc307)
  } loc(#loc446)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_42.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":72:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":44:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":103:1)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":45:1)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":46:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":101:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":51:9)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":51:13)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":52:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":52:28)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":53:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":53:32)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":54:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":54:41)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":55:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":90:17)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":65:36)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":65:45)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":65:58)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":65:29)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":65:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":65:69)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":66:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":69:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":66:17)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":66:34)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":67:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":68:17)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":70:20)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":70:21)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":70:30)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":70:33)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":70:47)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":70:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":70:48)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":71:34)
#loc53 = loc("/usr/include/netinet/in.h":249:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":71:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":72:39)
#loc56 = loc("/usr/include/netinet/in.h":251:20)
#loc57 = loc("/usr/include/netinet/in.h":33:15)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":72:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":72:59)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":73:38)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":73:32)
#loc62 = loc("/usr/include/netinet/in.h":250:15)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":73:13)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":73:46)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":77:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:25)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:58)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:59)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:68)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:82)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:17)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":74:88)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":75:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":76:17)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:31)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:46)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:59)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:77)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:80)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:26)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:13)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":80:81)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":81:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":84:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":81:17)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":81:31)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":81:44)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":81:47)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":81:61)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":82:13)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":83:17)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":86:39)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":86:25)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":86:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":88:25)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":88:20)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":88:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":88:36)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":90:16)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":91:9)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":94:9)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":91:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":91:30)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":92:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":93:26)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":93:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":102:12)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":102:5)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc111 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc113 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":121:23)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":105:1)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":124:1)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":107:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":107:9)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":109:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":109:12)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":109:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":110:22)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":110:12)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":110:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":110:26)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":111:5)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":123:5)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":112:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":112:30)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":115:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":122:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":115:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":115:21)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":116:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":118:9)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":120:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":117:33)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":117:26)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":117:13)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":121:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":242:1)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":246:1)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":244:5)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":244:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":245:5)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":245:13)
#loc147 = loc("/usr/include/stdlib.h":575:1)
#loc148 = loc("/usr/include/stdlib.h":575:41)
#loc149 = loc("/usr/include/time.h":76:1)
#loc150 = loc("/usr/include/time.h":76:38)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":262:15)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":264:15)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":267:15)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":269:15)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":257:1)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":272:1)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":258:1)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":260:27)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":260:22)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":260:5)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":262:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":263:5)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":263:59)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":264:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":267:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":268:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":268:58)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":269:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":271:12)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":271:5)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":161:1)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":220:1)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":162:1)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":163:5)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":218:5)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":168:9)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":168:13)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":169:9)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":169:28)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":170:9)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":170:32)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":171:9)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":171:41)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":172:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":207:17)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":182:36)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":182:45)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":182:58)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":182:29)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":182:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":182:69)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":183:13)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":186:13)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":183:17)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":183:34)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":184:13)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":185:17)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":187:20)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":187:21)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":187:30)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":187:33)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":187:47)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":187:13)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":187:48)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":188:34)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":188:13)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":189:49)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":189:39)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":189:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":189:59)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":190:38)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":190:32)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":190:13)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":190:46)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:13)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":194:13)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:25)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:58)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:59)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:68)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:82)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:17)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":191:88)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":192:13)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":193:17)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:31)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:46)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:59)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:77)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:80)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:26)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:13)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":197:81)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":198:13)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":201:13)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":198:17)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":198:31)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":198:44)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":198:47)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":198:61)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":199:13)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":200:17)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":203:39)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":203:25)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":203:13)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":205:25)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":205:20)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":205:13)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":205:36)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":207:16)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":208:9)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":211:9)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":208:13)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":208:30)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":209:9)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":210:26)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":210:13)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":219:12)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":219:5)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":237:23)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":222:1)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":240:1)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":224:5)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":224:9)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":226:13)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":226:12)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":226:5)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":227:26)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":227:12)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":227:5)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":227:30)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":228:5)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":239:5)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":229:9)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":229:30)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":231:9)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":238:9)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":231:13)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":231:21)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":231:23)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":231:26)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":231:34)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":231:36)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":232:9)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":234:9)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":236:9)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":233:33)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":233:26)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":233:13)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":237:13)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":131:1)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":137:1)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":132:1)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":135:12)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":135:5)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":136:12)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":136:5)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":139:1)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":158:1)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":141:5)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":141:9)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":143:13)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":143:12)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":143:5)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":144:26)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":144:12)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":144:5)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":144:30)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":145:5)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":157:5)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":146:9)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":146:30)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":149:9)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":156:9)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":149:13)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":149:21)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":150:9)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":152:9)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":154:9)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":151:33)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":151:26)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":151:13)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":155:23)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_42.c":155:13)
#loc333 = loc(fused[#loc1, #loc2])
#loc334 = loc(fused[#loc3, #loc4])
#loc335 = loc(fused[#loc6, #loc7])
#loc336 = loc(fused[#loc8, #loc9])
#loc337 = loc(fused[#loc10, #loc11])
#loc338 = loc(fused[#loc12, #loc13])
#loc339 = loc(fused[#loc14, #loc15])
#loc340 = loc(fused[#loc16, #loc17])
#loc342 = loc(fused[#loc21, #loc22])
#loc343 = loc(fused[#loc23, #loc24])
#loc344 = loc(fused[#loc25, #loc26])
#loc345 = loc(fused[#loc27, #loc28])
#loc346 = loc(fused[#loc29, #loc30])
#loc347 = loc(fused[#loc31, #loc32])
#loc348 = loc(fused[#loc37, #loc38])
#loc349 = loc(fused[#loc39, #loc40])
#loc350 = loc(fused[#loc41, #loc42])
#loc351 = loc(fused[#loc43, #loc40])
#loc352 = loc(fused[#loc45, #loc46])
#loc353 = loc(fused[#loc48, #loc49])
#loc354 = loc(fused[#loc50, #loc51])
#loc355 = loc(fused[#loc54, #loc52])
#loc356 = loc(fused[#loc58, #loc59])
#loc357 = loc(fused[#loc63, #loc64])
#loc358 = loc(fused[#loc65, #loc66])
#loc359 = loc(fused[#loc68, #loc69])
#loc360 = loc(fused[#loc70, #loc71])
#loc361 = loc(fused[#loc72, #loc73])
#loc362 = loc(fused[#loc74, #loc66])
#loc363 = loc(fused[#loc78, #loc79])
#loc364 = loc(fused[#loc82, #loc83])
#loc365 = loc(fused[#loc84, #loc85])
#loc366 = loc(fused[#loc86, #loc87])
#loc367 = loc(fused[#loc89, #loc90])
#loc368 = loc(fused[#loc91, #loc85])
#loc369 = loc(fused[#loc95, #loc93])
#loc370 = loc(fused[#loc98, #loc99])
#loc371 = loc(fused[#loc101, #loc102])
#loc372 = loc(fused[#loc103, #loc104])
#loc373 = loc(fused[#loc105, #loc102])
#loc374 = loc(fused[#loc109, #loc108])
#loc375 = loc(fused[#loc110, #loc111])
#loc376 = loc(fused[#loc112, #loc113])
#loc377 = loc(fused[#loc115, #loc116])
#loc378 = loc(fused[#loc117, #loc118])
#loc379 = loc(fused[#loc121, #loc119])
#loc380 = loc(fused[#loc124, #loc125])
#loc381 = loc(fused[#loc126, #loc127])
#loc382 = loc(fused[#loc128, #loc129])
#loc383 = loc(fused[#loc130, #loc131])
#loc384 = loc(fused[#loc132, #loc133])
#loc385 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc386 = loc(fused[#loc141, #loc142])
#loc387 = loc(fused[#loc143, #loc144])
#loc388 = loc(fused[#loc145, #loc146])
#loc389 = loc(fused[#loc147, #loc148])
#loc390 = loc(fused[#loc149, #loc150])
#loc391 = loc(fused[#loc155, #loc156])
#loc394 = loc(fused[#loc166, #loc167])
#loc395 = loc(fused[#loc170, #loc171])
#loc396 = loc(fused[#loc174, #loc173])
#loc397 = loc(fused[#loc175, #loc176])
#loc399 = loc(fused[#loc180, #loc181])
#loc400 = loc(fused[#loc182, #loc183])
#loc401 = loc(fused[#loc184, #loc185])
#loc402 = loc(fused[#loc186, #loc187])
#loc403 = loc(fused[#loc188, #loc189])
#loc404 = loc(fused[#loc190, #loc191])
#loc405 = loc(fused[#loc196, #loc197])
#loc406 = loc(fused[#loc198, #loc199])
#loc407 = loc(fused[#loc200, #loc201])
#loc408 = loc(fused[#loc202, #loc199])
#loc409 = loc(fused[#loc204, #loc205])
#loc410 = loc(fused[#loc207, #loc208])
#loc411 = loc(fused[#loc209, #loc210])
#loc412 = loc(fused[#loc212, #loc211])
#loc413 = loc(fused[#loc215, #loc216])
#loc414 = loc(fused[#loc219, #loc220])
#loc415 = loc(fused[#loc221, #loc222])
#loc416 = loc(fused[#loc224, #loc225])
#loc417 = loc(fused[#loc226, #loc227])
#loc418 = loc(fused[#loc228, #loc229])
#loc419 = loc(fused[#loc230, #loc222])
#loc420 = loc(fused[#loc234, #loc235])
#loc421 = loc(fused[#loc238, #loc239])
#loc422 = loc(fused[#loc240, #loc241])
#loc423 = loc(fused[#loc242, #loc243])
#loc424 = loc(fused[#loc245, #loc246])
#loc425 = loc(fused[#loc247, #loc241])
#loc426 = loc(fused[#loc251, #loc249])
#loc427 = loc(fused[#loc254, #loc255])
#loc428 = loc(fused[#loc257, #loc258])
#loc429 = loc(fused[#loc259, #loc260])
#loc430 = loc(fused[#loc261, #loc258])
#loc431 = loc(fused[#loc265, #loc264])
#loc432 = loc(fused[#loc267, #loc268])
#loc433 = loc(fused[#loc269, #loc270])
#loc434 = loc(fused[#loc273, #loc271])
#loc435 = loc(fused[#loc276, #loc277])
#loc436 = loc(fused[#loc278, #loc279])
#loc437 = loc(fused[#loc280, #loc281])
#loc438 = loc(fused[#loc282, #loc283])
#loc439 = loc(fused[#loc284, #loc285])
#loc440 = loc(fused[#loc287, #loc289])
#loc441 = loc(fused[#loc290, #loc291, #loc292, #loc283])
#loc442 = loc(fused[#loc297, #loc298])
#loc444 = loc(fused[#loc303, #loc302])
#loc445 = loc(fused[#loc305, #loc304])
#loc446 = loc(fused[#loc306, #loc307])
#loc447 = loc(fused[#loc308, #loc309])
#loc448 = loc(fused[#loc312, #loc310])
#loc449 = loc(fused[#loc315, #loc316])
#loc450 = loc(fused[#loc317, #loc318])
#loc451 = loc(fused[#loc319, #loc320])
#loc452 = loc(fused[#loc321, #loc322])
#loc453 = loc(fused[#loc323, #loc324])
#loc454 = loc(fused[#loc325, #loc326, #loc327, #loc322])
