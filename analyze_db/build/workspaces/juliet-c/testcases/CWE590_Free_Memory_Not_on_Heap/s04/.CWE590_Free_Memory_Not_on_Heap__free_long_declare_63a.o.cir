!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_long_declare_63b_badSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc89)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_long_declare_63_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc92)
    cir.scope {
      %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc94)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc96)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc19)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc98)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc21)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc22)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc99)
            cir.condition(%10) loc(#loc23)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<5> : !s64i loc(#loc25)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc26)
              %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc27)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!s64i>, %8 : !u64i), !cir.ptr<!s64i> loc(#loc27)
              cir.store %7, %10 : !s64i, !cir.ptr<!s64i> loc(#loc101)
            } loc(#loc100)
            cir.yield loc(#loc18)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc28)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc29)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc102)
            cir.yield loc(#loc97)
          } loc(#loc97)
        } loc(#loc97)
      } loc(#loc95)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc30)
      cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc103)
    } loc(#loc93)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_long_declare_63b_badSink(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc32)
    cir.return loc(#loc4)
  } loc(#loc90)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_long_declare_63_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc105)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc104)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc106)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc108)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_long_declare_63b_goodG2BSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc109)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc112)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc114)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc56)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc57)
      %6 = cir.const #cir.int<8> : !u64i loc(#loc115)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc116)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc56)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc117)
      cir.store %9, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc114)
      cir.scope {
        %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc63)
        %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc119)
        cir.if %14 {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc65)
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc67)
          cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc66)
        } loc(#loc120)
      } loc(#loc118)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc122)
        cir.scope {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc74)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc74)
          cir.store %13, %11 : !u64i, !cir.ptr<!u64i> loc(#loc124)
          cir.for : cond {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc77)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc77)
            %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc125)
            cir.condition(%17) loc(#loc78)
          } body {
            cir.scope {
              %14 = cir.const #cir.int<5> : !s64i loc(#loc80)
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
              %16 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc82)
              %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !u64i), !cir.ptr<!s64i> loc(#loc83)
              cir.store %14, %17 : !s64i, !cir.ptr<!s64i> loc(#loc127)
            } loc(#loc126)
            cir.yield loc(#loc73)
          } step {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %15 = cir.unary(inc, %14) : !u64i, !u64i loc(#loc85)
            cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc128)
            cir.yield loc(#loc123)
          } loc(#loc123)
        } loc(#loc123)
      } loc(#loc121)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc86)
      cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc129)
    } loc(#loc113)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_long_declare_63b_goodG2BSink(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc88)
    cir.return loc(#loc47)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":24:84)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":26:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":43:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":28:5)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":28:12)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":29:12)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":29:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":30:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":41:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":32:9)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":32:28)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":33:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":39:9)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":34:13)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":34:20)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":38:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:22)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:18)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:25)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:29)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:27)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":36:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":37:33)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":37:28)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":37:17)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:35)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":35:34)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":40:16)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":40:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":42:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":76:1)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":79:1)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":78:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":78:13)
#loc37 = loc("/usr/include/stdlib.h":672:1)
#loc38 = loc("/usr/include/stdlib.h":672:45)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":61:23)
#loc42 = loc("/usr/include/stdlib.h":756:1)
#loc43 = loc("/usr/include/stdlib.h":756:70)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":50:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":50:85)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":52:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":74:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":54:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":54:12)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":55:12)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":55:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":56:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":72:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":58:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":58:60)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":58:37)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":58:44)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":58:48)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":58:59)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":59:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":63:9)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":59:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":59:27)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":60:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":61:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":62:13)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":62:18)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":64:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":70:9)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":65:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":65:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":69:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:22)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:18)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:25)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:29)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:27)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":67:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":68:33)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":68:17)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":68:28)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":68:29)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:35)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":66:34)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":71:16)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":71:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_declare_63a.c":73:5)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc8, #loc7])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc13, #loc14])
#loc96 = loc(fused[#loc15, #loc16])
#loc97 = loc(fused[#loc17, #loc18])
#loc98 = loc(fused[#loc20, #loc19])
#loc99 = loc(fused[#loc21, #loc22])
#loc100 = loc(fused[#loc24, #loc18])
#loc101 = loc(fused[#loc27, #loc25])
#loc102 = loc(fused[#loc29, #loc28])
#loc103 = loc(fused[#loc31, #loc30])
#loc104 = loc(fused[#loc33, #loc34])
#loc105 = loc(fused[#loc35, #loc36])
#loc106 = loc(fused[#loc37, #loc38])
#loc107 = loc(fused[#loc39, #loc40])
#loc108 = loc(fused[#loc42, #loc43])
#loc109 = loc(fused[#loc44, #loc45])
#loc110 = loc(fused[#loc46, #loc47])
#loc111 = loc(fused[#loc48, #loc49])
#loc112 = loc(fused[#loc51, #loc50])
#loc113 = loc(fused[#loc52, #loc53])
#loc114 = loc(fused[#loc54, #loc55])
#loc115 = loc(fused[#loc58, #loc59])
#loc116 = loc(fused[#loc57, #loc59])
#loc117 = loc(fused[#loc56, #loc55])
#loc118 = loc(fused[#loc60, #loc61])
#loc119 = loc(fused[#loc62, #loc63])
#loc120 = loc(fused[#loc64, #loc61])
#loc121 = loc(fused[#loc68, #loc69])
#loc122 = loc(fused[#loc70, #loc71])
#loc123 = loc(fused[#loc72, #loc73])
#loc124 = loc(fused[#loc75, #loc74])
#loc125 = loc(fused[#loc76, #loc77])
#loc126 = loc(fused[#loc79, #loc73])
#loc127 = loc(fused[#loc81, #loc80])
#loc128 = loc(fused[#loc85, #loc84])
#loc129 = loc(fused[#loc87, #loc86])
