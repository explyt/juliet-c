!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":35:18)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":35:25)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":78:23)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":78:30)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":94:23)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":94:30)
#true = #cir.bool<true> : !cir.bool
#loc117 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc81, #loc82])
#loc149 = loc(fused[#loc99, #loc100])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_22b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @_ZN51CWE23_Relative_Path_Traversal__char_console_open_229badGlobalE : !s32i {alignment = 4 : i64} loc(#loc111)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc112)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc113)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc114)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_229badSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc13)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.scope {
      %4 = cir.get_global @_ZN51CWE23_Relative_Path_Traversal__char_console_open_229badGlobalE : !cir.ptr<!s32i> loc(#loc111)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc121)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc25)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc25)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc121)
          cir.scope {
            %11 = cir.const #cir.int<4096> : !s32i loc(#loc29)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc123)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc31)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc124)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
                %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc36)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc37)
                %21 = cir.const #cir.int<4096> : !s32i loc(#loc38)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc38)
                %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc39)
                %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc127)
                %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc127)
                %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
                %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc41)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
                %30 = cir.cmp(ne, %28, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc128)
                cir.if %30 {
                  %31 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
                  %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                  %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
                  cir.store %33, %7 : !u64i, !cir.ptr<!u64i> loc(#loc130)
                  cir.scope {
                    %34 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                    %35 = cir.const #cir.int<0> : !s32i loc(#loc53)
                    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc53)
                    %37 = cir.cmp(gt, %34, %36) : !u64i, !cir.bool loc(#loc132)
                    %38 = cir.ternary(%37, true {
                      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
                      %40 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc57)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc57)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc133)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc58)
                      %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc55)
                      %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc55)
                      %47 = cir.const #cir.int<10> : !s8i loc(#loc59)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc59)
                      %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc134)
                      %50 = cir.ternary(%49, true {
                        %51 = cir.const #true loc(#loc54)
                        cir.yield %51 : !cir.bool loc(#loc54)
                      }, false {
                        %51 = cir.const #false loc(#loc54)
                        cir.yield %51 : !cir.bool loc(#loc54)
                      }) : (!cir.bool) -> !cir.bool loc(#loc54)
                      cir.yield %50 : !cir.bool loc(#loc54)
                    }, false {
                      %39 = cir.const #false loc(#loc54)
                      cir.yield %39 : !cir.bool loc(#loc54)
                    }) : (!cir.bool) -> !cir.bool loc(#loc54)
                    cir.if %38 {
                      %39 = cir.const #cir.int<0> : !s8i loc(#loc61)
                      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                      %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                      %42 = cir.const #cir.int<1> : !s32i loc(#loc64)
                      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc64)
                      %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc136)
                      %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                      cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc137)
                    } loc(#loc135)
                  } loc(#loc131)
                } else {
                  %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc66)
                  %33 = cir.const #cir.int<0> : !s8i loc(#loc67)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                  %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                  %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                  cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc138)
                } loc(#loc129)
              } loc(#loc126)
            } loc(#loc125)
          } loc(#loc122)
        } loc(#loc120)
      } loc(#loc119)
    } loc(#loc118)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc139)
  } loc(#loc116)
  cir.global "private" external @_ZN51CWE23_Relative_Path_Traversal__char_console_open_2214goodG2B1GlobalE : !s32i {alignment = 4 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc78)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_2214goodG2B1SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc81, #loc82])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    cir.scope {
      %4 = cir.get_global @_ZN51CWE23_Relative_Path_Traversal__char_console_open_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc140)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc86)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc91)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc78)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc78)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc91)
      } loc(#loc145)
    } loc(#loc144)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc146)
  } loc(#loc142)
  cir.global "private" external @_ZN51CWE23_Relative_Path_Traversal__char_console_open_2214goodG2B2GlobalE : !s32i {alignment = 4 : i64} loc(#loc147)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_2214goodG2B2SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc99, #loc100])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.scope {
      %4 = cir.get_global @_ZN51CWE23_Relative_Path_Traversal__char_console_open_2214goodG2B2GlobalE : !cir.ptr<!s32i> loc(#loc147)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc104)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc106)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc108)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc108)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
      } loc(#loc151)
    } loc(#loc150)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc152)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":33:1)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":33:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":58:31)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":35:1)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":66:1)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":36:1)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":37:5)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":64:5)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":37:8)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":38:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":39:9)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":63:9)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":41:13)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":41:41)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":41:30)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":41:37)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":43:13)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":62:13)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":43:17)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":43:30)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":43:40)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":44:13)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:17)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":61:17)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:27)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:32)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:31)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:47)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:60)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:70)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:21)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":46:80)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":47:17)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":55:17)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":57:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":50:31)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":50:38)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":50:21)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":50:42)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:21)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":54:21)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:25)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:35)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:37)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:40)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:45)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:53)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:54)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":51:59)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":52:21)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":53:43)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":53:25)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":53:30)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":53:38)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":53:39)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":58:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":60:37)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":60:21)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":60:26)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":60:33)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":65:12)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":65:5)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":74:1)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":74:12)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":83:19)
#loc76 = loc("/usr/include/string.h":149:1)
#loc77 = loc("/usr/include/string.h":150:14)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":88:22)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":78:1)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":91:1)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":79:1)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":80:5)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":89:5)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":80:8)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":81:5)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":84:5)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":86:5)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":83:9)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":88:9)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":88:16)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":90:12)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":90:5)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":75:1)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":75:12)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":94:1)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":102:1)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":95:1)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":96:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":100:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":96:8)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":97:5)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":99:9)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":99:16)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":99:22)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":101:12)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_22b.cpp":101:5)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc12, #loc13])
#loc118 = loc(fused[#loc17, #loc18])
#loc119 = loc(fused[#loc20, #loc18])
#loc120 = loc(fused[#loc21, #loc22])
#loc121 = loc(fused[#loc23, #loc24])
#loc122 = loc(fused[#loc27, #loc28])
#loc123 = loc(fused[#loc29, #loc30])
#loc124 = loc(fused[#loc29, #loc31])
#loc125 = loc(fused[#loc32, #loc28])
#loc126 = loc(fused[#loc33, #loc34])
#loc127 = loc(fused[#loc38, #loc39])
#loc128 = loc(fused[#loc41, #loc42])
#loc129 = loc(fused[#loc43, #loc44, #loc45, #loc34])
#loc130 = loc(fused[#loc48, #loc49])
#loc131 = loc(fused[#loc50, #loc51])
#loc132 = loc(fused[#loc52, #loc53])
#loc133 = loc(fused[#loc56, #loc57])
#loc134 = loc(fused[#loc55, #loc59])
#loc135 = loc(fused[#loc60, #loc51])
#loc136 = loc(fused[#loc63, #loc64])
#loc137 = loc(fused[#loc62, #loc61])
#loc138 = loc(fused[#loc68, #loc67])
#loc139 = loc(fused[#loc72, #loc71])
#loc140 = loc(fused[#loc73, #loc74])
#loc141 = loc(fused[#loc76, #loc77])
#loc142 = loc(fused[#loc79, #loc80])
#loc144 = loc(fused[#loc84, #loc85])
#loc145 = loc(fused[#loc87, #loc88, #loc89, #loc85])
#loc146 = loc(fused[#loc94, #loc93])
#loc147 = loc(fused[#loc95, #loc96])
#loc148 = loc(fused[#loc97, #loc98])
#loc150 = loc(fused[#loc102, #loc103])
#loc151 = loc(fused[#loc105, #loc103])
#loc152 = loc(fused[#loc110, #loc109])
