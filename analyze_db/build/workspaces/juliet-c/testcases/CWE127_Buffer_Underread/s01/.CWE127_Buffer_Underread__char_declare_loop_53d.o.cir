!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":25:61)
#loc6 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":25:68)
#loc47 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":48:65)
#loc48 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":48:72)
#loc89 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc47, #loc48])
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_declare_loop_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.func @CWE127_Buffer_Underread__char_declare_loop_53d_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc91)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc92)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc15)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc16)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc16)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc93)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc20)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc20)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc21)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc94)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc26)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc96)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc29)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc29)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc97)
          cir.condition(%30) loc(#loc30)
        } body {
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
            %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc34)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc32)
            %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
            %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc36)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc99)
          } loc(#loc98)
          cir.yield loc(#loc25)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc38)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc100)
          cir.yield loc(#loc95)
        } loc(#loc95)
      } loc(#loc95)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc39)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc39)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc40)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc101)
      %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    } loc(#loc90)
    cir.return loc(#loc4)
  } loc(#loc88)
  cir.func @CWE127_Buffer_Underread__char_declare_loop_53d_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc47, #loc48])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc105)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc106)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc57)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc58)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc58)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc58)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc107)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc62)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc63)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc63)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc65)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc108)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc68)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc110)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc70)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc71)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc71)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc111)
          cir.condition(%30) loc(#loc72)
        } body {
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
            %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
            %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc76)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc74)
            %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
            %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc78)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc113)
          } loc(#loc112)
          cir.yield loc(#loc67)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc80)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc114)
          cir.yield loc(#loc109)
        } loc(#loc109)
      } loc(#loc109)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc81)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc82)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc82)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc84)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc115)
      %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    } loc(#loc104)
    cir.return loc(#loc46)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_declare_loop_53d.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":25:1)
#loc4 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":41:1)
#loc7 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":26:1)
#loc8 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":27:5)
#loc9 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":40:5)
#loc10 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":28:9)
#loc11 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":28:16)
#loc12 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":29:9)
#loc13 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":29:22)
#loc14 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":30:16)
#loc15 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":30:22)
#loc16 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":30:27)
#loc17 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":30:31)
#loc18 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":30:9)
#loc19 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":30:32)
#loc20 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":31:23)
#loc21 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":31:14)
#loc22 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":31:18)
#loc23 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":31:9)
#loc24 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:9)
#loc25 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":36:9)
#loc26 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:18)
#loc27 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:14)
#loc28 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:21)
#loc29 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:25)
#loc30 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:23)
#loc31 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":34:9)
#loc32 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":35:23)
#loc33 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":35:28)
#loc34 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":35:29)
#loc35 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":35:18)
#loc36 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":35:13)
#loc37 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:31)
#loc38 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":33:30)
#loc39 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":38:23)
#loc40 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":38:14)
#loc41 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":38:18)
#loc42 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":38:9)
#loc43 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":39:19)
#loc44 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":39:9)
#loc45 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":48:1)
#loc46 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":64:1)
#loc49 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":49:1)
#loc50 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":50:5)
#loc51 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":63:5)
#loc52 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":51:9)
#loc53 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":51:16)
#loc54 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":52:9)
#loc55 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":52:22)
#loc56 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":53:16)
#loc57 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":53:22)
#loc58 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":53:27)
#loc59 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":53:31)
#loc60 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":53:9)
#loc61 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":53:32)
#loc62 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":54:23)
#loc63 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":54:14)
#loc64 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":54:18)
#loc65 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":54:9)
#loc66 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:9)
#loc67 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":59:9)
#loc68 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:18)
#loc69 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:14)
#loc70 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:21)
#loc71 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:25)
#loc72 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:23)
#loc73 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":57:9)
#loc74 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":58:23)
#loc75 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":58:28)
#loc76 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":58:29)
#loc77 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":58:18)
#loc78 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":58:13)
#loc79 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:31)
#loc80 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":56:30)
#loc81 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":61:23)
#loc82 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":61:14)
#loc83 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":61:18)
#loc84 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":61:9)
#loc85 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":62:19)
#loc86 = loc("CWE127_Buffer_Underread__char_declare_loop_53d.c":62:9)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc8, #loc9])
#loc91 = loc(fused[#loc10, #loc11])
#loc92 = loc(fused[#loc12, #loc13])
#loc93 = loc(fused[#loc18, #loc19])
#loc94 = loc(fused[#loc23, #loc20])
#loc95 = loc(fused[#loc24, #loc25])
#loc96 = loc(fused[#loc27, #loc26])
#loc97 = loc(fused[#loc28, #loc29])
#loc98 = loc(fused[#loc31, #loc25])
#loc99 = loc(fused[#loc36, #loc34])
#loc100 = loc(fused[#loc38, #loc37])
#loc101 = loc(fused[#loc42, #loc39])
#loc102 = loc(fused[#loc45, #loc46])
#loc104 = loc(fused[#loc50, #loc51])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc60, #loc61])
#loc108 = loc(fused[#loc65, #loc62])
#loc109 = loc(fused[#loc66, #loc67])
#loc110 = loc(fused[#loc69, #loc68])
#loc111 = loc(fused[#loc70, #loc71])
#loc112 = loc(fused[#loc73, #loc67])
#loc113 = loc(fused[#loc78, #loc76])
#loc114 = loc(fused[#loc80, #loc79])
#loc115 = loc(fused[#loc84, #loc81])
