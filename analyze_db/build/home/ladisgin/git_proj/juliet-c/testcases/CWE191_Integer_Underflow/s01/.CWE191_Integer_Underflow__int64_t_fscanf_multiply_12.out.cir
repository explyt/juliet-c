!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:10)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:14)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:20)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:32)
#loc253 = loc(fused[#loc85, #loc86])
#loc254 = loc(fused[#loc87, #loc88])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc219)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc220)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc222)
  cir.func private @printLongLongLine(!s64i) loc(#loc223)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc18)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc227)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc229)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc229)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc222)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc222)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc27)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc30)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc30)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc231)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc233)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc233)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc34)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc34)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc41)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc42)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc236)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc238)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc46)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc45)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc45)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc46)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc238)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc47)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc48)
          } loc(#loc237)
        } loc(#loc235)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc51)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc52)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc52)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc240)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc57)
              %12 = cir.unary(minus, %11) : !s64i, !s64i loc(#loc57)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc57)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc57)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc58)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc58)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc243)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc244)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc246)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc65)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc64)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc64)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc65)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc246)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc66)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc67)
              } else {
                %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc68)
              } loc(#loc245)
            } loc(#loc242)
          } loc(#loc241)
        } loc(#loc239)
      } loc(#loc234)
    } loc(#loc232)
    cir.return loc(#loc15)
  } loc(#loc225)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc247)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc250)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc253)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc254)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc92)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.return %17 : !s32i loc(#loc257)
  } loc(#loc252)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc107)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc260)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc262)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc262)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc111)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc111)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc116)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc264)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc264)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc116)
      } else {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc120)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc121)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc265)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc265)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc120)
      } loc(#loc263)
    } loc(#loc261)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc267)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc267)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc126)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc126)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc133)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc134)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc270)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc138)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc139)
              %12 = cir.unary(minus, %11) : !s64i, !s64i loc(#loc139)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc139)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc139)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc140)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc140)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc273)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc274)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc276)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc147)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc146)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc146)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc147)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc276)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc148)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc149)
              } else {
                %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc150)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc150)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc151)
              } loc(#loc275)
            } loc(#loc272)
          } loc(#loc271)
        } loc(#loc269)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc154)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc155)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc155)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc278)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc159)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc160)
              %12 = cir.unary(minus, %11) : !s64i, !s64i loc(#loc160)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc160)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc160)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc161)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc161)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc281)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc282)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc284)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc168)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc167)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc167)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc168)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc284)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc169)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc170)
              } else {
                %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc171)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc171)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc172)
              } loc(#loc283)
            } loc(#loc280)
          } loc(#loc279)
        } loc(#loc277)
      } loc(#loc268)
    } loc(#loc266)
    cir.return loc(#loc104)
  } loc(#loc258)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc177)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc287)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc289)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc289)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc181)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc181)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc186)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc187)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc187)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc291)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc189)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc190)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc190)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc292)
      } loc(#loc290)
    } loc(#loc288)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc294)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc294)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc194)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc194)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc201)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc202)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc202)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc297)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc299)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc206)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc205)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc205)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc206)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc299)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc207)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc208)
          } loc(#loc298)
        } loc(#loc296)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc211)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc212)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc212)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc301)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc303)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc216)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc215)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc215)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc216)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc303)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc217)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc218)
          } loc(#loc302)
        } loc(#loc300)
      } loc(#loc295)
    } loc(#loc293)
    cir.return loc(#loc174)
  } loc(#loc285)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":58:27)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":23:1)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":62:1)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":25:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":25:13)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":26:12)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":26:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":36:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:8)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:33)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":28:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":31:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":33:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:9)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:17)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:17)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:16)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:5)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":61:5)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:8)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:33)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":38:5)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":45:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":47:5)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:9)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":44:9)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:12)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:19)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":40:9)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:13)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:37)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:30)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":43:31)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":43:13)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:9)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":60:9)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:12)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:19)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":49:9)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:13)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":59:13)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:17)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:25)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:35)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:36)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":52:13)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":55:13)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":57:13)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:17)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:41)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:34)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":54:35)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":54:17)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":58:17)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":156:1)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":160:1)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":158:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":158:13)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":159:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":159:13)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":176:15)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":178:15)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":181:15)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":183:15)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:1)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":186:1)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":172:1)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":174:27)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":174:22)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":174:5)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":176:5)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":177:5)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":177:63)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":178:5)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":181:5)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":182:5)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":182:62)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":183:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":185:12)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":185:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":71:1)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":117:1)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":73:5)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":73:13)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":74:12)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":74:5)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:5)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":84:5)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:8)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:33)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":76:5)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":79:5)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":81:5)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:9)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:17)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:24)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:28)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:9)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:17)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:24)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:28)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:5)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":116:5)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:8)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:33)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":86:5)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":100:5)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":102:5)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:9)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":99:9)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:12)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:19)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":88:9)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:13)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":98:13)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:17)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:25)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:35)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:36)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":91:13)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":94:13)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":96:13)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:17)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:41)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:34)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":93:35)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":93:17)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":97:27)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":97:17)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:9)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":115:9)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:12)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:19)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":104:9)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:13)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":114:13)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:17)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:25)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:35)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:36)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":107:13)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":110:13)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":112:13)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:17)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:41)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:34)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":109:35)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":109:17)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":113:27)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":113:17)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":122:1)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":154:1)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":124:5)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":124:13)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":125:12)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":125:5)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:5)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":135:5)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:8)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:33)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":127:5)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":130:5)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":132:5)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:17)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:16)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:9)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:17)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:16)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:9)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:5)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":153:5)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:8)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:33)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":137:5)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":144:5)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":146:5)
#loc199 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:9)
#loc200 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":143:9)
#loc201 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:12)
#loc202 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:19)
#loc203 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":139:9)
#loc204 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:13)
#loc205 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:37)
#loc206 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:30)
#loc207 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":142:31)
#loc208 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":142:13)
#loc209 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:9)
#loc210 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":152:9)
#loc211 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:12)
#loc212 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:19)
#loc213 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":148:9)
#loc214 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:13)
#loc215 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:37)
#loc216 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:30)
#loc217 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":151:31)
#loc218 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":151:13)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc9, #loc10])
#loc224 = loc(fused[#loc11, #loc12])
#loc225 = loc(fused[#loc14, #loc15])
#loc226 = loc(fused[#loc16, #loc17])
#loc227 = loc(fused[#loc19, #loc18])
#loc228 = loc(fused[#loc20, #loc21])
#loc229 = loc(fused[#loc22, #loc23])
#loc230 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc231 = loc(fused[#loc31, #loc29])
#loc232 = loc(fused[#loc32, #loc33])
#loc233 = loc(fused[#loc34, #loc35])
#loc234 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc235 = loc(fused[#loc39, #loc40])
#loc236 = loc(fused[#loc41, #loc42])
#loc237 = loc(fused[#loc43, #loc40])
#loc238 = loc(fused[#loc44, #loc45])
#loc239 = loc(fused[#loc49, #loc50])
#loc240 = loc(fused[#loc51, #loc52])
#loc241 = loc(fused[#loc53, #loc50])
#loc242 = loc(fused[#loc54, #loc55])
#loc243 = loc(fused[#loc57, #loc58])
#loc244 = loc(fused[#loc56, #loc59])
#loc245 = loc(fused[#loc60, #loc61, #loc62, #loc55])
#loc246 = loc(fused[#loc63, #loc64])
#loc247 = loc(fused[#loc69, #loc70])
#loc248 = loc(fused[#loc71, #loc72])
#loc249 = loc(fused[#loc73, #loc74])
#loc250 = loc(fused[#loc75, #loc76])
#loc251 = loc(fused[#loc77, #loc78])
#loc252 = loc(fused[#loc83, #loc84])
#loc255 = loc(fused[#loc94, #loc95])
#loc256 = loc(fused[#loc98, #loc99])
#loc257 = loc(fused[#loc102, #loc101])
#loc258 = loc(fused[#loc103, #loc104])
#loc259 = loc(fused[#loc105, #loc106])
#loc260 = loc(fused[#loc108, #loc107])
#loc261 = loc(fused[#loc109, #loc110])
#loc262 = loc(fused[#loc111, #loc112])
#loc263 = loc(fused[#loc113, #loc114, #loc115, #loc110])
#loc264 = loc(fused[#loc118, #loc119])
#loc265 = loc(fused[#loc122, #loc123])
#loc266 = loc(fused[#loc124, #loc125])
#loc267 = loc(fused[#loc126, #loc127])
#loc268 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc269 = loc(fused[#loc131, #loc132])
#loc270 = loc(fused[#loc133, #loc134])
#loc271 = loc(fused[#loc135, #loc132])
#loc272 = loc(fused[#loc136, #loc137])
#loc273 = loc(fused[#loc139, #loc140])
#loc274 = loc(fused[#loc138, #loc141])
#loc275 = loc(fused[#loc142, #loc143, #loc144, #loc137])
#loc276 = loc(fused[#loc145, #loc146])
#loc277 = loc(fused[#loc152, #loc153])
#loc278 = loc(fused[#loc154, #loc155])
#loc279 = loc(fused[#loc156, #loc153])
#loc280 = loc(fused[#loc157, #loc158])
#loc281 = loc(fused[#loc160, #loc161])
#loc282 = loc(fused[#loc159, #loc162])
#loc283 = loc(fused[#loc163, #loc164, #loc165, #loc158])
#loc284 = loc(fused[#loc166, #loc167])
#loc285 = loc(fused[#loc173, #loc174])
#loc286 = loc(fused[#loc175, #loc176])
#loc287 = loc(fused[#loc178, #loc177])
#loc288 = loc(fused[#loc179, #loc180])
#loc289 = loc(fused[#loc181, #loc182])
#loc290 = loc(fused[#loc183, #loc184, #loc185, #loc180])
#loc291 = loc(fused[#loc188, #loc186])
#loc292 = loc(fused[#loc191, #loc189])
#loc293 = loc(fused[#loc192, #loc193])
#loc294 = loc(fused[#loc194, #loc195])
#loc295 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc296 = loc(fused[#loc199, #loc200])
#loc297 = loc(fused[#loc201, #loc202])
#loc298 = loc(fused[#loc203, #loc200])
#loc299 = loc(fused[#loc204, #loc205])
#loc300 = loc(fused[#loc209, #loc210])
#loc301 = loc(fused[#loc211, #loc212])
#loc302 = loc(fused[#loc213, #loc210])
#loc303 = loc(fused[#loc214, #loc215])
