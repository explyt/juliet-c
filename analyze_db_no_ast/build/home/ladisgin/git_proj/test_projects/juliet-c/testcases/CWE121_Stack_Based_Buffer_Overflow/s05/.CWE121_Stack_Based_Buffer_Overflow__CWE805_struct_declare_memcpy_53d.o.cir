!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":23:83)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":23:99)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":47:87)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":47:103)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc87 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc85)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc87)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc89)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc91)
        cir.scope {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc18)
          cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc93)
          cir.for : cond {
            %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc20)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc21)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc21)
            %19 = cir.cmp(lt, %16, %18) : !u64i, !s32i loc(#loc94)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc22)
            cir.condition(%20) loc(#loc22)
          } body {
            cir.scope {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc24)
              %17 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc25)
              %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc96)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc28)
              %22 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc97)
            } loc(#loc95)
            cir.yield loc(#loc17)
          } step {
            %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc33)
            cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc98)
            cir.yield loc(#loc92)
          } loc(#loc92)
        } loc(#loc92)
      } loc(#loc90)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc34)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc35)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc36)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc36)
      %8 = cir.const #cir.int<8> : !u64i loc(#loc99)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc100)
      cir.libc.memcpy %9 bytes from %5 to %3 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc101)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc42)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
      cir.call @printStructLine(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc44)
    } loc(#loc88)
    cir.return loc(#loc4)
  } loc(#loc86)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc47, #loc48])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc49)
    cir.scope {
      %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc105)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc107)
        cir.scope {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc60)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc60)
          cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc109)
          cir.for : cond {
            %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc62)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc63)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc63)
            %19 = cir.cmp(lt, %16, %18) : !u64i, !s32i loc(#loc110)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc64)
            cir.condition(%20) loc(#loc64)
          } body {
            cir.scope {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
              %17 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc67)
              %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
              %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
              %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc112)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc69)
              %22 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc70)
              %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
              %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
              %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc113)
            } loc(#loc111)
            cir.yield loc(#loc59)
          } step {
            %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc73)
            cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc114)
            cir.yield loc(#loc108)
          } loc(#loc108)
        } loc(#loc108)
      } loc(#loc106)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc74)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc75)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc76)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc76)
      %8 = cir.const #cir.int<8> : !u64i loc(#loc115)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc116)
      cir.libc.memcpy %9 bytes from %5 to %3 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc117)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
      cir.call @printStructLine(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc84)
    } loc(#loc104)
    cir.return loc(#loc46)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":40:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":24:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":25:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":39:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":26:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":26:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":27:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":35:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":28:13)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":28:20)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":34:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:22)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:25)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:29)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":31:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":32:36)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":32:24)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":32:17)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":33:36)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":33:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":33:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:35)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":30:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":37:16)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":37:22)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":37:30)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":37:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":37:54)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":37:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":37:55)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":38:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":38:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":38:32)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":38:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":47:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":64:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":48:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":49:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":63:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":50:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":50:33)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":51:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":59:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":52:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":52:20)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":58:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:22)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:18)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:25)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:29)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:27)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":55:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":56:36)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":56:24)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":56:17)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":57:36)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":57:24)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":57:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:35)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":54:34)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":61:16)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":61:22)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":61:30)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":61:34)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":61:54)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":61:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":61:55)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":62:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":62:31)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":62:32)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_53d.c":62:9)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc88 = loc(fused[#loc8, #loc9])
#loc89 = loc(fused[#loc10, #loc11])
#loc90 = loc(fused[#loc12, #loc13])
#loc91 = loc(fused[#loc14, #loc15])
#loc92 = loc(fused[#loc16, #loc17])
#loc93 = loc(fused[#loc19, #loc18])
#loc94 = loc(fused[#loc20, #loc21])
#loc95 = loc(fused[#loc23, #loc17])
#loc96 = loc(fused[#loc26, #loc24])
#loc97 = loc(fused[#loc30, #loc28])
#loc98 = loc(fused[#loc33, #loc32])
#loc99 = loc(fused[#loc37, #loc38])
#loc100 = loc(fused[#loc36, #loc38])
#loc101 = loc(fused[#loc39, #loc40])
#loc102 = loc(fused[#loc45, #loc46])
#loc104 = loc(fused[#loc50, #loc51])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc56, #loc57])
#loc108 = loc(fused[#loc58, #loc59])
#loc109 = loc(fused[#loc61, #loc60])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc65, #loc59])
#loc112 = loc(fused[#loc68, #loc66])
#loc113 = loc(fused[#loc71, #loc69])
#loc114 = loc(fused[#loc73, #loc72])
#loc115 = loc(fused[#loc77, #loc78])
#loc116 = loc(fused[#loc76, #loc78])
#loc117 = loc(fused[#loc79, #loc80])
