!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc155)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc160)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc155)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc21)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc28)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc29)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc33)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc34)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc39)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc169)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc170)
    cir.libc.memcpy %34 bytes from %30 to %28 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc171)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc44)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc46)
    %41 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc157)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc173)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc180)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc176)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb4 loc(#loc74)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc79)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %17 = cir.const #cir.int<67> : !s32i loc(#loc86)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc87)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc87)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc91)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc92)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc97)
    %35 = cir.const #cir.int<1> : !u64i loc(#loc189)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc190)
    cir.libc.memcpy %36 bytes from %32 to %30 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc191)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc102)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc104)
    %43 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc61)
  } loc(#loc177)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc196)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc155)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc125)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc202)
  ^bb5:  // pred: ^bb4
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc132)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc133)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc133)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc133)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc203)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc137)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc138)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc204)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc143)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc143)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc205)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc206)
    cir.libc.memcpy %34 bytes from %30 to %28 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc207)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc148)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc150)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc150)
    %41 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc152)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc110)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":36:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":26:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":27:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":28:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":29:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":32:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":32:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":33:19)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":33:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":33:14)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":33:15)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":43:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":37:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":37:24)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":37:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":37:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":37:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":37:34)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":38:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":38:16)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":38:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":38:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":40:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":40:22)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":40:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":40:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":40:45)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":40:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":40:46)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":41:23)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":41:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":41:14)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":41:18)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":41:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":42:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":42:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":101:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":105:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":103:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":103:14)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":104:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":104:14)
#loc57 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc58 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":59:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":51:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":76:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":68:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":68:24)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":53:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":53:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":54:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":54:26)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":55:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":55:28)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":56:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":66:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":56:8)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":57:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":60:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":62:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":59:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":64:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":64:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":65:19)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":65:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":65:14)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":65:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":67:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":75:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":69:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":69:24)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":69:29)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":69:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":69:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":69:34)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":70:25)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":70:16)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":70:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":70:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":72:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":72:22)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":72:30)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":72:34)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":72:45)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":72:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":72:46)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":73:23)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":73:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":73:14)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":73:18)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":73:19)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":74:19)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":74:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":79:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":99:1)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":91:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":91:24)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":81:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":81:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":82:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":82:26)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":83:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":83:28)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":84:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":89:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":84:8)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":85:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":87:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":87:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":88:19)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":88:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":88:14)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":88:15)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":90:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":98:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":92:16)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":92:24)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":92:29)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":92:33)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":92:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":92:34)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":93:25)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":93:16)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":93:20)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":93:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":95:16)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":95:22)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":95:30)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":95:34)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":95:45)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":95:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":95:46)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":96:23)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":96:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":96:14)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":96:18)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":96:19)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":97:19)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_10.c":97:9)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc9, #loc10])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc16])
#loc163 = loc(fused[#loc18, #loc16])
#loc164 = loc(fused[#loc20, #loc19])
#loc165 = loc(fused[#loc22, #loc21])
#loc166 = loc(fused[#loc25, #loc26])
#loc167 = loc(fused[#loc31, #loc32])
#loc168 = loc(fused[#loc36, #loc33])
#loc169 = loc(fused[#loc40, #loc41])
#loc170 = loc(fused[#loc39, #loc41])
#loc171 = loc(fused[#loc42, #loc43])
#loc172 = loc(fused[#loc45, #loc44])
#loc173 = loc(fused[#loc51, #loc52])
#loc174 = loc(fused[#loc53, #loc54])
#loc175 = loc(fused[#loc55, #loc56])
#loc176 = loc(fused[#loc57, #loc58])
#loc177 = loc(fused[#loc60, #loc61])
#loc178 = loc(fused[#loc62, #loc63])
#loc179 = loc(fused[#loc64, #loc65])
#loc180 = loc(fused[#loc66, #loc67])
#loc181 = loc(fused[#loc68, #loc69])
#loc182 = loc(fused[#loc70, #loc71])
#loc183 = loc(fused[#loc73, #loc74, #loc75, #loc71])
#loc184 = loc(fused[#loc78, #loc77])
#loc185 = loc(fused[#loc80, #loc79])
#loc186 = loc(fused[#loc83, #loc84])
#loc187 = loc(fused[#loc89, #loc90])
#loc188 = loc(fused[#loc94, #loc91])
#loc189 = loc(fused[#loc98, #loc99])
#loc190 = loc(fused[#loc97, #loc99])
#loc191 = loc(fused[#loc100, #loc101])
#loc192 = loc(fused[#loc103, #loc102])
#loc193 = loc(fused[#loc109, #loc110])
#loc194 = loc(fused[#loc111, #loc112])
#loc195 = loc(fused[#loc113, #loc114])
#loc196 = loc(fused[#loc115, #loc116])
#loc197 = loc(fused[#loc117, #loc118])
#loc198 = loc(fused[#loc119, #loc120])
#loc199 = loc(fused[#loc122, #loc120])
#loc200 = loc(fused[#loc124, #loc123])
#loc201 = loc(fused[#loc126, #loc125])
#loc202 = loc(fused[#loc129, #loc130])
#loc203 = loc(fused[#loc135, #loc136])
#loc204 = loc(fused[#loc140, #loc137])
#loc205 = loc(fused[#loc144, #loc145])
#loc206 = loc(fused[#loc143, #loc145])
#loc207 = loc(fused[#loc146, #loc147])
#loc208 = loc(fused[#loc149, #loc148])
