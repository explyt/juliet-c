!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":33:69)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":33:76)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":33:83)
#loc34 = loc(fused[#loc8, #loc9])
!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_base = !cir.struct<class "CWE23_Relative_Path_Traversal__char_listen_socket_open_81::CWE23_Relative_Path_Traversal__char_listen_socket_open_81_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad = !cir.struct<class "CWE23_Relative_Path_Traversal__char_listen_socket_open_81::CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad" {!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc31)
  cir.func private  @close(!s32i) -> !s32i loc(#loc32)
  cir.func  @_ZNK57CWE23_Relative_Path_Traversal__char_listen_socket_open_8161CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad6actionEPc(%arg0: !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad> loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":33:69), %arg1: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc34)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad>> loc(#loc10)
    cir.store %arg1, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_813A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad> loc(#loc7)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc36)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
      %5 = cir.const #cir.int<2> : !s32i loc(#loc16)
      %6 = cir.const #cir.int<64> : !s32i loc(#loc17)
      %7 = cir.binop(or, %5, %6) : !s32i loc(#loc37)
      %8 = cir.const #cir.int<256> : !s32i loc(#loc18)
      %9 = cir.const #cir.int<128> : !s32i loc(#loc19)
      %10 = cir.binop(or, %8, %9) : !s32i loc(#loc38)
      %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc20)
      cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc39)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc27)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc41)
        cir.if %15 {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc29)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc30)
        } loc(#loc42)
      } loc(#loc40)
    } loc(#loc35)
    cir.return loc(#loc6)
  } loc(#loc33)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("/usr/include/unistd.h":358:1)
#loc4 = loc("/usr/include/unistd.h":358:27)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":33:1)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":44:1)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":34:1)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":35:5)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":43:5)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":36:9)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":36:13)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:25)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:31)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:38)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:47)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:55)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:20)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:9)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":38:63)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":39:9)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":42:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":39:13)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":39:26)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":39:25)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":40:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":41:19)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_81_bad.cpp":41:13)
#loc31 = loc(fused[#loc1, #loc2])
#loc32 = loc(fused[#loc3, #loc4])
#loc33 = loc(fused[#loc5, #loc6])
#loc35 = loc(fused[#loc11, #loc12])
#loc36 = loc(fused[#loc13, #loc14])
#loc37 = loc(fused[#loc16, #loc17])
#loc38 = loc(fused[#loc18, #loc19])
#loc39 = loc(fused[#loc21, #loc22])
#loc40 = loc(fused[#loc23, #loc24])
#loc41 = loc(fused[#loc25, #loc26])
#loc42 = loc(fused[#loc28, #loc24])
