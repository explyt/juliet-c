!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":23:73)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":23:80)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":50:77)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":50:84)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":89:10)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":89:14)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":89:20)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":89:32)
#loc159 = loc(fused[#loc9, #loc10])
#loc180 = loc(fused[#loc69, #loc70])
#loc192 = loc(fused[#loc106, #loc107])
#loc193 = loc(fused[#loc108, #loc109])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc155)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc157)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc161)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc161)
      cir.store %2, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc161)
      %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc16)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc18)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc18)
      %10 = cir.const #cir.int<1> : !u64i loc(#loc162)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc163)
      cir.libc.memcpy %11 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc164)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc24)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc24)
      %14 = cir.const #cir.int<50> : !s32i loc(#loc25)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc25)
      %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc27)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc27)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc165)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc29)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc30)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    } loc(#loc160)
    cir.return loc(#loc8)
  } loc(#loc158)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc167)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc40)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc41)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc170)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc171)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc40)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc175)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc53)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
      } loc(#loc176)
    } loc(#loc174)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc55)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc56)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc56)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc177)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc60)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc62)
    %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_badSink(%22) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.return loc(#loc37)
  } loc(#loc168)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc69, #loc70])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc180)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc182)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc182)
      cir.store %2, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc182)
      %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc76)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc78)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc78)
      %10 = cir.const #cir.int<1> : !u64i loc(#loc183)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc184)
      cir.libc.memcpy %11 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc185)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc84)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc84)
      %14 = cir.const #cir.int<50> : !s32i loc(#loc85)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc86)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc85)
      %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc87)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc87)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc186)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc90)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
    } loc(#loc181)
    cir.return loc(#loc68)
  } loc(#loc179)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc94)
    cir.return loc(#loc93)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc189)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc103)
  cir.func @main(%arg0: !s32i loc(fused[#loc106, #loc107]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc108, #loc109])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc110)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc111)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc112)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc112)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc113)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc100)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_good() : () -> () loc(#loc115)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc101)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc102)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_bad() : () -> () loc(#loc119)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc103)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.return %17 : !s32i loc(#loc196)
  } loc(#loc191)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc129)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc200)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc204)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc139)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc140)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc141)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
      } loc(#loc205)
    } loc(#loc203)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc143)
    %11 = cir.const #cir.int<50> : !s32i loc(#loc144)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc144)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc144)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc206)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc148)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc150)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc150)
    %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc152)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41_goodG2BSink(%22) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    cir.return loc(#loc125)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":23:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":33:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":24:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":25:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":32:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":26:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":26:25)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:22)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:28)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:35)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:41)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:52)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":28:53)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":29:22)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":29:14)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":29:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":29:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":30:19)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":30:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":31:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":31:14)
#loc32 = loc("/usr/include/stdlib.h":672:1)
#loc33 = loc("/usr/include/stdlib.h":672:45)
#loc34 = loc("/usr/include/stdlib.h":756:1)
#loc35 = loc("/usr/include/stdlib.h":756:70)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":35:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":44:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":37:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":37:12)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":38:20)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":38:27)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":38:31)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":38:42)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":38:43)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":38:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:23)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:24)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:30)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":39:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":41:12)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":41:18)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":41:23)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":41:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":41:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":41:28)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":42:19)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":42:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":42:10)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":42:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":42:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":43:72)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":43:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":50:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":60:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":51:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":52:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":59:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":53:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":53:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:16)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:22)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:28)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:35)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:41)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:52)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":55:53)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":56:22)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":56:14)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":56:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":56:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":57:19)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":57:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":58:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":58:14)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":74:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":77:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":76:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":76:13)
#loc96 = loc("/usr/include/stdlib.h":575:1)
#loc97 = loc("/usr/include/stdlib.h":575:41)
#loc98 = loc("/usr/include/time.h":76:1)
#loc99 = loc("/usr/include/time.h":76:38)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":94:15)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":96:15)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":99:15)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":101:15)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":89:1)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":104:1)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":90:1)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":92:27)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":92:22)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":92:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":94:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":95:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":95:69)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":96:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":99:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":100:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":100:68)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":101:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":103:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":103:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":63:1)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":72:1)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":65:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":65:12)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":66:20)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":66:27)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":66:31)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":66:42)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":66:43)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":66:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:33)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:17)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:23)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:24)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:30)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":67:29)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":69:12)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":69:18)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":69:23)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":69:26)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":69:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":69:27)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":70:18)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":70:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":70:10)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":70:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":70:14)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":71:76)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_41.c":71:5)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc12, #loc13])
#loc161 = loc(fused[#loc14, #loc15])
#loc162 = loc(fused[#loc20, #loc21])
#loc163 = loc(fused[#loc18, #loc21])
#loc164 = loc(fused[#loc22, #loc23])
#loc165 = loc(fused[#loc27, #loc24])
#loc166 = loc(fused[#loc32, #loc33])
#loc167 = loc(fused[#loc34, #loc35])
#loc168 = loc(fused[#loc36, #loc37])
#loc169 = loc(fused[#loc38, #loc39])
#loc170 = loc(fused[#loc42, #loc43])
#loc171 = loc(fused[#loc41, #loc43])
#loc172 = loc(fused[#loc40, #loc44])
#loc173 = loc(fused[#loc45, #loc44])
#loc174 = loc(fused[#loc46, #loc47])
#loc175 = loc(fused[#loc48, #loc49])
#loc176 = loc(fused[#loc50, #loc47])
#loc177 = loc(fused[#loc58, #loc59])
#loc178 = loc(fused[#loc61, #loc60])
#loc179 = loc(fused[#loc67, #loc68])
#loc181 = loc(fused[#loc72, #loc73])
#loc182 = loc(fused[#loc74, #loc75])
#loc183 = loc(fused[#loc80, #loc81])
#loc184 = loc(fused[#loc78, #loc81])
#loc185 = loc(fused[#loc82, #loc83])
#loc186 = loc(fused[#loc87, #loc84])
#loc187 = loc(fused[#loc92, #loc93])
#loc188 = loc(fused[#loc94, #loc95])
#loc189 = loc(fused[#loc96, #loc97])
#loc190 = loc(fused[#loc98, #loc99])
#loc191 = loc(fused[#loc104, #loc105])
#loc194 = loc(fused[#loc115, #loc116])
#loc195 = loc(fused[#loc119, #loc120])
#loc196 = loc(fused[#loc123, #loc122])
#loc197 = loc(fused[#loc124, #loc125])
#loc198 = loc(fused[#loc126, #loc127])
#loc199 = loc(fused[#loc130, #loc131])
#loc200 = loc(fused[#loc129, #loc131])
#loc201 = loc(fused[#loc128, #loc132])
#loc202 = loc(fused[#loc133, #loc132])
#loc203 = loc(fused[#loc134, #loc135])
#loc204 = loc(fused[#loc136, #loc137])
#loc205 = loc(fused[#loc138, #loc135])
#loc206 = loc(fused[#loc146, #loc147])
#loc207 = loc(fused[#loc149, #loc148])
