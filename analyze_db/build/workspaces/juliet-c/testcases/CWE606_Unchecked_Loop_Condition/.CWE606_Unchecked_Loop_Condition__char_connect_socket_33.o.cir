!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc409)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc410)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc411)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc412)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc413)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc414)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc415)
  cir.func private @close(!s32i) -> !s32i loc(#loc416)
  cir.func private @__isoc23_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc417)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printIntLine(!s32i) loc(#loc418)
  cir.func @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc420)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc421)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc422)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc28)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc422)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc422)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc423)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc425)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc426)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc427)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc428)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc429)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc42)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc428)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc45)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc429)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc51)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc52)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc52)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc53)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc53)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
            cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc432)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc59)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc60)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc434)
              cir.if %73 {
                cir.break loc(#loc62)
              } loc(#loc435)
            } loc(#loc433)
            %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc436)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc65)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc437)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc438)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc70)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc70)
            %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc439)
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
            %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
            %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc440)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc78)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc78)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
            %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc441)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc85)
              %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc443)
              %72 = cir.const #cir.int<16> : !u64i loc(#loc444)
              %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc444)
              %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
              %75 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc91)
              %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc445)
              cir.if %77 {
                cir.break loc(#loc93)
              } loc(#loc446)
            } loc(#loc442)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc96)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc97)
            %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc447)
            %41 = cir.const #cir.int<1> : !u64i loc(#loc448)
            %42 = cir.const #cir.int<100> : !s32i loc(#loc102)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc102)
            %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc103)
            %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc449)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc104)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc450)
            %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc451)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc106)
            %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc107)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc107)
            cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc452)
            cir.scope {
              %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc113)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc454)
              %74 = cir.ternary(%73, true {
                %75 = cir.const #true loc(#loc114)
                cir.yield %75 : !cir.bool loc(#loc114)
              }, false {
                %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %76 = cir.const #cir.int<0> : !s32i loc(#loc116)
                %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc455)
                %78 = cir.ternary(%77, true {
                  %79 = cir.const #true loc(#loc114)
                  cir.yield %79 : !cir.bool loc(#loc114)
                }, false {
                  %79 = cir.const #false loc(#loc114)
                  cir.yield %79 : !cir.bool loc(#loc114)
                }) : (!cir.bool) -> !cir.bool loc(#loc114)
                cir.yield %78 : !cir.bool loc(#loc114)
              }) : (!cir.bool) -> !cir.bool loc(#loc114)
              cir.if %74 {
                cir.break loc(#loc118)
              } loc(#loc456)
            } loc(#loc453)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc119)
            %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc121)
            %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
            %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc122)
            %58 = cir.const #cir.int<1> : !u64i loc(#loc457)
            %59 = cir.binop(div, %57, %58) : !u64i loc(#loc458)
            %60 = cir.binop(add, %55, %59) : !u64i loc(#loc459)
            %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc125)
            cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc460)
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
            %63 = cir.const #cir.int<13> : !s8i loc(#loc127)
            %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc127)
            %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc128)
            cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc461)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc133)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc135)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc464)
              } loc(#loc463)
            } loc(#loc462)
            %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
            %67 = cir.const #cir.int<10> : !s8i loc(#loc139)
            %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc139)
            %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc140)
            cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc465)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc145)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc147)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc468)
              } loc(#loc467)
            } loc(#loc466)
          } loc(#loc431)
          cir.yield loc(#loc48)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc150)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc150)
          cir.condition(%16) loc(#loc150)
        } loc(#loc430)
      } loc(#loc430)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc153)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc154)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc154)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc470)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc156)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc157)
        } loc(#loc471)
      } loc(#loc469)
    } loc(#loc424)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc473)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc473)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc475)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc476)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc477)
        cir.scope {
          %11 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc170)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
          %15 = cir.call @__isoc23_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc170)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc172)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc479)
          cir.if %17 {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc174)
            cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc481)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc178)
              cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc483)
              cir.for : cond {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc484)
                cir.condition(%23) loc(#loc484)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                  %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc184)
                  cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc486)
                } loc(#loc485)
                cir.yield loc(#loc177)
              } step {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc186)
                cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc487)
                cir.yield loc(#loc482)
              } loc(#loc482)
            } loc(#loc482)
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc188)
          } loc(#loc480)
        } loc(#loc478)
      } loc(#loc474)
    } loc(#loc472)
    cir.return loc(#loc24)
  } loc(#loc419)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc488)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc191)
  cir.func internal private @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc490)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc491)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc492)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc197)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc492)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc492)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc493)
    %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc202)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc191)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc191)
    %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc202)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc495)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc495)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc497)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc498)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc499)
        cir.scope {
          %16 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc216)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
          %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc218)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc218)
          %20 = cir.call @__isoc23_sscanf(%17, %19, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc216)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc219)
          %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc501)
          cir.if %22 {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc221)
            cir.store %23, %15 : !s32i, !cir.ptr<!s32i> loc(#loc503)
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc225)
              cir.store %25, %13 : !s32i, !cir.ptr<!s32i> loc(#loc505)
              cir.for : cond {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %27 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc506)
                cir.condition(%28) loc(#loc506)
              } body {
                cir.scope {
                  %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                  %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc231)
                  cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc508)
                } loc(#loc507)
                cir.yield loc(#loc224)
              } step {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc233)
                cir.store %27, %13 : !s32i, !cir.ptr<!s32i> loc(#loc509)
                cir.yield loc(#loc504)
              } loc(#loc504)
            } loc(#loc504)
            %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc234)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc235)
          } loc(#loc502)
        } loc(#loc500)
      } loc(#loc496)
    } loc(#loc494)
    cir.return loc(#loc193)
  } loc(#loc489)
  cir.func internal private @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc511)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc512)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc513)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc241)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc513)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc513)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc514)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc516)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc517)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc518)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc519)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc520)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc255)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc255)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc519)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc258)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc259)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc258)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc520)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc264)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc265)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc265)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc266)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc266)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc267)
            cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc523)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc272)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc273)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc273)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc525)
              cir.if %73 {
                cir.break loc(#loc275)
              } loc(#loc526)
            } loc(#loc524)
            %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc527)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc278)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc528)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc529)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc283)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc283)
            %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc530)
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc285)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc285)
            %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc286)
            %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc531)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc289)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc289)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc290)
            %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc532)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc295)
              %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc534)
              %72 = cir.const #cir.int<16> : !u64i loc(#loc535)
              %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc535)
              %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc300)
              %75 = cir.const #cir.int<1> : !s32i loc(#loc301)
              %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc301)
              %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc536)
              cir.if %77 {
                cir.break loc(#loc303)
              } loc(#loc537)
            } loc(#loc533)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc304)
            %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc305)
            %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc306)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc307)
            %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc538)
            %41 = cir.const #cir.int<1> : !u64i loc(#loc539)
            %42 = cir.const #cir.int<100> : !s32i loc(#loc312)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc312)
            %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc313)
            %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc540)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc314)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc314)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc541)
            %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc542)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc316)
            %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc317)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc317)
            cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc543)
            cir.scope {
              %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc322)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc323)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc323)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc545)
              %74 = cir.ternary(%73, true {
                %75 = cir.const #true loc(#loc324)
                cir.yield %75 : !cir.bool loc(#loc324)
              }, false {
                %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                %76 = cir.const #cir.int<0> : !s32i loc(#loc326)
                %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc546)
                %78 = cir.ternary(%77, true {
                  %79 = cir.const #true loc(#loc324)
                  cir.yield %79 : !cir.bool loc(#loc324)
                }, false {
                  %79 = cir.const #false loc(#loc324)
                  cir.yield %79 : !cir.bool loc(#loc324)
                }) : (!cir.bool) -> !cir.bool loc(#loc324)
                cir.yield %78 : !cir.bool loc(#loc324)
              }) : (!cir.bool) -> !cir.bool loc(#loc324)
              cir.if %74 {
                cir.break loc(#loc328)
              } loc(#loc547)
            } loc(#loc544)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc329)
            %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc330)
            %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc331)
            %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc332)
            %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc332)
            %58 = cir.const #cir.int<1> : !u64i loc(#loc548)
            %59 = cir.binop(div, %57, %58) : !u64i loc(#loc549)
            %60 = cir.binop(add, %55, %59) : !u64i loc(#loc550)
            %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc335)
            cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc551)
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc336)
            %63 = cir.const #cir.int<13> : !s8i loc(#loc337)
            %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc337)
            %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc338)
            cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc552)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc343)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc343)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc345)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc346)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc555)
              } loc(#loc554)
            } loc(#loc553)
            %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc348)
            %67 = cir.const #cir.int<10> : !s8i loc(#loc349)
            %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc349)
            %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc350)
            cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc556)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc355)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc355)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc357)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc358)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc559)
              } loc(#loc558)
            } loc(#loc557)
          } loc(#loc522)
          cir.yield loc(#loc261)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc360)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc360)
          cir.condition(%16) loc(#loc360)
        } loc(#loc521)
      } loc(#loc521)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc363)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc364)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc364)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc561)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc366)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc367)
        } loc(#loc562)
      } loc(#loc560)
    } loc(#loc515)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc564)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc371)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc371)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc564)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc566)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc567)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc568)
        cir.scope {
          %11 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc380)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc381)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc382)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc382)
          %15 = cir.call @__isoc23_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc380)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc383)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc570)
          cir.if %17 {
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc387)
              %19 = cir.const #cir.int<10000> : !s32i loc(#loc388)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc573)
              cir.if %20 {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc390)
                cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc575)
                cir.scope {
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc394)
                  cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc577)
                  cir.for : cond {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc396)
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc397)
                    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc578)
                    cir.condition(%26) loc(#loc578)
                  } body {
                    cir.scope {
                      %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc399)
                      %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc400)
                      cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc580)
                    } loc(#loc579)
                    cir.yield loc(#loc393)
                  } step {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc401)
                    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc402)
                    cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc581)
                    cir.yield loc(#loc576)
                  } loc(#loc576)
                } loc(#loc576)
                %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc403)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc404)
              } loc(#loc574)
            } loc(#loc572)
          } loc(#loc571)
        } loc(#loc569)
      } loc(#loc565)
    } loc(#loc563)
    cir.return loc(#loc237)
  } loc(#loc510)
  cir.func @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodG2BEv() : () -> () loc(#loc407)
    cir.call @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodB2GEv() : () -> () loc(#loc408)
    cir.return loc(#loc406)
  } loc(#loc582)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:49)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":447:1)
#loc19 = loc("/usr/include/stdio.h":447:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:30)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":52:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":142:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":54:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":54:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":55:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":55:23)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":56:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":56:28)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":57:12)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":57:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":58:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":124:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":63:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":63:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":64:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":64:28)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":65:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":65:15)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":66:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":66:32)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:9)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:37)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:26)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:33)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":68:9)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":113:17)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":69:9)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":112:9)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:36)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:45)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:58)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:29)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:13)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:69)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":79:13)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":82:13)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":79:17)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":79:34)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":80:13)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":81:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:20)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:30)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:33)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:47)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:48)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":84:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":84:13)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:13)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:59)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:38)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:13)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:46)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:13)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":90:13)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:25)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:58)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:59)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:68)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:82)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:17)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:88)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":88:13)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":89:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:31)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:55)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:62)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:60)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:46)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:69)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:72)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:83)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:88)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:94)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:104)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:105)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:108)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:26)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:13)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:109)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:13)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":98:13)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:31)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:44)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:47)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:61)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":96:13)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":97:17)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:57)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:13)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:18)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:28)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:41)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:52)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:53)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:30)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:36)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:23)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:13)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:40)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":103:13)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":106:13)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":103:17)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":104:13)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":105:28)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":105:18)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":105:17)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:30)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:36)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:23)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:13)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:40)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":108:13)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":111:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":108:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":109:13)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":110:28)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":110:18)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":110:17)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":113:16)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":114:9)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":117:9)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":114:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":114:30)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":115:9)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":116:26)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":116:13)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":125:5)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":141:5)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":126:9)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":126:23)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":127:9)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":140:9)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:13)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:17)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:20)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:23)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":139:13)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:17)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:24)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:43)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":130:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":132:31)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":132:17)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:17)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":137:17)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:26)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:22)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:29)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:33)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":134:17)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":136:32)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":136:21)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:37)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:36)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":138:30)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":138:17)
#loc189 = loc("/usr/include/string.h":141:1)
#loc190 = loc("/usr/include/string.h":142:14)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":156:18)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":149:1)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":174:1)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":151:5)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":151:12)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":152:5)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":152:23)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":153:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":153:28)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":154:12)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":154:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":156:5)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":156:12)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":157:5)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":173:5)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":158:9)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":158:23)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":159:9)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":172:9)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:13)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:17)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:20)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:23)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:13)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":171:13)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:17)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:24)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:30)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:43)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":162:13)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":164:31)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":164:17)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:17)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":169:17)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:26)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:22)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:29)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:33)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":166:17)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":168:32)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":168:21)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:37)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:36)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":170:30)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":170:17)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":177:1)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":270:1)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":179:5)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":179:12)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":180:5)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":180:23)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":181:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":181:28)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":182:12)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":182:5)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":183:5)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":249:5)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":188:9)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":188:13)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":189:9)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":189:28)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":190:9)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":190:15)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":191:9)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":191:32)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:9)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:37)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:26)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:33)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":193:9)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":238:17)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":194:9)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":237:9)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:36)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:45)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:58)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:29)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:13)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:69)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":204:13)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":207:13)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":204:17)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":204:34)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":205:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":206:17)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:20)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:21)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:30)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:33)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:47)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:13)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:48)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":209:34)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":209:13)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:49)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:39)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:13)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:59)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:38)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:32)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:13)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:46)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:13)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":215:13)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:25)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:58)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:59)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:68)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:82)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:17)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:88)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":213:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":214:17)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:31)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:55)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:62)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:60)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:46)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:69)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:72)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:83)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:88)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:94)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:104)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:105)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:108)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:26)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:13)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:109)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:13)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":223:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:17)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:31)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:44)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:47)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:61)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":221:13)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":222:17)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:57)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:13)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:18)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:28)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:41)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:52)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:53)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:30)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:36)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:23)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:13)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:40)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":228:13)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":231:13)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":228:17)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":229:13)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":230:28)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":230:18)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":230:17)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:30)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:36)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:23)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:13)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:40)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":233:13)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":236:13)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":233:17)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":234:13)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":235:28)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":235:18)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":235:17)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":238:16)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":239:9)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":242:9)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":239:13)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":239:30)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":240:9)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":241:26)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":241:13)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":250:5)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":269:5)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":251:9)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":251:23)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":252:9)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":268:9)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:13)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:17)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:20)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:23)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:13)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":267:13)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:17)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:24)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:30)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:43)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":255:13)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":257:17)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":266:17)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":257:21)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":257:25)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":258:17)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":259:35)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":259:21)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:21)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":264:21)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:30)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:26)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:33)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:37)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":261:21)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":263:36)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":263:25)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:41)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:40)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":265:34)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":265:21)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":272:1)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":276:1)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":274:5)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":275:5)
#loc409 = loc(fused[#loc1, #loc2])
#loc410 = loc(fused[#loc3, #loc4])
#loc411 = loc(fused[#loc5, #loc6])
#loc412 = loc(fused[#loc8, #loc9])
#loc413 = loc(fused[#loc10, #loc11])
#loc414 = loc(fused[#loc12, #loc13])
#loc415 = loc(fused[#loc14, #loc15])
#loc416 = loc(fused[#loc16, #loc17])
#loc417 = loc(fused[#loc18, #loc19])
#loc418 = loc(fused[#loc21, #loc22])
#loc419 = loc(fused[#loc23, #loc24])
#loc420 = loc(fused[#loc25, #loc26])
#loc421 = loc(fused[#loc27, #loc28])
#loc422 = loc(fused[#loc29, #loc30])
#loc423 = loc(fused[#loc32, #loc31])
#loc424 = loc(fused[#loc33, #loc34])
#loc425 = loc(fused[#loc35, #loc36])
#loc426 = loc(fused[#loc37, #loc38])
#loc427 = loc(fused[#loc39, #loc40])
#loc428 = loc(fused[#loc41, #loc42])
#loc429 = loc(fused[#loc43, #loc44])
#loc430 = loc(fused[#loc47, #loc48])
#loc431 = loc(fused[#loc49, #loc50])
#loc432 = loc(fused[#loc55, #loc56])
#loc433 = loc(fused[#loc57, #loc58])
#loc434 = loc(fused[#loc59, #loc60])
#loc435 = loc(fused[#loc61, #loc58])
#loc436 = loc(fused[#loc63, #loc64])
#loc437 = loc(fused[#loc66, #loc67])
#loc438 = loc(fused[#loc68, #loc69])
#loc439 = loc(fused[#loc72, #loc70])
#loc440 = loc(fused[#loc76, #loc77])
#loc441 = loc(fused[#loc81, #loc82])
#loc442 = loc(fused[#loc83, #loc84])
#loc443 = loc(fused[#loc86, #loc87])
#loc444 = loc(fused[#loc88, #loc89])
#loc445 = loc(fused[#loc90, #loc91])
#loc446 = loc(fused[#loc92, #loc84])
#loc447 = loc(fused[#loc98, #loc99])
#loc448 = loc(fused[#loc100, #loc101])
#loc449 = loc(fused[#loc102, #loc103])
#loc450 = loc(fused[#loc102, #loc104])
#loc451 = loc(fused[#loc100, #loc105])
#loc452 = loc(fused[#loc108, #loc109])
#loc453 = loc(fused[#loc110, #loc111])
#loc454 = loc(fused[#loc112, #loc113])
#loc455 = loc(fused[#loc115, #loc116])
#loc456 = loc(fused[#loc117, #loc111])
#loc457 = loc(fused[#loc123, #loc124])
#loc458 = loc(fused[#loc122, #loc124])
#loc459 = loc(fused[#loc121, #loc124])
#loc460 = loc(fused[#loc120, #loc119])
#loc461 = loc(fused[#loc129, #loc130])
#loc462 = loc(fused[#loc131, #loc132])
#loc463 = loc(fused[#loc134, #loc132])
#loc464 = loc(fused[#loc137, #loc135])
#loc465 = loc(fused[#loc141, #loc142])
#loc466 = loc(fused[#loc143, #loc144])
#loc467 = loc(fused[#loc146, #loc144])
#loc468 = loc(fused[#loc149, #loc147])
#loc469 = loc(fused[#loc151, #loc152])
#loc470 = loc(fused[#loc153, #loc154])
#loc471 = loc(fused[#loc155, #loc152])
#loc472 = loc(fused[#loc158, #loc159])
#loc473 = loc(fused[#loc160, #loc161])
#loc474 = loc(fused[#loc162, #loc163])
#loc475 = loc(fused[#loc164, #loc165])
#loc476 = loc(fused[#loc164, #loc166])
#loc477 = loc(fused[#loc164, #loc167])
#loc478 = loc(fused[#loc168, #loc169])
#loc479 = loc(fused[#loc170, #loc172])
#loc480 = loc(fused[#loc173, #loc169])
#loc481 = loc(fused[#loc175, #loc174])
#loc482 = loc(fused[#loc176, #loc177])
#loc483 = loc(fused[#loc179, #loc178])
#loc484 = loc(fused[#loc180, #loc181])
#loc485 = loc(fused[#loc182, #loc177])
#loc486 = loc(fused[#loc184, #loc183])
#loc487 = loc(fused[#loc186, #loc185])
#loc488 = loc(fused[#loc189, #loc190])
#loc489 = loc(fused[#loc192, #loc193])
#loc490 = loc(fused[#loc194, #loc195])
#loc491 = loc(fused[#loc196, #loc197])
#loc492 = loc(fused[#loc198, #loc199])
#loc493 = loc(fused[#loc201, #loc200])
#loc494 = loc(fused[#loc204, #loc205])
#loc495 = loc(fused[#loc206, #loc207])
#loc496 = loc(fused[#loc208, #loc209])
#loc497 = loc(fused[#loc210, #loc211])
#loc498 = loc(fused[#loc210, #loc212])
#loc499 = loc(fused[#loc210, #loc213])
#loc500 = loc(fused[#loc214, #loc215])
#loc501 = loc(fused[#loc216, #loc219])
#loc502 = loc(fused[#loc220, #loc215])
#loc503 = loc(fused[#loc222, #loc221])
#loc504 = loc(fused[#loc223, #loc224])
#loc505 = loc(fused[#loc226, #loc225])
#loc506 = loc(fused[#loc227, #loc228])
#loc507 = loc(fused[#loc229, #loc224])
#loc508 = loc(fused[#loc231, #loc230])
#loc509 = loc(fused[#loc233, #loc232])
#loc510 = loc(fused[#loc236, #loc237])
#loc511 = loc(fused[#loc238, #loc239])
#loc512 = loc(fused[#loc240, #loc241])
#loc513 = loc(fused[#loc242, #loc243])
#loc514 = loc(fused[#loc245, #loc244])
#loc515 = loc(fused[#loc246, #loc247])
#loc516 = loc(fused[#loc248, #loc249])
#loc517 = loc(fused[#loc250, #loc251])
#loc518 = loc(fused[#loc252, #loc253])
#loc519 = loc(fused[#loc254, #loc255])
#loc520 = loc(fused[#loc256, #loc257])
#loc521 = loc(fused[#loc260, #loc261])
#loc522 = loc(fused[#loc262, #loc263])
#loc523 = loc(fused[#loc268, #loc269])
#loc524 = loc(fused[#loc270, #loc271])
#loc525 = loc(fused[#loc272, #loc273])
#loc526 = loc(fused[#loc274, #loc271])
#loc527 = loc(fused[#loc276, #loc277])
#loc528 = loc(fused[#loc279, #loc280])
#loc529 = loc(fused[#loc281, #loc282])
#loc530 = loc(fused[#loc284, #loc283])
#loc531 = loc(fused[#loc287, #loc288])
#loc532 = loc(fused[#loc291, #loc292])
#loc533 = loc(fused[#loc293, #loc294])
#loc534 = loc(fused[#loc296, #loc297])
#loc535 = loc(fused[#loc298, #loc299])
#loc536 = loc(fused[#loc300, #loc301])
#loc537 = loc(fused[#loc302, #loc294])
#loc538 = loc(fused[#loc308, #loc309])
#loc539 = loc(fused[#loc310, #loc311])
#loc540 = loc(fused[#loc312, #loc313])
#loc541 = loc(fused[#loc312, #loc314])
#loc542 = loc(fused[#loc310, #loc315])
#loc543 = loc(fused[#loc318, #loc319])
#loc544 = loc(fused[#loc320, #loc321])
#loc545 = loc(fused[#loc322, #loc323])
#loc546 = loc(fused[#loc325, #loc326])
#loc547 = loc(fused[#loc327, #loc321])
#loc548 = loc(fused[#loc333, #loc334])
#loc549 = loc(fused[#loc332, #loc334])
#loc550 = loc(fused[#loc331, #loc334])
#loc551 = loc(fused[#loc330, #loc329])
#loc552 = loc(fused[#loc339, #loc340])
#loc553 = loc(fused[#loc341, #loc342])
#loc554 = loc(fused[#loc344, #loc342])
#loc555 = loc(fused[#loc347, #loc345])
#loc556 = loc(fused[#loc351, #loc352])
#loc557 = loc(fused[#loc353, #loc354])
#loc558 = loc(fused[#loc356, #loc354])
#loc559 = loc(fused[#loc359, #loc357])
#loc560 = loc(fused[#loc361, #loc362])
#loc561 = loc(fused[#loc363, #loc364])
#loc562 = loc(fused[#loc365, #loc362])
#loc563 = loc(fused[#loc368, #loc369])
#loc564 = loc(fused[#loc370, #loc371])
#loc565 = loc(fused[#loc372, #loc373])
#loc566 = loc(fused[#loc374, #loc375])
#loc567 = loc(fused[#loc374, #loc376])
#loc568 = loc(fused[#loc374, #loc377])
#loc569 = loc(fused[#loc378, #loc379])
#loc570 = loc(fused[#loc380, #loc383])
#loc571 = loc(fused[#loc384, #loc379])
#loc572 = loc(fused[#loc385, #loc386])
#loc573 = loc(fused[#loc387, #loc388])
#loc574 = loc(fused[#loc389, #loc386])
#loc575 = loc(fused[#loc391, #loc390])
#loc576 = loc(fused[#loc392, #loc393])
#loc577 = loc(fused[#loc395, #loc394])
#loc578 = loc(fused[#loc396, #loc397])
#loc579 = loc(fused[#loc398, #loc393])
#loc580 = loc(fused[#loc400, #loc399])
#loc581 = loc(fused[#loc402, #loc401])
#loc582 = loc(fused[#loc405, #loc406])
