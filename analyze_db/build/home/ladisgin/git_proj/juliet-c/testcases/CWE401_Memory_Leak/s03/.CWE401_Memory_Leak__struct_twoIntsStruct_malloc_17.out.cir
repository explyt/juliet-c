!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc81 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":110:10)
#loc82 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":110:14)
#loc83 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":110:20)
#loc84 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":110:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc233 = loc(fused[#loc81, #loc82])
#loc234 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc200)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc201)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc202)
  cir.func no_proto @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc205)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc207)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc210)
        cir.condition(%7) loc(#loc22)
      } body {
        cir.scope {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc212)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc213)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc214)
          cir.store %11, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc215)
          cir.scope {
            %25 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc217)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc36)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc37)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
            } loc(#loc218)
          } loc(#loc216)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc219)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc45)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
          cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc220)
          %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc49)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
          cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
        } loc(#loc211)
        cir.yield loc(#loc17)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc53)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
        cir.yield loc(#loc208)
      } loc(#loc208)
    } loc(#loc208)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc56)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc223)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc224)
        cir.condition(%7) loc(#loc60)
      } body {
        cir.yield loc(#loc55)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc62)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc225)
        cir.yield loc(#loc222)
      } loc(#loc222)
    } loc(#loc222)
    cir.return loc(#loc8)
  } loc(#loc203)
  cir.func no_proto @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc226)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc229)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc230)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc88)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %8 = cir.get_global @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17_good() : () -> () loc(#loc90)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %13 = cir.get_global @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17_bad() : () -> () loc(#loc94)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    cir.return %17 : !s32i loc(#loc237)
  } loc(#loc232)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc238)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc241)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc243)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc112)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc246)
        cir.condition(%7) loc(#loc116)
      } body {
        cir.scope {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc118)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc119)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc119)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc248)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc249)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc250)
          cir.store %11, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc251)
          cir.scope {
            %25 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc253)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc131)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
            } loc(#loc254)
          } loc(#loc252)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc132)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc255)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc136)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc138)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
          cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc256)
          %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc141)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
          cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc143)
        } loc(#loc247)
        cir.yield loc(#loc111)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc145)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc257)
        cir.yield loc(#loc244)
      } loc(#loc244)
    } loc(#loc244)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc148)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc259)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc150)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc151)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc260)
        cir.condition(%7) loc(#loc152)
      } body {
        cir.scope {
          %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc154)
          %6 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc155)
          cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc154)
        } loc(#loc261)
        cir.yield loc(#loc147)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc157)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc262)
        cir.yield loc(#loc258)
      } loc(#loc258)
    } loc(#loc258)
    cir.return loc(#loc102)
  } loc(#loc239)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc264)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc265)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc267)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc169)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc269)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc270)
        cir.condition(%7) loc(#loc173)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<100> : !s32i loc(#loc175)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc175)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc175)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc175)
          %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc175)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc175)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc175)
          cir.store %11, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc272)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc177)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc179)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc180)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc273)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc181)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc183)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
          cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc274)
          %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc186)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
          cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc188)
        } loc(#loc271)
        cir.yield loc(#loc168)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc190)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
        cir.yield loc(#loc268)
      } loc(#loc268)
    } loc(#loc268)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc193)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc277)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc195)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc196)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc278)
        cir.condition(%7) loc(#loc197)
      } body {
        cir.yield loc(#loc192)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc198)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc199)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc279)
        cir.yield loc(#loc276)
      } loc(#loc276)
    } loc(#loc276)
    cir.return loc(#loc159)
  } loc(#loc263)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":44:1)
#loc9 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":26:9)
#loc11 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":26:11)
#loc12 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":27:29)
#loc14 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":28:12)
#loc15 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:5)
#loc17 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":38:5)
#loc18 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:13)
#loc19 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:9)
#loc20 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:16)
#loc21 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:20)
#loc22 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:18)
#loc23 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":30:5)
#loc24 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":32:41)
#loc25 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":32:48)
#loc26 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":32:52)
#loc27 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":32:80)
#loc28 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":32:81)
#loc29 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":32:9)
#loc30 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:9)
#loc31 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:37)
#loc32 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:13)
#loc33 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:21)
#loc34 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:27)
#loc35 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:28)
#loc36 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:34)
#loc37 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":33:33)
#loc38 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":35:26)
#loc39 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":35:9)
#loc40 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":35:14)
#loc41 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":35:15)
#loc42 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc43 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":36:26)
#loc44 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":36:9)
#loc45 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":36:14)
#loc46 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":36:15)
#loc47 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc48 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":37:43)
#loc49 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":37:48)
#loc50 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":37:49)
#loc51 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":37:9)
#loc52 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:24)
#loc53 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":29:23)
#loc54 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:5)
#loc55 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":43:5)
#loc56 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:13)
#loc57 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:9)
#loc58 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:16)
#loc59 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:20)
#loc60 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:18)
#loc61 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:24)
#loc62 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":39:23)
#loc63 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":95:1)
#loc64 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":99:1)
#loc65 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":97:5)
#loc66 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":97:13)
#loc67 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":98:5)
#loc68 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":98:13)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":115:15)
#loc76 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":117:15)
#loc77 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":120:15)
#loc78 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":122:15)
#loc79 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":110:1)
#loc80 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":125:1)
#loc85 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":111:1)
#loc86 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":113:27)
#loc87 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":113:22)
#loc88 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":113:5)
#loc89 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":115:5)
#loc90 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":116:5)
#loc91 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":116:61)
#loc92 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":117:5)
#loc93 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":120:5)
#loc94 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":121:5)
#loc95 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":121:60)
#loc96 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":122:5)
#loc97 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":124:12)
#loc98 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":124:5)
#loc99 = loc("/usr/include/stdlib.h":687:1)
#loc100 = loc("/usr/include/stdlib.h":687:32)
#loc101 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":51:1)
#loc102 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":71:1)
#loc103 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":53:5)
#loc104 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":53:9)
#loc105 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":53:11)
#loc106 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":54:5)
#loc107 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":54:29)
#loc108 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":55:12)
#loc109 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":55:5)
#loc110 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:5)
#loc111 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":65:5)
#loc112 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:13)
#loc113 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:9)
#loc114 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:16)
#loc115 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:20)
#loc116 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:18)
#loc117 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":57:5)
#loc118 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":59:41)
#loc119 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":59:48)
#loc120 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":59:52)
#loc121 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":59:80)
#loc122 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":59:81)
#loc123 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":59:9)
#loc124 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:9)
#loc125 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:37)
#loc126 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:13)
#loc127 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:21)
#loc128 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:27)
#loc129 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:28)
#loc130 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:34)
#loc131 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":60:33)
#loc132 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":62:26)
#loc133 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":62:9)
#loc134 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":62:14)
#loc135 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":62:15)
#loc136 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":63:26)
#loc137 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":63:9)
#loc138 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":63:14)
#loc139 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":63:15)
#loc140 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":64:43)
#loc141 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":64:48)
#loc142 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":64:49)
#loc143 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":64:9)
#loc144 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:24)
#loc145 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":56:23)
#loc146 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:5)
#loc147 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":70:5)
#loc148 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:13)
#loc149 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:9)
#loc150 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:16)
#loc151 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:20)
#loc152 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:18)
#loc153 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":67:5)
#loc154 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":69:9)
#loc155 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":69:14)
#loc156 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:24)
#loc157 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":66:23)
#loc158 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":74:1)
#loc159 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":93:1)
#loc160 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":76:5)
#loc161 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":76:9)
#loc162 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":76:11)
#loc163 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":77:5)
#loc164 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":77:29)
#loc165 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":78:12)
#loc166 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":78:5)
#loc167 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:5)
#loc168 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":87:5)
#loc169 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:13)
#loc170 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:9)
#loc171 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:16)
#loc172 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:20)
#loc173 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:18)
#loc174 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":80:5)
#loc175 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":82:41)
#loc176 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":82:9)
#loc177 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":84:26)
#loc178 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":84:9)
#loc179 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":84:14)
#loc180 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":84:15)
#loc181 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":85:26)
#loc182 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":85:9)
#loc183 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":85:14)
#loc184 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":85:15)
#loc185 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":86:43)
#loc186 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":86:48)
#loc187 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":86:49)
#loc188 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":86:9)
#loc189 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:24)
#loc190 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":79:23)
#loc191 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:5)
#loc192 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":92:5)
#loc193 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:13)
#loc194 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:9)
#loc195 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:16)
#loc196 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:20)
#loc197 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:18)
#loc198 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:24)
#loc199 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c":88:23)
#loc200 = loc(fused[#loc1, #loc2])
#loc201 = loc(fused[#loc3, #loc4])
#loc202 = loc(fused[#loc5, #loc6])
#loc203 = loc(fused[#loc7, #loc8])
#loc204 = loc(fused[#loc9, #loc10])
#loc205 = loc(fused[#loc9, #loc11])
#loc206 = loc(fused[#loc12, #loc13])
#loc207 = loc(fused[#loc15, #loc14])
#loc208 = loc(fused[#loc16, #loc17])
#loc209 = loc(fused[#loc19, #loc18])
#loc210 = loc(fused[#loc20, #loc21])
#loc211 = loc(fused[#loc23, #loc17])
#loc212 = loc(fused[#loc26, #loc27])
#loc213 = loc(fused[#loc25, #loc27])
#loc214 = loc(fused[#loc24, #loc28])
#loc215 = loc(fused[#loc29, #loc28])
#loc216 = loc(fused[#loc30, #loc31])
#loc217 = loc(fused[#loc32, #loc33])
#loc218 = loc(fused[#loc34, #loc31])
#loc219 = loc(fused[#loc39, #loc38])
#loc220 = loc(fused[#loc44, #loc43])
#loc221 = loc(fused[#loc53, #loc52])
#loc222 = loc(fused[#loc54, #loc55])
#loc223 = loc(fused[#loc57, #loc56])
#loc224 = loc(fused[#loc58, #loc59])
#loc225 = loc(fused[#loc62, #loc61])
#loc226 = loc(fused[#loc63, #loc64])
#loc227 = loc(fused[#loc65, #loc66])
#loc228 = loc(fused[#loc67, #loc68])
#loc229 = loc(fused[#loc69, #loc70])
#loc230 = loc(fused[#loc71, #loc72])
#loc231 = loc(fused[#loc73, #loc74])
#loc232 = loc(fused[#loc79, #loc80])
#loc235 = loc(fused[#loc90, #loc91])
#loc236 = loc(fused[#loc94, #loc95])
#loc237 = loc(fused[#loc98, #loc97])
#loc238 = loc(fused[#loc99, #loc100])
#loc239 = loc(fused[#loc101, #loc102])
#loc240 = loc(fused[#loc103, #loc104])
#loc241 = loc(fused[#loc103, #loc105])
#loc242 = loc(fused[#loc106, #loc107])
#loc243 = loc(fused[#loc109, #loc108])
#loc244 = loc(fused[#loc110, #loc111])
#loc245 = loc(fused[#loc113, #loc112])
#loc246 = loc(fused[#loc114, #loc115])
#loc247 = loc(fused[#loc117, #loc111])
#loc248 = loc(fused[#loc120, #loc121])
#loc249 = loc(fused[#loc119, #loc121])
#loc250 = loc(fused[#loc118, #loc122])
#loc251 = loc(fused[#loc123, #loc122])
#loc252 = loc(fused[#loc124, #loc125])
#loc253 = loc(fused[#loc126, #loc127])
#loc254 = loc(fused[#loc128, #loc125])
#loc255 = loc(fused[#loc133, #loc132])
#loc256 = loc(fused[#loc137, #loc136])
#loc257 = loc(fused[#loc145, #loc144])
#loc258 = loc(fused[#loc146, #loc147])
#loc259 = loc(fused[#loc149, #loc148])
#loc260 = loc(fused[#loc150, #loc151])
#loc261 = loc(fused[#loc153, #loc147])
#loc262 = loc(fused[#loc157, #loc156])
#loc263 = loc(fused[#loc158, #loc159])
#loc264 = loc(fused[#loc160, #loc161])
#loc265 = loc(fused[#loc160, #loc162])
#loc266 = loc(fused[#loc163, #loc164])
#loc267 = loc(fused[#loc166, #loc165])
#loc268 = loc(fused[#loc167, #loc168])
#loc269 = loc(fused[#loc170, #loc169])
#loc270 = loc(fused[#loc171, #loc172])
#loc271 = loc(fused[#loc174, #loc168])
#loc272 = loc(fused[#loc176, #loc175])
#loc273 = loc(fused[#loc178, #loc177])
#loc274 = loc(fused[#loc182, #loc181])
#loc275 = loc(fused[#loc190, #loc189])
#loc276 = loc(fused[#loc191, #loc192])
#loc277 = loc(fused[#loc194, #loc193])
#loc278 = loc(fused[#loc195, #loc196])
#loc279 = loc(fused[#loc199, #loc198])
