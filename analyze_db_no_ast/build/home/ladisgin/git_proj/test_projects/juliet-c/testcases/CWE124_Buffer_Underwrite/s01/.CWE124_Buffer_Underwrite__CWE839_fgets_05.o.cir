!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc345)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc346)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc347)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc348)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc349)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @printIntLine(!s32i) loc(#loc350)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc357)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc357)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc357)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc33)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc33)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc33)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc33)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc33)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc33)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc33)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc33)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc347)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc359)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc37)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc361)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc360)
          } loc(#loc358)
        } loc(#loc356)
      } loc(#loc355)
    } loc(#loc354)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc48)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc365)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc366)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc366)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc366)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc59)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc368)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc60)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc64)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc66)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc66)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc370)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc69)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc372)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc72)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc373)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc73)
                  cir.condition(%21) loc(#loc73)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc76)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc76)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc77)
                  } loc(#loc374)
                  cir.yield loc(#loc68)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc79)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc375)
                  cir.yield loc(#loc371)
                } loc(#loc371)
              } loc(#loc371)
            } else {
              %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc80)
            } loc(#loc369)
          } loc(#loc367)
        } loc(#loc364)
      } loc(#loc363)
    } loc(#loc362)
    cir.return loc(#loc16)
  } loc(#loc351)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc377)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc378)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc379)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc380)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc82)
  } loc(#loc376)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc381)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc93)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc383)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc100)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc104)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc388)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc388)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc388)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc113)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc113)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc113)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc113)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc113)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc113)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc113)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc113)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc347)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc115)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc390)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc117)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc125)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc125)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc126)
            } loc(#loc391)
          } loc(#loc389)
        } loc(#loc387)
      } loc(#loc386)
    } loc(#loc385)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc381)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc129)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc133)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc396)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc397)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc397)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc397)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc143)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc399)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc144)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc147)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc400)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc149)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc145)
                cir.yield %19 : !cir.bool loc(#loc145)
              }, false {
                %19 = cir.const #false loc(#loc145)
                cir.yield %19 : !cir.bool loc(#loc145)
              }) : (!cir.bool) -> !cir.bool loc(#loc145)
              cir.yield %18 : !cir.bool loc(#loc145)
            }, false {
              %14 = cir.const #false loc(#loc145)
              cir.yield %14 : !cir.bool loc(#loc145)
            }) : (!cir.bool) -> !cir.bool loc(#loc145)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc153)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %16 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc155)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc155)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc402)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc158)
                cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc404)
                cir.for : cond {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc161)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc405)
                  %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc162)
                  cir.condition(%22) loc(#loc162)
                } body {
                  cir.scope {
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                    %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc165)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc165)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc166)
                  } loc(#loc406)
                  cir.yield loc(#loc157)
                } step {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc167)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc168)
                  cir.store %20, %6 : !s32i, !cir.ptr<!s32i> loc(#loc407)
                  cir.yield loc(#loc403)
                } loc(#loc403)
              } loc(#loc403)
            } else {
              %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc94)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc94)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc169)
            } loc(#loc401)
          } loc(#loc398)
        } loc(#loc395)
      } loc(#loc394)
    } loc(#loc393)
    cir.return loc(#loc96)
  } loc(#loc382)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc409)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc175)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc179)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc179)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc414)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc414)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc414)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc187)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc188)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc188)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc188)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc188)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc188)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc188)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc188)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc188)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc347)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc189)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc190)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc191)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc191)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc416)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc192)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc196)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc197)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc418)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc200)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc200)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc201)
            } loc(#loc417)
          } loc(#loc415)
        } loc(#loc413)
      } loc(#loc412)
    } loc(#loc411)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc204)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc204)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc422)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc423)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc423)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc423)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc214)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc215)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !s32i loc(#loc425)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc216)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc219)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc426)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc221)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc217)
                cir.yield %19 : !cir.bool loc(#loc217)
              }, false {
                %19 = cir.const #false loc(#loc217)
                cir.yield %19 : !cir.bool loc(#loc217)
              }) : (!cir.bool) -> !cir.bool loc(#loc217)
              cir.yield %18 : !cir.bool loc(#loc217)
            }, false {
              %14 = cir.const #false loc(#loc217)
              cir.yield %14 : !cir.bool loc(#loc217)
            }) : (!cir.bool) -> !cir.bool loc(#loc217)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc225)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc226)
              %16 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc227)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc227)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc428)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc230)
                cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc430)
                cir.for : cond {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc233)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !s32i loc(#loc431)
                  %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc234)
                  cir.condition(%22) loc(#loc234)
                } body {
                  cir.scope {
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                    %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc237)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc237)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc237)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc238)
                  } loc(#loc432)
                  cir.yield loc(#loc229)
                } step {
                  %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc240)
                  cir.store %20, %6 : !s32i, !cir.ptr<!s32i> loc(#loc433)
                  cir.yield loc(#loc429)
                } loc(#loc429)
              } loc(#loc429)
            } else {
              %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc241)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc241)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc242)
            } loc(#loc427)
          } loc(#loc424)
        } loc(#loc421)
      } loc(#loc420)
    } loc(#loc419)
    cir.return loc(#loc171)
  } loc(#loc408)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc435)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc248)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc381)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc252)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc256)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc256)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc257)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc258)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
      } loc(#loc438)
    } loc(#loc437)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc262)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc262)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc443)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc444)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc444)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc444)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc273)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc446)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc274)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc278)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc280)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc280)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc448)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc283)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc450)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc286)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc451)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc287)
                  cir.condition(%21) loc(#loc287)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc290)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc290)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc291)
                  } loc(#loc452)
                  cir.yield loc(#loc282)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc293)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc453)
                  cir.yield loc(#loc449)
                } loc(#loc449)
              } loc(#loc449)
            } else {
              %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc294)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc294)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc295)
            } loc(#loc447)
          } loc(#loc445)
        } loc(#loc442)
      } loc(#loc441)
    } loc(#loc440)
    cir.return loc(#loc244)
  } loc(#loc434)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc455)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc300)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc301)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc305)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc305)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc307)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc459)
      } loc(#loc458)
    } loc(#loc457)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc345)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc311)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc311)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc463)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc464)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc464)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc464)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc321)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc322)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc466)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc323)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc327)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc328)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc329)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc329)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc468)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc332)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc470)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc334)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc335)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc471)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc336)
                  cir.condition(%21) loc(#loc336)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc339)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc339)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc340)
                  } loc(#loc472)
                  cir.yield loc(#loc331)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc341)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc342)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc473)
                  cir.yield loc(#loc469)
                } loc(#loc469)
              } loc(#loc469)
            } else {
              %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc343)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc343)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc344)
            } loc(#loc467)
          } loc(#loc465)
        } loc(#loc462)
      } loc(#loc461)
    } loc(#loc460)
    cir.return loc(#loc297)
  } loc(#loc454)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_05.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":25:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":25:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":47:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":69:27)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":30:1)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":73:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":32:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":32:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":34:13)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":34:12)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":34:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":35:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":50:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":35:8)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":36:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":37:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":49:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":38:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":38:49)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":40:13)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":48:13)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":40:23)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":40:36)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":40:53)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":40:17)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":40:63)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":40:60)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":41:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":44:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":46:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":43:29)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":43:24)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":43:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":43:40)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":47:17)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":51:5)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":72:5)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":51:8)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":52:5)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":53:9)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":71:9)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":54:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":54:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":55:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":55:34)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":58:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":70:13)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":58:17)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":58:24)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":58:22)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":59:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":66:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":68:13)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":60:32)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":60:24)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":60:17)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:17)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":65:17)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:25)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:21)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:28)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:32)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:30)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":63:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":64:41)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":64:34)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":64:21)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:37)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":62:36)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":69:17)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":251:1)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":257:1)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":253:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":253:14)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":254:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":254:14)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":255:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":255:14)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":256:5)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":256:14)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":26:1)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":26:26)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":104:19)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":123:27)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":80:1)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":127:1)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":82:5)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":82:9)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":84:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":84:12)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":84:5)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":85:5)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":100:5)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":85:8)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":86:5)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":87:9)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":99:9)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":88:13)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":88:49)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":90:13)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":98:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":90:23)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":90:36)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":90:53)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":90:17)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":90:63)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":90:60)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":91:13)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":94:13)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":96:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":93:29)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":93:24)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":93:17)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":93:40)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":97:27)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":97:17)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":101:5)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":126:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":101:8)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":102:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":105:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":107:5)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":104:9)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":108:9)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":125:9)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":109:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":109:17)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":110:13)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":110:34)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:13)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":124:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:25)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:22)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:27)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:30)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:38)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:40)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":112:35)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":113:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":120:13)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":122:13)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":114:32)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":114:24)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":114:17)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:17)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":119:17)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:25)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:21)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:28)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:32)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:30)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":117:17)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":118:41)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":118:34)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":118:21)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:37)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":116:36)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":123:17)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":130:1)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":172:1)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":132:5)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":132:9)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":134:13)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":134:12)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":134:5)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":135:5)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":150:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":135:8)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":136:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":137:9)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":149:9)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":138:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":138:49)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":140:13)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":148:13)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":140:23)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":140:36)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":140:53)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":140:17)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":140:63)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":140:60)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":141:13)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":144:13)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":146:13)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":143:29)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":143:24)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":143:17)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":143:40)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":147:27)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":147:17)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":151:5)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":171:5)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":151:8)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":152:5)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":153:9)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":170:9)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":154:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":154:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":155:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":155:34)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:13)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":169:13)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:17)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:25)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:22)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:27)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:30)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:38)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:40)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":157:35)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":158:13)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":165:13)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":167:13)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":159:32)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":159:24)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":159:17)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:17)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":164:17)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:25)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:21)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:28)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:32)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:30)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":162:17)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":163:41)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":163:34)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":163:21)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:37)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":161:36)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":168:27)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":168:17)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":175:1)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":213:1)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":177:5)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":177:9)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":179:13)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":179:12)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":179:5)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":180:5)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":190:5)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":180:8)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":181:5)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":184:5)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":186:5)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":183:19)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":183:9)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":189:16)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":189:9)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":191:5)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":212:5)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":191:8)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":192:5)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":193:9)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":211:9)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":194:13)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":194:17)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":195:13)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":195:34)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":198:13)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":210:13)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":198:17)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":198:24)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":198:22)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":199:13)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":206:13)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":208:13)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":200:32)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":200:24)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":200:17)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:17)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":205:17)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:25)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:21)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:28)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:32)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:30)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":203:17)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":204:41)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":204:34)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":204:21)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:37)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":202:36)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":209:27)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":209:17)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":216:1)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":249:1)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":218:5)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":218:9)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":220:13)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":220:12)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":220:5)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":221:5)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":226:5)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":221:8)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":222:5)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":225:16)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":225:9)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":227:5)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":248:5)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":227:8)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":228:5)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":229:9)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":247:9)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":230:13)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":230:17)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":231:13)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":231:34)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":234:13)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":246:13)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":234:17)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":234:24)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":234:22)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":235:13)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":242:13)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":244:13)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":236:32)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":236:24)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":236:17)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:17)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":241:17)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:25)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:21)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:28)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:32)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:30)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":239:17)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":240:41)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":240:34)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":240:21)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:37)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":238:36)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":245:27)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_05.c":245:17)
#loc345 = loc(fused[#loc1, #loc2])
#loc346 = loc(fused[#loc3, #loc4])
#loc347 = loc(fused[#loc5, #loc6])
#loc348 = loc(fused[#loc7, #loc8])
#loc349 = loc(fused[#loc9, #loc10])
#loc350 = loc(fused[#loc12, #loc13])
#loc351 = loc(fused[#loc15, #loc16])
#loc352 = loc(fused[#loc17, #loc18])
#loc353 = loc(fused[#loc21, #loc19])
#loc354 = loc(fused[#loc22, #loc23])
#loc355 = loc(fused[#loc25, #loc23])
#loc356 = loc(fused[#loc26, #loc27])
#loc357 = loc(fused[#loc28, #loc29])
#loc358 = loc(fused[#loc30, #loc31])
#loc359 = loc(fused[#loc35, #loc36])
#loc360 = loc(fused[#loc38, #loc39, #loc40, #loc31])
#loc361 = loc(fused[#loc43, #loc44])
#loc362 = loc(fused[#loc46, #loc47])
#loc363 = loc(fused[#loc49, #loc47])
#loc364 = loc(fused[#loc50, #loc51])
#loc365 = loc(fused[#loc52, #loc53])
#loc366 = loc(fused[#loc54, #loc55])
#loc367 = loc(fused[#loc56, #loc57])
#loc368 = loc(fused[#loc58, #loc59])
#loc369 = loc(fused[#loc61, #loc62, #loc63, #loc57])
#loc370 = loc(fused[#loc66, #loc64])
#loc371 = loc(fused[#loc67, #loc68])
#loc372 = loc(fused[#loc70, #loc69])
#loc373 = loc(fused[#loc71, #loc72])
#loc374 = loc(fused[#loc74, #loc68])
#loc375 = loc(fused[#loc79, #loc78])
#loc376 = loc(fused[#loc81, #loc82])
#loc377 = loc(fused[#loc83, #loc84])
#loc378 = loc(fused[#loc85, #loc86])
#loc379 = loc(fused[#loc87, #loc88])
#loc380 = loc(fused[#loc89, #loc90])
#loc381 = loc(fused[#loc91, #loc92])
#loc382 = loc(fused[#loc95, #loc96])
#loc383 = loc(fused[#loc97, #loc98])
#loc384 = loc(fused[#loc101, #loc99])
#loc385 = loc(fused[#loc102, #loc103])
#loc386 = loc(fused[#loc105, #loc103])
#loc387 = loc(fused[#loc106, #loc107])
#loc388 = loc(fused[#loc108, #loc109])
#loc389 = loc(fused[#loc110, #loc111])
#loc390 = loc(fused[#loc115, #loc116])
#loc391 = loc(fused[#loc118, #loc119, #loc120, #loc111])
#loc392 = loc(fused[#loc123, #loc124])
#loc393 = loc(fused[#loc127, #loc128])
#loc394 = loc(fused[#loc130, #loc131, #loc132, #loc128])
#loc395 = loc(fused[#loc134, #loc135])
#loc396 = loc(fused[#loc136, #loc137])
#loc397 = loc(fused[#loc138, #loc139])
#loc398 = loc(fused[#loc140, #loc141])
#loc399 = loc(fused[#loc142, #loc143])
#loc400 = loc(fused[#loc146, #loc148])
#loc401 = loc(fused[#loc150, #loc151, #loc152, #loc141])
#loc402 = loc(fused[#loc155, #loc153])
#loc403 = loc(fused[#loc156, #loc157])
#loc404 = loc(fused[#loc159, #loc158])
#loc405 = loc(fused[#loc160, #loc161])
#loc406 = loc(fused[#loc163, #loc157])
#loc407 = loc(fused[#loc168, #loc167])
#loc408 = loc(fused[#loc170, #loc171])
#loc409 = loc(fused[#loc172, #loc173])
#loc410 = loc(fused[#loc176, #loc174])
#loc411 = loc(fused[#loc177, #loc178])
#loc412 = loc(fused[#loc180, #loc178])
#loc413 = loc(fused[#loc181, #loc182])
#loc414 = loc(fused[#loc183, #loc184])
#loc415 = loc(fused[#loc185, #loc186])
#loc416 = loc(fused[#loc190, #loc191])
#loc417 = loc(fused[#loc193, #loc194, #loc195, #loc186])
#loc418 = loc(fused[#loc198, #loc199])
#loc419 = loc(fused[#loc202, #loc203])
#loc420 = loc(fused[#loc205, #loc203])
#loc421 = loc(fused[#loc206, #loc207])
#loc422 = loc(fused[#loc208, #loc209])
#loc423 = loc(fused[#loc210, #loc211])
#loc424 = loc(fused[#loc212, #loc213])
#loc425 = loc(fused[#loc214, #loc215])
#loc426 = loc(fused[#loc218, #loc220])
#loc427 = loc(fused[#loc222, #loc223, #loc224, #loc213])
#loc428 = loc(fused[#loc227, #loc225])
#loc429 = loc(fused[#loc228, #loc229])
#loc430 = loc(fused[#loc231, #loc230])
#loc431 = loc(fused[#loc232, #loc233])
#loc432 = loc(fused[#loc235, #loc229])
#loc433 = loc(fused[#loc240, #loc239])
#loc434 = loc(fused[#loc243, #loc244])
#loc435 = loc(fused[#loc245, #loc246])
#loc436 = loc(fused[#loc249, #loc247])
#loc437 = loc(fused[#loc250, #loc251])
#loc438 = loc(fused[#loc253, #loc254, #loc255, #loc251])
#loc439 = loc(fused[#loc259, #loc258])
#loc440 = loc(fused[#loc260, #loc261])
#loc441 = loc(fused[#loc263, #loc261])
#loc442 = loc(fused[#loc264, #loc265])
#loc443 = loc(fused[#loc266, #loc267])
#loc444 = loc(fused[#loc268, #loc269])
#loc445 = loc(fused[#loc270, #loc271])
#loc446 = loc(fused[#loc272, #loc273])
#loc447 = loc(fused[#loc275, #loc276, #loc277, #loc271])
#loc448 = loc(fused[#loc280, #loc278])
#loc449 = loc(fused[#loc281, #loc282])
#loc450 = loc(fused[#loc284, #loc283])
#loc451 = loc(fused[#loc285, #loc286])
#loc452 = loc(fused[#loc288, #loc282])
#loc453 = loc(fused[#loc293, #loc292])
#loc454 = loc(fused[#loc296, #loc297])
#loc455 = loc(fused[#loc298, #loc299])
#loc456 = loc(fused[#loc302, #loc300])
#loc457 = loc(fused[#loc303, #loc304])
#loc458 = loc(fused[#loc306, #loc304])
#loc459 = loc(fused[#loc308, #loc307])
#loc460 = loc(fused[#loc309, #loc310])
#loc461 = loc(fused[#loc312, #loc310])
#loc462 = loc(fused[#loc313, #loc314])
#loc463 = loc(fused[#loc315, #loc316])
#loc464 = loc(fused[#loc317, #loc318])
#loc465 = loc(fused[#loc319, #loc320])
#loc466 = loc(fused[#loc321, #loc322])
#loc467 = loc(fused[#loc324, #loc325, #loc326, #loc320])
#loc468 = loc(fused[#loc329, #loc327])
#loc469 = loc(fused[#loc330, #loc331])
#loc470 = loc(fused[#loc333, #loc332])
#loc471 = loc(fused[#loc334, #loc335])
#loc472 = loc(fused[#loc337, #loc331])
#loc473 = loc(fused[#loc342, #loc341])
