!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc33 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printIntLine(!s32i) loc(#loc91)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc94)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc95)
    %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc96)
    cir.goto "source" loc(#loc97)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc16)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.goto "sink" loc(#loc99)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc21)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc100)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
    cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc13)
    cir.store %8, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc96)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc24)
    %10 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc27)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
    %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc32)
    cir.return loc(#loc5)
  } loc(#loc92)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc33)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc33)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc33)
    cir.return loc(#loc33)
  } loc(#loc33)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc105)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc106)
    %3 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc107)
    cir.goto "source" loc(#loc108)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc46)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.goto "sink" loc(#loc110)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc51)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc111)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc111)
    cir.call @_ZN11OneIntClassC2Ev(%8) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc43)
    cir.store %8, %3 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc107)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc54)
    %10 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc55)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc57)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc59)
    cir.return loc(#loc35)
  } loc(#loc103)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc115)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc116)
    %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc117)
    cir.goto "source" loc(#loc118)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc72)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.goto "sink" loc(#loc120)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc77)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc121)
    cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc69)
    cir.store %8, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc117)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc80)
    %10 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc82)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
    %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc86)
    cir.return loc(#loc61)
  } loc(#loc113)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18L7goodB2GEv() : () -> () loc(#loc89)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18L7goodG2BEv() : () -> () loc(#loc90)
    cir.return loc(#loc88)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":24:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":48:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":26:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":26:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":27:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":27:43)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":28:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":28:45)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":41:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":41:45)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":29:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":29:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":30:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":32:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":33:10)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":34:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":41:35)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":41:39)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":43:28)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":43:9)
#loc26 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":44:28)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":44:9)
#loc29 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":45:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":45:32)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":45:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":55:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":77:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":57:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":57:12)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":58:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":58:43)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":59:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":59:45)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":72:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":72:44)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":60:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":60:10)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":61:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":63:12)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":63:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":64:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":64:10)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":65:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":72:34)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":72:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":74:28)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":74:9)
#loc56 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":75:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":75:32)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":75:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":80:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":104:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":82:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":82:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":83:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":83:43)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":84:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":84:45)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":97:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":97:45)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":85:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":85:10)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":86:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":88:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":88:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":89:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":89:10)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":90:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":97:35)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":97:39)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":99:28)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":99:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":100:28)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":100:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":101:22)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":101:32)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":101:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":106:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":110:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":108:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_18.cpp":109:5)
#loc91 = loc(fused[#loc2, #loc3])
#loc92 = loc(fused[#loc4, #loc5])
#loc93 = loc(fused[#loc6, #loc7])
#loc94 = loc(fused[#loc8, #loc9])
#loc95 = loc(fused[#loc10, #loc11])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc14, #loc15])
#loc98 = loc(fused[#loc18, #loc17])
#loc99 = loc(fused[#loc19, #loc20])
#loc100 = loc(fused[#loc22, #loc13])
#loc101 = loc(fused[#loc25, #loc24])
#loc102 = loc(fused[#loc28, #loc27])
#loc103 = loc(fused[#loc34, #loc35])
#loc104 = loc(fused[#loc36, #loc37])
#loc105 = loc(fused[#loc38, #loc39])
#loc106 = loc(fused[#loc40, #loc41])
#loc107 = loc(fused[#loc42, #loc43])
#loc108 = loc(fused[#loc44, #loc45])
#loc109 = loc(fused[#loc48, #loc47])
#loc110 = loc(fused[#loc49, #loc50])
#loc111 = loc(fused[#loc52, #loc43])
#loc112 = loc(fused[#loc55, #loc54])
#loc113 = loc(fused[#loc60, #loc61])
#loc114 = loc(fused[#loc62, #loc63])
#loc115 = loc(fused[#loc64, #loc65])
#loc116 = loc(fused[#loc66, #loc67])
#loc117 = loc(fused[#loc68, #loc69])
#loc118 = loc(fused[#loc70, #loc71])
#loc119 = loc(fused[#loc74, #loc73])
#loc120 = loc(fused[#loc75, #loc76])
#loc121 = loc(fused[#loc78, #loc69])
#loc122 = loc(fused[#loc81, #loc80])
#loc123 = loc(fused[#loc83, #loc82])
#loc124 = loc(fused[#loc87, #loc88])
