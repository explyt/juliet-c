!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc169)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc170)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc171)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fscanf_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc19)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc23)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc180)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%9) loc(#loc27)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
        } loc(#loc181)
        cir.yield loc(#loc22)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc32)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
        cir.yield loc(#loc178)
      } loc(#loc178)
    } loc(#loc178)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc35)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc184)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc185)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%9) loc(#loc39)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc188)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc188)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc188)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
              %9 = cir.const #cir.int<10> : !s32i loc(#loc48)
              %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc190)
              %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc49)
              cir.if %11 {
                %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc54)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc54)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc55)
              } else {
                %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc56)
              } loc(#loc191)
            } loc(#loc189)
          } loc(#loc187)
        } loc(#loc186)
        cir.yield loc(#loc34)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc58)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc192)
        cir.yield loc(#loc183)
      } loc(#loc183)
    } loc(#loc183)
    cir.return loc(#loc12)
  } loc(#loc173)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fscanf_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc193)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc199)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc74)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc78)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc203)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc82)
        cir.condition(%9) loc(#loc82)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc84)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc84)
        } loc(#loc204)
        cir.yield loc(#loc77)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc88)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
        cir.yield loc(#loc201)
      } loc(#loc201)
    } loc(#loc201)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc91)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc207)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc208)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc95)
        cir.condition(%9) loc(#loc95)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc211)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc211)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc211)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %9 = cir.const #cir.int<0> : !s32i loc(#loc104)
              %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc213)
              %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc105)
              %12 = cir.ternary(%11, true {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc108)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc214)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc110)
                %17 = cir.ternary(%16, true {
                  %18 = cir.const #true loc(#loc106)
                  cir.yield %18 : !cir.bool loc(#loc106)
                }, false {
                  %18 = cir.const #false loc(#loc106)
                  cir.yield %18 : !cir.bool loc(#loc106)
                }) : (!cir.bool) -> !cir.bool loc(#loc106)
                cir.yield %17 : !cir.bool loc(#loc106)
              }, false {
                %13 = cir.const #false loc(#loc106)
                cir.yield %13 : !cir.bool loc(#loc106)
              }) : (!cir.bool) -> !cir.bool loc(#loc106)
              cir.if %12 {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc115)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc115)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc116)
              } else {
                %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc65)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc65)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc117)
              } loc(#loc215)
            } loc(#loc212)
          } loc(#loc210)
        } loc(#loc209)
        cir.yield loc(#loc90)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc119)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc216)
        cir.yield loc(#loc206)
      } loc(#loc206)
    } loc(#loc206)
    cir.return loc(#loc67)
  } loc(#loc196)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc128)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc132)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc224)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc136)
        cir.condition(%9) loc(#loc136)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<7> : !s32i loc(#loc138)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
        } loc(#loc225)
        cir.yield loc(#loc131)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc141)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
        cir.yield loc(#loc222)
      } loc(#loc222)
    } loc(#loc222)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc144)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc229)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc146)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc230)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc148)
        cir.condition(%9) loc(#loc148)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc233)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc233)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc233)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
              %9 = cir.const #cir.int<10> : !s32i loc(#loc157)
              %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc235)
              %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc158)
              cir.if %11 {
                %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
                %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc163)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc163)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc164)
              } else {
                %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc165)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc165)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc166)
              } loc(#loc236)
            } loc(#loc234)
          } loc(#loc232)
        } loc(#loc231)
        cir.yield loc(#loc143)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc167)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc168)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
        cir.yield loc(#loc228)
      } loc(#loc228)
    } loc(#loc228)
    cir.return loc(#loc121)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":31:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":45:27)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":22:1)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":49:1)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":24:5)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":24:9)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":24:11)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":25:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":25:9)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":27:13)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":27:12)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":27:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":32:5)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:13)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:16)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:20)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:18)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":29:5)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":31:9)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":31:16)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:24)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":28:23)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:5)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":48:5)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:13)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:16)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:20)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:18)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":34:5)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":35:9)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":47:9)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":36:13)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":36:34)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":39:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":46:13)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":39:17)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":39:24)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":39:22)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":40:13)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":42:13)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":44:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":41:37)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":41:30)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":41:17)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":45:17)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:24)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":33:23)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":115:1)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":119:1)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":117:5)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":117:13)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":118:5)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":118:13)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":78:27)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":56:1)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":82:1)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":58:5)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":58:9)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":58:11)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":59:5)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":59:9)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":61:13)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":61:12)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":61:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:5)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":66:5)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:13)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:9)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:16)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:20)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:18)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":63:5)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":65:9)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":65:16)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":65:23)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:24)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":62:23)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:5)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":81:5)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:9)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:16)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:20)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:18)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":68:5)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":69:9)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":80:9)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":70:13)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":70:34)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:13)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":79:13)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:17)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:25)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:22)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:27)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:30)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:38)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:40)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":72:35)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":73:13)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":75:13)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":77:13)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":74:37)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":74:30)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":74:17)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":78:17)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:24)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":67:23)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":85:1)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":113:1)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":87:5)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":87:9)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":87:11)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":88:5)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":88:9)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":90:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":90:12)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":90:5)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:5)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":96:5)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:9)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:16)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:20)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:18)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":92:5)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":95:16)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":95:9)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:24)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":91:23)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:5)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":112:5)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:13)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:9)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:16)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:20)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:18)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":98:5)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":99:9)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":111:9)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":100:13)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":100:34)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":103:13)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":110:13)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":103:17)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":103:24)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":103:22)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":104:13)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":106:13)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":108:13)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":105:37)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":105:30)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":105:17)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":109:27)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":109:17)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:24)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_fscanf_17.c":97:23)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc6, #loc7])
#loc172 = loc(fused[#loc8, #loc9])
#loc173 = loc(fused[#loc11, #loc12])
#loc174 = loc(fused[#loc13, #loc14])
#loc175 = loc(fused[#loc13, #loc15])
#loc176 = loc(fused[#loc16, #loc17])
#loc177 = loc(fused[#loc20, #loc18])
#loc178 = loc(fused[#loc21, #loc22])
#loc179 = loc(fused[#loc24, #loc23])
#loc180 = loc(fused[#loc25, #loc26])
#loc181 = loc(fused[#loc28, #loc22])
#loc182 = loc(fused[#loc32, #loc31])
#loc183 = loc(fused[#loc33, #loc34])
#loc184 = loc(fused[#loc36, #loc35])
#loc185 = loc(fused[#loc37, #loc38])
#loc186 = loc(fused[#loc40, #loc34])
#loc187 = loc(fused[#loc41, #loc42])
#loc188 = loc(fused[#loc43, #loc44])
#loc189 = loc(fused[#loc45, #loc46])
#loc190 = loc(fused[#loc47, #loc48])
#loc191 = loc(fused[#loc50, #loc51, #loc52, #loc46])
#loc192 = loc(fused[#loc58, #loc57])
#loc193 = loc(fused[#loc59, #loc60])
#loc194 = loc(fused[#loc61, #loc62])
#loc195 = loc(fused[#loc63, #loc64])
#loc196 = loc(fused[#loc66, #loc67])
#loc197 = loc(fused[#loc68, #loc69])
#loc198 = loc(fused[#loc68, #loc70])
#loc199 = loc(fused[#loc71, #loc72])
#loc200 = loc(fused[#loc75, #loc73])
#loc201 = loc(fused[#loc76, #loc77])
#loc202 = loc(fused[#loc79, #loc78])
#loc203 = loc(fused[#loc80, #loc81])
#loc204 = loc(fused[#loc83, #loc77])
#loc205 = loc(fused[#loc88, #loc87])
#loc206 = loc(fused[#loc89, #loc90])
#loc207 = loc(fused[#loc92, #loc91])
#loc208 = loc(fused[#loc93, #loc94])
#loc209 = loc(fused[#loc96, #loc90])
#loc210 = loc(fused[#loc97, #loc98])
#loc211 = loc(fused[#loc99, #loc100])
#loc212 = loc(fused[#loc101, #loc102])
#loc213 = loc(fused[#loc103, #loc104])
#loc214 = loc(fused[#loc107, #loc109])
#loc215 = loc(fused[#loc111, #loc112, #loc113, #loc102])
#loc216 = loc(fused[#loc119, #loc118])
#loc217 = loc(fused[#loc120, #loc121])
#loc218 = loc(fused[#loc122, #loc123])
#loc219 = loc(fused[#loc122, #loc124])
#loc220 = loc(fused[#loc125, #loc126])
#loc221 = loc(fused[#loc129, #loc127])
#loc222 = loc(fused[#loc130, #loc131])
#loc223 = loc(fused[#loc133, #loc132])
#loc224 = loc(fused[#loc134, #loc135])
#loc225 = loc(fused[#loc137, #loc131])
#loc226 = loc(fused[#loc139, #loc138])
#loc227 = loc(fused[#loc141, #loc140])
#loc228 = loc(fused[#loc142, #loc143])
#loc229 = loc(fused[#loc145, #loc144])
#loc230 = loc(fused[#loc146, #loc147])
#loc231 = loc(fused[#loc149, #loc143])
#loc232 = loc(fused[#loc150, #loc151])
#loc233 = loc(fused[#loc152, #loc153])
#loc234 = loc(fused[#loc154, #loc155])
#loc235 = loc(fused[#loc156, #loc157])
#loc236 = loc(fused[#loc159, #loc160, #loc161, #loc155])
#loc237 = loc(fused[#loc168, #loc167])
