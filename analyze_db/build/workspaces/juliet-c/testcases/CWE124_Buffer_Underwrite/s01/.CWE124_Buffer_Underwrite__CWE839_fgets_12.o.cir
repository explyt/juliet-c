!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc346)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc347)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc348)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc349)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc351)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc356)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc356)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc25)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc359)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc359)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc359)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc37)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc37)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc37)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc37)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc37)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc37)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc37)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc37)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc361)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc45)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc363)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc48)
            } loc(#loc362)
          } loc(#loc360)
        } loc(#loc358)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc49)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc364)
      } loc(#loc357)
    } loc(#loc355)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc366)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc366)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc53)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc53)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc369)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc370)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc370)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc370)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc67)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc372)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc73)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc73)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc374)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc76)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc376)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc79)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc377)
                  cir.condition(%20) loc(#loc80)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc83)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc83)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc84)
                  } loc(#loc378)
                  cir.yield loc(#loc75)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc86)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc379)
                  cir.yield loc(#loc375)
                } loc(#loc375)
              } loc(#loc375)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc87)
            } loc(#loc373)
          } loc(#loc371)
        } loc(#loc368)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc381)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc382)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc382)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc382)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc97)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc384)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc100)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc385)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc98)
                cir.yield %18 : !cir.bool loc(#loc98)
              }, false {
                %18 = cir.const #false loc(#loc98)
                cir.yield %18 : !cir.bool loc(#loc98)
              }) : (!cir.bool) -> !cir.bool loc(#loc98)
              cir.yield %17 : !cir.bool loc(#loc98)
            }, false {
              %14 = cir.const #false loc(#loc98)
              cir.yield %14 : !cir.bool loc(#loc98)
            }) : (!cir.bool) -> !cir.bool loc(#loc98)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc107)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc107)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc387)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc110)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc389)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc113)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc390)
                  cir.condition(%21) loc(#loc114)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc117)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc117)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc118)
                  } loc(#loc391)
                  cir.yield loc(#loc109)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc120)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc392)
                  cir.yield loc(#loc388)
                } loc(#loc388)
              } loc(#loc388)
            } else {
              %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc15)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc15)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc121)
            } loc(#loc386)
          } loc(#loc383)
        } loc(#loc380)
      } loc(#loc367)
    } loc(#loc365)
    cir.return loc(#loc17)
  } loc(#loc352)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc394)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc124)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc395)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc126)
    cir.return loc(#loc123)
  } loc(#loc393)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc397)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc400)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc400)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc137)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc137)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc403)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc403)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc403)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc148)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc149)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc149)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc149)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc149)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc149)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc149)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc149)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc149)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc150)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc151)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc405)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc156)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc157)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc407)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc160)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc160)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc161)
            } loc(#loc406)
          } loc(#loc404)
        } loc(#loc402)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc409)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc409)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc409)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc168)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc169)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc169)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc169)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc169)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc169)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc169)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc169)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc169)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc170)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc171)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc411)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc176)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc177)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc413)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc180)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc180)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc181)
            } loc(#loc412)
          } loc(#loc410)
        } loc(#loc408)
      } loc(#loc401)
    } loc(#loc399)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc415)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc415)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc184)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc184)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc418)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc419)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc419)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc419)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc198)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc421)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc201)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc422)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc199)
                cir.yield %18 : !cir.bool loc(#loc199)
              }, false {
                %18 = cir.const #false loc(#loc199)
                cir.yield %18 : !cir.bool loc(#loc199)
              }) : (!cir.bool) -> !cir.bool loc(#loc199)
              cir.yield %17 : !cir.bool loc(#loc199)
            }, false {
              %14 = cir.const #false loc(#loc199)
              cir.yield %14 : !cir.bool loc(#loc199)
            }) : (!cir.bool) -> !cir.bool loc(#loc199)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc206)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc208)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc208)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc424)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc211)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc426)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc214)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc427)
                  cir.condition(%21) loc(#loc215)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc218)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc218)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc219)
                  } loc(#loc428)
                  cir.yield loc(#loc210)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                  %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc221)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc429)
                  cir.yield loc(#loc425)
                } loc(#loc425)
              } loc(#loc425)
            } else {
              %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc222)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc222)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc223)
            } loc(#loc423)
          } loc(#loc420)
        } loc(#loc417)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc431)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc432)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc432)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc432)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc233)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc434)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc236)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc435)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc234)
                cir.yield %18 : !cir.bool loc(#loc234)
              }, false {
                %18 = cir.const #false loc(#loc234)
                cir.yield %18 : !cir.bool loc(#loc234)
              }) : (!cir.bool) -> !cir.bool loc(#loc234)
              cir.yield %17 : !cir.bool loc(#loc234)
            }, false {
              %14 = cir.const #false loc(#loc234)
              cir.yield %14 : !cir.bool loc(#loc234)
            }) : (!cir.bool) -> !cir.bool loc(#loc234)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc241)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc243)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc243)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc437)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc246)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc439)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc249)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc440)
                  cir.condition(%21) loc(#loc250)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc253)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc253)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc253)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc254)
                  } loc(#loc441)
                  cir.yield loc(#loc245)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc255)
                  %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc256)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc442)
                  cir.yield loc(#loc438)
                } loc(#loc438)
              } loc(#loc438)
            } else {
              %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc257)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc257)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc258)
            } loc(#loc436)
          } loc(#loc433)
        } loc(#loc430)
      } loc(#loc416)
    } loc(#loc414)
    cir.return loc(#loc129)
  } loc(#loc396)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc444)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc264)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc447)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc447)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc268)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc268)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc273)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc275)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc450)
      } loc(#loc448)
    } loc(#loc446)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc452)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc452)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc279)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc279)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc455)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc456)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc456)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc456)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc293)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc458)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc297)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc298)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc299)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc299)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc460)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc302)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc462)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc305)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc463)
                  cir.condition(%20) loc(#loc306)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc309)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc309)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc309)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc310)
                  } loc(#loc464)
                  cir.yield loc(#loc301)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc311)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc312)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc465)
                  cir.yield loc(#loc461)
                } loc(#loc461)
              } loc(#loc461)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc313)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc313)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc314)
            } loc(#loc459)
          } loc(#loc457)
        } loc(#loc454)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc467)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc468)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc468)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc468)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc323)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc324)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc470)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc328)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc329)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc330)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc330)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc472)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc333)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc474)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc335)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc336)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc475)
                  cir.condition(%20) loc(#loc337)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc340)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc340)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc340)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc341)
                  } loc(#loc476)
                  cir.yield loc(#loc332)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc343)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc477)
                  cir.yield loc(#loc473)
                } loc(#loc473)
              } loc(#loc473)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc344)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc344)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc345)
            } loc(#loc471)
          } loc(#loc469)
        } loc(#loc466)
      } loc(#loc453)
    } loc(#loc451)
    cir.return loc(#loc260)
  } loc(#loc443)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":69:27)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":90:27)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":24:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":94:1)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":26:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":26:9)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":28:13)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":28:12)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":28:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":29:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":50:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":29:8)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":29:33)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":30:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":44:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":46:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":31:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":43:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":32:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":32:49)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":42:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:23)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:36)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:53)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:17)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:63)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":35:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":38:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":40:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:29)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:24)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:40)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":41:17)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":49:16)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":49:9)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":51:5)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":93:5)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":51:8)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":51:33)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":52:5)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":72:5)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":74:5)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":53:9)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":71:9)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":54:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":54:17)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":55:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":55:34)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":58:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":70:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":58:17)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":58:24)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":59:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":66:13)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":68:13)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":60:32)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":60:24)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":60:17)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":65:17)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:25)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:21)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:28)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:32)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:30)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":63:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":64:41)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":64:34)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":64:21)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:37)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:36)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":69:17)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":75:9)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":92:9)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":76:13)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":76:17)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":77:13)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":77:34)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:13)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":91:13)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:17)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:25)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:27)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:30)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:38)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:40)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":80:13)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":87:13)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":89:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":81:32)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":81:24)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":81:17)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:17)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":86:17)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:25)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:21)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:28)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:32)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:30)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":84:17)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":85:41)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":85:34)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":85:21)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:37)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:36)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":90:17)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":250:1)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":254:1)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":252:5)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":252:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":253:5)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":253:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":103:1)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":182:1)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":105:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":105:9)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":107:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":107:12)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":107:5)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":108:5)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":139:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":108:8)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":108:33)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":109:5)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":123:5)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":125:5)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":110:9)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":122:9)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":111:13)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":111:49)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:13)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":121:13)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:23)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:36)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:53)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:17)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:63)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":114:13)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":117:13)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":119:13)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:29)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:24)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:17)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:40)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":120:27)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":120:17)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":126:9)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":138:9)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":127:13)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":127:49)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:13)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":137:13)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:23)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:36)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:53)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:17)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:63)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":130:13)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":133:13)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":135:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:29)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:24)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:17)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:40)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":136:27)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":136:17)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":140:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":181:5)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":140:8)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":140:33)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":141:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":160:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":162:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":142:9)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":159:9)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":143:13)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":143:17)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":144:13)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":144:34)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:13)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":158:13)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:17)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:25)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:27)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:30)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:38)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:40)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":147:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":154:13)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":156:13)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":148:32)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":148:24)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":148:17)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":153:17)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:25)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:21)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:28)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:32)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:30)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":151:17)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":152:41)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":152:34)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":152:21)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:37)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:36)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":157:27)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":157:17)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":163:9)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":180:9)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":164:13)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":164:17)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":165:13)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":165:34)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:13)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":179:13)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:17)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:25)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:27)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:30)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:38)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:40)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":168:13)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":175:13)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":177:13)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":169:32)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":169:24)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":169:17)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:17)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":174:17)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:25)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:21)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:28)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:32)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:30)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":172:17)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":173:41)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":173:34)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":173:21)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:37)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:36)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":178:27)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":178:17)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":187:1)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":248:1)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":189:5)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":189:9)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":191:13)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":191:12)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":191:5)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":192:5)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":203:5)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":192:8)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":192:33)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":193:5)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":197:5)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":199:5)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":196:16)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":196:9)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":202:16)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":202:9)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":204:5)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":247:5)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":204:8)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":204:33)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":205:5)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":225:5)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":227:5)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":206:9)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":224:9)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":207:13)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":207:17)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":208:13)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":208:34)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":211:13)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":223:13)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":211:17)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":211:24)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":212:13)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":219:13)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":221:13)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":213:32)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":213:24)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":213:17)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:17)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":218:17)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:25)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:21)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:28)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:32)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:30)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":216:17)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":217:41)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":217:34)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":217:21)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:37)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:36)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":222:27)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":222:17)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":228:9)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":246:9)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":229:13)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":229:17)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":230:13)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":230:34)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":233:13)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":245:13)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":233:17)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":233:24)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":234:13)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":241:13)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":243:13)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":235:32)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":235:24)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":235:17)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:17)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":240:17)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:25)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:21)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:28)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:32)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:30)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":238:17)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":239:41)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":239:34)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":239:21)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:37)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:36)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":244:27)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":244:17)
#loc346 = loc(fused[#loc1, #loc2])
#loc347 = loc(fused[#loc3, #loc4])
#loc348 = loc(fused[#loc5, #loc6])
#loc349 = loc(fused[#loc7, #loc8])
#loc350 = loc(fused[#loc9, #loc10])
#loc351 = loc(fused[#loc12, #loc13])
#loc352 = loc(fused[#loc16, #loc17])
#loc353 = loc(fused[#loc18, #loc19])
#loc354 = loc(fused[#loc22, #loc20])
#loc355 = loc(fused[#loc23, #loc24])
#loc356 = loc(fused[#loc25, #loc26])
#loc357 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc358 = loc(fused[#loc30, #loc31])
#loc359 = loc(fused[#loc32, #loc33])
#loc360 = loc(fused[#loc34, #loc35])
#loc361 = loc(fused[#loc39, #loc40])
#loc362 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc363 = loc(fused[#loc46, #loc47])
#loc364 = loc(fused[#loc50, #loc49])
#loc365 = loc(fused[#loc51, #loc52])
#loc366 = loc(fused[#loc53, #loc54])
#loc367 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc368 = loc(fused[#loc58, #loc59])
#loc369 = loc(fused[#loc60, #loc61])
#loc370 = loc(fused[#loc62, #loc63])
#loc371 = loc(fused[#loc64, #loc65])
#loc372 = loc(fused[#loc66, #loc67])
#loc373 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc374 = loc(fused[#loc73, #loc71])
#loc375 = loc(fused[#loc74, #loc75])
#loc376 = loc(fused[#loc77, #loc76])
#loc377 = loc(fused[#loc78, #loc79])
#loc378 = loc(fused[#loc81, #loc75])
#loc379 = loc(fused[#loc86, #loc85])
#loc380 = loc(fused[#loc88, #loc89])
#loc381 = loc(fused[#loc90, #loc91])
#loc382 = loc(fused[#loc92, #loc93])
#loc383 = loc(fused[#loc94, #loc95])
#loc384 = loc(fused[#loc96, #loc97])
#loc385 = loc(fused[#loc99, #loc101])
#loc386 = loc(fused[#loc102, #loc103, #loc104, #loc95])
#loc387 = loc(fused[#loc107, #loc105])
#loc388 = loc(fused[#loc108, #loc109])
#loc389 = loc(fused[#loc111, #loc110])
#loc390 = loc(fused[#loc112, #loc113])
#loc391 = loc(fused[#loc115, #loc109])
#loc392 = loc(fused[#loc120, #loc119])
#loc393 = loc(fused[#loc122, #loc123])
#loc394 = loc(fused[#loc124, #loc125])
#loc395 = loc(fused[#loc126, #loc127])
#loc396 = loc(fused[#loc128, #loc129])
#loc397 = loc(fused[#loc130, #loc131])
#loc398 = loc(fused[#loc134, #loc132])
#loc399 = loc(fused[#loc135, #loc136])
#loc400 = loc(fused[#loc137, #loc138])
#loc401 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc402 = loc(fused[#loc142, #loc143])
#loc403 = loc(fused[#loc144, #loc145])
#loc404 = loc(fused[#loc146, #loc147])
#loc405 = loc(fused[#loc151, #loc152])
#loc406 = loc(fused[#loc153, #loc154, #loc155, #loc147])
#loc407 = loc(fused[#loc158, #loc159])
#loc408 = loc(fused[#loc162, #loc163])
#loc409 = loc(fused[#loc164, #loc165])
#loc410 = loc(fused[#loc166, #loc167])
#loc411 = loc(fused[#loc171, #loc172])
#loc412 = loc(fused[#loc173, #loc174, #loc175, #loc167])
#loc413 = loc(fused[#loc178, #loc179])
#loc414 = loc(fused[#loc182, #loc183])
#loc415 = loc(fused[#loc184, #loc185])
#loc416 = loc(fused[#loc186, #loc187, #loc188, #loc183])
#loc417 = loc(fused[#loc189, #loc190])
#loc418 = loc(fused[#loc191, #loc192])
#loc419 = loc(fused[#loc193, #loc194])
#loc420 = loc(fused[#loc195, #loc196])
#loc421 = loc(fused[#loc197, #loc198])
#loc422 = loc(fused[#loc200, #loc202])
#loc423 = loc(fused[#loc203, #loc204, #loc205, #loc196])
#loc424 = loc(fused[#loc208, #loc206])
#loc425 = loc(fused[#loc209, #loc210])
#loc426 = loc(fused[#loc212, #loc211])
#loc427 = loc(fused[#loc213, #loc214])
#loc428 = loc(fused[#loc216, #loc210])
#loc429 = loc(fused[#loc221, #loc220])
#loc430 = loc(fused[#loc224, #loc225])
#loc431 = loc(fused[#loc226, #loc227])
#loc432 = loc(fused[#loc228, #loc229])
#loc433 = loc(fused[#loc230, #loc231])
#loc434 = loc(fused[#loc232, #loc233])
#loc435 = loc(fused[#loc235, #loc237])
#loc436 = loc(fused[#loc238, #loc239, #loc240, #loc231])
#loc437 = loc(fused[#loc243, #loc241])
#loc438 = loc(fused[#loc244, #loc245])
#loc439 = loc(fused[#loc247, #loc246])
#loc440 = loc(fused[#loc248, #loc249])
#loc441 = loc(fused[#loc251, #loc245])
#loc442 = loc(fused[#loc256, #loc255])
#loc443 = loc(fused[#loc259, #loc260])
#loc444 = loc(fused[#loc261, #loc262])
#loc445 = loc(fused[#loc265, #loc263])
#loc446 = loc(fused[#loc266, #loc267])
#loc447 = loc(fused[#loc268, #loc269])
#loc448 = loc(fused[#loc270, #loc271, #loc272, #loc267])
#loc449 = loc(fused[#loc274, #loc273])
#loc450 = loc(fused[#loc276, #loc275])
#loc451 = loc(fused[#loc277, #loc278])
#loc452 = loc(fused[#loc279, #loc280])
#loc453 = loc(fused[#loc281, #loc282, #loc283, #loc278])
#loc454 = loc(fused[#loc284, #loc285])
#loc455 = loc(fused[#loc286, #loc287])
#loc456 = loc(fused[#loc288, #loc289])
#loc457 = loc(fused[#loc290, #loc291])
#loc458 = loc(fused[#loc292, #loc293])
#loc459 = loc(fused[#loc294, #loc295, #loc296, #loc291])
#loc460 = loc(fused[#loc299, #loc297])
#loc461 = loc(fused[#loc300, #loc301])
#loc462 = loc(fused[#loc303, #loc302])
#loc463 = loc(fused[#loc304, #loc305])
#loc464 = loc(fused[#loc307, #loc301])
#loc465 = loc(fused[#loc312, #loc311])
#loc466 = loc(fused[#loc315, #loc316])
#loc467 = loc(fused[#loc317, #loc318])
#loc468 = loc(fused[#loc319, #loc320])
#loc469 = loc(fused[#loc321, #loc322])
#loc470 = loc(fused[#loc323, #loc324])
#loc471 = loc(fused[#loc325, #loc326, #loc327, #loc322])
#loc472 = loc(fused[#loc330, #loc328])
#loc473 = loc(fused[#loc331, #loc332])
#loc474 = loc(fused[#loc334, #loc333])
#loc475 = loc(fused[#loc335, #loc336])
#loc476 = loc(fused[#loc338, #loc332])
#loc477 = loc(fused[#loc343, #loc342])
