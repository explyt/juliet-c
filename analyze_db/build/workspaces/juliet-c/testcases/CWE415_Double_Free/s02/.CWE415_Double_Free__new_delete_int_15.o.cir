!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc159)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func @_ZN37CWE415_Double_Free__new_delete_int_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc164)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc166)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc166)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc22)
          cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc20)
          cir.break loc(#loc23)
        } loc(#loc17)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc25)
          cir.break loc(#loc26)
        } loc(#loc24)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc165)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc29)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc31)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc20)
          cir.break loc(#loc32)
        } loc(#loc30)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          cir.break loc(#loc36)
        } loc(#loc33)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc168)
    cir.return loc(#loc9)
  } loc(#loc162)
  cir.func internal private @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc41)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc45)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc173)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc49)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc173)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc174)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc51)
          cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
          cir.break loc(#loc52)
        } loc(#loc46)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          cir.break loc(#loc56)
        } loc(#loc53)
        cir.yield loc(#loc43)
      } loc(#loc43)
    } loc(#loc172)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc59)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc62)
          cir.break loc(#loc63)
        } loc(#loc60)
        cir.case(default, []) {
          cir.break loc(#loc65)
        } loc(#loc64)
        cir.yield loc(#loc57)
      } loc(#loc57)
    } loc(#loc175)
    cir.return loc(#loc38)
  } loc(#loc169)
  cir.func internal private @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc70)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc178)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc74)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc180)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc78)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc180)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc80)
          cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc78)
          cir.break loc(#loc81)
        } loc(#loc75)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc83)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc83)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          cir.break loc(#loc85)
        } loc(#loc82)
        cir.yield loc(#loc72)
      } loc(#loc72)
    } loc(#loc179)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc88)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc90)
        } loc(#loc89)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc93)
          cir.break loc(#loc94)
        } loc(#loc91)
        cir.yield loc(#loc86)
      } loc(#loc86)
    } loc(#loc182)
    cir.return loc(#loc67)
  } loc(#loc176)
  cir.func internal private @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc99)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc103)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc106)
          cir.break loc(#loc107)
        } loc(#loc104)
        cir.case(default, []) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc187)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc111)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc187)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc188)
          cir.break loc(#loc113)
        } loc(#loc108)
        cir.yield loc(#loc101)
      } loc(#loc101)
    } loc(#loc186)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc116)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc118)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
          cir.break loc(#loc119)
        } loc(#loc117)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc122)
          cir.break loc(#loc123)
        } loc(#loc120)
        cir.yield loc(#loc114)
      } loc(#loc114)
    } loc(#loc189)
    cir.return loc(#loc96)
  } loc(#loc183)
  cir.func internal private @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc128)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc132)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc194)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc136)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc194)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
          cir.break loc(#loc138)
        } loc(#loc133)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc141)
          cir.break loc(#loc142)
        } loc(#loc139)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc193)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc145)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc147)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc136)
          cir.break loc(#loc148)
        } loc(#loc146)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc150)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc150)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc151)
          cir.break loc(#loc152)
        } loc(#loc149)
        cir.yield loc(#loc143)
      } loc(#loc143)
    } loc(#loc196)
    cir.return loc(#loc125)
  } loc(#loc190)
  cir.func @_ZN37CWE415_Double_Free__new_delete_int_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G1Ev() : () -> () loc(#loc155)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G2Ev() : () -> () loc(#loc156)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B1Ev() : () -> () loc(#loc157)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B2Ev() : () -> () loc(#loc158)
    cir.return loc(#loc154)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int_15.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE415_Double_Free__new_delete_int_15.cpp":40:19)
#loc8 = loc("CWE415_Double_Free__new_delete_int_15.cpp":26:1)
#loc9 = loc("CWE415_Double_Free__new_delete_int_15.cpp":54:1)
#loc10 = loc("CWE415_Double_Free__new_delete_int_15.cpp":28:5)
#loc11 = loc("CWE415_Double_Free__new_delete_int_15.cpp":28:11)
#loc12 = loc("CWE415_Double_Free__new_delete_int_15.cpp":30:12)
#loc13 = loc("CWE415_Double_Free__new_delete_int_15.cpp":30:5)
#loc14 = loc("CWE415_Double_Free__new_delete_int_15.cpp":31:5)
#loc15 = loc("CWE415_Double_Free__new_delete_int_15.cpp":42:5)
#loc16 = loc("CWE415_Double_Free__new_delete_int_15.cpp":31:12)
#loc17 = loc("CWE415_Double_Free__new_delete_int_15.cpp":33:5)
#loc18 = loc("CWE415_Double_Free__new_delete_int_15.cpp":34:16)
#loc19 = loc("CWE415_Double_Free__new_delete_int_15.cpp":34:20)
#loc20 = loc("CWE415_Double_Free__new_delete_int_15.cpp":26:6)
#loc21 = loc("CWE415_Double_Free__new_delete_int_15.cpp":34:9)
#loc22 = loc("CWE415_Double_Free__new_delete_int_15.cpp":36:16)
#loc23 = loc("CWE415_Double_Free__new_delete_int_15.cpp":37:9)
#loc24 = loc("CWE415_Double_Free__new_delete_int_15.cpp":38:5)
#loc25 = loc("CWE415_Double_Free__new_delete_int_15.cpp":40:9)
#loc26 = loc("CWE415_Double_Free__new_delete_int_15.cpp":41:9)
#loc27 = loc("CWE415_Double_Free__new_delete_int_15.cpp":43:5)
#loc28 = loc("CWE415_Double_Free__new_delete_int_15.cpp":53:5)
#loc29 = loc("CWE415_Double_Free__new_delete_int_15.cpp":43:12)
#loc30 = loc("CWE415_Double_Free__new_delete_int_15.cpp":45:5)
#loc31 = loc("CWE415_Double_Free__new_delete_int_15.cpp":47:16)
#loc32 = loc("CWE415_Double_Free__new_delete_int_15.cpp":48:9)
#loc33 = loc("CWE415_Double_Free__new_delete_int_15.cpp":49:5)
#loc34 = loc("CWE415_Double_Free__new_delete_int_15.cpp":51:19)
#loc35 = loc("CWE415_Double_Free__new_delete_int_15.cpp":51:9)
#loc36 = loc("CWE415_Double_Free__new_delete_int_15.cpp":52:9)
#loc37 = loc("CWE415_Double_Free__new_delete_int_15.cpp":61:1)
#loc38 = loc("CWE415_Double_Free__new_delete_int_15.cpp":90:1)
#loc39 = loc("CWE415_Double_Free__new_delete_int_15.cpp":63:5)
#loc40 = loc("CWE415_Double_Free__new_delete_int_15.cpp":63:11)
#loc41 = loc("CWE415_Double_Free__new_delete_int_15.cpp":65:12)
#loc42 = loc("CWE415_Double_Free__new_delete_int_15.cpp":65:5)
#loc43 = loc("CWE415_Double_Free__new_delete_int_15.cpp":66:5)
#loc44 = loc("CWE415_Double_Free__new_delete_int_15.cpp":77:5)
#loc45 = loc("CWE415_Double_Free__new_delete_int_15.cpp":66:12)
#loc46 = loc("CWE415_Double_Free__new_delete_int_15.cpp":68:5)
#loc47 = loc("CWE415_Double_Free__new_delete_int_15.cpp":69:16)
#loc48 = loc("CWE415_Double_Free__new_delete_int_15.cpp":69:20)
#loc49 = loc("CWE415_Double_Free__new_delete_int_15.cpp":61:13)
#loc50 = loc("CWE415_Double_Free__new_delete_int_15.cpp":69:9)
#loc51 = loc("CWE415_Double_Free__new_delete_int_15.cpp":71:16)
#loc52 = loc("CWE415_Double_Free__new_delete_int_15.cpp":72:9)
#loc53 = loc("CWE415_Double_Free__new_delete_int_15.cpp":73:5)
#loc54 = loc("CWE415_Double_Free__new_delete_int_15.cpp":75:19)
#loc55 = loc("CWE415_Double_Free__new_delete_int_15.cpp":75:9)
#loc56 = loc("CWE415_Double_Free__new_delete_int_15.cpp":76:9)
#loc57 = loc("CWE415_Double_Free__new_delete_int_15.cpp":78:5)
#loc58 = loc("CWE415_Double_Free__new_delete_int_15.cpp":89:5)
#loc59 = loc("CWE415_Double_Free__new_delete_int_15.cpp":78:12)
#loc60 = loc("CWE415_Double_Free__new_delete_int_15.cpp":80:5)
#loc61 = loc("CWE415_Double_Free__new_delete_int_15.cpp":82:19)
#loc62 = loc("CWE415_Double_Free__new_delete_int_15.cpp":82:9)
#loc63 = loc("CWE415_Double_Free__new_delete_int_15.cpp":83:9)
#loc64 = loc("CWE415_Double_Free__new_delete_int_15.cpp":84:5)
#loc65 = loc("CWE415_Double_Free__new_delete_int_15.cpp":88:9)
#loc66 = loc("CWE415_Double_Free__new_delete_int_15.cpp":93:1)
#loc67 = loc("CWE415_Double_Free__new_delete_int_15.cpp":122:1)
#loc68 = loc("CWE415_Double_Free__new_delete_int_15.cpp":95:5)
#loc69 = loc("CWE415_Double_Free__new_delete_int_15.cpp":95:11)
#loc70 = loc("CWE415_Double_Free__new_delete_int_15.cpp":97:12)
#loc71 = loc("CWE415_Double_Free__new_delete_int_15.cpp":97:5)
#loc72 = loc("CWE415_Double_Free__new_delete_int_15.cpp":98:5)
#loc73 = loc("CWE415_Double_Free__new_delete_int_15.cpp":109:5)
#loc74 = loc("CWE415_Double_Free__new_delete_int_15.cpp":98:12)
#loc75 = loc("CWE415_Double_Free__new_delete_int_15.cpp":100:5)
#loc76 = loc("CWE415_Double_Free__new_delete_int_15.cpp":101:16)
#loc77 = loc("CWE415_Double_Free__new_delete_int_15.cpp":101:20)
#loc78 = loc("CWE415_Double_Free__new_delete_int_15.cpp":93:13)
#loc79 = loc("CWE415_Double_Free__new_delete_int_15.cpp":101:9)
#loc80 = loc("CWE415_Double_Free__new_delete_int_15.cpp":103:16)
#loc81 = loc("CWE415_Double_Free__new_delete_int_15.cpp":104:9)
#loc82 = loc("CWE415_Double_Free__new_delete_int_15.cpp":105:5)
#loc83 = loc("CWE415_Double_Free__new_delete_int_15.cpp":107:19)
#loc84 = loc("CWE415_Double_Free__new_delete_int_15.cpp":107:9)
#loc85 = loc("CWE415_Double_Free__new_delete_int_15.cpp":108:9)
#loc86 = loc("CWE415_Double_Free__new_delete_int_15.cpp":110:5)
#loc87 = loc("CWE415_Double_Free__new_delete_int_15.cpp":121:5)
#loc88 = loc("CWE415_Double_Free__new_delete_int_15.cpp":110:12)
#loc89 = loc("CWE415_Double_Free__new_delete_int_15.cpp":112:5)
#loc90 = loc("CWE415_Double_Free__new_delete_int_15.cpp":116:9)
#loc91 = loc("CWE415_Double_Free__new_delete_int_15.cpp":117:5)
#loc92 = loc("CWE415_Double_Free__new_delete_int_15.cpp":119:19)
#loc93 = loc("CWE415_Double_Free__new_delete_int_15.cpp":119:9)
#loc94 = loc("CWE415_Double_Free__new_delete_int_15.cpp":120:9)
#loc95 = loc("CWE415_Double_Free__new_delete_int_15.cpp":125:1)
#loc96 = loc("CWE415_Double_Free__new_delete_int_15.cpp":152:1)
#loc97 = loc("CWE415_Double_Free__new_delete_int_15.cpp":127:5)
#loc98 = loc("CWE415_Double_Free__new_delete_int_15.cpp":127:11)
#loc99 = loc("CWE415_Double_Free__new_delete_int_15.cpp":129:12)
#loc100 = loc("CWE415_Double_Free__new_delete_int_15.cpp":129:5)
#loc101 = loc("CWE415_Double_Free__new_delete_int_15.cpp":130:5)
#loc102 = loc("CWE415_Double_Free__new_delete_int_15.cpp":140:5)
#loc103 = loc("CWE415_Double_Free__new_delete_int_15.cpp":130:12)
#loc104 = loc("CWE415_Double_Free__new_delete_int_15.cpp":132:5)
#loc105 = loc("CWE415_Double_Free__new_delete_int_15.cpp":134:19)
#loc106 = loc("CWE415_Double_Free__new_delete_int_15.cpp":134:9)
#loc107 = loc("CWE415_Double_Free__new_delete_int_15.cpp":135:9)
#loc108 = loc("CWE415_Double_Free__new_delete_int_15.cpp":136:5)
#loc109 = loc("CWE415_Double_Free__new_delete_int_15.cpp":137:16)
#loc110 = loc("CWE415_Double_Free__new_delete_int_15.cpp":137:20)
#loc111 = loc("CWE415_Double_Free__new_delete_int_15.cpp":125:13)
#loc112 = loc("CWE415_Double_Free__new_delete_int_15.cpp":137:9)
#loc113 = loc("CWE415_Double_Free__new_delete_int_15.cpp":139:9)
#loc114 = loc("CWE415_Double_Free__new_delete_int_15.cpp":141:5)
#loc115 = loc("CWE415_Double_Free__new_delete_int_15.cpp":151:5)
#loc116 = loc("CWE415_Double_Free__new_delete_int_15.cpp":141:12)
#loc117 = loc("CWE415_Double_Free__new_delete_int_15.cpp":143:5)
#loc118 = loc("CWE415_Double_Free__new_delete_int_15.cpp":145:16)
#loc119 = loc("CWE415_Double_Free__new_delete_int_15.cpp":146:9)
#loc120 = loc("CWE415_Double_Free__new_delete_int_15.cpp":147:5)
#loc121 = loc("CWE415_Double_Free__new_delete_int_15.cpp":149:19)
#loc122 = loc("CWE415_Double_Free__new_delete_int_15.cpp":149:9)
#loc123 = loc("CWE415_Double_Free__new_delete_int_15.cpp":150:9)
#loc124 = loc("CWE415_Double_Free__new_delete_int_15.cpp":155:1)
#loc125 = loc("CWE415_Double_Free__new_delete_int_15.cpp":182:1)
#loc126 = loc("CWE415_Double_Free__new_delete_int_15.cpp":157:5)
#loc127 = loc("CWE415_Double_Free__new_delete_int_15.cpp":157:11)
#loc128 = loc("CWE415_Double_Free__new_delete_int_15.cpp":159:12)
#loc129 = loc("CWE415_Double_Free__new_delete_int_15.cpp":159:5)
#loc130 = loc("CWE415_Double_Free__new_delete_int_15.cpp":160:5)
#loc131 = loc("CWE415_Double_Free__new_delete_int_15.cpp":170:5)
#loc132 = loc("CWE415_Double_Free__new_delete_int_15.cpp":160:12)
#loc133 = loc("CWE415_Double_Free__new_delete_int_15.cpp":162:5)
#loc134 = loc("CWE415_Double_Free__new_delete_int_15.cpp":163:16)
#loc135 = loc("CWE415_Double_Free__new_delete_int_15.cpp":163:20)
#loc136 = loc("CWE415_Double_Free__new_delete_int_15.cpp":155:13)
#loc137 = loc("CWE415_Double_Free__new_delete_int_15.cpp":163:9)
#loc138 = loc("CWE415_Double_Free__new_delete_int_15.cpp":165:9)
#loc139 = loc("CWE415_Double_Free__new_delete_int_15.cpp":166:5)
#loc140 = loc("CWE415_Double_Free__new_delete_int_15.cpp":168:19)
#loc141 = loc("CWE415_Double_Free__new_delete_int_15.cpp":168:9)
#loc142 = loc("CWE415_Double_Free__new_delete_int_15.cpp":169:9)
#loc143 = loc("CWE415_Double_Free__new_delete_int_15.cpp":171:5)
#loc144 = loc("CWE415_Double_Free__new_delete_int_15.cpp":181:5)
#loc145 = loc("CWE415_Double_Free__new_delete_int_15.cpp":171:12)
#loc146 = loc("CWE415_Double_Free__new_delete_int_15.cpp":173:5)
#loc147 = loc("CWE415_Double_Free__new_delete_int_15.cpp":175:16)
#loc148 = loc("CWE415_Double_Free__new_delete_int_15.cpp":176:9)
#loc149 = loc("CWE415_Double_Free__new_delete_int_15.cpp":177:5)
#loc150 = loc("CWE415_Double_Free__new_delete_int_15.cpp":179:19)
#loc151 = loc("CWE415_Double_Free__new_delete_int_15.cpp":179:9)
#loc152 = loc("CWE415_Double_Free__new_delete_int_15.cpp":180:9)
#loc153 = loc("CWE415_Double_Free__new_delete_int_15.cpp":184:1)
#loc154 = loc("CWE415_Double_Free__new_delete_int_15.cpp":190:1)
#loc155 = loc("CWE415_Double_Free__new_delete_int_15.cpp":186:5)
#loc156 = loc("CWE415_Double_Free__new_delete_int_15.cpp":187:5)
#loc157 = loc("CWE415_Double_Free__new_delete_int_15.cpp":188:5)
#loc158 = loc("CWE415_Double_Free__new_delete_int_15.cpp":189:5)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc8, #loc9])
#loc163 = loc(fused[#loc10, #loc11])
#loc164 = loc(fused[#loc13, #loc12])
#loc165 = loc(fused[#loc14, #loc15])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc21, #loc19])
#loc168 = loc(fused[#loc27, #loc28])
#loc169 = loc(fused[#loc37, #loc38])
#loc170 = loc(fused[#loc39, #loc40])
#loc171 = loc(fused[#loc42, #loc41])
#loc172 = loc(fused[#loc43, #loc44])
#loc173 = loc(fused[#loc47, #loc48])
#loc174 = loc(fused[#loc50, #loc48])
#loc175 = loc(fused[#loc57, #loc58])
#loc176 = loc(fused[#loc66, #loc67])
#loc177 = loc(fused[#loc68, #loc69])
#loc178 = loc(fused[#loc71, #loc70])
#loc179 = loc(fused[#loc72, #loc73])
#loc180 = loc(fused[#loc76, #loc77])
#loc181 = loc(fused[#loc79, #loc77])
#loc182 = loc(fused[#loc86, #loc87])
#loc183 = loc(fused[#loc95, #loc96])
#loc184 = loc(fused[#loc97, #loc98])
#loc185 = loc(fused[#loc100, #loc99])
#loc186 = loc(fused[#loc101, #loc102])
#loc187 = loc(fused[#loc109, #loc110])
#loc188 = loc(fused[#loc112, #loc110])
#loc189 = loc(fused[#loc114, #loc115])
#loc190 = loc(fused[#loc124, #loc125])
#loc191 = loc(fused[#loc126, #loc127])
#loc192 = loc(fused[#loc129, #loc128])
#loc193 = loc(fused[#loc130, #loc131])
#loc194 = loc(fused[#loc134, #loc135])
#loc195 = loc(fused[#loc137, #loc135])
#loc196 = loc(fused[#loc143, #loc144])
#loc197 = loc(fused[#loc153, #loc154])
