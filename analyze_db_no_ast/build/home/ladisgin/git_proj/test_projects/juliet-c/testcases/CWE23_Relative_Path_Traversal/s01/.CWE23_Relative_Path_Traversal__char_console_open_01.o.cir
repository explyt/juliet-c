!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc128)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc129)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc130)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc132)
  cir.func private  @close(!s32i) -> !s32i loc(#loc133)
  cir.func  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc136)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc136)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc139)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc26)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc26)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc139)
      cir.scope {
        %8 = cir.const #cir.int<4096> : !s32i loc(#loc30)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc31)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc141)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc32)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc142)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc38)
            %18 = cir.const #cir.int<4096> : !s32i loc(#loc39)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc39)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc145)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc145)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
            %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
            cir.if %27 {
              %28 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc47)
              %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc47)
              cir.store %30, %4 : !u64i, !cir.ptr<!u64i> loc(#loc148)
              cir.scope {
                %31 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc53)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc54)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc54)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc150)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                  %37 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc58)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc151)
                  %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                  %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc56)
                  %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc56)
                  %44 = cir.const #cir.int<10> : !s8i loc(#loc60)
                  %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc60)
                  %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc152)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc55)
                    cir.yield %48 : !cir.bool loc(#loc55)
                  }, false {
                    %48 = cir.const #false loc(#loc55)
                    cir.yield %48 : !cir.bool loc(#loc55)
                  }) : (!cir.bool) -> !cir.bool loc(#loc55)
                  cir.yield %47 : !cir.bool loc(#loc55)
                }, false {
                  %36 = cir.const #false loc(#loc55)
                  cir.yield %36 : !cir.bool loc(#loc55)
                }) : (!cir.bool) -> !cir.bool loc(#loc55)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc62)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc65)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc65)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc154)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                  cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc155)
                } loc(#loc153)
              } loc(#loc149)
            } else {
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc67)
              %30 = cir.const #cir.int<0> : !s8i loc(#loc68)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
              %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc70)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc71)
              cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc156)
            } loc(#loc147)
          } loc(#loc144)
        } loc(#loc143)
      } loc(#loc140)
    } loc(#loc138)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc158)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc77)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc78)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc159)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc79)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc80)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc160)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc81)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc161)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc86)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc88)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc163)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc91)
        } loc(#loc164)
      } loc(#loc162)
    } loc(#loc157)
    cir.return loc(#loc15)
  } loc(#loc134)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc94)
  cir.func internal private  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc168)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc168)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc168)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc103)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc94)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc171)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      %11 = cir.const #cir.int<2> : !s32i loc(#loc110)
      %12 = cir.const #cir.int<64> : !s32i loc(#loc111)
      %13 = cir.binop(or, %11, %12) : !s32i loc(#loc172)
      %14 = cir.const #cir.int<256> : !s32i loc(#loc112)
      %15 = cir.const #cir.int<128> : !s32i loc(#loc113)
      %16 = cir.binop(or, %14, %15) : !s32i loc(#loc173)
      %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc114)
      cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc174)
      cir.scope {
        %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc120)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc121)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc176)
        cir.if %21 {
          %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc123)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc124)
        } loc(#loc177)
      } loc(#loc175)
    } loc(#loc170)
    cir.return loc(#loc96)
  } loc(#loc166)
  cir.func  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_01L7goodG2BEv() : () -> () loc(#loc127)
    cir.return loc(#loc126)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_01.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":64:27)
#loc10 = loc("/usr/include/fcntl.h":209:1)
#loc11 = loc("/usr/include/fcntl.h":209:56)
#loc12 = loc("/usr/include/unistd.h":358:1)
#loc13 = loc("/usr/include/unistd.h":358:27)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":40:1)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":79:1)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":42:5)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":42:12)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":43:5)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":43:37)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":44:12)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":44:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":45:5)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":69:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":47:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":47:37)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":47:26)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":47:33)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":49:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":68:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":49:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":49:26)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":49:36)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":50:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":67:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:23)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:28)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:27)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:43)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:56)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:66)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":52:76)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":53:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":61:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":63:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":56:27)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":56:34)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":56:17)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":56:38)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:17)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":60:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:21)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:31)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:33)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:36)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:41)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:49)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:50)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":57:55)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":58:17)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":59:39)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":59:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":59:26)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":59:34)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":59:35)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":64:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":66:33)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":66:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":66:22)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":66:29)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":70:5)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":78:5)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":71:9)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":71:13)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:25)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:31)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:38)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:47)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:55)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:20)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:9)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":73:63)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":74:9)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":77:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":74:13)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":74:26)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":74:25)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":75:9)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":76:19)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":76:13)
#loc92 = loc("/usr/include/string.h":149:1)
#loc93 = loc("/usr/include/string.h":150:14)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":92:18)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":86:1)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":102:1)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":88:5)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":88:12)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":89:5)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":89:37)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":90:12)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":90:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":92:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":92:12)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":93:5)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":101:5)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":94:9)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":94:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:25)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:31)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:38)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:47)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:55)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:20)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:9)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":96:63)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":97:9)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":100:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":97:13)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":97:26)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":97:25)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":98:9)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":99:19)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":99:13)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":104:1)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":107:1)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_01.cpp":106:5)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc10, #loc11])
#loc133 = loc(fused[#loc12, #loc13])
#loc134 = loc(fused[#loc14, #loc15])
#loc135 = loc(fused[#loc16, #loc17])
#loc136 = loc(fused[#loc18, #loc19])
#loc137 = loc(fused[#loc21, #loc20])
#loc138 = loc(fused[#loc22, #loc23])
#loc139 = loc(fused[#loc24, #loc25])
#loc140 = loc(fused[#loc28, #loc29])
#loc141 = loc(fused[#loc30, #loc31])
#loc142 = loc(fused[#loc30, #loc32])
#loc143 = loc(fused[#loc33, #loc29])
#loc144 = loc(fused[#loc34, #loc35])
#loc145 = loc(fused[#loc39, #loc40])
#loc146 = loc(fused[#loc42, #loc43])
#loc147 = loc(fused[#loc44, #loc45, #loc46, #loc35])
#loc148 = loc(fused[#loc49, #loc50])
#loc149 = loc(fused[#loc51, #loc52])
#loc150 = loc(fused[#loc53, #loc54])
#loc151 = loc(fused[#loc57, #loc58])
#loc152 = loc(fused[#loc56, #loc60])
#loc153 = loc(fused[#loc61, #loc52])
#loc154 = loc(fused[#loc64, #loc65])
#loc155 = loc(fused[#loc63, #loc62])
#loc156 = loc(fused[#loc69, #loc68])
#loc157 = loc(fused[#loc72, #loc73])
#loc158 = loc(fused[#loc74, #loc75])
#loc159 = loc(fused[#loc77, #loc78])
#loc160 = loc(fused[#loc79, #loc80])
#loc161 = loc(fused[#loc82, #loc83])
#loc162 = loc(fused[#loc84, #loc85])
#loc163 = loc(fused[#loc86, #loc87])
#loc164 = loc(fused[#loc89, #loc85])
#loc165 = loc(fused[#loc92, #loc93])
#loc166 = loc(fused[#loc95, #loc96])
#loc167 = loc(fused[#loc97, #loc98])
#loc168 = loc(fused[#loc99, #loc100])
#loc169 = loc(fused[#loc102, #loc101])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc107, #loc108])
#loc172 = loc(fused[#loc110, #loc111])
#loc173 = loc(fused[#loc112, #loc113])
#loc174 = loc(fused[#loc115, #loc116])
#loc175 = loc(fused[#loc117, #loc118])
#loc176 = loc(fused[#loc119, #loc120])
#loc177 = loc(fused[#loc122, #loc118])
#loc178 = loc(fused[#loc125, #loc126])
