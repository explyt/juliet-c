!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":94:10)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":94:14)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":94:20)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":94:32)
#loc170 = loc(fused[#loc60, #loc61])
#loc171 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc146)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private @printShortLine(!s16i) loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc150)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__short_10_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc146)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["badShort", init] {alignment = 8 : i64} loc(#loc155)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc20)
          cir.store %4, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc155)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc156)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc157)
          cir.store %8, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc158)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc28)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc29)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s16i>, !cir.bool loc(#loc160)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc33)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc161)
          } loc(#loc159)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc34)
          %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc34)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc35)
          cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc162)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc37)
          %13 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc38)
          cir.call @printShortLine(%13) : (!s16i) -> () loc(#loc39)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc40)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc41)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc41)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
        } loc(#loc154)
      } loc(#loc153)
    } loc(#loc152)
    cir.return loc(#loc12)
  } loc(#loc151)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__short_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc163)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc166)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__short_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__short_10_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__short_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__short_10_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.return %17 : !s32i loc(#loc174)
  } loc(#loc169)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc175)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc85)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["goodShort", init] {alignment = 8 : i64} loc(#loc180)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc93)
          cir.store %4, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc180)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc94)
          %6 = cir.const #cir.int<2> : !u64i loc(#loc181)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc182)
          cir.store %8, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc183)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc101)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc102)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s16i>, !cir.bool loc(#loc185)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc106)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
            } loc(#loc186)
          } loc(#loc184)
          %9 = cir.const #cir.int<6> : !s32i loc(#loc107)
          %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc107)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc108)
          cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc187)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc110)
          %13 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc111)
          cir.call @printShortLine(%13) : (!s16i) -> () loc(#loc112)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc113)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc114)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc114)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
        } loc(#loc179)
      } loc(#loc178)
    } loc(#loc177)
    cir.return loc(#loc82)
  } loc(#loc176)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc146)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc119)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["goodShort", init] {alignment = 8 : i64} loc(#loc192)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc124)
          cir.store %4, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc192)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc125)
          %6 = cir.const #cir.int<2> : !u64i loc(#loc193)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc194)
          cir.store %8, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc195)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc132)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc133)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s16i>, !cir.bool loc(#loc197)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc137)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
            } loc(#loc198)
          } loc(#loc196)
          %9 = cir.const #cir.int<6> : !s32i loc(#loc138)
          %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc138)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc139)
          cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc199)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc141)
          %13 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc142)
          cir.call @printShortLine(%13) : (!s16i) -> () loc(#loc143)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc144)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc145)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc145)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
        } loc(#loc191)
      } loc(#loc190)
    } loc(#loc189)
    cir.return loc(#loc116)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":20:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":20:39)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":20:1)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":34:1)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":22:5)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":33:5)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":22:8)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":23:5)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":24:9)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":32:9)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":25:13)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":25:32)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":27:33)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":27:40)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":27:55)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":27:56)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":27:13)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:13)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:45)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:17)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:29)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:35)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:36)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:42)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":28:41)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":29:25)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":29:14)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":29:13)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":30:29)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":30:28)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":30:13)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":31:13)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":31:18)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":79:1)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":83:1)
#loc44 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":81:5)
#loc45 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":81:11)
#loc46 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":82:5)
#loc47 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":82:11)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":99:15)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":101:15)
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":104:15)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":106:15)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":94:1)
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":109:1)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":95:1)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":97:27)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":97:22)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":97:5)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":99:5)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":100:5)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":100:57)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":101:5)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":104:5)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":105:5)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":105:56)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":106:5)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":108:12)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":108:5)
#loc78 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc79 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":46:19)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":41:1)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":60:1)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":43:5)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":59:5)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":43:8)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":44:5)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":47:5)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":49:5)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":46:9)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":50:9)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":58:9)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":51:13)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":51:33)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":53:34)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":53:41)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":53:58)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":53:59)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":53:13)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:13)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:46)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:17)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:30)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:36)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:37)
#loc105 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:43)
#loc106 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":54:42)
#loc107 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":55:26)
#loc108 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":55:14)
#loc109 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":55:13)
#loc110 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":56:29)
#loc111 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":56:28)
#loc112 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":56:13)
#loc113 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":57:13)
#loc114 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":57:18)
#loc115 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":63:1)
#loc116 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":77:1)
#loc117 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":65:5)
#loc118 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":76:5)
#loc119 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":65:8)
#loc120 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":66:5)
#loc121 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":67:9)
#loc122 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":75:9)
#loc123 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":68:13)
#loc124 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":68:33)
#loc125 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":70:34)
#loc126 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":70:41)
#loc127 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":70:58)
#loc128 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":70:59)
#loc129 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":70:13)
#loc130 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:13)
#loc131 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:46)
#loc132 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:17)
#loc133 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:30)
#loc134 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:36)
#loc135 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:37)
#loc136 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:43)
#loc137 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":71:42)
#loc138 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":72:26)
#loc139 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":72:14)
#loc140 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":72:13)
#loc141 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":73:29)
#loc142 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":73:28)
#loc143 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":73:13)
#loc144 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":74:13)
#loc145 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_10.c":74:18)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc13, #loc14])
#loc153 = loc(fused[#loc16, #loc14])
#loc154 = loc(fused[#loc17, #loc18])
#loc155 = loc(fused[#loc19, #loc20])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc21, #loc24])
#loc158 = loc(fused[#loc25, #loc24])
#loc159 = loc(fused[#loc26, #loc27])
#loc160 = loc(fused[#loc28, #loc29])
#loc161 = loc(fused[#loc30, #loc27])
#loc162 = loc(fused[#loc36, #loc34])
#loc163 = loc(fused[#loc42, #loc43])
#loc164 = loc(fused[#loc44, #loc45])
#loc165 = loc(fused[#loc46, #loc47])
#loc166 = loc(fused[#loc48, #loc49])
#loc167 = loc(fused[#loc50, #loc51])
#loc168 = loc(fused[#loc52, #loc53])
#loc169 = loc(fused[#loc58, #loc59])
#loc172 = loc(fused[#loc69, #loc70])
#loc173 = loc(fused[#loc73, #loc74])
#loc174 = loc(fused[#loc77, #loc76])
#loc175 = loc(fused[#loc78, #loc79])
#loc176 = loc(fused[#loc81, #loc82])
#loc177 = loc(fused[#loc83, #loc84])
#loc178 = loc(fused[#loc86, #loc87, #loc88, #loc84])
#loc179 = loc(fused[#loc90, #loc91])
#loc180 = loc(fused[#loc92, #loc93])
#loc181 = loc(fused[#loc95, #loc96])
#loc182 = loc(fused[#loc94, #loc97])
#loc183 = loc(fused[#loc98, #loc97])
#loc184 = loc(fused[#loc99, #loc100])
#loc185 = loc(fused[#loc101, #loc102])
#loc186 = loc(fused[#loc103, #loc100])
#loc187 = loc(fused[#loc109, #loc107])
#loc188 = loc(fused[#loc115, #loc116])
#loc189 = loc(fused[#loc117, #loc118])
#loc190 = loc(fused[#loc120, #loc118])
#loc191 = loc(fused[#loc121, #loc122])
#loc192 = loc(fused[#loc123, #loc124])
#loc193 = loc(fused[#loc126, #loc127])
#loc194 = loc(fused[#loc125, #loc128])
#loc195 = loc(fused[#loc129, #loc128])
#loc196 = loc(fused[#loc130, #loc131])
#loc197 = loc(fused[#loc132, #loc133])
#loc198 = loc(fused[#loc134, #loc131])
#loc199 = loc(fused[#loc140, #loc138])
