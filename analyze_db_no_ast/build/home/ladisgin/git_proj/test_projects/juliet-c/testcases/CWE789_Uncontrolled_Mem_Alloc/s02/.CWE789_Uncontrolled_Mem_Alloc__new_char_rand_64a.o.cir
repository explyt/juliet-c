!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc48)
  cir.func private  @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_647badSinkEPv(!cir.ptr<!void>) loc(#loc49)
  cir.func  @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_643badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc52)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc53)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc54)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_647badSinkEPv(%5) : (!cir.ptr<!void>) -> () loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc50)
  cir.func private  @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6411goodG2BSinkEPv(!cir.ptr<!void>) loc(#loc55)
  cir.func internal private  @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc57)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc23)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc58)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc25)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc25)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc59)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc60)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6411goodG2BSinkEPv(%5) : (!cir.ptr<!void>) -> () loc(#loc29)
    cir.return loc(#loc20)
  } loc(#loc56)
  cir.func private  @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6411goodB2GSinkEPv(!cir.ptr<!void>) loc(#loc61)
  cir.func internal private  @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc63)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc36)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc64)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc38)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc38)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc65)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc66)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6411goodB2GSinkEPv(%5) : (!cir.ptr<!void>) -> () loc(#loc43)
    cir.return loc(#loc33)
  } loc(#loc62)
  cir.func  @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_644goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64L7goodG2BEv() : () -> () loc(#loc46)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64L7goodB2GEv() : () -> () loc(#loc47)
    cir.return loc(#loc45)
  } loc(#loc67)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":32:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":32:32)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":34:1)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":42:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":36:5)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":36:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":38:12)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":38:5)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":40:12)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":40:5)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":40:17)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":41:13)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":41:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":41:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":49:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":49:36)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":51:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":59:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":53:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":53:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":55:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":55:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":57:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":57:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":58:17)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":58:18)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":58:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":62:1)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":62:36)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":64:1)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":72:1)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":66:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":66:12)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":68:12)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":68:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":70:12)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":70:5)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":70:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":71:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":71:18)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":71:5)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":74:1)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":78:1)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":76:5)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_64a.cpp":77:5)
#loc48 = loc(fused[#loc1, #loc2])
#loc49 = loc(fused[#loc3, #loc4])
#loc50 = loc(fused[#loc5, #loc6])
#loc51 = loc(fused[#loc7, #loc8])
#loc52 = loc(fused[#loc10, #loc9])
#loc53 = loc(fused[#loc12, #loc13])
#loc54 = loc(fused[#loc14, #loc15])
#loc55 = loc(fused[#loc17, #loc18])
#loc56 = loc(fused[#loc19, #loc20])
#loc57 = loc(fused[#loc21, #loc22])
#loc58 = loc(fused[#loc24, #loc23])
#loc59 = loc(fused[#loc26, #loc25])
#loc60 = loc(fused[#loc27, #loc28])
#loc61 = loc(fused[#loc30, #loc31])
#loc62 = loc(fused[#loc32, #loc33])
#loc63 = loc(fused[#loc34, #loc35])
#loc64 = loc(fused[#loc37, #loc36])
#loc65 = loc(fused[#loc39, #loc40])
#loc66 = loc(fused[#loc41, #loc42])
#loc67 = loc(fused[#loc44, #loc45])
