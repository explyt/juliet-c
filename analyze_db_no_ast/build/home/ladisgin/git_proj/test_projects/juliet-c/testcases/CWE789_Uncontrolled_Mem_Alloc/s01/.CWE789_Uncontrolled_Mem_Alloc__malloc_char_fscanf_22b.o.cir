!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":31:67)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":31:74)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":67:72)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":67:79)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":99:72)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":99:79)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":126:71)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":126:78)
#true = #cir.bool<true> : !cir.bool
#loc222 = loc(fused[#loc17, #loc18])
#loc240 = loc(fused[#loc65, #loc66])
#loc259 = loc(fused[#loc119, #loc120])
#loc278 = loc(fused[#loc171, #loc172])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc215)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc217)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc220)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_badSink(%arg0: !u64i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc222)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_badGlobal : !cir.ptr<!s32i> loc(#loc215)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc226)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc228)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc229)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc33)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc37)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc231)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc232)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc37)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc233)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc236)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc47)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc50)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc51)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
                } loc(#loc237)
              } loc(#loc235)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc52)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc55)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
            } else {
              %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
            } loc(#loc230)
          } loc(#loc227)
        } loc(#loc225)
      } loc(#loc224)
    } loc(#loc223)
    cir.return loc(#loc16)
  } loc(#loc221)
  cir.global "private"  external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc238)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc61)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc62)
  cir.func  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodB2G1Sink(%arg0: !u64i loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc240)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc67)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc238)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc70)
      cir.if %3 {
        %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc244)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc81)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc246)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc247)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc84)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc86)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc87)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc87)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc248)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc88)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc85)
                cir.yield %16 : !cir.bool loc(#loc85)
              }, false {
                %16 = cir.const #false loc(#loc85)
                cir.yield %16 : !cir.bool loc(#loc85)
              }) : (!cir.bool) -> !cir.bool loc(#loc85)
              cir.yield %15 : !cir.bool loc(#loc85)
            }, false {
              %10 = cir.const #false loc(#loc85)
              cir.yield %10 : !cir.bool loc(#loc85)
            }) : (!cir.bool) -> !cir.bool loc(#loc85)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc250)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc251)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc255)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc102)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc106)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
                } loc(#loc256)
              } loc(#loc254)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc107)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc109)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc109)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc111)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc112)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
            } else {
              %10 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc62)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc62)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc114)
            } loc(#loc249)
          } loc(#loc245)
        } loc(#loc243)
      } loc(#loc242)
    } loc(#loc241)
    cir.return loc(#loc64)
  } loc(#loc239)
  cir.global "private"  external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc257)
  cir.func  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodB2G2Sink(%arg0: !u64i loc(fused[#loc119, #loc120])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc259)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc121)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc257)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc124)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc263)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc265)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc266)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc135)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc138)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc138)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc267)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc139)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc136)
                cir.yield %16 : !cir.bool loc(#loc136)
              }, false {
                %16 = cir.const #false loc(#loc136)
                cir.yield %16 : !cir.bool loc(#loc136)
              }) : (!cir.bool) -> !cir.bool loc(#loc136)
              cir.yield %15 : !cir.bool loc(#loc136)
            }, false {
              %10 = cir.const #false loc(#loc136)
              cir.yield %10 : !cir.bool loc(#loc136)
            }) : (!cir.bool) -> !cir.bool loc(#loc136)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc269)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc270)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc271)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc272)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc274)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc153)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc155)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc156)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc157)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc155)
                } loc(#loc275)
              } loc(#loc273)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc158)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc160)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc160)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc162)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc163)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc164)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc163)
            } else {
              %10 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc165)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc165)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc166)
            } loc(#loc268)
          } loc(#loc264)
        } loc(#loc262)
      } loc(#loc261)
    } loc(#loc260)
    cir.return loc(#loc118)
  } loc(#loc258)
  cir.global "private"  external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc276)
  cir.func  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodG2BSink(%arg0: !u64i loc(fused[#loc171, #loc172])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc278)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.scope {
      %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc276)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc176)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc282)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc184)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc284)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc285)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc187)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc191)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc192)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc287)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc288)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc191)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc292)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc201)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc203)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc204)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc205)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc203)
                } loc(#loc293)
              } loc(#loc291)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc206)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc208)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc208)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc210)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc211)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc212)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc211)
            } else {
              %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc213)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc213)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc214)
            } loc(#loc286)
          } loc(#loc283)
        } loc(#loc281)
      } loc(#loc280)
    } loc(#loc279)
    cir.return loc(#loc170)
  } loc(#loc277)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":29:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":29:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":45:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":51:27)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":31:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":55:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":32:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":33:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":54:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":33:8)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":34:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":35:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":53:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":36:13)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":36:20)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":40:13)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":52:13)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":40:17)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":40:24)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":40:43)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":40:22)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":41:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":48:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":50:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":42:36)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":42:43)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":42:48)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":42:59)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":42:60)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":42:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:49)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:21)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:33)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:30)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:39)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:40)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:46)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":43:45)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":45:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":45:24)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":46:27)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":46:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":47:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":47:22)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":51:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":62:1)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":62:12)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":72:19)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":92:27)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":67:1)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":96:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":68:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":69:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":95:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":69:8)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":70:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":73:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":75:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":72:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":76:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":94:9)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":77:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":77:20)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":93:13)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:24)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:43)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:22)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:45)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:48)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:55)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":81:53)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":82:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":89:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":91:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":83:36)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":83:43)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":83:48)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":83:59)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":83:60)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":83:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:17)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:49)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:21)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:33)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:30)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:39)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:40)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:46)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":84:45)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":86:17)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":86:24)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":86:34)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":87:27)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":87:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":88:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":88:22)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":92:17)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":63:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":63:12)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":99:1)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":123:1)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":100:1)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":101:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":122:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":101:8)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":102:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":103:9)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":121:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":104:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":104:20)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":120:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:24)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:43)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:22)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:45)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:48)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:55)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":108:53)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":109:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":116:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":118:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":110:36)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":110:43)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":110:48)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":110:59)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":110:60)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":110:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:17)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:49)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:21)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:33)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:30)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:39)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:40)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:46)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":111:45)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":113:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":113:24)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":113:34)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":114:27)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":114:17)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":115:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":115:22)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":119:27)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":119:17)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":64:1)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":64:12)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":126:1)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":150:1)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":127:1)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":128:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":149:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":128:8)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":129:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":130:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":148:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":131:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":131:20)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":135:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":147:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":135:17)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":135:24)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":135:43)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":135:22)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":136:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":143:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":145:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":137:36)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":137:43)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":137:48)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":137:59)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":137:60)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":137:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:17)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:49)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:21)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:33)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:30)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:39)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:40)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:46)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":138:45)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":140:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":140:24)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":140:34)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":141:27)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":141:17)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":142:17)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":142:22)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":146:27)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_22b.c":146:17)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc10, #loc11])
#loc220 = loc(fused[#loc12, #loc13])
#loc221 = loc(fused[#loc15, #loc16])
#loc223 = loc(fused[#loc20, #loc21])
#loc224 = loc(fused[#loc23, #loc21])
#loc225 = loc(fused[#loc24, #loc25])
#loc226 = loc(fused[#loc26, #loc27])
#loc227 = loc(fused[#loc28, #loc29])
#loc228 = loc(fused[#loc31, #loc32])
#loc229 = loc(fused[#loc30, #loc32])
#loc230 = loc(fused[#loc34, #loc35, #loc36, #loc29])
#loc231 = loc(fused[#loc39, #loc40])
#loc232 = loc(fused[#loc38, #loc40])
#loc233 = loc(fused[#loc37, #loc41])
#loc234 = loc(fused[#loc42, #loc41])
#loc235 = loc(fused[#loc43, #loc44])
#loc236 = loc(fused[#loc45, #loc46])
#loc237 = loc(fused[#loc48, #loc44])
#loc238 = loc(fused[#loc59, #loc60])
#loc239 = loc(fused[#loc63, #loc64])
#loc241 = loc(fused[#loc68, #loc69])
#loc242 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc243 = loc(fused[#loc75, #loc76])
#loc244 = loc(fused[#loc77, #loc78])
#loc245 = loc(fused[#loc79, #loc80])
#loc246 = loc(fused[#loc82, #loc83])
#loc247 = loc(fused[#loc81, #loc83])
#loc248 = loc(fused[#loc86, #loc87])
#loc249 = loc(fused[#loc89, #loc90, #loc91, #loc80])
#loc250 = loc(fused[#loc94, #loc95])
#loc251 = loc(fused[#loc93, #loc95])
#loc252 = loc(fused[#loc92, #loc96])
#loc253 = loc(fused[#loc97, #loc96])
#loc254 = loc(fused[#loc98, #loc99])
#loc255 = loc(fused[#loc100, #loc101])
#loc256 = loc(fused[#loc103, #loc99])
#loc257 = loc(fused[#loc115, #loc116])
#loc258 = loc(fused[#loc117, #loc118])
#loc260 = loc(fused[#loc122, #loc123])
#loc261 = loc(fused[#loc125, #loc123])
#loc262 = loc(fused[#loc126, #loc127])
#loc263 = loc(fused[#loc128, #loc129])
#loc264 = loc(fused[#loc130, #loc131])
#loc265 = loc(fused[#loc133, #loc134])
#loc266 = loc(fused[#loc132, #loc134])
#loc267 = loc(fused[#loc137, #loc138])
#loc268 = loc(fused[#loc140, #loc141, #loc142, #loc131])
#loc269 = loc(fused[#loc145, #loc146])
#loc270 = loc(fused[#loc144, #loc146])
#loc271 = loc(fused[#loc143, #loc147])
#loc272 = loc(fused[#loc148, #loc147])
#loc273 = loc(fused[#loc149, #loc150])
#loc274 = loc(fused[#loc151, #loc152])
#loc275 = loc(fused[#loc154, #loc150])
#loc276 = loc(fused[#loc167, #loc168])
#loc277 = loc(fused[#loc169, #loc170])
#loc279 = loc(fused[#loc174, #loc175])
#loc280 = loc(fused[#loc177, #loc175])
#loc281 = loc(fused[#loc178, #loc179])
#loc282 = loc(fused[#loc180, #loc181])
#loc283 = loc(fused[#loc182, #loc183])
#loc284 = loc(fused[#loc185, #loc186])
#loc285 = loc(fused[#loc184, #loc186])
#loc286 = loc(fused[#loc188, #loc189, #loc190, #loc183])
#loc287 = loc(fused[#loc193, #loc194])
#loc288 = loc(fused[#loc192, #loc194])
#loc289 = loc(fused[#loc191, #loc195])
#loc290 = loc(fused[#loc196, #loc195])
#loc291 = loc(fused[#loc197, #loc198])
#loc292 = loc(fused[#loc199, #loc200])
#loc293 = loc(fused[#loc202, #loc198])
