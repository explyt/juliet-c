!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc124)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc125)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc128)
  cir.func private @printIntLine(!s32i) loc(#loc129)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc132)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc21)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.goto "source" loc(#loc134)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc25)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc132)
    cir.store %4, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc132)
    cir.scope {
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
      %6 = cir.const #cir.int<3> : !s32i loc(#loc29)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc29)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc29)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc29)
      %10 = cir.const #cir.int<2> : !s32i loc(#loc29)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc29)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc29)
      %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc29)
      %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc125)
      %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
      %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc31)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
      %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc136)
      cir.if %18 {
        %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
        %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc37)
        cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
      } else {
        %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } loc(#loc137)
    } loc(#loc135)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc140)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc141)
      %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc142)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc48)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc143)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc144)
      cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc145)
      %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc52)
      %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc53)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc146)
      cir.store %15, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
      cir.scope {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc59)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc59)
        cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc149)
        cir.for : cond {
          %23 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc62)
          %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc150)
          cir.condition(%26) loc(#loc150)
        } body {
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc64)
            %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
            %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc66)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc67)
            cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc152)
          } loc(#loc151)
          cir.yield loc(#loc58)
        } step {
          %23 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc68)
          %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc69)
          cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc153)
          cir.yield loc(#loc148)
        } loc(#loc148)
      } loc(#loc148)
      %16 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc71)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc72)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc70)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc73)
      %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
      cir.delete.array %20 : <!s32i> loc(#loc74)
    } loc(#loc139)
    cir.return loc(#loc15)
  } loc(#loc130)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc80)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.goto "source" loc(#loc157)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc84)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc85)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc160)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc161)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc162)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc94)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc163)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc164)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc165)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc98)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc99)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc166)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc105)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc105)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc169)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc107)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc108)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc170)
          cir.condition(%25) loc(#loc170)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc110)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc113)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc172)
          } loc(#loc171)
          cir.yield loc(#loc104)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc114)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc115)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc173)
          cir.yield loc(#loc168)
        } loc(#loc168)
      } loc(#loc168)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc117)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc118)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc116)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc119)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
      cir.delete.array %19 : <!s32i> loc(#loc120)
    } loc(#loc159)
    cir.return loc(#loc76)
  } loc(#loc154)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18L7goodG2BEv() : () -> () loc(#loc123)
    cir.return loc(#loc122)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":43:23)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":26:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":59:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":28:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":34:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":34:45)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":30:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":30:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":30:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":31:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":31:10)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":32:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":36:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":44:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":36:19)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":36:32)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":36:49)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":36:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":36:59)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":37:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":40:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":42:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":39:25)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":39:20)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":39:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":39:36)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":43:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":46:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":58:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":47:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":47:16)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":47:26)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":48:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":48:14)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":50:21)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":50:28)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":50:38)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":50:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":51:37)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":26:6)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":51:28)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":51:46)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":51:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":52:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":55:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":52:18)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":52:14)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":52:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":52:33)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":53:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":54:29)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":54:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":54:24)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":54:25)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":52:40)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":52:39)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":56:22)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":56:33)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":56:34)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":56:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":57:19)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":66:1)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":88:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":68:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":68:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":70:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":70:12)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":70:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":71:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":71:10)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":72:1)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":74:12)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":74:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":75:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":87:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":76:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":76:16)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":76:26)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":77:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":77:14)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":79:21)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":79:28)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":79:38)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":79:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":80:37)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":66:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":80:28)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":80:46)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":80:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":81:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":84:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":81:18)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":81:14)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":81:21)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":81:33)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":82:9)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":83:29)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":83:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":83:24)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":83:25)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":81:40)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":81:39)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":85:22)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":85:33)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":85:34)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":85:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":86:19)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":90:1)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":93:1)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_18.cpp":92:5)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc10, #loc11])
#loc129 = loc(fused[#loc12, #loc13])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc18, #loc19])
#loc133 = loc(fused[#loc22, #loc20])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc26, #loc27])
#loc136 = loc(fused[#loc31, #loc32])
#loc137 = loc(fused[#loc33, #loc34, #loc35, #loc27])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc41, #loc42])
#loc140 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc43, #loc45])
#loc142 = loc(fused[#loc46, #loc47])
#loc143 = loc(fused[#loc49, #loc50])
#loc144 = loc(fused[#loc48, #loc50])
#loc145 = loc(fused[#loc51, #loc50])
#loc146 = loc(fused[#loc54, #loc55])
#loc147 = loc(fused[#loc56, #loc55])
#loc148 = loc(fused[#loc57, #loc58])
#loc149 = loc(fused[#loc60, #loc59])
#loc150 = loc(fused[#loc61, #loc62])
#loc151 = loc(fused[#loc63, #loc58])
#loc152 = loc(fused[#loc65, #loc64])
#loc153 = loc(fused[#loc69, #loc68])
#loc154 = loc(fused[#loc75, #loc76])
#loc155 = loc(fused[#loc77, #loc78])
#loc156 = loc(fused[#loc81, #loc79])
#loc157 = loc(fused[#loc82, #loc83])
#loc158 = loc(fused[#loc86, #loc85])
#loc159 = loc(fused[#loc87, #loc88])
#loc160 = loc(fused[#loc89, #loc90])
#loc161 = loc(fused[#loc89, #loc91])
#loc162 = loc(fused[#loc92, #loc93])
#loc163 = loc(fused[#loc95, #loc96])
#loc164 = loc(fused[#loc94, #loc96])
#loc165 = loc(fused[#loc97, #loc96])
#loc166 = loc(fused[#loc100, #loc101])
#loc167 = loc(fused[#loc102, #loc101])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc106, #loc105])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc109, #loc104])
#loc172 = loc(fused[#loc111, #loc110])
#loc173 = loc(fused[#loc115, #loc114])
#loc174 = loc(fused[#loc121, #loc122])
