!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc3 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":24:58)
#loc4 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":24:114)
#loc5 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":24:120)
#loc17 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":31:58)
!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B = !cir.struct<class "CWE191_Integer_Underflow__short_min_multiply_84::CWE191_Integer_Underflow__short_min_multiply_84_goodG2B" {!s16i} #cir.record.decl.ast>
#loc30 = loc(fused[#loc4, #loc5])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func  @_ZN47CWE191_Integer_Underflow__short_min_multiply_8455CWE191_Integer_Underflow__short_min_multiply_84_goodG2BC2Es(%arg0: !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":24:58), %arg1: !s16i loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc30)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>> loc(#loc6)
    cir.store %arg1, %1 : !s16i, !cir.ptr<!s16i> loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> loc(#loc3)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc7)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> -> !cir.ptr<!s16i> loc(#loc8)
    cir.store %3, %4 : !s16i, !cir.ptr<!s16i> loc(#loc31)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc10)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc11)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc11)
    %8 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> -> !cir.ptr<!s16i> loc(#loc8)
    cir.store %7, %8 : !s16i, !cir.ptr<!s16i> loc(#loc32)
    cir.return loc(#loc2)
  } loc(#loc29)
  cir.func  @_ZN47CWE191_Integer_Underflow__short_min_multiply_8455CWE191_Integer_Underflow__short_min_multiply_84_goodG2BC1Es(!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>, !s16i) alias(@_ZN47CWE191_Integer_Underflow__short_min_multiply_8455CWE191_Integer_Underflow__short_min_multiply_84_goodG2BC2Es) loc(#loc29)
  cir.func private  @printIntLine(!s32i) loc(#loc33)
  cir.func  @_ZN47CWE191_Integer_Underflow__short_min_multiply_8455CWE191_Integer_Underflow__short_min_multiply_84_goodG2BD2Ev(%arg0: !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":31:58)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc17)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>> loc(#loc18)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> loc(#loc17)
    cir.scope {
      %2 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> -> !cir.ptr<!s16i> loc(#loc8)
      %3 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc21)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc21)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc22)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc36)
      cir.if %6 {
        %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc38)
        %8 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B> -> !cir.ptr<!s16i> loc(#loc8)
        %9 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc26)
        %10 = cir.cast(integral, %9 : !s16i), !s32i loc(#loc26)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc26)
        %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc26)
        cir.store %13, %7 : !s16i, !cir.ptr<!s16i> loc(#loc38)
        %14 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc27)
        %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc27)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc28)
      } loc(#loc37)
    } loc(#loc35)
    cir.return loc(#loc16)
  } loc(#loc34)
  cir.func  @_ZN47CWE191_Integer_Underflow__short_min_multiply_8455CWE191_Integer_Underflow__short_min_multiply_84_goodG2BD1Ev(!cir.ptr<!ty_CWE191_Integer_Underflow__short_min_multiply_843A3ACWE191_Integer_Underflow__short_min_multiply_84_goodG2B>) alias(@_ZN47CWE191_Integer_Underflow__short_min_multiply_8455CWE191_Integer_Underflow__short_min_multiply_84_goodG2BD2Ev) loc(#loc34)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":0:0)
#loc1 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":24:1)
#loc2 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":29:1)
#loc6 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":25:1)
#loc7 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":26:12)
#loc8 = loc("./CWE191_Integer_Underflow__short_min_multiply_84.h":46:11)
#loc9 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":26:5)
#loc10 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":28:13)
#loc11 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":28:12)
#loc12 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":28:5)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":31:1)
#loc16 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":39:1)
#loc18 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":32:1)
#loc19 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":33:5)
#loc20 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":38:5)
#loc21 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":33:8)
#loc22 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":33:15)
#loc23 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":34:5)
#loc24 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":36:9)
#loc25 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":36:31)
#loc26 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":36:24)
#loc27 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":37:22)
#loc28 = loc("CWE191_Integer_Underflow__short_min_multiply_84_goodG2B.cpp":37:9)
#loc29 = loc(fused[#loc1, #loc2])
#loc31 = loc(fused[#loc9, #loc7])
#loc32 = loc(fused[#loc12, #loc10])
#loc33 = loc(fused[#loc13, #loc14])
#loc34 = loc(fused[#loc15, #loc16])
#loc35 = loc(fused[#loc19, #loc20])
#loc36 = loc(fused[#loc21, #loc22])
#loc37 = loc(fused[#loc23, #loc20])
#loc38 = loc(fused[#loc24, #loc25])
