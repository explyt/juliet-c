!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:44)
#loc180 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:8)
#loc181 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:14)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc405 = loc(fused[#loc180, #loc181])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc333)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc334)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc335)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc336)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc337)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc338)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc339)
  cir.func private @close(!s32i) -> !s32i loc(#loc340)
  cir.func private @printIntLine(!s32i) loc(#loc341)
  cir.func @_ZN44CWE369_Divide_by_Zero__float_listenSocket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc343)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc344)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc345)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc346)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc347)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc348)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc349)
    %7 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc350)
    %8 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc351)
    cir.store %7, %8 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc38)
    %9 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc39)
    cir.store %9, %7 : !cir.float, !cir.ptr<!cir.float> loc(#loc352)
    cir.br ^bb1 loc(#loc353)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc26)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc28)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb2 loc(#loc354)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc354)
  ^bb3:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %15 ^bb4, ^bb35 loc(#loc45)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc355)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc49)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc49)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc50)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc50)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb6 loc(#loc357)
  ^bb6:  // pred: ^bb5
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc57)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc359)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc59)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc55)
  ^bb9:  // pred: ^bb8
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc360)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc361)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc362)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc67)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc363)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc70)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc364)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc74)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc74)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc365)
    cir.br ^bb10 loc(#loc366)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc367)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc368)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc368)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc87)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %47 ^bb11, ^bb12 loc(#loc370)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc89)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc80)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc371)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc95)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %53 ^bb15, ^bb16 loc(#loc373)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc97)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc91)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb18 loc(#loc375)
  ^bb18:  // pred: ^bb17
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc107)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %61 ^bb19, ^bb20 loc(#loc377)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc109)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc105)
  ^bb21:  // pred: ^bb20
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc111)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %65 = cir.const #cir.int<20> : !s32i loc(#loc112)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc112)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc112)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %70 = cir.call @recv(%62, %64, %68, %69) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
    %71 = cir.cast(integral, %70 : !s64i), !s32i loc(#loc115)
    cir.store %71, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb22 loc(#loc379)
  ^bb22:  // pred: ^bb21
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc121)
    %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc380)
    cir.brcond %75 ^bb23, ^bb24 loc(#loc122)
  ^bb23:  // pred: ^bb22
    %76 = cir.const #true loc(#loc122)
    cir.br ^bb29(%76 : !cir.bool) loc(#loc122)
  ^bb24:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %78 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %79 ^bb25, ^bb26 loc(#loc122)
  ^bb25:  // pred: ^bb24
    %80 = cir.const #true loc(#loc122)
    cir.br ^bb27(%80 : !cir.bool) loc(#loc122)
  ^bb26:  // pred: ^bb24
    %81 = cir.const #false loc(#loc122)
    cir.br ^bb27(%81 : !cir.bool) loc(#loc122)
  ^bb27(%82: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc122)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%82 : !cir.bool) loc(#loc122)
  ^bb29(%83: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc122)
  ^bb30:  // pred: ^bb29
    cir.brcond %83 ^bb31, ^bb32 loc(#loc382)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc126)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc119)
  ^bb33:  // pred: ^bb32
    %84 = cir.const #cir.int<0> : !s8i loc(#loc127)
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %86 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc129)
    %87 = cir.ptr_stride(%86 : !cir.ptr<!s8i>, %85 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %84, %87 : !s8i, !cir.ptr<!s8i> loc(#loc383)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc130)
    %89 = cir.call @atof(%88) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc131)
    %90 = cir.cast(floating, %89 : !cir.double), !cir.float loc(#loc131)
    cir.store %90, %7 : !cir.float, !cir.ptr<!cir.float> loc(#loc384)
    cir.br ^bb34 loc(#loc47)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc44)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc44)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc385)
  ^bb37:  // pred: ^bb36
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %93 = cir.unary(minus, %92) nsw : !s32i, !s32i loc(#loc137)
    %94 = cir.cmp(ne, %91, %93) : !s32i, !cir.bool loc(#loc386)
    cir.brcond %94 ^bb38, ^bb39 loc(#loc387)
  ^bb38:  // pred: ^bb37
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %96 = cir.call @close(%95) : (!s32i) -> !s32i loc(#loc140)
    cir.br ^bb39 loc(#loc135)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc135)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc388)
  ^bb41:  // pred: ^bb40
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %99 = cir.unary(minus, %98) nsw : !s32i, !s32i loc(#loc144)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %100 ^bb42, ^bb43 loc(#loc390)
  ^bb42:  // pred: ^bb41
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb43 loc(#loc142)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc142)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc42)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc391)
  ^bb46:  // pred: ^bb45
    %103 = cir.load %8 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc32)
    %104 = cir.load %103 : !cir.ptr<!cir.float>, !cir.float loc(#loc32)
    cir.store %104, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc348)
    cir.br ^bb47 loc(#loc392)
  ^bb47:  // pred: ^bb46
    %105 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc152)
    %106 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc153)
    %107 = cir.cast(floating, %106 : !cir.float), !cir.double loc(#loc153)
    %108 = cir.binop(div, %105, %107) : !cir.double loc(#loc393)
    %109 = cir.cast(float_to_int, %108 : !cir.double), !s32i loc(#loc393)
    cir.store %109, %6 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    %110 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @printIntLine(%110) : (!s32i) -> () loc(#loc155)
    cir.br ^bb48 loc(#loc151)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc149)
  ^bb49:  // pred: ^bb48
    cir.return loc(#loc20)
  } loc(#loc342)
  cir.func internal private @_ZN44CWE369_Divide_by_Zero__float_listenSocket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc395)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc396)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc397)
    %3 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc398)
    cir.store %2, %3 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc165)
    %4 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc166)
    cir.store %4, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc399)
    %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc168)
    cir.store %5, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc400)
    cir.br ^bb1 loc(#loc401)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc159)
    %7 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc159)
    cir.store %7, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc395)
    cir.br ^bb2 loc(#loc402)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc174)
    %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc175)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc175)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc403)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc403)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc177)
    cir.br ^bb3 loc(#loc173)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc171)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc157)
  } loc(#loc394)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc180, #loc181])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc405)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc179)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc182)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc183)
    %3 = cir.fabs %2 : !cir.float loc(#loc183)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc406)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc406)
    cir.return %4 : !cir.float loc(#loc406)
  } loc(#loc404)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc407)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc188)
  cir.func internal private @_ZN44CWE369_Divide_by_Zero__float_listenSocket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc409)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc410)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc411)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc412)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc413)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc414)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc415)
    %7 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc416)
    %8 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc417)
    cir.store %7, %8 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc208)
    %9 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc209)
    cir.store %9, %7 : !cir.float, !cir.ptr<!cir.float> loc(#loc418)
    cir.br ^bb1 loc(#loc419)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc196)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc196)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc198)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb2 loc(#loc420)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc420)
  ^bb3:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %15 ^bb4, ^bb35 loc(#loc215)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc421)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<2> : !s32i loc(#loc218)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc219)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc219)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc220)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc220)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.br ^bb6 loc(#loc423)
  ^bb6:  // pred: ^bb5
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc227)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc424)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc425)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc229)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc225)
  ^bb9:  // pred: ^bb8
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc426)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc427)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc428)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc237)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc237)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc429)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc239)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc239)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc430)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc241)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc241)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc242)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc431)
    cir.br ^bb10 loc(#loc432)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc433)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc434)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc434)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc252)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc253)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc435)
    cir.brcond %47 ^bb11, ^bb12 loc(#loc436)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc255)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc246)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc437)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc259)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc261)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc438)
    cir.brcond %53 ^bb15, ^bb16 loc(#loc439)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc263)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc257)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc265)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc266)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc267)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc440)
    cir.br ^bb18 loc(#loc441)
  ^bb18:  // pred: ^bb17
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc273)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %61 ^bb19, ^bb20 loc(#loc443)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc275)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc271)
  ^bb21:  // pred: ^bb20
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc277)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
    %65 = cir.const #cir.int<20> : !s32i loc(#loc278)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc278)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc278)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc280)
    %70 = cir.call @recv(%62, %64, %68, %69) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
    %71 = cir.cast(integral, %70 : !s64i), !s32i loc(#loc281)
    cir.store %71, %0 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    cir.br ^bb22 loc(#loc445)
  ^bb22:  // pred: ^bb21
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc287)
    %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc446)
    cir.brcond %75 ^bb23, ^bb24 loc(#loc288)
  ^bb23:  // pred: ^bb22
    %76 = cir.const #true loc(#loc288)
    cir.br ^bb29(%76 : !cir.bool) loc(#loc288)
  ^bb24:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %78 = cir.const #cir.int<0> : !s32i loc(#loc290)
    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc447)
    cir.brcond %79 ^bb25, ^bb26 loc(#loc288)
  ^bb25:  // pred: ^bb24
    %80 = cir.const #true loc(#loc288)
    cir.br ^bb27(%80 : !cir.bool) loc(#loc288)
  ^bb26:  // pred: ^bb24
    %81 = cir.const #false loc(#loc288)
    cir.br ^bb27(%81 : !cir.bool) loc(#loc288)
  ^bb27(%82: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc288)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%82 : !cir.bool) loc(#loc288)
  ^bb29(%83: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc288)
  ^bb30:  // pred: ^bb29
    cir.brcond %83 ^bb31, ^bb32 loc(#loc448)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc292)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc285)
  ^bb33:  // pred: ^bb32
    %84 = cir.const #cir.int<0> : !s8i loc(#loc293)
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %86 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc295)
    %87 = cir.ptr_stride(%86 : !cir.ptr<!s8i>, %85 : !s32i), !cir.ptr<!s8i> loc(#loc295)
    cir.store %84, %87 : !s8i, !cir.ptr<!s8i> loc(#loc449)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc296)
    %89 = cir.call @atof(%88) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc297)
    %90 = cir.cast(floating, %89 : !cir.double), !cir.float loc(#loc297)
    cir.store %90, %7 : !cir.float, !cir.ptr<!cir.float> loc(#loc450)
    cir.br ^bb34 loc(#loc217)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc214)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc214)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc451)
  ^bb37:  // pred: ^bb36
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %93 = cir.unary(minus, %92) nsw : !s32i, !s32i loc(#loc303)
    %94 = cir.cmp(ne, %91, %93) : !s32i, !cir.bool loc(#loc452)
    cir.brcond %94 ^bb38, ^bb39 loc(#loc453)
  ^bb38:  // pred: ^bb37
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %96 = cir.call @close(%95) : (!s32i) -> !s32i loc(#loc306)
    cir.br ^bb39 loc(#loc301)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc301)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc454)
  ^bb41:  // pred: ^bb40
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc310)
    %99 = cir.unary(minus, %98) nsw : !s32i, !s32i loc(#loc310)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc455)
    cir.brcond %100 ^bb42, ^bb43 loc(#loc456)
  ^bb42:  // pred: ^bb41
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc313)
    cir.br ^bb43 loc(#loc308)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc308)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc212)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc457)
  ^bb46:  // pred: ^bb45
    %103 = cir.load %8 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc202)
    %104 = cir.load %103 : !cir.ptr<!cir.float>, !cir.float loc(#loc202)
    cir.store %104, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc414)
    cir.br ^bb47 loc(#loc458)
  ^bb47:  // pred: ^bb46
    %105 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc318)
    %106 = cir.call @_ZSt4fabsf(%105) : (!cir.float) -> !cir.float loc(#loc319)
    %107 = cir.cast(floating, %106 : !cir.float), !cir.double loc(#loc319)
    %108 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc320)
    %109 = cir.cmp(gt, %107, %108) : !cir.double, !cir.bool loc(#loc459)
    cir.brcond %109 ^bb48, ^bb49 loc(#loc460)
  ^bb48:  // pred: ^bb47
    %110 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc324)
    %111 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc325)
    %112 = cir.cast(floating, %111 : !cir.float), !cir.double loc(#loc325)
    %113 = cir.binop(div, %110, %112) : !cir.double loc(#loc461)
    %114 = cir.cast(float_to_int, %113 : !cir.double), !s32i loc(#loc461)
    cir.store %114, %6 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    %115 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    cir.call @printIntLine(%115) : (!s32i) -> () loc(#loc327)
    cir.br ^bb50 loc(#loc322)
  ^bb49:  // pred: ^bb47
    %116 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc188)
    %117 = cir.cast(array_to_ptrdecay, %116 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%117) : (!cir.ptr<!s8i>) -> () loc(#loc328)
    cir.br ^bb50 loc(#loc317)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc317)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc315)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc190)
  } loc(#loc408)
  cir.func @_ZN44CWE369_Divide_by_Zero__float_listenSocket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_33L7goodG2BEv() : () -> () loc(#loc331)
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_33L7goodB2GEv() : () -> () loc(#loc332)
    cir.return loc(#loc330)
  } loc(#loc462)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_33.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":49:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":132:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":60:9)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":60:13)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":61:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":61:28)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":62:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":62:31)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":63:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":63:31)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":64:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":64:41)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":125:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":125:22)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":128:13)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":128:44)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":51:5)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":51:11)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":52:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":52:22)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":54:12)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":54:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":55:5)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":123:5)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":65:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":108:17)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":108:16)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":66:9)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":107:9)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":74:35)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":74:44)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":74:57)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":74:28)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":74:13)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":74:68)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":75:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":78:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":75:17)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":75:33)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":76:13)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":77:17)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":79:20)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":79:21)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":79:30)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":79:33)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":79:47)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":79:13)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":79:48)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":80:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":80:13)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":81:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":81:13)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":82:38)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":82:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":82:13)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":82:46)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":86:13)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:22)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:54)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:55)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:64)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:78)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:17)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":83:84)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":84:13)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":85:17)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":87:13)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":90:13)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":87:24)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":87:38)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":87:17)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":87:57)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":88:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":89:17)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":91:35)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":91:49)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":91:55)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":91:28)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":91:13)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":91:59)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":92:13)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":95:13)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":92:17)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":92:33)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":93:13)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":94:17)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:31)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:45)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:58)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:76)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:79)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:26)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:13)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":98:80)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:13)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":102:13)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:17)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:31)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:47)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":99:61)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":100:13)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":101:17)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":104:39)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":104:25)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":104:13)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":106:32)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":106:27)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":106:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":106:43)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":109:9)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":112:9)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":109:13)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":109:29)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":110:9)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":111:26)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":111:13)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":113:9)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":116:9)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":113:13)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":113:29)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":114:9)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":115:26)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":115:13)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":124:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":131:5)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":126:9)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":130:9)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":128:32)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":128:40)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":129:26)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":129:13)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":139:1)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":155:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":148:9)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":148:22)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":151:13)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":151:44)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":141:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":141:11)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":142:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":142:22)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":144:12)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":144:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":146:12)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":146:5)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":147:5)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":154:5)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":149:9)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":153:9)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":151:32)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":151:40)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":152:26)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":152:13)
#loc178 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":233:3)
#loc179 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:34)
#loc182 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:3)
#loc183 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:28)
#loc184 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:5)
#loc185 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:31)
#loc186 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc187 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":243:23)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":158:1)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":246:1)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":169:9)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":169:13)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":170:9)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":170:28)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":171:9)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":171:31)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":172:9)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":172:31)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":173:9)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":173:41)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":234:9)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":234:22)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":238:13)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":238:44)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":160:5)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":160:11)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":161:5)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":161:22)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":163:12)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":163:5)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":164:5)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":232:5)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":174:9)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":217:17)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":217:16)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":175:9)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":216:9)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":183:35)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":183:44)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":183:57)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":183:28)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":183:13)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":183:68)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":184:13)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":187:13)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":184:17)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":184:33)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":185:13)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":186:17)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":188:20)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":188:21)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":188:30)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":188:33)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":188:47)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":188:13)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":188:48)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":189:34)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":189:13)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":190:39)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":190:13)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":191:38)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":191:32)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":191:13)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":191:46)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:13)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":195:13)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:22)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:54)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:55)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:64)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:78)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:17)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":192:84)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":193:13)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":194:17)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":196:13)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":199:13)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":196:24)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":196:38)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":196:17)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":196:57)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":197:13)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":198:17)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":200:35)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":200:49)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":200:55)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":200:28)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":200:13)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":200:59)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":201:13)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":204:13)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":201:17)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":201:33)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":202:13)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":203:17)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:31)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:45)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:58)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:76)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:79)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:26)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:13)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":207:80)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:13)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":211:13)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:17)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:31)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:47)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":208:61)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":209:13)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":210:17)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":213:39)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":213:25)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":213:13)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":215:32)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":215:27)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":215:13)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":215:43)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":218:9)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":221:9)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":218:13)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":218:29)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":219:9)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":220:26)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":220:13)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":222:9)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":225:9)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":222:13)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":222:29)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":223:9)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":224:26)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":224:13)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":233:5)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":245:5)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":236:9)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":244:9)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":236:17)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":236:12)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":236:25)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":237:9)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":240:9)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":242:9)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":238:32)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":238:40)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":239:26)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":239:13)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":243:13)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":248:1)
#loc330 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":252:1)
#loc331 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":250:5)
#loc332 = loc("CWE369_Divide_by_Zero__float_listenSocket_33.cpp":251:5)
#loc333 = loc(fused[#loc1, #loc2])
#loc334 = loc(fused[#loc3, #loc4])
#loc335 = loc(fused[#loc5, #loc6])
#loc336 = loc(fused[#loc7, #loc8])
#loc337 = loc(fused[#loc9, #loc10])
#loc338 = loc(fused[#loc11, #loc12])
#loc339 = loc(fused[#loc13, #loc14])
#loc340 = loc(fused[#loc15, #loc16])
#loc341 = loc(fused[#loc17, #loc18])
#loc342 = loc(fused[#loc19, #loc20])
#loc343 = loc(fused[#loc21, #loc22])
#loc344 = loc(fused[#loc23, #loc24])
#loc345 = loc(fused[#loc25, #loc26])
#loc346 = loc(fused[#loc27, #loc28])
#loc347 = loc(fused[#loc29, #loc30])
#loc348 = loc(fused[#loc31, #loc32])
#loc349 = loc(fused[#loc33, #loc34])
#loc350 = loc(fused[#loc35, #loc36])
#loc351 = loc(fused[#loc37, #loc38])
#loc352 = loc(fused[#loc40, #loc39])
#loc353 = loc(fused[#loc41, #loc42])
#loc354 = loc(fused[#loc43, #loc44])
#loc355 = loc(fused[#loc46, #loc47])
#loc356 = loc(fused[#loc52, #loc53])
#loc357 = loc(fused[#loc54, #loc55])
#loc358 = loc(fused[#loc56, #loc57])
#loc359 = loc(fused[#loc58, #loc55])
#loc360 = loc(fused[#loc60, #loc61])
#loc361 = loc(fused[#loc63, #loc64])
#loc362 = loc(fused[#loc65, #loc66])
#loc363 = loc(fused[#loc69, #loc67])
#loc364 = loc(fused[#loc73, #loc70])
#loc365 = loc(fused[#loc77, #loc78])
#loc366 = loc(fused[#loc79, #loc80])
#loc367 = loc(fused[#loc82, #loc83])
#loc368 = loc(fused[#loc84, #loc85])
#loc369 = loc(fused[#loc86, #loc87])
#loc370 = loc(fused[#loc88, #loc80])
#loc371 = loc(fused[#loc90, #loc91])
#loc372 = loc(fused[#loc94, #loc95])
#loc373 = loc(fused[#loc96, #loc91])
#loc374 = loc(fused[#loc102, #loc103])
#loc375 = loc(fused[#loc104, #loc105])
#loc376 = loc(fused[#loc106, #loc107])
#loc377 = loc(fused[#loc108, #loc105])
#loc378 = loc(fused[#loc116, #loc117])
#loc379 = loc(fused[#loc118, #loc119])
#loc380 = loc(fused[#loc120, #loc121])
#loc381 = loc(fused[#loc123, #loc124])
#loc382 = loc(fused[#loc125, #loc119])
#loc383 = loc(fused[#loc129, #loc127])
#loc384 = loc(fused[#loc132, #loc133])
#loc385 = loc(fused[#loc134, #loc135])
#loc386 = loc(fused[#loc136, #loc137])
#loc387 = loc(fused[#loc138, #loc135])
#loc388 = loc(fused[#loc141, #loc142])
#loc389 = loc(fused[#loc143, #loc144])
#loc390 = loc(fused[#loc145, #loc142])
#loc391 = loc(fused[#loc148, #loc149])
#loc392 = loc(fused[#loc150, #loc151])
#loc393 = loc(fused[#loc152, #loc153])
#loc394 = loc(fused[#loc156, #loc157])
#loc395 = loc(fused[#loc158, #loc159])
#loc396 = loc(fused[#loc160, #loc161])
#loc397 = loc(fused[#loc162, #loc163])
#loc398 = loc(fused[#loc164, #loc165])
#loc399 = loc(fused[#loc167, #loc166])
#loc400 = loc(fused[#loc169, #loc168])
#loc401 = loc(fused[#loc170, #loc171])
#loc402 = loc(fused[#loc172, #loc173])
#loc403 = loc(fused[#loc174, #loc175])
#loc404 = loc(fused[#loc178, #loc179])
#loc406 = loc(fused[#loc184, #loc185])
#loc407 = loc(fused[#loc186, #loc187])
#loc408 = loc(fused[#loc189, #loc190])
#loc409 = loc(fused[#loc191, #loc192])
#loc410 = loc(fused[#loc193, #loc194])
#loc411 = loc(fused[#loc195, #loc196])
#loc412 = loc(fused[#loc197, #loc198])
#loc413 = loc(fused[#loc199, #loc200])
#loc414 = loc(fused[#loc201, #loc202])
#loc415 = loc(fused[#loc203, #loc204])
#loc416 = loc(fused[#loc205, #loc206])
#loc417 = loc(fused[#loc207, #loc208])
#loc418 = loc(fused[#loc210, #loc209])
#loc419 = loc(fused[#loc211, #loc212])
#loc420 = loc(fused[#loc213, #loc214])
#loc421 = loc(fused[#loc216, #loc217])
#loc422 = loc(fused[#loc222, #loc223])
#loc423 = loc(fused[#loc224, #loc225])
#loc424 = loc(fused[#loc226, #loc227])
#loc425 = loc(fused[#loc228, #loc225])
#loc426 = loc(fused[#loc230, #loc231])
#loc427 = loc(fused[#loc233, #loc234])
#loc428 = loc(fused[#loc235, #loc236])
#loc429 = loc(fused[#loc238, #loc237])
#loc430 = loc(fused[#loc240, #loc239])
#loc431 = loc(fused[#loc243, #loc244])
#loc432 = loc(fused[#loc245, #loc246])
#loc433 = loc(fused[#loc248, #loc249])
#loc434 = loc(fused[#loc250, #loc251])
#loc435 = loc(fused[#loc252, #loc253])
#loc436 = loc(fused[#loc254, #loc246])
#loc437 = loc(fused[#loc256, #loc257])
#loc438 = loc(fused[#loc260, #loc261])
#loc439 = loc(fused[#loc262, #loc257])
#loc440 = loc(fused[#loc268, #loc269])
#loc441 = loc(fused[#loc270, #loc271])
#loc442 = loc(fused[#loc272, #loc273])
#loc443 = loc(fused[#loc274, #loc271])
#loc444 = loc(fused[#loc282, #loc283])
#loc445 = loc(fused[#loc284, #loc285])
#loc446 = loc(fused[#loc286, #loc287])
#loc447 = loc(fused[#loc289, #loc290])
#loc448 = loc(fused[#loc291, #loc285])
#loc449 = loc(fused[#loc295, #loc293])
#loc450 = loc(fused[#loc298, #loc299])
#loc451 = loc(fused[#loc300, #loc301])
#loc452 = loc(fused[#loc302, #loc303])
#loc453 = loc(fused[#loc304, #loc301])
#loc454 = loc(fused[#loc307, #loc308])
#loc455 = loc(fused[#loc309, #loc310])
#loc456 = loc(fused[#loc311, #loc308])
#loc457 = loc(fused[#loc314, #loc315])
#loc458 = loc(fused[#loc316, #loc317])
#loc459 = loc(fused[#loc319, #loc320])
#loc460 = loc(fused[#loc321, #loc322, #loc323, #loc317])
#loc461 = loc(fused[#loc324, #loc325])
#loc462 = loc(fused[#loc329, #loc330])
