!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc93)
  cir.global "private" constant cir_private @__const.CWE459_Incomplete_Cleanup__char_16_bad.filename = #cir.const_array<"badXXXXXX\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> loc(#loc94)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc95)
  cir.func private @fdopen(!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Temporary file\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc98)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc19)
        cir.condition(%1) loc(#loc19)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc94)
            %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc103)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc104)
            %3 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_16_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc94)
            cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc94)
            %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc27)
            %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc28)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc104)
            cir.scope {
              %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
              %7 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc33)
              %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc106)
              cir.if %9 {
                %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc35)
                %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc9)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc9)
                %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc36)
                cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc108)
                cir.scope {
                  %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
                  %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
                  %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc42)
                  %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc110)
                  cir.if %17 {
                    %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc44)
                    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
                    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc12)
                    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc12)
                    %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
                    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
                    %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc47)
                  } loc(#loc111)
                } loc(#loc109)
              } loc(#loc107)
            } loc(#loc105)
          } loc(#loc102)
          cir.break loc(#loc48)
        } loc(#loc101)
        cir.yield loc(#loc18)
      } loc(#loc100)
    } loc(#loc100)
    cir.return loc(#loc16)
  } loc(#loc99)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc112)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc114)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc59)
        cir.condition(%1) loc(#loc59)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc93)
            %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc119)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc120)
            %3 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc93)
            cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc93)
            %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
            %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc68)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc120)
            cir.scope {
              %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %7 = cir.const #cir.int<1> : !s32i loc(#loc72)
              %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc73)
              %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc122)
              cir.if %9 {
                %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc76)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc76)
                %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc77)
                cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc124)
                cir.scope {
                  %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc82)
                  %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
                  %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc83)
                  %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc126)
                  cir.if %17 {
                    %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc85)
                    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
                    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
                    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
                    %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
                    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
                    %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc89)
                    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc90)
                    %26 = cir.call @unlink(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc91)
                  } loc(#loc127)
                } loc(#loc125)
              } loc(#loc123)
            } loc(#loc121)
          } loc(#loc118)
          cir.break loc(#loc92)
        } loc(#loc117)
        cir.yield loc(#loc58)
      } loc(#loc116)
    } loc(#loc116)
    cir.return loc(#loc56)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_16.c":0:0)
#loc1 = loc("CWE459_Incomplete_Cleanup__char_16.c":73:13)
#loc2 = loc("CWE459_Incomplete_Cleanup__char_16.c":73:31)
#loc3 = loc("CWE459_Incomplete_Cleanup__char_16.c":44:13)
#loc4 = loc("CWE459_Incomplete_Cleanup__char_16.c":44:31)
#loc5 = loc("/usr/include/stdlib.h":827:1)
#loc6 = loc("/usr/include/stdlib.h":827:39)
#loc7 = loc("/usr/include/stdio.h":299:1)
#loc8 = loc("/usr/include/stdio.h":300:3)
#loc9 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:42)
#loc10 = loc("/usr/include/stdio.h":357:1)
#loc11 = loc("/usr/include/stdio.h":358:45)
#loc12 = loc("CWE459_Incomplete_Cleanup__char_16.c":53:36)
#loc13 = loc("/usr/include/stdio.h":184:1)
#loc14 = loc("/usr/include/stdio.h":184:36)
#loc15 = loc("CWE459_Incomplete_Cleanup__char_16.c":39:1)
#loc16 = loc("CWE459_Incomplete_Cleanup__char_16.c":61:1)
#loc17 = loc("CWE459_Incomplete_Cleanup__char_16.c":41:5)
#loc18 = loc("CWE459_Incomplete_Cleanup__char_16.c":60:5)
#loc19 = loc("CWE459_Incomplete_Cleanup__char_16.c":41:11)
#loc20 = loc("CWE459_Incomplete_Cleanup__char_16.c":42:5)
#loc21 = loc("CWE459_Incomplete_Cleanup__char_16.c":43:9)
#loc22 = loc("CWE459_Incomplete_Cleanup__char_16.c":58:9)
#loc23 = loc("CWE459_Incomplete_Cleanup__char_16.c":45:13)
#loc24 = loc("CWE459_Incomplete_Cleanup__char_16.c":45:19)
#loc25 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:13)
#loc26 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:44)
#loc27 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:36)
#loc28 = loc("CWE459_Incomplete_Cleanup__char_16.c":47:28)
#loc29 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:13)
#loc30 = loc("CWE459_Incomplete_Cleanup__char_16.c":57:13)
#loc31 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:17)
#loc32 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:30)
#loc33 = loc("CWE459_Incomplete_Cleanup__char_16.c":48:29)
#loc34 = loc("CWE459_Incomplete_Cleanup__char_16.c":49:13)
#loc35 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:32)
#loc36 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:25)
#loc37 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:17)
#loc38 = loc("CWE459_Incomplete_Cleanup__char_16.c":50:45)
#loc39 = loc("CWE459_Incomplete_Cleanup__char_16.c":51:17)
#loc40 = loc("CWE459_Incomplete_Cleanup__char_16.c":56:17)
#loc41 = loc("CWE459_Incomplete_Cleanup__char_16.c":51:21)
#loc42 = loc("CWE459_Incomplete_Cleanup__char_16.c":51:30)
#loc43 = loc("CWE459_Incomplete_Cleanup__char_16.c":52:17)
#loc44 = loc("CWE459_Incomplete_Cleanup__char_16.c":53:21)
#loc45 = loc("CWE459_Incomplete_Cleanup__char_16.c":53:29)
#loc46 = loc("CWE459_Incomplete_Cleanup__char_16.c":54:28)
#loc47 = loc("CWE459_Incomplete_Cleanup__char_16.c":54:21)
#loc48 = loc("CWE459_Incomplete_Cleanup__char_16.c":59:9)
#loc49 = loc("CWE459_Incomplete_Cleanup__char_16.c":93:1)
#loc50 = loc("CWE459_Incomplete_Cleanup__char_16.c":96:1)
#loc51 = loc("CWE459_Incomplete_Cleanup__char_16.c":95:5)
#loc52 = loc("CWE459_Incomplete_Cleanup__char_16.c":95:11)
#loc53 = loc("/usr/include/unistd.h":858:1)
#loc54 = loc("/usr/include/unistd.h":858:48)
#loc55 = loc("CWE459_Incomplete_Cleanup__char_16.c":68:1)
#loc56 = loc("CWE459_Incomplete_Cleanup__char_16.c":91:1)
#loc57 = loc("CWE459_Incomplete_Cleanup__char_16.c":70:5)
#loc58 = loc("CWE459_Incomplete_Cleanup__char_16.c":90:5)
#loc59 = loc("CWE459_Incomplete_Cleanup__char_16.c":70:11)
#loc60 = loc("CWE459_Incomplete_Cleanup__char_16.c":71:5)
#loc61 = loc("CWE459_Incomplete_Cleanup__char_16.c":72:9)
#loc62 = loc("CWE459_Incomplete_Cleanup__char_16.c":88:9)
#loc63 = loc("CWE459_Incomplete_Cleanup__char_16.c":74:13)
#loc64 = loc("CWE459_Incomplete_Cleanup__char_16.c":74:19)
#loc65 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:13)
#loc66 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:44)
#loc67 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:36)
#loc68 = loc("CWE459_Incomplete_Cleanup__char_16.c":76:28)
#loc69 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:13)
#loc70 = loc("CWE459_Incomplete_Cleanup__char_16.c":87:13)
#loc71 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:17)
#loc72 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:30)
#loc73 = loc("CWE459_Incomplete_Cleanup__char_16.c":77:29)
#loc74 = loc("CWE459_Incomplete_Cleanup__char_16.c":78:13)
#loc75 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:32)
#loc76 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:42)
#loc77 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:25)
#loc78 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:17)
#loc79 = loc("CWE459_Incomplete_Cleanup__char_16.c":79:45)
#loc80 = loc("CWE459_Incomplete_Cleanup__char_16.c":80:17)
#loc81 = loc("CWE459_Incomplete_Cleanup__char_16.c":86:17)
#loc82 = loc("CWE459_Incomplete_Cleanup__char_16.c":80:21)
#loc83 = loc("CWE459_Incomplete_Cleanup__char_16.c":80:30)
#loc84 = loc("CWE459_Incomplete_Cleanup__char_16.c":81:17)
#loc85 = loc("CWE459_Incomplete_Cleanup__char_16.c":82:21)
#loc86 = loc("CWE459_Incomplete_Cleanup__char_16.c":82:29)
#loc87 = loc("CWE459_Incomplete_Cleanup__char_16.c":82:36)
#loc88 = loc("CWE459_Incomplete_Cleanup__char_16.c":83:28)
#loc89 = loc("CWE459_Incomplete_Cleanup__char_16.c":83:21)
#loc90 = loc("CWE459_Incomplete_Cleanup__char_16.c":85:28)
#loc91 = loc("CWE459_Incomplete_Cleanup__char_16.c":85:21)
#loc92 = loc("CWE459_Incomplete_Cleanup__char_16.c":89:9)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc10, #loc11])
#loc98 = loc(fused[#loc13, #loc14])
#loc99 = loc(fused[#loc15, #loc16])
#loc100 = loc(fused[#loc17, #loc18])
#loc101 = loc(fused[#loc20, #loc18])
#loc102 = loc(fused[#loc21, #loc22])
#loc103 = loc(fused[#loc23, #loc24])
#loc104 = loc(fused[#loc25, #loc26])
#loc105 = loc(fused[#loc29, #loc30])
#loc106 = loc(fused[#loc31, #loc32])
#loc107 = loc(fused[#loc34, #loc30])
#loc108 = loc(fused[#loc37, #loc38])
#loc109 = loc(fused[#loc39, #loc40])
#loc110 = loc(fused[#loc41, #loc42])
#loc111 = loc(fused[#loc43, #loc40])
#loc112 = loc(fused[#loc49, #loc50])
#loc113 = loc(fused[#loc51, #loc52])
#loc114 = loc(fused[#loc53, #loc54])
#loc115 = loc(fused[#loc55, #loc56])
#loc116 = loc(fused[#loc57, #loc58])
#loc117 = loc(fused[#loc60, #loc58])
#loc118 = loc(fused[#loc61, #loc62])
#loc119 = loc(fused[#loc63, #loc64])
#loc120 = loc(fused[#loc65, #loc66])
#loc121 = loc(fused[#loc69, #loc70])
#loc122 = loc(fused[#loc71, #loc72])
#loc123 = loc(fused[#loc74, #loc70])
#loc124 = loc(fused[#loc78, #loc79])
#loc125 = loc(fused[#loc80, #loc81])
#loc126 = loc(fused[#loc82, #loc83])
#loc127 = loc(fused[#loc84, #loc81])
