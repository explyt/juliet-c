!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":22:22)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":22:26)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":62:26)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":62:30)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":44:26)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":44:30)
#loc99 = loc(fused[#loc8, #loc9])
#loc111 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc75, #loc76])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc96)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc97)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private  @badSource(%arg0: !s32i loc(fused[#loc8, #loc9])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc7)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc11)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.return %9 : !s32i loc(#loc100)
  } loc(#loc98)
  cir.func private  @printIntLine(!s32i) loc(#loc101)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fscanf_modulo_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc22)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc25)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc106)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc30)
    cir.return loc(#loc18)
  } loc(#loc102)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fscanf_modulo_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc107)
  cir.func internal private  @goodB2GSource(%arg0: !s32i loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc38)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc42)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc44)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc44)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc42)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.return %9 : !s32i loc(#loc112)
  } loc(#loc110)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc55)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc58)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.scope {
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc64)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc119)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc65)
      cir.if %8 {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc69)
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
        %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc121)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc71)
      } else {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc49)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } loc(#loc120)
    } loc(#loc118)
    cir.return loc(#loc51)
  } loc(#loc114)
  cir.func internal private  @goodG2BSource(%arg0: !s32i loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc78)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %4 : !s32i loc(#loc125)
  } loc(#loc122)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc87)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc90)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc130)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc95)
    cir.return loc(#loc83)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":25:19)
#loc6 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":22:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":27:1)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":23:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":25:5)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":25:12)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":26:12)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":26:5)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":29:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":37:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":31:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":31:9)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":33:13)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":33:12)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":33:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":34:22)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":34:12)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":34:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":34:26)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":36:18)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":36:24)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":36:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":86:1)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":90:1)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":88:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":88:13)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":89:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":89:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":62:1)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":67:1)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":63:1)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":65:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":65:12)
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":65:19)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":66:12)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":66:5)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":82:19)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":69:1)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":84:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":71:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":71:9)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":73:13)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":73:12)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":73:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":74:26)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":74:12)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":74:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":74:30)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":76:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":83:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":76:9)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":76:17)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":76:14)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":77:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":79:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":81:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":78:22)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":78:28)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":78:9)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":82:9)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":44:1)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":49:1)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":45:1)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":47:12)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":47:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":48:12)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":48:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":51:1)
#loc83 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":59:1)
#loc84 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":53:5)
#loc85 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":53:9)
#loc86 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":55:13)
#loc87 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":55:12)
#loc88 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":55:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":56:26)
#loc90 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":56:12)
#loc91 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":56:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":56:30)
#loc93 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":58:18)
#loc94 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":58:24)
#loc95 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_42.c":58:5)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc6, #loc7])
#loc100 = loc(fused[#loc14, #loc13])
#loc101 = loc(fused[#loc15, #loc16])
#loc102 = loc(fused[#loc17, #loc18])
#loc103 = loc(fused[#loc19, #loc20])
#loc104 = loc(fused[#loc23, #loc21])
#loc105 = loc(fused[#loc26, #loc27])
#loc106 = loc(fused[#loc28, #loc29])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc35, #loc36])
#loc110 = loc(fused[#loc37, #loc38])
#loc112 = loc(fused[#loc46, #loc45])
#loc113 = loc(fused[#loc47, #loc48])
#loc114 = loc(fused[#loc50, #loc51])
#loc115 = loc(fused[#loc52, #loc53])
#loc116 = loc(fused[#loc56, #loc54])
#loc117 = loc(fused[#loc59, #loc60])
#loc118 = loc(fused[#loc61, #loc62])
#loc119 = loc(fused[#loc63, #loc64])
#loc120 = loc(fused[#loc66, #loc67, #loc68, #loc62])
#loc121 = loc(fused[#loc69, #loc70])
#loc122 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc79, #loc78])
#loc125 = loc(fused[#loc81, #loc80])
#loc126 = loc(fused[#loc82, #loc83])
#loc127 = loc(fused[#loc84, #loc85])
#loc128 = loc(fused[#loc88, #loc86])
#loc129 = loc(fused[#loc91, #loc92])
#loc130 = loc(fused[#loc93, #loc94])
